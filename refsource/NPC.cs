using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
using System;
using System.Collections.Generic;
using Terraria.DataStructures;
using Terraria.GameContent;
using Terraria.GameContent.Achievements;
using Terraria.GameContent.Events;
using Terraria.GameContent.Tile_Entities;
using Terraria.GameContent.UI;
using Terraria.ID;
using Terraria.ModLoader;

namespace Terraria
{
	public class NPC : Entity
	{
		public ModNPC modNPC
		{
			get;
			internal set;
		}

		internal NPCInfo[] npcInfo = new NPCInfo[0];

		public NPCInfo GetModInfo(Mod mod, string name)
		{
			return NPCLoader.GetNPCInfo(this, mod, name);
		}

		public T GetModInfo<T>(Mod mod) where T : NPCInfo
		{
			return (T)GetModInfo(mod, typeof(T).Name);
		}

		public const int MaxMoonLordCountdown = 3600;
		public const float nameOverIncrement = 0.025f;
		public const float nameOverDistance = 400f;
		public const int maxBuffs = 5;
		public const int breathMax = 200;
		public static readonly int[,,,] MoonLordAttacksArray = NPC.InitializeMoonLordAttacks();
		public static readonly int[,] MoonLordAttacksArray2 = NPC.InitializeMoonLordAttacks2();
		public static int MoonLordCountdown = 0;
		public int teleportStyle;
		public float teleportTime;
		public static int immuneTime = 20;
		public static int maxAI = 4;
		public int netSpam;
		public static int goldCritterChance = 150;
		public static int[] killCount = new int[547];
		public static float waveKills = 0f;
		public static int waveCount = 0;
		public float nameOver;
		public bool SpawnedFromStatue;
		public bool dripping;
		public bool drippingSlime;
		public int altTexture;
		public Vector2 visualOffset = Vector2.Zero;
		public short catchItem;
		public short releaseOwner = 255;
		public int rarity;
		public static bool taxCollector = false;
		public bool[] playerInteraction = new bool[256];
		public int lastInteraction = 255;
		public float takenDamageMultiplier = 1f;
		private static int spawnSpaceX = 3;
		private static int spawnSpaceY = 3;
		public float gfxOffY;
		public float stepSpeed;
		private static float gravity = 0.3f;
		public bool teleporting;
		private static int maxAttack = 20;
		private static int[] attackNPC = new int[NPC.maxAttack];
		public bool stairFall;
		public static int fireFlyFriendly = 0;
		public static int fireFlyChance = 0;
		public static int fireFlyMultiple = 0;
		public static int butterflyChance = 0;
		private byte netStream;
		private byte[] streamPlayer = new byte[255];
		private byte npcNameLookup;
		public Vector2[] oldPos = new Vector2[10];
		public float[] oldRot = new float[10];
		public bool setFrameSize;
		public static int golemBoss = -1;
		public static int plantBoss = -1;
		public static int crimsonBoss = -1;
		public int netSkip;
		public bool netAlways;
		public int realLife = -1;
		public static int sWidth = 1920;
		public static int sHeight = 1080;
		private static int spawnRangeX = (int)((double)(NPC.sWidth / 16) * 0.7);
		private static int spawnRangeY = (int)((double)(NPC.sHeight / 16) * 0.7);
		public static int safeRangeX = (int)((double)(NPC.sWidth / 16) * 0.52);
		public static int safeRangeY = (int)((double)(NPC.sHeight / 16) * 0.52);
		private static int activeRangeX = (int)((double)NPC.sWidth * 2.1);
		private static int activeRangeY = (int)((double)NPC.sHeight * 2.1);
		private static int townRangeX = NPC.sWidth;
		private static int townRangeY = NPC.sHeight;
		public float npcSlots = 1f;
		private static bool noSpawnCycle = false;
		public static int activeTime = 750;
		private static int defaultSpawnRate = 600;
		private static int defaultMaxSpawns = 5;
		public bool dontCountMe;
		public int[] buffType = new int[5];
		public int[] buffTime = new int[5];
		public bool[] buffImmune = new bool[BuffLoader.BuffCount];
		public bool midas;
		public bool ichor;
		public bool onFire;
		public bool onFire2;
		public bool onFrostBurn;
		public bool poisoned;
		public bool venom;
		public bool shadowFlame;
		public bool soulDrain;
		public int lifeRegen;
		public int lifeRegenCount;
		public bool confused;
		public bool loveStruck;
		public bool stinky;
		public bool dryadWard;
		public bool immortal;
		public bool chaseable = true;
		public bool canGhostHeal = true;
		public bool javelined;
		public bool celled;
		public bool dryadBane;
		public bool daybreak;
		public static bool savedTaxCollector = false;
		public static bool savedGoblin = false;
		public static bool savedWizard = false;
		public static bool savedMech = false;
		public static bool savedAngler = false;
		public static bool savedStylist = false;
		public static bool downedBoss1 = false;
		public static bool downedBoss2 = false;
		public static bool downedBoss3 = false;
		public static bool downedQueenBee = false;
		public static bool downedSlimeKing = false;
		public static bool downedGoblins = false;
		public static bool downedFrost = false;
		public static bool downedPirates = false;
		public static bool downedClown = false;
		public static bool downedPlantBoss = false;
		public static bool downedGolemBoss = false;
		public static bool downedMartians = false;
		public static bool downedFishron = false;
		public static bool downedHalloweenTree = false;
		public static bool downedHalloweenKing = false;
		public static bool downedChristmasIceQueen = false;
		public static bool downedChristmasTree = false;
		public static bool downedChristmasSantank = false;
		public static bool downedAncientCultist = false;
		public static bool downedMoonlord = false;
		public static bool downedTowerSolar = false;
		public static bool downedTowerVortex = false;
		public static bool downedTowerNebula = false;
		public static bool downedTowerStardust = false;
		public static int ShieldStrengthTowerSolar = 0;
		public static int ShieldStrengthTowerVortex = 0;
		public static int ShieldStrengthTowerNebula = 0;
		public static int ShieldStrengthTowerStardust = 0;
		public static int LunarShieldPowerNormal = 100;
		public static int LunarShieldPowerExpert = 150;
		public static bool TowerActiveSolar = false;
		public static bool TowerActiveVortex = false;
		public static bool TowerActiveNebula = false;
		public static bool TowerActiveStardust = false;
		public static bool LunarApocalypseIsUp = false;
		public static bool downedMechBossAny = false;
		public static bool downedMechBoss1 = false;
		public static bool downedMechBoss2 = false;
		public static bool downedMechBoss3 = false;
		public static bool[] npcsFoundForCheckActive = new bool[547];
		private static int spawnRate = NPC.defaultSpawnRate;
		private static int maxSpawns = NPC.defaultMaxSpawns;
		public int soundDelay;
		public int[] immune = new int[256];
		public int directionY = 1;
		public int type;
		public float[] ai = new float[NPC.maxAI];
		public float[] localAI = new float[NPC.maxAI];
		public int aiAction;
		public int aiStyle;
		public bool justHit;
		public int timeLeft;
		public int target = -1;
		public int damage;
		public int defense;
		public int defDamage;
		public int defDefense;
		public bool coldDamage;
		public bool trapImmune;
		public int soundHit;
		public int soundKilled;
		public int life;
		public int lifeMax;
		public Rectangle targetRect;
		public double frameCounter;
		public Rectangle frame;
		public string displayName;
		public Color color;
		public int alpha;
		public bool hide;
		public float scale = 1f;
		public float knockBackResist = 1f;
		public new int oldDirection;
		public int oldDirectionY;
		public int oldTarget;
		public float rotation;
		public bool noGravity;
		public bool noTileCollide;
		public bool netUpdate;
		public bool netUpdate2;
		public bool collideX;
		public bool collideY;
		public bool boss;
		public int spriteDirection = -1;
		public bool behindTiles;
		public bool lavaImmune;
		public float value;
		public float extraValue;
		public bool dontTakeDamage;
		public int netID;
		public bool townNPC;
		public static bool travelNPC = false;
		public bool homeless;
		public int homeTileX = -1;
		public int homeTileY = -1;
		public bool oldHomeless;
		public int oldHomeTileX = -1;
		public int oldHomeTileY = -1;
		public bool friendly;
		public bool closeDoor;
		public int doorX;
		public int doorY;
		public int friendlyRegen;
		public int breath;
		public int breathCounter;
		public bool reflectingProjectiles;
		public int lastPortalColorIndex;
		public static int[,] cavernMonsterType = new int[2, 3];
		private static int ignorePlayerInteractions = 0;

		public static bool downedTowers
		{
			get
			{
				return NPC.downedTowerSolar && NPC.downedTowerVortex && NPC.downedTowerNebula && NPC.downedTowerStardust;
			}
		}

		public static int ShieldStrengthTowerMax
		{
			get
			{
				if (!Main.expertMode)
				{
					return NPC.LunarShieldPowerNormal;
				}
				return NPC.LunarShieldPowerExpert;
			}
		}

		public static bool TowersDefeated
		{
			get
			{
				return NPC.TowerActiveSolar && NPC.TowerActiveVortex && NPC.TowerActiveNebula && NPC.TowerActiveStardust;
			}
		}

		public float Opacity
		{
			get
			{
				return 1f - (float)this.alpha / 255f;
			}
			set
			{
				this.alpha = (int)MathHelper.Clamp((1f - value) * 255f, 0f, 255f);
			}
		}

		public bool CanTalk
		{
			get
			{
				return (this.townNPC || this.type == 453) && this.aiStyle == 7 && this.velocity.Y == 0f;
			}
		}

		public bool HasValidTarget
		{
			get
			{
				return this.target >= 0 && this.target < 255 && Main.player[this.target].active && !Main.player[this.target].dead;
			}
		}

		public static int[,,,] InitializeMoonLordAttacks()
		{
			int[,,,] array;
			if (NPC.MoonLordAttacksArray != null)
			{
				array = NPC.MoonLordAttacksArray;
				for (int i = 0; i < array.GetLength(0); i++)
				{
					for (int j = 0; j < array.GetLength(1); j++)
					{
						for (int k = 0; k < array.GetLength(2); k++)
						{
							for (int l = 0; l < array.GetLength(3); l++)
							{
								array[i, j, k, l] = 0;
							}
						}
					}
				}
			}
			else
			{
				array = new int[3, 3, 2, 5];
			}
			array[0, 0, 0, 0] = 0;
			array[0, 0, 1, 0] = 60;
			array[0, 0, 0, 1] = 1;
			array[0, 0, 1, 1] = 70;
			array[0, 0, 0, 2] = 2;
			array[0, 0, 1, 2] = 330;
			array[0, 0, 0, 3] = 0;
			array[0, 0, 1, 3] = 60;
			array[0, 0, 0, 4] = 3;
			array[0, 0, 1, 4] = 90;
			array[0, 1, 0, 0] = 1;
			array[0, 1, 1, 0] = 70;
			array[0, 1, 0, 1] = 0;
			array[0, 1, 1, 1] = 120;
			array[0, 1, 0, 2] = 3;
			array[0, 1, 1, 2] = 90;
			array[0, 1, 0, 3] = 0;
			array[0, 1, 1, 3] = 120;
			array[0, 1, 0, 4] = 2;
			array[0, 1, 1, 4] = 390;
			array[0, 2, 0, 0] = 3;
			array[0, 2, 1, 0] = 90;
			array[0, 2, 0, 1] = 0;
			array[0, 2, 1, 1] = 120;
			array[0, 2, 0, 2] = 2;
			array[0, 2, 1, 2] = 435;
			array[0, 2, 0, 3] = 0;
			array[0, 2, 1, 3] = 120;
			array[0, 2, 0, 4] = 1;
			array[0, 2, 1, 4] = 375;
			array[1, 0, 0, 0] = 0;
			array[1, 0, 1, 0] = 0;
			array[1, 0, 0, 1] = 0;
			array[1, 0, 1, 1] = 0;
			array[1, 0, 0, 2] = 0;
			array[1, 0, 1, 2] = 0;
			array[1, 0, 0, 3] = 0;
			array[1, 0, 1, 3] = 0;
			array[1, 0, 0, 4] = 0;
			array[1, 0, 1, 4] = 0;
			array[1, 1, 0, 0] = 0;
			array[1, 1, 1, 0] = 0;
			array[1, 1, 0, 1] = 0;
			array[1, 1, 1, 1] = 0;
			array[1, 1, 0, 2] = 0;
			array[1, 1, 1, 2] = 0;
			array[1, 1, 0, 3] = 0;
			array[1, 1, 1, 3] = 0;
			array[1, 1, 0, 4] = 0;
			array[1, 1, 1, 4] = 0;
			array[1, 2, 0, 0] = 0;
			array[1, 2, 1, 0] = 0;
			array[1, 2, 0, 1] = 0;
			array[1, 2, 1, 1] = 0;
			array[1, 2, 0, 2] = 0;
			array[1, 2, 1, 2] = 0;
			array[1, 2, 0, 3] = 0;
			array[1, 2, 1, 3] = 0;
			array[1, 2, 0, 4] = 0;
			array[1, 2, 1, 4] = 0;
			array[2, 0, 0, 0] = 0;
			array[2, 0, 1, 0] = 0;
			array[2, 0, 0, 1] = 0;
			array[2, 0, 1, 1] = 0;
			array[2, 0, 0, 2] = 0;
			array[2, 0, 1, 2] = 0;
			array[2, 0, 0, 3] = 0;
			array[2, 0, 1, 3] = 0;
			array[2, 0, 0, 4] = 0;
			array[2, 0, 1, 4] = 0;
			array[2, 1, 0, 0] = 0;
			array[2, 1, 1, 0] = 0;
			array[2, 1, 0, 1] = 0;
			array[2, 1, 1, 1] = 0;
			array[2, 1, 0, 2] = 0;
			array[2, 1, 1, 2] = 0;
			array[2, 1, 0, 3] = 0;
			array[2, 1, 1, 3] = 0;
			array[2, 1, 0, 4] = 0;
			array[2, 1, 1, 4] = 0;
			array[2, 2, 0, 0] = 0;
			array[2, 2, 1, 0] = 0;
			array[2, 2, 0, 1] = 0;
			array[2, 2, 1, 1] = 0;
			array[2, 2, 0, 2] = 0;
			array[2, 2, 1, 2] = 0;
			array[2, 2, 0, 3] = 0;
			array[2, 2, 1, 3] = 0;
			array[2, 2, 0, 4] = 0;
			array[2, 2, 1, 4] = 0;
			NPC.InitializeMoonLordAttacks2();
			return array;
		}

		public static int[,] InitializeMoonLordAttacks2()
		{
			int[,] array;
			if (NPC.MoonLordAttacksArray2 != null)
			{
				array = NPC.MoonLordAttacksArray2;
				for (int i = 0; i < array.GetLength(0); i++)
				{
					for (int j = 0; j < array.GetLength(1); j++)
					{
						array[i, j] = 0;
					}
				}
			}
			else
			{
				array = new int[2, 10];
			}
			array[0, 0] = 0;
			array[1, 0] = 90;
			array[0, 1] = 1;
			array[1, 1] = 90;
			array[0, 2] = 0;
			array[1, 2] = 90;
			array[0, 3] = 2;
			array[1, 3] = 135;
			array[0, 4] = 0;
			array[1, 4] = 90;
			array[0, 5] = 3;
			array[1, 5] = 200;
			array[0, 6] = 0;
			array[1, 6] = 90;
			array[0, 7] = 4;
			array[1, 7] = 375;
			array[0, 8] = 0;
			array[1, 8] = 90;
			array[0, 9] = 2;
			array[1, 9] = 135;
			return array;
		}

		public static void ClearFoundActiveNPCs()
		{
			for (int i = 0; i < NPC.npcsFoundForCheckActive.Length; i++)
			{
				NPC.npcsFoundForCheckActive[i] = false;
			}
		}

		public static void UpdateFoundActiveNPCs()
		{
			for (int i = 0; i < 200; i++)
			{
				NPC nPC = Main.npc[i];
				if (nPC.active && nPC.type >= 0 && nPC.type < NPCLoader.NPCCount)
				{
					NPC.npcsFoundForCheckActive[nPC.type] = true;
				}
			}
		}

		public static string getNewNPCName(int npcType)
		{
			if (WorldGen.genRand == null)
			{
				WorldGen.genRand = new Random();
			}
			if (npcType <= 160)
			{
				if (npcType <= 54)
				{
					switch (npcType)
					{
						case 17:
							switch (WorldGen.genRand.Next(23))
							{
								case 0:
									return "Alfred";
								case 1:
									return "Barney";
								case 2:
									return "Calvin";
								case 3:
									return "Edmund";
								case 4:
									return "Edwin";
								case 5:
									return "Eugene";
								case 6:
									return "Frank";
								case 7:
									return "Frederick";
								case 8:
									return "Gilbert";
								case 9:
									return "Gus";
								case 10:
									return "Wilbur";
								case 11:
									return "Seymour";
								case 12:
									return "Louis";
								case 13:
									return "Humphrey";
								case 14:
									return "Harold";
								case 15:
									return "Milton";
								case 16:
									return "Mortimer";
								case 17:
									return "Howard";
								case 18:
									return "Walter";
								case 19:
									return "Finn";
								case 20:
									return "Isaac";
								case 21:
									return "Joseph";
								default:
									return "Ralph";
							}
							break;
						case 18:
							switch (WorldGen.genRand.Next(24))
							{
								case 0:
									return "Molly";
								case 1:
									return "Amy";
								case 2:
									return "Claire";
								case 3:
									return "Emily";
								case 4:
									return "Katie";
								case 5:
									return "Madeline";
								case 6:
									return "Katelyn";
								case 7:
									return "Emma";
								case 8:
									return "Abigail";
								case 9:
									return "Carly";
								case 10:
									return "Jenna";
								case 11:
									return "Heather";
								case 12:
									return "Katherine";
								case 13:
									return "Caitlin";
								case 14:
									return "Kaitlin";
								case 15:
									return "Holly";
								case 16:
									return "Kaitlyn";
								case 17:
									return "Hannah";
								case 18:
									return "Kathryn";
								case 19:
									return "Lorraine";
								case 20:
									return "Helen";
								case 21:
									return "Kayla";
								case 22:
									return "Lisa";
								default:
									return "Allison";
							}
							break;
						case 19:
							switch (WorldGen.genRand.Next(24))
							{
								case 0:
									return "DeShawn";
								case 1:
									return "DeAndre";
								case 2:
									return "Marquis";
								case 3:
									return "Darnell";
								case 4:
									return "Terrell";
								case 5:
									return "Malik";
								case 6:
									return "Trevon";
								case 7:
									return "Tyrone";
								case 8:
									return "Willie";
								case 9:
									return "Dominique";
								case 10:
									return "Demetrius";
								case 11:
									return "Reginald";
								case 12:
									return "Jamal";
								case 13:
									return "Maurice";
								case 14:
									return "Jalen";
								case 15:
									return "Darius";
								case 16:
									return "Xavier";
								case 17:
									return "Terrance";
								case 18:
									return "Andre";
								case 19:
									return "Dante";
								case 20:
									return "Brimst";
								case 21:
									return "Bronson";
								case 22:
									return "Tony";
								default:
									return "Darryl";
							}
							break;
						case 20:
							switch (WorldGen.genRand.Next(22))
							{
								case 0:
									return "Alalia";
								case 1:
									return "Alalia";
								case 2:
									return "Alura";
								case 3:
									return "Ariella";
								case 4:
									return "Caelia";
								case 5:
									return "Calista";
								case 6:
									return "Chryseis";
								case 7:
									return "Emerenta";
								case 8:
									return "Elysia";
								case 9:
									return "Evvie";
								case 10:
									return "Faye";
								case 11:
									return "Felicitae";
								case 12:
									return "Lunette";
								case 13:
									return "Nata";
								case 14:
									return "Nissa";
								case 15:
									return "Tatiana";
								case 16:
									return "Rosalva";
								case 17:
									return "Shea";
								case 18:
									return "Tania";
								case 19:
									return "Isis";
								case 20:
									return "Celestia";
								default:
									return "Xylia";
							}
							break;
						case 21:
							break;
						case 22:
							switch (WorldGen.genRand.Next(35))
							{
								case 0:
									return "Joe";
								case 1:
									return "Connor";
								case 2:
									return "Tanner";
								case 3:
									return "Wyatt";
								case 4:
									return "Cody";
								case 5:
									return "Levi";
								case 6:
									return "Luke";
								case 7:
									return "Jack";
								case 8:
									return "Scott";
								case 9:
									return "Logan";
								case 10:
									return "Cole";
								case 11:
									return "Asher";
								case 12:
									return "Bradley";
								case 13:
									return "Jacob";
								case 14:
									return "Garrett";
								case 15:
									return "Dylan";
								case 16:
									return "Maxwell";
								case 17:
									return "Steve";
								case 18:
									return "Brett";
								case 19:
									return "Andrew";
								case 20:
									return "Harley";
								case 21:
									return "Kyle";
								case 22:
									return "Jake";
								case 23:
									return "Ryan";
								case 24:
									return "Jeffrey";
								case 25:
									return "Seth";
								case 26:
									return "Marty";
								case 27:
									return "Brandon";
								case 28:
									return "Zach";
								case 29:
									return "Jeff";
								case 30:
									return "Daniel";
								case 31:
									return "Trent";
								case 32:
									return "Kevin";
								case 33:
									return "Brian";
								default:
									return "Colin";
							}
							break;
						default:
							if (npcType != 38)
							{
								if (npcType == 54)
								{
									switch (WorldGen.genRand.Next(25))
									{
										case 0:
											return "Sebastian";
										case 1:
											return "Rupert";
										case 2:
											return "Clive";
										case 3:
											return "Nigel";
										case 4:
											return "Mervyn";
										case 5:
											return "Cedric";
										case 6:
											return "Pip";
										case 7:
											return "Cyril";
										case 8:
											return "Fitz";
										case 9:
											return "Lloyd";
										case 10:
											return "Arthur";
										case 11:
											return "Rodney";
										case 12:
											return "Graham";
										case 13:
											return "Edward";
										case 14:
											return "Alfred";
										case 15:
											return "Edmund";
										case 16:
											return "Henry";
										case 17:
											return "Herald";
										case 18:
											return "Roland";
										case 19:
											return "Lincoln";
										case 20:
											return "Lloyd";
										case 21:
											return "Edgar";
										case 22:
											return "Eustace";
										case 23:
											return "Benjamin";
										default:
											return "Rodrick";
									}
								}
							}
							else
							{
								switch (WorldGen.genRand.Next(22))
								{
									case 0:
										return "Dolbere";
									case 1:
										return "Bazdin";
									case 2:
										return "Durim";
									case 3:
										return "Tordak";
									case 4:
										return "Garval";
									case 5:
										return "Morthal";
									case 6:
										return "Oten";
									case 7:
										return "Dolgen";
									case 8:
										return "Gimli";
									case 9:
										return "Gimut";
									case 10:
										return "Duerthen";
									case 11:
										return "Beldin";
									case 12:
										return "Jarut";
									case 13:
										return "Ovbere";
									case 14:
										return "Norkas";
									case 15:
										return "Dolgrim";
									case 16:
										return "Boften";
									case 17:
										return "Norsun";
									case 18:
										return "Dias";
									case 19:
										return "Fikod";
									case 20:
										return "Urist";
									default:
										return "Darur";
								}
							}
							break;
					}
				}
				else
				{
					switch (npcType)
					{
						case 107:
							switch (WorldGen.genRand.Next(25))
							{
								case 0:
									return "Grodax";
								case 1:
									return "Sarx";
								case 2:
									return "Xon";
								case 3:
									return "Mrunok";
								case 4:
									return "Nuxatk";
								case 5:
									return "Tgerd";
								case 6:
									return "Darz";
								case 7:
									return "Smador";
								case 8:
									return "Stazen";
								case 9:
									return "Mobart";
								case 10:
									return "Knogs";
								case 11:
									return "Tkanus";
								case 12:
									return "Negurk";
								case 13:
									return "Nort";
								case 14:
									return "Durnok";
								case 15:
									return "Trogem";
								case 16:
									return "Stezom";
								case 17:
									return "Gnudar";
								case 18:
									return "Ragz";
								case 19:
									return "Fahd";
								case 20:
									return "Xanos";
								case 21:
									return "Arback";
								case 22:
									return "Fjell";
								case 23:
									return "Dalek";
								default:
									return "Knub";
							}
							break;
						case 108:
							switch (WorldGen.genRand.Next(22))
							{
								case 0:
									return "Dalamar";
								case 1:
									return "Dulais";
								case 2:
									return "Elric";
								case 3:
									return "Arddun";
								case 4:
									return "Maelor";
								case 5:
									return "Leomund";
								case 6:
									return "Hirael";
								case 7:
									return "Gwentor";
								case 8:
									return "Greum";
								case 9:
									return "Gearroid";
								case 10:
									return "Fizban";
								case 11:
									return "Ningauble";
								case 12:
									return "Seonag";
								case 13:
									return "Sargon";
								case 14:
									return "Merlyn";
								case 15:
									return "Magius";
								case 16:
									return "Berwyn";
								case 17:
									return "Arwyn";
								case 18:
									return "Alasdair";
								case 19:
									return "Tagar";
								case 20:
									return "Abram";
								default:
									return "Xanadu";
							}
							break;
						default:
							if (npcType != 124)
							{
								if (npcType == 160)
								{
									switch (WorldGen.genRand.Next(12))
									{
										case 0:
											return "Reishi";
										case 1:
											return "Maitake";
										case 2:
											return "Chanterelle";
										case 3:
											return "Porcini";
										case 4:
											return "Shimeji";
										case 5:
											return "Amanita";
										case 6:
											return "Muscaria";
										case 7:
											return "Agaric";
										case 8:
											return "Cremini";
										case 9:
											return "Morel";
										case 10:
											return "Enoki";
										default:
											return "Shiitake";
									}
								}
							}
							else
							{
								switch (WorldGen.genRand.Next(24))
								{
									case 0:
										return "Shayna";
									case 1:
										return "Korrie";
									case 2:
										return "Ginger";
									case 3:
										return "Brooke";
									case 4:
										return "Jenny";
									case 5:
										return "Autumn";
									case 6:
										return "Nancy";
									case 7:
										return "Ella";
									case 8:
										return "Kayla";
									case 9:
										return "Selah";
									case 10:
										return "Sophia";
									case 11:
										return "Marshanna";
									case 12:
										return "Lauren";
									case 13:
										return "Trisha";
									case 14:
										return "Shirlena";
									case 15:
										return "Sheena";
									case 16:
										return "Ellen";
									case 17:
										return "Amy";
									case 18:
										return "Dawn";
									case 19:
										return "Susana";
									case 20:
										return "Meredith";
									case 21:
										return "Selene";
									case 22:
										return "Terra";
									default:
										return "Sally";
								}
							}
							break;
					}
				}
			}
			else if (npcType <= 229)
			{
				if (npcType != 178)
				{
					switch (npcType)
					{
						case 207:
							switch (WorldGen.genRand.Next(16))
							{
								case 0:
									return "Abdosir";
								case 1:
									return "Akbar";
								case 2:
									return "Bodashtart";
								case 3:
									return "Danel";
								case 4:
									return "Hanno";
								case 5:
									return "Hiram";
								case 6:
									return "Kanmi";
								case 7:
									return "Philosir";
								case 8:
									return "Tabnit";
								case 9:
									return "Yutpan";
								case 10:
									return "Ahirom";
								case 11:
									return "Batnoam";
								case 12:
									return "Sikarbaal";
								case 13:
									return "Hannibal";
								case 14:
									return "Yehomilk";
								default:
									return "Ahinadab";
							}
							break;
						case 208:
							switch (WorldGen.genRand.Next(17))
							{
								case 0:
									return "Candy";
								case 1:
									return "Isis";
								case 2:
									return "Trixy";
								case 3:
									return "Destiny";
								case 4:
									return "Lexus";
								case 5:
									return "Bambi";
								case 6:
									return "Bailey";
								case 7:
									return "Glitter";
								case 8:
									return "Sparkle";
								case 9:
									return "Paris";
								case 10:
									return "Dazzle";
								case 11:
									return "Fantasy";
								case 12:
									return "Bunny";
								case 13:
									return "Sugar";
								case 14:
									return "Fantasia";
								case 15:
									return "Star";
								default:
									return "Cherry";
							}
							break;
						case 209:
							switch (WorldGen.genRand.Next(23))
							{
								case 0:
									return "Alpha";
								case 1:
									return "Beta";
								case 2:
									return "Delta";
								case 3:
									return "Omega";
								case 4:
									return "Gamma";
								case 5:
									return "Theta";
								case 6:
									return "Kappa";
								case 7:
									return "Omicron";
								case 8:
									return "Sigma";
								case 9:
									return "Upsilon";
								case 10:
									return "Phi";
								case 11:
									return "Zeta";
								case 12:
									return "Lambda";
								case 13:
									return "Nu";
								case 14:
									return "Ci";
								case 15:
									return "Rho";
								case 16:
									return "Phi";
								case 17:
									return "Fender";
								case 18:
									return "T-3E0";
								case 19:
									return "Niner-7";
								case 20:
									return "A.N.D.Y";
								case 21:
									return "Syn-X";
								default:
									return "Mu";
							}
							break;
						default:
							switch (npcType)
							{
								case 227:
									switch (WorldGen.genRand.Next(18))
									{
										case 0:
											return "Marco";
										case 1:
											return "Guido";
										case 2:
											return "Enzo";
										case 3:
											return "Martino";
										case 4:
											return "Mauro";
										case 5:
											return "Lorenzo";
										case 6:
											return "Ludo";
										case 7:
											return "Luciano";
										case 8:
											return "Carlo";
										case 9:
											return "Bruno";
										case 10:
											return "Mario";
										case 11:
											return "Leonardo";
										case 12:
											return "Raphael";
										case 13:
											return "Luigi";
										case 14:
											return "Luca";
										case 15:
											return "Darren";
										case 16:
											return "Esreadel";
										default:
											return "Stefano";
									}
									break;
								case 228:
									switch (WorldGen.genRand.Next(10))
									{
										case 0:
											return "Abibe";
										case 1:
											return "Jamundi";
										case 2:
											return "U'wa";
										case 3:
											return "Tairona";
										case 4:
											return "Xirigua";
										case 5:
											return "Zop'a";
										case 6:
											return "Opuni";
										case 7:
											return "Kogi-ghi";
										case 8:
											return "Konah";
										default:
											return "Gboto";
									}
									break;
								case 229:
									switch (WorldGen.genRand.Next(11))
									{
										case 0:
											return "David";
										case 1:
											return "Red Beard";
										case 2:
											return "Jack";
										case 3:
											return "Black Beard";
										case 4:
											return "Captain Morgan";
										case 5:
											return "Wet Beard";
										case 6:
											return "James T. Beard";
										case 7:
											return "Gunpowder Garry";
										case 8:
											return "Captain Stoney Dirt";
										case 9:
											return "Jake";
										default:
											return "Captain Bullywort";
									}
									break;
							}
							break;
					}
				}
				else
				{
					switch (WorldGen.genRand.Next(20))
					{
						case 0:
							return "Whitney";
						case 1:
							return "Verity";
						case 2:
							return "Ada";
						case 3:
							return "Cornelia";
						case 4:
							return "Lydia";
						case 5:
							return "Leila";
						case 6:
							return "Minerva";
						case 7:
							return "Emeline";
						case 8:
							return "Cynthia";
						case 9:
							return "Fidelia";
						case 10:
							return "Lilly";
						case 11:
							return "Phoebe";
						case 12:
							return "Zylphia";
						case 13:
							return "Zelda";
						case 14:
							return "Selina";
						case 15:
							return "Hope";
						case 16:
							return "Isabella";
						case 17:
							return "Judith";
						case 18:
							return "Savannah";
						default:
							return "Vivian";
					}
				}
			}
			else if (npcType <= 369)
			{
				if (npcType != 353)
				{
					switch (npcType)
					{
						case 368:
							switch (WorldGen.genRand.Next(13))
							{
								case 0:
									return "Abraham";
								case 1:
									return "Bohemas";
								case 2:
									return "Eladon";
								case 3:
									return "Aphraim";
								case 4:
									return "Gallius";
								case 5:
									return "Llewellyn";
								case 6:
									return "Riley";
								case 7:
									return "Rawleigh";
								case 8:
									return "Shipton";
								case 9:
									return "Romeo";
								case 10:
									return "Aedan";
								case 11:
									return "Mercer";
								default:
									return "Willy";
							}
							break;
						case 369:
							switch (WorldGen.genRand.Next(22))
							{
								case 0:
									return "Bobby";
								case 1:
									return "Sammy";
								case 2:
									return "Jimmy";
								case 3:
									return "Danny";
								case 4:
									return "Timmy";
								case 5:
									return "Simon";
								case 6:
									return "Johnny";
								case 7:
									return "Billy";
								case 8:
									return "Matty";
								case 9:
									return "Bart";
								case 10:
									return "Phillip";
								case 11:
									return "Spencer";
								case 12:
									return "Nathan";
								case 13:
									return "Grayson";
								case 14:
									return "Bryce";
								case 15:
									return "Miles";
								case 16:
									return "Charles";
								case 17:
									return "Adam";
								case 18:
									return "Tyler";
								case 19:
									return "Jey";
								case 20:
									return "Ivan";
								default:
									return "Izzy";
							}
							break;
					}
				}
				else
				{
					switch (WorldGen.genRand.Next(20))
					{
						case 0:
							return "Bri";
						case 1:
							return "Brianne";
						case 2:
							return "Flora";
						case 3:
							return "Iris";
						case 4:
							return "Scarlett";
						case 5:
							return "Lola";
						case 6:
							return "Hazel";
						case 7:
							return "Stella";
						case 8:
							return "Pearl";
						case 9:
							return "Tallulah";
						case 10:
							return "Ruby";
						case 11:
							return "Esmeralda";
						case 12:
							return "Kylie";
						case 13:
							return "Kati";
						case 14:
							return "Biah";
						case 15:
							return "Meliyah";
						case 16:
							return "Petra";
						case 17:
							return "Rox";
						case 18:
							return "Roxanne";
						default:
							return "Annabel";
					}
				}
			}
			else if (npcType != 441)
			{
				if (npcType == 453)
				{
					switch (WorldGen.genRand.Next(10))
					{
						case 0:
							return "Skellington";
						case 1:
							return "Bones McGee";
						case 2:
							return "Gloomy Mays";
						case 3:
							return "Jack Sellington";
						case 4:
							return "Billy Marrows";
						case 5:
							return "Tom";
						case 6:
							return "Rattles Magoo";
						case 7:
							return "Mandible Calavera";
						case 8:
							return "Mika";
						default:
							return "No-Eyed Wiley";
					}
				}
			}
			else
			{
				switch (WorldGen.genRand.Next(20))
				{
					case 0:
						return "McKinly";
					case 1:
						return "Millard";
					case 2:
						return "Fillmore";
					case 3:
						return "Rutherford";
					case 4:
						return "Chester";
					case 5:
						return "Grover";
					case 6:
						return "Cleveland";
					case 7:
						return "Theodore";
					case 8:
						return "Herbert";
					case 9:
						return "Warren";
					case 10:
						return "Lyndon";
					case 11:
						return "Ronald";
					case 12:
						return "Harrison";
					case 13:
						return "Woodrow";
					case 14:
						return "Tweed";
					case 15:
						return "Blanton";
					case 16:
						return "Dwyer";
					case 17:
						return "Carroll";
					default:
						return "Agnew";
				}
			}
			return NPCLoader.TownNPCName(npcType);
		}

		public static void setNPCName(string newName, int npcType, bool resetExtras = false)
		{
			bool flag = false;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == npcType)
				{
					if (flag)
					{
						Main.npc[i].displayName = NPC.getNewNPCName(npcType);
					}
					else
					{
						Main.npc[i].displayName = newName;
						if (!resetExtras)
						{
							return;
						}
						flag = true;
					}
				}
			}
		}

		public static string firstNPCName(int npcType)
		{
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == npcType)
				{
					return Main.npc[i].displayName;
				}
			}
			return NPC.getNewNPCName(npcType);
		}

		public static bool MechSpawn(float x, float y, int type)
		{
			int num = 0;
			int num2 = 0;
			int num3 = 0;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == type)
				{
					num++;
					Vector2 vector = new Vector2(x, y);
					float num4 = Main.npc[i].position.X - vector.X;
					float num5 = Main.npc[i].position.Y - vector.Y;
					float num6 = (float)Math.Sqrt((double)(num4 * num4 + num5 * num5));
					if (num6 < 200f)
					{
						num2++;
					}
					if (num6 < 600f)
					{
						num3++;
					}
				}
			}
			return num2 < 3 && num3 < 6 && num < 10;
		}

		public static int TypeToNum(int type)
		{
			if (type == 17)
			{
				return 2;
			}
			if (type == 18)
			{
				return 3;
			}
			if (type == 19)
			{
				return 6;
			}
			if (type == 20)
			{
				return 5;
			}
			if (type == 22)
			{
				return 1;
			}
			if (type == 38)
			{
				return 4;
			}
			if (type == 54)
			{
				return 7;
			}
			if (type == 107)
			{
				return 9;
			}
			if (type == 108)
			{
				return 10;
			}
			if (type == 124)
			{
				return 8;
			}
			if (type == 142)
			{
				return 11;
			}
			if (type == 160)
			{
				return 12;
			}
			if (type == 178)
			{
				return 13;
			}
			if (type == 207)
			{
				return 14;
			}
			if (type == 208)
			{
				return 15;
			}
			if (type == 209)
			{
				return 16;
			}
			if (type == 227)
			{
				return 17;
			}
			if (type == 228)
			{
				return 18;
			}
			if (type == 229)
			{
				return 19;
			}
			if (type == 353)
			{
				return 20;
			}
			if (type == 368)
			{
				return 21;
			}
			if (type == 369)
			{
				return 22;
			}
			if (type == 441)
			{
				return 23;
			}
			return NPCHeadLoader.GetNPCHeadSlot(type);
		}

		public static int NumToType(int type)
		{
			if (type == 2)
			{
				return 17;
			}
			if (type == 3)
			{
				return 18;
			}
			if (type == 6)
			{
				return 19;
			}
			if (type == 5)
			{
				return 20;
			}
			if (type == 1)
			{
				return 22;
			}
			if (type == 4)
			{
				return 38;
			}
			if (type == 7)
			{
				return 54;
			}
			if (type == 9)
			{
				return 107;
			}
			if (type == 10)
			{
				return 108;
			}
			if (type == 8)
			{
				return 124;
			}
			if (type == 11)
			{
				return 142;
			}
			if (type == 12)
			{
				return 160;
			}
			if (type == 13)
			{
				return 178;
			}
			if (type == 14)
			{
				return 207;
			}
			if (type == 15)
			{
				return 208;
			}
			if (type == 16)
			{
				return 209;
			}
			if (type == 17)
			{
				return 227;
			}
			if (type == 18)
			{
				return 228;
			}
			if (type == 19)
			{
				return 229;
			}
			if (type == 20)
			{
				return 353;
			}
			if (type == 21)
			{
				return 368;
			}
			if (type == 22)
			{
				return 369;
			}
			if (type == 23)
			{
				return 441;
			}
			return NPCHeadLoader.GetNPCFromHeadSlot(type);
		}

		public int GetBossHeadTextureIndex()
		{
			int result = NPCID.Sets.BossHeadTextures[this.type];
			int num = this.type;
			if (num <= 126)
			{
				if (num != 4)
				{
					switch (num)
					{
						case 125:
							if (this.ai[0] >= 3f)
							{
								result = 20;
							}
							break;
						case 126:
							if (this.ai[0] >= 3f)
							{
								result = 21;
							}
							break;
					}
				}
				else if (this.ai[0] >= 2f)
				{
					result = 1;
				}
			}
			else if (num != 262)
			{
				switch (num)
				{
					case 439:
						if (this.ai[0] == 5f && this.alpha == 255)
						{
							result = -1;
						}
						break;
					case 440:
						if (this.ai[0] != 5f || this.alpha == 255)
						{
							result = -1;
						}
						break;
				}
			}
			else if (this.life <= this.lifeMax / 2)
			{
				result = 12;
			}
			NPCLoader.BossHeadSlot(this, ref result);
			return result;
		}

		public float GetBossHeadRotation()
		{
			float result = 0f;
			int num = this.type;
			if (num <= 68)
			{
				if (num == 35)
				{
					goto IL_3E;
				}
				if (num != 68)
				{
					return result;
				}
			}
			else
			{
				if (num == 127)
				{
					goto IL_3E;
				}
				if (num != 262)
				{
					if (num != 345)
					{
						return result;
					}
					if (this.ai[0] == 2f)
					{
						result = this.rotation;
						return result;
					}
					return result;
				}
			}
			result = this.rotation;
			return result;
			IL_3E:
			if (this.ai[1] == 1f || this.ai[1] == 2f)
			{
				result = this.rotation;
			}
			NPCLoader.BossHeadRotation(this, ref result);
			return result;
		}

		public SpriteEffects GetBossHeadSpriteEffects()
		{
			SpriteEffects result = SpriteEffects.None;
			int num = this.type;
			if (num == 491 && this.spriteDirection == 1)
			{
				result = SpriteEffects.FlipHorizontally;
			}
			NPCLoader.BossHeadSpriteEffects(this, ref result);
			return result;
		}

		public int BannerID()
		{
			if (this.netID >= -10)
			{
				return this.netID;
			}
			return this.type;
		}

		public void netDefaults(int type)
		{
			if (type < 0)
			{
				if (type == -1)
				{
					this.SetDefaults("Slimeling");
					return;
				}
				if (type == -2)
				{
					this.SetDefaults("Slimer2");
					return;
				}
				if (type == -3)
				{
					this.SetDefaults("Green Slime");
					return;
				}
				if (type == -4)
				{
					this.SetDefaults("Pinky");
					return;
				}
				if (type == -5)
				{
					this.SetDefaults("Baby Slime");
					return;
				}
				if (type == -6)
				{
					this.SetDefaults("Black Slime");
					return;
				}
				if (type == -7)
				{
					this.SetDefaults("Purple Slime");
					return;
				}
				if (type == -8)
				{
					this.SetDefaults("Red Slime");
					return;
				}
				if (type == -9)
				{
					this.SetDefaults("Yellow Slime");
					return;
				}
				if (type == -10)
				{
					this.SetDefaults("Jungle Slime");
					return;
				}
				if (type == -11)
				{
					this.SetDefaults("Little Eater");
					return;
				}
				if (type == -12)
				{
					this.SetDefaults("Big Eater");
					return;
				}
				if (type == -13)
				{
					this.SetDefaults("Short Bones");
					return;
				}
				if (type == -14)
				{
					this.SetDefaults("Big Boned");
					return;
				}
				if (type == -15)
				{
					this.SetDefaults("Heavy Skeleton");
					return;
				}
				if (type == -16)
				{
					this.SetDefaults("Little Stinger");
					return;
				}
				if (type == -17)
				{
					this.SetDefaults("Big Stinger");
					return;
				}
				if (type == -18)
				{
					this.SetDefaults("Tiny Moss Hornet");
					return;
				}
				if (type == -19)
				{
					this.SetDefaults("Little Moss Hornet");
					return;
				}
				if (type == -20)
				{
					this.SetDefaults("Big Moss Hornet");
					return;
				}
				if (type == -21)
				{
					this.SetDefaults("Giant Moss Hornet");
					return;
				}
				if (type == -22)
				{
					this.SetDefaults("Little Crimera");
					return;
				}
				if (type == -23)
				{
					this.SetDefaults("Big Crimera");
					return;
				}
				if (type == -24)
				{
					this.SetDefaults("Little Crimslime");
					return;
				}
				if (type == -25)
				{
					this.SetDefaults("Big Crimslime");
					return;
				}
				if (type == -26)
				{
					this.SetDefaults("Small Zombie");
					return;
				}
				if (type == -27)
				{
					this.SetDefaults("Big Zombie");
					return;
				}
				if (type == -28)
				{
					this.SetDefaults("Small Bald Zombie");
					return;
				}
				if (type == -29)
				{
					this.SetDefaults("Big Bald Zombie");
					return;
				}
				if (type == -30)
				{
					this.SetDefaults("Small Pincushion Zombie");
					return;
				}
				if (type == -31)
				{
					this.SetDefaults("Big Pincushion Zombie");
					return;
				}
				if (type == -32)
				{
					this.SetDefaults("Small Slimed Zombie");
					return;
				}
				if (type == -33)
				{
					this.SetDefaults("Big Slimed Zombie");
					return;
				}
				if (type == -34)
				{
					this.SetDefaults("Small Swamp Zombie");
					return;
				}
				if (type == -35)
				{
					this.SetDefaults("Big Swamp Zombie");
					return;
				}
				if (type == -36)
				{
					this.SetDefaults("Small Twiggy Zombie");
					return;
				}
				if (type == -37)
				{
					this.SetDefaults("Big Twiggy Zombie");
					return;
				}
				if (type == -38)
				{
					this.SetDefaults("Cataract Eye 2");
					return;
				}
				if (type == -39)
				{
					this.SetDefaults("Sleepy Eye 2");
					return;
				}
				if (type == -40)
				{
					this.SetDefaults("Dialated Eye 2");
					return;
				}
				if (type == -41)
				{
					this.SetDefaults("Green Eye 2");
					return;
				}
				if (type == -42)
				{
					this.SetDefaults("Purple Eye 2");
					return;
				}
				if (type == -43)
				{
					this.SetDefaults("Demon Eye 2");
					return;
				}
				if (type == -44)
				{
					this.SetDefaults("Small Female Zombie");
					return;
				}
				if (type == -45)
				{
					this.SetDefaults("Big Female Zombie");
					return;
				}
				if (type == -46)
				{
					this.SetDefaults("Small Skeleton");
					return;
				}
				if (type == -47)
				{
					this.SetDefaults("Big Skeleton");
					return;
				}
				if (type == -48)
				{
					this.SetDefaults("Small Headache Skeleton");
					return;
				}
				if (type == -49)
				{
					this.SetDefaults("Big Headache Skeleton");
					return;
				}
				if (type == -50)
				{
					this.SetDefaults("Small Misassembled Skeleton");
					return;
				}
				if (type == -51)
				{
					this.SetDefaults("Big Misassembled Skeleton");
					return;
				}
				if (type == -52)
				{
					this.SetDefaults("Small Pantless Skeleton");
					return;
				}
				if (type == -53)
				{
					this.SetDefaults("Big Pantless Skeleton");
					return;
				}
				if (type == -54)
				{
					this.SetDefaults("Small Rain Zombie");
					return;
				}
				if (type == -55)
				{
					this.SetDefaults("Big Rain Zombie");
					return;
				}
				if (type == -56)
				{
					this.SetDefaults("Little Hornet Fatty");
					return;
				}
				if (type == -57)
				{
					this.SetDefaults("Big Hornet Fatty");
					return;
				}
				if (type == -58)
				{
					this.SetDefaults("Little Hornet Honey");
					return;
				}
				if (type == -59)
				{
					this.SetDefaults("Big Hornet Honey");
					return;
				}
				if (type == -60)
				{
					this.SetDefaults("Little Hornet Leafy");
					return;
				}
				if (type == -61)
				{
					this.SetDefaults("Big Hornet Leafy");
					return;
				}
				if (type == -62)
				{
					this.SetDefaults("Little Hornet Spikey");
					return;
				}
				if (type == -63)
				{
					this.SetDefaults("Big Hornet Spikey");
					return;
				}
				if (type == -64)
				{
					this.SetDefaults("Little Hornet Stingy");
					return;
				}
				if (type == -65)
				{
					this.SetDefaults("Big Hornet Stingy");
					return;
				}
			}
			else
			{
				this.SetDefaults(type, -1f);
			}
		}

		public void SetDefaults(string Name)
		{
			bool flag = false;
			this.SetDefaults(0, -1f);
			if (Name == "Slimeling")
			{
				this.SetDefaults(81, 0.6f);
				this.name = Name;
				this.damage = 45;
				this.defense = 10;
				this.life = 90;
				this.knockBackResist *= 1.2f;
				this.value = 100f;
				this.netID = -1;
				flag = true;
			}
			else if (Name == "Slimer2")
			{
				this.SetDefaults(81, 0.9f);
				this.displayName = "Slimer";
				this.name = Name;
				this.damage = 45;
				this.defense = 20;
				this.life = 90;
				this.knockBackResist *= 1.2f;
				this.value = 100f;
				this.netID = -2;
				flag = true;
			}
			else if (Name == "Green Slime")
			{
				this.SetDefaults(1, 0.9f);
				this.name = Name;
				this.damage = 6;
				this.defense = 0;
				this.life = 14;
				this.knockBackResist *= 1.2f;
				this.color = new Color(0, 220, 40, 100);
				this.value = 3f;
				this.netID = -3;
				flag = true;
			}
			else if (Name == "Pinky")
			{
				this.SetDefaults(1, 0.6f);
				this.name = Name;
				this.damage = 5;
				this.defense = 5;
				this.life = 150;
				this.knockBackResist *= 1.4f;
				this.color = new Color(250, 30, 90, 90);
				this.value = 10000f;
				this.netID = -4;
				flag = true;
				this.rarity = 1;
			}
			else if (Name == "Baby Slime")
			{
				this.SetDefaults(1, 0.9f);
				this.name = Name;
				this.damage = 13;
				this.defense = 4;
				this.life = 30;
				this.knockBackResist *= 0.95f;
				this.alpha = 120;
				this.color = new Color(0, 0, 0, 50);
				this.value = 10f;
				this.netID = -5;
				flag = true;
			}
			else if (Name == "Black Slime")
			{
				this.SetDefaults(1, 1.05f);
				this.name = Name;
				this.damage = 15;
				this.defense = 4;
				this.life = 45;
				this.color = new Color(0, 0, 0, 50);
				this.value = 20f;
				this.netID = -6;
				flag = true;
			}
			else if (Name == "Purple Slime")
			{
				this.SetDefaults(1, 1.2f);
				this.name = Name;
				this.damage = 12;
				this.defense = 6;
				this.life = 40;
				this.knockBackResist *= 0.9f;
				this.color = new Color(200, 0, 255, 150);
				this.value = 10f;
				this.netID = -7;
				flag = true;
			}
			else if (Name == "Red Slime")
			{
				this.SetDefaults(1, 1.025f);
				this.name = Name;
				this.damage = 12;
				this.defense = 4;
				this.life = 35;
				this.color = new Color(255, 30, 0, 100);
				this.value = 8f;
				this.netID = -8;
				flag = true;
			}
			else if (Name == "Yellow Slime")
			{
				this.SetDefaults(1, 1.2f);
				this.name = Name;
				this.damage = 15;
				this.defense = 7;
				this.life = 45;
				this.color = new Color(255, 255, 0, 100);
				this.value = 10f;
				this.netID = -9;
				flag = true;
			}
			else if (Name == "Jungle Slime")
			{
				this.SetDefaults(1, 1.1f);
				this.name = Name;
				this.damage = 18;
				this.defense = 6;
				this.life = 60;
				this.color = new Color(143, 215, 93, 100);
				this.value = 500f;
				this.netID = -10;
				flag = true;
			}
			else if (Name == "Little Eater")
			{
				this.SetDefaults(6, 0.85f);
				this.name = Name;
				this.displayName = "Eater of Souls";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -11;
			}
			else if (Name == "Big Eater")
			{
				this.SetDefaults(6, 1.15f);
				this.name = Name;
				this.displayName = "Eater of Souls";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -12;
			}
			else if (Name == "Short Bones")
			{
				this.SetDefaults(31, 0.9f);
				this.name = Name;
				this.displayName = "Angry Bones";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.netID = -13;
			}
			else if (Name == "Big Boned")
			{
				this.SetDefaults(31, 1.15f);
				this.name = Name;
				this.displayName = "Angry Bones";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((double)((float)this.damage * this.scale) * 1.1);
				this.life = (int)((double)((float)this.life * this.scale) * 1.1);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots = 2f;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -14;
			}
			else if (Name == "Heavy Skeleton")
			{
				this.SetDefaults(77, 1.15f);
				this.name = Name;
				this.displayName = "Armored Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((double)((float)this.damage * this.scale) * 1.1);
				this.life = 400;
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots = 2f;
				this.knockBackResist *= 2f - this.scale;
				this.height = 44;
				this.netID = -15;
			}
			else if (Name == "Little Stinger")
			{
				this.SetDefaults(42, 0.85f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -16;
			}
			else if (Name == "Big Stinger")
			{
				this.SetDefaults(42, 1.2f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -17;
			}
			else if (Name == "Tiny Moss Hornet")
			{
				this.SetDefaults(176, 0.8f);
				this.displayName = "Moss Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -18;
			}
			else if (Name == "Little Moss Hornet")
			{
				this.SetDefaults(176, 0.9f);
				this.displayName = "Moss Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -19;
			}
			else if (Name == "Big Moss Hornet")
			{
				this.SetDefaults(176, 1.1f);
				this.displayName = "Moss Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -20;
			}
			else if (Name == "Giant Moss Hornet")
			{
				this.SetDefaults(176, 1.2f);
				this.displayName = "Moss Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -21;
			}
			else if (Name == "Little Crimera")
			{
				this.SetDefaults(173, 0.85f);
				this.displayName = "Crimera";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -22;
			}
			else if (Name == "Big Crimera")
			{
				this.SetDefaults(173, 1.15f);
				this.displayName = "Crimera";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -23;
			}
			else if (Name == "Little Crimslime")
			{
				this.SetDefaults(183, 0.85f);
				this.displayName = "Crimslime";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -24;
			}
			else if (Name == "Big Crimslime")
			{
				this.SetDefaults(183, 1.15f);
				this.displayName = "Crimslime";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -25;
			}
			else if (Name == "Small Zombie")
			{
				this.SetDefaults(3, 0.9f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -26;
			}
			else if (Name == "Big Zombie")
			{
				this.SetDefaults(3, 1.1f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -27;
			}
			else if (Name == "Small Bald Zombie")
			{
				this.SetDefaults(132, 0.85f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -28;
			}
			else if (Name == "Big Bald Zombie")
			{
				this.SetDefaults(132, 1.15f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -29;
			}
			else if (Name == "Small Pincushion Zombie")
			{
				this.SetDefaults(186, 0.93f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -30;
			}
			else if (Name == "Big Pincushion Zombie")
			{
				this.SetDefaults(186, 1.13f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -31;
			}
			else if (Name == "Small Slimed Zombie")
			{
				this.SetDefaults(187, 0.89f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -32;
			}
			else if (Name == "Big Slimed Zombie")
			{
				this.SetDefaults(187, 1.11f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -33;
			}
			else if (Name == "Small Swamp Zombie")
			{
				this.SetDefaults(188, 0.87f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -34;
			}
			else if (Name == "Big Swamp Zombie")
			{
				this.SetDefaults(188, 1.13f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -35;
			}
			else if (Name == "Small Twiggy Zombie")
			{
				this.SetDefaults(189, 0.92f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -36;
			}
			else if (Name == "Big Twiggy Zombie")
			{
				this.SetDefaults(189, 1.08f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -37;
			}
			else if (Name == "Cataract Eye 2")
			{
				this.SetDefaults(190, 1.15f);
				this.name = Name;
				this.displayName = "Demon Eye";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -38;
			}
			else if (Name == "Sleepy Eye 2")
			{
				this.SetDefaults(191, 1.1f);
				this.name = Name;
				this.displayName = "Demon Eye";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -39;
			}
			else if (Name == "Dialated Eye 2")
			{
				this.SetDefaults(192, 0.9f);
				this.name = Name;
				this.displayName = "Demon Eye";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -40;
			}
			else if (Name == "Green Eye 2")
			{
				this.SetDefaults(193, 0.85f);
				this.name = Name;
				this.displayName = "Demon Eye";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -41;
			}
			else if (Name == "Purple Eye 2")
			{
				this.SetDefaults(194, 1.1f);
				this.name = Name;
				this.displayName = "Demon Eye";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -42;
			}
			else if (Name == "Demon Eye 2")
			{
				this.SetDefaults(2, 1.15f);
				this.name = Name;
				this.displayName = "Demon Eye";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -43;
			}
			else if (Name == "Small Female Zombie")
			{
				this.SetDefaults(200, 0.87f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -44;
			}
			else if (Name == "Big Female Zombie")
			{
				this.SetDefaults(200, 1.05f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -45;
			}
			else if (Name == "Small Skeleton")
			{
				this.SetDefaults(21, 0.9f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -46;
			}
			else if (Name == "Big Skeleton")
			{
				this.SetDefaults(21, 1.1f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -47;
			}
			else if (Name == "Small Headache Skeleton")
			{
				this.SetDefaults(201, 0.93f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -48;
			}
			else if (Name == "Big Headache Skeleton")
			{
				this.SetDefaults(201, 1.07f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -49;
			}
			else if (Name == "Small Misassembled Skeleton")
			{
				this.SetDefaults(202, 0.87f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -50;
			}
			else if (Name == "Big Misassembled Skeleton")
			{
				this.SetDefaults(202, 1.13f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -51;
			}
			else if (Name == "Small Pantless Skeleton")
			{
				this.SetDefaults(203, 0.85f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -52;
			}
			else if (Name == "Big Pantless Skeleton")
			{
				this.SetDefaults(203, 1.15f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -53;
			}
			else if (Name == "Small Rain Zombie")
			{
				this.SetDefaults(223, 0.9f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -54;
			}
			else if (Name == "Big Rain Zombie")
			{
				this.SetDefaults(223, 1.1f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -55;
			}
			else if (Name == "Little Hornet Fatty")
			{
				this.SetDefaults(231, 0.85f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -56;
			}
			else if (Name == "Big Hornet Fatty")
			{
				this.SetDefaults(231, 1.25f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -57;
			}
			else if (Name == "Little Hornet Honey")
			{
				this.SetDefaults(232, 0.8f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -58;
			}
			else if (Name == "Big Hornet Honey")
			{
				this.SetDefaults(232, 1.15f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -59;
			}
			else if (Name == "Little Hornet Leafy")
			{
				this.SetDefaults(233, 0.92f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -60;
			}
			else if (Name == "Big Hornet Leafy")
			{
				this.SetDefaults(233, 1.1f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -61;
			}
			else if (Name == "Little Hornet Spikey")
			{
				this.SetDefaults(234, 0.78f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -62;
			}
			else if (Name == "Big Hornet Spikey")
			{
				this.SetDefaults(234, 1.16f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -63;
			}
			else if (Name == "Little Hornet Stingy")
			{
				this.SetDefaults(235, 0.87f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -64;
			}
			else if (Name == "Big Hornet Stingy")
			{
				this.SetDefaults(235, 1.21f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -65;
			}
			else if (Name != "")
			{
				for (int i = 1; i < NPCLoader.NPCCount; i++)
				{
					if (Main.npcName[i] == Name)
					{
						this.SetDefaults(i, -1f);
						return;
					}
				}
				this.SetDefaults(0, -1f);
				this.active = false;
			}
			else
			{
				this.active = false;
			}
			this.displayName = Lang.npcName(this.netID, false);
			this.lifeMax = this.life;
			this.defDamage = this.damage;
			this.defDefense = this.defense;
			if (Main.expertMode && flag)
			{
				this.scaleStats();
			}
		}

		public void CloneDefaults(int Type)
		{
			int originalType = this.type;
			int originalNetID = this.netID;
			ModNPC originalModEntity = this.modNPC;
			this.SetDefaultsKeepPlayerInteraction(Type);
			this.type = originalType;
			this.netID = originalNetID;
			this.modNPC = originalModEntity;
		}

		public void SetDefaultsKeepPlayerInteraction(int Type)
		{
			bool[] array = new bool[this.playerInteraction.Length];
			for (int i = 0; i < this.playerInteraction.Length; i++)
			{
				array[i] = this.playerInteraction[i];
			}
			this.SetDefaults(Type, -1f);
			for (int j = 0; j < this.playerInteraction.Length; j++)
			{
				this.playerInteraction[j] = array[j];
			}
		}

		public void SetDefaults(int Type, float scaleOverride = -1f)
		{
			this.modNPC = null;
			this.altTexture = 0;
			this.nameOver = 0f;
			this.takenDamageMultiplier = 1f;
			this.extraValue = 0f;
			for (int i = 0; i < this.playerInteraction.Length; i++)
			{
				this.playerInteraction[i] = false;
			}
			this.rarity = 0;
			this.dontCountMe = false;
			this.releaseOwner = 255;
			this.catchItem = 0;
			this.npcNameLookup = 0;
			this.netStream = 32;
			bool flag = false;
			this.netID = 0;
			this.netAlways = false;
			this.netSpam = 0;
			this.SpawnedFromStatue = false;
			int num = 10;
			if (Type >= 0)
			{
				num = NPCID.Sets.TrailCacheLength[Type];
			}
			if (num != this.oldPos.Length)
			{
				Array.Resize<Vector2>(ref this.oldPos, num);
				Array.Resize<float>(ref this.oldRot, num);
			}
			for (int j = 0; j < this.oldPos.Length; j++)
			{
				this.oldRot[j] = 0f;
				this.oldPos[j].X = 0f;
				this.oldPos[j].Y = 0f;
			}
			for (int k = 0; k < 5; k++)
			{
				this.buffTime[k] = 0;
				this.buffType[k] = 0;
			}
			if (this.buffImmune.Length != BuffLoader.BuffCount)
			{
				Array.Resize(ref this.buffImmune, BuffLoader.BuffCount);
			}
			for (int l = 0; l < this.buffImmune.Length; l++)
			{
				this.buffImmune[l] = false;
			}
			this.setFrameSize = false;
			this.buffImmune[31] = true;
			this.netSkip = -2;
			this.realLife = -1;
			this.lifeRegen = 0;
			this.lifeRegenCount = 0;
			this.poisoned = false;
			this.soulDrain = false;
			this.venom = false;
			this.shadowFlame = false;
			this.onFire = false;
			this.midas = false;
			this.ichor = false;
			this.onFrostBurn = false;
			this.confused = false;
			this.loveStruck = false;
			this.stinky = false;
			this.dryadWard = false;
			this.onFire2 = false;
			this.justHit = false;
			this.dontTakeDamage = false;
			this.npcSlots = 1f;
			this.lavaImmune = false;
			this.lavaWet = false;
			this.wetCount = 0;
			this.wet = false;
			this.townNPC = false;
			this.homeless = false;
			this.homeTileX = -1;
			this.homeTileY = -1;
			this.friendly = false;
			this.behindTiles = false;
			this.boss = false;
			this.noTileCollide = false;
			this.rotation = 0f;
			this.active = true;
			this.alpha = 0;
			this.color = default(Color);
			this.collideX = false;
			this.collideY = false;
			this.direction = 0;
			this.oldDirection = this.direction;
			this.frameCounter = 0.0;
			this.netUpdate = true;
			this.netUpdate2 = false;
			this.knockBackResist = 1f;
			this.name = "";
			this.displayName = "";
			this.noGravity = false;
			this.scale = 1f;
			this.soundHit = 0;
			this.soundKilled = 0;
			this.spriteDirection = -1;
			this.target = 255;
			this.oldTarget = this.target;
			this.targetRect = default(Rectangle);
			this.timeLeft = NPC.activeTime;
			this.type = Type;
			this.value = 0f;
			this.coldDamage = false;
			this.trapImmune = false;
			this.hide = false;
			this.immortal = false;
			this.chaseable = true;
			this.breath = 200;
			this.breathCounter = 0;
			this.reflectingProjectiles = false;
			this.canGhostHeal = true;
			this.javelined = false;
			this.daybreak = false;
			this.celled = false;
			this.dryadBane = false;
			for (int m = 0; m < NPC.maxAI; m++)
			{
				this.ai[m] = 0f;
			}
			for (int n = 0; n < NPC.maxAI; n++)
			{
				this.localAI[n] = 0f;
			}
			if (this.type == 1)
			{
				this.name = "Blue Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 7;
				this.defense = 2;
				this.lifeMax = 25;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 175;
				this.color = new Color(0, 80, 255, 100);
				this.value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 2)
			{
				this.name = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 18;
				this.defense = 2;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 3)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 6;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 60f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 430)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 6;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 60f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 431)
			{
				this.name = "Zombie Eskimo";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 8;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.value = 80f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 432)
			{
				this.name = "Pincushion Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 8;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.value = 65f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 433)
			{
				this.name = "Slimed Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 13;
				this.defense = 6;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.55f;
				this.value = 55f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 434)
			{
				this.name = "Swamp Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 13;
				this.defense = 8;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.value = 80f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 435)
			{
				this.name = "Twiggy Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 4;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.55f;
				this.value = 70f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 436)
			{
				this.name = "Female Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 12;
				this.defense = 4;
				this.lifeMax = 38;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.value = 65f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 4)
			{
				this.name = "Eye of Cthulhu";
				this.width = 100;
				this.height = 110;
				this.aiStyle = 4;
				this.damage = 15;
				this.defense = 12;
				this.lifeMax = 2800;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.timeLeft = NPC.activeTime * 30;
				this.boss = true;
				this.value = 30000f;
				this.npcSlots = 5f;
			}
			else if (this.type == 5)
			{
				this.name = "Servant of Cthulhu";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 5;
				this.damage = 12;
				this.defense = 0;
				this.lifeMax = 8;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
			}
			else if (this.type == 6)
			{
				this.npcSlots = 1f;
				this.name = "Eater of Souls";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 5;
				this.damage = 22;
				this.defense = 8;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.knockBackResist = 0.5f;
				this.value = 90f;
			}
			else if (this.type == 7)
			{
				this.displayName = "Devourer";
				this.npcSlots = 3.5f;
				this.name = "Devourer Head";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.damage = 31;
				this.defense = 2;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 140f;
				this.netAlways = true;
			}
			else if (this.type == 8)
			{
				this.displayName = "Devourer";
				this.name = "Devourer Body";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 16;
				this.defense = 6;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 140f;
				this.dontCountMe = true;
			}
			else if (this.type == 9)
			{
				this.displayName = "Devourer";
				this.name = "Devourer Tail";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 13;
				this.defense = 10;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 140f;
				this.dontCountMe = true;
			}
			else if (this.type == 10)
			{
				this.displayName = "Giant Worm";
				this.name = "Giant Worm Head";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 8;
				this.defense = 0;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 40f;
			}
			else if (this.type == 11)
			{
				this.displayName = "Giant Worm";
				this.name = "Giant Worm Body";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 4;
				this.defense = 4;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 40f;
				this.dontCountMe = true;
			}
			else if (this.type == 12)
			{
				this.displayName = "Giant Worm";
				this.name = "Giant Worm Tail";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 4;
				this.defense = 6;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 40f;
				this.dontCountMe = true;
			}
			else if (this.type == 13)
			{
				this.displayName = "Eater of Worlds";
				this.npcSlots = 5f;
				this.name = "Eater of Worlds Head";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 22;
				this.defense = 2;
				this.lifeMax = 65;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 300f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 14)
			{
				this.displayName = "Eater of Worlds";
				this.name = "Eater of Worlds Body";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 13;
				this.defense = 4;
				this.lifeMax = 150;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 300f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 15)
			{
				this.displayName = "Eater of Worlds";
				this.name = "Eater of Worlds Tail";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 11;
				this.defense = 8;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 300f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 16)
			{
				this.npcSlots = 2f;
				this.name = "Mother Slime";
				this.width = 36;
				this.height = 24;
				this.aiStyle = 1;
				this.damage = 20;
				this.defense = 7;
				this.lifeMax = 90;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 120;
				this.color = new Color(0, 0, 0, 50);
				this.value = 75f;
				this.scale = 1.25f;
				this.knockBackResist = 0.6f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 17)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Merchant";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 18)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Nurse";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 19)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Arms Dealer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 20)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Dryad";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 21)
			{
				this.name = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 8;
				this.lifeMax = 60;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 100f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 22)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Guide";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 23)
			{
				this.name = "Meteor Head";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 5;
				this.damage = 40;
				this.defense = 6;
				this.lifeMax = 26;
				this.soundHit = 3;
				this.soundKilled = 3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.value = 80f;
				this.knockBackResist = 0.4f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 24)
			{
				this.npcSlots = 3f;
				this.name = "Fire Imp";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 30;
				this.defense = 16;
				this.lifeMax = 70;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.lavaImmune = true;
				this.value = 350f;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 25)
			{
				this.name = "Burning Sphere";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 9;
				this.damage = 30;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 3;
				this.soundKilled = 3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.alpha = 100;
			}
			else if (this.type == 31)
			{
				this.name = "Angry Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 26;
				this.defense = 8;
				this.lifeMax = 80;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.8f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 32)
			{
				this.name = "Dark Caster";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 20;
				this.defense = 2;
				this.lifeMax = 50;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.value = 140f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 33)
			{
				this.name = "Water Sphere";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 9;
				this.damage = 20;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 3;
				this.soundKilled = 3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.alpha = 255;
				this.knockBackResist = 0f;
			}
			else if (this.type == 34)
			{
				this.name = "Cursed Skull";
				this.width = 26;
				this.height = 28;
				this.aiStyle = 10;
				this.damage = 35;
				this.defense = 6;
				this.lifeMax = 40;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.noGravity = true;
				this.noTileCollide = true;
				this.value = 150f;
				this.knockBackResist = 0.2f;
				this.npcSlots = 0.75f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 35)
			{
				this.displayName = "Skeletron";
				this.name = "Skeletron Head";
				this.width = 80;
				this.height = 102;
				this.aiStyle = 11;
				this.damage = 32;
				this.defense = 10;
				this.lifeMax = 4400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.noGravity = true;
				this.noTileCollide = true;
				this.value = 50000f;
				this.knockBackResist = 0f;
				this.boss = true;
				this.npcSlots = 6f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[189] = (this.buffImmune[169] = (this.buffImmune[183] = true));
			}
			else if (this.type == 36)
			{
				this.displayName = "Skeletron";
				this.name = "Skeletron Hand";
				this.width = 52;
				this.height = 52;
				this.aiStyle = 12;
				this.damage = 20;
				this.defense = 14;
				this.lifeMax = 600;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 37)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Old Man";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 38)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Demolitionist";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 39)
			{
				this.npcSlots = 6f;
				this.name = "Bone Serpent Head";
				this.displayName = "Bone Serpent";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 30;
				this.defense = 10;
				this.lifeMax = 250;
				this.soundHit = 2;
				this.soundKilled = 5;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 1200f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 40)
			{
				this.name = "Bone Serpent Body";
				this.displayName = "Bone Serpent";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 15;
				this.defense = 12;
				this.lifeMax = 250;
				this.soundHit = 2;
				this.soundKilled = 5;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 1200f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 41)
			{
				this.name = "Bone Serpent Tail";
				this.displayName = "Bone Serpent";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 10;
				this.defense = 18;
				this.lifeMax = 250;
				this.soundHit = 2;
				this.soundKilled = 5;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 1200f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 42)
			{
				this.name = "Hornet";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 26;
				this.defense = 12;
				this.lifeMax = 48;
				this.soundHit = 1;
				this.knockBackResist = 0.5f;
				this.soundKilled = 1;
				this.value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 43)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Man Eater";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 13;
				this.damage = 34;
				this.defense = 10;
				this.lifeMax = 110;
				this.soundHit = 1;
				this.knockBackResist = 0f;
				this.soundKilled = 1;
				this.value = 350f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 44)
			{
				this.name = "Undead Miner";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 22;
				this.defense = 9;
				this.lifeMax = 70;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 250f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 45)
			{
				this.name = "Tim";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 20;
				this.defense = 4;
				this.lifeMax = 200;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.value = 5000f;
				this.buffImmune[20] = true;
				this.rarity = 4;
			}
			else if (this.type == 46 || this.type == 303 || this.type == 337 || this.type == 540)
			{
				this.name = "Bunny";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2019;
			}
			else if (this.type == 47)
			{
				this.name = "Corrupt Bunny";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 4;
				this.lifeMax = 70;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 48)
			{
				this.name = "Harpy";
				this.width = 24;
				this.height = 34;
				this.aiStyle = 14;
				this.damage = 25;
				this.defense = 8;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.knockBackResist = 0.6f;
				this.soundKilled = 1;
				this.value = 300f;
			}
			else if (this.type == 49)
			{
				this.npcSlots = 0.5f;
				this.name = "Cave Bat";
				this.width = 22;
				this.height = 18;
				this.aiStyle = 14;
				this.damage = 13;
				this.defense = 2;
				this.lifeMax = 16;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 4;
				this.value = 90f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 50)
			{
				this.boss = true;
				this.name = "King Slime";
				this.width = 98;
				this.height = 92;
				this.aiStyle = 15;
				this.damage = 40;
				this.defense = 10;
				this.lifeMax = 2000;
				this.knockBackResist = 0f;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 30;
				this.value = 10000f;
				this.scale = 1.25f;
				this.buffImmune[20] = true;
				this.timeLeft = NPC.activeTime * 30;
			}
			else if (this.type == 51)
			{
				this.npcSlots = 0.5f;
				this.name = "Jungle Bat";
				this.width = 22;
				this.height = 18;
				this.aiStyle = 14;
				this.damage = 20;
				this.defense = 4;
				this.lifeMax = 34;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 4;
				this.value = 80f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 52)
			{
				this.name = "Doctor Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 1000f;
				this.buffImmune[31] = false;
				this.rarity = 2;
			}
			else if (this.type == 53)
			{
				this.name = "The Groom";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 8;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 1000f;
				this.buffImmune[31] = false;
				this.rarity = 2;
			}
			else if (this.type == 54)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Clothier";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 55)
			{
				this.noGravity = true;
				this.name = "Goldfish";
				this.width = 20;
				this.height = 18;
				this.aiStyle = 16;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.catchItem = 261;
			}
			else if (this.type == 56)
			{
				this.noTileCollide = true;
				this.noGravity = true;
				this.name = "Snatcher";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 13;
				this.damage = 25;
				this.defense = 10;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.knockBackResist = 0f;
				this.soundKilled = 1;
				this.value = 90f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 57)
			{
				this.noGravity = true;
				this.name = "Corrupt Goldfish";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 30;
				this.defense = 6;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 500f;
			}
			else if (this.type == 58)
			{
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.name = "Piranha";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 25;
				this.defense = 2;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 50f;
			}
			else if (this.type == 59)
			{
				this.name = "Lava Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 15;
				this.defense = 10;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.scale = 1.1f;
				this.alpha = 50;
				this.lavaImmune = true;
				this.value = 120f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 60)
			{
				this.npcSlots = 0.5f;
				this.name = "Hellbat";
				this.width = 22;
				this.height = 18;
				this.aiStyle = 14;
				this.damage = 35;
				this.defense = 8;
				this.lifeMax = 46;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 4;
				this.value = 120f;
				this.scale = 1.1f;
				this.lavaImmune = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 61)
			{
				this.name = "Vulture";
				this.width = 36;
				this.height = 36;
				this.aiStyle = 17;
				this.damage = 15;
				this.defense = 4;
				this.lifeMax = 40;
				this.knockBackResist = 0.8f;
				this.soundHit = 28;
				this.soundKilled = 31;
				this.value = 60f;
			}
			else if (this.type == 62)
			{
				this.npcSlots = 2f;
				this.name = "Demon";
				this.width = 28;
				this.height = 48;
				this.aiStyle = 14;
				this.damage = 32;
				this.defense = 8;
				this.lifeMax = 120;
				this.soundHit = 21;
				this.knockBackResist = 0.8f;
				this.soundKilled = 24;
				this.value = 300f;
				this.lavaImmune = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 63)
			{
				this.noGravity = true;
				this.name = "Blue Jellyfish";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 25;
				this.defense = 4;
				this.lifeMax = 34;
				this.soundHit = 25;
				this.soundKilled = 28;
				this.value = 100f;
				this.alpha = 20;
			}
			else if (this.type == 64)
			{
				this.noGravity = true;
				this.name = "Pink Jellyfish";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 30;
				this.defense = 6;
				this.lifeMax = 70;
				this.soundHit = 25;
				this.soundKilled = 28;
				this.value = 100f;
				this.alpha = 20;
			}
			else if (this.type == 65)
			{
				this.noGravity = true;
				this.name = "Shark";
				this.width = 100;
				this.height = 24;
				this.aiStyle = 16;
				this.damage = 40;
				this.defense = 2;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 400f;
				this.knockBackResist = 0.7f;
			}
			else if (this.type == 66)
			{
				this.npcSlots = 2f;
				this.name = "Voodoo Demon";
				this.width = 28;
				this.height = 48;
				this.aiStyle = 14;
				this.damage = 32;
				this.defense = 8;
				this.lifeMax = 140;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 1000f;
				this.lavaImmune = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 67)
			{
				this.name = "Crab";
				this.width = 28;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 60f;
			}
			else if (this.type == 68)
			{
				this.name = "Dungeon Guardian";
				this.width = 80;
				this.height = 102;
				this.aiStyle = 11;
				this.damage = 1000;
				this.defense = 9999;
				this.lifeMax = 9999;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[189] = (this.buffImmune[169] = (this.buffImmune[183] = true));
			}
			else if (this.type == 69)
			{
				this.name = "Antlion";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 19;
				this.damage = 10;
				this.defense = 6;
				this.lifeMax = 45;
				this.soundHit = 31;
				this.soundKilled = 34;
				this.knockBackResist = 0f;
				this.value = 60f;
				this.behindTiles = true;
			}
			else if (this.type == 70)
			{
				this.npcSlots = 0.3f;
				this.name = "Spike Ball";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 20;
				this.damage = 32;
				this.defense = 100;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.dontTakeDamage = true;
				this.scale = 1.5f;
			}
			else if (this.type == 71)
			{
				this.npcSlots = 2f;
				this.name = "Dungeon Slime";
				this.width = 36;
				this.height = 24;
				this.aiStyle = 1;
				this.damage = 30;
				this.defense = 7;
				this.lifeMax = 150;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 60;
				this.value = 150f;
				this.scale = 1.25f;
				this.knockBackResist = 0.6f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.rarity = 1;
			}
			else if (this.type == 72)
			{
				this.npcSlots = 0.3f;
				this.name = "Blazing Wheel";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 21;
				this.damage = 24;
				this.defense = 100;
				this.lifeMax = 100;
				this.alpha = 100;
				this.behindTiles = true;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.dontTakeDamage = true;
				this.scale = 1.2f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 73)
			{
				this.name = "Goblin Scout";
				this.scale = 0.95f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 6;
				this.lifeMax = 80;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.7f;
				this.value = 200f;
				this.buffImmune[31] = false;
				this.rarity = 1;
			}
			else if (this.type == 74 || this.type == 297 || this.type == 298)
			{
				this.name = "Bird";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 24;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				if (this.type == 74)
				{
					this.catchItem = 2015;
				}
				if (this.type == 297)
				{
					this.catchItem = 2016;
				}
				if (this.type == 298)
				{
					this.catchItem = 2017;
				}
				this.npcSlots = 0.4f;
			}
			else if (this.type == 75)
			{
				this.noGravity = true;
				this.name = "Pixie";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 22;
				this.damage = 55;
				this.defense = 20;
				this.lifeMax = 150;
				this.soundHit = 5;
				this.knockBackResist = 0.6f;
				this.soundKilled = 7;
				this.value = 350f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 77)
			{
				this.name = "Armored Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 40;
				this.defense = 28;
				this.lifeMax = 260;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 78)
			{
				this.name = "Mummy";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 16;
				this.lifeMax = 130;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.6f;
				this.value = 600f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 79)
			{
				this.name = "Dark Mummy";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 18;
				this.lifeMax = 180;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.5f;
				this.value = 700f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 80)
			{
				this.name = "Light Mummy";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 55;
				this.defense = 18;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.55f;
				this.value = 700f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 81)
			{
				this.name = "Corrupt Slime";
				this.width = 40;
				this.height = 30;
				this.aiStyle = 1;
				this.damage = 55;
				this.defense = 20;
				this.lifeMax = 170;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 55;
				this.value = 400f;
				this.scale = 1.1f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 82)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Wraith";
				this.width = 24;
				this.height = 44;
				this.aiStyle = 22;
				this.damage = 65;
				this.defense = 16;
				this.lifeMax = 160;
				this.soundHit = 54;
				this.soundKilled = 52;
				this.alpha = 100;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.7f;
			}
			else if (this.type == 83)
			{
				this.name = "Cursed Hammer";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 23;
				this.damage = 80;
				this.defense = 18;
				this.lifeMax = 200;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 84)
			{
				this.name = "Enchanted Sword";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 23;
				this.damage = 80;
				this.defense = 18;
				this.lifeMax = 200;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 85)
			{
				this.name = "Mimic";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 25;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 500;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.value = 100000f;
				this.knockBackResist = 0.3f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.rarity = 4;
			}
			else if (this.type == 86)
			{
				this.name = "Unicorn";
				this.width = 46;
				this.height = 42;
				this.aiStyle = 26;
				this.damage = 65;
				this.defense = 30;
				this.lifeMax = 400;
				this.soundHit = 12;
				this.soundKilled = 18;
				this.knockBackResist = 0.3f;
				this.value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 87)
			{
				this.displayName = "Wyvern";
				this.noTileCollide = true;
				this.npcSlots = 5f;
				this.name = "Wyvern Head";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 80;
				this.defense = 10;
				this.lifeMax = 4000;
				this.soundHit = 7;
				this.soundKilled = 8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 88)
			{
				this.displayName = "Wyvern";
				this.noTileCollide = true;
				this.name = "Wyvern Legs";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.soundHit = 7;
				this.soundKilled = 8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 89)
			{
				this.displayName = "Wyvern";
				this.noTileCollide = true;
				this.name = "Wyvern Body";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.soundHit = 7;
				this.soundKilled = 8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 2000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 90)
			{
				this.displayName = "Wyvern";
				this.noTileCollide = true;
				this.name = "Wyvern Body 2";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.soundHit = 7;
				this.soundKilled = 8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 91)
			{
				this.displayName = "Wyvern";
				this.noTileCollide = true;
				this.name = "Wyvern Body 3";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.soundHit = 7;
				this.soundKilled = 8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 92)
			{
				this.displayName = "Wyvern";
				this.noTileCollide = true;
				this.name = "Wyvern Tail";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.soundHit = 7;
				this.soundKilled = 8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 93)
			{
				this.npcSlots = 0.5f;
				this.name = "Giant Bat";
				this.width = 26;
				this.height = 20;
				this.aiStyle = 14;
				this.damage = 45;
				this.defense = 16;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.knockBackResist = 0.75f;
				this.soundKilled = 4;
				this.value = 400f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 94)
			{
				this.npcSlots = 1f;
				this.name = "Corruptor";
				this.width = 44;
				this.height = 44;
				this.aiStyle = 5;
				this.damage = 60;
				this.defense = 32;
				this.lifeMax = 230;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.knockBackResist = 0.55f;
				this.value = 500f;
			}
			else if (this.type == 95)
			{
				this.displayName = "Digger";
				this.name = "Digger Head";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 45;
				this.defense = 10;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.scale = 0.9f;
				this.value = 300f;
			}
			else if (this.type == 96)
			{
				this.displayName = "Digger";
				this.name = "Digger Body";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 28;
				this.defense = 20;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.scale = 0.9f;
				this.value = 300f;
				this.dontCountMe = true;
			}
			else if (this.type == 97)
			{
				this.displayName = "Digger";
				this.name = "Digger Tail";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 26;
				this.defense = 30;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.scale = 0.9f;
				this.value = 300f;
				this.dontCountMe = true;
			}
			else if (this.type == 98)
			{
				this.displayName = "World Feeder";
				this.npcSlots = 3.5f;
				this.name = "Seeker Head";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 70;
				this.defense = 36;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 700f;
			}
			else if (this.type == 99)
			{
				this.displayName = "World Feeder";
				this.name = "Seeker Body";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 55;
				this.defense = 40;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 700f;
				this.dontCountMe = true;
			}
			else if (this.type == 100)
			{
				this.displayName = "World Feeder";
				this.name = "Seeker Tail";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 44;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 700f;
				this.dontCountMe = true;
			}
			else if (this.type == 101)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.behindTiles = true;
				this.name = "Clinger";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 13;
				this.damage = 70;
				this.defense = 30;
				this.lifeMax = 320;
				this.soundHit = 1;
				this.knockBackResist = 0.2f;
				this.soundKilled = 1;
				this.value = 600f;
			}
			else if (this.type == 102)
			{
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.name = "Angler Fish";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 80;
				this.defense = 22;
				this.lifeMax = 90;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 500f;
			}
			else if (this.type == 103)
			{
				this.noGravity = true;
				this.name = "Green Jellyfish";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 120;
				this.soundHit = 25;
				this.soundKilled = 28;
				this.value = 800f;
				this.alpha = 20;
			}
			else if (this.type == 104)
			{
				this.name = "Werewolf";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 38;
				this.lifeMax = 350;
				this.soundHit = 6;
				this.soundKilled = 1;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 105)
			{
				this.friendly = true;
				this.name = "Bound Goblin";
				this.width = 18;
				this.height = 34;
				this.aiStyle = 0;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.scale = 0.9f;
				this.rarity = 1;
			}
			else if (this.type == 106)
			{
				this.friendly = true;
				this.name = "Bound Wizard";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 0;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.rarity = 1;
			}
			else if (this.type == 107)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Goblin Tinkerer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.scale = 0.9f;
			}
			else if (this.type == 108)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Wizard";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 109)
			{
				this.name = "Clown";
				this.width = 34;
				this.height = 78;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 20;
				this.lifeMax = 400;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 8000f;
			}
			else if (this.type == 110)
			{
				this.name = "Skeleton Archer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 45;
				this.defense = 14;
				this.lifeMax = 210;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.55f;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 112)
			{
				this.name = "Vile Spit";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 9;
				this.damage = 65;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 0;
				this.soundKilled = 9;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.scale = 0.9f;
				this.alpha = 80;
			}
			else if (this.type == 113)
			{
				this.npcSlots = 10f;
				this.name = "Wall of Flesh";
				this.width = 100;
				this.height = 100;
				this.aiStyle = 27;
				this.damage = 50;
				this.defense = 12;
				this.lifeMax = 8000;
				this.soundHit = 8;
				this.soundKilled = 10;
				this.noGravity = true;
				this.noTileCollide = true;
				this.behindTiles = true;
				this.knockBackResist = 0f;
				this.scale = 1.2f;
				this.boss = true;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.value = 80000f;
			}
			else if (this.type == 114)
			{
				this.name = "Wall of Flesh Eye";
				this.displayName = "Wall of Flesh";
				this.width = 100;
				this.height = 100;
				this.aiStyle = 28;
				this.damage = 50;
				this.defense = 0;
				this.lifeMax = 8000;
				this.soundHit = 8;
				this.soundKilled = 10;
				this.noGravity = true;
				this.noTileCollide = true;
				this.behindTiles = true;
				this.knockBackResist = 0f;
				this.scale = 1.2f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.value = 80000f;
			}
			else if (this.type == 115)
			{
				this.name = "The Hungry";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 29;
				this.damage = 30;
				this.defense = 10;
				this.lifeMax = 240;
				this.soundHit = 9;
				this.soundKilled = 11;
				this.noGravity = true;
				this.behindTiles = true;
				this.noTileCollide = true;
				this.knockBackResist = 1.1f;
			}
			else if (this.type == 116)
			{
				this.name = "The Hungry II";
				this.displayName = "The Hungry";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 30;
				this.defense = 6;
				this.lifeMax = 80;
				this.soundHit = 9;
				this.knockBackResist = 0.8f;
				this.soundKilled = 12;
			}
			else if (this.type == 117)
			{
				this.displayName = "Leech";
				this.name = "Leech Head";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 26;
				this.defense = 2;
				this.lifeMax = 60;
				this.soundHit = 9;
				this.soundKilled = 12;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
			}
			else if (this.type == 118)
			{
				this.displayName = "Leech";
				this.name = "Leech Body";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 22;
				this.defense = 6;
				this.lifeMax = 60;
				this.soundHit = 9;
				this.soundKilled = 12;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
			}
			else if (this.type == 119)
			{
				this.displayName = "Leech";
				this.name = "Leech Tail";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 18;
				this.defense = 10;
				this.lifeMax = 60;
				this.soundHit = 9;
				this.soundKilled = 12;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
			}
			else if (this.type == 120)
			{
				this.name = "Chaos Elemental";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 40;
				this.defense = 30;
				this.lifeMax = 370;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.4f;
				this.value = 600f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 121)
			{
				this.name = "Slimer";
				this.width = 40;
				this.height = 30;
				this.aiStyle = 14;
				this.damage = 45;
				this.defense = 20;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.alpha = 55;
				this.knockBackResist = 0.8f;
				this.scale = 1.1f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 122)
			{
				this.noGravity = true;
				this.name = "Gastropod";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 22;
				this.damage = 60;
				this.defense = 22;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 600f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 123)
			{
				this.friendly = true;
				this.name = "Bound Mechanic";
				this.width = 18;
				this.height = 34;
				this.aiStyle = 0;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.scale = 0.9f;
				this.rarity = 1;
			}
			else if (this.type == 124)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Mechanic";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 125)
			{
				this.name = "Retinazer";
				this.width = 100;
				this.height = 110;
				this.aiStyle = 30;
				this.defense = 10;
				this.damage = 45;
				this.lifeMax = 20000;
				this.soundHit = 1;
				this.soundKilled = 14;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.timeLeft = NPC.activeTime * 30;
				this.boss = true;
				this.value = 120000f;
				this.npcSlots = 5f;
			}
			else if (this.type == 126)
			{
				this.name = "Spazmatism";
				this.width = 100;
				this.height = 110;
				this.aiStyle = 31;
				this.defense = 10;
				this.damage = 50;
				this.lifeMax = 23000;
				this.soundHit = 1;
				this.soundKilled = 14;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.timeLeft = NPC.activeTime * 30;
				this.boss = true;
				this.value = 120000f;
				this.npcSlots = 5f;
			}
			else if (this.type == 127)
			{
				this.name = "Skeletron Prime";
				this.width = 80;
				this.height = 102;
				this.aiStyle = 32;
				this.damage = 47;
				this.defense = 24;
				this.lifeMax = 28000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.value = 120000f;
				this.knockBackResist = 0f;
				this.boss = true;
				this.npcSlots = 6f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[189] = (this.buffImmune[169] = (this.buffImmune[183] = true));
				this.boss = true;
			}
			else if (this.type == 128)
			{
				this.name = "Prime Cannon";
				this.width = 52;
				this.height = 52;
				this.aiStyle = 35;
				this.damage = 30;
				this.defense = 23;
				this.lifeMax = 7000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.netAlways = true;
			}
			else if (this.type == 129)
			{
				this.name = "Prime Saw";
				this.width = 52;
				this.height = 52;
				this.aiStyle = 33;
				this.damage = 56;
				this.defense = 38;
				this.lifeMax = 9000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.netAlways = true;
			}
			else if (this.type == 130)
			{
				this.name = "Prime Vice";
				this.width = 52;
				this.height = 52;
				this.aiStyle = 34;
				this.damage = 52;
				this.defense = 34;
				this.lifeMax = 9000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.netAlways = true;
			}
			else if (this.type == 131)
			{
				this.name = "Prime Laser";
				this.width = 52;
				this.height = 52;
				this.aiStyle = 36;
				this.damage = 29;
				this.defense = 20;
				this.lifeMax = 6000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.netAlways = true;
			}
			else if (this.type == 132)
			{
				this.displayName = "Zombie";
				this.name = "Bald Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 15;
				this.defense = 5;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 65f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 133)
			{
				this.name = "Wandering Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 134)
			{
				this.displayName = "The Destroyer";
				this.npcSlots = 5f;
				this.name = "The Destroyer";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 37;
				this.defense = 0;
				this.damage = 70;
				this.lifeMax = 80000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 120000f;
				this.scale = 1.25f;
				this.boss = true;
				this.netAlways = true;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				flag = true;
				this.alpha = 255;
			}
			else if (this.type == 135)
			{
				this.displayName = "The Destroyer";
				this.npcSlots = 5f;
				this.name = "The Destroyer Body";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 37;
				this.damage = 55;
				this.defense = 30;
				this.lifeMax = 80000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.netAlways = true;
				this.scale = 1.25f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				flag = true;
				this.dontCountMe = true;
				this.alpha = 255;
			}
			else if (this.type == 136)
			{
				this.displayName = "The Destroyer";
				this.npcSlots = 5f;
				this.name = "The Destroyer Tail";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 37;
				this.damage = 40;
				this.defense = 35;
				this.lifeMax = 80000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.scale = 1.25f;
				this.netAlways = true;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				flag = true;
				this.dontCountMe = true;
				this.alpha = 255;
			}
			else if (this.type == 139)
			{
				this.npcSlots = 1f;
				this.name = "Probe";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 5;
				this.damage = 50;
				this.defense = 20;
				this.lifeMax = 200;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.knockBackResist = 0.8f;
				this.noTileCollide = true;
				flag = true;
			}
			else if (this.type == 137)
			{
				this.name = "Illuminant Bat";
				this.width = 26;
				this.height = 20;
				this.aiStyle = 14;
				this.damage = 75;
				this.defense = 30;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.knockBackResist = 0.75f;
				this.soundKilled = 6;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 138)
			{
				this.name = "Illuminant Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 70;
				this.defense = 30;
				this.lifeMax = 180;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.alpha = 100;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.85f;
				this.scale = 1.05f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 140)
			{
				this.name = "Possessed Armor";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 55;
				this.defense = 28;
				this.lifeMax = 260;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.knockBackResist = 0.4f;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.buffImmune[24] = true;
			}
			else if (this.type == 141)
			{
				this.name = "Toxic Sludge";
				this.width = 34;
				this.height = 28;
				this.aiStyle = 1;
				this.damage = 50;
				this.defense = 18;
				this.lifeMax = 150;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 55;
				this.value = 400f;
				this.scale = 1.1f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.knockBackResist = 0.8f;
			}
			else if (this.type == 142)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Santa Claus";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 143)
			{
				this.name = "Snowman Gangsta";
				this.width = 26;
				this.height = 40;
				this.aiStyle = 38;
				this.damage = 50;
				this.defense = 20;
				this.lifeMax = 200;
				this.soundHit = 11;
				this.soundKilled = 15;
				this.knockBackResist = 0.6f;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 144)
			{
				this.name = "Mister Stabby";
				this.width = 26;
				this.height = 40;
				this.aiStyle = 38;
				this.damage = 65;
				this.defense = 26;
				this.lifeMax = 240;
				this.soundHit = 11;
				this.soundKilled = 15;
				this.knockBackResist = 0.6f;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.coldDamage = true;
			}
			else if (this.type == 145)
			{
				this.name = "Snow Balla";
				this.width = 26;
				this.height = 40;
				this.aiStyle = 38;
				this.damage = 55;
				this.defense = 22;
				this.lifeMax = 220;
				this.soundHit = 11;
				this.soundKilled = 15;
				this.knockBackResist = 0.6f;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.coldDamage = true;
			}
			else if (this.type == 147)
			{
				this.name = "Ice Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 8;
				this.defense = 4;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 50;
				this.value = 50f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.coldDamage = true;
			}
			else if (this.type == 148)
			{
				this.name = "Penguin";
				this.width = 16;
				this.height = 34;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2205;
			}
			else if (this.type == 149)
			{
				this.name = "Penguin";
				this.width = 16;
				this.height = 34;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2205;
			}
			else if (this.type == 150)
			{
				this.npcSlots = 0.5f;
				this.name = "Ice Bat";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 14;
				this.damage = 18;
				this.defense = 6;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 4;
				this.value = 250f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 151)
			{
				this.npcSlots = 0.5f;
				this.name = "Lava bat";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 14;
				this.damage = 50;
				this.defense = 16;
				this.lifeMax = 160;
				this.soundHit = 1;
				this.knockBackResist = 0.6f;
				this.soundKilled = 4;
				this.value = 400f;
				this.scale = 1.15f;
				this.lavaImmune = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 152)
			{
				this.npcSlots = 0.5f;
				this.name = "Giant Flying Fox";
				this.width = 38;
				this.height = 34;
				this.aiStyle = 14;
				this.damage = 80;
				this.defense = 24;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.knockBackResist = 0.65f;
				this.soundKilled = 4;
				this.value = 400f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 153)
			{
				this.npcSlots = 2f;
				this.name = "Giant Tortoise";
				this.width = 46;
				this.height = 32;
				this.aiStyle = 39;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 470;
				this.soundHit = 24;
				this.knockBackResist = 0.3f;
				this.soundKilled = 27;
				this.value = 500f;
				this.noGravity = false;
				this.buffImmune[31] = false;
			}
			else if (this.type == 154)
			{
				this.npcSlots = 1.5f;
				this.name = "Ice Tortoise";
				this.width = 46;
				this.height = 32;
				this.aiStyle = 39;
				this.damage = 55;
				this.defense = 28;
				this.lifeMax = 400;
				this.soundHit = 24;
				this.knockBackResist = 0.3f;
				this.soundKilled = 27;
				this.value = 450f;
				this.noGravity = false;
				this.buffImmune[31] = false;
			}
			else if (this.type == 155)
			{
				this.name = "Wolf";
				this.width = 46;
				this.height = 30;
				this.aiStyle = 26;
				this.damage = 65;
				this.defense = 30;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.3f;
				this.value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 156)
			{
				this.npcSlots = 2f;
				this.name = "Red Devil";
				this.width = 28;
				this.height = 48;
				this.aiStyle = 14;
				this.damage = 50;
				this.defense = 40;
				this.lifeMax = 600;
				this.soundHit = 21;
				this.knockBackResist = 0.5f;
				this.soundKilled = 24;
				this.value = 1200f;
				this.lavaImmune = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 157)
			{
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.name = "Arapaima";
				this.width = 74;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 75;
				this.defense = 30;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 500f;
			}
			else if (this.type == 160)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Truffle";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 161)
			{
				this.name = "Zombie Eskimo";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 8;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.value = 80f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 163)
			{
				this.name = "Black Recluse";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 90;
				this.defense = 40;
				this.lifeMax = 350;
				this.soundHit = 29;
				this.soundKilled = 31;
				this.knockBackResist = 0.25f;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
				this.timeLeft = NPC.activeTime * 2;
			}
			else if (this.type == 238)
			{
				this.noGravity = true;
				this.name = "Black Recluse";
				this.width = 36;
				this.height = 36;
				this.aiStyle = 40;
				this.damage = 100;
				this.defense = 40;
				this.lifeMax = 350;
				this.soundHit = 29;
				this.soundKilled = 31;
				this.knockBackResist = 0.25f;
				this.value = 500f;
				this.timeLeft = NPC.activeTime * 2;
				this.npcSlots = 0.5f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 164)
			{
				this.name = "Wall Creeper";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 30;
				this.defense = 10;
				this.lifeMax = 80;
				this.soundHit = 29;
				this.soundKilled = 31;
				this.knockBackResist = 0.25f;
				this.value = 100f;
				this.timeLeft = NPC.activeTime * 2;
				this.npcSlots = 0.5f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 165)
			{
				this.noGravity = true;
				this.name = "Wall Creeper";
				this.width = 36;
				this.height = 36;
				this.aiStyle = 40;
				this.damage = 30;
				this.defense = 10;
				this.lifeMax = 80;
				this.soundHit = 29;
				this.soundKilled = 31;
				this.knockBackResist = 0.25f;
				this.value = 100f;
				this.timeLeft = NPC.activeTime * 2;
				this.npcSlots = 0.5f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 167)
			{
				this.name = "Undead Viking";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 24;
				this.defense = 10;
				this.lifeMax = 70;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 200f;
				this.buffImmune[31] = false;
				this.buffImmune[20] = true;
			}
			else if (this.type == 168)
			{
				this.name = "Corrupt Penguin";
				this.width = 16;
				this.height = 34;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 4;
				this.lifeMax = 70;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 169)
			{
				this.noGravity = true;
				this.name = "Ice Elemental";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 22;
				this.damage = 55;
				this.defense = 20;
				this.lifeMax = 200;
				this.soundHit = 5;
				this.knockBackResist = 0.6f;
				this.soundKilled = 7;
				this.value = 1500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
				this.buffImmune[44] = true;
				this.coldDamage = true;
			}
			else if (this.type == 170)
			{
				this.name = "Pigron";
				this.width = 44;
				this.height = 36;
				this.aiStyle = 2;
				this.damage = 70;
				this.defense = 16;
				this.lifeMax = 210;
				this.soundHit = 27;
				this.soundKilled = 30;
				this.knockBackResist = 0.5f;
				this.value = 2000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 171)
			{
				this.name = "Pigron";
				this.width = 44;
				this.height = 36;
				this.aiStyle = 2;
				this.damage = 70;
				this.defense = 16;
				this.lifeMax = 210;
				this.soundHit = 27;
				this.soundKilled = 30;
				this.knockBackResist = 0.5f;
				this.value = 2000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 172)
			{
				this.name = "Rune Wizard";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 200;
				this.defense = 30;
				this.lifeMax = 600;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.value = 5000f;
				this.buffImmune[20] = true;
				this.rarity = 2;
			}
			else if (this.type == 173)
			{
				this.npcSlots = 1f;
				this.name = "Crimera";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 5;
				this.damage = 22;
				this.defense = 8;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.knockBackResist = 0.5f;
				this.value = 90f;
			}
			else if (this.type == 174)
			{
				this.npcSlots = 1f;
				this.name = "Herpling";
				this.width = 52;
				this.height = 26;
				this.aiStyle = 41;
				this.damage = 65;
				this.defense = 26;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.3f;
				this.value = 450f;
			}
			else if (this.type == 175)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Angry Trapper";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 13;
				this.damage = 100;
				this.defense = 30;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.knockBackResist = 0.25f;
				this.soundKilled = 1;
				this.value = 650f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 176)
			{
				this.name = "Moss Hornet";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 70;
				this.defense = 22;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.knockBackResist = 0.5f;
				this.soundKilled = 1;
				this.value = 600f;
				this.noGravity = true;
				this.buffImmune[20] = true;
				this.npcSlots = 1.5f;
			}
			else if (this.type == 177)
			{
				this.npcSlots = 1f;
				this.name = "Derpling";
				this.width = 58;
				this.height = 44;
				this.aiStyle = 41;
				this.damage = 80;
				this.defense = 26;
				this.lifeMax = 300;
				this.soundHit = 22;
				this.soundKilled = 25;
				this.knockBackResist = 0.5f;
				this.value = 500f;
			}
			else if (this.type == 178)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Steampunker";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 179)
			{
				this.name = "Crimson Axe";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 23;
				this.damage = 80;
				this.defense = 18;
				this.lifeMax = 200;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 180)
			{
				this.name = "Pigron";
				this.width = 44;
				this.height = 36;
				this.aiStyle = 2;
				this.damage = 70;
				this.defense = 16;
				this.lifeMax = 210;
				this.soundHit = 27;
				this.soundKilled = 30;
				this.knockBackResist = 0.5f;
				this.value = 4000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 181)
			{
				this.name = "Face Monster";
				this.width = 18;
				this.height = 44;
				this.aiStyle = 3;
				this.damage = 25;
				this.defense = 10;
				this.lifeMax = 70;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 200f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 182)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Floaty Gross";
				this.width = 24;
				this.height = 62;
				this.aiStyle = 22;
				this.damage = 65;
				this.defense = 18;
				this.lifeMax = 240;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.alpha = 100;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.7f;
			}
			else if (this.type == 183)
			{
				this.name = "Crimslime";
				this.width = 40;
				this.height = 30;
				this.aiStyle = 1;
				this.damage = 60;
				this.defense = 26;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 55;
				this.value = 400f;
				this.scale = 1.1f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 184)
			{
				this.name = "Spiked Ice Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 12;
				this.defense = 8;
				this.lifeMax = 60;
				this.scale = 1.1f;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 50;
				this.value = 200f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.coldDamage = true;
			}
			else if (this.type == 185)
			{
				this.name = "Snow Flinx";
				this.width = 28;
				this.height = 28;
				this.aiStyle = 3;
				this.damage = 26;
				this.defense = 12;
				this.lifeMax = 70;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 1.1f;
				this.value = 200f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.coldDamage = true;
			}
			else if (this.type == 186)
			{
				this.name = "Pincushion Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 8;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.value = 65f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 187)
			{
				this.name = "Slimed Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 13;
				this.defense = 6;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.55f;
				this.value = 55f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 188)
			{
				this.name = "Swamp Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 13;
				this.defense = 8;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.value = 80f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 189)
			{
				this.name = "Twiggy Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 4;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.55f;
				this.value = 70f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 190)
			{
				this.name = "Cataract Eye";
				this.displayName = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 18;
				this.defense = 4;
				this.lifeMax = 65;
				this.soundHit = 1;
				this.knockBackResist = 0.7f;
				this.soundKilled = 1;
				this.value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 191)
			{
				this.name = "Sleepy Eye";
				this.displayName = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 16;
				this.defense = 2;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.knockBackResist = 0.85f;
				this.soundKilled = 1;
				this.value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 192)
			{
				this.name = "Dialated Eye";
				this.displayName = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 18;
				this.defense = 2;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 193)
			{
				this.name = "Green Eye";
				this.displayName = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 20;
				this.defense = 0;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 194)
			{
				this.name = "Purple Eye";
				this.displayName = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 14;
				this.defense = 4;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 195)
			{
				this.name = "Lost Girl";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 42;
				this.damage = 10;
				this.defense = 30;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.rarity = 1;
			}
			else if (this.type == 196)
			{
				this.name = "Nymph";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 35;
				this.defense = 16;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 10000f;
				this.buffImmune[31] = false;
				this.rarity = 1;
			}
			else if (this.type == 197)
			{
				this.name = "Armored Viking";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 28;
				this.lifeMax = 280;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 198)
			{
				this.name = "Lihzahrd";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 38;
				this.defense = 20;
				this.lifeMax = 400;
				this.soundHit = 26;
				this.soundKilled = 29;
				this.knockBackResist = 0.4f;
				this.value = 650f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 199)
			{
				this.name = "Lihzahrd";
				this.width = 42;
				this.height = 30;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 30;
				this.lifeMax = 400;
				this.soundHit = 26;
				this.soundKilled = 29;
				this.knockBackResist = 0f;
				this.value = 650f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 200)
			{
				this.name = "Female Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 12;
				this.defense = 4;
				this.lifeMax = 38;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.value = 65f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 201)
			{
				this.name = "Headache Skeleton";
				this.displayName = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 12;
				this.lifeMax = 55;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 202)
			{
				this.name = "Misassembled Skeleton";
				this.displayName = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 18;
				this.defense = 8;
				this.lifeMax = 65;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 120f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 203)
			{
				this.name = "Pantless Skeleton";
				this.displayName = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 22;
				this.defense = 8;
				this.lifeMax = 60;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 110f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 204)
			{
				this.name = "Spiked Jungle Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 28;
				this.defense = 8;
				this.lifeMax = 65;
				this.scale = 1.15f;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 50;
				this.value = 300f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 205)
			{
				this.name = "Moth";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 5;
				this.damage = 70;
				this.defense = 28;
				this.lifeMax = 1000;
				this.soundHit = 1;
				this.knockBackResist = 0.4f;
				this.soundKilled = 1;
				this.value = 600f;
				this.noGravity = true;
				this.buffImmune[20] = true;
				this.rarity = 2;
			}
			else if (this.type == 206)
			{
				this.name = "Icy Merman";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 30;
				this.lifeMax = 280;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.value = 500f;
				this.buffImmune[31] = false;
				this.coldDamage = true;
			}
			else if (this.type == 207)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Dye Trader";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 208)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Party Girl";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 209)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Cyborg";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 210)
			{
				this.name = "Bee";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 5;
				this.damage = 20;
				this.defense = 5;
				this.lifeMax = 20;
				this.soundHit = 1;
				this.knockBackResist = 0.5f;
				this.soundKilled = 1;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 211)
			{
				this.name = "Bee";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 5;
				this.damage = 15;
				this.defense = 2;
				this.lifeMax = 10;
				this.soundHit = 1;
				this.knockBackResist = 0.5f;
				this.soundKilled = 1;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 212)
			{
				this.name = "Pirate Deckhand";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 35;
				this.defense = 17;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.4f;
				this.value = 700f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 213)
			{
				this.name = "Pirate Corsair";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 22;
				this.lifeMax = 450;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.2f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 214)
			{
				this.name = "Pirate Deadeye";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 30;
				this.defense = 14;
				this.lifeMax = 225;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.3f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 215)
			{
				this.name = "Pirate Crossbower";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 35;
				this.defense = 20;
				this.lifeMax = 350;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.35f;
				this.value = 1500f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 216)
			{
				this.name = "Pirate Captain";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 30;
				this.lifeMax = 3000;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.value = 50000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = true;
			}
			else if (this.type == 217)
			{
				this.name = "Cochineal Beetle";
				this.width = 28;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 16;
				this.value = 60f;
			}
			else if (this.type == 218)
			{
				this.name = "Cyan Beetle";
				this.width = 28;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 16;
				this.value = 60f;
			}
			else if (this.type == 219)
			{
				this.name = "Lac Beetle";
				this.width = 28;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 16;
				this.value = 60f;
			}
			else if (this.type == 220)
			{
				this.name = "Sea Snail";
				this.width = 28;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 60f;
			}
			else if (this.type == 221)
			{
				this.noGravity = true;
				this.name = "Squid";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 20;
				this.defense = 2;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 100f;
				this.alpha = 20;
			}
			else if (this.type == 222)
			{
				this.name = "Queen Bee";
				this.width = 66;
				this.height = 66;
				this.aiStyle = 43;
				this.damage = 30;
				this.defense = 8;
				this.lifeMax = 3400;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.timeLeft = NPC.activeTime * 30;
				this.boss = true;
				this.value = 100000f;
				this.npcSlots = 7f;
			}
			else if (this.type == 223)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 8;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.value = 70f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 224)
			{
				this.name = "Flying Fish";
				this.width = 32;
				this.height = 18;
				this.aiStyle = 44;
				this.damage = 9;
				this.defense = 4;
				this.lifeMax = 20;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 90f;
				this.buffImmune[31] = false;
			}
			if (this.type == 225)
			{
				this.name = "Umbrella Slime";
				this.width = 38;
				this.height = 26;
				this.aiStyle = 1;
				this.damage = 10;
				this.defense = 5;
				this.lifeMax = 35;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.75f;
				this.value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 226)
			{
				this.npcSlots = 0.5f;
				this.name = "Flying Snake";
				this.width = 34;
				this.height = 50;
				this.aiStyle = 14;
				this.damage = 85;
				this.defense = 28;
				this.lifeMax = 260;
				this.soundHit = 23;
				this.knockBackResist = 0.65f;
				this.soundKilled = 26;
				this.value = 400f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 227)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Painter";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 228)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Witch Doctor";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 229)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Pirate";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 230)
			{
				this.name = "Goldfish";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 261;
			}
			else if (this.type == 231)
			{
				this.name = "Hornet Fatty";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 22;
				this.defense = 16;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.knockBackResist = 0.3f;
				this.soundKilled = 1;
				this.value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 232)
			{
				this.name = "Hornet Honey";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 28;
				this.defense = 12;
				this.lifeMax = 42;
				this.soundHit = 1;
				this.knockBackResist = 0.6f;
				this.soundKilled = 1;
				this.value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 233)
			{
				this.name = "Hornet Leafy";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 30;
				this.defense = 14;
				this.lifeMax = 38;
				this.soundHit = 1;
				this.knockBackResist = 0.45f;
				this.soundKilled = 1;
				this.value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 234)
			{
				this.name = "Hornet Spikey";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 32;
				this.defense = 6;
				this.lifeMax = 42;
				this.soundHit = 1;
				this.knockBackResist = 0.55f;
				this.soundKilled = 1;
				this.value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 235)
			{
				this.name = "Hornet Stingy";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 34;
				this.defense = 4;
				this.lifeMax = 38;
				this.soundHit = 1;
				this.knockBackResist = 0.6f;
				this.soundKilled = 1;
				this.value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 236)
			{
				this.name = "Jungle Creeper";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 14;
				this.lifeMax = 120;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.25f;
				this.value = 1000f;
				this.timeLeft = NPC.activeTime * 2;
				this.npcSlots = 0.75f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 237)
			{
				this.noGravity = true;
				this.name = "Jungle Creeper";
				this.width = 36;
				this.height = 36;
				this.aiStyle = 40;
				this.damage = 50;
				this.defense = 14;
				this.lifeMax = 120;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.25f;
				this.value = 1000f;
				this.timeLeft = NPC.activeTime * 2;
				this.npcSlots = 0.75f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 239)
			{
				this.name = "Blood Crawler";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 30;
				this.defense = 8;
				this.lifeMax = 60;
				this.soundHit = 20;
				this.soundKilled = 23;
				this.knockBackResist = 0.5f;
				this.value = 130f;
				this.timeLeft = NPC.activeTime * 2;
				this.buffImmune[20] = true;
			}
			else if (this.type == 240)
			{
				this.noGravity = true;
				this.name = "Blood Crawler";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 40;
				this.damage = 30;
				this.defense = 8;
				this.lifeMax = 60;
				this.soundHit = 20;
				this.soundKilled = 23;
				this.knockBackResist = 0.5f;
				this.value = 130f;
				this.timeLeft = NPC.activeTime * 2;
				this.buffImmune[20] = true;
			}
			else if (this.type == 241)
			{
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.name = "Blood Feeder";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 30;
				this.defense = 4;
				this.lifeMax = 20;
				this.soundHit = 13;
				this.soundKilled = 19;
				this.value = 350f;
			}
			else if (this.type == 242)
			{
				this.noGravity = true;
				this.name = "Blood Jelly";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 75;
				this.defense = 20;
				this.lifeMax = 150;
				this.soundHit = 13;
				this.soundKilled = 19;
				this.value = 800f;
				this.alpha = 20;
			}
			else if (this.type == 243)
			{
				this.name = "Ice Golem";
				this.width = 30;
				this.height = 114;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 32;
				this.lifeMax = 4000;
				this.soundHit = 5;
				this.soundKilled = 7;
				this.knockBackResist = 0.05f;
				this.value = (float)Item.buyPrice(0, 1, 50, 0);
				this.buffImmune[20] = true;
				this.buffImmune[44] = true;
				this.coldDamage = true;
				this.rarity = 2;
			}
			else if (this.type == 244)
			{
				this.name = "Rainbow Slime";
				this.width = 60;
				this.height = 42;
				this.aiStyle = 1;
				this.damage = 85;
				this.defense = 26;
				this.lifeMax = 400;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 175;
				this.value = (float)Item.buyPrice(0, 0, 20, 0);
				this.knockBackResist = 0.3f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.rarity = 1;
			}
			else if (this.type == 245)
			{
				this.name = "Golem";
				this.width = 140;
				this.height = 140;
				this.aiStyle = 45;
				this.damage = 72;
				this.defense = 26;
				this.lifeMax = 9000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.knockBackResist = 0f;
				this.value = (float)Item.buyPrice(0, 15, 0, 0);
				this.alpha = 255;
				this.boss = true;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type == 246)
			{
				this.noGravity = true;
				this.name = "Golem Head";
				this.width = 70;
				this.height = 70;
				this.aiStyle = 46;
				this.damage = 64;
				this.defense = 20;
				this.lifeMax = 16000;
				this.soundHit = 4;
				this.soundKilled = 0;
				this.knockBackResist = 0f;
				this.alpha = 255;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type == 247 || this.type == 248)
			{
				this.noGravity = true;
				this.name = "Golem Fist";
				this.width = 40;
				this.height = 30;
				this.aiStyle = 47;
				this.damage = 59;
				this.defense = 28;
				this.lifeMax = 7000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.alpha = 255;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type == 249)
			{
				this.noGravity = true;
				this.name = "Golem Head";
				this.width = 70;
				this.height = 70;
				this.aiStyle = 48;
				this.damage = 80;
				this.defense = 32;
				this.lifeMax = 11000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.knockBackResist = 0f;
				this.dontTakeDamage = true;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type == 250)
			{
				this.name = "Angry Nimbus";
				this.width = 34;
				this.height = 26;
				this.aiStyle = 49;
				this.damage = 50;
				this.defense = 24;
				this.lifeMax = 300;
				this.soundHit = 30;
				this.soundKilled = 33;
				this.knockBackResist = 0.3f;
				this.value = 300f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 251)
			{
				this.name = "Eyezor";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 30;
				this.lifeMax = 1000;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.value = (float)Item.buyPrice(0, 0, 50, 0);
				this.buffImmune[31] = false;
			}
			else if (this.type == 252)
			{
				this.noGravity = true;
				this.npcSlots = 0.5f;
				this.name = "Parrot";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 80;
				this.defense = 12;
				this.lifeMax = 100;
				this.soundHit = 46;
				this.knockBackResist = 0.7f;
				this.soundKilled = 48;
				this.value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 254)
			{
				this.name = "Spore Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 40;
				this.defense = 10;
				this.lifeMax = 180;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 255)
			{
				this.name = "Spore Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 38;
				this.defense = 16;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.3f;
				this.value = 1200f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 256)
			{
				this.noGravity = true;
				this.name = "Fungo Fish";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 90;
				this.defense = 20;
				this.lifeMax = 140;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.value = 1200f;
				this.alpha = 20;
				this.npcSlots = 0.3f;
			}
			else if (this.type == 257)
			{
				this.name = "Anomura Fungus";
				this.width = 44;
				this.height = 34;
				this.aiStyle = 3;
				this.damage = 38;
				this.defense = 24;
				this.lifeMax = 230;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.3f;
				this.value = 1300f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.3f;
			}
			else if (this.type == 258)
			{
				this.name = "Mushi Ladybug";
				this.width = 30;
				this.height = 24;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 16;
				this.lifeMax = 220;
				this.soundHit = 45;
				this.soundKilled = 47;
				this.knockBackResist = 0.3f;
				this.value = 1500f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.3f;
			}
			else if (this.type == 259)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Fungi Bulb";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 13;
				this.damage = 24;
				this.defense = 4;
				this.lifeMax = 90;
				this.soundHit = 1;
				this.knockBackResist = 0f;
				this.soundKilled = 1;
				this.value = 350f;
				this.buffImmune[20] = true;
				this.npcSlots = 0.3f;
			}
			else if (this.type == 260)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Giant Fungi Bulb";
				this.width = 36;
				this.height = 36;
				this.aiStyle = 13;
				this.damage = 70;
				this.defense = 20;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.knockBackResist = 0f;
				this.soundKilled = 1;
				this.value = 1250f;
				this.buffImmune[20] = true;
				this.npcSlots = 0.3f;
			}
			else if (this.type == 261)
			{
				this.name = "Fungi Spore";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 50;
				this.damage = 80;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.npcSlots = 0f;
			}
			else if (this.type == 262)
			{
				this.noTileCollide = true;
				this.name = "Plantera";
				this.width = 86;
				this.height = 86;
				this.aiStyle = 51;
				this.damage = 50;
				this.defense = 14;
				this.lifeMax = 30000;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.value = (float)Item.buyPrice(0, 15, 0, 0);
				this.noGravity = true;
				this.boss = true;
				this.npcSlots = 16f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 263)
			{
				this.noTileCollide = true;
				this.noGravity = true;
				this.name = "Plantera's Hook";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 52;
				this.damage = 60;
				this.defense = 24;
				this.lifeMax = 4000;
				this.dontTakeDamage = true;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.buffImmune[20] = true;
			}
			else if (this.type == 264)
			{
				this.name = "Plantera's Tentacle";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 53;
				this.damage = 60;
				this.defense = 20;
				this.lifeMax = 1000;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 265)
			{
				this.name = "Spore";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 50;
				this.damage = 70;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.npcSlots = 0f;
			}
			else if (this.type == 266)
			{
				this.name = "Brain of Cthulhu";
				this.dontTakeDamage = true;
				this.width = 160;
				this.height = 110;
				this.aiStyle = 54;
				this.damage = 30;
				this.defense = 14;
				this.lifeMax = 1000;
				this.soundHit = 9;
				this.soundKilled = 11;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.timeLeft = NPC.activeTime * 30;
				this.boss = true;
				this.value = 50000f;
				this.npcSlots = 6f;
			}
			else if (this.type == 267)
			{
				this.name = "Creeper";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 55;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 100;
				this.soundHit = 9;
				this.soundKilled = 11;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0.8f;
			}
			else if (this.type == 268)
			{
				this.noGravity = true;
				this.name = "Ichor Sticker";
				this.width = 28;
				this.height = 56;
				this.aiStyle = 22;
				this.damage = 55;
				this.defense = 20;
				this.lifeMax = 340;
				this.soundHit = 13;
				this.soundKilled = 19;
				this.knockBackResist = 0.6f;
				this.value = 450f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 269)
			{
				this.name = "Rusty Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 34;
				this.lifeMax = 550;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 270)
			{
				this.name = "Rusty Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 55;
				this.defense = 50;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.2f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 271)
			{
				this.name = "Rusty Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 40;
				this.lifeMax = 450;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.25f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 272)
			{
				this.name = "Rusty Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 75;
				this.defense = 28;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.35f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 273)
			{
				this.name = "Blue Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 45;
				this.defense = 50;
				this.lifeMax = 500;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.15f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 274)
			{
				this.name = "Blue Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 65;
				this.defense = 34;
				this.lifeMax = 350;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 275)
			{
				this.name = "Blue Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 45;
				this.defense = 50;
				this.lifeMax = 550;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.15f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 276)
			{
				this.name = "Blue Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 85;
				this.defense = 54;
				this.lifeMax = 500;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.2f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 277)
			{
				this.name = "Hell Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 32;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 278)
			{
				this.name = "Hell Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 65;
				this.defense = 48;
				this.lifeMax = 450;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 279)
			{
				this.name = "Hell Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 40;
				this.defense = 54;
				this.lifeMax = 500;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.2f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 280)
			{
				this.name = "Hell Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 75;
				this.defense = 34;
				this.lifeMax = 500;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 281)
			{
				this.name = "Ragged Caster";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 282)
			{
				this.name = "Ragged Caster";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 35;
				this.defense = 28;
				this.lifeMax = 450;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 283)
			{
				this.name = "Necromancer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 50;
				this.defense = 18;
				this.lifeMax = 300;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.55f;
				this.value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 284)
			{
				this.name = "Necromancer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 35;
				this.defense = 24;
				this.lifeMax = 450;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 285)
			{
				this.name = "Diabolist";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 50;
				this.defense = 12;
				this.lifeMax = 200;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.7f;
				this.value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 286)
			{
				this.name = "Diabolist";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 60;
				this.defense = 10;
				this.lifeMax = 250;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.65f;
				this.value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 287)
			{
				this.name = "Bone Lee";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 90;
				this.defense = 42;
				this.lifeMax = 1000;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.value = 2000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.rarity = 1;
			}
			else if (this.type == 288)
			{
				this.name = "Dungeon Spirit";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 56;
				this.damage = 70;
				this.defense = 30;
				this.lifeMax = 200;
				this.knockBackResist = 0.2f;
				this.soundHit = 36;
				this.soundKilled = 39;
				this.value = 500f;
				this.noTileCollide = true;
				this.noGravity = true;
				flag = true;
			}
			else if (this.type == 289)
			{
				this.name = "Giant Cursed Skull";
				this.width = 44;
				this.height = 44;
				this.aiStyle = 10;
				this.damage = 60;
				this.defense = 20;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.noGravity = true;
				this.noTileCollide = true;
				this.value = 150f;
				this.knockBackResist = 0.2f;
				this.npcSlots = 0.75f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 290)
			{
				this.name = "Paladin";
				this.width = 34;
				this.height = 62;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 50;
				this.lifeMax = 5000;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.knockBackResist = 0f;
				this.value = 50000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = true;
				this.rarity = 1;
			}
			else if (this.type == 291)
			{
				this.name = "Skeleton Sniper";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 28;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.rarity = 2;
			}
			else if (this.type == 292)
			{
				this.name = "Tactical Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 28;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.rarity = 2;
			}
			else if (this.type == 293)
			{
				this.name = "Skeleton Commando";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 28;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.rarity = 2;
			}
			else if (this.type == 294)
			{
				this.name = "Angry Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 34;
				this.defense = 6;
				this.lifeMax = 70;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.9f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 295)
			{
				this.name = "Angry Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 28;
				this.defense = 12;
				this.lifeMax = 70;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.7f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 296)
			{
				this.name = "Angry Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 24;
				this.defense = 14;
				this.lifeMax = 120;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 299)
			{
				this.name = "Squirrel";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2018;
			}
			else if (this.type == 300)
			{
				this.name = "Mouse";
				this.width = 14;
				this.height = 12;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 4;
				this.npcSlots = 0.25f;
				this.catchItem = 2003;
			}
			else if (this.type == 301)
			{
				this.name = "Raven";
				this.width = 36;
				this.height = 26;
				this.aiStyle = 17;
				this.damage = 12;
				this.defense = 2;
				this.lifeMax = 35;
				this.soundHit = 1;
				this.knockBackResist = 0.85f;
				this.soundKilled = 1;
				this.value = 50f;
			}
			if (this.type == 302)
			{
				this.name = "Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 7;
				this.defense = 2;
				this.lifeMax = 25;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 304)
			{
				this.name = "Hoppin' Jack";
				this.width = 34;
				this.height = 28;
				this.aiStyle = 1;
				this.damage = 80;
				this.defense = 20;
				this.lifeMax = 175;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 500f;
				this.scale = 1.1f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.knockBackResist = 0.5f;
				this.npcSlots = 0.3f;
			}
			else if (this.type >= 305 && this.type <= 314)
			{
				this.name = "Scarecrow";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.value = 1200f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
				if (this.type == 305 || this.type == 310)
				{
					this.damage = 60;
					this.defense = 18;
					this.lifeMax = 500;
					this.knockBackResist = 0.4f;
				}
				else if (this.type == 306 || this.type == 311)
				{
					this.damage = 52;
					this.defense = 14;
					this.lifeMax = 400;
					this.knockBackResist = 0.2f;
					this.scale = 1.05f;
				}
				else if (this.type == 307 || this.type == 312)
				{
					this.damage = 78;
					this.defense = 16;
					this.lifeMax = 600;
					this.knockBackResist = 0.25f;
					this.scale = 0.9f;
				}
				else if (this.type == 308 || this.type == 313)
				{
					this.damage = 66;
					this.defense = 14;
					this.lifeMax = 650;
					this.knockBackResist = 0.35f;
					this.scale = 0.95f;
				}
				else if (this.type == 309 || this.type == 314)
				{
					this.damage = 52;
					this.defense = 26;
					this.lifeMax = 450;
					this.knockBackResist = 0.5f;
					this.scale = 1.1f;
				}
			}
			else if (this.type == 315)
			{
				this.name = "Headless Horseman";
				this.width = 74;
				this.height = 70;
				this.aiStyle = 26;
				this.damage = 130;
				this.defense = 40;
				this.lifeMax = 10000;
				this.soundHit = 12;
				this.soundKilled = 18;
				this.knockBackResist = 0f;
				this.value = 10000f;
				flag = true;
			}
			else if (this.type == 316)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Ghost";
				this.width = 24;
				this.height = 44;
				this.aiStyle = 22;
				this.damage = 40;
				this.defense = 14;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.alpha = 100;
				this.value = 700f;
				flag = true;
				this.knockBackResist = 0.7f;
			}
			else if (this.type == 317)
			{
				this.name = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 16;
				this.defense = 6;
				this.lifeMax = 75;
				this.soundHit = 1;
				this.knockBackResist = 0.7f;
				this.soundKilled = 1;
				this.value = 100f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 318)
			{
				this.name = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 20;
				this.defense = 4;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.knockBackResist = 0.65f;
				this.soundKilled = 1;
				this.value = 100f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 319)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 6;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.value = 85f;
				this.buffImmune[31] = false;
				this.scale = 0.9f;
			}
			else if (this.type == 320)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 15;
				this.defense = 8;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 105f;
				this.buffImmune[31] = false;
				this.scale = 1.05f;
			}
			else if (this.type == 321)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 14;
				this.lifeMax = 34;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.value = 120f;
				this.buffImmune[31] = false;
				this.scale = 1.1f;
			}
			else if (this.type == 322)
			{
				this.name = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 23;
				this.defense = 0;
				this.lifeMax = 115;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.65f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 323)
			{
				this.name = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 18;
				this.defense = 10;
				this.lifeMax = 65;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 120f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 324)
			{
				this.name = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 22;
				this.defense = 10;
				this.lifeMax = 70;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.scale = 1.05f;
			}
			else if (this.type == 325)
			{
				this.name = "Mourning Wood";
				this.width = 164;
				this.height = 154;
				this.aiStyle = 57;
				this.damage = 120;
				this.defense = 28;
				this.lifeMax = 12000;
				this.soundHit = 7;
				this.soundKilled = 5;
				this.knockBackResist = 0f;
				this.value = 10000f;
				flag = true;
			}
			else if (this.type == 326)
			{
				this.name = "Splinterling";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 32;
				this.lifeMax = 900;
				this.soundHit = 7;
				this.soundKilled = 6;
				this.knockBackResist = 0.2f;
				this.value = 2000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 327)
			{
				this.name = "Pumpking";
				this.width = 100;
				this.height = 100;
				this.aiStyle = 58;
				this.damage = 50;
				this.defense = 36;
				this.lifeMax = 22000;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.value = 50000f;
				this.knockBackResist = 0f;
				flag = true;
			}
			else if (this.type == 328)
			{
				this.name = "Pumpking";
				this.width = 80;
				this.height = 80;
				this.aiStyle = 59;
				this.damage = 65;
				this.defense = 14;
				this.lifeMax = 5000;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				flag = true;
				this.dontTakeDamage = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 329)
			{
				this.name = "Hellhound";
				this.width = 46;
				this.height = 30;
				this.aiStyle = 26;
				this.damage = 80;
				this.defense = 38;
				this.lifeMax = 1200;
				this.soundHit = 1;
				this.soundKilled = 5;
				this.knockBackResist = 0.3f;
				this.value = 3000f;
				flag = true;
			}
			else if (this.type == 330)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Poltergeist";
				this.width = 24;
				this.height = 44;
				this.aiStyle = 22;
				this.damage = 90;
				this.defense = 44;
				this.lifeMax = 2000;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.alpha = 100;
				this.value = 4500f;
				flag = true;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 331)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 6;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 60f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 332)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 6;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 60f;
				this.buffImmune[31] = false;
			}
			if (this.type == 333)
			{
				this.name = "Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 7;
				this.defense = 2;
				this.lifeMax = 25;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			if (this.type == 334)
			{
				this.name = "Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 6;
				this.defense = 2;
				this.lifeMax = 23;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.scale = 0.9f;
				this.value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			if (this.type == 335)
			{
				this.name = "Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 8;
				this.defense = 3;
				this.lifeMax = 29;
				this.scale = 1.05f;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			if (this.type == 336)
			{
				this.name = "Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 5;
				this.defense = 1;
				this.lifeMax = 22;
				this.scale = 0.85f;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type >= 338 && this.type <= 340)
			{
				this.name = "Zombie Elf";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 1200f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
				if (this.type == 338)
				{
					this.damage = 65;
					this.defense = 18;
					this.lifeMax = 600;
					this.knockBackResist = 0.4f;
				}
				else if (this.type == 339)
				{
					this.damage = 52;
					this.defense = 24;
					this.lifeMax = 700;
					this.knockBackResist = 0.2f;
					this.scale = 1.05f;
				}
				else if (this.type == 340)
				{
					this.damage = 78;
					this.defense = 14;
					this.lifeMax = 500;
					this.knockBackResist = 0.25f;
					this.scale = 0.9f;
				}
			}
			else if (this.type == 341)
			{
				this.name = "Present Mimic";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 25;
				this.damage = 100;
				this.defense = 32;
				this.lifeMax = 900;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.value = (float)Item.buyPrice(0, 0, 20, 0);
				this.knockBackResist = 0.25f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 342)
			{
				this.name = "Gingerbread Man";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 90;
				this.defense = 26;
				this.lifeMax = 750;
				this.soundHit = 7;
				this.soundKilled = 6;
				this.knockBackResist = 0.2f;
				this.value = 1800f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 343)
			{
				this.name = "Yeti";
				this.width = 38;
				this.height = 78;
				this.aiStyle = 3;
				this.damage = 140;
				this.defense = 50;
				this.lifeMax = 3500;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.value = 3000f;
				this.buffImmune[31] = false;
				this.npcSlots = 2f;
			}
			else if (this.type == 344)
			{
				this.name = "Everscream";
				this.width = 172;
				this.height = 130;
				this.aiStyle = 57;
				this.damage = 110;
				this.defense = 38;
				this.lifeMax = 13000;
				this.soundHit = 7;
				this.soundKilled = 5;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.buffImmune[20] = true;
				this.npcSlots = 3f;
			}
			else if (this.type == 345)
			{
				this.name = "Ice Queen";
				this.width = 130;
				this.height = 140;
				this.aiStyle = 60;
				this.damage = 120;
				this.defense = 38;
				this.lifeMax = 34000;
				this.soundHit = 7;
				this.soundKilled = 5;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.buffImmune[20] = true;
				this.noTileCollide = true;
				this.noGravity = true;
				this.npcSlots = 5f;
				this.coldDamage = true;
			}
			else if (this.type == 346)
			{
				this.name = "Santa-NK1";
				this.width = 112;
				this.height = 140;
				this.aiStyle = 61;
				this.damage = 120;
				this.defense = 56;
				this.lifeMax = 18000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.buffImmune[20] = true;
				this.npcSlots = 4f;
			}
			else if (this.type == 347)
			{
				this.name = "Elf Copter";
				this.width = 50;
				this.height = 50;
				this.aiStyle = 62;
				this.damage = 60;
				this.defense = 28;
				this.lifeMax = 1200;
				this.soundHit = 4;
				this.knockBackResist = 0.4f;
				this.soundKilled = 14;
				this.value = 1000f;
				this.noTileCollide = true;
				this.noGravity = true;
				this.npcSlots = 1.5f;
			}
			else if (this.type == 348)
			{
				this.name = "Nutcracker";
				this.width = 28;
				this.height = 76;
				this.aiStyle = 3;
				this.damage = 80;
				this.defense = 26;
				this.lifeMax = 1800;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.4f;
				this.value = 1500f;
				this.buffImmune[31] = false;
				this.npcSlots = 1.5f;
			}
			else if (this.type == 349)
			{
				this.name = "Nutcracker";
				this.width = 28;
				this.height = 76;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 42;
				this.lifeMax = 1800;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.1f;
				this.value = 1500f;
				this.buffImmune[31] = false;
				this.npcSlots = 1.5f;
			}
			else if (this.type == 350)
			{
				this.name = "Elf Archer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 30;
				this.lifeMax = 900;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.45f;
				this.value = 900f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 351)
			{
				this.name = "Krampus";
				this.width = 18;
				this.height = 90;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 40;
				this.lifeMax = 2500;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.1f;
				this.value = 3000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.npcSlots = 1.75f;
			}
			else if (this.type == 352)
			{
				this.name = "Flocko";
				this.width = 54;
				this.height = 54;
				this.aiStyle = 63;
				this.damage = 75;
				this.defense = 8;
				this.lifeMax = 450;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.4f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.npcSlots = 2f;
				this.coldDamage = true;
			}
			else if (this.type == 353)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Stylist";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 354)
			{
				this.friendly = true;
				this.name = "Webbed Stylist";
				this.width = 18;
				this.height = 34;
				this.aiStyle = 0;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.scale = 0.9f;
				this.rarity = 1;
			}
			else if (this.type == 355)
			{
				this.name = "Firefly";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 64;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.2f;
				this.noGravity = true;
				this.catchItem = 1992;
			}
			else if (this.type == 356)
			{
				this.name = "Butterfly";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 65;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.25f;
				this.noGravity = true;
				this.catchItem = 1994;
			}
			else if (this.type == 357)
			{
				this.name = "Worm";
				this.width = 10;
				this.height = 4;
				this.aiStyle = 66;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.1f;
				this.catchItem = 2002;
				this.friendly = true;
			}
			else if (this.type == 358)
			{
				this.name = "Lightning Bug";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 64;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.2f;
				this.noGravity = true;
				this.catchItem = 2004;
			}
			else if (this.type == 359)
			{
				this.name = "Snail";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 67;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.catchItem = 2006;
			}
			else if (this.type == 360)
			{
				this.name = "Glowing Snail";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 67;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.catchItem = 2007;
			}
			else if (this.type == 361)
			{
				this.name = "Frog";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2121;
			}
			else if (this.type == 362)
			{
				this.name = "Duck";
				this.width = 22;
				this.height = 26;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2122;
			}
			else if (this.type == 363)
			{
				this.name = "Duck";
				this.width = 28;
				this.height = 22;
				this.aiStyle = 68;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2122;
			}
			else if (this.type == 364)
			{
				this.name = "Duck";
				this.width = 22;
				this.height = 26;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2123;
			}
			else if (this.type == 365)
			{
				this.name = "Duck";
				this.width = 28;
				this.height = 22;
				this.aiStyle = 68;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2123;
			}
			else if (this.type == 366 || this.type == 367)
			{
				this.name = "Scorpion";
				this.width = 26;
				this.height = 18;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = (short)(2156 + this.type - 366);
			}
			else if (this.type == 368)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Travelling Merchant";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 369)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Angler";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 370)
			{
				this.name = "Duke Fishron";
				this.width = 150;
				this.height = 100;
				this.aiStyle = 69;
				this.damage = 100;
				this.defense = 50;
				this.lifeMax = 50000;
				this.knockBackResist = 0f;
				this.noTileCollide = true;
				this.noGravity = true;
				this.npcSlots = 10f;
				this.soundHit = 14;
				this.soundKilled = 20;
				this.value = 10000f;
				this.boss = true;
				this.netAlways = true;
				this.timeLeft = NPC.activeTime * 30;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[31] = true;
				this.buffImmune[44] = true;
			}
			else if (this.type == 371)
			{
				this.name = "Detonating Bubble";
				this.width = 36;
				this.height = 36;
				this.aiStyle = 70;
				this.damage = 100;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 3;
				this.soundKilled = 3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.alpha = 255;
			}
			else if (this.type == 372)
			{
				this.noGravity = true;
				this.name = "Sharkron";
				this.width = 120;
				this.height = 24;
				this.aiStyle = 71;
				this.damage = 100;
				this.defense = 100;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.alpha = 255;
			}
			else if (this.type == 373)
			{
				this.noGravity = true;
				this.name = "Sharkron2";
				this.displayName = "Sharkron";
				this.width = 100;
				this.height = 24;
				this.aiStyle = 71;
				this.damage = 120;
				this.defense = 100;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.alpha = 255;
			}
			else if (this.type == 374)
			{
				this.name = "Truffle Worm";
				this.width = 20;
				this.height = 10;
				this.aiStyle = 66;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.15f;
				this.catchItem = 2673;
				this.rarity = 4;
			}
			else if (this.type == 375)
			{
				this.displayName = "Truffle Worm";
				this.name = "Truffle Worm Digger";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 6;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.npcSlots = 0.15f;
				this.catchItem = 2673;
			}
			else if (this.type == 376)
			{
				this.friendly = true;
				this.name = "Sleeping Angler";
				this.width = 34;
				this.height = 8;
				this.aiStyle = 0;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.5f;
				this.scale = 0.9f;
			}
			else if (this.type == 377)
			{
				this.name = "Grasshopper";
				this.width = 14;
				this.height = 12;
				this.aiStyle = 1;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.friendly = true;
				this.catchItem = 2740;
				this.npcSlots = 0.1f;
			}
			else if (this.type == 378)
			{
				this.npcSlots = 1f;
				this.name = "Chattering Teeth Bomb";
				this.width = 20;
				this.height = 26;
				this.aiStyle = 41;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.value = 450f;
			}
			else if (this.type >= 379 && this.type <= 380)
			{
				this.name = "Lunatic Cultist Archer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 45;
				this.defense = 14;
				this.lifeMax = 210;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.55f;
				this.value = 1000f;
				this.npcSlots = 0f;
				this.lavaImmune = true;
				this.netAlways = true;
				this.chaseable = false;
			}
			else if (this.type >= 381 && this.type <= 382)
			{
				this.name = "Martian Ranger";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 25;
				this.lifeMax = 350;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.35f;
				this.value = 1000f;
			}
			else if (this.type == 383)
			{
				this.name = "Martian Officer";
				this.lifeMax = 300;
				this.defense = 50;
				this.damage = 75;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.soundHit = 43;
				this.soundKilled = 45;
				this.value = 1200f;
				this.knockBackResist = 0.25f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 384)
			{
				this.name = "Bubble Shield";
				this.lifeMax = 1000;
				this.width = 18;
				this.defense = 20;
				this.height = 40;
				this.aiStyle = 72;
				this.soundHit = 1;
				this.soundKilled = 1;
				flag = true;
				this.npcSlots = 0f;
				this.noTileCollide = true;
				this.canGhostHeal = false;
			}
			else if (this.type == 385)
			{
				this.name = "Martian Grunty";
				this.lifeMax = 750;
				this.defense = 30;
				this.damage = 80;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.soundHit = 43;
				this.soundKilled = 45;
				this.value = 600f;
				this.knockBackResist = 0f;
				this.npcSlots = 0.75f;
			}
			else if (this.type == 386)
			{
				this.name = "Martian Engineer";
				this.lifeMax = 400;
				this.defense = 34;
				this.damage = 40;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.soundHit = 43;
				this.soundKilled = 45;
				this.value = 1200f;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 387)
			{
				this.name = "Tesla Turret";
				this.width = 20;
				this.height = 50;
				this.aiStyle = 73;
				this.damage = 10;
				this.defense = 40;
				this.lifeMax = 200;
				this.soundHit = 53;
				this.soundKilled = 56;
				this.knockBackResist = 0f;
				this.buffImmune[31] = true;
				this.canGhostHeal = false;
			}
			else if (this.type == 388)
			{
				this.name = "Martian Drone";
				this.width = 40;
				this.height = 30;
				this.aiStyle = 74;
				this.damage = 60;
				this.defense = 16;
				this.lifeMax = 300;
				this.soundHit = 42;
				this.knockBackResist = 0.4f;
				this.soundKilled = 44;
				this.value = 1000f;
				this.noTileCollide = true;
				this.noGravity = true;
				this.npcSlots = 1.5f;
				this.canGhostHeal = false;
			}
			else if (this.type == 389)
			{
				this.name = "Gigazapper";
				this.lifeMax = 600;
				this.defense = 38;
				this.damage = 75;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.soundHit = 39;
				this.soundKilled = 57;
				this.value = 1200f;
				this.npcSlots = 0.5f;
				this.knockBackResist = 0.3f;
			}
			else if (this.type == 390)
			{
				this.name = "Scutlix Gunner";
				this.damage = 65;
				this.defense = 30;
				this.lifeMax = 350;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 75;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 1200f;
				this.npcSlots = 0.5f;
			}
			else if (this.type == 391)
			{
				this.name = "Scutlix";
				this.lifeMax = 600;
				this.defense = 30;
				this.damage = 85;
				this.width = 60;
				this.height = 40;
				this.aiStyle = 3;
				this.soundHit = 51;
				this.soundKilled = 54;
				this.value = 1200f;
				this.npcSlots = 0.5f;
				this.knockBackResist = 0.1f;
			}
			else if (this.type == 392)
			{
				this.name = "Martian Saucer";
				this.lifeMax = 100;
				this.defense = 100;
				this.damage = 50;
				this.width = 150;
				this.height = 80;
				this.aiStyle = 75;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.value = 0f;
				this.npcSlots = 0f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.dontTakeDamage = true;
				flag = true;
				this.netAlways = true;
			}
			else if (this.type == 393)
			{
				this.name = "Saucer Turret";
				this.lifeMax = 5000;
				this.defense = 20;
				this.damage = 60;
				this.width = 40;
				this.height = 16;
				this.aiStyle = 75;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.value = 0f;
				this.npcSlots = 1f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				flag = true;
				this.netAlways = true;
			}
			else if (this.type == 394)
			{
				this.name = "Saucer Cannon";
				this.lifeMax = 3500;
				this.defense = 20;
				this.damage = 60;
				this.width = 46;
				this.height = 36;
				this.aiStyle = 75;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.value = 0f;
				this.npcSlots = 1f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				flag = true;
				this.netAlways = true;
			}
			else if (this.type == 395)
			{
				this.name = "Saucer Core";
				this.lifeMax = 10000;
				this.defense = 0;
				this.damage = 80;
				this.width = 46;
				this.height = 36;
				this.aiStyle = 76;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.value = 0f;
				this.npcSlots = 6f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.dontTakeDamage = true;
				this.boss = true;
				flag = true;
				this.netAlways = true;
			}
			else if (this.type == 399)
			{
				this.name = "Martian Probe";
				this.defense = 5;
				this.damage = 5;
				this.lifeMax = 500;
				this.aiStyle = 80;
				this.width = 42;
				this.height = 72;
				this.value = 0f;
				this.knockBackResist = 0f;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.npcSlots = 0f;
				this.noGravity = true;
				this.timeLeft = NPC.activeTime * 30;
				this.chaseable = false;
				this.netAlways = true;
				this.rarity = 1;
			}
			else if (this.type == 396)
			{
				this.name = "Moon Lord Head";
				this.lifeMax = 45000;
				this.defense = 50;
				this.damage = 0;
				this.width = 38;
				this.height = 56;
				this.aiStyle = 79;
				this.soundHit = 57;
				this.soundKilled = 62;
				this.value = 0f;
				this.npcSlots = 6f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.boss = true;
				this.hide = true;
				this.netAlways = true;
			}
			else if (this.type == 397)
			{
				this.name = "Moon Lord Hand";
				this.lifeMax = 25000;
				this.defense = 40;
				this.damage = 0;
				this.width = 46;
				this.height = 66;
				this.aiStyle = 78;
				this.soundHit = 57;
				this.soundKilled = 62;
				this.value = 0f;
				this.npcSlots = 6f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.boss = true;
				this.hide = true;
				this.netAlways = true;
			}
			else if (this.type == 398)
			{
				this.name = "Moon Lord Core";
				this.lifeMax = 50000;
				this.defense = 70;
				this.damage = 0;
				this.width = 46;
				this.height = 66;
				this.aiStyle = 77;
				this.soundHit = 57;
				this.soundKilled = 0;
				this.value = 0f;
				this.npcSlots = 6f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.dontTakeDamage = true;
				this.boss = true;
				this.behindTiles = true;
				this.hide = true;
				this.netAlways = true;
			}
			else if (this.type == 400)
			{
				this.name = "True Eye of Cthulhu";
				this.defense = 0;
				this.damage = 60;
				this.lifeMax = 100;
				this.aiStyle = 81;
				this.width = 60;
				this.height = 60;
				this.value = 0f;
				this.knockBackResist = 0f;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0f;
				this.noGravity = true;
				this.dontTakeDamage = true;
				this.noTileCollide = true;
				this.netAlways = true;
			}
			else if (this.type == 401)
			{
				this.name = "Moon Leech Clot";
				this.lifeMax = 400;
				this.defense = 0;
				this.damage = 0;
				this.width = 30;
				this.height = 30;
				this.aiStyle = 82;
				this.soundHit = 57;
				this.soundKilled = 62;
				this.value = 0f;
				this.npcSlots = 0f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.hide = true;
			}
			else if (this.type == 437)
			{
				this.name = "Lunar Tablet";
				this.lifeMax = 400;
				this.defense = 0;
				this.damage = 0;
				this.width = 54;
				this.height = 54;
				this.aiStyle = 83;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.value = 0f;
				this.npcSlots = 0f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.dontTakeDamage = true;
				this.netAlways = true;
			}
			else if (this.type == 438)
			{
				this.name = "Lunar Devote";
				this.lifeMax = 400;
				this.defense = 0;
				this.damage = 0;
				this.width = 22;
				this.height = 40;
				this.aiStyle = 83;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 0f;
				this.npcSlots = 0f;
				this.knockBackResist = 0f;
				this.lavaImmune = true;
				this.netAlways = true;
				this.chaseable = false;
			}
			else if (this.type == 439)
			{
				this.name = "Ancient Cultist";
				this.width = 24;
				this.height = 50;
				this.aiStyle = 84;
				this.damage = 50;
				this.defense = 42;
				this.lifeMax = 32000;
				this.knockBackResist = 0f;
				this.noTileCollide = true;
				this.noGravity = true;
				this.npcSlots = 10f;
				this.soundHit = 55;
				this.soundKilled = 59;
				this.value = 10000f;
				this.boss = true;
				this.netAlways = true;
				this.timeLeft = NPC.activeTime * 30;
				flag = true;
			}
			else if (this.type == 440)
			{
				this.name = "Ancient Cultist";
				this.width = 24;
				this.height = 50;
				this.aiStyle = 84;
				this.damage = 0;
				this.defense = 35;
				this.lifeMax = 10000;
				this.knockBackResist = 0f;
				this.noTileCollide = true;
				this.noGravity = true;
				this.npcSlots = 0f;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.netAlways = true;
				this.timeLeft = NPC.activeTime * 30;
				flag = true;
				this.chaseable = false;
			}
			else if (this.type == 442)
			{
				this.name = "Gold Bird";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 24;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.catchItem = 2889;
				this.npcSlots = 0.4f;
				this.rarity = 3;
			}
			else if (this.type == 443)
			{
				this.name = "Gold Bunny";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2890;
				this.rarity = 3;
			}
			else if (this.type == 444)
			{
				this.name = "Gold Butterfly";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 65;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.25f;
				this.noGravity = true;
				this.catchItem = 2891;
				this.rarity = 3;
			}
			else if (this.type == 445)
			{
				this.name = "Gold Frog";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2892;
				this.rarity = 3;
			}
			else if (this.type == 446)
			{
				this.name = "Gold Grasshopper";
				this.width = 14;
				this.height = 12;
				this.aiStyle = 1;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.friendly = true;
				this.catchItem = 2893;
				this.npcSlots = 0.1f;
				this.rarity = 3;
			}
			else if (this.type == 447)
			{
				this.name = "Gold Mouse";
				this.width = 14;
				this.height = 12;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 4;
				this.npcSlots = 0.25f;
				this.catchItem = 2894;
				this.rarity = 3;
			}
			else if (this.type == 448)
			{
				this.name = "Gold Worm";
				this.width = 10;
				this.height = 4;
				this.aiStyle = 66;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.1f;
				this.catchItem = 2895;
				this.friendly = true;
				this.rarity = 3;
			}
			else if (this.type == 449)
			{
				this.name = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 8;
				this.lifeMax = 60;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 100f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 450)
			{
				this.name = "Headache Skeleton";
				this.displayName = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 12;
				this.lifeMax = 55;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 451)
			{
				this.name = "Misassembled Skeleton";
				this.displayName = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 18;
				this.defense = 8;
				this.lifeMax = 65;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 120f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 452)
			{
				this.name = "Pantless Skeleton";
				this.displayName = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 22;
				this.defense = 8;
				this.lifeMax = 60;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 110f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 453)
			{
				this.friendly = true;
				this.name = "Skeleton Merchant";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 30;
				this.lifeMax = 250;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.npcSlots = 7f;
			}
			else if (this.type == 454)
			{
				this.displayName = "Phantasm Dragon";
				this.noTileCollide = true;
				this.npcSlots = 5f;
				this.name = "Phantasm Dragon Head";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 80;
				this.defense = 10;
				this.lifeMax = 4000;
				this.soundHit = 56;
				this.soundKilled = 60;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 0f;
				this.scale = 1f;
				flag = true;
				this.alpha = 255;
			}
			else if (this.type == 459)
			{
				this.displayName = "Phantasm Dragon";
				this.noTileCollide = true;
				this.name = "Phantasm Dragon Tail";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.soundHit = 56;
				this.soundKilled = 60;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 0f;
				this.scale = 1f;
				flag = true;
				this.alpha = 255;
				this.dontCountMe = true;
			}
			else if (this.type == 455 || this.type == 456 || this.type == 457 || this.type == 458)
			{
				this.displayName = "Phantasm Dragon";
				this.noTileCollide = true;
				this.name = "Phantasm Dragon Body";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.soundHit = 56;
				this.soundKilled = 60;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 0f;
				this.scale = 1f;
				flag = true;
				this.alpha = 255;
				this.dontCountMe = true;
			}
			else if (this.type == 464)
			{
				this.name = "Crimson Bunny";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 21;
				this.defense = 5;
				this.lifeMax = 75;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 465)
			{
				this.noGravity = true;
				this.name = "Crimson Goldfish";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 31;
				this.defense = 7;
				this.lifeMax = 110;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 500f;
			}
			else if (this.type == 470)
			{
				this.name = "Crimtane Penguin";
				this.width = 16;
				this.height = 34;
				this.aiStyle = 3;
				this.damage = 21;
				this.defense = 5;
				this.lifeMax = 75;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 473 || this.type == 474 || this.type == 475 || this.type == 476)
			{
				this.name = "Big Mimic";
				this.width = 28;
				this.height = 44;
				this.aiStyle = 87;
				this.damage = 90;
				this.defense = 34;
				this.lifeMax = 3500;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.value = 30000f;
				this.knockBackResist = 0.1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.rarity = 2;
			}
			else if (this.type == 480)
			{
				this.name = "Medusa";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 30;
				this.defense = 20;
				this.lifeMax = 400;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.15f;
				this.value = 1000f;
			}
			else if (this.type == 481)
			{
				this.name = "Hoplite";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 24;
				this.defense = 12;
				this.lifeMax = 80;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 300f;
				this.buffImmune[31] = false;
				this.buffImmune[20] = true;
			}
			else if (this.type == 482)
			{
				this.name = "Grolem";
				this.width = 28;
				this.height = 48;
				this.aiStyle = 3;
				this.damage = 30;
				this.defense = 18;
				this.lifeMax = 110;
				this.soundHit = 41;
				this.soundKilled = 44;
				this.knockBackResist = 0.35f;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type == 483)
			{
				this.npcSlots = 0.5f;
				this.name = "Grelimental";
				this.width = 20;
				this.height = 30;
				this.aiStyle = 91;
				this.damage = 28;
				this.defense = 16;
				this.lifeMax = 50;
				this.soundHit = 7;
				this.knockBackResist = 0.6f;
				this.soundKilled = 6;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type >= 484 && this.type <= 487)
			{
				this.name = "Grub";
				this.width = 10;
				this.height = 4;
				this.aiStyle = 66;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.1f;
				this.catchItem = (short)(3191 + this.type - 484);
				this.friendly = true;
			}
			else if (this.type == 488)
			{
				this.name = "Target Dummy";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 92;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 1000;
				this.soundHit = 15;
				this.soundKilled = 2;
				this.knockBackResist = 0f;
				this.value = 0f;
				this.immortal = true;
				this.netAlways = true;
			}
			else if (this.type == 489)
			{
				this.name = "Blood Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 8;
				this.lifeMax = 75;
				this.soundHit = 18;
				this.soundKilled = 21;
				this.knockBackResist = 0.4f;
				this.value = 150f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 490)
			{
				this.noGravity = true;
				this.name = "Drippler";
				this.width = 28;
				this.height = 30;
				this.aiStyle = 22;
				this.damage = 28;
				this.defense = 14;
				this.lifeMax = 50;
				this.soundHit = 19;
				this.knockBackResist = 0.6f;
				this.soundKilled = 22;
				this.value = 150f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 491)
			{
				this.noGravity = true;
				this.name = "Flying Dutchman";
				this.width = 350;
				this.height = 120;
				this.aiStyle = 93;
				this.damage = 0;
				this.defense = 100;
				this.lifeMax = 50;
				this.soundHit = 19;
				this.knockBackResist = 0f;
				this.soundKilled = 22;
				this.value = 0f;
				flag = true;
				this.dontTakeDamage = true;
				this.netAlways = true;
			}
			else if (this.type == 492)
			{
				this.name = "Dutchman Cannon";
				this.lifeMax = 2000;
				this.defense = 20;
				this.damage = 30;
				this.width = 30;
				this.height = 30;
				this.aiStyle = 75;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.value = 0f;
				this.npcSlots = 1f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				flag = true;
				this.hide = true;
				this.netAlways = true;
			}
			else if (this.type >= 494 && this.type <= 495)
			{
				this.name = "Crawdad";
				this.width = 28;
				this.height = 22;
				this.aiStyle = 3;
				this.damage = 28;
				this.defense = 6;
				this.lifeMax = 50;
				this.soundHit = 33;
				this.soundKilled = 36;
				this.value = 120f;
			}
			else if (this.type >= 496 && this.type <= 497)
			{
				this.name = "Giant Shelly";
				this.width = 28;
				this.height = 22;
				this.aiStyle = 39;
				this.damage = 16;
				this.defense = 12;
				this.lifeMax = 50;
				this.soundHit = 38;
				this.soundKilled = 41;
				this.knockBackResist = 0.75f;
				this.value = 120f;
			}
			else if (this.type >= 498 && this.type <= 506)
			{
				this.name = "Salamander";
				this.width = 24;
				this.height = 44;
				this.aiStyle = 3;
				this.damage = 18;
				this.defense = 10;
				this.lifeMax = 65;
				this.soundHit = 50;
				this.soundKilled = 53;
				this.knockBackResist = 0.45f;
				this.value = 120f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 441)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Tax Collector";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 513)
			{
				this.displayName = "Tomb Crawler";
				this.npcSlots = 4f;
				this.name = "Tomb Crawler Head";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.damage = 34;
				this.defense = 0;
				this.lifeMax = 80;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 140f;
			}
			else if (this.type == 514)
			{
				this.displayName = "Tomb Crawler";
				this.name = "Tomb Crawler Body";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 18;
				this.defense = 12;
				this.lifeMax = 80;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 140f;
				this.dontCountMe = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 515)
			{
				this.displayName = "Tomb Crawler";
				this.name = "Tomb Crawler Tail";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 16;
				this.defense = 20;
				this.lifeMax = 80;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 140f;
				this.dontCountMe = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 510)
			{
				this.displayName = "Dune Splicer";
				this.npcSlots = 5f;
				this.name = "Dune Splicer Head";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 6;
				this.damage = 58;
				this.defense = 18;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 700f;
			}
			else if (this.type == 511)
			{
				this.displayName = "Dune Splicer";
				this.name = "Dune Splicer Body";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 54;
				this.defense = 28;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 700f;
				this.dontCountMe = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 512)
			{
				this.displayName = "Dune Splicer";
				this.name = "Dune Splicer Tail";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 50;
				this.defense = 34;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 700f;
				this.dontCountMe = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 508)
			{
				this.name = "Antlion Charger";
				this.width = 33;
				this.height = 31;
				this.aiStyle = 3;
				this.damage = 24;
				this.defense = 16;
				this.lifeMax = 70;
				this.soundHit = 31;
				this.soundKilled = 34;
				this.knockBackResist = 0.2f;
				this.value = 80f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.8f;
			}
			else if (this.type == 509)
			{
				this.name = "Antlion Swarmer";
				this.width = 40;
				this.height = 31;
				this.aiStyle = 44;
				this.damage = 30;
				this.defense = 12;
				this.lifeMax = 50;
				this.knockBackResist = 0.6f;
				this.soundHit = 32;
				this.soundKilled = 35;
				this.value = 90f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.8f;
			}
			else if (this.type >= 524 && this.type <= 527)
			{
				this.name = "Ghoul";
				this.width = 24;
				this.height = 44;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 26;
				this.lifeMax = 180;
				this.soundHit = 37;
				this.soundKilled = 40;
				this.knockBackResist = 0.6f;
				this.value = 500f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
				switch (this.type - 524)
				{
					case 1:
						this.lifeMax += 70;
						this.defense += 4;
						this.damage += 10;
						this.knockBackResist -= 0.1f;
						this.value += 150f;
						break;
					case 2:
						this.lifeMax += 40;
						this.defense += 6;
						this.damage += 14;
						this.knockBackResist -= 0.1f;
						this.value += 150f;
						break;
					case 3:
						this.lifeMax += 120;
						this.defense += 6;
						this.damage += 4;
						this.knockBackResist -= 0.2f;
						this.value += 250f;
						break;
				}
			}
			else if (this.type >= 528 && this.type <= 529)
			{
				this.name = "Lamia";
				this.width = 24;
				this.height = 44;
				this.aiStyle = 3;
				this.damage = 52;
				this.defense = 28;
				this.lifeMax = 350;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.35f;
				this.value = 600f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 530)
			{
				this.name = "Ravager Scorpion";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 66;
				this.defense = 24;
				this.lifeMax = 320;
				this.soundHit = 13;
				this.soundKilled = 19;
				this.knockBackResist = 0.5f;
				this.value = 600f;
				this.timeLeft = NPC.activeTime * 2;
				this.buffImmune[20] = true;
				this.buffImmune[70] = true;
			}
			else if (this.type == 531)
			{
				this.noGravity = true;
				this.name = "Ravager Scorpion";
				this.width = 36;
				this.height = 36;
				this.aiStyle = 40;
				this.damage = 66;
				this.defense = 24;
				this.lifeMax = 320;
				this.soundHit = 13;
				this.soundKilled = 19;
				this.knockBackResist = 0.5f;
				this.value = 600f;
				this.timeLeft = NPC.activeTime * 2;
				this.buffImmune[20] = true;
				this.buffImmune[70] = true;
			}
			else if (this.type == 532)
			{
				this.name = "Basilisk";
				this.width = 32;
				this.height = 31;
				this.aiStyle = 3;
				this.damage = 65;
				this.defense = 34;
				this.lifeMax = 270;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.3f;
				this.value = 800f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.75f;
			}
			else if (this.type == 533)
			{
				this.name = "Desert Spirit";
				this.width = 28;
				this.height = 62;
				this.aiStyle = 8;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0f;
				this.value = 1200f;
				this.npcSlots = 2f;
				flag = true;
			}
			else if (this.type == 493)
			{
				this.name = "Stardust Tower";
				this.lifeMax = 20000;
				this.defense = 20;
				this.damage = 0;
				this.width = 130;
				this.height = 270;
				this.aiStyle = 94;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 0f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				flag = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 402)
			{
				this.displayName = "Milkyway Weaver";
				this.noTileCollide = true;
				this.npcSlots = 1f;
				this.name = "Milkyway Weaver";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 80;
				this.defense = 10;
				this.lifeMax = 1200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 0f;
				this.scale = 1f;
				flag = true;
			}
			else if (this.type == 405)
			{
				this.name = "Star Cell";
				this.width = 44;
				this.height = 44;
				this.aiStyle = 85;
				this.damage = 120;
				this.defense = 50;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.noGravity = true;
				this.buffImmune[31] = true;
				this.npcSlots = 2f;
			}
			else if (this.type == 406)
			{
				this.name = "Star Cell";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 95;
				this.damage = 70;
				this.defense = 0;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.4f;
				this.noGravity = true;
				this.buffImmune[31] = true;
			}
			else if (this.type == 411)
			{
				this.name = "Stardust Soldier";
				this.width = 22;
				this.height = 56;
				this.aiStyle = 3;
				this.damage = 80;
				this.defense = 34;
				this.lifeMax = 700;
				this.soundHit = 6;
				this.soundKilled = 1;
				this.knockBackResist = 0.4f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 409)
			{
				this.name = "Twinkle Popper";
				this.width = 34;
				this.height = 42;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 40;
				this.lifeMax = 800;
				this.soundHit = 6;
				this.soundKilled = 1;
				this.knockBackResist = 0.4f;
				this.buffImmune[31] = false;
				this.npcSlots = 3f;
			}
			else if (this.type == 410)
			{
				this.name = "Twinkle";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 26;
				this.damage = 80;
				this.defense = 10;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 5;
				this.knockBackResist = 0.3f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
			}
			else if (this.type == 407)
			{
				this.name = "Flow Invader";
				this.width = 40;
				this.height = 60;
				this.aiStyle = 96;
				this.damage = 70;
				this.defense = 38;
				this.lifeMax = 1500;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.knockBackResist = 0.03f;
				this.buffImmune[31] = true;
				this.npcSlots = 3f;
			}
			else if (this.type == 507)
			{
				this.name = "Nebula Tower";
				this.lifeMax = 20000;
				this.defense = 20;
				this.damage = 0;
				this.width = 130;
				this.height = 270;
				this.aiStyle = 94;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 0f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				flag = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 423)
			{
				this.name = "Nebula Beast";
				this.width = 50;
				this.height = 44;
				this.aiStyle = 26;
				this.damage = 90;
				this.defense = 46;
				this.lifeMax = 850;
				this.soundHit = 6;
				this.soundKilled = 1;
				this.knockBackResist = 0.2f;
				flag = true;
				this.npcSlots = 1f;
			}
			else if (this.type == 421)
			{
				this.name = "Nebula Headcrab";
				this.width = 44;
				this.height = 44;
				this.aiStyle = 85;
				this.damage = 70;
				this.defense = 34;
				this.lifeMax = 330;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.noGravity = true;
				this.buffImmune[31] = true;
				this.npcSlots = 1f;
			}
			else if (this.type == 424)
			{
				this.name = "Nebula Soldier";
				this.width = 22;
				this.height = 56;
				this.aiStyle = 3;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 700;
				this.soundHit = 1;
				this.soundKilled = 5;
				this.knockBackResist = 0.6f;
				this.buffImmune[31] = false;
				this.npcSlots = 2f;
			}
			else if (this.type == 420)
			{
				this.name = "Nebula Floater";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 97;
				this.damage = 75;
				this.defense = 20;
				this.lifeMax = 1300;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.noTileCollide = true;
				this.noGravity = true;
				this.npcSlots = 3f;
			}
			else if (this.type == 422)
			{
				this.name = "Vortex Tower";
				this.lifeMax = 20000;
				this.defense = 20;
				this.damage = 0;
				this.width = 130;
				this.height = 270;
				this.aiStyle = 94;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 0f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				flag = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 425)
			{
				this.name = "Vortex Rifleman";
				this.width = 30;
				this.height = 56;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 40;
				this.lifeMax = 800;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.4f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 429)
			{
				this.name = "Vortex Soldier";
				this.width = 22;
				this.height = 56;
				this.aiStyle = 3;
				this.damage = 90;
				this.defense = 34;
				this.lifeMax = 700;
				this.soundHit = 1;
				this.soundKilled = 5;
				this.knockBackResist = 0.6f;
				this.buffImmune[31] = false;
				this.npcSlots = 2f;
			}
			else if (this.type == 428)
			{
				this.name = "Alien Larva";
				this.width = 24;
				this.height = 26;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 6;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
			}
			else if (this.type == 427)
			{
				this.name = "Alien Hornet";
				this.width = 40;
				this.height = 28;
				this.aiStyle = 3;
				this.damage = 75;
				this.defense = 20;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.5f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
			}
			else if (this.type == 426)
			{
				this.name = "Alien Queen";
				this.width = 50;
				this.height = 62;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 44;
				this.lifeMax = 1000;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.3f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 517)
			{
				this.name = "Solar Tower";
				this.lifeMax = 20000;
				this.defense = 20;
				this.damage = 0;
				this.width = 130;
				this.height = 270;
				this.aiStyle = 94;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 0f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				flag = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 412)
			{
				this.name = "Crawltipede";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 150;
				this.defense = 1000;
				this.lifeMax = 10000;
				this.soundHit = 11;
				this.soundKilled = 22;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.dontTakeDamage = true;
				this.npcSlots = 2f;
			}
			else if (this.type == 413)
			{
				this.name = "Crawltipede";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 100;
				this.defense = 1000;
				this.lifeMax = 10000;
				this.soundHit = 11;
				this.soundKilled = 22;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.dontCountMe = true;
				this.dontTakeDamage = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 414)
			{
				this.name = "Crawltipede";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 50;
				this.defense = 0;
				this.lifeMax = 10000;
				this.soundHit = 8;
				this.soundKilled = 22;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.dontCountMe = true;
				this.takenDamageMultiplier = 10f;
				this.npcSlots = 0f;
			}
			else if (this.type == 415)
			{
				this.name = "Drakomire";
				this.lifeMax = 800;
				this.defense = 32;
				this.damage = 55;
				this.width = 60;
				this.height = 40;
				this.aiStyle = 3;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.2f;
			}
			else if (this.type == 416)
			{
				this.name = "Drakomire Rider";
				this.damage = 80;
				this.defense = 28;
				this.lifeMax = 800;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 75;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.2f;
			}
			else if (this.type == 518)
			{
				this.name = "Solar Spearman";
				this.lifeMax = 1000;
				this.defense = 28;
				this.damage = 80;
				this.width = 22;
				this.height = 56;
				this.aiStyle = 3;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 417)
			{
				this.npcSlots = 2f;
				this.name = "Sroller";
				this.width = 46;
				this.height = 32;
				this.aiStyle = 39;
				this.damage = 80;
				this.defense = 34;
				this.lifeMax = 700;
				this.soundHit = 7;
				this.knockBackResist = 0f;
				this.soundKilled = 5;
			}
			else if (this.type == 418)
			{
				this.name = "Corite";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 74;
				this.damage = 70;
				this.defense = 26;
				this.lifeMax = 600;
				this.soundHit = 3;
				this.soundKilled = 3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0.2f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 419)
			{
				this.name = "Solar Solenian";
				this.lifeMax = 800;
				this.defense = 30;
				this.damage = 90;
				this.width = 22;
				this.height = 56;
				this.aiStyle = 3;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 516)
			{
				this.name = "Solar Flare";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 9;
				this.damage = 100;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 0;
				this.soundKilled = 0;
				this.noGravity = true;
				this.noTileCollide = false;
				this.alpha = 0;
				this.knockBackResist = 0f;
			}
			else if (this.type == 519)
			{
				this.name = "Solar Goop";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 99;
				this.damage = 120;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 0;
				this.soundKilled = 0;
				this.noGravity = true;
				this.noTileCollide = false;
				this.alpha = 0;
				this.knockBackResist = 0f;
			}
			else if (this.type == 162)
			{
				this.name = "Frankenstein";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 65;
				this.defense = 18;
				this.lifeMax = 350;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.value = 600f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 166)
			{
				this.name = "Swamp Thing";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 26;
				this.lifeMax = 450;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.2f;
				this.value = 1000f;
				this.buffImmune[31] = false;
				this.buffImmune[20] = true;
			}
			else if (this.type == 253)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Reaper";
				this.width = 24;
				this.height = 44;
				this.aiStyle = 22;
				this.damage = 80;
				this.defense = 22;
				this.lifeMax = 700;
				this.soundHit = 49;
				this.soundKilled = 51;
				this.alpha = 100;
				this.value = 1500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.6f;
			}
			else if (this.type == 158)
			{
				this.npcSlots = 2f;
				this.name = "Vampire";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 14;
				this.damage = 60;
				this.defense = 32;
				this.lifeMax = 750;
				this.soundHit = 1;
				this.knockBackResist = 0.75f;
				this.soundKilled = 6;
				this.value = 5000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 159)
			{
				this.npcSlots = 2f;
				this.name = "Vampire";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 80;
				this.defense = 24;
				this.lifeMax = 750;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.4f;
				this.value = 5000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 460)
			{
				this.name = "Butcher";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 30;
				this.lifeMax = 700;
				this.soundHit = 7;
				this.soundKilled = 17;
				this.knockBackResist = 0.25f;
				this.value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 461)
			{
				this.name = "Creature from the Deep";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 22;
				this.lifeMax = 400;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.3f;
				this.value = 1000f;
			}
			else if (this.type == 462)
			{
				this.name = "Fritz";
				this.width = 20;
				this.height = 24;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 14;
				this.lifeMax = 270;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.7f;
				this.value = 600f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
			}
			else if (this.type == 463)
			{
				this.name = "Nailhead";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 34;
				this.lifeMax = 4000;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.1f;
				this.value = 3000f;
			}
			else if (this.type == 466)
			{
				this.name = "Psycho";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 40;
				this.lifeMax = 550;
				this.soundHit = 48;
				this.soundKilled = 50;
				this.knockBackResist = 0.5f;
				this.value = 1500f;
			}
			else if (this.type == 467)
			{
				this.name = "Deadly Sphere";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 85;
				this.damage = 100;
				this.defense = 80;
				this.lifeMax = 350;
				this.soundHit = 34;
				this.soundKilled = 37;
				this.value = 900f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.7f;
				this.noGravity = true;
			}
			else if (this.type == 469)
			{
				this.name = "The Possessed";
				this.width = 38;
				this.height = 26;
				this.aiStyle = 3;
				this.damage = 68;
				this.defense = 28;
				this.lifeMax = 600;
				this.soundHit = 47;
				this.soundKilled = 49;
				this.knockBackResist = 0.35f;
				this.value = 1300f;
			}
			else if (this.type == 468)
			{
				this.name = "Dr. Man Fly";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 65;
				this.defense = 24;
				this.lifeMax = 500;
				this.soundHit = 35;
				this.soundKilled = 38;
				this.knockBackResist = 0.6f;
				this.value = 1300f;
			}
			else if (this.type == 477)
			{
				this.noGravity = true;
				this.name = "Mothron";
				this.width = 80;
				this.height = 50;
				this.aiStyle = 88;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 6000;
				this.soundHit = 44;
				this.soundKilled = 46;
				this.value = 50000f;
				this.knockBackResist = 0.2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 478)
			{
				this.name = "Mothron Egg";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 89;
				this.damage = 0;
				this.defense = 30;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 0f;
				this.knockBackResist = 0.7f;
				flag = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 479)
			{
				this.name = "Mothron Spawn";
				this.width = 46;
				this.height = 30;
				this.aiStyle = 90;
				this.damage = 50;
				this.defense = 14;
				this.lifeMax = 700;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.3f;
				this.value = 0f;
				this.npcSlots = 0.1f;
			}
			else if (this.type == 26)
			{
				this.name = "Goblin Peon";
				this.scale = 0.9f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 12;
				this.defense = 4;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.8f;
				this.value = 100f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 27)
			{
				this.name = "Goblin Thief";
				this.scale = 0.95f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 6;
				this.lifeMax = 80;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.7f;
				this.value = 200f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 28)
			{
				this.name = "Goblin Warrior";
				this.scale = 1.1f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 25;
				this.defense = 8;
				this.lifeMax = 110;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.value = 150f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 29)
			{
				this.name = "Goblin Sorcerer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 20;
				this.defense = 2;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.6f;
				this.value = 200f;
			}
			else if (this.type == 30)
			{
				this.name = "Chaos Ball";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 9;
				this.damage = 20;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 3;
				this.soundKilled = 3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.alpha = 100;
				this.knockBackResist = 0f;
			}
			else if (this.type == 111)
			{
				this.name = "Goblin Archer";
				this.scale = 0.95f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 6;
				this.lifeMax = 80;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.7f;
				this.value = 200f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 471)
			{
				this.name = "Goblin Summoner";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 80;
				this.defense = 26;
				this.lifeMax = 2000;
				this.soundHit = 40;
				this.soundKilled = 42;
				this.knockBackResist = 0.15f;
				this.value = 5000f;
				flag = true;
			}
			else if (this.type == 472)
			{
				this.name = "Shadowflame Apparition";
				this.width = 40;
				this.height = 24;
				this.aiStyle = 86;
				this.damage = 50;
				this.defense = 18;
				this.lifeMax = 180;
				this.soundHit = 52;
				this.soundKilled = 55;
				this.knockBackResist = 0f;
				this.value = 0f;
				flag = true;
				this.npcSlots = 0.1f;
			}
			else if (this.type == 520)
			{
				this.name = "Martian Walker";
				this.width = 34;
				this.height = 110;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 40;
				this.lifeMax = 2000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type == 521)
			{
				this.name = "Ancient Vision";
				this.width = 60;
				this.height = 60;
				this.aiStyle = 86;
				this.damage = 90;
				this.defense = 30;
				this.lifeMax = 2000;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0f;
				flag = true;
			}
			else if (this.type == 522)
			{
				this.name = "Ancient Light";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 100;
				this.damage = 120;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 0;
				this.soundKilled = 0;
				this.noGravity = true;
				this.noTileCollide = true;
				this.alpha = 0;
				this.knockBackResist = 0f;
				this.chaseable = false;
			}
			else if (this.type == 523)
			{
				this.name = "Ending's Prophecy";
				this.width = 42;
				this.height = 42;
				this.aiStyle = 101;
				this.damage = 30;
				this.defense = 0;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.noGravity = true;
				this.noTileCollide = true;
				this.alpha = 0;
				this.knockBackResist = 0f;
				this.chaseable = false;
				this.alpha = 255;
				this.canGhostHeal = false;
			}
			else if (this.type == 534)
			{
				this.name = "Tortured Soul";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 20;
				this.lifeMax = 400;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.3f;
				this.value = 0f;
				this.buffImmune[31] = false;
				this.lavaImmune = true;
				this.netAlways = true;
				this.rarity = 1;
			}
			else if (this.type == 535)
			{
				this.name = "Spiked Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 14;
				this.defense = 5;
				this.lifeMax = 50;
				this.scale = 1.1f;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 0;
				this.value = 40f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 536)
			{
				this.name = "The Bride";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 8;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 1000f;
				this.buffImmune[31] = false;
				this.rarity = 2;
			}
			else if (this.type == 537)
			{
				this.npcSlots = 2f;
				this.name = "Sand Slime";
				this.width = 30;
				this.height = 24;
				this.aiStyle = 1;
				this.damage = 18;
				this.defense = 5;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 50;
				this.color = new Color(255, 250, 0, 0) * 0.2f;
				this.value = 75f;
				this.knockBackResist = 0.6f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 538)
			{
				this.name = "Squirrel";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 3563;
			}
			else if (this.type == 539)
			{
				this.name = "Squirrel";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 3564;
				this.rarity = 3;
			}
			else if (this.type == 541)
			{
				this.name = "Sand Elemental";
				this.width = 30;
				this.height = 76;
				this.aiStyle = 102;
				this.damage = 40;
				this.defense = 30;
				this.lifeMax = 5000;
				this.soundHit = 23;
				this.soundKilled = 39;
				this.knockBackResist = 0.05f;
				this.value = (float)Item.buyPrice(0, 1, 50, 0);
				this.buffImmune[20] = true;
				this.buffImmune[44] = true;
				this.rarity = 2;
			}
			else if (this.type == 542)
			{
				this.noGravity = true;
				this.name = "Sand Shark";
				this.width = 100;
				this.height = 24;
				this.aiStyle = 103;
				this.damage = 50;
				this.defense = 20;
				this.lifeMax = 360;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 400f;
				this.knockBackResist = 0.9f;
				this.behindTiles = true;
			}
			else if (this.type == 543)
			{
				this.noGravity = true;
				this.name = "Bone Biter";
				this.width = 100;
				this.height = 24;
				this.aiStyle = 103;
				this.damage = 60;
				this.defense = 24;
				this.lifeMax = 380;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 400f;
				this.knockBackResist = 0.8f;
				this.behindTiles = true;
			}
			else if (this.type == 544)
			{
				this.noGravity = true;
				this.name = "Flesh Reaver";
				this.width = 100;
				this.height = 24;
				this.aiStyle = 103;
				this.damage = 64;
				this.defense = 22;
				this.lifeMax = 400;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 400f;
				this.knockBackResist = 0.8f;
				this.behindTiles = true;
			}
			else if (this.type == 545)
			{
				this.noGravity = true;
				this.name = "Crystal Thresher";
				this.width = 100;
				this.height = 24;
				this.aiStyle = 103;
				this.damage = 54;
				this.defense = 26;
				this.lifeMax = 450;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 400f;
				this.knockBackResist = 0.7f;
				this.behindTiles = true;
			}
			else if (this.type == 546)
			{
				this.name = "Angry Tumbler";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 26;
				this.damage = 30;
				this.defense = 10;
				this.lifeMax = 60;
				this.soundHit = 11;
				this.soundKilled = 15;
				this.knockBackResist = 0.8f;
				this.value = 130f;
				this.behindTiles = true;
			}
			this.displayName = Lang.npcName(this.type, false);
			NPCLoader.SetupNPC(this);
			if (flag)
			{
				for (int num2 = 0; num2 < this.buffImmune.Length; num2++)
				{
					this.buffImmune[num2] = true;
				}
			}
			if (Main.dedServ)
			{
				this.frame = default(Rectangle);
			}
			else if (Main.NPCLoaded[this.type])
			{
				this.frame = new Rectangle(0, 0, Main.npcTexture[this.type].Width, Main.npcTexture[this.type].Height / Main.npcFrameCount[this.type]);
			}
			else
			{
				this.setFrameSize = true;
			}
			if (scaleOverride > 0f)
			{
				int num3 = (int)((float)this.width * this.scale);
				int num4 = (int)((float)this.height * this.scale);
				this.position.X = this.position.X + (float)(num3 / 2);
				this.position.Y = this.position.Y + (float)num4;
				this.scale = scaleOverride;
				this.width = (int)((float)this.width * this.scale);
				this.height = (int)((float)this.height * this.scale);
				if (this.height == 16 || this.height == 32)
				{
					this.height++;
				}
				this.position.X = this.position.X - (float)(this.width / 2);
				this.position.Y = this.position.Y - (float)this.height;
			}
			else
			{
				this.width = (int)((float)this.width * this.scale);
				this.height = (int)((float)this.height * this.scale);
			}
			if (this.buffImmune[20])
			{
				this.buffImmune[70] = true;
			}
			if (this.buffImmune[39])
			{
				this.buffImmune[153] = true;
			}
			this.life = this.lifeMax;
			this.defDamage = this.damage;
			this.defDefense = this.defense;
			this.netID = this.type;
			if (Main.expertMode)
			{
				this.scaleStats();
			}
		}

		public static void setWorldMonsters()
		{
			Random random = new Random(Main.worldID);
			int num = random.Next(3);
			int num2 = random.Next(3);
			while (num == num2)
			{
				num = random.Next(3);
			}
			for (int i = 0; i < 2; i++)
			{
				int num3 = num;
				if (i == 1)
				{
					num3 = num2;
				}
				for (int j = 0; j < 3; j++)
				{
					if (num3 == 0)
					{
						NPC.cavernMonsterType[i, j] = random.Next(494, 496);
					}
					else if (num3 == 1)
					{
						NPC.cavernMonsterType[i, j] = random.Next(496, 498);
					}
					else
					{
						NPC.cavernMonsterType[i, j] = random.Next(498, 507);
					}
				}
			}
		}

		public void scaleStats()
		{
			if (!Main.expertMode)
			{
				return;
			}
			if (this.friendly)
			{
				int arg_1C_0 = this.life;
			}
			if ((this.type < 0 || !NPCID.Sets.NeedsExpertScaling[this.type]) && (this.life <= 5 || this.damage == 0 || this.friendly || this.townNPC))
			{
				return;
			}
			bool flag = this.type >= 0 && NPCID.Sets.ProjectileNPC[this.type];
			if (this.type != 5 && (this.type < 13 || this.type > 15) && this.type != 267 && (this.type < 113 || this.type > 119) && Main.hardMode && !this.boss && this.lifeMax < 1000)
			{
				int num = this.damage + this.defense + this.lifeMax / 4;
				int num2 = 80;
				if (NPC.downedPlantBoss)
				{
					num2 += 20;
				}
				if (num < num2)
				{
					float num3 = (float)(num2 / num);
					this.damage = (int)((double)((float)this.damage * num3) * 0.9);
					if (!flag)
					{
						this.defense = (int)((float)this.defense * num3);
						this.lifeMax = (int)((double)((float)this.lifeMax * num3) * 1.1);
						this.value = (float)((int)((double)(this.value * num3) * 0.8));
					}
				}
			}
			if (this.type == 210 || this.type == 211)
			{
				this.damage = (int)((float)this.damage * 0.6f);
				this.lifeMax = (int)((float)this.lifeMax * 0.8f);
				this.defense = (int)((float)this.defense * 0.8f);
			}
			if (!flag)
			{
				this.value = (float)((int)((double)this.value * 2.5));
				this.lifeMax = (int)((float)this.lifeMax * Main.expertLife);
			}
			this.damage = (int)((float)this.damage * Main.expertDamage);
			this.knockBackResist *= Main.expertKnockBack;
			int num4 = 0;
			float num5 = 1f;
			float num6 = 0.35f;
			if (Main.netMode != 0)
			{
				for (int i = 0; i < 255; i++)
				{
					if (Main.player[i].active)
					{
						num4++;
					}
				}
				//patch file: num4, num5
				for (int j = 1; j < num4; j++)
				{
					num5 += num6;
					num6 += (1f - num6) / 3f;
				}
			}
			if (num5 > 8f)
			{
				num5 = (num5 * 2f + 8f) / 3f;
			}
			if (num5 > 1000f)
			{
				num5 = 1000f;
			}
			if (this.type == 5)
			{
				this.lifeMax = (int)((float)this.lifeMax * 0.75f);
			}
			if (this.type == 4)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.65 * (double)num5);
			}
			if (this.type >= 13 && this.type <= 15)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)num5);
				if (this.type == 13)
				{
					this.damage = (int)((double)this.damage * 1.1);
				}
				if (this.type == 14)
				{
					this.damage = (int)((double)this.damage * 0.8);
				}
				if (this.type == 15)
				{
					this.damage = (int)((double)this.damage * 0.8);
				}
				this.scale *= 1.2f;
				this.defense += 2;
			}
			if (this.type == 266)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.85 * (double)num5);
				this.damage = (int)((double)this.damage * 0.9);
				this.scale *= 1.05f;
			}
			if (this.type == 50)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)num5);
				this.damage = (int)((double)this.damage * 0.8);
			}
			if (this.type == 471)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.85 * (double)(num5 * 2f + 1f) / 3.0);
			}
			if (this.type == 472)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.85 * (double)(num5 + 1f) / 2.0);
				this.damage = (int)((double)this.damage * 0.8);
			}
			if (this.type == 222)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)num5);
				this.damage = (int)((double)this.damage * 0.9);
			}
			if (this.type == 210 || this.type == 211)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.75);
			}
			if (this.type == 35)
			{
				this.lifeMax = (int)((float)this.lifeMax * num5);
				this.damage = (int)((double)this.damage * 1.1);
			}
			else if (this.type == 36)
			{
				this.lifeMax = (int)((double)this.lifeMax * 1.3 * (double)num5);
				this.damage = (int)((double)this.damage * 1.1);
			}
			if (this.type == 113 || this.type == 114)
			{
				this.defense += 6;
				this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)num5);
				this.damage = (int)((double)this.damage * 1.5);
			}
			else if (this.type == 115)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)num5);
				if (num4 > 1)
				{
					this.knockBackResist *= 1f - num6;
				}
				this.defense += 6;
			}
			else if (this.type == 116)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)num5);
				if (num4 > 1)
				{
					this.knockBackResist *= 1f - num6;
				}
			}
			else if (this.type == 117 || this.type == 118 || this.type == 119)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.8);
			}
			if (this.type >= 134 && this.type <= 136)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.75 * (double)num5);
				if (this.type == 134)
				{
					this.damage *= 2;
				}
				if (this.type == 135)
				{
					this.damage = (int)((double)this.damage * 0.85);
				}
				if (this.type == 136)
				{
					this.damage = (int)((double)this.damage * 0.85);
				}
				this.scale *= 1.05f;
			}
			else if (this.type == 139)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.75 * (double)(num5 * 2f + 1f) / 3.0);
				this.damage = (int)((double)this.damage * 0.8);
				this.scale *= 1.05f;
			}
			if (this.type >= 127 && this.type <= 131)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.75 * (double)num5);
				this.damage = (int)((double)this.damage * 0.85);
			}
			if (this.type >= 125 && this.type <= 126)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.75 * (double)num5);
				this.damage = (int)((double)this.damage * 0.85);
			}
			if (this.type >= 262 && this.type <= 262)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)num5);
				this.damage = (int)((double)this.damage * 1.15);
			}
			if (this.type >= 245 && this.type <= 249)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.75 * (double)num5);
				this.damage = (int)((double)this.damage * 0.8);
			}
			if (this.type == 370)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.6 * (double)num5);
				this.damage = (int)((double)this.damage * 0.7);
			}
			else if (this.type == 371 || this.type == 372 || this.type == 373)
			{
				if (this.type != 371)
				{
					this.lifeMax = (int)((double)this.lifeMax * 0.75);
				}
				this.damage = (int)((double)this.damage * 0.75);
			}
			if (this.type == 439 || this.type == 440 || (this.type >= 454 && this.type <= 459) || this.type == 522 || this.type == 523)
			{
				if (this.type != 522)
				{
					this.lifeMax = (int)((float)this.lifeMax * 0.625f * num5);
				}
				this.damage = (int)((double)this.damage * 0.75);
			}
			if (this.type == 397 || this.type == 396 || this.type == 398)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.75 * (double)num5);
				this.damage = (int)((double)this.damage * 0.75);
			}
			switch (this.type)
			{
				case 305:
				case 306:
				case 307:
				case 308:
				case 309:
				case 310:
				case 311:
				case 312:
				case 313:
				case 314:
				case 315:
				case 326:
				case 329:
				case 330:
					this.lifeMax = (int)((double)this.lifeMax * 0.75);
					this.damage = (int)((double)this.damage * 0.75);
					break;
				case 325:
				case 327:
					this.lifeMax = (int)((double)this.lifeMax * 0.65);
					this.damage = (int)((double)this.damage * 0.75);
					break;
			}
			switch (this.type)
			{
				case 338:
				case 339:
				case 340:
				case 341:
				case 342:
				case 343:
				case 347:
				case 348:
				case 349:
				case 350:
					this.lifeMax = (int)((double)this.lifeMax * 0.75);
					this.damage = (int)((double)this.damage * 0.75);
					break;
				case 344:
				case 345:
				case 346:
					this.lifeMax = (int)((double)this.lifeMax * 0.65);
					this.damage = (int)((double)this.damage * 0.75);
					break;
			}
			NPCLoader.ScaleExpertStats(this, num4, num5);
			this.defDefense = this.defense;
			this.defDamage = this.damage;
			this.life = this.lifeMax;
		}

		public static bool GetNPCLocation(int i, bool seekHead, bool averageDirection, out int index, out Vector2 pos)
		{
			int num = Main.npc[i].type;
			int num2 = -1;
			int num3 = -1;
			int num4 = num;
			if (num4 <= 100)
			{
				switch (num4)
				{
					case 7:
						num3 = 9;
						num2 = 0;
						break;
					case 8:
					case 9:
						num3 = 7;
						num2 = 1;
						break;
					case 10:
						num3 = 12;
						num2 = 0;
						break;
					case 11:
					case 12:
						num3 = 10;
						num2 = 1;
						break;
					case 13:
						num3 = 15;
						num2 = 0;
						break;
					case 14:
					case 15:
						num3 = 13;
						num2 = 1;
						break;
					default:
						switch (num4)
						{
							case 39:
								num3 = 41;
								num2 = 0;
								break;
							case 40:
							case 41:
								num3 = 39;
								num2 = 1;
								break;
							default:
								switch (num4)
								{
									case 87:
										num3 = 92;
										num2 = 0;
										break;
									case 88:
									case 89:
									case 90:
									case 91:
									case 92:
										num3 = 87;
										num2 = 1;
										break;
									case 95:
										num3 = 97;
										num2 = 0;
										break;
									case 96:
									case 97:
										num3 = 95;
										num2 = 1;
										break;
									case 98:
										num3 = 100;
										num2 = 0;
										break;
									case 99:
									case 100:
										num3 = 98;
										num2 = 1;
										break;
								}
								break;
						}
						break;
				}
			}
			else if (num4 <= 136)
			{
				switch (num4)
				{
					case 117:
						num3 = 119;
						num2 = 0;
						break;
					case 118:
					case 119:
						num3 = 117;
						num2 = 1;
						break;
					default:
						switch (num4)
						{
							case 134:
								num3 = 136;
								num2 = 0;
								break;
							case 135:
							case 136:
								num3 = 134;
								num2 = 1;
								break;
						}
						break;
				}
			}
			else
			{
				switch (num4)
				{
					case 454:
						num3 = 459;
						num2 = 0;
						break;
					case 455:
					case 456:
					case 457:
					case 458:
					case 459:
						num3 = 454;
						num2 = 1;
						break;
					default:
						switch (num4)
						{
							case 510:
								num3 = 512;
								num2 = 0;
								break;
							case 511:
							case 512:
								num3 = 510;
								num2 = 1;
								break;
							case 513:
								num3 = 515;
								num2 = 0;
								break;
							case 514:
							case 515:
								num3 = 513;
								num2 = 1;
								break;
						}
						break;
				}
			}
			if (num2 == -1)
			{
				pos = Main.npc[i].Center;
				index = i;
				return true;
			}
			if (seekHead && num2 == 1)
			{
				index = -1;
				pos = Vector2.Zero;
				return false;
			}
			Vector2 value = Main.npc[i].Center;
			int num5 = -1;
			float num6 = -1f;
			int num7 = -1;
			Vector2 center = Main.player[Main.myPlayer].Center;
			int num8 = (int)Main.npc[i].ai[num2];
			int num9 = 0;
			while (num8 >= 0 && num8 < 200 && ++num9 < 100 && Main.npc[num8].active)
			{
				if (!averageDirection && (num7 == -1 || Main.npc[num8].Distance(center) < num6))
				{
					num6 = Main.npc[num8].Distance(center);
					num7 = num8;
				}
				if (Main.npc[num8].type == num3)
				{
					num5 = num8;
					break;
				}
				num8 = (int)Main.npc[num8].ai[num2];
			}
			if (num5 >= 0)
			{
				if (!averageDirection)
				{
					pos = Main.npc[num7].Center;
					index = num7;
				}
				else
				{
					value += Main.npc[num5].Center;
					pos = value / 2f;
					index = num5;
				}
				return true;
			}
			pos = Vector2.Zero;
			index = -1;
			return false;
		}

		public void AI()
		{
			NPCLoader.NPCAI(this);
		}

		public void VanillaAI()
		{
			if (this.aiStyle == 0)
			{
				for (int i = 0; i < 255; i++)
				{
					if (Main.player[i].active && Main.player[i].talkNPC == this.whoAmI)
					{
						if (this.type == 105)
						{
							this.Transform(107);
							return;
						}
						if (this.type == 106)
						{
							this.Transform(108);
							return;
						}
						if (this.type == 123)
						{
							this.Transform(124);
							return;
						}
						if (this.type == 354)
						{
							this.Transform(353);
							return;
						}
						if (this.type == 376)
						{
							this.Transform(369);
							return;
						}
					}
				}
				if (this.type != 376)
				{
					this.TargetClosest(true);
					this.spriteDirection = this.direction;
				}
				if (this.type == 376)
				{
					if (this.wet || Main.tile[(int)(base.Center.X / 16f), (int)(this.position.Y - 4f) / 16].liquid > 0)
					{
						this.velocity.Y = -0.4f;
						int num = 1;
						if (base.Center.X / 16f > (float)(Main.maxTilesX / 2))
						{
							num = -1;
						}
						int num2 = 12;
						int num3 = (int)base.Center.X / 16;
						int j = (int)base.Center.Y / 16;
						bool flag = false;
						if (num > 0)
						{
							for (int k = num3; k < num3 + num2; k++)
							{
								if (WorldGen.SolidTile(k, j))
								{
									flag = true;
								}
							}
						}
						else
						{
							for (int l = num3; l > num3 - num2; l--)
							{
								if (WorldGen.SolidTile(l, j))
								{
									flag = true;
								}
							}
						}
						if (flag)
						{
							this.velocity.X = this.velocity.X * 0.99f;
							if ((double)this.velocity.X > -0.01 && (double)this.velocity.X < 0.01)
							{
								this.velocity.X = 0f;
								return;
							}
						}
						else
						{
							this.velocity.X = this.velocity.X + (float)num * 0.01f;
							if (this.velocity.X > 0.2f)
							{
								this.velocity.X = this.velocity.X * 0.95f;
							}
							if (this.velocity.X < -0.2f)
							{
								this.velocity.X = this.velocity.X * 0.95f;
								return;
							}
						}
					}
					else
					{
						this.velocity.X = this.velocity.X * 0.93f;
						if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
						{
							this.velocity.X = 0f;
							return;
						}
					}
				}
				else
				{
					this.velocity.X = this.velocity.X * 0.93f;
					if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
					{
						this.velocity.X = 0f;
						return;
					}
				}
			}
			else if (this.aiStyle == 1)
			{
				if (this.type == 1 && (this.ai[1] == 1f || this.ai[1] == 2f || this.ai[1] == 3f))
				{
					this.ai[1] = -1f;
				}
				if (this.type == 1 && this.ai[1] == 0f && Main.netMode != 1 && this.value > 0f)
				{
					this.ai[1] = -1f;
					if (Main.rand.Next(20) == 0)
					{
						int num4 = Main.rand.Next(4);
						if (num4 == 0)
						{
							num4 = Main.rand.Next(7);
							if (num4 == 0)
							{
								num4 = 290;
							}
							else if (num4 == 1)
							{
								num4 = 292;
							}
							else if (num4 == 2)
							{
								num4 = 296;
							}
							else if (num4 == 3)
							{
								num4 = 2322;
							}
							else if (Main.netMode != 0 && Main.rand.Next(2) == 0)
							{
								num4 = 2997;
							}
							else
							{
								num4 = 2350;
							}
						}
						else if (num4 == 1)
						{
							num4 = Main.rand.Next(4);
							if (num4 == 0)
							{
								num4 = 8;
							}
							else if (num4 == 1)
							{
								num4 = 166;
							}
							else if (num4 == 2)
							{
								num4 = 965;
							}
							else
							{
								num4 = 58;
							}
						}
						else if (num4 == 2)
						{
							if (Main.rand.Next(2) == 0)
							{
								num4 = Main.rand.Next(11, 15);
							}
							else
							{
								num4 = Main.rand.Next(699, 703);
							}
						}
						else
						{
							num4 = Main.rand.Next(3);
							if (num4 == 0)
							{
								num4 = 71;
							}
							else if (num4 == 1)
							{
								num4 = 72;
							}
							else
							{
								num4 = 73;
							}
						}
						this.ai[1] = (float)num4;
						this.netUpdate = true;
					}
				}
				if (this.type == 244)
				{
					float num5 = (float)Main.DiscoR / 255f;
					float num6 = (float)Main.DiscoG / 255f;
					float num7 = (float)Main.DiscoB / 255f;
					num5 *= 1f;
					num6 *= 1f;
					num7 *= 1f;
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), num5, num6, num7);
					this.color.R = (byte)Main.DiscoR;
					this.color.G = (byte)Main.DiscoG;
					this.color.B = (byte)Main.DiscoB;
					this.color.A = 100;
					this.alpha = 175;
				}
				bool flag2 = false;
				if (!Main.dayTime || this.life != this.lifeMax || (double)this.position.Y > Main.worldSurface * 16.0 || Main.slimeRain)
				{
					flag2 = true;
				}
				if (this.type == 81)
				{
					flag2 = true;
					if (Main.rand.Next(30) == 0)
					{
						int num8 = Dust.NewDust(this.position, this.width, this.height, 14, 0f, 0f, this.alpha, this.color, 1f);
						Main.dust[num8].velocity *= 0.3f;
					}
				}
				if ((this.type == 377 || this.type == 446) && this.target != 255 && !Main.player[this.target].dead && Vector2.Distance(base.Center, Main.player[this.target].Center) <= 200f)
				{
					flag2 = true;
				}
				if (this.type == 183)
				{
					flag2 = true;
				}
				if (this.type == 304)
				{
					flag2 = true;
				}
				if (this.type == 244)
				{
					flag2 = true;
					this.ai[0] += 2f;
				}
				if (this.type == 147 && Main.rand.Next(10) == 0)
				{
					int num9 = Dust.NewDust(this.position, this.width, this.height, 76, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num9].noGravity = true;
					Main.dust[num9].velocity *= 0.1f;
				}
				if (this.type == 184)
				{
					if (Main.rand.Next(8) == 0)
					{
						int num10 = Dust.NewDust(this.position - this.velocity, this.width, this.height, 76, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num10].noGravity = true;
						Main.dust[num10].velocity *= 0.15f;
					}
					flag2 = true;
					if (this.localAI[0] > 0f)
					{
						this.localAI[0] -= 1f;
					}
					if (!this.wet && !Main.player[this.target].npcTypeNoAggro[this.type])
					{
						Vector2 vector = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num11 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector.X;
						float num12 = Main.player[this.target].position.Y - vector.Y;
						float num13 = (float)Math.Sqrt((double)(num11 * num11 + num12 * num12));
						if (Main.expertMode && num13 < 120f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && this.velocity.Y == 0f)
						{
							this.ai[0] = -40f;
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if (Main.netMode != 1 && this.localAI[0] == 0f)
							{
								for (int m = 0; m < 5; m++)
								{
									Vector2 vector2 = new Vector2((float)(m - 2), -4f);
									vector2.X *= 1f + (float)Main.rand.Next(-50, 51) * 0.005f;
									vector2.Y *= 1f + (float)Main.rand.Next(-50, 51) * 0.005f;
									vector2.Normalize();
									vector2 *= 4f + (float)Main.rand.Next(-50, 51) * 0.01f;
									Projectile.NewProjectile(vector.X, vector.Y, vector2.X, vector2.Y, 174, 9, 0f, Main.myPlayer, 0f, 0f);
									this.localAI[0] = 30f;
								}
							}
						}
						else if (num13 < 200f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && this.velocity.Y == 0f)
						{
							this.ai[0] = -40f;
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if (Main.netMode != 1 && this.localAI[0] == 0f)
							{
								num12 = Main.player[this.target].position.Y - vector.Y - (float)Main.rand.Next(0, 200);
								num13 = (float)Math.Sqrt((double)(num11 * num11 + num12 * num12));
								num13 = 4.5f / num13;
								num11 *= num13;
								num12 *= num13;
								this.localAI[0] = 50f;
								Projectile.NewProjectile(vector.X, vector.Y, num11, num12, 174, 9, 0f, Main.myPlayer, 0f, 0f);
							}
						}
					}
				}
				if (this.type == 535)
				{
					flag2 = true;
					if (this.localAI[0] > 0f)
					{
						this.localAI[0] -= 1f;
					}
					if (!this.wet && !Main.player[this.target].npcTypeNoAggro[this.type])
					{
						Vector2 vector3 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num14 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector3.X;
						float num15 = Main.player[this.target].position.Y - vector3.Y;
						float num16 = (float)Math.Sqrt((double)(num14 * num14 + num15 * num15));
						if (Main.expertMode && num16 < 120f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && this.velocity.Y == 0f)
						{
							this.ai[0] = -40f;
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if (Main.netMode != 1 && this.localAI[0] == 0f)
							{
								for (int n = 0; n < 5; n++)
								{
									Vector2 vector4 = new Vector2((float)(n - 2), -4f);
									vector4.X *= 1f + (float)Main.rand.Next(-50, 51) * 0.005f;
									vector4.Y *= 1f + (float)Main.rand.Next(-50, 51) * 0.005f;
									vector4.Normalize();
									vector4 *= 4f + (float)Main.rand.Next(-50, 51) * 0.01f;
									Projectile.NewProjectile(vector3.X, vector3.Y, vector4.X, vector4.Y, 605, 9, 0f, Main.myPlayer, 0f, 0f);
									this.localAI[0] = 30f;
								}
							}
						}
						else if (num16 < 200f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && this.velocity.Y == 0f)
						{
							this.ai[0] = -40f;
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if (Main.netMode != 1 && this.localAI[0] == 0f)
							{
								num15 = Main.player[this.target].position.Y - vector3.Y - (float)Main.rand.Next(0, 200);
								num16 = (float)Math.Sqrt((double)(num14 * num14 + num15 * num15));
								num16 = 4.5f / num16;
								num14 *= num16;
								num15 *= num16;
								this.localAI[0] = 50f;
								Projectile.NewProjectile(vector3.X, vector3.Y, num14, num15, 605, 9, 0f, Main.myPlayer, 0f, 0f);
							}
						}
					}
				}
				if (this.type == 204)
				{
					flag2 = true;
					if (this.localAI[0] > 0f)
					{
						this.localAI[0] -= 1f;
					}
					if (!this.wet && !Main.player[this.target].npcTypeNoAggro[this.type])
					{
						Vector2 vector5 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num17 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector5.X;
						float num18 = Main.player[this.target].position.Y - vector5.Y;
						float num19 = (float)Math.Sqrt((double)(num17 * num17 + num18 * num18));
						if (Main.expertMode && num19 < 200f && Collision.CanHit(new Vector2(this.position.X, this.position.Y - 20f), this.width, this.height + 20, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && this.velocity.Y == 0f)
						{
							this.ai[0] = -40f;
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if (Main.netMode != 1 && this.localAI[0] == 0f)
							{
								for (int num20 = 0; num20 < 5; num20++)
								{
									Vector2 vector6 = new Vector2((float)(num20 - 2), -2f);
									vector6.X *= 1f + (float)Main.rand.Next(-50, 51) * 0.02f;
									vector6.Y *= 1f + (float)Main.rand.Next(-50, 51) * 0.02f;
									vector6.Normalize();
									vector6 *= 3f + (float)Main.rand.Next(-50, 51) * 0.01f;
									Projectile.NewProjectile(vector5.X, vector5.Y, vector6.X, vector6.Y, 176, 13, 0f, Main.myPlayer, 0f, 0f);
									this.localAI[0] = 80f;
								}
							}
						}
						if (num19 < 400f && Collision.CanHit(new Vector2(this.position.X, this.position.Y - 20f), this.width, this.height + 20, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && this.velocity.Y == 0f)
						{
							this.ai[0] = -80f;
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if (Main.netMode != 1 && this.localAI[0] == 0f)
							{
								num18 = Main.player[this.target].position.Y - vector5.Y - (float)Main.rand.Next(-30, 20);
								num18 -= num19 * 0.05f;
								num17 = Main.player[this.target].position.X - vector5.X - (float)Main.rand.Next(-20, 20);
								num19 = (float)Math.Sqrt((double)(num17 * num17 + num18 * num18));
								num19 = 7f / num19;
								num17 *= num19;
								num18 *= num19;
								this.localAI[0] = 65f;
								Projectile.NewProjectile(vector5.X, vector5.Y, num17, num18, 176, 13, 0f, Main.myPlayer, 0f, 0f);
							}
						}
					}
				}
				if (this.type == 377 || this.type == 446)
				{
					if (this.localAI[2] < 90f)
					{
						this.localAI[2] += 1f;
					}
					else
					{
						this.friendly = false;
					}
				}
				if (this.type == 59)
				{
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 1f, 0.3f, 0.1f);
					int num21 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 1.7f);
					Main.dust[num21].noGravity = true;
				}
				if (this.ai[2] > 1f)
				{
					this.ai[2] -= 1f;
				}
				if (this.wet)
				{
					if (this.collideY)
					{
						this.velocity.Y = -2f;
					}
					if (this.velocity.Y < 0f && this.ai[3] == this.position.X)
					{
						this.direction *= -1;
						this.ai[2] = 200f;
					}
					if (this.velocity.Y > 0f)
					{
						this.ai[3] = this.position.X;
					}
					if (this.type == 59)
					{
						if (this.velocity.Y > 2f)
						{
							this.velocity.Y = this.velocity.Y * 0.9f;
						}
						else if (this.directionY < 0)
						{
							this.velocity.Y = this.velocity.Y - 0.8f;
						}
						this.velocity.Y = this.velocity.Y - 0.5f;
						if (this.velocity.Y < -10f)
						{
							this.velocity.Y = -10f;
						}
					}
					else
					{
						if (this.velocity.Y > 2f)
						{
							this.velocity.Y = this.velocity.Y * 0.9f;
						}
						this.velocity.Y = this.velocity.Y - 0.5f;
						if (this.velocity.Y < -4f)
						{
							this.velocity.Y = -4f;
						}
					}
					if (this.ai[2] == 1f && flag2)
					{
						this.TargetClosest(true);
					}
				}
				this.aiAction = 0;
				if (this.ai[2] == 0f)
				{
					this.ai[0] = -100f;
					this.ai[2] = 1f;
					this.TargetClosest(true);
				}
				if (this.velocity.Y == 0f)
				{
					if (this.collideY && this.oldVelocity.Y != 0f && Collision.SolidCollision(this.position, this.width, this.height))
					{
						this.position.X = this.position.X - (this.velocity.X + (float)this.direction);
					}
					if (this.ai[3] == this.position.X)
					{
						this.direction *= -1;
						this.ai[2] = 200f;
					}
					this.ai[3] = 0f;
					this.velocity.X = this.velocity.X * 0.8f;
					if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
					{
						this.velocity.X = 0f;
					}
					if (flag2)
					{
						this.ai[0] += 1f;
					}
					this.ai[0] += 1f;
					if (this.type == 59)
					{
						this.ai[0] += 2f;
					}
					if (this.type == 71)
					{
						this.ai[0] += 3f;
					}
					if (this.type == 138)
					{
						this.ai[0] += 2f;
					}
					if (this.type == 183)
					{
						this.ai[0] += 1f;
					}
					if (this.type == 304)
					{
						float num22 = (float)((1 - this.life / this.lifeMax) * 10);
						this.ai[0] += num22;
					}
					if (this.type == 377 || this.type == 446)
					{
						this.ai[0] += 3f;
					}
					if (this.type == 81)
					{
						if (this.scale >= 0f)
						{
							this.ai[0] += 4f;
						}
						else
						{
							this.ai[0] += 1f;
						}
					}
					int num23 = 0;
					if (this.ai[0] >= 0f)
					{
						num23 = 1;
					}
					if (this.ai[0] >= -1000f && this.ai[0] <= -500f)
					{
						num23 = 2;
					}
					if (this.ai[0] >= -2000f && this.ai[0] <= -1500f)
					{
						num23 = 3;
					}
					if (num23 > 0)
					{
						this.netUpdate = true;
						if (flag2 && this.ai[2] == 1f)
						{
							this.TargetClosest(true);
						}
						if (num23 == 3)
						{
							this.velocity.Y = -8f;
							if (this.type == 59)
							{
								this.velocity.Y = this.velocity.Y - 2f;
							}
							this.velocity.X = this.velocity.X + (float)(3 * this.direction);
							if (this.type == 59)
							{
								this.velocity.X = this.velocity.X + 0.5f * (float)this.direction;
							}
							this.ai[0] = -200f;
							this.ai[3] = this.position.X;
						}
						else
						{
							this.velocity.Y = -6f;
							this.velocity.X = this.velocity.X + (float)(2 * this.direction);
							if (this.type == 59)
							{
								this.velocity.X = this.velocity.X + (float)(2 * this.direction);
							}
							this.ai[0] = -120f;
							if (num23 == 1)
							{
								this.ai[0] -= 1000f;
							}
							else
							{
								this.ai[0] -= 2000f;
							}
						}
						if (this.type == 141)
						{
							this.velocity.Y = this.velocity.Y * 1.3f;
							this.velocity.X = this.velocity.X * 1.2f;
						}
						if (this.type == 377 || this.type == 446)
						{
							this.velocity.Y = this.velocity.Y * 0.9f;
							this.velocity.X = this.velocity.X * 0.6f;
							if (flag2)
							{
								this.direction = -this.direction;
								this.velocity.X = this.velocity.X * -1f;
								return;
							}
						}
					}
					else if (this.ai[0] >= -30f)
					{
						this.aiAction = 1;
						return;
					}
				}
				else if (this.target < 255 && ((this.direction == 1 && this.velocity.X < 3f) || (this.direction == -1 && this.velocity.X > -3f)))
				{
					if (this.collideX && Math.Abs(this.velocity.X) == 0.2f)
					{
						this.position.X = this.position.X - 1.4f * (float)this.direction;
					}
					if (this.collideY && this.oldVelocity.Y != 0f && Collision.SolidCollision(this.position, this.width, this.height))
					{
						this.position.X = this.position.X - (this.velocity.X + (float)this.direction);
					}
					if ((this.direction == -1 && (double)this.velocity.X < 0.01) || (this.direction == 1 && (double)this.velocity.X > -0.01))
					{
						this.velocity.X = this.velocity.X + 0.2f * (float)this.direction;
						return;
					}
					this.velocity.X = this.velocity.X * 0.93f;
					return;
				}
			}
			else if (this.aiStyle == 2)
			{
				if ((this.type == 170 || this.type == 171 || this.type == 180) && Main.rand.Next(1000) == 0)
				{
					Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 9);
				}
				this.noGravity = true;
				if (!this.noTileCollide)
				{
					if (this.collideX)
					{
						this.velocity.X = this.oldVelocity.X * -0.5f;
						if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
						{
							this.velocity.X = 2f;
						}
						if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
						{
							this.velocity.X = -2f;
						}
					}
					if (this.collideY)
					{
						this.velocity.Y = this.oldVelocity.Y * -0.5f;
						if (this.velocity.Y > 0f && this.velocity.Y < 1f)
						{
							this.velocity.Y = 1f;
						}
						if (this.velocity.Y < 0f && this.velocity.Y > -1f)
						{
							this.velocity.Y = -1f;
						}
					}
				}
				if (Main.dayTime && (double)this.position.Y <= Main.worldSurface * 16.0 && (this.type == 2 || this.type == 133 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194 || this.type == 317 || this.type == 318))
				{
					if (this.timeLeft > 10)
					{
						this.timeLeft = 10;
					}
					this.directionY = -1;
					if (this.velocity.Y > 0f)
					{
						this.direction = 1;
					}
					this.direction = -1;
					if (this.velocity.X > 0f)
					{
						this.direction = 1;
					}
				}
				else
				{
					this.TargetClosest(true);
				}
				if (this.type == 170 || this.type == 171 || this.type == 180)
				{
					if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						if (this.ai[1] > 0f && !Collision.SolidCollision(this.position, this.width, this.height))
						{
							this.ai[1] = 0f;
							this.ai[0] = 0f;
							this.netUpdate = true;
						}
					}
					else if (this.ai[1] == 0f)
					{
						this.ai[0] += 1f;
					}
					if (this.ai[0] >= 300f)
					{
						this.ai[1] = 1f;
						this.ai[0] = 0f;
						this.netUpdate = true;
					}
					if (this.ai[1] == 0f)
					{
						this.alpha = 0;
						this.noTileCollide = false;
					}
					else
					{
						this.wet = false;
						this.alpha = 200;
						this.noTileCollide = true;
					}
					this.rotation = this.velocity.Y * 0.1f * (float)this.direction;
					this.TargetClosest(true);
					if (this.direction == -1 && this.velocity.X > -4f && this.position.X > Main.player[this.target].position.X + (float)Main.player[this.target].width)
					{
						this.velocity.X = this.velocity.X - 0.08f;
						if (this.velocity.X > 4f)
						{
							this.velocity.X = this.velocity.X - 0.04f;
						}
						else if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X - 0.2f;
						}
						if (this.velocity.X < -4f)
						{
							this.velocity.X = -4f;
						}
					}
					else if (this.direction == 1 && this.velocity.X < 4f && this.position.X + (float)this.width < Main.player[this.target].position.X)
					{
						this.velocity.X = this.velocity.X + 0.08f;
						if (this.velocity.X < -4f)
						{
							this.velocity.X = this.velocity.X + 0.04f;
						}
						else if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X + 0.2f;
						}
						if (this.velocity.X > 4f)
						{
							this.velocity.X = 4f;
						}
					}
					if (this.directionY == -1 && (double)this.velocity.Y > -2.5 && this.position.Y > Main.player[this.target].position.Y + (float)Main.player[this.target].height)
					{
						this.velocity.Y = this.velocity.Y - 0.1f;
						if ((double)this.velocity.Y > 2.5)
						{
							this.velocity.Y = this.velocity.Y - 0.05f;
						}
						else if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.15f;
						}
						if ((double)this.velocity.Y < -2.5)
						{
							this.velocity.Y = -2.5f;
						}
					}
					else if (this.directionY == 1 && (double)this.velocity.Y < 2.5 && this.position.Y + (float)this.height < Main.player[this.target].position.Y)
					{
						this.velocity.Y = this.velocity.Y + 0.1f;
						if ((double)this.velocity.Y < -2.5)
						{
							this.velocity.Y = this.velocity.Y + 0.05f;
						}
						else if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.15f;
						}
						if ((double)this.velocity.Y > 2.5)
						{
							this.velocity.Y = 2.5f;
						}
					}
				}
				else if (this.type == 116)
				{
					this.TargetClosest(true);
					Lighting.AddLight((int)(this.position.X + (float)(this.width / 2)) / 16, (int)(this.position.Y + (float)(this.height / 2)) / 16, 0.3f, 0.2f, 0.1f);
					if (this.direction == -1 && this.velocity.X > -6f)
					{
						this.velocity.X = this.velocity.X - 0.1f;
						if (this.velocity.X > 6f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X - 0.2f;
						}
						if (this.velocity.X < -6f)
						{
							this.velocity.X = -6f;
						}
					}
					else if (this.direction == 1 && this.velocity.X < 6f)
					{
						this.velocity.X = this.velocity.X + 0.1f;
						if (this.velocity.X < -6f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
						else if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X + 0.2f;
						}
						if (this.velocity.X > 6f)
						{
							this.velocity.X = 6f;
						}
					}
					if (this.directionY == -1 && (double)this.velocity.Y > -2.5)
					{
						this.velocity.Y = this.velocity.Y - 0.04f;
						if ((double)this.velocity.Y > 2.5)
						{
							this.velocity.Y = this.velocity.Y - 0.05f;
						}
						else if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.15f;
						}
						if ((double)this.velocity.Y < -2.5)
						{
							this.velocity.Y = -2.5f;
						}
					}
					else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
					{
						this.velocity.Y = this.velocity.Y + 0.04f;
						if ((double)this.velocity.Y < -2.5)
						{
							this.velocity.Y = this.velocity.Y + 0.05f;
						}
						else if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.15f;
						}
						if ((double)this.velocity.Y > 2.5)
						{
							this.velocity.Y = 2.5f;
						}
					}
					if (Main.rand.Next(40) == 0)
					{
						int num24 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f), this.width, (int)((float)this.height * 0.5f), 5, this.velocity.X, 2f, 0, default(Color), 1f);
						Dust expr_2AA2_cp_0 = Main.dust[num24];
						expr_2AA2_cp_0.velocity.X = expr_2AA2_cp_0.velocity.X * 0.5f;
						Dust expr_2AC0_cp_0 = Main.dust[num24];
						expr_2AC0_cp_0.velocity.Y = expr_2AC0_cp_0.velocity.Y * 0.1f;
					}
				}
				else if (this.type == 133)
				{
					if ((double)this.life < (double)this.lifeMax * 0.5)
					{
						if (this.direction == -1 && this.velocity.X > -6f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
							if (this.velocity.X > 6f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
							}
							else if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X + 0.05f;
							}
							if (this.velocity.X < -6f)
							{
								this.velocity.X = -6f;
							}
						}
						else if (this.direction == 1 && this.velocity.X < 6f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
							if (this.velocity.X < -6f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
							}
							else if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X - 0.05f;
							}
							if (this.velocity.X > 6f)
							{
								this.velocity.X = 6f;
							}
						}
						if (this.directionY == -1 && this.velocity.Y > -4f)
						{
							this.velocity.Y = this.velocity.Y - 0.1f;
							if (this.velocity.Y > 4f)
							{
								this.velocity.Y = this.velocity.Y - 0.1f;
							}
							else if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y + 0.05f;
							}
							if (this.velocity.Y < -4f)
							{
								this.velocity.Y = -4f;
							}
						}
						else if (this.directionY == 1 && this.velocity.Y < 4f)
						{
							this.velocity.Y = this.velocity.Y + 0.1f;
							if (this.velocity.Y < -4f)
							{
								this.velocity.Y = this.velocity.Y + 0.1f;
							}
							else if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y - 0.05f;
							}
							if (this.velocity.Y > 4f)
							{
								this.velocity.Y = 4f;
							}
						}
					}
					else
					{
						if (this.direction == -1 && this.velocity.X > -4f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
							if (this.velocity.X > 4f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
							}
							else if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X + 0.05f;
							}
							if (this.velocity.X < -4f)
							{
								this.velocity.X = -4f;
							}
						}
						else if (this.direction == 1 && this.velocity.X < 4f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
							if (this.velocity.X < -4f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
							}
							else if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X - 0.05f;
							}
							if (this.velocity.X > 4f)
							{
								this.velocity.X = 4f;
							}
						}
						if (this.directionY == -1 && (double)this.velocity.Y > -1.5)
						{
							this.velocity.Y = this.velocity.Y - 0.04f;
							if ((double)this.velocity.Y > 1.5)
							{
								this.velocity.Y = this.velocity.Y - 0.05f;
							}
							else if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y + 0.03f;
							}
							if ((double)this.velocity.Y < -1.5)
							{
								this.velocity.Y = -1.5f;
							}
						}
						else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
						{
							this.velocity.Y = this.velocity.Y + 0.04f;
							if ((double)this.velocity.Y < -1.5)
							{
								this.velocity.Y = this.velocity.Y + 0.05f;
							}
							else if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y - 0.03f;
							}
							if ((double)this.velocity.Y > 1.5)
							{
								this.velocity.Y = 1.5f;
							}
						}
					}
				}
				else
				{
					float num25 = 4f;
					float num26 = 1.5f;
					num25 *= 1f + (1f - this.scale);
					num26 *= 1f + (1f - this.scale);
					if (this.direction == -1 && this.velocity.X > -num25)
					{
						this.velocity.X = this.velocity.X - 0.1f;
						if (this.velocity.X > num25)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X + 0.05f;
						}
						if (this.velocity.X < -num25)
						{
							this.velocity.X = -num25;
						}
					}
					else if (this.direction == 1 && this.velocity.X < num25)
					{
						this.velocity.X = this.velocity.X + 0.1f;
						if (this.velocity.X < -num25)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
						else if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X - 0.05f;
						}
						if (this.velocity.X > num25)
						{
							this.velocity.X = num25;
						}
					}
					if (this.directionY == -1 && this.velocity.Y > -num26)
					{
						this.velocity.Y = this.velocity.Y - 0.04f;
						if (this.velocity.Y > num26)
						{
							this.velocity.Y = this.velocity.Y - 0.05f;
						}
						else if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.03f;
						}
						if (this.velocity.Y < -num26)
						{
							this.velocity.Y = -num26;
						}
					}
					else if (this.directionY == 1 && this.velocity.Y < num26)
					{
						this.velocity.Y = this.velocity.Y + 0.04f;
						if (this.velocity.Y < -num26)
						{
							this.velocity.Y = this.velocity.Y + 0.05f;
						}
						else if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.03f;
						}
						if (this.velocity.Y > num26)
						{
							this.velocity.Y = num26;
						}
					}
				}
				if ((this.type == 2 || this.type == 133 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194) && Main.rand.Next(40) == 0)
				{
					int num27 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f), this.width, (int)((float)this.height * 0.5f), 5, this.velocity.X, 2f, 0, default(Color), 1f);
					Dust expr_347E_cp_0 = Main.dust[num27];
					expr_347E_cp_0.velocity.X = expr_347E_cp_0.velocity.X * 0.5f;
					Dust expr_349C_cp_0 = Main.dust[num27];
					expr_349C_cp_0.velocity.Y = expr_349C_cp_0.velocity.Y * 0.1f;
				}
				if (this.wet && this.type != 170 && this.type != 171 && this.type != 172)
				{
					if (this.velocity.Y > 0f)
					{
						this.velocity.Y = this.velocity.Y * 0.95f;
					}
					this.velocity.Y = this.velocity.Y - 0.5f;
					if (this.velocity.Y < -4f)
					{
						this.velocity.Y = -4f;
					}
					this.TargetClosest(true);
					return;
				}
			}
			else if (this.aiStyle == 3)
			{
				if (this.type == 466)
				{
					int num28 = 200;
					if (this.ai[2] == 0f)
					{
						this.alpha = num28;
						this.TargetClosest(true);
						if (!Main.player[this.target].dead && (Main.player[this.target].Center - base.Center).Length() < 170f)
						{
							this.ai[2] = -16f;
						}
						if (this.velocity.X != 0f || this.velocity.Y < 0f || this.velocity.Y > 2f || this.justHit)
						{
							this.ai[2] = -16f;
						}
						return;
					}
					if (this.ai[2] < 0f)
					{
						if (this.alpha > 0)
						{
							this.alpha -= num28 / 16;
							if (this.alpha < 0)
							{
								this.alpha = 0;
							}
						}
						this.ai[2] += 1f;
						if (this.ai[2] == 0f)
						{
							this.ai[2] = 1f;
							this.velocity.X = (float)(this.direction * 2);
						}
						return;
					}
					this.alpha = 0;
				}
				if (this.type == 166)
				{
					if (Main.netMode != 1 && Main.rand.Next(240) == 0)
					{
						this.ai[2] = (float)Main.rand.Next(-480, -60);
						this.netUpdate = true;
					}
					if (this.ai[2] < 0f)
					{
						this.TargetClosest(true);
						if (this.justHit)
						{
							this.ai[2] = 0f;
						}
						if (Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
						{
							this.ai[2] = 0f;
						}
					}
					if (this.ai[2] < 0f)
					{
						this.velocity.X = this.velocity.X * 0.9f;
						if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
						{
							this.velocity.X = 0f;
						}
						this.ai[2] += 1f;
						if (this.ai[2] == 0f)
						{
							this.velocity.X = (float)this.direction * 0.1f;
						}
						return;
					}
				}
				if (this.type == 461)
				{
					if (this.wet)
					{
						this.knockBackResist = 0f;
						this.ai[3] = -0.10101f;
						this.noGravity = true;
						Vector2 center = base.Center;
						this.width = 34;
						this.height = 24;
						this.position.X = center.X - (float)(this.width / 2);
						this.position.Y = center.Y - (float)(this.height / 2);
						this.TargetClosest(true);
						if (this.collideX)
						{
							this.velocity.X = -this.oldVelocity.X;
						}
						if (this.velocity.X < 0f)
						{
							this.direction = -1;
						}
						if (this.velocity.X > 0f)
						{
							this.direction = 1;
						}
						if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].Center, 1, 1))
						{
							Vector2 value = Main.player[this.target].Center - base.Center;
							value.Normalize();
							value *= 5f;
							this.velocity = (this.velocity * 19f + value) / 20f;
							return;
						}
						float num29 = 5f;
						if (this.velocity.Y > 0f)
						{
							num29 = 3f;
						}
						if (this.velocity.Y < 0f)
						{
							num29 = 8f;
						}
						Vector2 value2 = new Vector2((float)this.direction, -1f);
						value2.Normalize();
						value2 *= num29;
						if (num29 < 5f)
						{
							this.velocity = (this.velocity * 24f + value2) / 25f;
							return;
						}
						this.velocity = (this.velocity * 9f + value2) / 10f;
						return;
					}
					else
					{
						this.knockBackResist = 0.4f * Main.knockBackMultiplier;
						this.noGravity = false;
						Vector2 center2 = base.Center;
						this.width = 18;
						this.height = 40;
						this.position.X = center2.X - (float)(this.width / 2);
						this.position.Y = center2.Y - (float)(this.height / 2);
						if (this.ai[3] == -0.10101f)
						{
							this.ai[3] = 0f;
							float num30 = this.velocity.Length();
							num30 *= 2f;
							if (num30 > 10f)
							{
								num30 = 10f;
							}
							this.velocity.Normalize();
							this.velocity *= num30;
							if (this.velocity.X < 0f)
							{
								this.direction = -1;
							}
							if (this.velocity.X > 0f)
							{
								this.direction = 1;
							}
							this.spriteDirection = this.direction;
						}
					}
				}
				if (this.type == 379 || this.type == 380)
				{
					if (this.ai[3] < 0f)
					{
						this.damage = 0;
						this.velocity.X = this.velocity.X * 0.93f;
						if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
						{
							this.velocity.X = 0f;
						}
						int num31 = (int)(-this.ai[3] - 1f);
						int num32 = Math.Sign(Main.npc[num31].Center.X - base.Center.X);
						if (num32 != this.direction)
						{
							this.velocity.X = 0f;
							this.direction = num32;
							this.netUpdate = true;
						}
						if (this.justHit && Main.netMode != 1 && Main.npc[num31].localAI[0] == 0f)
						{
							Main.npc[num31].localAI[0] = 1f;
						}
						if (this.ai[0] < 1000f)
						{
							this.ai[0] = 1000f;
						}
						if ((this.ai[0] += 1f) >= 1300f)
						{
							this.ai[0] = 1000f;
							this.netUpdate = true;
						}
						return;
					}
					if (this.ai[0] >= 1000f)
					{
						this.ai[0] = 0f;
					}
					this.damage = this.defDamage;
				}
				if (this.type == 383 && this.ai[2] == 0f && this.localAI[0] == 0f && Main.netMode != 1)
				{
					int num33 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 384, this.whoAmI, 0f, 0f, 0f, 0f, 255);
					this.ai[2] = (float)(num33 + 1);
					this.localAI[0] = -1f;
					this.netUpdate = true;
					Main.npc[num33].ai[0] = (float)this.whoAmI;
					Main.npc[num33].netUpdate = true;
				}
				if (this.type == 383)
				{
					int num34 = (int)this.ai[2] - 1;
					if (num34 != -1 && Main.npc[num34].active && Main.npc[num34].type == 384)
					{
						this.dontTakeDamage = true;
					}
					else
					{
						this.dontTakeDamage = false;
						this.ai[2] = 0f;
						if (this.localAI[0] == -1f)
						{
							this.localAI[0] = 180f;
						}
						if (this.localAI[0] > 0f)
						{
							this.localAI[0] -= 1f;
						}
					}
				}
				if (this.type == 482)
				{
					int num35 = 300;
					int num36 = 120;
					this.dontTakeDamage = false;
					if (this.ai[2] < 0f)
					{
						this.dontTakeDamage = true;
						this.ai[2] += 1f;
						this.velocity.X = this.velocity.X * 0.9f;
						if ((double)Math.Abs(this.velocity.X) < 0.001)
						{
							this.velocity.X = 0.001f * (float)this.direction;
						}
						if (Math.Abs(this.velocity.Y) > 1f)
						{
							this.ai[2] += 10f;
						}
						if (this.ai[2] >= 0f)
						{
							this.netUpdate = true;
							this.velocity.X = this.velocity.X + (float)this.direction * 0.3f;
						}
						return;
					}
					if (this.ai[2] < (float)num35)
					{
						if (this.justHit)
						{
							this.ai[2] += 15f;
						}
						this.ai[2] += 1f;
					}
					else if (this.velocity.Y == 0f)
					{
						this.ai[2] = (float)(-(float)num36);
						this.netUpdate = true;
					}
				}
				if (this.type == 480)
				{
					int num37 = 180;
					int num38 = 300;
					int num39 = 180;
					int num40 = 60;
					int num41 = 20;
					if (this.life < this.lifeMax / 3)
					{
						num37 = 120;
						num38 = 240;
						num39 = 240;
						num40 = 90;
					}
					if (this.ai[2] > 0f)
					{
						this.ai[2] -= 1f;
					}
					else if (this.ai[2] == 0f)
					{
						if (((Main.player[this.target].Center.X < base.Center.X && this.direction < 0) || (Main.player[this.target].Center.X > base.Center.X && this.direction > 0)) && this.velocity.Y == 0f && base.Distance(Main.player[this.target].Center) < 900f && Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
						{
							this.ai[2] = (float)(-(float)num39 - num41);
							this.netUpdate = true;
						}
					}
					else
					{
						if (this.ai[2] < 0f && this.ai[2] < (float)(-(float)num39))
						{
							this.velocity.X = this.velocity.X * 0.9f;
							if (this.velocity.Y < -2f || this.velocity.Y > 4f || this.justHit)
							{
								this.ai[2] = (float)num37;
							}
							else
							{
								this.ai[2] += 1f;
								if (this.ai[2] == 0f)
								{
									this.ai[2] = (float)num38;
								}
							}
							float num42 = this.ai[2] + (float)num39 + (float)num41;
							if (num42 == 1f)
							{
								Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 17);
							}
							if (num42 < (float)num41)
							{
								Vector2 vector7 = base.Top + new Vector2((float)(this.spriteDirection * 6), 6f);
								float scaleFactor = MathHelper.Lerp(20f, 30f, (num42 * 3f + 50f) / 182f);
								Main.rand.NextFloat();
								for (float num43 = 0f; num43 < 2f; num43 += 1f)
								{
									Vector2 vector8 = Vector2.UnitY.RotatedByRandom(6.2831854820251465) * (Main.rand.NextFloat() * 0.5f + 0.5f);
									Dust dust = Main.dust[Dust.NewDust(vector7, 0, 0, 228, 0f, 0f, 0, default(Color), 1f)];
									dust.position = vector7 + vector8 * scaleFactor;
									dust.noGravity = true;
									dust.velocity = vector8 * 2f;
									dust.scale = 0.5f + Main.rand.NextFloat() * 0.5f;
								}
							}
							Lighting.AddLight(base.Center, 0.9f, 0.75f, 0.1f);
							return;
						}
						if (this.ai[2] < 0f && this.ai[2] >= (float)(-(float)num39))
						{
							Lighting.AddLight(base.Center, 0.9f, 0.75f, 0.1f);
							this.velocity.X = this.velocity.X * 0.9f;
							if (this.velocity.Y < -2f || this.velocity.Y > 4f || this.justHit)
							{
								this.ai[2] = (float)num37;
							}
							else
							{
								this.ai[2] += 1f;
								if (this.ai[2] == 0f)
								{
									this.ai[2] = (float)num38;
								}
							}
							float num44 = this.ai[2] + (float)num39;
							if (num44 < 180f && (Main.rand.Next(3) == 0 || this.ai[2] % 3f == 0f))
							{
								Vector2 vector9 = base.Top + new Vector2((float)(this.spriteDirection * 10), 10f);
								float scaleFactor2 = MathHelper.Lerp(20f, 30f, (num44 * 3f + 50f) / 182f);
								Main.rand.NextFloat();
								for (float num45 = 0f; num45 < 1f; num45 += 1f)
								{
									Vector2 vector10 = Vector2.UnitY.RotatedByRandom(6.2831854820251465) * (Main.rand.NextFloat() * 0.5f + 0.5f);
									Dust dust2 = Main.dust[Dust.NewDust(vector9, 0, 0, 228, 0f, 0f, 0, default(Color), 1f)];
									dust2.position = vector9 + vector10 * scaleFactor2;
									dust2.noGravity = true;
									dust2.velocity = vector10 * 4f;
									dust2.scale = 0.5f + Main.rand.NextFloat();
								}
							}
							if (Main.netMode != 2)
							{
								Player player = Main.player[Main.myPlayer];
								int arg_45AF_0 = Main.myPlayer;
								if (!player.dead && player.active && player.HasBuff(156) == -1)
								{
									Vector2 vector11 = player.Center - base.Center;
									if (vector11.Length() < 700f)
									{
										bool flag3 = vector11.Length() < 30f;
										if (!flag3)
										{
											float x = 0.7853982f.ToRotationVector2().X;
											Vector2 vector12 = Vector2.Normalize(vector11);
											if (vector12.X > x || vector12.X < -x)
											{
												flag3 = true;
											}
										}
										if (((player.Center.X < base.Center.X && this.direction < 0 && player.direction > 0) || (player.Center.X > base.Center.X && this.direction > 0 && player.direction < 0)) && flag3)
										{
											bool flag4 = Collision.CanHitLine(base.Center, 1, 1, player.Center, 1, 1) || Collision.CanHitLine(base.Center - Vector2.UnitY * 16f, 1, 1, player.Center, 1, 1) || Collision.CanHitLine(base.Center + Vector2.UnitY * 8f, 1, 1, player.Center, 1, 1);
											if (flag4)
											{
												player.AddBuff(156, num40 + (int)this.ai[2] * -1, true);
											}
										}
									}
								}
							}
							return;
						}
					}
				}
				if (this.type == 471)
				{
					if (this.ai[3] < 0f)
					{
						this.knockBackResist = 0f;
						this.defense = (int)((double)this.defDefense * 1.1);
						this.noGravity = true;
						this.noTileCollide = true;
						if (this.velocity.X < 0f)
						{
							this.direction = -1;
						}
						else if (this.velocity.X > 0f)
						{
							this.direction = 1;
						}
						this.rotation = this.velocity.X * 0.1f;
						if (Main.netMode != 1)
						{
							this.localAI[3] += 1f;
							if (this.localAI[3] > (float)Main.rand.Next(20, 180))
							{
								this.localAI[3] = 0f;
								Vector2 value3 = base.Center;
								value3 += this.velocity;
								NPC.NewNPC((int)value3.X, (int)value3.Y, 30, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
					}
					else
					{
						this.localAI[3] = 0f;
						this.knockBackResist = 0.35f * Main.knockBackMultiplier;
						this.rotation *= 0.9f;
						this.defense = this.defDefense;
						this.noGravity = false;
						this.noTileCollide = false;
					}
					if (this.ai[3] == 1f)
					{
						this.knockBackResist = 0f;
						this.defense += 10;
					}
					if (this.ai[3] == -1f)
					{
						this.TargetClosest(true);
						float num46 = 8f;
						float num47 = 40f;
						Vector2 value4 = Main.player[this.target].Center - base.Center;
						float num48 = value4.Length();
						num46 += num48 / 200f;
						value4.Normalize();
						value4 *= num46;
						this.velocity = (this.velocity * (num47 - 1f) + value4) / num47;
						if (num48 < 500f && !Collision.SolidCollision(this.position, this.width, this.height))
						{
							this.ai[3] = 0f;
							this.ai[2] = 0f;
						}
						return;
					}
					if (this.ai[3] == -2f)
					{
						this.velocity.Y = this.velocity.Y - 0.2f;
						if (this.velocity.Y < -10f)
						{
							this.velocity.Y = -10f;
						}
						if (Main.player[this.target].Center.Y - base.Center.Y > 200f)
						{
							this.TargetClosest(true);
							this.ai[3] = -3f;
							if (Main.player[this.target].Center.X > base.Center.X)
							{
								this.ai[2] = 1f;
							}
							else
							{
								this.ai[2] = -1f;
							}
						}
						this.velocity.X = this.velocity.X * 0.99f;
						return;
					}
					if (this.ai[3] == -3f)
					{
						if (this.direction == 0)
						{
							this.TargetClosest(true);
						}
						if (this.ai[2] == 0f)
						{
							this.ai[2] = (float)this.direction;
						}
						this.velocity.Y = this.velocity.Y * 0.9f;
						this.velocity.X = this.velocity.X + this.ai[2] * 0.3f;
						if (this.velocity.X > 10f)
						{
							this.velocity.X = 10f;
						}
						if (this.velocity.X < -10f)
						{
							this.velocity.X = -10f;
						}
						float num49 = Main.player[this.target].Center.X - base.Center.X;
						if ((this.ai[2] < 0f && num49 > 300f) || (this.ai[2] > 0f && num49 < -300f))
						{
							this.ai[3] = -4f;
							this.ai[2] = 0f;
							return;
						}
						if (Math.Abs(num49) > 800f)
						{
							this.ai[3] = -1f;
							this.ai[2] = 0f;
						}
						return;
					}
					else
					{
						if (this.ai[3] == -4f)
						{
							this.ai[2] += 1f;
							this.velocity.Y = this.velocity.Y + 0.1f;
							if (this.velocity.Length() > 4f)
							{
								this.velocity *= 0.9f;
							}
							int num50 = (int)base.Center.X / 16;
							int num51 = (int)(this.position.Y + (float)this.height + 12f) / 16;
							bool flag5 = false;
							for (int num52 = num50 - 1; num52 <= num50 + 1; num52++)
							{
								if (Main.tile[num52, num51] == null)
								{
									Main.tile[num50, num51] = new Tile();
								}
								if (Main.tile[num52, num51].active() && Main.tileSolid[(int)Main.tile[num52, num51].type])
								{
									flag5 = true;
								}
							}
							if (flag5 && !Collision.SolidCollision(this.position, this.width, this.height))
							{
								this.ai[3] = 0f;
								this.ai[2] = 0f;
							}
							else if (this.ai[2] > 300f || base.Center.Y > Main.player[this.target].Center.Y + 200f)
							{
								this.ai[3] = -1f;
								this.ai[2] = 0f;
							}
						}
						else
						{
							if (this.ai[3] == 1f)
							{
								Vector2 center3 = base.Center;
								center3.Y -= 70f;
								this.velocity.X = this.velocity.X * 0.8f;
								this.ai[2] += 1f;
								if (this.ai[2] == 60f)
								{
									if (Main.netMode != 1)
									{
										NPC.NewNPC((int)center3.X, (int)center3.Y + 18, 472, 0, 0f, 0f, 0f, 0f, 255);
									}
								}
								else if (this.ai[2] >= 90f)
								{
									this.ai[3] = -2f;
									this.ai[2] = 0f;
								}
								for (int num53 = 0; num53 < 2; num53++)
								{
									Vector2 vector13 = center3;
									Vector2 value5 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
									value5.Normalize();
									value5 *= (float)Main.rand.Next(0, 100) * 0.1f;
									vector13 += value5;
									value5.Normalize();
									value5 *= (float)Main.rand.Next(50, 90) * 0.1f;
									int num54 = Dust.NewDust(vector13, 1, 1, 27, 0f, 0f, 0, default(Color), 1f);
									Main.dust[num54].velocity = -value5 * 0.3f;
									Main.dust[num54].alpha = 100;
									if (Main.rand.Next(2) == 0)
									{
										Main.dust[num54].noGravity = true;
										Main.dust[num54].scale += 0.3f;
									}
								}
								return;
							}
							this.ai[2] += 1f;
							int num55 = 10;
							if (this.velocity.Y == 0f && NPC.CountNPCS(472) < num55)
							{
								if (this.ai[2] >= 180f)
								{
									this.ai[2] = 0f;
									this.ai[3] = 1f;
								}
							}
							else
							{
								if (NPC.CountNPCS(472) >= num55)
								{
									this.ai[2] += 1f;
								}
								if (this.ai[2] >= 360f)
								{
									this.ai[2] = 0f;
									this.ai[3] = -2f;
									this.velocity.Y = this.velocity.Y - 3f;
								}
							}
							if (this.target >= 0 && !Main.player[this.target].dead && (Main.player[this.target].Center - base.Center).Length() > 800f)
							{
								this.ai[3] = -1f;
								this.ai[2] = 0f;
							}
						}
						if (Main.player[this.target].dead)
						{
							this.TargetClosest(true);
							if (Main.player[this.target].dead && this.timeLeft > 1)
							{
								this.timeLeft = 1;
							}
						}
					}
				}
				if (this.type == 419)
				{
					this.reflectingProjectiles = false;
					this.takenDamageMultiplier = 1f;
					int num56 = 6;
					int num57 = 10;
					float scaleFactor3 = 16f;
					if (this.ai[2] > 0f)
					{
						this.ai[2] -= 1f;
					}
					if (this.ai[2] == 0f)
					{
						if (((Main.player[this.target].Center.X < base.Center.X && this.direction < 0) || (Main.player[this.target].Center.X > base.Center.X && this.direction > 0)) && Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
						{
							this.ai[2] = -1f;
							this.netUpdate = true;
							this.TargetClosest(true);
						}
					}
					else
					{
						if (this.ai[2] < 0f && this.ai[2] > (float)(-(float)num56))
						{
							this.ai[2] -= 1f;
							this.velocity.X = this.velocity.X * 0.9f;
							return;
						}
						if (this.ai[2] == (float)(-(float)num56))
						{
							this.ai[2] -= 1f;
							this.TargetClosest(true);
							Vector2 vec = base.DirectionTo(Main.player[this.target].Top + new Vector2(0f, -30f));
							if (vec.HasNaNs())
							{
								vec = Vector2.Normalize(new Vector2((float)this.spriteDirection, -1f));
							}
							this.velocity = vec * scaleFactor3;
							this.netUpdate = true;
							return;
						}
						if (this.ai[2] < (float)(-(float)num56))
						{
							this.ai[2] -= 1f;
							if (this.velocity.Y == 0f)
							{
								this.ai[2] = 60f;
							}
							else if (this.ai[2] < (float)(-(float)num56 - num57))
							{
								this.velocity.Y = this.velocity.Y + 0.15f;
								if (this.velocity.Y > 24f)
								{
									this.velocity.Y = 24f;
								}
							}
							this.reflectingProjectiles = true;
							this.takenDamageMultiplier = 3f;
							if (this.justHit)
							{
								this.ai[2] = 60f;
								this.netUpdate = true;
							}
							return;
						}
					}
				}
				if (this.type == 415)
				{
					int num58 = 42;
					int num59 = 18;
					if (this.justHit)
					{
						this.ai[2] = 120f;
						this.netUpdate = true;
					}
					if (this.ai[2] > 0f)
					{
						this.ai[2] -= 1f;
					}
					if (this.ai[2] == 0f)
					{
						int num60 = 0;
						for (int num61 = 0; num61 < 200; num61++)
						{
							if (Main.npc[num61].active && Main.npc[num61].type == 516)
							{
								num60++;
							}
						}
						if (num60 > 6)
						{
							this.ai[2] = 90f;
						}
						else if (((Main.player[this.target].Center.X < base.Center.X && this.direction < 0) || (Main.player[this.target].Center.X > base.Center.X && this.direction > 0)) && Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
						{
							this.ai[2] = -1f;
							this.netUpdate = true;
							this.TargetClosest(true);
						}
					}
					else if (this.ai[2] < 0f && this.ai[2] > (float)(-(float)num58))
					{
						this.ai[2] -= 1f;
						if (this.ai[2] == (float)(-(float)num58))
						{
							this.ai[2] = (float)(180 + 30 * Main.rand.Next(10));
						}
						this.velocity.X = this.velocity.X * 0.8f;
						if (this.ai[2] == (float)(-(float)num59) || this.ai[2] == (float)(-(float)num59 - 8) || this.ai[2] == (float)(-(float)num59 - 16))
						{
							for (int num62 = 0; num62 < 20; num62++)
							{
								Vector2 vector14 = base.Center + Vector2.UnitX * (float)this.spriteDirection * 40f;
								Dust dust3 = Main.dust[Dust.NewDust(vector14, 0, 0, 259, 0f, 0f, 0, default(Color), 1f)];
								Vector2 vector15 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
								dust3.position = vector14 + vector15 * 4f;
								dust3.velocity = vector15 * 2f + Vector2.UnitX * Main.rand.NextFloat() * (float)this.spriteDirection * 3f;
								dust3.scale = 0.3f + vector15.X * (float)(-(float)this.spriteDirection);
								dust3.fadeIn = 0.7f;
								dust3.noGravity = true;
							}
							if (this.velocity.X > -0.5f && this.velocity.X < 0.5f)
							{
								this.velocity.X = 0f;
							}
							if (Main.netMode != 1)
							{
								NPC.NewNPC((int)base.Center.X + this.spriteDirection * 45, (int)base.Center.Y + 8, 516, 0, 0f, 0f, 0f, 0f, this.target);
							}
						}
						return;
					}
				}
				if (this.type == 428)
				{
					this.localAI[0] += 1f;
					if (this.localAI[0] >= 300f)
					{
						int num63 = (int)base.Center.X / 16 - 1;
						int num64 = (int)base.Center.Y / 16 - 1;
						if (!Collision.SolidTiles(num63, num63 + 2, num64, num64 + 1) && Main.netMode != 1)
						{
							this.Transform(427);
							this.life = this.lifeMax;
							this.localAI[0] = 0f;
							return;
						}
					}
					int maxValue;
					if (this.localAI[0] < 60f)
					{
						maxValue = 16;
					}
					else if (this.localAI[0] < 120f)
					{
						maxValue = 8;
					}
					else if (this.localAI[0] < 180f)
					{
						maxValue = 4;
					}
					else if (this.localAI[0] < 240f)
					{
						maxValue = 2;
					}
					else if (this.localAI[0] < 300f)
					{
						maxValue = 1;
					}
					else
					{
						maxValue = 1;
					}
					if (Main.rand.Next(maxValue) == 0)
					{
						Dust dust4 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
						dust4.noGravity = true;
						dust4.scale = 1f;
						dust4.noLight = true;
						dust4.velocity = base.DirectionFrom(dust4.position) * dust4.velocity.Length();
						dust4.position -= dust4.velocity * 5f;
						Dust expr_5958_cp_0 = dust4;
						expr_5958_cp_0.position.X = expr_5958_cp_0.position.X + (float)(this.direction * 6);
						Dust expr_5974_cp_0 = dust4;
						expr_5974_cp_0.position.Y = expr_5974_cp_0.position.Y + 4f;
					}
				}
				if (this.type == 427)
				{
					this.localAI[0] += 1f;
					this.localAI[0] += Math.Abs(this.velocity.X) / 2f;
					if (this.localAI[0] >= 1200f && Main.netMode != 1)
					{
						int num65 = (int)base.Center.X / 16 - 2;
						int num66 = (int)base.Center.Y / 16 - 3;
						if (!Collision.SolidTiles(num65, num65 + 4, num66, num66 + 4))
						{
							this.Transform(426);
							this.life = this.lifeMax;
							this.localAI[0] = 0f;
							return;
						}
					}
					int maxValue2;
					if (this.localAI[0] < 360f)
					{
						maxValue2 = 32;
					}
					else if (this.localAI[0] < 720f)
					{
						maxValue2 = 16;
					}
					else if (this.localAI[0] < 1080f)
					{
						maxValue2 = 6;
					}
					else if (this.localAI[0] < 1440f)
					{
						maxValue2 = 2;
					}
					else if (this.localAI[0] < 1800f)
					{
						maxValue2 = 1;
					}
					else
					{
						maxValue2 = 1;
					}
					if (Main.rand.Next(maxValue2) == 0)
					{
						Dust dust5 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
						dust5.noGravity = true;
						dust5.scale = 1f;
						dust5.noLight = true;
					}
				}
				bool flag6 = false;
				if (this.velocity.X == 0f)
				{
					flag6 = true;
				}
				if (this.justHit)
				{
					flag6 = false;
				}
				if (Main.netMode != 1 && this.type == 198 && (double)this.life <= (double)this.lifeMax * 0.55)
				{
					this.Transform(199);
				}
				if (Main.netMode != 1 && this.type == 348 && (double)this.life <= (double)this.lifeMax * 0.55)
				{
					this.Transform(349);
				}
				int num67 = 60;
				if (this.type == 120)
				{
					num67 = 180;
					if (this.ai[3] == -120f)
					{
						this.velocity *= 0f;
						this.ai[3] = 0f;
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
						Vector2 vector16 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num68 = this.oldPos[2].X + (float)this.width * 0.5f - vector16.X;
						float num69 = this.oldPos[2].Y + (float)this.height * 0.5f - vector16.Y;
						float num70 = (float)Math.Sqrt((double)(num68 * num68 + num69 * num69));
						num70 = 2f / num70;
						num68 *= num70;
						num69 *= num70;
						for (int num71 = 0; num71 < 20; num71++)
						{
							int num72 = Dust.NewDust(this.position, this.width, this.height, 71, num68, num69, 200, default(Color), 2f);
							Main.dust[num72].noGravity = true;
							Dust expr_5D3E_cp_0 = Main.dust[num72];
							expr_5D3E_cp_0.velocity.X = expr_5D3E_cp_0.velocity.X * 2f;
						}
						for (int num73 = 0; num73 < 20; num73++)
						{
							int num74 = Dust.NewDust(this.oldPos[2], this.width, this.height, 71, -num68, -num69, 200, default(Color), 2f);
							Main.dust[num74].noGravity = true;
							Dust expr_5DBF_cp_0 = Main.dust[num74];
							expr_5DBF_cp_0.velocity.X = expr_5DBF_cp_0.velocity.X * 2f;
						}
					}
				}
				bool flag7 = false;
				bool flag8 = true;
				if (this.type == 343 || this.type == 47 || this.type == 67 || this.type == 109 || this.type == 110 || this.type == 111 || this.type == 120 || this.type == 163 || this.type == 164 || this.type == 239 || this.type == 168 || this.type == 199 || this.type == 206 || this.type == 214 || this.type == 215 || this.type == 216 || this.type == 217 || this.type == 218 || this.type == 219 || this.type == 220 || this.type == 226 || this.type == 243 || this.type == 251 || this.type == 257 || this.type == 258 || this.type == 290 || this.type == 291 || this.type == 292 || this.type == 293 || this.type == 305 || this.type == 306 || this.type == 307 || this.type == 308 || this.type == 309 || this.type == 348 || this.type == 349 || this.type == 350 || this.type == 351 || this.type == 379 || (this.type >= 430 && this.type <= 436) || (this.type == 380 || this.type == 381 || this.type == 382 || this.type == 383 || this.type == 386 || this.type == 391 || (this.type >= 449 && this.type <= 452)) || (this.type == 466 || this.type == 464 || this.type == 166 || this.type == 469 || this.type == 468 || this.type == 471 || this.type == 470 || this.type == 480 || this.type == 481 || this.type == 482 || this.type == 411 || this.type == 424 || this.type == 409 || (this.type >= 494 && this.type <= 506)) || (this.type == 425 || this.type == 427 || this.type == 426 || this.type == 428 || this.type == 508 || this.type == 415 || this.type == 419 || this.type == 520 || (this.type >= 524 && this.type <= 527)) || this.type == 528 || this.type == 529 || this.type == 530 || this.type == 532)
				{
					flag8 = false;
				}
				bool flag9 = false;
				int num75 = this.type;
				if (num75 == 425 || num75 == 471)
				{
					flag9 = true;
				}
				bool flag10 = true;
				num75 = this.type;
				if (num75 <= 350)
				{
					if (num75 <= 206)
					{
						switch (num75)
						{
							case 110:
							case 111:
								break;
							default:
								if (num75 != 206)
								{
									goto IL_6402;
								}
								break;
						}
					}
					else
					{
						switch (num75)
						{
							case 214:
							case 215:
							case 216:
								break;
							default:
								switch (num75)
								{
									case 291:
									case 292:
									case 293:
										break;
									default:
										if (num75 != 350)
										{
											goto IL_6402;
										}
										break;
								}
								break;
						}
					}
				}
				else if (num75 <= 426)
				{
					switch (num75)
					{
						case 379:
						case 380:
						case 381:
						case 382:
							break;
						default:
							switch (num75)
							{
								case 409:
								case 411:
									break;
								case 410:
									goto IL_6402;
								default:
									switch (num75)
									{
										case 424:
										case 426:
											break;
										case 425:
											goto IL_6402;
										default:
											goto IL_6402;
									}
									break;
							}
							break;
					}
				}
				else if (num75 != 466)
				{
					switch (num75)
					{
						case 498:
						case 499:
						case 500:
						case 501:
						case 502:
						case 503:
						case 504:
						case 505:
						case 506:
							break;
						default:
							if (num75 != 520)
							{
								goto IL_6402;
							}
							break;
					}
				}
				if (this.ai[2] > 0f)
				{
					flag10 = false;
				}
				IL_6402:
				if (!flag9 && flag10)
				{
					if (this.velocity.Y == 0f && ((this.velocity.X > 0f && this.direction < 0) || (this.velocity.X < 0f && this.direction > 0)))
					{
						flag7 = true;
					}
					if (this.position.X == this.oldPosition.X || this.ai[3] >= (float)num67 || flag7)
					{
						this.ai[3] += 1f;
					}
					else if ((double)Math.Abs(this.velocity.X) > 0.9 && this.ai[3] > 0f)
					{
						this.ai[3] -= 1f;
					}
					if (this.ai[3] > (float)(num67 * 10))
					{
						this.ai[3] = 0f;
					}
					if (this.justHit)
					{
						this.ai[3] = 0f;
					}
					if (this.ai[3] == (float)num67)
					{
						this.netUpdate = true;
					}
				}
				if (this.type == 463 && Main.netMode != 1)
				{
					if (this.localAI[3] > 0f)
					{
						this.localAI[3] -= 1f;
					}
					if (this.justHit && this.localAI[3] <= 0f && Main.rand.Next(3) == 0)
					{
						this.localAI[3] = 30f;
						int num76 = Main.rand.Next(3, 6);
						int[] array = new int[num76];
						int num77 = 0;
						for (int num78 = 0; num78 < 255; num78++)
						{
							if (Main.player[num78].active && !Main.player[num78].dead && Collision.CanHitLine(this.position, this.width, this.height, Main.player[num78].position, Main.player[num78].width, Main.player[num78].height))
							{
								array[num77] = num78;
								num77++;
								if (num77 == num76)
								{
									break;
								}
							}
						}
						if (num77 > 1)
						{
							for (int num79 = 0; num79 < 100; num79++)
							{
								int num80 = Main.rand.Next(num77);
								int num81;
								for (num81 = num80; num81 == num80; num81 = Main.rand.Next(num77))
								{
								}
								int num82 = array[num80];
								array[num80] = array[num81];
								array[num81] = num82;
							}
						}
						Vector2 vector17 = new Vector2(-1f, -1f);
						for (int num83 = 0; num83 < num77; num83++)
						{
							Vector2 value6 = Main.npc[array[num83]].Center - base.Center;
							value6.Normalize();
							vector17 += value6;
						}
						vector17.Normalize();
						for (int num84 = 0; num84 < num76; num84++)
						{
							float scaleFactor4 = (float)Main.rand.Next(8, 13);
							Vector2 value7 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
							value7.Normalize();
							if (num77 > 0)
							{
								value7 += vector17;
								value7.Normalize();
							}
							value7 *= scaleFactor4;
							if (num77 > 0)
							{
								num77--;
								value7 = Main.player[array[num77]].Center - base.Center;
								value7.Normalize();
								value7 *= scaleFactor4;
							}
							Projectile.NewProjectile(base.Center.X, this.position.Y + (float)(this.width / 4), value7.X, value7.Y, 498, (int)((double)this.damage * 0.15), 1f, 255, 0f, 0f);
						}
					}
				}
				if (this.type == 460)
				{
					if (this.velocity.Y < -NPC.gravity || this.velocity.Y > NPC.gravity)
					{
						this.knockBackResist = 0f;
					}
					else
					{
						this.knockBackResist = 0.25f * Main.knockBackMultiplier;
					}
				}
				if (this.type == 469)
				{
					this.knockBackResist = 0.45f * Main.knockBackMultiplier;
					if (this.ai[2] == 1f)
					{
						this.knockBackResist = 0f;
					}
					bool flag11 = false;
					int num85 = (int)base.Center.X / 16;
					int num86 = (int)base.Center.Y / 16;
					for (int num87 = num85 - 1; num87 <= num85 + 1; num87++)
					{
						for (int num88 = num86 - 1; num88 <= num86 + 1; num88++)
						{
							if (Main.tile[num87, num88] != null && Main.tile[num87, num88].wall > 0)
							{
								flag11 = true;
								break;
							}
						}
						if (flag11)
						{
							break;
						}
					}
					if (this.ai[2] == 0f && flag11)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity.Y = -4.6f;
							this.velocity.X = this.velocity.X * 1.3f;
						}
						else if (this.velocity.Y > 0f)
						{
							this.ai[2] = 1f;
						}
					}
					if (flag11 && this.ai[2] == 1f && Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
					{
						Vector2 value8 = Main.player[this.target].Center - base.Center;
						float num89 = value8.Length();
						value8.Normalize();
						value8 *= 4.5f + num89 / 300f;
						this.velocity = (this.velocity * 29f + value8) / 30f;
						this.noGravity = true;
						this.ai[2] = 1f;
						return;
					}
					this.noGravity = false;
					this.ai[2] = 0f;
				}
				if (this.type == 462 && this.velocity.Y == 0f && (Main.player[this.target].Center - base.Center).Length() < 150f && Math.Abs(this.velocity.X) > 3f && ((this.velocity.X < 0f && base.Center.X > Main.player[this.target].Center.X) || (this.velocity.X > 0f && base.Center.X < Main.player[this.target].Center.X)))
				{
					this.velocity.X = this.velocity.X * 1.75f;
					this.velocity.Y = this.velocity.Y - 4.5f;
					if (base.Center.Y - Main.player[this.target].Center.Y > 20f)
					{
						this.velocity.Y = this.velocity.Y - 0.5f;
					}
					if (base.Center.Y - Main.player[this.target].Center.Y > 40f)
					{
						this.velocity.Y = this.velocity.Y - 1f;
					}
					if (base.Center.Y - Main.player[this.target].Center.Y > 80f)
					{
						this.velocity.Y = this.velocity.Y - 1.5f;
					}
					if (base.Center.Y - Main.player[this.target].Center.Y > 100f)
					{
						this.velocity.Y = this.velocity.Y - 1.5f;
					}
					if (Math.Abs(this.velocity.X) > 7f)
					{
						if (this.velocity.X < 0f)
						{
							this.velocity.X = -7f;
						}
						else
						{
							this.velocity.X = 7f;
						}
					}
				}
				if (this.ai[3] < (float)num67 && (Main.eclipse || !Main.dayTime || (double)this.position.Y > Main.worldSurface * 16.0 || (Main.invasionType == 1 && (this.type == 343 || this.type == 350)) || (Main.invasionType == 1 && (this.type == 26 || this.type == 27 || this.type == 28 || this.type == 111 || this.type == 471)) || (this.type == 73 || (Main.invasionType == 3 && this.type >= 212 && this.type <= 216)) || (Main.invasionType == 4 && (this.type == 381 || this.type == 382 || this.type == 383 || this.type == 385 || this.type == 386 || this.type == 389 || this.type == 391 || this.type == 520)) || (this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 47 || this.type == 67 || this.type == 77 || this.type == 78 || this.type == 79 || this.type == 80 || this.type == 110 || this.type == 120 || this.type == 168 || this.type == 181 || this.type == 185 || this.type == 198 || this.type == 199 || this.type == 206 || this.type == 217 || this.type == 218 || this.type == 219 || this.type == 220 || this.type == 239 || this.type == 243 || this.type == 254 || this.type == 255 || this.type == 257 || this.type == 258 || this.type == 291 || this.type == 292 || this.type == 293 || this.type == 379 || this.type == 380 || this.type == 464 || this.type == 470 || this.type == 424 || (this.type == 411 && (this.ai[1] >= 180f || this.ai[1] < 90f))) || (this.type == 409 || this.type == 425 || this.type == 429 || this.type == 427 || this.type == 428 || this.type == 508 || this.type == 415 || this.type == 419 || (this.type >= 524 && this.type <= 527)) || this.type == 528 || this.type == 529 || this.type == 530 || this.type == 532))
				{
					if ((this.type == 3 || this.type == 331 || this.type == 332 || this.type == 21 || (this.type >= 449 && this.type <= 452) || this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 77 || this.type == 110 || this.type == 132 || this.type == 167 || this.type == 161 || this.type == 162 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 197 || this.type == 200 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 223 || this.type == 291 || this.type == 292 || this.type == 293 || this.type == 320 || this.type == 321 || this.type == 319 || this.type == 481) && Main.rand.Next(1000) == 0)
					{
						Main.PlaySound(14, (int)this.position.X, (int)this.position.Y, 1);
					}
					if (this.type == 489 && Main.rand.Next(800) == 0)
					{
						Main.PlaySound(14, (int)this.position.X, (int)this.position.Y, this.type);
					}
					if ((this.type == 78 || this.type == 79 || this.type == 80) && Main.rand.Next(500) == 0)
					{
						Main.PlaySound(26, (int)this.position.X, (int)this.position.Y, 1);
					}
					if (this.type == 159 && Main.rand.Next(500) == 0)
					{
						Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 7);
					}
					if (this.type == 162 && Main.rand.Next(500) == 0)
					{
						Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 6);
					}
					if (this.type == 181 && Main.rand.Next(500) == 0)
					{
						Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 8);
					}
					if (this.type >= 269 && this.type <= 280 && Main.rand.Next(1000) == 0)
					{
						Main.PlaySound(14, (int)this.position.X, (int)this.position.Y, 1);
					}
					this.TargetClosest(true);
				}
				else if (this.ai[2] <= 0f || (this.type != 110 && this.type != 111 && this.type != 206 && this.type != 216 && this.type != 214 && this.type != 215 && this.type != 291 && this.type != 292 && this.type != 293 && this.type != 350 && this.type != 381 && this.type != 382 && this.type != 383 && this.type != 385 && this.type != 386 && this.type != 389 && this.type != 391 && this.type != 469 && this.type != 166 && this.type != 466 && this.type != 471 && this.type != 411 && this.type != 409 && this.type != 424 && this.type != 425 && this.type != 426 && this.type != 415 && this.type != 419 && this.type != 520))
				{
					if (Main.dayTime && (double)(this.position.Y / 16f) < Main.worldSurface && this.timeLeft > 10)
					{
						this.timeLeft = 10;
					}
					if (this.velocity.X == 0f)
					{
						if (this.velocity.Y == 0f)
						{
							this.ai[0] += 1f;
							if (this.ai[0] >= 2f)
							{
								this.direction *= -1;
								this.spriteDirection = this.direction;
								this.ai[0] = 0f;
							}
						}
					}
					else
					{
						this.ai[0] = 0f;
					}
					if (this.direction == 0)
					{
						this.direction = 1;
					}
				}
				if (this.type == 159 || this.type == 349)
				{
					if (this.type == 159 && ((this.velocity.X > 0f && this.direction < 0) || (this.velocity.X < 0f && this.direction > 0)))
					{
						this.velocity.X = this.velocity.X * 0.95f;
					}
					if (this.velocity.X < -6f || this.velocity.X > 6f)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < 6f && this.direction == 1)
					{
						if (this.velocity.Y == 0f && this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X * 0.99f;
						}
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > 6f)
						{
							this.velocity.X = 6f;
						}
					}
					else if (this.velocity.X > -6f && this.direction == -1)
					{
						if (this.velocity.Y == 0f && this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X * 0.99f;
						}
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -6f)
						{
							this.velocity.X = -6f;
						}
					}
				}
				else if (this.type == 199)
				{
					if (this.velocity.X < -4f || this.velocity.X > 4f)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < 4f && this.direction == 1)
					{
						if (this.velocity.Y == 0f && this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X * 0.8f;
						}
						this.velocity.X = this.velocity.X + 0.1f;
						if (this.velocity.X > 4f)
						{
							this.velocity.X = 4f;
						}
					}
					else if (this.velocity.X > -4f && this.direction == -1)
					{
						if (this.velocity.Y == 0f && this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X * 0.8f;
						}
						this.velocity.X = this.velocity.X - 0.1f;
						if (this.velocity.X < -4f)
						{
							this.velocity.X = -4f;
						}
					}
				}
				else if (this.type == 120 || this.type == 166 || this.type == 213 || this.type == 258 || this.type == 528 || this.type == 529)
				{
					if (this.velocity.X < -3f || this.velocity.X > 3f)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < 3f && this.direction == 1)
					{
						if (this.velocity.Y == 0f && this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X * 0.99f;
						}
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > 3f)
						{
							this.velocity.X = 3f;
						}
					}
					else if (this.velocity.X > -3f && this.direction == -1)
					{
						if (this.velocity.Y == 0f && this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X * 0.99f;
						}
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -3f)
						{
							this.velocity.X = -3f;
						}
					}
				}
				else if (this.type == 461 || this.type == 27 || this.type == 77 || this.type == 104 || this.type == 163 || this.type == 162 || this.type == 196 || this.type == 197 || this.type == 212 || this.type == 257 || this.type == 326 || this.type == 343 || this.type == 348 || this.type == 351 || (this.type >= 524 && this.type <= 527) || this.type == 530)
				{
					if (this.velocity.X < -2f || this.velocity.X > 2f)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < 2f && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > 2f)
						{
							this.velocity.X = 2f;
						}
					}
					else if (this.velocity.X > -2f && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -2f)
						{
							this.velocity.X = -2f;
						}
					}
				}
				else if (this.type == 109)
				{
					if (this.velocity.X < -2f || this.velocity.X > 2f)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < 2f && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.04f;
						if (this.velocity.X > 2f)
						{
							this.velocity.X = 2f;
						}
					}
					else if (this.velocity.X > -2f && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.04f;
						if (this.velocity.X < -2f)
						{
							this.velocity.X = -2f;
						}
					}
				}
				else if (this.type == 21 || this.type == 26 || this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 47 || this.type == 73 || this.type == 140 || this.type == 164 || this.type == 239 || this.type == 167 || this.type == 168 || this.type == 185 || this.type == 198 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 217 || this.type == 218 || this.type == 219 || this.type == 226 || this.type == 181 || this.type == 254 || this.type == 338 || this.type == 339 || this.type == 340 || this.type == 342 || this.type == 385 || this.type == 389 || this.type == 462 || this.type == 463 || this.type == 466 || this.type == 464 || this.type == 469 || this.type == 470 || this.type == 480 || this.type == 482 || this.type == 425 || this.type == 429)
				{
					float num90 = 1.5f;
					if (this.type == 294)
					{
						num90 = 2f;
					}
					else if (this.type == 295)
					{
						num90 = 1.75f;
					}
					else if (this.type == 296)
					{
						num90 = 1.25f;
					}
					else if (this.type == 201)
					{
						num90 = 1.1f;
					}
					else if (this.type == 202)
					{
						num90 = 0.9f;
					}
					else if (this.type == 203)
					{
						num90 = 1.2f;
					}
					else if (this.type == 338)
					{
						num90 = 1.75f;
					}
					else if (this.type == 339)
					{
						num90 = 1.25f;
					}
					else if (this.type == 340)
					{
						num90 = 2f;
					}
					else if (this.type == 385)
					{
						num90 = 1.8f;
					}
					else if (this.type == 389)
					{
						num90 = 2.25f;
					}
					else if (this.type == 462)
					{
						num90 = 4f;
					}
					else if (this.type == 463)
					{
						num90 = 0.75f;
					}
					else if (this.type == 466)
					{
						num90 = 3.75f;
					}
					else if (this.type == 469)
					{
						num90 = 3.25f;
					}
					else if (this.type == 480)
					{
						num90 = 1.5f + (1f - (float)this.life / (float)this.lifeMax) * 2f;
					}
					else if (this.type == 425)
					{
						num90 = 6f;
					}
					else if (this.type == 429)
					{
						num90 = 4f;
					}
					if (this.type == 21 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 342)
					{
						num90 *= 1f + (1f - this.scale);
					}
					if (this.velocity.X < -num90 || this.velocity.X > num90)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < num90 && this.direction == 1)
					{
						if (this.type == 466 && this.velocity.X < -2f)
						{
							this.velocity.X = this.velocity.X * 0.9f;
						}
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > num90)
						{
							this.velocity.X = num90;
						}
					}
					else if (this.velocity.X > -num90 && this.direction == -1)
					{
						if (this.type == 466 && this.velocity.X > 2f)
						{
							this.velocity.X = this.velocity.X * 0.9f;
						}
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -num90)
						{
							this.velocity.X = -num90;
						}
					}
					if (this.velocity.Y == 0f && this.type == 462 && ((this.direction > 0 && this.velocity.X < 0f) || (this.direction < 0 && this.velocity.X > 0f)))
					{
						this.velocity.X = this.velocity.X * 0.9f;
					}
				}
				else if (this.type >= 269 && this.type <= 280)
				{
					float num91 = 1.5f;
					if (this.type == 269)
					{
						num91 = 2f;
					}
					if (this.type == 270)
					{
						num91 = 1f;
					}
					if (this.type == 271)
					{
						num91 = 1.5f;
					}
					if (this.type == 272)
					{
						num91 = 3f;
					}
					if (this.type == 273)
					{
						num91 = 1.25f;
					}
					if (this.type == 274)
					{
						num91 = 3f;
					}
					if (this.type == 275)
					{
						num91 = 3.25f;
					}
					if (this.type == 276)
					{
						num91 = 2f;
					}
					if (this.type == 277)
					{
						num91 = 2.75f;
					}
					if (this.type == 278)
					{
						num91 = 1.8f;
					}
					if (this.type == 279)
					{
						num91 = 1.3f;
					}
					if (this.type == 280)
					{
						num91 = 2.5f;
					}
					num91 *= 1f + (1f - this.scale);
					if (this.velocity.X < -num91 || this.velocity.X > num91)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < num91 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > num91)
						{
							this.velocity.X = num91;
						}
					}
					else if (this.velocity.X > -num91 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -num91)
						{
							this.velocity.X = -num91;
						}
					}
				}
				else if (this.type >= 305 && this.type <= 314)
				{
					float num92 = 1.5f;
					if (this.type == 305 || this.type == 310)
					{
						num92 = 2f;
					}
					if (this.type == 306 || this.type == 311)
					{
						num92 = 1.25f;
					}
					if (this.type == 307 || this.type == 312)
					{
						num92 = 2.25f;
					}
					if (this.type == 308 || this.type == 313)
					{
						num92 = 1.5f;
					}
					if (this.type == 309 || this.type == 314)
					{
						num92 = 1f;
					}
					if (this.type < 310)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity.X = this.velocity.X * 0.85f;
							if ((double)this.velocity.X > -0.3 && (double)this.velocity.X < 0.3)
							{
								this.velocity.Y = -7f;
								this.velocity.X = num92 * (float)this.direction;
							}
						}
						else if (this.spriteDirection == this.direction)
						{
							this.velocity.X = (this.velocity.X * 10f + num92 * (float)this.direction) / 11f;
						}
					}
					else if (this.velocity.X < -num92 || this.velocity.X > num92)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < num92 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > num92)
						{
							this.velocity.X = num92;
						}
					}
					else if (this.velocity.X > -num92 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -num92)
						{
							this.velocity.X = -num92;
						}
					}
				}
				else if (this.type == 67 || this.type == 220 || this.type == 428)
				{
					if (this.velocity.X < -0.5f || this.velocity.X > 0.5f)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.7f;
						}
					}
					else if (this.velocity.X < 0.5f && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.03f;
						if (this.velocity.X > 0.5f)
						{
							this.velocity.X = 0.5f;
						}
					}
					else if (this.velocity.X > -0.5f && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.03f;
						if (this.velocity.X < -0.5f)
						{
							this.velocity.X = -0.5f;
						}
					}
				}
				else if (this.type == 78 || this.type == 79 || this.type == 80)
				{
					float num93 = 1f;
					float num94 = 0.05f;
					if (this.life < this.lifeMax / 2)
					{
						num93 = 2f;
						num94 = 0.1f;
					}
					if (this.type == 79)
					{
						num93 *= 1.5f;
					}
					if (this.velocity.X < -num93 || this.velocity.X > num93)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.7f;
						}
					}
					else if (this.velocity.X < num93 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + num94;
						if (this.velocity.X > num93)
						{
							this.velocity.X = num93;
						}
					}
					else if (this.velocity.X > -num93 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - num94;
						if (this.velocity.X < -num93)
						{
							this.velocity.X = -num93;
						}
					}
				}
				else if (this.type == 287)
				{
					float num95 = 5f;
					float num96 = 0.2f;
					if (this.velocity.X < -num95 || this.velocity.X > num95)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.7f;
						}
					}
					else if (this.velocity.X < num95 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + num96;
						if (this.velocity.X > num95)
						{
							this.velocity.X = num95;
						}
					}
					else if (this.velocity.X > -num95 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - num96;
						if (this.velocity.X < -num95)
						{
							this.velocity.X = -num95;
						}
					}
				}
				else if (this.type == 243)
				{
					float num97 = 1f;
					float num98 = 0.07f;
					num97 += (1f - (float)this.life / (float)this.lifeMax) * 1.5f;
					num98 += (1f - (float)this.life / (float)this.lifeMax) * 0.15f;
					if (this.velocity.X < -num97 || this.velocity.X > num97)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.7f;
						}
					}
					else if (this.velocity.X < num97 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + num98;
						if (this.velocity.X > num97)
						{
							this.velocity.X = num97;
						}
					}
					else if (this.velocity.X > -num97 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - num98;
						if (this.velocity.X < -num97)
						{
							this.velocity.X = -num97;
						}
					}
				}
				else if (this.type == 251)
				{
					float num99 = 1f;
					float num100 = 0.08f;
					num99 += (1f - (float)this.life / (float)this.lifeMax) * 2f;
					num100 += (1f - (float)this.life / (float)this.lifeMax) * 0.2f;
					if (this.velocity.X < -num99 || this.velocity.X > num99)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.7f;
						}
					}
					else if (this.velocity.X < num99 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + num100;
						if (this.velocity.X > num99)
						{
							this.velocity.X = num99;
						}
					}
					else if (this.velocity.X > -num99 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - num100;
						if (this.velocity.X < -num99)
						{
							this.velocity.X = -num99;
						}
					}
				}
				else if (this.type == 386)
				{
					if (this.ai[2] > 0f)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity.X = this.velocity.X * 0.8f;
						}
					}
					else
					{
						float num101 = 0.15f;
						float num102 = 1.5f;
						if (this.velocity.X < -num102 || this.velocity.X > num102)
						{
							if (this.velocity.Y == 0f)
							{
								this.velocity *= 0.7f;
							}
						}
						else if (this.velocity.X < num102 && this.direction == 1)
						{
							this.velocity.X = this.velocity.X + num101;
							if (this.velocity.X > num102)
							{
								this.velocity.X = num102;
							}
						}
						else if (this.velocity.X > -num102 && this.direction == -1)
						{
							this.velocity.X = this.velocity.X - num101;
							if (this.velocity.X < -num102)
							{
								this.velocity.X = -num102;
							}
						}
					}
				}
				else if (this.type == 460)
				{
					float num103 = 3f;
					float num104 = 0.1f;
					if (Math.Abs(this.velocity.X) > 2f)
					{
						num104 *= 0.8f;
					}
					if ((double)Math.Abs(this.velocity.X) > 2.5)
					{
						num104 *= 0.8f;
					}
					if (Math.Abs(this.velocity.X) > 3f)
					{
						num104 *= 0.8f;
					}
					if ((double)Math.Abs(this.velocity.X) > 3.5)
					{
						num104 *= 0.8f;
					}
					if (Math.Abs(this.velocity.X) > 4f)
					{
						num104 *= 0.8f;
					}
					if ((double)Math.Abs(this.velocity.X) > 4.5)
					{
						num104 *= 0.8f;
					}
					if (Math.Abs(this.velocity.X) > 5f)
					{
						num104 *= 0.8f;
					}
					if ((double)Math.Abs(this.velocity.X) > 5.5)
					{
						num104 *= 0.8f;
					}
					num103 += (1f - (float)this.life / (float)this.lifeMax) * 3f;
					if (this.velocity.X < -num103 || this.velocity.X > num103)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.7f;
						}
					}
					else if (this.velocity.X < num103 && this.direction == 1)
					{
						if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X * 0.93f;
						}
						this.velocity.X = this.velocity.X + num104;
						if (this.velocity.X > num103)
						{
							this.velocity.X = num103;
						}
					}
					else if (this.velocity.X > -num103 && this.direction == -1)
					{
						if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X * 0.93f;
						}
						this.velocity.X = this.velocity.X - num104;
						if (this.velocity.X < -num103)
						{
							this.velocity.X = -num103;
						}
					}
				}
				else if (this.type == 508)
				{
					float num105 = 2.5f;
					float num106 = 40f;
					float num107 = Math.Abs(this.velocity.X);
					if (num107 > 2.75f)
					{
						num105 = 3.5f;
						num106 += 80f;
					}
					else if ((double)num107 > 2.25)
					{
						num105 = 3f;
						num106 += 60f;
					}
					if ((double)Math.Abs(this.velocity.Y) < 0.5)
					{
						if (this.velocity.X > 0f && this.direction < 0)
						{
							this.velocity *= 0.9f;
						}
						if (this.velocity.X < 0f && this.direction > 0)
						{
							this.velocity *= 0.9f;
						}
					}
					if (Math.Abs(this.velocity.Y) > NPC.gravity)
					{
						num106 *= 3f;
					}
					if (this.velocity.X <= 0f && this.direction < 0)
					{
						this.velocity.X = (this.velocity.X * num106 - num105) / (num106 + 1f);
					}
					else if (this.velocity.X >= 0f && this.direction > 0)
					{
						this.velocity.X = (this.velocity.X * num106 + num105) / (num106 + 1f);
					}
					else if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) > 20f && Math.Abs(this.velocity.Y) <= NPC.gravity)
					{
						this.velocity.X = this.velocity.X * 0.99f;
						this.velocity.X = this.velocity.X + (float)this.direction * 0.025f;
					}
				}
				else if (this.type == 391 || this.type == 427 || this.type == 415 || this.type == 419 || this.type == 518 || this.type == 532)
				{
					float num108 = 5f;
					float num109 = 0.25f;
					float scaleFactor5 = 0.7f;
					if (this.type == 427)
					{
						num108 = 6f;
						num109 = 0.2f;
						scaleFactor5 = 0.8f;
					}
					else if (this.type == 415)
					{
						num108 = 4f;
						num109 = 0.1f;
						scaleFactor5 = 0.95f;
					}
					else if (this.type == 419)
					{
						num108 = 6f;
						num109 = 0.15f;
						scaleFactor5 = 0.85f;
					}
					else if (this.type == 518)
					{
						num108 = 5f;
						num109 = 0.1f;
						scaleFactor5 = 0.95f;
					}
					else if (this.type == 532)
					{
						num108 = 5f;
						num109 = 0.15f;
						scaleFactor5 = 0.98f;
					}
					if (this.velocity.X < -num108 || this.velocity.X > num108)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= scaleFactor5;
						}
					}
					else if (this.velocity.X < num108 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + num109;
						if (this.velocity.X > num108)
						{
							this.velocity.X = num108;
						}
					}
					else if (this.velocity.X > -num108 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - num109;
						if (this.velocity.X < -num108)
						{
							this.velocity.X = -num108;
						}
					}
				}
				else if ((this.type >= 430 && this.type <= 436) || this.type == 494 || this.type == 495)
				{
					if (this.ai[2] == 0f)
					{
						this.damage = this.defDamage;
						float num110 = 1f;
						num110 *= 1f + (1f - this.scale);
						if (this.velocity.X < -num110 || this.velocity.X > num110)
						{
							if (this.velocity.Y == 0f)
							{
								this.velocity *= 0.8f;
							}
						}
						else if (this.velocity.X < num110 && this.direction == 1)
						{
							this.velocity.X = this.velocity.X + 0.07f;
							if (this.velocity.X > num110)
							{
								this.velocity.X = num110;
							}
						}
						else if (this.velocity.X > -num110 && this.direction == -1)
						{
							this.velocity.X = this.velocity.X - 0.07f;
							if (this.velocity.X < -num110)
							{
								this.velocity.X = -num110;
							}
						}
						if (this.velocity.Y == 0f && (!Main.dayTime || (double)this.position.Y > Main.worldSurface * 16.0) && !Main.player[this.target].dead)
						{
							Vector2 vector18 = base.Center - Main.player[this.target].Center;
							int num111 = 50;
							if (this.type >= 494 && this.type <= 495)
							{
								num111 = 42;
							}
							if (vector18.Length() < (float)num111 && Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
							{
								this.velocity.X = this.velocity.X * 0.7f;
								this.ai[2] = 1f;
							}
						}
					}
					else
					{
						this.damage = (int)((double)this.defDamage * 1.5);
						this.ai[3] = 1f;
						this.velocity.X = this.velocity.X * 0.9f;
						if ((double)Math.Abs(this.velocity.X) < 0.1)
						{
							this.velocity.X = 0f;
						}
						this.ai[2] += 1f;
						if (this.ai[2] >= 20f || this.velocity.Y != 0f || (Main.dayTime && (double)this.position.Y < Main.worldSurface * 16.0))
						{
							this.ai[2] = 0f;
						}
					}
				}
				else if (this.type != 110 && this.type != 111 && this.type != 206 && this.type != 214 && this.type != 215 && this.type != 216 && this.type != 290 && this.type != 291 && this.type != 292 && this.type != 293 && this.type != 350 && this.type != 379 && this.type != 380 && this.type != 381 && this.type != 382 && (this.type < 449 || this.type > 452) && this.type != 468 && this.type != 481 && this.type != 411 && this.type != 409 && (this.type < 498 || this.type > 506) && this.type != 424 && this.type != 426 && this.type != 520)
				{
					float num112 = 1f;
					if (this.type == 186)
					{
						num112 = 1.1f;
					}
					if (this.type == 187)
					{
						num112 = 0.9f;
					}
					if (this.type == 188)
					{
						num112 = 1.2f;
					}
					if (this.type == 189)
					{
						num112 = 0.8f;
					}
					if (this.type == 132)
					{
						num112 = 0.95f;
					}
					if (this.type == 200)
					{
						num112 = 0.87f;
					}
					if (this.type == 223)
					{
						num112 = 1.05f;
					}
					if (this.type == 489)
					{
						float num113 = (Main.player[this.target].Center - base.Center).Length();
						num113 *= 0.0025f;
						if ((double)num113 > 1.5)
						{
							num113 = 1.5f;
						}
						if (Main.expertMode)
						{
							num112 = 3f - num113;
						}
						else
						{
							num112 = 2.5f - num113;
						}
						num112 *= 0.8f;
					}
					if (this.type == 489 || this.type == 3 || this.type == 132 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 200 || this.type == 223 || this.type == 331 || this.type == 332)
					{
						num112 *= 1f + (1f - this.scale);
					}
					if (this.velocity.X < -num112 || this.velocity.X > num112)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < num112 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > num112)
						{
							this.velocity.X = num112;
						}
					}
					else if (this.velocity.X > -num112 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -num112)
						{
							this.velocity.X = -num112;
						}
					}
				}
				if (this.type >= 277 && this.type <= 280)
				{
					Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.2f, 0.1f, 0f);
				}
				else if (this.type == 520)
				{
					Lighting.AddLight(base.Top + new Vector2(0f, 20f), 0.3f, 0.3f, 0.7f);
				}
				else if (this.type == 525)
				{
					Vector3 rgb = new Vector3(0.7f, 1f, 0.2f) * 0.5f;
					Lighting.AddLight(base.Top + new Vector2(0f, 15f), rgb);
				}
				else if (this.type == 526)
				{
					Vector3 rgb2 = new Vector3(1f, 1f, 0.5f) * 0.4f;
					Lighting.AddLight(base.Top + new Vector2(0f, 15f), rgb2);
				}
				else if (this.type == 527)
				{
					Vector3 rgb3 = new Vector3(0.6f, 0.3f, 1f) * 0.4f;
					Lighting.AddLight(base.Top + new Vector2(0f, 15f), rgb3);
				}
				else if (this.type == 415)
				{
					this.hide = false;
					for (int num114 = 0; num114 < 200; num114++)
					{
						if (Main.npc[num114].active && Main.npc[num114].type == 416 && Main.npc[num114].ai[0] == (float)this.whoAmI)
						{
							this.hide = true;
							break;
						}
					}
				}
				else if (this.type == 258)
				{
					if (this.velocity.Y != 0f)
					{
						this.TargetClosest(true);
						this.spriteDirection = this.direction;
						if (Main.player[this.target].Center.X < this.position.X && this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X * 0.95f;
						}
						else if (Main.player[this.target].Center.X > this.position.X + (float)this.width && this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X * 0.95f;
						}
						if (Main.player[this.target].Center.X < this.position.X && this.velocity.X > -5f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (Main.player[this.target].Center.X > this.position.X + (float)this.width && this.velocity.X < 5f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
					}
					else if (Main.player[this.target].Center.Y + 50f < this.position.Y && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						this.velocity.Y = -7f;
					}
				}
				else if (this.type == 425)
				{
					if (this.velocity.Y == 0f)
					{
						this.ai[2] = 0f;
					}
					if (this.velocity.Y != 0f && this.ai[2] == 1f)
					{
						this.TargetClosest(true);
						this.spriteDirection = -this.direction;
						if (Collision.CanHit(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
						{
							float num115 = Main.player[this.target].Center.X - (float)(this.direction * 400) - base.Center.X;
							float num116 = Main.player[this.target].Bottom.Y - base.Bottom.Y;
							if (num115 < 0f && this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							else if (num115 > 0f && this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if (num115 < 0f && this.velocity.X > -5f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
							}
							else if (num115 > 0f && this.velocity.X < 5f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
							}
							if (this.velocity.X > 6f)
							{
								this.velocity.X = 6f;
							}
							if (this.velocity.X < -6f)
							{
								this.velocity.X = -6f;
							}
							if (num116 < -20f && this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.8f;
							}
							else if (num116 > 20f && this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.8f;
							}
							if (num116 < -20f && this.velocity.Y > -5f)
							{
								this.velocity.Y = this.velocity.Y - 0.3f;
							}
							else if (num116 > 20f && this.velocity.Y < 5f)
							{
								this.velocity.Y = this.velocity.Y + 0.3f;
							}
						}
						if (Main.rand.Next(3) == 0)
						{
							Vector2 position = base.Center + new Vector2((float)(this.direction * -14), -8f) - Vector2.One * 4f;
							Vector2 velocity = new Vector2((float)(this.direction * -6), 12f) * 0.2f + Utils.RandomVector2(Main.rand, -1f, 1f) * 0.1f;
							Dust dust6 = Main.dust[Dust.NewDust(position, 8, 8, 229, velocity.X, velocity.Y, 100, Color.Transparent, 1f + Main.rand.NextFloat() * 0.5f)];
							dust6.noGravity = true;
							dust6.velocity = velocity;
							dust6.customData = this;
						}
						for (int num117 = 0; num117 < 200; num117++)
						{
							if (num117 != this.whoAmI && Main.npc[num117].active && Main.npc[num117].type == this.type && Math.Abs(this.position.X - Main.npc[num117].position.X) + Math.Abs(this.position.Y - Main.npc[num117].position.Y) < (float)this.width)
							{
								if (this.position.X < Main.npc[num117].position.X)
								{
									this.velocity.X = this.velocity.X - 0.05f;
								}
								else
								{
									this.velocity.X = this.velocity.X + 0.05f;
								}
								if (this.position.Y < Main.npc[num117].position.Y)
								{
									this.velocity.Y = this.velocity.Y - 0.05f;
								}
								else
								{
									this.velocity.Y = this.velocity.Y + 0.05f;
								}
							}
						}
					}
					else if (Main.player[this.target].Center.Y + 100f < this.position.Y && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						this.velocity.Y = -5f;
						this.ai[2] = 1f;
					}
					if (Main.netMode != 1)
					{
						this.localAI[2] += 1f;
						if (this.localAI[2] >= (float)(360 + Main.rand.Next(360)) && base.Distance(Main.player[this.target].Center) < 400f && Math.Abs(base.DirectionTo(Main.player[this.target].Center).Y) < 0.5f && Collision.CanHitLine(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
						{
							this.localAI[2] = 0f;
							Vector2 vector19 = base.Center + new Vector2((float)(this.direction * 30), 2f);
							Vector2 vector20 = base.DirectionTo(Main.player[this.target].Center) * 7f;
							if (vector20.HasNaNs())
							{
								vector20 = new Vector2((float)(this.direction * 8), 0f);
							}
							int num118 = Main.expertMode ? 50 : 75;
							for (int num119 = 0; num119 < 4; num119++)
							{
								Vector2 vector21 = vector20 + Utils.RandomVector2(Main.rand, -0.8f, 0.8f);
								Projectile.NewProjectile(vector19.X, vector19.Y, vector21.X, vector21.Y, 577, num118, 1f, Main.myPlayer, 0f, 0f);
							}
						}
					}
				}
				else if (this.type == 427)
				{
					if (this.velocity.Y == 0f)
					{
						this.ai[2] = 0f;
						this.rotation = 0f;
					}
					else
					{
						this.rotation = this.velocity.X * 0.1f;
					}
					if (this.velocity.Y != 0f && this.ai[2] == 1f)
					{
						this.TargetClosest(true);
						this.spriteDirection = -this.direction;
						if (Collision.CanHit(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
						{
							float num120 = Main.player[this.target].Center.X - base.Center.X;
							float num121 = Main.player[this.target].Center.Y - base.Center.Y;
							if (num120 < 0f && this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X * 0.98f;
							}
							else if (num120 > 0f && this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X * 0.98f;
							}
							if (num120 < -20f && this.velocity.X > -6f)
							{
								this.velocity.X = this.velocity.X - 0.015f;
							}
							else if (num120 > 20f && this.velocity.X < 6f)
							{
								this.velocity.X = this.velocity.X + 0.015f;
							}
							if (this.velocity.X > 6f)
							{
								this.velocity.X = 6f;
							}
							if (this.velocity.X < -6f)
							{
								this.velocity.X = -6f;
							}
							if (num121 < -20f && this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.98f;
							}
							else if (num121 > 20f && this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.98f;
							}
							if (num121 < -20f && this.velocity.Y > -6f)
							{
								this.velocity.Y = this.velocity.Y - 0.15f;
							}
							else if (num121 > 20f && this.velocity.Y < 6f)
							{
								this.velocity.Y = this.velocity.Y + 0.15f;
							}
						}
						for (int num122 = 0; num122 < 200; num122++)
						{
							if (num122 != this.whoAmI && Main.npc[num122].active && Main.npc[num122].type == this.type && Math.Abs(this.position.X - Main.npc[num122].position.X) + Math.Abs(this.position.Y - Main.npc[num122].position.Y) < (float)this.width)
							{
								if (this.position.X < Main.npc[num122].position.X)
								{
									this.velocity.X = this.velocity.X - 0.05f;
								}
								else
								{
									this.velocity.X = this.velocity.X + 0.05f;
								}
								if (this.position.Y < Main.npc[num122].position.Y)
								{
									this.velocity.Y = this.velocity.Y - 0.05f;
								}
								else
								{
									this.velocity.Y = this.velocity.Y + 0.05f;
								}
							}
						}
					}
					else if (Main.player[this.target].Center.Y + 100f < this.position.Y && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						this.velocity.Y = -5f;
						this.ai[2] = 1f;
					}
				}
				else if (this.type == 426)
				{
					if (this.ai[1] > 0f && this.velocity.Y > 0f)
					{
						this.velocity.Y = this.velocity.Y * 0.85f;
						if (this.velocity.Y == 0f)
						{
							this.velocity.Y = -0.4f;
						}
					}
					if (this.velocity.Y != 0f)
					{
						this.TargetClosest(true);
						this.spriteDirection = this.direction;
						if (Collision.CanHit(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
						{
							float num123 = Main.player[this.target].Center.X - (float)(this.direction * 300) - base.Center.X;
							if (num123 < 40f && this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X * 0.98f;
							}
							else if (num123 > 40f && this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X * 0.98f;
							}
							if (num123 < 40f && this.velocity.X > -5f)
							{
								this.velocity.X = this.velocity.X - 0.2f;
							}
							else if (num123 > 40f && this.velocity.X < 5f)
							{
								this.velocity.X = this.velocity.X + 0.2f;
							}
							if (this.velocity.X > 6f)
							{
								this.velocity.X = 6f;
							}
							if (this.velocity.X < -6f)
							{
								this.velocity.X = -6f;
							}
						}
					}
					else if (Main.player[this.target].Center.Y + 100f < this.position.Y && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						this.velocity.Y = -6f;
					}
					for (int num124 = 0; num124 < 200; num124++)
					{
						if (num124 != this.whoAmI && Main.npc[num124].active && Main.npc[num124].type == this.type && Math.Abs(this.position.X - Main.npc[num124].position.X) + Math.Abs(this.position.Y - Main.npc[num124].position.Y) < (float)this.width)
						{
							if (this.position.X < Main.npc[num124].position.X)
							{
								this.velocity.X = this.velocity.X - 0.1f;
							}
							else
							{
								this.velocity.X = this.velocity.X + 0.1f;
							}
							if (this.position.Y < Main.npc[num124].position.Y)
							{
								this.velocity.Y = this.velocity.Y - 0.1f;
							}
							else
							{
								this.velocity.Y = this.velocity.Y + 0.1f;
							}
						}
					}
					if (Main.rand.Next(6) == 0 && this.ai[1] <= 20f)
					{
						Dust dust7 = Main.dust[Dust.NewDust(base.Center + new Vector2((float)((this.spriteDirection == 1) ? 8 : -20), -20f), 8, 8, 229, this.velocity.X, this.velocity.Y, 100, default(Color), 1f)];
						dust7.velocity = dust7.velocity / 4f + this.velocity / 2f;
						dust7.scale = 0.6f;
						dust7.noLight = true;
					}
					if (this.ai[1] >= 57f)
					{
						int num125 = Utils.SelectRandom<int>(Main.rand, new int[]
							{
								161,
								229
							});
						Dust dust8 = Main.dust[Dust.NewDust(base.Center + new Vector2((float)((this.spriteDirection == 1) ? 8 : -20), -20f), 8, 8, num125, this.velocity.X, this.velocity.Y, 100, default(Color), 1f)];
						dust8.velocity = dust8.velocity / 4f + base.DirectionTo(Main.player[this.target].Top);
						dust8.scale = 1.2f;
						dust8.noLight = true;
					}
					if (Main.rand.Next(6) == 0)
					{
						Dust dust9 = Main.dust[Dust.NewDust(base.Center, 2, 2, 229, 0f, 0f, 0, default(Color), 1f)];
						dust9.position = base.Center + new Vector2((float)((this.spriteDirection == 1) ? 26 : -26), 24f);
						dust9.velocity.X = 0f;
						if (dust9.velocity.Y < 0f)
						{
							dust9.velocity.Y = 0f;
						}
						dust9.noGravity = true;
						dust9.scale = 1f;
						dust9.noLight = true;
					}
				}
				else if (this.type == 185)
				{
					if (this.velocity.Y == 0f)
					{
						this.rotation = 0f;
						this.localAI[0] = 0f;
					}
					else if (this.localAI[0] == 1f)
					{
						this.rotation += this.velocity.X * 0.05f;
					}
				}
				else if (this.type == 428)
				{
					if (this.velocity.Y == 0f)
					{
						this.rotation = 0f;
					}
					else
					{
						this.rotation += this.velocity.X * 0.08f;
					}
				}
				if (this.type == 159 && Main.netMode != 1)
				{
					Vector2 vector22 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num126 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector22.X;
					float num127 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector22.Y;
					float num128 = (float)Math.Sqrt((double)(num126 * num126 + num127 * num127));
					if (num128 > 300f)
					{
						this.Transform(158);
					}
				}
				if (this.type == 164 && Main.netMode != 1 && this.velocity.Y == 0f)
				{
					int num129 = (int)base.Center.X / 16;
					int num130 = (int)base.Center.Y / 16;
					bool flag12 = false;
					for (int num131 = num129 - 1; num131 <= num129 + 1; num131++)
					{
						for (int num132 = num130 - 1; num132 <= num130 + 1; num132++)
						{
							if (Main.tile[num131, num132].wall > 0)
							{
								flag12 = true;
							}
						}
					}
					if (flag12)
					{
						this.Transform(165);
					}
				}
				if (this.type == 239 && Main.netMode != 1 && this.velocity.Y == 0f)
				{
					int num133 = (int)base.Center.X / 16;
					int num134 = (int)base.Center.Y / 16;
					bool flag13 = false;
					for (int num135 = num133 - 1; num135 <= num133 + 1; num135++)
					{
						for (int num136 = num134 - 1; num136 <= num134 + 1; num136++)
						{
							if (Main.tile[num135, num136].wall > 0)
							{
								flag13 = true;
							}
						}
					}
					if (flag13)
					{
						this.Transform(240);
					}
				}
				if (this.type == 530 && Main.netMode != 1 && this.velocity.Y == 0f)
				{
					int num137 = (int)base.Center.X / 16;
					int num138 = (int)base.Center.Y / 16;
					bool flag14 = false;
					for (int num139 = num137 - 1; num139 <= num137 + 1; num139++)
					{
						for (int num140 = num138 - 1; num140 <= num138 + 1; num140++)
						{
							if (Main.tile[num139, num140].wall > 0)
							{
								flag14 = true;
							}
						}
					}
					if (flag14)
					{
						this.Transform(531);
					}
				}
				if (Main.netMode != 1 && Main.expertMode && this.target >= 0 && (this.type == 163 || this.type == 238) && Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
				{
					this.localAI[0] += 1f;
					if (this.justHit)
					{
						this.localAI[0] -= (float)Main.rand.Next(20, 60);
						if (this.localAI[0] < 0f)
						{
							this.localAI[0] = 0f;
						}
					}
					if (this.localAI[0] > (float)Main.rand.Next(180, 900))
					{
						this.localAI[0] = 0f;
						Vector2 vector23 = Main.player[this.target].Center - base.Center;
						vector23.Normalize();
						vector23 *= 8f;
						Projectile.NewProjectile(base.Center.X, base.Center.Y, vector23.X, vector23.Y, 472, 18, 0f, Main.myPlayer, 0f, 0f);
					}
				}
				if (this.type == 163 && Main.netMode != 1 && this.velocity.Y == 0f)
				{
					int num141 = (int)base.Center.X / 16;
					int num142 = (int)base.Center.Y / 16;
					bool flag15 = false;
					for (int num143 = num141 - 1; num143 <= num141 + 1; num143++)
					{
						for (int num144 = num142 - 1; num144 <= num142 + 1; num144++)
						{
							if (Main.tile[num143, num144].wall > 0)
							{
								flag15 = true;
							}
						}
					}
					if (flag15)
					{
						this.Transform(238);
					}
				}
				if (this.type == 236 && Main.netMode != 1 && this.velocity.Y == 0f)
				{
					int num145 = (int)base.Center.X / 16;
					int num146 = (int)base.Center.Y / 16;
					bool flag16 = false;
					for (int num147 = num145 - 1; num147 <= num145 + 1; num147++)
					{
						for (int num148 = num146 - 1; num148 <= num146 + 1; num148++)
						{
							if (Main.tile[num147, num148].wall > 0)
							{
								flag16 = true;
							}
						}
					}
					if (flag16)
					{
						this.Transform(237);
					}
				}
				if (this.type == 243)
				{
					if (this.justHit && Main.rand.Next(3) == 0)
					{
						this.ai[2] -= (float)Main.rand.Next(30);
					}
					if (this.ai[2] < 0f)
					{
						this.ai[2] = 0f;
					}
					if (this.confused)
					{
						this.ai[2] = 0f;
					}
					this.ai[2] += 1f;
					float num149 = (float)Main.rand.Next(30, 900);
					num149 *= (float)this.life / (float)this.lifeMax;
					num149 += 30f;
					if (Main.netMode != 1 && this.ai[2] >= num149 && this.velocity.Y == 0f && !Main.player[this.target].dead && !Main.player[this.target].frozen && ((this.direction > 0 && base.Center.X < Main.player[this.target].Center.X) || (this.direction < 0 && base.Center.X > Main.player[this.target].Center.X)) && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						float num150 = 15f;
						Vector2 vector24 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + 20f);
						vector24.X += (float)(10 * this.direction);
						float num151 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector24.X;
						float num152 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector24.Y;
						num151 += (float)Main.rand.Next(-40, 41);
						num152 += (float)Main.rand.Next(-40, 41);
						float num153 = (float)Math.Sqrt((double)(num151 * num151 + num152 * num152));
						this.netUpdate = true;
						num153 = num150 / num153;
						num151 *= num153;
						num152 *= num153;
						int num154 = 32;
						int num155 = 257;
						vector24.X += num151 * 3f;
						vector24.Y += num152 * 3f;
						Projectile.NewProjectile(vector24.X, vector24.Y, num151, num152, num155, num154, 0f, Main.myPlayer, 0f, 0f);
						this.ai[2] = 0f;
					}
				}
				if (this.type == 251)
				{
					if (this.justHit)
					{
						this.ai[2] -= (float)Main.rand.Next(30);
					}
					if (this.ai[2] < 0f)
					{
						this.ai[2] = 0f;
					}
					if (this.confused)
					{
						this.ai[2] = 0f;
					}
					this.ai[2] += 1f;
					float num156 = (float)Main.rand.Next(60, 1800);
					num156 *= (float)this.life / (float)this.lifeMax;
					num156 += 15f;
					if (Main.netMode != 1 && this.ai[2] >= num156 && this.velocity.Y == 0f && !Main.player[this.target].dead && !Main.player[this.target].frozen && ((this.direction > 0 && base.Center.X < Main.player[this.target].Center.X) || (this.direction < 0 && base.Center.X > Main.player[this.target].Center.X)) && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						float num157 = 15f;
						Vector2 vector25 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + 12f);
						vector25.X += (float)(6 * this.direction);
						float num158 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector25.X;
						float num159 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector25.Y;
						num158 += (float)Main.rand.Next(-40, 41);
						num159 += (float)Main.rand.Next(-30, 0);
						float num160 = (float)Math.Sqrt((double)(num158 * num158 + num159 * num159));
						this.netUpdate = true;
						num160 = num157 / num160;
						num158 *= num160;
						num159 *= num160;
						int num161 = 30;
						int num162 = 83;
						vector25.X += num158 * 3f;
						vector25.Y += num159 * 3f;
						Projectile.NewProjectile(vector25.X, vector25.Y, num158, num159, num162, num161, 0f, Main.myPlayer, 0f, 0f);
						this.ai[2] = 0f;
					}
				}
				if (this.type == 386)
				{
					if (this.confused)
					{
						this.ai[2] = -60f;
					}
					else
					{
						if (this.ai[2] < 60f)
						{
							this.ai[2] += 1f;
						}
						if (this.ai[2] > 0f && NPC.CountNPCS(387) >= 4 * NPC.CountNPCS(386))
						{
							this.ai[2] = 0f;
						}
						if (this.justHit)
						{
							this.ai[2] = -30f;
						}
						if (this.ai[2] == 30f)
						{
							int num163 = (int)this.position.X / 16;
							int num164 = (int)this.position.Y / 16;
							int num165 = (int)this.position.X / 16;
							int num166 = (int)this.position.Y / 16;
							int num167 = 5;
							int num168 = 0;
							bool flag17 = false;
							int num169 = 2;
							int num170 = 0;
							while (!flag17 && num168 < 100)
							{
								num168++;
								int num171 = Main.rand.Next(num163 - num167, num163 + num167);
								int num172 = Main.rand.Next(num164 - num167, num164 + num167);
								for (int num173 = num172; num173 < num164 + num167; num173++)
								{
									if ((num173 < num164 - num169 || num173 > num164 + num169 || num171 < num163 - num169 || num171 > num163 + num169) && (num173 < num166 - num170 || num173 > num166 + num170 || num171 < num165 - num170 || num171 > num165 + num170) && Main.tile[num171, num173].nactive())
									{
										bool flag18 = true;
										if (Main.tile[num171, num173 - 1].lava())
										{
											flag18 = false;
										}
										if (flag18 && Main.tileSolid[(int)Main.tile[num171, num173].type] && !Collision.SolidTiles(num171 - 1, num171 + 1, num173 - 4, num173 - 1))
										{
											int num174 = NPC.NewNPC(num171 * 16 - this.width / 2, num173 * 16, 387, 0, 0f, 0f, 0f, 0f, 255);
											Main.npc[num174].position.Y = (float)(num173 * 16 - Main.npc[num174].height);
											flag17 = true;
											this.netUpdate = true;
											break;
										}
									}
								}
							}
						}
						if (this.ai[2] == 60f)
						{
							this.ai[2] = -120f;
						}
					}
				}
				if (this.type == 389)
				{
					if (this.confused)
					{
						this.ai[2] = -60f;
					}
					else
					{
						if (this.ai[2] < 20f)
						{
							this.ai[2] += 1f;
						}
						if (this.justHit)
						{
							this.ai[2] = -30f;
						}
						if (this.ai[2] == 20f && Main.netMode != 1)
						{
							this.ai[2] = (float)(-10 + Main.rand.Next(3) * -10);
							Projectile.NewProjectile(base.Center.X, base.Center.Y + 8f, (float)(this.direction * 6), 0f, 437, 25, 1f, Main.myPlayer, 0f, 0f);
						}
					}
				}
				if (this.type == 110 || this.type == 111 || this.type == 206 || this.type == 214 || this.type == 215 || this.type == 216 || this.type == 290 || this.type == 291 || this.type == 292 || this.type == 293 || this.type == 350 || this.type == 379 || this.type == 380 || this.type == 381 || this.type == 382 || (this.type >= 449 && this.type <= 452) || (this.type == 468 || this.type == 481 || this.type == 411 || this.type == 409 || (this.type >= 498 && this.type <= 506)) || this.type == 424 || this.type == 426 || this.type == 520)
				{
					bool flag19 = this.type == 381 || this.type == 382 || this.type == 520;
					bool flag20 = this.type == 426;
					bool flag21 = true;
					int num175 = -1;
					int num176 = -1;
					if (this.type == 411)
					{
						flag19 = true;
						num175 = 90;
						num176 = 90;
						if (this.ai[1] <= 150f)
						{
							flag21 = false;
						}
					}
					if (this.confused)
					{
						this.ai[2] = 0f;
					}
					else
					{
						if (this.ai[1] > 0f)
						{
							this.ai[1] -= 1f;
						}
						if (this.justHit)
						{
							this.ai[1] = 30f;
							this.ai[2] = 0f;
						}
						int num177 = 70;
						if (this.type == 379 || this.type == 380)
						{
							num177 = 80;
						}
						if (this.type == 381 || this.type == 382)
						{
							num177 = 80;
						}
						if (this.type == 520)
						{
							num177 = 15;
						}
						if (this.type == 350)
						{
							num177 = 110;
						}
						if (this.type == 291)
						{
							num177 = 200;
						}
						if (this.type == 292)
						{
							num177 = 120;
						}
						if (this.type == 293)
						{
							num177 = 90;
						}
						if (this.type == 111)
						{
							num177 = 180;
						}
						if (this.type == 206)
						{
							num177 = 50;
						}
						if (this.type == 214)
						{
							num177 = 40;
						}
						if (this.type == 215)
						{
							num177 = 80;
						}
						if (this.type == 290)
						{
							num177 = 30;
						}
						if (this.type == 411)
						{
							num177 = 300;
						}
						if (this.type == 409)
						{
							num177 = 60;
						}
						if (this.type == 424)
						{
							num177 = 180;
						}
						if (this.type == 426)
						{
							num177 = 60;
						}
						bool flag22 = false;
						if (this.type == 216)
						{
							if (this.localAI[2] >= 20f)
							{
								flag22 = true;
							}
							if (flag22)
							{
								num177 = 60;
							}
							else
							{
								num177 = 8;
							}
						}
						int num178 = num177 / 2;
						if (this.type == 424)
						{
							num178 = num177 - 1;
						}
						if (this.type == 426)
						{
							num178 = num177 - 1;
						}
						if (this.ai[2] > 0f)
						{
							if (flag21)
							{
								this.TargetClosest(true);
							}
							if (this.ai[1] == (float)num178)
							{
								if (this.type == 216)
								{
									this.localAI[2] += 1f;
								}
								float num179 = 11f;
								if (this.type == 111)
								{
									num179 = 9f;
								}
								if (this.type == 206)
								{
									num179 = 7f;
								}
								if (this.type == 290)
								{
									num179 = 9f;
								}
								if (this.type == 293)
								{
									num179 = 4f;
								}
								if (this.type == 214)
								{
									num179 = 14f;
								}
								if (this.type == 215)
								{
									num179 = 16f;
								}
								if (this.type == 382)
								{
									num179 = 7f;
								}
								if (this.type == 520)
								{
									num179 = 8f;
								}
								if (this.type == 409)
								{
									num179 = 4f;
								}
								if (this.type >= 449 && this.type <= 452)
								{
									num179 = 7f;
								}
								if (this.type == 481)
								{
									num179 = 9f;
								}
								if (this.type == 468)
								{
									num179 = 7.5f;
								}
								if (this.type == 411)
								{
									num179 = 1f;
								}
								if (this.type >= 498 && this.type <= 506)
								{
									num179 = 7f;
								}
								Vector2 value9 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								if (this.type == 481)
								{
									value9.Y -= 14f;
								}
								if (this.type == 206)
								{
									value9.Y -= 10f;
								}
								if (this.type == 290)
								{
									value9.Y -= 10f;
								}
								if (this.type == 381 || this.type == 382)
								{
									value9.Y += 6f;
								}
								if (this.type == 520)
								{
									value9.Y = this.position.Y + 20f;
								}
								if (this.type >= 498 && this.type <= 506)
								{
									value9.Y -= 8f;
								}
								if (this.type == 426)
								{
									value9 += new Vector2((float)(this.spriteDirection * 2), -12f);
								}
								float num180 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - value9.X;
								float num181 = Math.Abs(num180) * 0.1f;
								if (this.type == 291 || this.type == 292)
								{
									num181 = 0f;
								}
								if (this.type == 215)
								{
									num181 = Math.Abs(num180) * 0.08f;
								}
								if (this.type == 214 || (this.type == 216 && !flag22))
								{
									num181 = 0f;
								}
								if (this.type == 381 || this.type == 382 || this.type == 520)
								{
									num181 = 0f;
								}
								if (this.type >= 449 && this.type <= 452)
								{
									num181 = Math.Abs(num180) * (float)Main.rand.Next(10, 50) * 0.01f;
								}
								if (this.type == 468)
								{
									num181 = Math.Abs(num180) * (float)Main.rand.Next(10, 50) * 0.01f;
								}
								if (this.type == 481)
								{
									num181 = Math.Abs(num180) * (float)Main.rand.Next(-10, 11) * 0.0025f;
								}
								if (this.type >= 498 && this.type <= 506)
								{
									num181 = Math.Abs(num180) * (float)Main.rand.Next(1, 11) * 0.0025f;
								}
								float num182 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - value9.Y - num181;
								if (this.type == 291)
								{
									num180 += (float)Main.rand.Next(-40, 41) * 0.2f;
									num182 += (float)Main.rand.Next(-40, 41) * 0.2f;
								}
								else if (this.type == 381 || this.type == 382 || this.type == 520)
								{
									num180 += (float)Main.rand.Next(-100, 101) * 0.4f;
									num182 += (float)Main.rand.Next(-100, 101) * 0.4f;
									num180 *= (float)Main.rand.Next(85, 116) * 0.01f;
									num182 *= (float)Main.rand.Next(85, 116) * 0.01f;
									if (this.type == 520)
									{
										num180 += (float)Main.rand.Next(-100, 101) * 0.6f;
										num182 += (float)Main.rand.Next(-100, 101) * 0.6f;
										num180 *= (float)Main.rand.Next(85, 116) * 0.015f;
										num182 *= (float)Main.rand.Next(85, 116) * 0.015f;
									}
								}
								else if (this.type == 481)
								{
									num180 += (float)Main.rand.Next(-40, 41) * 0.4f;
									num182 += (float)Main.rand.Next(-40, 41) * 0.4f;
								}
								else if (this.type >= 498 && this.type <= 506)
								{
									num180 += (float)Main.rand.Next(-40, 41) * 0.3f;
									num182 += (float)Main.rand.Next(-40, 41) * 0.3f;
								}
								else if (this.type != 292)
								{
									num180 += (float)Main.rand.Next(-40, 41);
									num182 += (float)Main.rand.Next(-40, 41);
								}
								float num183 = (float)Math.Sqrt((double)(num180 * num180 + num182 * num182));
								this.netUpdate = true;
								num183 = num179 / num183;
								num180 *= num183;
								num182 *= num183;
								int num184 = 35;
								int num185 = 82;
								if (this.type == 111)
								{
									num184 = 11;
								}
								if (this.type == 206)
								{
									num184 = 37;
								}
								if (this.type == 379 || this.type == 380)
								{
									num184 = 40;
								}
								if (this.type == 350)
								{
									num184 = 45;
								}
								if (this.type == 468)
								{
									num184 = 50;
								}
								if (this.type == 111)
								{
									num185 = 81;
								}
								if (this.type == 379 || this.type == 380)
								{
									num185 = 81;
								}
								if (this.type == 381)
								{
									num185 = 436;
									num184 = 24;
								}
								if (this.type == 382)
								{
									num185 = 438;
									num184 = 30;
								}
								if (this.type == 520)
								{
									num185 = 592;
									num184 = 35;
								}
								if (this.type >= 449 && this.type <= 452)
								{
									num185 = 471;
									num184 = 20;
								}
								if (this.type >= 498 && this.type <= 506)
								{
									num185 = 572;
									num184 = 14;
								}
								if (this.type == 481)
								{
									num185 = 508;
									num184 = 24;
								}
								if (this.type == 206)
								{
									num185 = 177;
								}
								if (this.type == 468)
								{
									num185 = 501;
								}
								if (this.type == 411)
								{
									num185 = 537;
									num184 = (Main.expertMode ? 45 : 60);
								}
								if (this.type == 424)
								{
									num185 = 573;
									num184 = (Main.expertMode ? 45 : 60);
								}
								if (this.type == 426)
								{
									num185 = 581;
									num184 = (Main.expertMode ? 45 : 60);
								}
								if (this.type == 291)
								{
									num185 = 302;
									num184 = 100;
								}
								if (this.type == 290)
								{
									num185 = 300;
									num184 = 60;
								}
								if (this.type == 293)
								{
									num185 = 303;
									num184 = 60;
								}
								if (this.type == 214)
								{
									num185 = 180;
									num184 = 25;
								}
								if (this.type == 215)
								{
									num185 = 82;
									num184 = 40;
								}
								if (this.type == 292)
								{
									num184 = 50;
									num185 = 180;
								}
								if (this.type == 216)
								{
									num185 = 180;
									num184 = 30;
									if (flag22)
									{
										num184 = 100;
										num185 = 240;
										this.localAI[2] = 0f;
									}
								}
								value9.X += num180;
								value9.Y += num182;
								if (Main.expertMode && this.type == 290)
								{
									num184 = (int)((double)num184 * 0.75);
								}
								if (Main.expertMode && this.type >= 381 && this.type <= 392)
								{
									num184 = (int)((double)num184 * 0.8);
								}
								if (Main.netMode != 1)
								{
									if (this.type == 292)
									{
										for (int num186 = 0; num186 < 4; num186++)
										{
											num180 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - value9.X;
											num182 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - value9.Y;
											num183 = (float)Math.Sqrt((double)(num180 * num180 + num182 * num182));
											num183 = 12f / num183;
											num180 += (float)Main.rand.Next(-40, 41);
											num182 += (float)Main.rand.Next(-40, 41);
											num180 *= num183;
											num182 *= num183;
											Projectile.NewProjectile(value9.X, value9.Y, num180, num182, num185, num184, 0f, Main.myPlayer, 0f, 0f);
										}
									}
									else if (this.type == 411)
									{
										Projectile.NewProjectile(value9.X, value9.Y, num180, num182, num185, num184, 0f, Main.myPlayer, 0f, (float)this.whoAmI);
									}
									else if (this.type == 424)
									{
										for (int num187 = 0; num187 < 4; num187++)
										{
											Projectile.NewProjectile(base.Center.X - (float)(this.spriteDirection * 4), base.Center.Y + 6f, (float)(-3 + 2 * num187) * 0.15f, (float)(-(float)Main.rand.Next(0, 3)) * 0.2f - 0.1f, num185, num184, 0f, Main.myPlayer, 0f, (float)this.whoAmI);
										}
									}
									else if (this.type == 409)
									{
										int num188 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 410, this.whoAmI, 0f, 0f, 0f, 0f, 255);
										Main.npc[num188].velocity = new Vector2(num180, -6f + num182);
									}
									else
									{
										Projectile.NewProjectile(value9.X, value9.Y, num180, num182, num185, num184, 0f, Main.myPlayer, 0f, 0f);
									}
								}
								if (Math.Abs(num182) > Math.Abs(num180) * 2f)
								{
									if (num182 > 0f)
									{
										this.ai[2] = 1f;
									}
									else
									{
										this.ai[2] = 5f;
									}
								}
								else if (Math.Abs(num180) > Math.Abs(num182) * 2f)
								{
									this.ai[2] = 3f;
								}
								else if (num182 > 0f)
								{
									this.ai[2] = 2f;
								}
								else
								{
									this.ai[2] = 4f;
								}
							}
							if ((this.velocity.Y != 0f && !flag20) || this.ai[1] <= 0f)
							{
								this.ai[2] = 0f;
								this.ai[1] = 0f;
							}
							else if (!flag19 || (num175 != -1 && this.ai[1] >= (float)num175 && this.ai[1] < (float)(num175 + num176) && (!flag20 || this.velocity.Y == 0f)))
							{
								this.velocity.X = this.velocity.X * 0.9f;
								this.spriteDirection = this.direction;
							}
						}
						if (this.type == 468 && !Main.eclipse)
						{
							flag19 = true;
						}
						else if ((this.ai[2] <= 0f || flag19) && (this.velocity.Y == 0f || flag20) && this.ai[1] <= 0f && !Main.player[this.target].dead)
						{
							bool flag23 = Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height);
							if (this.type == 520)
							{
								flag23 = Collision.CanHitLine(base.Top + new Vector2(0f, 20f), 0, 0, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height);
							}
							if (Main.player[this.target].stealth == 0f && Main.player[this.target].itemAnimation == 0)
							{
								flag23 = false;
							}
							if (flag23)
							{
								float num189 = 10f;
								Vector2 vector26 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num190 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector26.X;
								float num191 = Math.Abs(num190) * 0.1f;
								float num192 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector26.Y - num191;
								num190 += (float)Main.rand.Next(-40, 41);
								num192 += (float)Main.rand.Next(-40, 41);
								float num193 = (float)Math.Sqrt((double)(num190 * num190 + num192 * num192));
								float num194 = 700f;
								if (this.type == 214)
								{
									num194 = 550f;
								}
								if (this.type == 215)
								{
									num194 = 800f;
								}
								if (this.type >= 498 && this.type <= 506)
								{
									num194 = 190f;
								}
								if (this.type >= 449 && this.type <= 452)
								{
									num194 = 200f;
								}
								if (this.type == 481)
								{
									num194 = 400f;
								}
								if (this.type == 468)
								{
									num194 = 400f;
								}
								if (num193 < num194)
								{
									this.netUpdate = true;
									this.velocity.X = this.velocity.X * 0.5f;
									num193 = num189 / num193;
									num190 *= num193;
									num192 *= num193;
									this.ai[2] = 3f;
									this.ai[1] = (float)num177;
									if (Math.Abs(num192) > Math.Abs(num190) * 2f)
									{
										if (num192 > 0f)
										{
											this.ai[2] = 1f;
										}
										else
										{
											this.ai[2] = 5f;
										}
									}
									else if (Math.Abs(num190) > Math.Abs(num192) * 2f)
									{
										this.ai[2] = 3f;
									}
									else if (num192 > 0f)
									{
										this.ai[2] = 2f;
									}
									else
									{
										this.ai[2] = 4f;
									}
								}
							}
						}
						if (this.ai[2] <= 0f || (flag19 && (num175 == -1 || this.ai[1] < (float)num175 || this.ai[1] >= (float)(num175 + num176))))
						{
							float num195 = 1f;
							float num196 = 0.07f;
							float scaleFactor6 = 0.8f;
							if (this.type == 214)
							{
								num195 = 2f;
								num196 = 0.09f;
							}
							else if (this.type == 215)
							{
								num195 = 1.5f;
								num196 = 0.08f;
							}
							else if (this.type == 381 || this.type == 382)
							{
								num195 = 2f;
								num196 = 0.5f;
							}
							else if (this.type == 520)
							{
								num195 = 4f;
								num196 = 1f;
								scaleFactor6 = 0.7f;
							}
							else if (this.type == 411)
							{
								num195 = 2f;
								num196 = 0.5f;
							}
							else if (this.type == 409)
							{
								num195 = 2f;
								num196 = 0.5f;
							}
							bool flag24 = false;
							if ((this.type == 381 || this.type == 382) && Vector2.Distance(base.Center, Main.player[this.target].Center) < 300f && Collision.CanHitLine(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
							{
								flag24 = true;
								this.ai[3] = 0f;
							}
							if (this.type == 520 && Vector2.Distance(base.Center, Main.player[this.target].Center) < 400f && Collision.CanHitLine(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
							{
								flag24 = true;
								this.ai[3] = 0f;
							}
							if (this.velocity.X < -num195 || this.velocity.X > num195 || flag24)
							{
								if (this.velocity.Y == 0f)
								{
									this.velocity *= scaleFactor6;
								}
							}
							else if (this.velocity.X < num195 && this.direction == 1)
							{
								this.velocity.X = this.velocity.X + num196;
								if (this.velocity.X > num195)
								{
									this.velocity.X = num195;
								}
							}
							else if (this.velocity.X > -num195 && this.direction == -1)
							{
								this.velocity.X = this.velocity.X - num196;
								if (this.velocity.X < -num195)
								{
									this.velocity.X = -num195;
								}
							}
						}
						if (this.type == 520)
						{
							this.localAI[2] += 1f;
							if (this.localAI[2] >= 6f)
							{
								this.localAI[2] = 0f;
								this.localAI[3] = Main.player[this.target].DirectionFrom(base.Top + new Vector2(0f, 20f)).ToRotation();
							}
						}
					}
				}
				if (this.type == 109 && Main.netMode != 1 && !Main.player[this.target].dead)
				{
					if (this.justHit)
					{
						this.ai[2] = 0f;
					}
					this.ai[2] += 1f;
					if (this.ai[2] > 450f)
					{
						Vector2 vector27 = new Vector2(this.position.X + (float)this.width * 0.5f - (float)(this.direction * 24), this.position.Y + 4f);
						int num197 = 3 * this.direction;
						int num198 = -5;
						int num199 = Projectile.NewProjectile(vector27.X, vector27.Y, (float)num197, (float)num198, 75, 0, 0f, Main.myPlayer, 0f, 0f);
						Main.projectile[num199].timeLeft = 300;
						this.ai[2] = 0f;
					}
				}
				bool flag25 = false;
				if (this.velocity.Y == 0f)
				{
					int num200 = (int)(this.position.Y + (float)this.height + 7f) / 16;
					int num201 = (int)this.position.X / 16;
					int num202 = (int)(this.position.X + (float)this.width) / 16;
					for (int num203 = num201; num203 <= num202; num203++)
					{
						if (Main.tile[num203, num200] == null)
						{
							return;
						}
						if (Main.tile[num203, num200].nactive() && Main.tileSolid[(int)Main.tile[num203, num200].type])
						{
							flag25 = true;
							break;
						}
					}
				}
				if (this.type == 428)
				{
					flag25 = false;
				}
				if (this.velocity.Y >= 0f)
				{
					int num204 = 0;
					if (this.velocity.X < 0f)
					{
						num204 = -1;
					}
					if (this.velocity.X > 0f)
					{
						num204 = 1;
					}
					Vector2 position2 = this.position;
					position2.X += this.velocity.X;
					int num205 = (int)((position2.X + (float)(this.width / 2) + (float)((this.width / 2 + 1) * num204)) / 16f);
					int num206 = (int)((position2.Y + (float)this.height - 1f) / 16f);
					if (Main.tile[num205, num206] == null)
					{
						Main.tile[num205, num206] = new Tile();
					}
					if (Main.tile[num205, num206 - 1] == null)
					{
						Main.tile[num205, num206 - 1] = new Tile();
					}
					if (Main.tile[num205, num206 - 2] == null)
					{
						Main.tile[num205, num206 - 2] = new Tile();
					}
					if (Main.tile[num205, num206 - 3] == null)
					{
						Main.tile[num205, num206 - 3] = new Tile();
					}
					if (Main.tile[num205, num206 + 1] == null)
					{
						Main.tile[num205, num206 + 1] = new Tile();
					}
					if (Main.tile[num205 - num204, num206 - 3] == null)
					{
						Main.tile[num205 - num204, num206 - 3] = new Tile();
					}
					if ((float)(num205 * 16) < position2.X + (float)this.width && (float)(num205 * 16 + 16) > position2.X && ((Main.tile[num205, num206].nactive() && !Main.tile[num205, num206].topSlope() && !Main.tile[num205, num206 - 1].topSlope() && Main.tileSolid[(int)Main.tile[num205, num206].type] && !Main.tileSolidTop[(int)Main.tile[num205, num206].type]) || (Main.tile[num205, num206 - 1].halfBrick() && Main.tile[num205, num206 - 1].nactive())) && (!Main.tile[num205, num206 - 1].nactive() || !Main.tileSolid[(int)Main.tile[num205, num206 - 1].type] || Main.tileSolidTop[(int)Main.tile[num205, num206 - 1].type] || (Main.tile[num205, num206 - 1].halfBrick() && (!Main.tile[num205, num206 - 4].nactive() || !Main.tileSolid[(int)Main.tile[num205, num206 - 4].type] || Main.tileSolidTop[(int)Main.tile[num205, num206 - 4].type]))) && (!Main.tile[num205, num206 - 2].nactive() || !Main.tileSolid[(int)Main.tile[num205, num206 - 2].type] || Main.tileSolidTop[(int)Main.tile[num205, num206 - 2].type]) && (!Main.tile[num205, num206 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num205, num206 - 3].type] || Main.tileSolidTop[(int)Main.tile[num205, num206 - 3].type]) && (!Main.tile[num205 - num204, num206 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num205 - num204, num206 - 3].type]))
					{
						float num207 = (float)(num206 * 16);
						if (Main.tile[num205, num206].halfBrick())
						{
							num207 += 8f;
						}
						if (Main.tile[num205, num206 - 1].halfBrick())
						{
							num207 -= 8f;
						}
						if (num207 < position2.Y + (float)this.height)
						{
							float num208 = position2.Y + (float)this.height - num207;
							float num209 = 16.1f;
							if (this.type == 163 || this.type == 164 || this.type == 236 || this.type == 239 || this.type == 530)
							{
								num209 += 8f;
							}
							if (num208 <= num209)
							{
								this.gfxOffY += this.position.Y + (float)this.height - num207;
								this.position.Y = num207 - (float)this.height;
								if (num208 < 9f)
								{
									this.stepSpeed = 1f;
								}
								else
								{
									this.stepSpeed = 2f;
								}
							}
						}
					}
				}
				if (flag25)
				{
					int num210 = (int)((this.position.X + (float)(this.width / 2) + (float)(15 * this.direction)) / 16f);
					int num211 = (int)((this.position.Y + (float)this.height - 15f) / 16f);
					if (this.type == 109 || this.type == 163 || this.type == 164 || this.type == 199 || this.type == 236 || this.type == 239 || this.type == 257 || this.type == 258 || this.type == 290 || this.type == 391 || this.type == 425 || this.type == 427 || this.type == 426 || this.type == 508 || this.type == 415 || this.type == 530 || this.type == 532)
					{
						num210 = (int)((this.position.X + (float)(this.width / 2) + (float)((this.width / 2 + 16) * this.direction)) / 16f);
					}
					if (Main.tile[num210, num211] == null)
					{
						Main.tile[num210, num211] = new Tile();
					}
					if (Main.tile[num210, num211 - 1] == null)
					{
						Main.tile[num210, num211 - 1] = new Tile();
					}
					if (Main.tile[num210, num211 - 2] == null)
					{
						Main.tile[num210, num211 - 2] = new Tile();
					}
					if (Main.tile[num210, num211 - 3] == null)
					{
						Main.tile[num210, num211 - 3] = new Tile();
					}
					if (Main.tile[num210, num211 + 1] == null)
					{
						Main.tile[num210, num211 + 1] = new Tile();
					}
					if (Main.tile[num210 + this.direction, num211 - 1] == null)
					{
						Main.tile[num210 + this.direction, num211 - 1] = new Tile();
					}
					if (Main.tile[num210 + this.direction, num211 + 1] == null)
					{
						Main.tile[num210 + this.direction, num211 + 1] = new Tile();
					}
					if (Main.tile[num210 - this.direction, num211 + 1] == null)
					{
						Main.tile[num210 - this.direction, num211 + 1] = new Tile();
					}
					Main.tile[num210, num211 + 1].halfBrick();
					if (Main.tile[num210, num211 - 1].nactive() && (Main.tile[num210, num211 - 1].type == 10 || Main.tile[num210, num211 - 1].type == 388) && flag8)
					{
						this.ai[2] += 1f;
						this.ai[3] = 0f;
						if (this.ai[2] >= 60f)
						{
							if (!Main.bloodMoon && (this.type == 3 || this.type == 331 || this.type == 332 || this.type == 132 || this.type == 161 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 200 || this.type == 223 || this.type == 320 || this.type == 321 || this.type == 319))
							{
								this.ai[1] = 0f;
							}
							this.velocity.X = 0.5f * (float)(-(float)this.direction);
							int num212 = 5;
							if (Main.tile[num210, num211 - 1].type == 388)
							{
								num212 = 2;
							}
							this.ai[1] += (float)num212;
							if (this.type == 27)
							{
								this.ai[1] += 1f;
							}
							if (this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296)
							{
								this.ai[1] += 6f;
							}
							this.ai[2] = 0f;
							bool flag26 = false;
							if (this.ai[1] >= 10f)
							{
								flag26 = true;
								this.ai[1] = 10f;
							}
							if (this.type == 460)
							{
								flag26 = true;
							}
							WorldGen.KillTile(num210, num211 - 1, true, false, false);
							if ((Main.netMode != 1 || !flag26) && flag26 && Main.netMode != 1)
							{
								if (this.type == 26)
								{
									WorldGen.KillTile(num210, num211 - 1, false, false, false);
									if (Main.netMode == 2)
									{
										NetMessage.SendData(17, -1, -1, "", 0, (float)num210, (float)(num211 - 1), 0f, 0, 0, 0);
									}
								}
								else
								{
									if (TileLoader.OpenDoorID(Main.tile[num210, num211 - 1]) >= 0)
									{
										bool flag27 = WorldGen.OpenDoor(num210, num211 - 1, this.direction);
										if (!flag27)
										{
											this.ai[3] = (float)num67;
											this.netUpdate = true;
										}
										if (Main.netMode == 2 && flag27)
										{
											NetMessage.SendData(19, -1, -1, "", 0, (float)num210, (float)(num211 - 1), (float)this.direction, 0, 0, 0);
										}
									}
									if (Main.tile[num210, num211 - 1].type == 388)
									{
										bool flag28 = WorldGen.ShiftTallGate(num210, num211 - 1, false);
										if (!flag28)
										{
											this.ai[3] = (float)num67;
											this.netUpdate = true;
										}
										if (Main.netMode == 2 && flag28)
										{
											NetMessage.SendData(19, -1, -1, "", 4, (float)num210, (float)(num211 - 1), 0f, 0, 0, 0);
										}
									}
								}
							}
						}
					}
					else
					{
						int num213 = this.spriteDirection;
						if (this.type == 425)
						{
							num213 *= -1;
						}
						if ((this.velocity.X < 0f && num213 == -1) || (this.velocity.X > 0f && num213 == 1))
						{
							if (this.height >= 32 && Main.tile[num210, num211 - 2].nactive() && Main.tileSolid[(int)Main.tile[num210, num211 - 2].type])
							{
								if (Main.tile[num210, num211 - 3].nactive() && Main.tileSolid[(int)Main.tile[num210, num211 - 3].type])
								{
									this.velocity.Y = -8f;
									this.netUpdate = true;
								}
								else
								{
									this.velocity.Y = -7f;
									this.netUpdate = true;
								}
							}
							else if (Main.tile[num210, num211 - 1].nactive() && Main.tileSolid[(int)Main.tile[num210, num211 - 1].type])
							{
								this.velocity.Y = -6f;
								this.netUpdate = true;
							}
							else if (this.position.Y + (float)this.height - (float)(num211 * 16) > 20f && Main.tile[num210, num211].nactive() && !Main.tile[num210, num211].topSlope() && Main.tileSolid[(int)Main.tile[num210, num211].type])
							{
								this.velocity.Y = -5f;
								this.netUpdate = true;
							}
							else if (this.directionY < 0 && this.type != 67 && (!Main.tile[num210, num211 + 1].nactive() || !Main.tileSolid[(int)Main.tile[num210, num211 + 1].type]) && (!Main.tile[num210 + this.direction, num211 + 1].nactive() || !Main.tileSolid[(int)Main.tile[num210 + this.direction, num211 + 1].type]))
							{
								this.velocity.Y = -8f;
								this.velocity.X = this.velocity.X * 1.5f;
								this.netUpdate = true;
							}
							else if (flag8)
							{
								this.ai[1] = 0f;
								this.ai[2] = 0f;
							}
							if (this.velocity.Y == 0f && flag6 && this.ai[3] == 1f)
							{
								this.velocity.Y = -5f;
							}
						}
						if ((this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 47 || this.type == 77 || this.type == 104 || this.type == 168 || this.type == 196 || this.type == 385 || this.type == 389 || this.type == 464 || this.type == 470 || (this.type >= 524 && this.type <= 527)) && this.velocity.Y == 0f && Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))) < 100f && Math.Abs(this.position.Y + (float)(this.height / 2) - (Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2))) < 50f && ((this.direction > 0 && this.velocity.X >= 1f) || (this.direction < 0 && this.velocity.X <= -1f)))
						{
							this.velocity.X = this.velocity.X * 2f;
							if (this.velocity.X > 3f)
							{
								this.velocity.X = 3f;
							}
							if (this.velocity.X < -3f)
							{
								this.velocity.X = -3f;
							}
							this.velocity.Y = -4f;
							this.netUpdate = true;
						}
						if (this.type == 120 && this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y * 1.1f;
						}
						if (this.type == 287 && this.velocity.Y == 0f && Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))) < 150f && Math.Abs(this.position.Y + (float)(this.height / 2) - (Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2))) < 50f && ((this.direction > 0 && this.velocity.X >= 1f) || (this.direction < 0 && this.velocity.X <= -1f)))
						{
							this.velocity.X = (float)(8 * this.direction);
							this.velocity.Y = -4f;
							this.netUpdate = true;
						}
						if (this.type == 287 && this.velocity.Y < 0f)
						{
							this.velocity.X = this.velocity.X * 1.2f;
							this.velocity.Y = this.velocity.Y * 1.1f;
						}
						if (this.type == 460 && this.velocity.Y < 0f)
						{
							this.velocity.X = this.velocity.X * 1.3f;
							this.velocity.Y = this.velocity.Y * 1.1f;
						}
					}
				}
				else if (flag8)
				{
					this.ai[1] = 0f;
					this.ai[2] = 0f;
				}
				if (Main.netMode != 1 && this.type == 120 && this.ai[3] >= (float)num67)
				{
					int num214 = (int)Main.player[this.target].position.X / 16;
					int num215 = (int)Main.player[this.target].position.Y / 16;
					int num216 = (int)this.position.X / 16;
					int num217 = (int)this.position.Y / 16;
					int num218 = 20;
					int num219 = 0;
					bool flag29 = false;
					if (Math.Abs(this.position.X - Main.player[this.target].position.X) + Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000f)
					{
						num219 = 100;
						flag29 = true;
					}
					while (!flag29)
					{
						if (num219 >= 100)
						{
							return;
						}
						num219++;
						int num220 = Main.rand.Next(num214 - num218, num214 + num218);
						int num221 = Main.rand.Next(num215 - num218, num215 + num218);
						for (int num222 = num221; num222 < num215 + num218; num222++)
						{
							if ((num222 < num215 - 4 || num222 > num215 + 4 || num220 < num214 - 4 || num220 > num214 + 4) && (num222 < num217 - 1 || num222 > num217 + 1 || num220 < num216 - 1 || num220 > num216 + 1) && Main.tile[num220, num222].nactive())
							{
								bool flag30 = true;
								if (this.type == 32 && Main.tile[num220, num222 - 1].wall == 0)
								{
									flag30 = false;
								}
								else if (Main.tile[num220, num222 - 1].lava())
								{
									flag30 = false;
								}
								if (flag30 && Main.tileSolid[(int)Main.tile[num220, num222].type] && !Collision.SolidTiles(num220 - 1, num220 + 1, num222 - 4, num222 - 1))
								{
									this.position.X = (float)(num220 * 16 - this.width / 2);
									this.position.Y = (float)(num222 * 16 - this.height);
									this.netUpdate = true;
									this.ai[3] = -120f;
								}
							}
						}
					}
				}
			}
			else if (this.aiStyle == 4)
			{
				bool flag31 = false;
				if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.12)
				{
					flag31 = true;
				}
				bool flag32 = false;
				if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.04)
				{
					flag32 = true;
				}
				float num223 = 20f;
				if (flag32)
				{
					num223 = 10f;
				}
				if (this.target < 0 || this.target == 255 || Main.player[this.target].dead || !Main.player[this.target].active)
				{
					this.TargetClosest(true);
				}
				bool dead = Main.player[this.target].dead;
				float num224 = this.position.X + (float)(this.width / 2) - Main.player[this.target].position.X - (float)(Main.player[this.target].width / 2);
				float num225 = this.position.Y + (float)this.height - 59f - Main.player[this.target].position.Y - (float)(Main.player[this.target].height / 2);
				float num226 = (float)Math.Atan2((double)num225, (double)num224) + 1.57f;
				if (num226 < 0f)
				{
					num226 += 6.283f;
				}
				else if ((double)num226 > 6.283)
				{
					num226 -= 6.283f;
				}
				float num227 = 0f;
				if (this.ai[0] == 0f && this.ai[1] == 0f)
				{
					num227 = 0.02f;
				}
				if (this.ai[0] == 0f && this.ai[1] == 2f && this.ai[2] > 40f)
				{
					num227 = 0.05f;
				}
				if (this.ai[0] == 3f && this.ai[1] == 0f)
				{
					num227 = 0.05f;
				}
				if (this.ai[0] == 3f && this.ai[1] == 2f && this.ai[2] > 40f)
				{
					num227 = 0.08f;
				}
				if (this.ai[0] == 3f && this.ai[1] == 4f && this.ai[2] > num223)
				{
					num227 = 0.15f;
				}
				if (this.ai[0] == 3f && this.ai[1] == 5f)
				{
					num227 = 0.05f;
				}
				if (Main.expertMode)
				{
					num227 *= 1.5f;
				}
				if (flag32 && Main.expertMode)
				{
					num227 = 0f;
				}
				if (this.rotation < num226)
				{
					if ((double)(num226 - this.rotation) > 3.1415)
					{
						this.rotation -= num227;
					}
					else
					{
						this.rotation += num227;
					}
				}
				else if (this.rotation > num226)
				{
					if ((double)(this.rotation - num226) > 3.1415)
					{
						this.rotation += num227;
					}
					else
					{
						this.rotation -= num227;
					}
				}
				if (this.rotation > num226 - num227 && this.rotation < num226 + num227)
				{
					this.rotation = num226;
				}
				if (this.rotation < 0f)
				{
					this.rotation += 6.283f;
				}
				else if ((double)this.rotation > 6.283)
				{
					this.rotation -= 6.283f;
				}
				if (this.rotation > num226 - num227 && this.rotation < num226 + num227)
				{
					this.rotation = num226;
				}
				if (Main.rand.Next(5) == 0)
				{
					int num228 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f), this.width, (int)((float)this.height * 0.5f), 5, this.velocity.X, 2f, 0, default(Color), 1f);
					Dust expr_10225_cp_0 = Main.dust[num228];
					expr_10225_cp_0.velocity.X = expr_10225_cp_0.velocity.X * 0.5f;
					Dust expr_10245_cp_0 = Main.dust[num228];
					expr_10245_cp_0.velocity.Y = expr_10245_cp_0.velocity.Y * 0.1f;
				}
				if (Main.dayTime || dead)
				{
					this.velocity.Y = this.velocity.Y - 0.04f;
					if (this.timeLeft > 10)
					{
						this.timeLeft = 10;
						return;
					}
				}
				else if (this.ai[0] == 0f)
				{
					if (this.ai[1] == 0f)
					{
						float num229 = 5f;
						float num230 = 0.04f;
						if (Main.expertMode)
						{
							num230 = 0.15f;
							num229 = 7f;
						}
						Vector2 vector28 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num231 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector28.X;
						float num232 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 200f - vector28.Y;
						float num233 = (float)Math.Sqrt((double)(num231 * num231 + num232 * num232));
						float num234 = num233;
						num233 = num229 / num233;
						num231 *= num233;
						num232 *= num233;
						if (this.velocity.X < num231)
						{
							this.velocity.X = this.velocity.X + num230;
							if (this.velocity.X < 0f && num231 > 0f)
							{
								this.velocity.X = this.velocity.X + num230;
							}
						}
						else if (this.velocity.X > num231)
						{
							this.velocity.X = this.velocity.X - num230;
							if (this.velocity.X > 0f && num231 < 0f)
							{
								this.velocity.X = this.velocity.X - num230;
							}
						}
						if (this.velocity.Y < num232)
						{
							this.velocity.Y = this.velocity.Y + num230;
							if (this.velocity.Y < 0f && num232 > 0f)
							{
								this.velocity.Y = this.velocity.Y + num230;
							}
						}
						else if (this.velocity.Y > num232)
						{
							this.velocity.Y = this.velocity.Y - num230;
							if (this.velocity.Y > 0f && num232 < 0f)
							{
								this.velocity.Y = this.velocity.Y - num230;
							}
						}
						this.ai[2] += 1f;
						float num235 = 600f;
						if (Main.expertMode)
						{
							num235 *= 0.35f;
						}
						if (this.ai[2] >= num235)
						{
							this.ai[1] = 1f;
							this.ai[2] = 0f;
							this.ai[3] = 0f;
							this.target = 255;
							this.netUpdate = true;
						}
						else if ((this.position.Y + (float)this.height < Main.player[this.target].position.Y && num234 < 500f) || (Main.expertMode && num234 < 500f))
						{
							if (!Main.player[this.target].dead)
							{
								this.ai[3] += 1f;
							}
							float num236 = 110f;
							if (Main.expertMode)
							{
								num236 *= 0.4f;
							}
							if (this.ai[3] >= num236)
							{
								this.ai[3] = 0f;
								this.rotation = num226;
								float num237 = 5f;
								if (Main.expertMode)
								{
									num237 = 6f;
								}
								float num238 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector28.X;
								float num239 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector28.Y;
								float num240 = (float)Math.Sqrt((double)(num238 * num238 + num239 * num239));
								num240 = num237 / num240;
								Vector2 position3 = vector28;
								Vector2 vector29;
								vector29.X = num238 * num240;
								vector29.Y = num239 * num240;
								position3.X += vector29.X * 10f;
								position3.Y += vector29.Y * 10f;
								if (Main.netMode != 1)
								{
									int num241 = NPC.NewNPC((int)position3.X, (int)position3.Y, 5, 0, 0f, 0f, 0f, 0f, 255);
									Main.npc[num241].velocity.X = vector29.X;
									Main.npc[num241].velocity.Y = vector29.Y;
									if (Main.netMode == 2 && num241 < 200)
									{
										NetMessage.SendData(23, -1, -1, "", num241, 0f, 0f, 0f, 0, 0, 0);
									}
								}
								Main.PlaySound(3, (int)position3.X, (int)position3.Y, 1);
								for (int num242 = 0; num242 < 10; num242++)
								{
									Dust.NewDust(position3, 20, 20, 5, vector29.X * 0.4f, vector29.Y * 0.4f, 0, default(Color), 1f);
								}
							}
						}
					}
					else if (this.ai[1] == 1f)
					{
						this.rotation = num226;
						float num243 = 6f;
						if (Main.expertMode)
						{
							num243 = 7f;
						}
						Vector2 vector30 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num244 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector30.X;
						float num245 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector30.Y;
						float num246 = (float)Math.Sqrt((double)(num244 * num244 + num245 * num245));
						num246 = num243 / num246;
						this.velocity.X = num244 * num246;
						this.velocity.Y = num245 * num246;
						this.ai[1] = 2f;
						this.netUpdate = true;
						if (this.netSpam > 10)
						{
							this.netSpam = 10;
						}
					}
					else if (this.ai[1] == 2f)
					{
						this.ai[2] += 1f;
						if (this.ai[2] >= 40f)
						{
							this.velocity *= 0.98f;
							if (Main.expertMode)
							{
								this.velocity *= 0.985f;
							}
							if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
							{
								this.velocity.X = 0f;
							}
							if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
							{
								this.velocity.Y = 0f;
							}
						}
						else
						{
							this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
						}
						int num247 = 150;
						if (Main.expertMode)
						{
							num247 = 100;
						}
						if (this.ai[2] >= (float)num247)
						{
							this.ai[3] += 1f;
							this.ai[2] = 0f;
							this.target = 255;
							this.rotation = num226;
							if (this.ai[3] >= 3f)
							{
								this.ai[1] = 0f;
								this.ai[3] = 0f;
							}
							else
							{
								this.ai[1] = 1f;
							}
						}
					}
					float num248 = 0.5f;
					if (Main.expertMode)
					{
						num248 = 0.65f;
					}
					if ((float)this.life < (float)this.lifeMax * num248)
					{
						this.ai[0] = 1f;
						this.ai[1] = 0f;
						this.ai[2] = 0f;
						this.ai[3] = 0f;
						this.netUpdate = true;
						if (this.netSpam > 10)
						{
							this.netSpam = 10;
							return;
						}
					}
				}
				else if (this.ai[0] == 1f || this.ai[0] == 2f)
				{
					if (this.ai[0] == 1f)
					{
						this.ai[2] += 0.005f;
						if ((double)this.ai[2] > 0.5)
						{
							this.ai[2] = 0.5f;
						}
					}
					else
					{
						this.ai[2] -= 0.005f;
						if (this.ai[2] < 0f)
						{
							this.ai[2] = 0f;
						}
					}
					this.rotation += this.ai[2];
					this.ai[1] += 1f;
					if (Main.expertMode && this.ai[1] % 20f == 0f)
					{
						float num249 = 5f;
						Vector2 vector31 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num250 = (float)Main.rand.Next(-200, 200);
						float num251 = (float)Main.rand.Next(-200, 200);
						float num252 = (float)Math.Sqrt((double)(num250 * num250 + num251 * num251));
						num252 = num249 / num252;
						Vector2 position4 = vector31;
						Vector2 vector32;
						vector32.X = num250 * num252;
						vector32.Y = num251 * num252;
						position4.X += vector32.X * 10f;
						position4.Y += vector32.Y * 10f;
						if (Main.netMode != 1)
						{
							int num253 = NPC.NewNPC((int)position4.X, (int)position4.Y, 5, 0, 0f, 0f, 0f, 0f, 255);
							Main.npc[num253].velocity.X = vector32.X;
							Main.npc[num253].velocity.Y = vector32.Y;
							if (Main.netMode == 2 && num253 < 200)
							{
								NetMessage.SendData(23, -1, -1, "", num253, 0f, 0f, 0f, 0, 0, 0);
							}
						}
						for (int num254 = 0; num254 < 10; num254++)
						{
							Dust.NewDust(position4, 20, 20, 5, vector32.X * 0.4f, vector32.Y * 0.4f, 0, default(Color), 1f);
						}
					}
					if (this.ai[1] == 100f)
					{
						this.ai[0] += 1f;
						this.ai[1] = 0f;
						if (this.ai[0] == 3f)
						{
							this.ai[2] = 0f;
						}
						else
						{
							Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, 1);
							for (int num255 = 0; num255 < 2; num255++)
							{
								Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 8, 1f);
								Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 7, 1f);
								Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 6, 1f);
							}
							for (int num256 = 0; num256 < 20; num256++)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, default(Color), 1f);
							}
							Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
						}
					}
					Dust.NewDust(this.position, this.width, this.height, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, default(Color), 1f);
					this.velocity.X = this.velocity.X * 0.98f;
					this.velocity.Y = this.velocity.Y * 0.98f;
					if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
					{
						this.velocity.X = 0f;
					}
					if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
					{
						this.velocity.Y = 0f;
						return;
					}
				}
				else
				{
					this.defense = 0;
					this.damage = 23;
					if (Main.expertMode)
					{
						if (flag31)
						{
							this.defense = -15;
						}
						if (flag32)
						{
							this.damage = (int)(20f * Main.expertDamage);
							this.defense = -30;
						}
						else
						{
							this.damage = (int)(18f * Main.expertDamage);
						}
					}
					if (this.ai[1] == 0f && flag31)
					{
						this.ai[1] = 5f;
					}
					if (this.ai[1] == 0f)
					{
						float num257 = 6f;
						float num258 = 0.07f;
						Vector2 vector33 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num259 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector33.X;
						float num260 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 120f - vector33.Y;
						float num261 = (float)Math.Sqrt((double)(num259 * num259 + num260 * num260));
						if (num261 > 400f && Main.expertMode)
						{
							num257 += 1f;
							num258 += 0.05f;
							if (num261 > 600f)
							{
								num257 += 1f;
								num258 += 0.05f;
								if (num261 > 800f)
								{
									num257 += 1f;
									num258 += 0.05f;
								}
							}
						}
						num261 = num257 / num261;
						num259 *= num261;
						num260 *= num261;
						if (this.velocity.X < num259)
						{
							this.velocity.X = this.velocity.X + num258;
							if (this.velocity.X < 0f && num259 > 0f)
							{
								this.velocity.X = this.velocity.X + num258;
							}
						}
						else if (this.velocity.X > num259)
						{
							this.velocity.X = this.velocity.X - num258;
							if (this.velocity.X > 0f && num259 < 0f)
							{
								this.velocity.X = this.velocity.X - num258;
							}
						}
						if (this.velocity.Y < num260)
						{
							this.velocity.Y = this.velocity.Y + num258;
							if (this.velocity.Y < 0f && num260 > 0f)
							{
								this.velocity.Y = this.velocity.Y + num258;
							}
						}
						else if (this.velocity.Y > num260)
						{
							this.velocity.Y = this.velocity.Y - num258;
							if (this.velocity.Y > 0f && num260 < 0f)
							{
								this.velocity.Y = this.velocity.Y - num258;
							}
						}
						this.ai[2] += 1f;
						if (this.ai[2] >= 200f)
						{
							this.ai[1] = 1f;
							this.ai[2] = 0f;
							this.ai[3] = 0f;
							if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.35)
							{
								this.ai[1] = 3f;
							}
							this.target = 255;
							this.netUpdate = true;
						}
						if (Main.expertMode && flag32)
						{
							this.TargetClosest(true);
							this.netUpdate = true;
							this.ai[1] = 3f;
							this.ai[2] = 0f;
							this.ai[3] -= 1000f;
						}
					}
					else if (this.ai[1] == 1f)
					{
						Main.PlaySound(36, (int)this.position.X, (int)this.position.Y, 0);
						this.rotation = num226;
						float num262 = 6.8f;
						if (Main.expertMode && this.ai[3] == 1f)
						{
							num262 *= 1.15f;
						}
						if (Main.expertMode && this.ai[3] == 2f)
						{
							num262 *= 1.3f;
						}
						Vector2 vector34 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num263 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector34.X;
						float num264 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector34.Y;
						float num265 = (float)Math.Sqrt((double)(num263 * num263 + num264 * num264));
						num265 = num262 / num265;
						this.velocity.X = num263 * num265;
						this.velocity.Y = num264 * num265;
						this.ai[1] = 2f;
						this.netUpdate = true;
						if (this.netSpam > 10)
						{
							this.netSpam = 10;
						}
					}
					else if (this.ai[1] == 2f)
					{
						float num266 = 40f;
						this.ai[2] += 1f;
						if (Main.expertMode)
						{
							num266 = 50f;
						}
						if (this.ai[2] >= num266)
						{
							this.velocity *= 0.97f;
							if (Main.expertMode)
							{
								this.velocity *= 0.98f;
							}
							if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
							{
								this.velocity.X = 0f;
							}
							if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
							{
								this.velocity.Y = 0f;
							}
						}
						else
						{
							this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
						}
						int num267 = 130;
						if (Main.expertMode)
						{
							num267 = 90;
						}
						if (this.ai[2] >= (float)num267)
						{
							this.ai[3] += 1f;
							this.ai[2] = 0f;
							this.target = 255;
							this.rotation = num226;
							if (this.ai[3] >= 3f)
							{
								this.ai[1] = 0f;
								this.ai[3] = 0f;
								if (Main.expertMode && Main.netMode != 1 && (double)this.life < (double)this.lifeMax * 0.5)
								{
									this.ai[1] = 3f;
									this.ai[3] += (float)Main.rand.Next(1, 4);
								}
								this.netUpdate = true;
								if (this.netSpam > 10)
								{
									this.netSpam = 10;
								}
							}
							else
							{
								this.ai[1] = 1f;
							}
						}
					}
					else if (this.ai[1] == 3f)
					{
						if (this.ai[3] == 4f && flag31 && base.Center.Y > Main.player[this.target].Center.Y)
						{
							this.TargetClosest(true);
							this.ai[1] = 0f;
							this.ai[2] = 0f;
							this.ai[3] = 0f;
							this.netUpdate = true;
							if (this.netSpam > 10)
							{
								this.netSpam = 10;
							}
						}
						else if (Main.netMode != 1)
						{
							this.TargetClosest(true);
							float num268 = 20f;
							Vector2 vector35 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num269 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector35.X;
							float num270 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector35.Y;
							float num271 = Math.Abs(Main.player[this.target].velocity.X) + Math.Abs(Main.player[this.target].velocity.Y) / 4f;
							num271 += 10f - num271;
							if (num271 < 5f)
							{
								num271 = 5f;
							}
							if (num271 > 15f)
							{
								num271 = 15f;
							}
							if (this.ai[2] == -1f && !flag32)
							{
								num271 *= 4f;
								num268 *= 1.3f;
							}
							if (flag32)
							{
								num271 *= 2f;
							}
							num269 -= Main.player[this.target].velocity.X * num271;
							num270 -= Main.player[this.target].velocity.Y * num271 / 4f;
							num269 *= 1f + (float)Main.rand.Next(-10, 11) * 0.01f;
							num270 *= 1f + (float)Main.rand.Next(-10, 11) * 0.01f;
							if (flag32)
							{
								num269 *= 1f + (float)Main.rand.Next(-10, 11) * 0.01f;
								num270 *= 1f + (float)Main.rand.Next(-10, 11) * 0.01f;
							}
							float num272 = (float)Math.Sqrt((double)(num269 * num269 + num270 * num270));
							float num273 = num272;
							num272 = num268 / num272;
							this.velocity.X = num269 * num272;
							this.velocity.Y = num270 * num272;
							this.velocity.X = this.velocity.X + (float)Main.rand.Next(-20, 21) * 0.1f;
							this.velocity.Y = this.velocity.Y + (float)Main.rand.Next(-20, 21) * 0.1f;
							if (flag32)
							{
								this.velocity.X = this.velocity.X + (float)Main.rand.Next(-50, 51) * 0.1f;
								this.velocity.Y = this.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.1f;
								float num274 = Math.Abs(this.velocity.X);
								float num275 = Math.Abs(this.velocity.Y);
								if (base.Center.X > Main.player[this.target].Center.X)
								{
									num275 *= -1f;
								}
								if (base.Center.Y > Main.player[this.target].Center.Y)
								{
									num274 *= -1f;
								}
								this.velocity.X = num275 + this.velocity.X;
								this.velocity.Y = num274 + this.velocity.Y;
								this.velocity.Normalize();
								this.velocity *= num268;
								this.velocity.X = this.velocity.X + (float)Main.rand.Next(-20, 21) * 0.1f;
								this.velocity.Y = this.velocity.Y + (float)Main.rand.Next(-20, 21) * 0.1f;
							}
							else if (num273 < 100f)
							{
								if (Math.Abs(this.velocity.X) > Math.Abs(this.velocity.Y))
								{
									float num276 = Math.Abs(this.velocity.X);
									float num277 = Math.Abs(this.velocity.Y);
									if (base.Center.X > Main.player[this.target].Center.X)
									{
										num277 *= -1f;
									}
									if (base.Center.Y > Main.player[this.target].Center.Y)
									{
										num276 *= -1f;
									}
									this.velocity.X = num277;
									this.velocity.Y = num276;
								}
							}
							else if (Math.Abs(this.velocity.X) > Math.Abs(this.velocity.Y))
							{
								float num278 = (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) / 2f;
								float num279 = num278;
								if (base.Center.X > Main.player[this.target].Center.X)
								{
									num279 *= -1f;
								}
								if (base.Center.Y > Main.player[this.target].Center.Y)
								{
									num278 *= -1f;
								}
								this.velocity.X = num279;
								this.velocity.Y = num278;
							}
							this.ai[1] = 4f;
							this.netUpdate = true;
							if (this.netSpam > 10)
							{
								this.netSpam = 10;
							}
						}
					}
					else if (this.ai[1] == 4f)
					{
						if (this.ai[2] == 0f)
						{
							Main.PlaySound(36, (int)this.position.X, (int)this.position.Y, -1);
						}
						float num280 = num223;
						this.ai[2] += 1f;
						if (this.ai[2] == num280 && Vector2.Distance(this.position, Main.player[this.target].position) < 200f)
						{
							this.ai[2] -= 1f;
						}
						if (this.ai[2] >= num280)
						{
							this.velocity *= 0.95f;
							if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
							{
								this.velocity.X = 0f;
							}
							if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
							{
								this.velocity.Y = 0f;
							}
						}
						else
						{
							this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
						}
						float num281 = num280 + 13f;
						if (this.ai[2] >= num281)
						{
							this.netUpdate = true;
							if (this.netSpam > 10)
							{
								this.netSpam = 10;
							}
							this.ai[3] += 1f;
							this.ai[2] = 0f;
							if (this.ai[3] >= 5f)
							{
								this.ai[1] = 0f;
								this.ai[3] = 0f;
							}
							else
							{
								this.ai[1] = 3f;
							}
						}
					}
					else if (this.ai[1] == 5f)
					{
						float num282 = 600f;
						float num283 = 9f;
						float num284 = 0.3f;
						Vector2 vector36 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num285 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector36.X;
						float num286 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) + num282 - vector36.Y;
						float num287 = (float)Math.Sqrt((double)(num285 * num285 + num286 * num286));
						num287 = num283 / num287;
						num285 *= num287;
						num286 *= num287;
						if (this.velocity.X < num285)
						{
							this.velocity.X = this.velocity.X + num284;
							if (this.velocity.X < 0f && num285 > 0f)
							{
								this.velocity.X = this.velocity.X + num284;
							}
						}
						else if (this.velocity.X > num285)
						{
							this.velocity.X = this.velocity.X - num284;
							if (this.velocity.X > 0f && num285 < 0f)
							{
								this.velocity.X = this.velocity.X - num284;
							}
						}
						if (this.velocity.Y < num286)
						{
							this.velocity.Y = this.velocity.Y + num284;
							if (this.velocity.Y < 0f && num286 > 0f)
							{
								this.velocity.Y = this.velocity.Y + num284;
							}
						}
						else if (this.velocity.Y > num286)
						{
							this.velocity.Y = this.velocity.Y - num284;
							if (this.velocity.Y > 0f && num286 < 0f)
							{
								this.velocity.Y = this.velocity.Y - num284;
							}
						}
						this.ai[2] += 1f;
						if (this.ai[2] >= 70f)
						{
							this.TargetClosest(true);
							this.ai[1] = 3f;
							this.ai[2] = -1f;
							this.ai[3] = (float)Main.rand.Next(-3, 1);
							this.netUpdate = true;
						}
					}
					if (flag32 && this.ai[1] == 5f)
					{
						this.ai[1] = 3f;
						return;
					}
				}
			}
			else if (this.aiStyle == 5)
			{
				if (this.target < 0 || this.target == 255 || Main.player[this.target].dead)
				{
					this.TargetClosest(true);
				}
				float num288 = 6f;
				float num289 = 0.05f;
				if (this.type == 6 || this.type == 173)
				{
					num288 = 4f;
					num289 = 0.02f;
					if (this.type == 6 && Main.expertMode)
					{
						num289 = 0.035f;
					}
				}
				else if (this.type == 94)
				{
					num288 = 4.2f;
					num289 = 0.022f;
				}
				else if (this.type == 252)
				{
					if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						num288 = 6f;
						num289 = 0.1f;
					}
					else
					{
						num289 = 0.01f;
						num288 = 2f;
					}
				}
				else if (this.type == 42 || (this.type >= 231 && this.type <= 235))
				{
					num288 = 3.5f;
					num289 = 0.021f;
					if (this.type == 231)
					{
						num288 = 3f;
						num289 = 0.017f;
					}
					num288 *= 1f - this.scale;
					num289 *= 1f - this.scale;
				}
				else if (this.type == 205)
				{
					num288 = 3.25f;
					num289 = 0.018f;
				}
				else if (this.type == 176)
				{
					num288 = 4f;
					num289 = 0.017f;
				}
				else if (this.type == 23)
				{
					num288 = 1f;
					num289 = 0.03f;
				}
				else if (this.type == 5)
				{
					num288 = 5f;
					num289 = 0.03f;
				}
				else if (this.type == 210 || this.type == 211)
				{
					this.localAI[0] += 1f;
					float num290 = (this.localAI[0] - 60f) / 60f;
					if (num290 > 1f)
					{
						num290 = 1f;
					}
					else
					{
						if (this.velocity.X > 6f)
						{
							this.velocity.X = 6f;
						}
						if (this.velocity.X < -6f)
						{
							this.velocity.X = -6f;
						}
						if (this.velocity.Y > 6f)
						{
							this.velocity.Y = 6f;
						}
						if (this.velocity.Y < -6f)
						{
							this.velocity.Y = -6f;
						}
					}
					num288 = 5f;
					num289 = 0.1f;
					num289 *= num290;
				}
				Vector2 vector37 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float num291 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2);
				float num292 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2);
				num291 = (float)((int)(num291 / 8f) * 8);
				num292 = (float)((int)(num292 / 8f) * 8);
				vector37.X = (float)((int)(vector37.X / 8f) * 8);
				vector37.Y = (float)((int)(vector37.Y / 8f) * 8);
				num291 -= vector37.X;
				num292 -= vector37.Y;
				float num293 = (float)Math.Sqrt((double)(num291 * num291 + num292 * num292));
				float num294 = num293;
				bool flag33 = false;
				if (num293 > 600f)
				{
					flag33 = true;
				}
				if (num293 == 0f)
				{
					num291 = this.velocity.X;
					num292 = this.velocity.Y;
				}
				else
				{
					num293 = num288 / num293;
					num291 *= num293;
					num292 *= num293;
				}
				if (this.type == 6 || this.type == 42 || this.type == 94 || this.type == 139 || this.type == 173 || this.type == 176 || this.type == 205 || this.type == 210 || this.type == 211 || (this.type >= 231 && this.type <= 235))
				{
					if (num294 > 100f || this.type == 42 || this.type == 94 || this.type == 176 || this.type == 210 || this.type == 211 || (this.type >= 231 && this.type <= 235))
					{
						this.ai[0] += 1f;
						if (this.ai[0] > 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.023f;
						}
						else
						{
							this.velocity.Y = this.velocity.Y - 0.023f;
						}
						if (this.ai[0] < -100f || this.ai[0] > 100f)
						{
							this.velocity.X = this.velocity.X + 0.023f;
						}
						else
						{
							this.velocity.X = this.velocity.X - 0.023f;
						}
						if (this.ai[0] > 200f)
						{
							this.ai[0] = -200f;
						}
					}
					if (num294 < 150f && (this.type == 6 || this.type == 94 || this.type == 173))
					{
						this.velocity.X = this.velocity.X + num291 * 0.007f;
						this.velocity.Y = this.velocity.Y + num292 * 0.007f;
					}
				}
				if (Main.player[this.target].dead)
				{
					num291 = (float)this.direction * num288 / 2f;
					num292 = -num288 / 2f;
				}
				if (this.velocity.X < num291)
				{
					this.velocity.X = this.velocity.X + num289;
					if (this.type != 173 && this.type != 6 && this.type != 42 && (this.type < 231 || this.type > 235) && this.type != 94 && this.type != 139 && this.velocity.X < 0f && num291 > 0f)
					{
						this.velocity.X = this.velocity.X + num289;
					}
				}
				else if (this.velocity.X > num291)
				{
					this.velocity.X = this.velocity.X - num289;
					if (this.type != 173 && this.type != 6 && this.type != 42 && (this.type < 231 || this.type > 235) && this.type != 94 && this.type != 139 && this.velocity.X > 0f && num291 < 0f)
					{
						this.velocity.X = this.velocity.X - num289;
					}
				}
				if (this.velocity.Y < num292)
				{
					this.velocity.Y = this.velocity.Y + num289;
					if (this.type != 173 && this.type != 6 && this.type != 42 && (this.type < 231 || this.type > 235) && this.type != 94 && this.type != 139 && this.velocity.Y < 0f && num292 > 0f)
					{
						this.velocity.Y = this.velocity.Y + num289;
					}
				}
				else if (this.velocity.Y > num292)
				{
					this.velocity.Y = this.velocity.Y - num289;
					if (this.type != 173 && this.type != 6 && this.type != 42 && (this.type < 231 || this.type > 235) && this.type != 94 && this.type != 139 && this.velocity.Y > 0f && num292 < 0f)
					{
						this.velocity.Y = this.velocity.Y - num289;
					}
				}
				if (this.type == 23)
				{
					if (num291 > 0f)
					{
						this.spriteDirection = 1;
						this.rotation = (float)Math.Atan2((double)num292, (double)num291);
					}
					else if (num291 < 0f)
					{
						this.spriteDirection = -1;
						this.rotation = (float)Math.Atan2((double)num292, (double)num291) + 3.14f;
					}
				}
				else if (this.type == 139)
				{
					this.localAI[0] += 1f;
					if (this.justHit)
					{
						this.localAI[0] = 0f;
					}
					if (Main.netMode != 1 && this.localAI[0] >= 120f)
					{
						this.localAI[0] = 0f;
						if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
						{
							int num295 = 25;
							if (Main.expertMode)
							{
								num295 = 22;
							}
							int num296 = 84;
							Projectile.NewProjectile(vector37.X, vector37.Y, num291, num292, num296, num295, 0f, Main.myPlayer, 0f, 0f);
						}
					}
					int num297 = (int)this.position.X + this.width / 2;
					int num298 = (int)this.position.Y + this.height / 2;
					num297 /= 16;
					num298 /= 16;
					if (!WorldGen.SolidTile(num297, num298))
					{
						Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.3f, 0.1f, 0.05f);
					}
					if (num291 > 0f)
					{
						this.spriteDirection = 1;
						this.rotation = (float)Math.Atan2((double)num292, (double)num291);
					}
					if (num291 < 0f)
					{
						this.spriteDirection = -1;
						this.rotation = (float)Math.Atan2((double)num292, (double)num291) + 3.14f;
					}
				}
				else if (this.type == 6 || this.type == 94 || this.type == 173)
				{
					this.rotation = (float)Math.Atan2((double)num292, (double)num291) - 1.57f;
				}
				else if (this.type == 42 || this.type == 176 || this.type == 205 || (this.type >= 231 && this.type <= 235))
				{
					if (this.velocity.X > 0f)
					{
						this.spriteDirection = 1;
					}
					if (this.velocity.X < 0f)
					{
						this.spriteDirection = -1;
					}
					this.rotation = this.velocity.X * 0.1f;
				}
				else
				{
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
				}
				if (this.type == 6 || this.type == 23 || this.type == 42 || this.type == 94 || this.type == 139 || this.type == 173 || this.type == 176 || this.type == 205 || this.type == 210 || this.type == 211 || (this.type >= 231 && this.type <= 235))
				{
					float num299 = 0.7f;
					if (this.type == 6 || this.type == 173)
					{
						num299 = 0.4f;
					}
					if (this.collideX)
					{
						this.netUpdate = true;
						this.velocity.X = this.oldVelocity.X * -num299;
						if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
						{
							this.velocity.X = 2f;
						}
						if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
						{
							this.velocity.X = -2f;
						}
					}
					if (this.collideY)
					{
						this.netUpdate = true;
						this.velocity.Y = this.oldVelocity.Y * -num299;
						if (this.velocity.Y > 0f && (double)this.velocity.Y < 1.5)
						{
							this.velocity.Y = 2f;
						}
						if (this.velocity.Y < 0f && (double)this.velocity.Y > -1.5)
						{
							this.velocity.Y = -2f;
						}
					}
					if (this.type == 23)
					{
						int num300 = Dust.NewDust(new Vector2(this.position.X - this.velocity.X, this.position.Y - this.velocity.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2f);
						Main.dust[num300].noGravity = true;
						Dust expr_137E5_cp_0 = Main.dust[num300];
						expr_137E5_cp_0.velocity.X = expr_137E5_cp_0.velocity.X * 0.3f;
						Dust expr_13805_cp_0 = Main.dust[num300];
						expr_13805_cp_0.velocity.Y = expr_13805_cp_0.velocity.Y * 0.3f;
					}
					else if (this.type != 42 && this.type != 139 && this.type != 176 && this.type != 205 && this.type != 210 && this.type != 211 && this.type != 252 && (this.type < 231 || this.type > 235) && Main.rand.Next(20) == 0)
					{
						int num301 = 18;
						if (this.type == 173)
						{
							num301 = 5;
						}
						int num302 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f), this.width, (int)((float)this.height * 0.5f), num301, this.velocity.X, 2f, 75, this.color, this.scale);
						Dust expr_13945_cp_0 = Main.dust[num302];
						expr_13945_cp_0.velocity.X = expr_13945_cp_0.velocity.X * 0.5f;
						Dust expr_13965_cp_0 = Main.dust[num302];
						expr_13965_cp_0.velocity.Y = expr_13965_cp_0.velocity.Y * 0.1f;
					}
				}
				else if (this.type != 252 && Main.rand.Next(40) == 0)
				{
					int num303 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f), this.width, (int)((float)this.height * 0.5f), 5, this.velocity.X, 2f, 0, default(Color), 1f);
					Dust expr_13A16_cp_0 = Main.dust[num303];
					expr_13A16_cp_0.velocity.X = expr_13A16_cp_0.velocity.X * 0.5f;
					Dust expr_13A36_cp_0 = Main.dust[num303];
					expr_13A36_cp_0.velocity.Y = expr_13A36_cp_0.velocity.Y * 0.1f;
				}
				if ((this.type == 6 || this.type == 94 || this.type == 173) && this.wet)
				{
					if (this.velocity.Y > 0f)
					{
						this.velocity.Y = this.velocity.Y * 0.95f;
					}
					this.velocity.Y = this.velocity.Y - 0.3f;
					if (this.velocity.Y < -2f)
					{
						this.velocity.Y = -2f;
					}
				}
				if (this.type == 205 && this.wet)
				{
					if (this.velocity.Y > 0f)
					{
						this.velocity.Y = this.velocity.Y * 0.95f;
					}
					this.velocity.Y = this.velocity.Y - 0.5f;
					if (this.velocity.Y < -4f)
					{
						this.velocity.Y = -4f;
					}
					this.TargetClosest(true);
				}
				if (this.type == 42 || this.type == 176 || (this.type >= 231 && this.type <= 235))
				{
					if (this.wet)
					{
						if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y * 0.95f;
						}
						this.velocity.Y = this.velocity.Y - 0.5f;
						if (this.velocity.Y < -4f)
						{
							this.velocity.Y = -4f;
						}
						this.TargetClosest(true);
					}
					if (this.ai[1] == 101f)
					{
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
						this.ai[1] = 0f;
					}
					if (Main.netMode != 1)
					{
						this.ai[1] += (float)Main.rand.Next(5, 20) * 0.1f * this.scale;
						if (this.type == 176)
						{
							this.ai[1] += (float)Main.rand.Next(5, 20) * 0.1f * this.scale;
						}
						if (Main.player[this.target].stealth == 0f && Main.player[this.target].itemAnimation == 0)
						{
							this.ai[1] = 0f;
						}
						if (this.ai[1] >= 130f)
						{
							if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
							{
								float num304 = 8f;
								Vector2 vector38 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)(this.height / 2));
								float num305 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector38.X + (float)Main.rand.Next(-20, 21);
								float num306 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector38.Y + (float)Main.rand.Next(-20, 21);
								if ((num305 < 0f && this.velocity.X < 0f) || (num305 > 0f && this.velocity.X > 0f))
								{
									float num307 = (float)Math.Sqrt((double)(num305 * num305 + num306 * num306));
									num307 = num304 / num307;
									num305 *= num307;
									num306 *= num307;
									int num308 = (int)(10f * this.scale);
									if (this.type == 176)
									{
										num308 = (int)(30f * this.scale);
									}
									int num309 = 55;
									int num310 = Projectile.NewProjectile(vector38.X, vector38.Y, num305, num306, num309, num308, 0f, Main.myPlayer, 0f, 0f);
									Main.projectile[num310].timeLeft = 300;
									this.ai[1] = 101f;
									this.netUpdate = true;
								}
								else
								{
									this.ai[1] = 0f;
								}
							}
							else
							{
								this.ai[1] = 0f;
							}
						}
					}
				}
				if (this.type == 139 && flag33)
				{
					if ((this.velocity.X > 0f && num291 > 0f) || (this.velocity.X < 0f && num291 < 0f))
					{
						if (Math.Abs(this.velocity.X) < 12f)
						{
							this.velocity.X = this.velocity.X * 1.05f;
						}
					}
					else
					{
						this.velocity.X = this.velocity.X * 0.9f;
					}
				}
				if (Main.netMode != 1 && this.type == 94 && !Main.player[this.target].dead)
				{
					if (this.justHit)
					{
						this.localAI[0] = 0f;
					}
					this.localAI[0] += 1f;
					if (this.localAI[0] == 180f)
					{
						if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
						{
							NPC.NewNPC((int)(this.position.X + (float)(this.width / 2) + this.velocity.X), (int)(this.position.Y + (float)(this.height / 2) + this.velocity.Y), 112, 0, 0f, 0f, 0f, 0f, 255);
						}
						this.localAI[0] = 0f;
					}
				}
				if ((Main.dayTime && this.type != 173 && this.type != 6 && this.type != 23 && this.type != 42 && this.type != 94 && this.type != 176 && this.type != 205 && this.type != 210 && this.type != 211 && this.type != 252 && (this.type < 231 || this.type > 235)) || Main.player[this.target].dead)
				{
					this.velocity.Y = this.velocity.Y - num289 * 2f;
					if (this.timeLeft > 10)
					{
						this.timeLeft = 10;
					}
				}
				if (((this.velocity.X > 0f && this.oldVelocity.X < 0f) || (this.velocity.X < 0f && this.oldVelocity.X > 0f) || (this.velocity.Y > 0f && this.oldVelocity.Y < 0f) || (this.velocity.Y < 0f && this.oldVelocity.Y > 0f)) && !this.justHit)
				{
					this.netUpdate = true;
					return;
				}
			}
			else if (this.aiStyle == 6)
			{
				if (this.type == 117 && this.localAI[1] == 0f)
				{
					this.localAI[1] = 1f;
					Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 13);
					int num311 = 1;
					if (this.velocity.X < 0f)
					{
						num311 = -1;
					}
					for (int num312 = 0; num312 < 20; num312++)
					{
						Dust.NewDust(new Vector2(this.position.X - 20f, this.position.Y - 20f), this.width + 40, this.height + 40, 5, (float)(num311 * 8), -1f, 0, default(Color), 1f);
					}
				}
				if (this.type == 454 && this.localAI[3] == 0f)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 119);
					this.localAI[3] = 1f;
				}
				if (this.type >= 454 && this.type <= 459)
				{
					this.dontTakeDamage = (this.alpha > 0);
					if (this.type == 454 || (this.type != 454 && Main.npc[(int)this.ai[1]].alpha < 85))
					{
						if (this.dontTakeDamage)
						{
							for (int num313 = 0; num313 < 2; num313++)
							{
								int num314 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 228, 0f, 0f, 100, default(Color), 2f);
								Main.dust[num314].noGravity = true;
								Main.dust[num314].noLight = true;
							}
						}
						this.alpha -= 42;
						if (this.alpha < 0)
						{
							this.alpha = 0;
						}
					}
				}
				else if (this.type == 402 && this.ai[1] == 0f)
				{
					this.ai[1] = (float)Main.rand.Next(-2, 0);
					this.netUpdate = true;
				}
				if (Main.netMode != 1 && Main.expertMode)
				{
					if (this.type == 14 && (double)(this.position.Y / 16f) < Main.worldSurface)
					{
						if (Main.rand.Next(900) == 0)
						{
							this.TargetClosest(true);
							if (Collision.CanHitLine(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
							{
								NPC.NewNPC((int)(this.position.X + (float)(this.width / 2) + this.velocity.X), (int)(this.position.Y + (float)(this.height / 2) + this.velocity.Y), 112, 0, 0f, 1f, 0f, 0f, 255);
							}
						}
					}
					else if (this.type == 13)
					{
						int num315 = 90;
						num315 += (int)((float)this.life / (float)this.lifeMax * 60f * 5f);
						if (Main.rand.Next(num315) == 0)
						{
							this.TargetClosest(true);
							if (Collision.CanHitLine(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
							{
								NPC.NewNPC((int)(this.position.X + (float)(this.width / 2) + this.velocity.X), (int)(this.position.Y + (float)(this.height / 2) + this.velocity.Y), 112, 0, 0f, 1f, 0f, 0f, 255);
							}
						}
					}
				}
				bool flag34 = false;
				float num316 = 0.2f;
				int num75 = this.type;
				if (num75 <= 95)
				{
					if (num75 != 10 && num75 != 39 && num75 != 95)
					{
						goto IL_14788;
					}
				}
				else if (num75 != 117 && num75 != 510)
				{
					if (num75 == 513)
					{
						flag34 = !Main.player[this.target].ZoneUndergroundDesert;
						num316 = 0.1f;
						goto IL_14788;
					}
					goto IL_14788;
				}
				flag34 = true;
				IL_14788:
				if (this.type >= 13 && this.type <= 15)
				{
					this.realLife = -1;
				}
				else if (this.ai[3] > 0f)
				{
					this.realLife = (int)this.ai[3];
				}
				if (this.target < 0 || this.target == 255 || Main.player[this.target].dead || (flag34 && (double)Main.player[this.target].position.Y < Main.worldSurface * 16.0))
				{
					this.TargetClosest(true);
				}
				if (Main.player[this.target].dead || (flag34 && (double)Main.player[this.target].position.Y < Main.worldSurface * 16.0))
				{
					if (this.timeLeft > 300)
					{
						this.timeLeft = 300;
					}
					if (flag34)
					{
						this.velocity.Y = this.velocity.Y + num316;
					}
				}
				if (Main.netMode != 1)
				{
					if (this.type == 87 && this.ai[0] == 0f)
					{
						this.ai[3] = (float)this.whoAmI;
						this.realLife = this.whoAmI;
						int num317 = this.whoAmI;
						for (int num318 = 0; num318 < 14; num318++)
						{
							int num319 = 89;
							if (num318 == 1 || num318 == 8)
							{
								num319 = 88;
							}
							else if (num318 == 11)
							{
								num319 = 90;
							}
							else if (num318 == 12)
							{
								num319 = 91;
							}
							else if (num318 == 13)
							{
								num319 = 92;
							}
							int num320 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), num319, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num320].ai[3] = (float)this.whoAmI;
							Main.npc[num320].realLife = this.whoAmI;
							Main.npc[num320].ai[1] = (float)num317;
							Main.npc[num317].ai[0] = (float)num320;
							NetMessage.SendData(23, -1, -1, "", num320, 0f, 0f, 0f, 0, 0, 0);
							num317 = num320;
						}
					}
					if (this.type == 454 && this.ai[0] == 0f)
					{
						this.ai[3] = (float)this.whoAmI;
						this.realLife = this.whoAmI;
						int num321 = this.whoAmI;
						for (int num322 = 0; num322 < 30; num322++)
						{
							int num323 = 456;
							if ((num322 - 2) % 4 == 0 && num322 < 26)
							{
								num323 = 455;
							}
							else if (num322 == 27)
							{
								num323 = 457;
							}
							else if (num322 == 28)
							{
								num323 = 458;
							}
							else if (num322 == 29)
							{
								num323 = 459;
							}
							int num324 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), num323, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num324].ai[3] = (float)this.whoAmI;
							Main.npc[num324].realLife = this.whoAmI;
							Main.npc[num324].ai[1] = (float)num321;
							Main.npc[num321].ai[0] = (float)num324;
							NetMessage.SendData(23, -1, -1, "", num324, 0f, 0f, 0f, 0, 0, 0);
							num321 = num324;
						}
					}
					if (this.type == 513 && this.ai[0] == 0f)
					{
						this.ai[3] = (float)this.whoAmI;
						this.realLife = this.whoAmI;
						int num325 = this.whoAmI;
						int num326 = Main.rand.Next(6, 10);
						for (int num327 = 0; num327 < num326; num327++)
						{
							int num328 = 514;
							if (num327 == num326 - 1)
							{
								num328 = 515;
							}
							int num329 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), num328, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num329].ai[3] = (float)this.whoAmI;
							Main.npc[num329].realLife = this.whoAmI;
							Main.npc[num329].ai[1] = (float)num325;
							Main.npc[num325].ai[0] = (float)num329;
							NetMessage.SendData(23, -1, -1, "", num329, 0f, 0f, 0f, 0, 0, 0);
							num325 = num329;
						}
					}
					if (this.type == 510 && this.ai[0] == 0f)
					{
						this.ai[3] = (float)this.whoAmI;
						this.realLife = this.whoAmI;
						int num330 = this.whoAmI;
						int num331 = Main.rand.Next(12, 21);
						for (int num332 = 0; num332 < num331; num332++)
						{
							int num333 = 511;
							if (num332 == num331 - 1)
							{
								num333 = 512;
							}
							int num334 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), num333, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num334].ai[3] = (float)this.whoAmI;
							Main.npc[num334].realLife = this.whoAmI;
							Main.npc[num334].ai[1] = (float)num330;
							Main.npc[num330].ai[0] = (float)num334;
							NetMessage.SendData(23, -1, -1, "", num334, 0f, 0f, 0f, 0, 0, 0);
							num330 = num334;
						}
					}
					else if ((this.type == 7 || this.type == 8 || this.type == 10 || this.type == 11 || this.type == 13 || this.type == 14 || this.type == 39 || this.type == 40 || this.type == 95 || this.type == 96 || this.type == 98 || this.type == 99 || this.type == 117 || this.type == 118) && this.ai[0] == 0f)
					{
						if (this.type == 7 || this.type == 10 || this.type == 13 || this.type == 39 || this.type == 95 || this.type == 98 || this.type == 117)
						{
							if (this.type < 13 || this.type > 15)
							{
								this.ai[3] = (float)this.whoAmI;
								this.realLife = this.whoAmI;
							}
							this.ai[2] = (float)Main.rand.Next(8, 13);
							if (this.type == 10)
							{
								this.ai[2] = (float)Main.rand.Next(4, 7);
							}
							if (this.type == 13)
							{
								this.ai[2] = (float)Main.rand.Next(45, 56);
								if (Main.expertMode)
								{
									this.ai[2] = (float)((int)(this.ai[2] * 1.1f));
								}
							}
							if (this.type == 39)
							{
								this.ai[2] = (float)Main.rand.Next(12, 19);
							}
							if (this.type == 95)
							{
								this.ai[2] = (float)Main.rand.Next(6, 12);
							}
							if (this.type == 98)
							{
								this.ai[2] = (float)Main.rand.Next(20, 26);
							}
							if (this.type == 117)
							{
								this.ai[2] = (float)Main.rand.Next(3, 6);
							}
							this.ai[0] = (float)NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), this.type + 1, this.whoAmI, 0f, 0f, 0f, 0f, 255);
						}
						else if ((this.type == 8 || this.type == 11 || this.type == 14 || this.type == 40 || this.type == 96 || this.type == 99 || this.type == 118) && this.ai[2] > 0f)
						{
							this.ai[0] = (float)NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), this.type, this.whoAmI, 0f, 0f, 0f, 0f, 255);
						}
						else
						{
							this.ai[0] = (float)NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), this.type + 1, this.whoAmI, 0f, 0f, 0f, 0f, 255);
						}
						if (this.type < 13 || this.type > 15)
						{
							Main.npc[(int)this.ai[0]].ai[3] = this.ai[3];
							Main.npc[(int)this.ai[0]].realLife = this.realLife;
						}
						Main.npc[(int)this.ai[0]].ai[1] = (float)this.whoAmI;
						Main.npc[(int)this.ai[0]].ai[2] = this.ai[2] - 1f;
						this.netUpdate = true;
					}
					if (this.type == 412 && this.ai[0] == 0f)
					{
						this.ai[3] = (float)this.whoAmI;
						this.realLife = this.whoAmI;
						int num335 = this.whoAmI;
						int num336 = 30;
						for (int num337 = 0; num337 < num336; num337++)
						{
							int num338 = 413;
							if (num337 == num336 - 1)
							{
								num338 = 414;
							}
							int num339 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), num338, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num339].ai[3] = (float)this.whoAmI;
							Main.npc[num339].realLife = this.whoAmI;
							Main.npc[num339].ai[1] = (float)num335;
							Main.npc[num335].ai[0] = (float)num339;
							NetMessage.SendData(23, -1, -1, "", num339, 0f, 0f, 0f, 0, 0, 0);
							num335 = num339;
						}
					}
					num75 = this.type;
					if (num75 <= 100)
					{
						switch (num75)
						{
							case 8:
							case 9:
							case 11:
							case 12:
								break;
							case 10:
								goto IL_155CD;
							default:
								switch (num75)
								{
									case 40:
									case 41:
										break;
									default:
										switch (num75)
										{
											case 88:
											case 89:
											case 90:
											case 91:
											case 92:
											case 96:
											case 97:
											case 99:
											case 100:
												break;
											case 93:
											case 94:
											case 95:
											case 98:
												goto IL_155CD;
											default:
												goto IL_155CD;
										}
										break;
								}
								break;
						}
					}
					else if (num75 <= 414)
					{
						switch (num75)
						{
							case 118:
							case 119:
								break;
							default:
								switch (num75)
								{
									case 413:
									case 414:
										break;
									default:
										goto IL_155CD;
								}
								break;
						}
					}
					else
					{
						switch (num75)
						{
							case 455:
							case 456:
							case 457:
							case 458:
							case 459:
								break;
							default:
								switch (num75)
								{
									case 511:
									case 512:
									case 514:
									case 515:
										break;
									case 513:
										goto IL_155CD;
									default:
										goto IL_155CD;
								}
								break;
						}
					}
					if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != this.aiStyle)
					{
						this.life = 0;
						this.HitEffect(0, 10.0);
						this.active = false;
						NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0f, 0f, 0, 0, 0);
					}
					IL_155CD:
					num75 = this.type;
					if (num75 <= 99)
					{
						switch (num75)
						{
							case 7:
							case 8:
							case 10:
							case 11:
								break;
							case 9:
								goto IL_15750;
							default:
								switch (num75)
								{
									case 39:
									case 40:
										break;
									default:
										switch (num75)
										{
											case 87:
											case 88:
											case 89:
											case 90:
											case 91:
											case 95:
											case 96:
											case 98:
											case 99:
												break;
											case 92:
											case 93:
											case 94:
											case 97:
												goto IL_15750;
											default:
												goto IL_15750;
										}
										break;
								}
								break;
						}
					}
					else if (num75 <= 413)
					{
						switch (num75)
						{
							case 117:
							case 118:
								break;
							default:
								switch (num75)
								{
									case 412:
									case 413:
										break;
									default:
										goto IL_15750;
								}
								break;
						}
					}
					else
					{
						switch (num75)
						{
							case 454:
							case 455:
							case 456:
							case 457:
							case 458:
								break;
							default:
								switch (num75)
								{
									case 510:
									case 511:
									case 513:
									case 514:
										break;
									case 512:
										goto IL_15750;
									default:
										goto IL_15750;
								}
								break;
						}
					}
					if (!Main.npc[(int)this.ai[0]].active || Main.npc[(int)this.ai[0]].aiStyle != this.aiStyle)
					{
						this.life = 0;
						this.HitEffect(0, 10.0);
						this.active = false;
						NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0f, 0f, 0, 0, 0);
					}
					IL_15750:
					if (this.type == 13 || this.type == 14 || this.type == 15)
					{
						if (!Main.npc[(int)this.ai[1]].active && !Main.npc[(int)this.ai[0]].active)
						{
							this.life = 0;
							this.HitEffect(0, 10.0);
							this.checkDead();
							this.active = false;
							NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0f, 0f, 0, 0, 0);
						}
						if (this.type == 13 && !Main.npc[(int)this.ai[0]].active)
						{
							this.life = 0;
							this.HitEffect(0, 10.0);
							this.checkDead();
							this.active = false;
							NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0f, 0f, 0, 0, 0);
						}
						if (this.type == 15 && !Main.npc[(int)this.ai[1]].active)
						{
							this.life = 0;
							this.HitEffect(0, 10.0);
							this.checkDead();
							this.active = false;
							NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0f, 0f, 0, 0, 0);
						}
						if (this.type == 14 && (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != this.aiStyle))
						{
							this.type = 13;
							int whoAmI = this.whoAmI;
							float num340 = (float)this.life / (float)this.lifeMax;
							float num341 = this.ai[0];
							this.SetDefaultsKeepPlayerInteraction(this.type);
							this.life = (int)((float)this.lifeMax * num340);
							this.ai[0] = num341;
							this.TargetClosest(true);
							this.netUpdate = true;
							this.whoAmI = whoAmI;
						}
						if (this.type == 14 && (!Main.npc[(int)this.ai[0]].active || Main.npc[(int)this.ai[0]].aiStyle != this.aiStyle))
						{
							int whoAmI2 = this.whoAmI;
							float num342 = (float)this.life / (float)this.lifeMax;
							float num343 = this.ai[1];
							this.SetDefaultsKeepPlayerInteraction(this.type);
							this.life = (int)((float)this.lifeMax * num342);
							this.ai[1] = num343;
							this.TargetClosest(true);
							this.netUpdate = true;
							this.whoAmI = whoAmI2;
						}
					}
					if (!this.active && Main.netMode == 2)
					{
						NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0f, 0f, 0, 0, 0);
					}
				}
				int num344 = (int)(this.position.X / 16f) - 1;
				int num345 = (int)((this.position.X + (float)this.width) / 16f) + 2;
				int num346 = (int)(this.position.Y / 16f) - 1;
				int num347 = (int)((this.position.Y + (float)this.height) / 16f) + 2;
				if (num344 < 0)
				{
					num344 = 0;
				}
				if (num345 > Main.maxTilesX)
				{
					num345 = Main.maxTilesX;
				}
				if (num346 < 0)
				{
					num346 = 0;
				}
				if (num347 > Main.maxTilesY)
				{
					num347 = Main.maxTilesY;
				}
				bool flag35 = false;
				if (this.type >= 87 && this.type <= 92)
				{
					flag35 = true;
				}
				if (this.type >= 454 && this.type <= 459)
				{
					flag35 = true;
				}
				if (this.type == 402 && this.ai[1] == -1f)
				{
					flag35 = true;
				}
				if (this.type >= 412 && this.type <= 414)
				{
					flag35 = true;
				}
				if (!flag35)
				{
					for (int num348 = num344; num348 < num345; num348++)
					{
						for (int num349 = num346; num349 < num347; num349++)
						{
							if (Main.tile[num348, num349] != null && ((Main.tile[num348, num349].nactive() && (Main.tileSolid[(int)Main.tile[num348, num349].type] || (Main.tileSolidTop[(int)Main.tile[num348, num349].type] && Main.tile[num348, num349].frameY == 0))) || Main.tile[num348, num349].liquid > 64))
							{
								Vector2 vector39;
								vector39.X = (float)(num348 * 16);
								vector39.Y = (float)(num349 * 16);
								if (this.position.X + (float)this.width > vector39.X && this.position.X < vector39.X + 16f && this.position.Y + (float)this.height > vector39.Y && this.position.Y < vector39.Y + 16f)
								{
									flag35 = true;
									if (Main.rand.Next(100) == 0 && this.type != 117 && Main.tile[num348, num349].nactive())
									{
										WorldGen.KillTile(num348, num349, true, true, false);
									}
								}
							}
						}
					}
				}
				if (!flag35 && (this.type == 7 || this.type == 10 || this.type == 13 || this.type == 39 || this.type == 95 || this.type == 98 || this.type == 117 || this.type == 375 || this.type == 454 || this.type == 510 || this.type == 513))
				{
					Rectangle rectangle = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
					int num350 = 1000;
					bool flag36 = true;
					for (int num351 = 0; num351 < 255; num351++)
					{
						if (Main.player[num351].active)
						{
							Rectangle rectangle2 = new Rectangle((int)Main.player[num351].position.X - num350, (int)Main.player[num351].position.Y - num350, num350 * 2, num350 * 2);
							if (rectangle.Intersects(rectangle2))
							{
								flag36 = false;
								break;
							}
						}
					}
					if (flag36)
					{
						flag35 = true;
					}
				}
				if ((this.type >= 87 && this.type <= 92) || (this.type >= 454 && this.type <= 459))
				{
					if (this.velocity.X < 0f)
					{
						this.spriteDirection = 1;
					}
					else if (this.velocity.X > 0f)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.type == 414)
				{
					if (this.justHit)
					{
						this.localAI[3] = 3f;
					}
					if (this.localAI[2] > 0f)
					{
						this.localAI[2] -= 16f;
						if (this.localAI[2] == 0f)
						{
							this.localAI[2] = -128f;
						}
					}
					else if (this.localAI[2] < 0f)
					{
						this.localAI[2] += 16f;
					}
					else if (this.localAI[3] > 0f)
					{
						this.localAI[2] = 128f;
						this.localAI[3] -= 1f;
					}
				}
				if (this.type == 412)
				{
					Vector2 value10 = base.Center + (this.rotation - 1.57079637f).ToRotationVector2() * 8f;
					Vector2 value11 = this.rotation.ToRotationVector2() * 16f;
					Dust dust10 = Main.dust[Dust.NewDust(value10 + value11, 0, 0, 6, this.velocity.X, this.velocity.Y, 100, Color.Transparent, 1f + Main.rand.NextFloat() * 3f)];
					dust10.noGravity = true;
					dust10.noLight = true;
					dust10.position -= new Vector2(4f);
					dust10.fadeIn = 1f;
					dust10.velocity = Vector2.Zero;
					dust10 = Main.dust[Dust.NewDust(value10 - value11, 0, 0, 6, this.velocity.X, this.velocity.Y, 100, Color.Transparent, 1f + Main.rand.NextFloat() * 3f)];
					dust10.noGravity = true;
					dust10.noLight = true;
					dust10.position -= new Vector2(4f);
					dust10.fadeIn = 1f;
					dust10.velocity = Vector2.Zero;
				}
				float num352 = 8f;
				float num353 = 0.07f;
				if (this.type == 95)
				{
					num352 = 5.5f;
					num353 = 0.045f;
				}
				if (this.type == 10)
				{
					num352 = 6f;
					num353 = 0.05f;
				}
				if (this.type == 513)
				{
					num352 = 7f;
					num353 = 0.1f;
				}
				if (this.type == 13)
				{
					num352 = 10f;
					num353 = 0.07f;
					if (Main.expertMode)
					{
						num352 = 12f;
						num353 = 0.15f;
					}
				}
				if (this.type == 510)
				{
					if (!Main.player[this.target].dead && Main.player[this.target].ZoneSandstorm)
					{
						num352 = 16f;
						num353 = 0.35f;
					}
					else
					{
						num352 = 10f;
						num353 = 0.25f;
					}
				}
				if (this.type == 87)
				{
					num352 = 11f;
					num353 = 0.25f;
				}
				if (this.type == 375)
				{
					num352 = 6f;
					num353 = 0.15f;
				}
				if (this.type == 454)
				{
					num352 = 20f;
					num353 = 0.55f;
				}
				if (this.type == 402)
				{
					num352 = 6f;
					num353 = 0.2f;
				}
				if (this.type == 117 && Main.wof >= 0)
				{
					float num354 = (float)Main.npc[Main.wof].life / (float)Main.npc[Main.wof].lifeMax;
					if ((double)num354 < 0.5)
					{
						num352 += 1f;
						num353 += 0.1f;
					}
					if ((double)num354 < 0.25)
					{
						num352 += 1f;
						num353 += 0.1f;
					}
					if ((double)num354 < 0.1)
					{
						num352 += 2f;
						num353 += 0.1f;
					}
				}
				Vector2 vector40 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float num355 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2);
				float num356 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2);
				if (this.type == 412)
				{
					num352 = 10f;
					num353 = 0.3f;
					int num357 = -1;
					int num358 = (int)(Main.player[this.target].Center.X / 16f);
					int num359 = (int)(Main.player[this.target].Center.Y / 16f);
					for (int num360 = num358 - 2; num360 <= num358 + 2; num360++)
					{
						for (int num361 = num359; num361 <= num359 + 15; num361++)
						{
							if (WorldGen.SolidTile2(num360, num361))
							{
								num357 = num361;
								break;
							}
						}
						if (num357 > 0)
						{
							break;
						}
					}
					if (num357 > 0)
					{
						num357 *= 16;
						float num362 = (float)(num357 - 800);
						if (Main.player[this.target].position.Y > num362)
						{
							num356 = num362;
							if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) < 500f)
							{
								if (this.velocity.X > 0f)
								{
									num355 = Main.player[this.target].Center.X + 600f;
								}
								else
								{
									num355 = Main.player[this.target].Center.X - 600f;
								}
							}
						}
					}
					else
					{
						num352 = 14f;
						num353 = 0.5f;
					}
					float num363 = num352 * 1.3f;
					float num364 = num352 * 0.7f;
					float num365 = this.velocity.Length();
					if (num365 > 0f)
					{
						if (num365 > num363)
						{
							this.velocity.Normalize();
							this.velocity *= num363;
						}
						else if (num365 < num364)
						{
							this.velocity.Normalize();
							this.velocity *= num364;
						}
					}
					if (num357 > 0)
					{
						for (int num366 = 0; num366 < 200; num366++)
						{
							if (Main.npc[num366].active && Main.npc[num366].type == this.type && num366 != this.whoAmI)
							{
								Vector2 vector41 = Main.npc[num366].Center - base.Center;
								if (vector41.Length() < 400f)
								{
									vector41.Normalize();
									vector41 *= 1000f;
									num355 -= vector41.X;
									num356 -= vector41.Y;
								}
							}
						}
					}
					else
					{
						for (int num367 = 0; num367 < 200; num367++)
						{
							if (Main.npc[num367].active && Main.npc[num367].type == this.type && num367 != this.whoAmI)
							{
								Vector2 vector42 = Main.npc[num367].Center - base.Center;
								if (vector42.Length() < 60f)
								{
									vector42.Normalize();
									vector42 *= 200f;
									num355 -= vector42.X;
									num356 -= vector42.Y;
								}
							}
						}
					}
				}
				num355 = (float)((int)(num355 / 16f) * 16);
				num356 = (float)((int)(num356 / 16f) * 16);
				vector40.X = (float)((int)(vector40.X / 16f) * 16);
				vector40.Y = (float)((int)(vector40.Y / 16f) * 16);
				num355 -= vector40.X;
				num356 -= vector40.Y;
				if (this.type == 375)
				{
					num355 *= -1f;
					num356 *= -1f;
				}
				float num368 = (float)Math.Sqrt((double)(num355 * num355 + num356 * num356));
				if (this.ai[1] > 0f && this.ai[1] < (float)Main.npc.Length)
				{
					try
					{
						vector40 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						num355 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - vector40.X;
						num356 = Main.npc[(int)this.ai[1]].position.Y + (float)(Main.npc[(int)this.ai[1]].height / 2) - vector40.Y;
					}
					catch
					{
					}
					this.rotation = (float)Math.Atan2((double)num356, (double)num355) + 1.57f;
					num368 = (float)Math.Sqrt((double)(num355 * num355 + num356 * num356));
					int num369 = this.width;
					if (this.type >= 87 && this.type <= 92)
					{
						num369 = 42;
					}
					if (this.type >= 454 && this.type <= 459)
					{
						num369 = 36;
					}
					if (this.type >= 13 && this.type <= 15)
					{
						num369 = (int)((float)num369 * this.scale);
					}
					if (this.type >= 412 && this.type <= 414)
					{
						num369 += 6;
					}
					num368 = (num368 - (float)num369) / num368;
					num355 *= num368;
					num356 *= num368;
					this.velocity = Vector2.Zero;
					this.position.X = this.position.X + num355;
					this.position.Y = this.position.Y + num356;
					if (this.type >= 87 && this.type <= 92)
					{
						if (num355 < 0f)
						{
							this.spriteDirection = 1;
						}
						else if (num355 > 0f)
						{
							this.spriteDirection = -1;
						}
					}
					if (this.type >= 454 && this.type <= 459)
					{
						if (num355 < 0f)
						{
							this.spriteDirection = 1;
							return;
						}
						if (num355 > 0f)
						{
							this.spriteDirection = -1;
							return;
						}
					}
				}
				else
				{
					if (!flag35)
					{
						this.TargetClosest(true);
						this.velocity.Y = this.velocity.Y + 0.11f;
						if (this.velocity.Y > num352)
						{
							this.velocity.Y = num352;
						}
						if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)num352 * 0.4)
						{
							if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X - num353 * 1.1f;
							}
							else
							{
								this.velocity.X = this.velocity.X + num353 * 1.1f;
							}
						}
						else if (this.velocity.Y == num352)
						{
							if (this.velocity.X < num355)
							{
								this.velocity.X = this.velocity.X + num353;
							}
							else if (this.velocity.X > num355)
							{
								this.velocity.X = this.velocity.X - num353;
							}
						}
						else if (this.velocity.Y > 4f)
						{
							if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X + num353 * 0.9f;
							}
							else
							{
								this.velocity.X = this.velocity.X - num353 * 0.9f;
							}
						}
					}
					else
					{
						if (this.type != 87 && this.type != 117 && this.type != 454 && this.type != 412 && this.soundDelay == 0)
						{
							float num370 = num368 / 40f;
							if (num370 < 10f)
							{
								num370 = 10f;
							}
							if (num370 > 20f)
							{
								num370 = 20f;
							}
							this.soundDelay = (int)num370;
							Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 1);
						}
						num368 = (float)Math.Sqrt((double)(num355 * num355 + num356 * num356));
						float num371 = Math.Abs(num355);
						float num372 = Math.Abs(num356);
						float num373 = num352 / num368;
						num355 *= num373;
						num356 *= num373;
						bool flag37 = false;
						if ((this.type == 7 || this.type == 13) && ((!Main.player[this.target].ZoneCorrupt && !Main.player[this.target].ZoneCrimson) || Main.player[this.target].dead))
						{
							flag37 = true;
						}
						if ((this.type == 513 && (double)Main.player[this.target].position.Y < Main.worldSurface * 16.0 && !Main.player[this.target].ZoneSandstorm && !Main.player[this.target].ZoneUndergroundDesert) || Main.player[this.target].dead)
						{
							flag37 = true;
						}
						if ((this.type == 510 && (double)Main.player[this.target].position.Y < Main.worldSurface * 16.0 && !Main.player[this.target].ZoneSandstorm && !Main.player[this.target].ZoneUndergroundDesert) || Main.player[this.target].dead)
						{
							flag37 = true;
						}
						if (flag37)
						{
							bool flag38 = true;
							for (int num374 = 0; num374 < 255; num374++)
							{
								if (Main.player[num374].active && !Main.player[num374].dead && Main.player[num374].ZoneCorrupt)
								{
									flag38 = false;
								}
							}
							if (flag38)
							{
								if (Main.netMode != 1 && (double)(this.position.Y / 16f) > (Main.rockLayer + (double)Main.maxTilesY) / 2.0)
								{
									this.active = false;
									int num375 = (int)this.ai[0];
									while (num375 > 0 && num375 < 200 && Main.npc[num375].active && Main.npc[num375].aiStyle == this.aiStyle)
									{
										int num376 = (int)Main.npc[num375].ai[0];
										Main.npc[num375].active = false;
										this.life = 0;
										if (Main.netMode == 2)
										{
											NetMessage.SendData(23, -1, -1, "", num375, 0f, 0f, 0f, 0, 0, 0);
										}
										num375 = num376;
									}
									if (Main.netMode == 2)
									{
										NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
									}
								}
								num355 = 0f;
								num356 = num352;
							}
						}
						bool flag39 = false;
						if (this.type == 87)
						{
							if (((this.velocity.X > 0f && num355 < 0f) || (this.velocity.X < 0f && num355 > 0f) || (this.velocity.Y > 0f && num356 < 0f) || (this.velocity.Y < 0f && num356 > 0f)) && Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) > num353 / 2f && num368 < 300f)
							{
								flag39 = true;
								if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) < num352)
								{
									this.velocity *= 1.1f;
								}
							}
							if (this.position.Y > Main.player[this.target].position.Y || (double)(Main.player[this.target].position.Y / 16f) > Main.worldSurface || Main.player[this.target].dead)
							{
								flag39 = true;
								if (Math.Abs(this.velocity.X) < num352 / 2f)
								{
									if (this.velocity.X == 0f)
									{
										this.velocity.X = this.velocity.X - (float)this.direction;
									}
									this.velocity.X = this.velocity.X * 1.1f;
								}
								else if (this.velocity.Y > -num352)
								{
									this.velocity.Y = this.velocity.Y - num353;
								}
							}
						}
						if (this.type == 454)
						{
							if (((this.velocity.X > 0f && num355 < 0f) || (this.velocity.X < 0f && num355 > 0f) || (this.velocity.Y > 0f && num356 < 0f) || (this.velocity.Y < 0f && num356 > 0f)) && Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) > num353 / 2f && num368 < 300f)
							{
								flag39 = true;
								if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) < num352)
								{
									this.velocity *= 1.1f;
								}
							}
							if (this.position.Y > Main.player[this.target].position.Y || Main.player[this.target].dead)
							{
								flag39 = true;
								if (Math.Abs(this.velocity.X) < num352 / 2f)
								{
									if (this.velocity.X == 0f)
									{
										this.velocity.X = this.velocity.X - (float)this.direction;
									}
									this.velocity.X = this.velocity.X * 1.1f;
								}
								else if (this.velocity.Y > -num352)
								{
									this.velocity.Y = this.velocity.Y - num353;
								}
							}
						}
						if (!flag39)
						{
							if ((this.velocity.X > 0f && num355 > 0f) || (this.velocity.X < 0f && num355 < 0f) || (this.velocity.Y > 0f && num356 > 0f) || (this.velocity.Y < 0f && num356 < 0f))
							{
								if (this.velocity.X < num355)
								{
									this.velocity.X = this.velocity.X + num353;
								}
								else if (this.velocity.X > num355)
								{
									this.velocity.X = this.velocity.X - num353;
								}
								if (this.velocity.Y < num356)
								{
									this.velocity.Y = this.velocity.Y + num353;
								}
								else if (this.velocity.Y > num356)
								{
									this.velocity.Y = this.velocity.Y - num353;
								}
								if ((double)Math.Abs(num356) < (double)num352 * 0.2 && ((this.velocity.X > 0f && num355 < 0f) || (this.velocity.X < 0f && num355 > 0f)))
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y + num353 * 2f;
									}
									else
									{
										this.velocity.Y = this.velocity.Y - num353 * 2f;
									}
								}
								if ((double)Math.Abs(num355) < (double)num352 * 0.2 && ((this.velocity.Y > 0f && num356 < 0f) || (this.velocity.Y < 0f && num356 > 0f)))
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X + num353 * 2f;
									}
									else
									{
										this.velocity.X = this.velocity.X - num353 * 2f;
									}
								}
							}
							else if (num371 > num372)
							{
								if (this.velocity.X < num355)
								{
									this.velocity.X = this.velocity.X + num353 * 1.1f;
								}
								else if (this.velocity.X > num355)
								{
									this.velocity.X = this.velocity.X - num353 * 1.1f;
								}
								if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)num352 * 0.5)
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y + num353;
									}
									else
									{
										this.velocity.Y = this.velocity.Y - num353;
									}
								}
							}
							else
							{
								if (this.velocity.Y < num356)
								{
									this.velocity.Y = this.velocity.Y + num353 * 1.1f;
								}
								else if (this.velocity.Y > num356)
								{
									this.velocity.Y = this.velocity.Y - num353 * 1.1f;
								}
								if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)num352 * 0.5)
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X + num353;
									}
									else
									{
										this.velocity.X = this.velocity.X - num353;
									}
								}
							}
						}
					}
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
					if (this.type == 7 || this.type == 10 || this.type == 13 || this.type == 39 || this.type == 95 || this.type == 98 || this.type == 117 || this.type == 510 || this.type == 513)
					{
						if (flag35)
						{
							if (this.localAI[0] != 1f)
							{
								this.netUpdate = true;
							}
							this.localAI[0] = 1f;
						}
						else
						{
							if (this.localAI[0] != 0f)
							{
								this.netUpdate = true;
							}
							this.localAI[0] = 0f;
						}
						if (((this.velocity.X > 0f && this.oldVelocity.X < 0f) || (this.velocity.X < 0f && this.oldVelocity.X > 0f) || (this.velocity.Y > 0f && this.oldVelocity.Y < 0f) || (this.velocity.Y < 0f && this.oldVelocity.Y > 0f)) && !this.justHit)
						{
							this.netUpdate = true;
						}
					}
					if (this.type == 454)
					{
						float num377 = Vector2.Distance(Main.player[this.target].Center, base.Center);
						int num378 = 0;
						if (Vector2.Normalize(Main.player[this.target].Center - base.Center).ToRotation().AngleTowards(this.velocity.ToRotation(), 1.57079637f) == this.velocity.ToRotation() && num377 < 350f)
						{
							num378 = 4;
						}
						if ((double)num378 > this.frameCounter)
						{
							this.frameCounter += 1.0;
						}
						if ((double)num378 < this.frameCounter)
						{
							this.frameCounter -= 1.0;
						}
						if (this.frameCounter < 0.0)
						{
							this.frameCounter = 0.0;
						}
						if (this.frameCounter > 4.0)
						{
							this.frameCounter = 4.0;
							return;
						}
					}
				}
			}
			else if (this.aiStyle == 7)
			{
				bool flag40 = Main.raining;
				//patch file: flag40
				if (!Main.dayTime)
				{
					flag40 = true;
				}
				if (Main.eclipse)
				{
					flag40 = true;
				}
				if (Main.slimeRain)
				{
					flag40 = true;
				}
				float num379 = 1f;
				if (Main.expertMode)
				{
					this.defense = (this.dryadWard ? (this.defDefense + 10) : this.defDefense);
				}
				else
				{
					this.defense = (this.dryadWard ? (this.defDefense + 6) : this.defDefense);
				}
				if (this.townNPC || this.type == 453)
				{
					if (NPC.downedBoss1)
					{
						num379 += 0.1f;
						this.defense += 3;
					}
					if (NPC.downedBoss2)
					{
						num379 += 0.1f;
						this.defense += 3;
					}
					if (NPC.downedBoss3)
					{
						num379 += 0.1f;
						this.defense += 3;
					}
					if (NPC.downedQueenBee)
					{
						num379 += 0.1f;
						this.defense += 3;
					}
					if (Main.hardMode)
					{
						num379 += 0.4f;
						this.defense += 12;
					}
					if (NPC.downedMechBoss1)
					{
						num379 += 0.15f;
						this.defense += 6;
					}
					if (NPC.downedMechBoss2)
					{
						num379 += 0.15f;
						this.defense += 6;
					}
					if (NPC.downedMechBoss3)
					{
						num379 += 0.15f;
						this.defense += 6;
					}
					if (NPC.downedPlantBoss)
					{
						num379 += 0.15f;
						this.defense += 8;
					}
					if (NPC.downedGolemBoss)
					{
						num379 += 0.15f;
						this.defense += 8;
					}
					if (NPC.downedAncientCultist)
					{
						num379 += 0.15f;
						this.defense += 8;
					}
					NPCLoader.BuffTownNPC(ref num379, ref this.defense);
				}
				if (this.type == 142 && Main.netMode != 1 && !Main.xMas)
				{
					this.StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
					if (Main.netMode == 2)
					{
						NetMessage.SendData(28, -1, -1, "", this.whoAmI, 9999f, 0f, 0f, 0, 0, 0);
					}
				}
				if ((this.type == 148 || this.type == 149) && this.localAI[0] == 0f)
				{
					this.localAI[0] = (float)Main.rand.Next(1, 5);
				}
				if (this.type == 124)
				{
					bool flag41 = false;
					for (int num380 = 0; num380 < 1000; num380++)
					{
						if (Main.projectile[num380].active && Main.projectile[num380].type == 582 && Main.projectile[num380].ai[1] == (float)this.whoAmI)
						{
							flag41 = true;
							break;
						}
					}
					this.localAI[0] = (float)flag41.ToInt();
				}
				if ((this.type == 362 || this.type == 364) && Main.netMode != 1 && (this.velocity.Y > 4f || this.velocity.Y < -4f || this.wet))
				{
					int direction = this.direction;
					this.Transform(this.type + 1);
					this.TargetClosest(true);
					this.direction = direction;
					this.netUpdate = true;
					return;
				}
				int num75 = this.type;
				if (num75 <= 124)
				{
					switch (num75)
					{
						case 107:
							NPC.savedGoblin = true;
							break;
						case 108:
							NPC.savedWizard = true;
							break;
						default:
							if (num75 == 124)
							{
								NPC.savedMech = true;
							}
							break;
					}
				}
				else if (num75 != 353)
				{
					if (num75 != 369)
					{
						if (num75 == 441)
						{
							NPC.savedTaxCollector = true;
						}
					}
					else
					{
						NPC.savedAngler = true;
					}
				}
				else
				{
					NPC.savedStylist = true;
				}
				if (this.type >= 0 && NPCID.Sets.TownCritter[this.type] && this.target == 255)
				{
					this.TargetClosest(true);
					if (this.position.X < Main.player[this.target].position.X)
					{
						this.direction = 1;
						this.spriteDirection = this.direction;
					}
					if (this.position.X > Main.player[this.target].position.X)
					{
						this.direction = -1;
						this.spriteDirection = this.direction;
					}
					if (this.homeTileX == -1)
					{
						this.homeTileX = (int)((this.position.X + (float)(this.width / 2)) / 16f);
					}
				}
				else if (this.homeTileX == -1 && this.homeTileY == -1 && this.velocity.Y == 0f)
				{
					this.homeTileX = (int)base.Center.X / 16;
					this.homeTileY = (int)(this.position.Y + (float)this.height + 4f) / 16;
				}
				bool flag42 = false;
				int num381 = this.homeTileY;
				if (this.type == 441)
				{
					NPC.taxCollector = true;
				}
				this.directionY = -1;
				if (this.direction == 0)
				{
					this.direction = 1;
				}
				for (int num382 = 0; num382 < 255; num382++)
				{
					if (Main.player[num382].active && Main.player[num382].talkNPC == this.whoAmI)
					{
						flag42 = true;
						if (this.ai[0] != 0f)
						{
							this.netUpdate = true;
						}
						this.ai[0] = 0f;
						this.ai[1] = 300f;
						this.localAI[3] = 100f;
						if (Main.player[num382].position.X + (float)(Main.player[num382].width / 2) < this.position.X + (float)(this.width / 2))
						{
							this.direction = -1;
						}
						else
						{
							this.direction = 1;
						}
					}
				}
				if (this.ai[3] == 1f)
				{
					this.life = -1;
					this.HitEffect(0, 10.0);
					this.active = false;
					this.netUpdate = true;
					if (this.type == 37)
					{
						Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
					}
					return;
				}
				if (this.type == 37 && Main.netMode != 1)
				{
					this.homeless = false;
					this.homeTileX = Main.dungeonX;
					this.homeTileY = Main.dungeonY;
					if (NPC.downedBoss3)
					{
						this.ai[3] = 1f;
						this.netUpdate = true;
					}
				}
				if (Main.netMode != 1 && this.homeTileY > 0)
				{
					while (!WorldGen.SolidTile(this.homeTileX, num381) && num381 < Main.maxTilesY - 20)
					{
						num381++;
					}
				}
				if (this.type == 368)
				{
					this.homeless = true;
					if (!Main.dayTime)
					{
						this.homeTileX = (int)(base.Center.X / 16f);
						this.homeTileY = (int)(this.position.Y + (float)this.height + 2f) / 16;
						if (!flag42 && this.ai[0] == 0f)
						{
							this.ai[0] = 1f;
							this.ai[1] = 200f;
						}
						flag40 = false;
					}
				}
				if (this.type == 369 && this.homeless && this.wet)
				{
					if (base.Center.X / 16f < 380f || base.Center.X / 16f > (float)(Main.maxTilesX - 380))
					{
						this.homeTileX = Main.spawnTileX;
						this.homeTileY = Main.spawnTileY;
						this.ai[0] = 1f;
						this.ai[1] = 200f;
					}
					if (this.position.X / 16f < 200f)
					{
						this.direction = 1;
					}
					else if (this.position.X / 16f > (float)(Main.maxTilesX - 200))
					{
						this.direction = -1;
					}
				}
				int num383 = (int)(this.position.X + (float)(this.width / 2)) / 16;
				int num384 = (int)(this.position.Y + (float)this.height + 1f) / 16;
				if (!WorldGen.InWorld(num383, num384, 0) || Main.tile[num383, num384] == null)
				{
					return;
				}
				if (!this.homeless && Main.netMode != 1 && this.townNPC && (flag40 || Main.tileDungeon[(int)Main.tile[num383, num384].type]) && (num383 != this.homeTileX || num384 != num381))
				{
					bool flag43 = true;
					for (int num385 = 0; num385 < 2; num385++)
					{
						Rectangle rectangle3 = new Rectangle((int)(this.position.X + (float)(this.width / 2) - (float)(NPC.sWidth / 2) - (float)NPC.safeRangeX), (int)(this.position.Y + (float)(this.height / 2) - (float)(NPC.sHeight / 2) - (float)NPC.safeRangeY), NPC.sWidth + NPC.safeRangeX * 2, NPC.sHeight + NPC.safeRangeY * 2);
						if (num385 == 1)
						{
							rectangle3 = new Rectangle(this.homeTileX * 16 + 8 - NPC.sWidth / 2 - NPC.safeRangeX, num381 * 16 + 8 - NPC.sHeight / 2 - NPC.safeRangeY, NPC.sWidth + NPC.safeRangeX * 2, NPC.sHeight + NPC.safeRangeY * 2);
						}
						for (int num386 = 0; num386 < 255; num386++)
						{
							if (Main.player[num386].active)
							{
								Rectangle rectangle4 = new Rectangle((int)Main.player[num386].position.X, (int)Main.player[num386].position.Y, Main.player[num386].width, Main.player[num386].height);
								if (rectangle4.Intersects(rectangle3))
								{
									flag43 = false;
									break;
								}
							}
							if (!flag43)
							{
								break;
							}
						}
					}
					if (flag43)
					{
						if (this.type == 37 || !Collision.SolidTiles(this.homeTileX - 1, this.homeTileX + 1, num381 - 3, num381 - 1))
						{
							this.velocity.X = 0f;
							this.velocity.Y = 0f;
							this.position.X = (float)(this.homeTileX * 16 + 8 - this.width / 2);
							this.position.Y = (float)(num381 * 16 - this.height) - 0.1f;
							this.netUpdate = true;
						}
						else
						{
							this.homeless = true;
							WorldGen.QuickFindHome(this.whoAmI);
						}
					}
				}
				bool flag44 = this.type == 300 || this.type == 447;
				float num387 = 200f;
				if (NPCID.Sets.DangerDetectRange[this.type] != -1)
				{
					num387 = (float)NPCID.Sets.DangerDetectRange[this.type];
				}
				bool flag45 = false;
				bool flag46 = false;
				float num388 = -1f;
				float num389 = -1f;
				int num390 = 0;
				int num391 = -1;
				int num392 = -1;
				if (Main.netMode != 1 && !flag42)
				{
					for (int num393 = 0; num393 < 200; num393++)
					{
						bool? modCanHit = NPCLoader.CanHitNPC(Main.npc[num393], this);
						if (modCanHit.HasValue && !modCanHit.Value)
						{
							continue;
						}
						bool canHitVal = modCanHit.HasValue && modCanHit.Value;
						if (Main.npc[num393].active && !Main.npc[num393].friendly && Main.npc[num393].damage > 0 && Main.npc[num393].Distance(base.Center) < num387 && (this.type != 453 || !NPCID.Sets.Skeletons.Contains(Main.npc[num393].netID) || canHitVal))
						{
							flag45 = true;
							float num394 = Main.npc[num393].Center.X - base.Center.X;
							if (num394 < 0f && (num388 == -1f || num394 > num388))
							{
								num388 = num394;
								num391 = num393;
							}
							if (num394 > 0f && (num389 == -1f || num394 < num389))
							{
								num389 = num394;
								num392 = num393;
							}
						}
					}
					if (flag45)
					{
						if (num388 == -1f)
						{
							num390 = 1;
						}
						else if (num389 == -1f)
						{
							num390 = -1;
						}
						else
						{
							num390 = (num389 < -num388).ToDirectionInt();
						}
						float num395 = 0f;
						if (num388 != -1f)
						{
							num395 = -num388;
						}
						if (num395 == 0f || (num389 < num395 && num389 > 0f))
						{
							num395 = num389;
						}
						if (this.ai[0] == 8f)
						{
							if (this.direction == -num390)
							{
								this.ai[0] = 1f;
								this.ai[1] = (float)(300 + Main.rand.Next(300));
								this.ai[2] = 0f;
								this.localAI[3] = 0f;
								this.netUpdate = true;
							}
						}
						else if (this.ai[0] != 10f && this.ai[0] != 12f && this.ai[0] != 13f && this.ai[0] != 14f && this.ai[0] != 15f)
						{
							if (NPCID.Sets.PrettySafe[this.type] != -1 && (float)NPCID.Sets.PrettySafe[this.type] < num395)
							{
								flag45 = false;
								flag46 = true;
							}
							else if (this.ai[0] != 1f)
							{
								bool flag47 = this.ai[0] == 3f || this.ai[0] == 4f || this.ai[0] == 16f || this.ai[0] == 17f;
								if (flag47)
								{
									NPC nPC = Main.npc[(int)this.ai[2]];
									if (nPC.active)
									{
										nPC.ai[0] = 1f;
										nPC.ai[1] = (float)(120 + Main.rand.Next(120));
										nPC.ai[2] = 0f;
										nPC.localAI[3] = 0f;
										nPC.direction = -num390;
										nPC.netUpdate = true;
									}
								}
								this.ai[0] = 1f;
								this.ai[1] = (float)(120 + Main.rand.Next(120));
								this.ai[2] = 0f;
								this.localAI[3] = 0f;
								this.direction = -num390;
								this.netUpdate = true;
							}
							else if (this.ai[0] == 1f && this.direction != -num390)
							{
								this.direction = -num390;
								this.netUpdate = true;
							}
						}
					}
				}
				if (this.ai[0] == 0f)
				{
					if (this.localAI[3] > 0f)
					{
						this.localAI[3] -= 1f;
					}
					if (flag40 && !flag42 && !NPCID.Sets.TownCritter[this.type])
					{
						if (Main.netMode != 1)
						{
							if (num383 == this.homeTileX && num384 == num381)
							{
								if (this.velocity.X != 0f)
								{
									this.netUpdate = true;
								}
								if (this.velocity.X > 0.1f)
								{
									this.velocity.X = this.velocity.X - 0.1f;
								}
								else if (this.velocity.X < -0.1f)
								{
									this.velocity.X = this.velocity.X + 0.1f;
								}
								else
								{
									this.velocity.X = 0f;
								}
							}
							else
							{
								if (num383 > this.homeTileX)
								{
									this.direction = -1;
								}
								else
								{
									this.direction = 1;
								}
								this.ai[0] = 1f;
								this.ai[1] = (float)(200 + Main.rand.Next(200));
								this.ai[2] = 0f;
								this.localAI[3] = 0f;
								this.netUpdate = true;
							}
						}
					}
					else
					{
						if (flag44)
						{
							this.velocity.X = this.velocity.X * 0.5f;
						}
						if (this.velocity.X > 0.1f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (this.velocity.X < -0.1f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
						else
						{
							this.velocity.X = 0f;
						}
						if (Main.netMode != 1)
						{
							if (this.ai[1] > 0f)
							{
								this.ai[1] -= 1f;
							}
							if (this.ai[1] <= 0f)
							{
								this.ai[0] = 1f;
								this.ai[1] = (float)(200 + Main.rand.Next(300));
								this.ai[2] = 0f;
								if (NPCID.Sets.TownCritter[this.type])
								{
									this.ai[1] += (float)Main.rand.Next(200, 400);
								}
								this.localAI[3] = 0f;
								this.netUpdate = true;
							}
						}
					}
					if (Main.netMode != 1 && (!flag40 || (num383 == this.homeTileX && num384 == num381)))
					{
						if (num383 < this.homeTileX - 25 || num383 > this.homeTileX + 25)
						{
							if (this.localAI[3] == 0f)
							{
								if (num383 < this.homeTileX - 50 && this.direction == -1)
								{
									this.direction = 1;
									this.netUpdate = true;
								}
								else if (num383 > this.homeTileX + 50 && this.direction == 1)
								{
									this.direction = -1;
									this.netUpdate = true;
								}
							}
						}
						else if (Main.rand.Next(80) == 0 && this.localAI[3] == 0f)
						{
							this.localAI[3] = 200f;
							this.direction *= -1;
							this.netUpdate = true;
						}
					}
				}
				else if (this.ai[0] == 1f)
				{
					if (Main.netMode != 1 && flag40 && num383 == this.homeTileX && num384 == this.homeTileY && !NPCID.Sets.TownCritter[this.type])
					{
						this.ai[0] = 0f;
						this.ai[1] = (float)(200 + Main.rand.Next(200));
						this.localAI[3] = 60f;
						this.netUpdate = true;
					}
					else
					{
						bool flag48 = Collision.DrownCollision(this.position, this.width, this.height, 1f);
						if (!flag48)
						{
							if (Main.netMode != 1 && !this.homeless && !Main.tileDungeon[(int)Main.tile[num383, num384].type] && (num383 < this.homeTileX - 35 || num383 > this.homeTileX + 35))
							{
								if (this.position.X < (float)(this.homeTileX * 16) && this.direction == -1)
								{
									this.ai[1] -= 5f;
								}
								else if (this.position.X > (float)(this.homeTileX * 16) && this.direction == 1)
								{
									this.ai[1] -= 5f;
								}
							}
							this.ai[1] -= 1f;
						}
						if (this.ai[1] <= 0f)
						{
							this.ai[0] = 0f;
							this.ai[1] = (float)(300 + Main.rand.Next(300));
							this.ai[2] = 0f;
							if (NPCID.Sets.TownCritter[this.type])
							{
								this.ai[1] -= (float)Main.rand.Next(100);
							}
							else
							{
								this.ai[1] += (float)Main.rand.Next(900);
							}
							this.localAI[3] = 60f;
							this.netUpdate = true;
						}
						if (this.closeDoor && ((this.position.X + (float)(this.width / 2)) / 16f > (float)(this.doorX + 2) || (this.position.X + (float)(this.width / 2)) / 16f < (float)(this.doorX - 2)))
						{
							Tile tileSafely = Framing.GetTileSafely(this.doorX, this.doorY);
							if (TileLoader.CloseDoorID(tileSafely) >= 0)
							{
								bool flag49 = WorldGen.CloseDoor(this.doorX, this.doorY, false);
								if (flag49)
								{
									this.closeDoor = false;
									NetMessage.SendData(19, -1, -1, "", 1, (float)this.doorX, (float)this.doorY, (float)this.direction, 0, 0, 0);
								}
								if ((this.position.X + (float)(this.width / 2)) / 16f > (float)(this.doorX + 4) || (this.position.X + (float)(this.width / 2)) / 16f < (float)(this.doorX - 4) || (this.position.Y + (float)(this.height / 2)) / 16f > (float)(this.doorY + 4) || (this.position.Y + (float)(this.height / 2)) / 16f < (float)(this.doorY - 4))
								{
									this.closeDoor = false;
								}
							}
							else if (tileSafely.type == 389)
							{
								bool flag50 = WorldGen.ShiftTallGate(this.doorX, this.doorY, true);
								if (flag50)
								{
									this.closeDoor = false;
									NetMessage.SendData(19, -1, -1, "", 5, (float)this.doorX, (float)this.doorY, 0f, 0, 0, 0);
								}
								if ((this.position.X + (float)(this.width / 2)) / 16f > (float)(this.doorX + 4) || (this.position.X + (float)(this.width / 2)) / 16f < (float)(this.doorX - 4) || (this.position.Y + (float)(this.height / 2)) / 16f > (float)(this.doorY + 4) || (this.position.Y + (float)(this.height / 2)) / 16f < (float)(this.doorY - 4))
								{
									this.closeDoor = false;
								}
							}
							else
							{
								this.closeDoor = false;
							}
						}
						float num396 = 1f;
						float num397 = 0.07f;
						if (this.type == 299 || this.type == 539 || this.type == 538)
						{
							num396 = 1.5f;
						}
						if (flag44)
						{
							num396 = 2f;
							num397 = 1f;
						}
						if (this.friendly && (flag45 || flag48))
						{
							num396 = 1.5f;
							float num398 = 1f - (float)this.life / (float)this.lifeMax;
							num396 += num398 * 0.9f;
							num397 = 0.1f;
						}
						if (this.velocity.X < -num396 || this.velocity.X > num396)
						{
							if (this.velocity.Y == 0f)
							{
								this.velocity *= 0.8f;
							}
						}
						else if (this.velocity.X < num396 && this.direction == 1)
						{
							this.velocity.X = this.velocity.X + num397;
							if (this.velocity.X > num396)
							{
								this.velocity.X = num396;
							}
						}
						else if (this.velocity.X > -num396 && this.direction == -1)
						{
							this.velocity.X = this.velocity.X - num397;
							if (this.velocity.X > num396)
							{
								this.velocity.X = num396;
							}
						}
						bool holdsMatching = true;
						if ((float)(this.homeTileY * 16 - 32) > this.position.Y)
						{
							holdsMatching = false;
						}
						if ((this.direction == 1 && this.position.Y + (float)(this.width / 2) > (float)(this.homeTileX * 16)) || (this.direction == -1 && this.position.Y + (float)(this.width / 2) < (float)(this.homeTileX * 16)))
						{
							holdsMatching = true;
						}
						if (this.velocity.Y == 0f)
						{
							Collision.StepDown(ref this.position, ref this.velocity, this.width, this.height, ref this.stepSpeed, ref this.gfxOffY, 1, false);
						}
						if (this.velocity.Y >= 0f)
						{
							Collision.StepUp(ref this.position, ref this.velocity, this.width, this.height, ref this.stepSpeed, ref this.gfxOffY, 1, holdsMatching, 1);
						}
						if (this.velocity.Y == 0f)
						{
							int num399 = (int)((this.position.X + (float)(this.width / 2) + (float)(15 * this.direction)) / 16f);
							int num400 = (int)((this.position.Y + (float)this.height - 16f) / 16f);
							bool flag51 = false;
							bool flag52 = true;
							bool flag53 = num383 >= this.homeTileX - 35 && num383 <= this.homeTileX + 35;
							if (this.townNPC && this.ai[1] < 30f)
							{
								flag51 = !Utils.PlotTileLine(base.Top, base.Bottom, (float)this.width, new Utils.PerLinePoint(DelegateMethods.SearchAvoidedByNPCs));
								if (!flag51)
								{
									Rectangle hitbox = base.Hitbox;
									hitbox.X -= 20;
									hitbox.Width += 40;
									for (int num401 = 0; num401 < 200; num401++)
									{
										if (Main.npc[num401].active && Main.npc[num401].friendly && num401 != this.whoAmI && Main.npc[num401].velocity.X == 0f && hitbox.Intersects(Main.npc[num401].Hitbox))
										{
											flag51 = true;
											break;
										}
									}
								}
							}
							if (!flag51 && flag48)
							{
								flag51 = true;
							}
							if (flag52 && (NPCID.Sets.TownCritter[this.type] || (!flag53 && this.direction == Math.Sign(this.homeTileX - num383))))
							{
								flag52 = false;
							}
							if (flag52)
							{
								int num402 = 0;
								for (int num403 = -1; num403 <= 4; num403++)
								{
									Tile tileSafely2 = Framing.GetTileSafely(num399 - this.direction * num402, num400 + num403);
									if (tileSafely2.lava() && tileSafely2.liquid > 0)
									{
										flag52 = true;
										break;
									}
									if (tileSafely2.nactive() && Main.tileSolid[(int)tileSafely2.type])
									{
										flag52 = false;
										break;
									}
								}
							}
							if (!flag52 && this.wet)
							{
								bool flag54 = flag48;
								bool flag55 = false;
								if (!flag54)
								{
									flag55 = Collision.DrownCollision(this.position + new Vector2((float)(this.width * this.direction), 0f), this.width, this.height, 1f);
								}
								flag55 = (flag55 || Collision.DrownCollision(this.position + new Vector2((float)(this.width * this.direction), (float)(this.height * 2 - 16 - (flag54 ? 16 : 0))), this.width, 16 + (flag54 ? 16 : 0), 1f));
								if (flag55 && this.localAI[3] <= 0f)
								{
									flag52 = true;
									this.localAI[3] = 600f;
								}
							}
							if (this.position.X == this.localAI[3])
							{
								this.direction *= -1;
								this.netUpdate = true;
								this.localAI[3] = 600f;
							}
							if (flag48)
							{
								if (this.localAI[3] > 0f)
								{
									this.localAI[3] -= 1f;
								}
							}
							else
							{
								this.localAI[3] = -1f;
							}
							Tile tileSafely3 = Framing.GetTileSafely(num399, num400);
							Tile tileSafely4 = Framing.GetTileSafely(num399, num400 - 1);
							Tile tileSafely5 = Framing.GetTileSafely(num399, num400 - 2);
							if (this.townNPC && tileSafely5.nactive() && (TileLoader.OpenDoorID(tileSafely5) >= 0 || tileSafely5.type == 388) && (Main.rand.Next(10) == 0 || flag40))
							{
								if (Main.netMode != 1)
								{
									if (WorldGen.OpenDoor(num399, num400 - 2, this.direction))
									{
										this.closeDoor = true;
										this.doorX = num399;
										this.doorY = num400 - 2;
										NetMessage.SendData(19, -1, -1, "", 0, (float)num399, (float)(num400 - 2), (float)this.direction, 0, 0, 0);
										this.netUpdate = true;
										this.ai[1] += 80f;
									}
									else if (WorldGen.OpenDoor(num399, num400 - 2, -this.direction))
									{
										this.closeDoor = true;
										this.doorX = num399;
										this.doorY = num400 - 2;
										NetMessage.SendData(19, -1, -1, "", 0, (float)num399, (float)(num400 - 2), (float)(-(float)this.direction), 0, 0, 0);
										this.netUpdate = true;
										this.ai[1] += 80f;
									}
									else if (WorldGen.ShiftTallGate(num399, num400 - 2, false))
									{
										this.closeDoor = true;
										this.doorX = num399;
										this.doorY = num400 - 2;
										NetMessage.SendData(19, -1, -1, "", 4, (float)num399, (float)(num400 - 2), 0f, 0, 0, 0);
										this.netUpdate = true;
										this.ai[1] += 80f;
									}
									else
									{
										this.direction *= -1;
										this.netUpdate = true;
									}
								}
							}
							else
							{
								if ((this.velocity.X < 0f && this.spriteDirection == -1) || (this.velocity.X > 0f && this.spriteDirection == 1))
								{
									if (tileSafely5.nactive() && Main.tileSolid[(int)tileSafely5.type] && !Main.tileSolidTop[(int)tileSafely5.type])
									{
										if (!Collision.SolidTilesVersatile(num399 - this.direction * 2, num399 - this.direction, num400 - 5, num400 - 1) && !Collision.SolidTiles(num399, num399, num400 - 5, num400 - 3))
										{
											this.velocity.Y = -6f;
											this.netUpdate = true;
										}
										else if (flag44)
										{
											if (WorldGen.SolidTile((int)(base.Center.X / 16f) + this.direction, (int)(base.Center.Y / 16f)))
											{
												this.direction *= -1;
												this.velocity.X = this.velocity.X * 0f;
												this.netUpdate = true;
											}
										}
										else if (flag45)
										{
											flag51 = false;
											this.velocity.X = 0f;
											this.direction *= -1;
											this.netUpdate = true;
											this.ai[0] = 8f;
											this.ai[1] = 240f;
										}
										else
										{
											this.direction *= -1;
											this.netUpdate = true;
										}
									}
									else if (tileSafely4.nactive() && Main.tileSolid[(int)tileSafely4.type] && !Main.tileSolidTop[(int)tileSafely4.type])
									{
										if (!Collision.SolidTilesVersatile(num399 - this.direction * 2, num399 - this.direction, num400 - 4, num400 - 1) && !Collision.SolidTiles(num399, num399, num400 - 4, num400 - 2))
										{
											this.velocity.Y = -5f;
											this.netUpdate = true;
										}
										else if (flag45)
										{
											flag51 = false;
											this.velocity.X = 0f;
											this.direction *= -1;
											this.netUpdate = true;
											this.ai[0] = 8f;
											this.ai[1] = 240f;
										}
										else
										{
											this.direction *= -1;
											this.netUpdate = true;
										}
									}
									else if (this.position.Y + (float)this.height - (float)(num400 * 16) > 20f && tileSafely3.nactive() && Main.tileSolid[(int)tileSafely3.type] && !tileSafely3.topSlope())
									{
										if (!Collision.SolidTilesVersatile(num399 - this.direction * 2, num399, num400 - 3, num400 - 1))
										{
											this.velocity.Y = -4.4f;
											this.netUpdate = true;
										}
										else if (flag45)
										{
											flag51 = false;
											this.velocity.X = 0f;
											this.direction *= -1;
											this.netUpdate = true;
											this.ai[0] = 8f;
											this.ai[1] = 240f;
										}
										else
										{
											this.direction *= -1;
											this.netUpdate = true;
										}
									}
									else if (flag52)
									{
										this.direction *= -1;
										this.velocity.X = this.velocity.X * -1f;
										this.netUpdate = true;
										if (flag45)
										{
											flag51 = false;
											this.velocity.X = 0f;
											this.ai[0] = 8f;
											this.ai[1] = 240f;
										}
									}
									if (flag51)
									{
										this.ai[1] = 90f;
										this.netUpdate = true;
									}
									if (this.velocity.Y < 0f)
									{
										this.localAI[3] = this.position.X;
									}
								}
								if (this.velocity.Y < 0f && this.wet)
								{
									this.velocity.Y = this.velocity.Y * 1.2f;
								}
								if (this.velocity.Y < 0f && NPCID.Sets.TownCritter[this.type] && !flag44)
								{
									this.velocity.Y = this.velocity.Y * 1.2f;
								}
							}
						}
					}
				}
				else if (this.ai[0] == 2f || this.ai[0] == 11f)
				{
					if (Main.netMode != 1)
					{
						this.localAI[3] -= 1f;
						if (Main.rand.Next(60) == 0 && this.localAI[3] == 0f)
						{
							this.localAI[3] = 60f;
							this.direction *= -1;
							this.netUpdate = true;
						}
					}
					this.ai[1] -= 1f;
					this.velocity.X = this.velocity.X * 0.8f;
					if (this.ai[1] <= 0f)
					{
						this.localAI[3] = 40f;
						this.ai[0] = 0f;
						this.ai[1] = (float)(60 + Main.rand.Next(60));
						this.netUpdate = true;
					}
				}
				else if (this.ai[0] == 3f || this.ai[0] == 4f || this.ai[0] == 5f || this.ai[0] == 8f || this.ai[0] == 9f || this.ai[0] == 16f || this.ai[0] == 17f)
				{
					this.velocity.X = this.velocity.X * 0.8f;
					this.ai[1] -= 1f;
					if (this.ai[0] == 8f && this.ai[1] < 60f && flag45)
					{
						this.ai[1] = 180f;
						this.netUpdate = true;
					}
					if (this.ai[0] == 5f)
					{
						Point point = base.Center.ToTileCoordinates();
						Tile tile = Main.tile[point.X, point.Y];
						if (tile.type != 15)
						{
							this.ai[1] = 0f;
						}
					}
					if (this.ai[1] <= 0f)
					{
						this.ai[0] = 0f;
						this.ai[1] = (float)(60 + Main.rand.Next(60));
						this.ai[2] = 0f;
						this.localAI[3] = (float)(30 + Main.rand.Next(60));
						this.netUpdate = true;
					}
				}
				else if (this.ai[0] == 6f || this.ai[0] == 7f)
				{
					this.velocity.X = this.velocity.X * 0.8f;
					this.ai[1] -= 1f;
					int num404 = (int)this.ai[2];
					if (num404 < 0 || num404 > 255 || !Main.player[num404].active || Main.player[num404].dead || Main.player[num404].Distance(base.Center) > 200f || !Collision.CanHitLine(base.Top, 0, 0, Main.player[num404].Top, 0, 0))
					{
						this.ai[1] = 0f;
					}
					if (this.ai[1] > 0f)
					{
						int num405 = (base.Center.X < Main.player[num404].Center.X) ? 1 : -1;
						if (num405 != this.direction)
						{
							this.netUpdate = true;
						}
						this.direction = num405;
					}
					else
					{
						this.ai[0] = 0f;
						this.ai[1] = (float)(60 + Main.rand.Next(60));
						this.ai[2] = 0f;
						this.localAI[3] = (float)(30 + Main.rand.Next(60));
						this.netUpdate = true;
					}
				}
				else if (this.ai[0] == 10f)
				{
					int num406 = 0;
					int num407 = 0;
					float knockBack = 0f;
					float scaleFactor7 = 0f;
					int num408 = 0;
					int num409 = 0;
					int maxValue3 = 0;
					float num410 = 0f;
					float num411 = (float)NPCID.Sets.DangerDetectRange[this.type];
					float num412 = 0f;
					if ((float)NPCID.Sets.AttackTime[this.type] == this.ai[1])
					{
						this.frameCounter = 0.0;
						this.localAI[3] = 0f;
					}
					if (this.type == 38)
					{
						num406 = 30;
						scaleFactor7 = 6f;
						num407 = 20;
						num408 = 10;
						num409 = 180;
						maxValue3 = 120;
						num410 = 16f;
						knockBack = 7f;
					}
					else if (this.type == 208)
					{
						num406 = 588;
						scaleFactor7 = 6f;
						num407 = 30;
						num408 = 10;
						num409 = 60;
						maxValue3 = 120;
						num410 = 16f;
						knockBack = 6f;
					}
					else if (this.type == 17)
					{
						num406 = 48;
						scaleFactor7 = 9f;
						num407 = 12;
						num408 = 10;
						num409 = 60;
						maxValue3 = 60;
						num410 = 16f;
						knockBack = 1.5f;
					}
					else if (this.type == 369)
					{
						num406 = 520;
						scaleFactor7 = 12f;
						num407 = 10;
						num408 = 10;
						num409 = 0;
						maxValue3 = 1;
						num410 = 16f;
						knockBack = 3f;
					}
					else if (this.type == 453)
					{
						num406 = 21;
						scaleFactor7 = 14f;
						num407 = 14;
						num408 = 10;
						num409 = 0;
						maxValue3 = 1;
						num410 = 16f;
						knockBack = 3f;
					}
					else if (this.type == 107)
					{
						num406 = 24;
						scaleFactor7 = 5f;
						num407 = 15;
						num408 = 10;
						num409 = 60;
						maxValue3 = 60;
						num410 = 16f;
						knockBack = 1f;
					}
					else if (this.type == 124)
					{
						num406 = 582;
						scaleFactor7 = 10f;
						num407 = 11;
						num408 = 1;
						num409 = 30;
						maxValue3 = 30;
						knockBack = 3.5f;
					}
					else if (this.type == 18)
					{
						num406 = 583;
						scaleFactor7 = 8f;
						num407 = 8;
						num408 = 1;
						num409 = 15;
						maxValue3 = 10;
						knockBack = 2f;
						num410 = 10f;
					}
					else if (this.type == 142)
					{
						num406 = 589;
						scaleFactor7 = 7f;
						num407 = 22;
						//patch file: num406, num407, num408, num409, scaleFactor7, maxValue3
						num408 = 1;
						num409 = 10;
						maxValue3 = 1;
						knockBack = 2f;
						num410 = 10f;
					}
					NPCLoader.TownNPCAttackStrength(this, ref num407, ref knockBack);
					NPCLoader.TownNPCAttackCooldown(this, ref num409, ref maxValue3);
					NPCLoader.TownNPCAttackProj(this, ref num406, ref num408);
					NPCLoader.TownNPCAttackProjSpeed(this, ref scaleFactor7, ref num410, ref num412);
					if (Main.expertMode)
					{
						num407 = (int)((float)num407 * Main.expertNPCDamage);
					}
					num407 = (int)((float)num407 * num379);
					this.velocity.X = this.velocity.X * 0.8f;
					this.ai[1] -= 1f;
					this.localAI[3] += 1f;
					if (this.localAI[3] == (float)num408 && Main.netMode != 1)
					{
						Vector2 vector43 = -Vector2.UnitY;
						if (num390 == 1 && this.spriteDirection == 1 && num392 != -1)
						{
							vector43 = base.DirectionTo(Main.npc[num392].Center + new Vector2(0f, -num410 * MathHelper.Clamp(base.Distance(Main.npc[num392].Center) / num411, 0f, 1f)));
						}
						if (num390 == -1 && this.spriteDirection == -1 && num391 != -1)
						{
							vector43 = base.DirectionTo(Main.npc[num391].Center + new Vector2(0f, -num410 * MathHelper.Clamp(base.Distance(Main.npc[num391].Center) / num411, 0f, 1f)));
						}
						if (vector43.HasNaNs() || Math.Sign(vector43.X) != this.spriteDirection)
						{
							vector43 = new Vector2((float)this.spriteDirection, -1f);
						}
						vector43 *= scaleFactor7;
						vector43 += Utils.RandomVector2(Main.rand, -num412, num412);
						int num413;
						if (this.type == 124)
						{
							num413 = Projectile.NewProjectile(base.Center.X + (float)(this.spriteDirection * 16), base.Center.Y - 2f, vector43.X, vector43.Y, num406, num407, knockBack, Main.myPlayer, 0f, (float)this.whoAmI);
						}
						else if (this.type == 142)
						{
							num413 = Projectile.NewProjectile(base.Center.X + (float)(this.spriteDirection * 16), base.Center.Y - 2f, vector43.X, vector43.Y, num406, num407, knockBack, Main.myPlayer, 0f, (float)Main.rand.Next(5));
						}
						else
						{
							num413 = Projectile.NewProjectile(base.Center.X + (float)(this.spriteDirection * 16), base.Center.Y - 2f, vector43.X, vector43.Y, num406, num407, knockBack, Main.myPlayer, 0f, 0f);
						}
						Main.projectile[num413].npcProj = true;
						Main.projectile[num413].noDropItem = true;
					}
					if (this.ai[1] <= 0f && !false)
					{
						this.ai[0] = (float)((this.localAI[2] == 8f && flag45) ? 8 : 0);
						this.ai[1] = (float)(num409 + Main.rand.Next(maxValue3));
						this.ai[2] = 0f;
						this.localAI[1] = (this.localAI[3] = (float)(num409 / 2 + Main.rand.Next(maxValue3)));
						this.netUpdate = true;
					}
				}
				else if (this.ai[0] == 12f)
				{
					int num414 = 0;
					int num415 = 0;
					float scaleFactor8 = 0f;
					int num416 = 0;
					int num417 = 0;
					int maxValue4 = 0;
					float knockBack2 = 0f;
					float num418 = 0;
					bool flag56 = false;
					float num419 = 0f;
					if ((float)NPCID.Sets.AttackTime[this.type] == this.ai[1])
					{
						this.frameCounter = 0.0;
						this.localAI[3] = 0f;
					}
					int num420 = -1;
					if (num390 == 1 && this.spriteDirection == 1)
					{
						num420 = num392;
					}
					if (num390 == -1 && this.spriteDirection == -1)
					{
						num420 = num391;
					}
					if (this.type == 19)
					{
						num414 = 14;
						scaleFactor8 = 13f;
						num415 = 24;
						num417 = 14;
						maxValue4 = 4;
						knockBack2 = 3f;
						num416 = 1;
						num419 = 0.5f;
						if ((float)NPCID.Sets.AttackTime[this.type] == this.ai[1])
						{
							this.frameCounter = 0.0;
							this.localAI[3] = 0f;
						}
						if (Main.hardMode)
						{
							num415 = 15;
							if (this.localAI[3] > (float)num416)
							{
								num416 = 10;
								flag56 = true;
							}
							if (this.localAI[3] > (float)num416)
							{
								num416 = 20;
								flag56 = true;
							}
							if (this.localAI[3] > (float)num416)
							{
								num416 = 30;
								flag56 = true;
							}
						}
					}
					else if (this.type == 227)
					{
						num414 = 587;
						scaleFactor8 = 10f;
						num415 = 8;
						num417 = 10;
						maxValue4 = 1;
						knockBack2 = 1.75f;
						num416 = 1;
						num419 = 0.5f;
						if (this.localAI[3] > (float)num416)
						{
							num416 = 12;
							flag56 = true;
						}
						if (this.localAI[3] > (float)num416)
						{
							num416 = 24;
							flag56 = true;
						}
						if (Main.hardMode)
						{
							num415 += 2;
						}
					}
					else if (this.type == 368)
					{
						num414 = 14;
						scaleFactor8 = 13f;
						num415 = 24;
						num417 = 12;
						maxValue4 = 5;
						knockBack2 = 2f;
						num416 = 1;
						num419 = 0.2f;
						if (Main.hardMode)
						{
							num415 = 30;
							num414 = 357;
						}
					}
					else if (this.type == 22)
					{
						scaleFactor8 = 10f;
						num415 = 8;
						num416 = 1;
						if (Main.hardMode)
						{
							num414 = 2;
							num417 = 15;
							maxValue4 = 10;
							num415 += 6;
						}
						else
						{
							num414 = 1;
							num417 = 30;
							maxValue4 = 20;
						}
						knockBack2 = 2.75f;
						num418 = 4;
						num419 = 0.7f;
					}
					else if (this.type == 228)
					{
						num414 = 267;
						//patch file: num414, num415, num416, scaleFactor8
						scaleFactor8 = 14f;
						num415 = 20;
						num416 = 1;
						num417 = 10;
						maxValue4 = 1;
						knockBack2 = 3f;
						//patch file: num417, num418, num419, maxValue4, knockBack2
						num418 = 6;
						num419 = 0.4f;
					}
					else if (this.type == 178)
					{
						num414 = 242;
						scaleFactor8 = 13f;
						num415 = 15;
						num417 = 10;
						maxValue4 = 1;
						knockBack2 = 2f;
						num416 = 1;
						if (this.localAI[3] > (float)num416)
						{
							num416 = 8;
							flag56 = true;
						}
						if (this.localAI[3] > (float)num416)
						{
							num416 = 16;
							flag56 = true;
						}
						num419 = 0.3f;
					}
					else if (this.type == 229)
					{
						num414 = 14;
						scaleFactor8 = 14f;
						num415 = 24;
						num417 = 10;
						maxValue4 = 1;
						knockBack2 = 2f;
						num416 = 1;
						num419 = 0.7f;
						if (this.localAI[3] > (float)num416)
						{
							num416 = 16;
							flag56 = true;
						}
						if (this.localAI[3] > (float)num416)
						{
							num416 = 24;
							flag56 = true;
						}
						if (this.localAI[3] > (float)num416)
						{
							num416 = 32;
							flag56 = true;
						}
						if (this.localAI[3] > (float)num416)
						{
							num416 = 40;
							flag56 = true;
						}
						if (this.localAI[3] > (float)num416)
						{
							num416 = 48;
							flag56 = true;
						}
						if (this.localAI[3] == 0f && num420 != -1 && base.Distance(Main.npc[num420].Center) < (float)NPCID.Sets.PrettySafe[this.type])
						{
							num419 = 0.1f;
							num414 = 162;
							num415 = 50;
							knockBack2 = 10f;
							scaleFactor8 = 24f;
						}
					}
					else if (this.type == 209)
					{
						int num421 = Utils.SelectRandom<int>(Main.rand, new int[]
							{
								134,
								133,
								135
							});
						num414 = num421;
						num416 = 1;
						if (num414 == 135)
						{
							scaleFactor8 = 12f;
							num415 = 30;
							num417 = 30;
							maxValue4 = 10;
							knockBack2 = 7f;
							num419 = 0.2f;
						}
						else if (num414 == 133)
						{
							scaleFactor8 = 10f;
							num415 = 25;
							num417 = 10;
							maxValue4 = 1;
							knockBack2 = 6f;
							num419 = 0.2f;
						}
						else if (num414 == 134)
						{
							scaleFactor8 = 13f;
							num415 = 20;
							num417 = 20;
							maxValue4 = 10;
							knockBack2 = 4f;
							num419 = 0.1f;
						}
					}
					NPCLoader.TownNPCAttackStrength(this, ref num415, ref knockBack2);
					NPCLoader.TownNPCAttackCooldown(this, ref num417, ref maxValue4);
					NPCLoader.TownNPCAttackProj(this, ref num414, ref num416);
					NPCLoader.TownNPCAttackProjSpeed(this, ref scaleFactor8, ref num418, ref num419);
					NPCLoader.TownNPCAttackShoot(this, ref flag56);
					if (Main.expertMode)
					{
						num415 = (int)((float)num415 * Main.expertNPCDamage);
					}
					num415 = (int)((float)num415 * num379);
					this.velocity.X = this.velocity.X * 0.8f;
					this.ai[1] -= 1f;
					this.localAI[3] += 1f;
					if (this.localAI[3] == (float)num416 && Main.netMode != 1)
					{
						Vector2 vector44 = Vector2.Zero;
						if (num420 != -1)
						{
							vector44 = base.DirectionTo(Main.npc[num420].Center + new Vector2(0f, (float)(-(float)num418)));
						}
						if (vector44.HasNaNs() || Math.Sign(vector44.X) != this.spriteDirection)
						{
							vector44 = new Vector2((float)this.spriteDirection, 0f);
						}
						vector44 *= scaleFactor8;
						vector44 += Utils.RandomVector2(Main.rand, -num419, num419);
						int num422;
						if (this.type == 227)
						{
							num422 = Projectile.NewProjectile(base.Center.X + (float)(this.spriteDirection * 16), base.Center.Y - 2f, vector44.X, vector44.Y, num414, num415, knockBack2, Main.myPlayer, 0f, (float)Main.rand.Next(12) / 6f);
						}
						else
						{
							num422 = Projectile.NewProjectile(base.Center.X + (float)(this.spriteDirection * 16), base.Center.Y - 2f, vector44.X, vector44.Y, num414, num415, knockBack2, Main.myPlayer, 0f, 0f);
						}
						Main.projectile[num422].npcProj = true;
						Main.projectile[num422].noDropItem = true;
					}
					if (this.localAI[3] == (float)num416 && flag56 && num420 != -1)
					{
						Vector2 vector45 = base.DirectionTo(Main.npc[num420].Center);
						if (vector45.Y <= 0.5f && vector45.Y >= -0.5f)
						{
							this.ai[2] = vector45.Y;
						}
					}
					if (this.ai[1] <= 0f && !false)
					{
						this.ai[0] = (float)((this.localAI[2] == 8f && flag45) ? 8 : 0);
						this.ai[1] = (float)(num417 + Main.rand.Next(maxValue4));
						this.ai[2] = 0f;
						this.localAI[1] = (this.localAI[3] = (float)(num417 / 2 + Main.rand.Next(maxValue4)));
						this.netUpdate = true;
					}
				}
				else if (this.ai[0] == 13f)
				{
					this.velocity.X = this.velocity.X * 0.8f;
					if ((float)NPCID.Sets.AttackTime[this.type] == this.ai[1])
					{
						this.frameCounter = 0.0;
					}
					this.ai[1] -= 1f;
					this.localAI[3] += 1f;
					if (this.localAI[3] == 1f && Main.netMode != 1)
					{
						Vector2 vec2 = base.DirectionTo(Main.npc[(int)this.ai[2]].Center + new Vector2(0f, -20f));
						if (vec2.HasNaNs() || Math.Sign(vec2.X) == -this.spriteDirection)
						{
							vec2 = new Vector2((float)this.spriteDirection, -1f);
						}
						vec2 *= 8f;
						int num423 = Projectile.NewProjectile(base.Center.X + (float)(this.spriteDirection * 16), base.Center.Y - 2f, vec2.X, vec2.Y, 584, 0, 0f, Main.myPlayer, this.ai[2], 0f);
						Main.projectile[num423].npcProj = true;
						Main.projectile[num423].noDropItem = true;
					}
					if (this.ai[1] <= 0f)
					{
						this.ai[0] = 0f;
						this.ai[1] = (float)(10 + Main.rand.Next(10));
						this.ai[2] = 0f;
						this.localAI[3] = (float)(5 + Main.rand.Next(10));
						this.netUpdate = true;
					}
				}
				else if (this.ai[0] == 14f)
				{
					int num424 = 0;
					int num425 = 0;
					float scaleFactor9 = 0f;
					int num426 = 0;
					int num427 = 0;
					int maxValue5 = 0;
					float knockBack3 = 0f;
					float num428 = 0f;
					float num429 = (float)NPCID.Sets.DangerDetectRange[this.type];
					float num430 = 1f;
					float num431 = 0f;
					if ((float)NPCID.Sets.AttackTime[this.type] == this.ai[1])
					{
						this.frameCounter = 0.0;
						this.localAI[3] = 0f;
					}
					int num432 = -1;
					if (num390 == 1 && this.spriteDirection == 1)
					{
						num432 = num392;
					}
					if (num390 == -1 && this.spriteDirection == -1)
					{
						num432 = num391;
					}
					if (this.type == 54)
					{
						num424 = 585;
						//patch file: num424, scaleFactor9
						scaleFactor9 = 10f;
						num425 = 16;
						num426 = 30;
						//patch file: num425, num426, num427, maxValue5, knockBack3
						num427 = 20;
						maxValue5 = 15;
						knockBack3 = 2f;
						num431 = 1f;
					}
					else if (this.type == 108)
					//patch file: num431
					{
						num424 = 15;
						scaleFactor9 = 6f;
						num425 = 18;
						num426 = 15;
						num427 = 15;
						//patch file: num428
						maxValue5 = 5;
						knockBack3 = 3f;
						num428 = 20f;
					}
					else if (this.type == 160)
					{
						num424 = 590;
						num425 = 40;
						num426 = 15;
						num427 = 10;
						maxValue5 = 1;
						knockBack3 = 3f;
						while (this.localAI[3] > (float)num426)
						{
							num426 += 15;
						}
					}
					else if (this.type == 20)
					{
						num424 = 586;
						num426 = 24;
						num427 = 10;
						maxValue5 = 1;
						knockBack3 = 3f;
					}
					NPCLoader.TownNPCAttackStrength(this, ref num425, ref knockBack3);
					NPCLoader.TownNPCAttackCooldown(this, ref num427, ref maxValue5);
					NPCLoader.TownNPCAttackProj(this, ref num424, ref num426);
					NPCLoader.TownNPCAttackProjSpeed(this, ref scaleFactor9, ref num428, ref num431);
					NPCLoader.TownNPCAttackMagic(this, ref num430);
					if (Main.expertMode)
					{
						num425 = (int)((float)num425 * Main.expertNPCDamage);
					}
					num425 = (int)((float)num425 * num379);
					this.velocity.X = this.velocity.X * 0.8f;
					this.ai[1] -= 1f;
					this.localAI[3] += 1f;
					if (this.localAI[3] == (float)num426 && Main.netMode != 1)
					{
						Vector2 vector46 = Vector2.Zero;
						if (num432 != -1)
						{
							vector46 = base.DirectionTo(Main.npc[num432].Center + new Vector2(0f, -num428 * MathHelper.Clamp(base.Distance(Main.npc[num432].Center) / num429, 0f, 1f)));
						}
						if (vector46.HasNaNs() || Math.Sign(vector46.X) != this.spriteDirection)
						{
							vector46 = new Vector2((float)this.spriteDirection, 0f);
						}
						vector46 *= scaleFactor9;
						vector46 += Utils.RandomVector2(Main.rand, -num431, num431);
						if (this.type == 108)
						{
							int num433 = Utils.SelectRandom<int>(Main.rand, new int[]
								{
									1,
									1,
									1,
									1,
									2,
									2,
									3
								});
							for (int num434 = 0; num434 < num433; num434++)
							{
								Vector2 vector47 = Utils.RandomVector2(Main.rand, -3.4f, 3.4f);
								int num435 = Projectile.NewProjectile(base.Center.X + (float)(this.spriteDirection * 16), base.Center.Y - 2f, vector46.X + vector47.X, vector46.Y + vector47.Y, num424, num425, knockBack3, Main.myPlayer, 0f, 0f);
								Main.projectile[num435].npcProj = true;
								Main.projectile[num435].noDropItem = true;
							}
						}
						else if (this.type == 160)
						{
							if (num432 != -1)
							{
								Vector2 vector48 = Main.npc[num432].position - Main.npc[num432].Size * 2f + Main.npc[num432].Size * Utils.RandomVector2(Main.rand, 0f, 1f) * 5f;
								int num436 = 10;
								while (num436 > 0 && WorldGen.SolidTile(Framing.GetTileSafely((int)vector48.X / 16, (int)vector48.Y / 16)))
								{
									num436--;
									vector48 = Main.npc[num432].position - Main.npc[num432].Size * 2f + Main.npc[num432].Size * Utils.RandomVector2(Main.rand, 0f, 1f) * 5f;
								}
								int num437 = Projectile.NewProjectile(vector48.X, vector48.Y, 0f, 0f, num424, num425, knockBack3, Main.myPlayer, 0f, 0f);
								Main.projectile[num437].npcProj = true;
								Main.projectile[num437].noDropItem = true;
							}
						}
						else if (this.type == 20)
						{
							int num438 = Projectile.NewProjectile(base.Center.X + (float)(this.spriteDirection * 16), base.Center.Y - 2f, vector46.X, vector46.Y, num424, num425, knockBack3, Main.myPlayer, 0f, (float)this.whoAmI);
							Main.projectile[num438].npcProj = true;
							Main.projectile[num438].noDropItem = true;
						}
						else
						{
							int num439 = Projectile.NewProjectile(base.Center.X + (float)(this.spriteDirection * 16), base.Center.Y - 2f, vector46.X, vector46.Y, num424, num425, knockBack3, Main.myPlayer, 0f, 0f);
							Main.projectile[num439].npcProj = true;
							Main.projectile[num439].noDropItem = true;
						}
					}
					if (num430 > 0f)
					{
						Vector3 vector49 = NPCID.Sets.MagicAuraColor[this.type].ToVector3() * num430;
						Lighting.AddLight(base.Center, vector49.X, vector49.Y, vector49.Z);
					}
					if (this.ai[1] <= 0f && !false)
					{
						this.ai[0] = (float)((this.localAI[2] == 8f && flag45) ? 8 : 0);
						this.ai[1] = (float)(num427 + Main.rand.Next(maxValue5));
						this.ai[2] = 0f;
						this.localAI[1] = (this.localAI[3] = (float)(num427 / 2 + Main.rand.Next(maxValue5)));
						this.netUpdate = true;
					}
				}
				else if (this.ai[0] == 15f)
				{
					int num440 = 0;
					int maxValue6 = 0;
					if ((float)NPCID.Sets.AttackTime[this.type] == this.ai[1])
					{
						this.frameCounter = 0.0;
						this.localAI[3] = 0f;
					}
					int num441 = 0;
					float num442 = 0f;
					int num443 = 0;
					int num444 = 0;
					if (num390 == 1)
					{
						int arg_1C0E8_0 = this.spriteDirection;
					}
					if (num390 == -1)
					{
						int arg_1C0F8_0 = this.spriteDirection;
					}
					if (this.type == 207)
					{
						num441 = 11;
						num444 = (num443 = 32);
						num440 = 12;
						maxValue6 = 6;
						num442 = 4.25f;
					}
					else if (this.type == 441)
					{
						num441 = 9;
						num444 = (num443 = 28);
						num440 = 9;
						maxValue6 = 3;
						num442 = 3.5f;
					}
					else if (this.type == 353)
					{
						num441 = 10;
						//patch file: num440, num441, num443, num444
						num444 = (num443 = 32);
						num440 = 15;
						maxValue6 = 8;
						num442 = 5f;
					}
					NPCLoader.TownNPCAttackStrength(this, ref num441, ref num442);
					NPCLoader.TownNPCAttackCooldown(this, ref num440, ref maxValue6);
					NPCLoader.TownNPCAttackSwing(this, ref num443, ref num444);
					if (Main.expertMode)
					{
						num441 = (int)((float)num441 * Main.expertNPCDamage);
					}
					num441 = (int)((float)num441 * num379);
					this.velocity.X = this.velocity.X * 0.8f;
					this.ai[1] -= 1f;
					if (Main.netMode != 1)
					{
						Tuple<Vector2, float> swingStats = this.GetSwingStats(NPCID.Sets.AttackTime[this.type] * 2, (int)this.ai[1], this.spriteDirection, num443, num444);
						Rectangle rectangle5 = new Rectangle((int)swingStats.Item1.X, (int)swingStats.Item1.Y, num443, num444);
						if (this.spriteDirection == -1)
						{
							rectangle5.X -= num443;
						}
						rectangle5.Y -= num444;
						this.TweakSwingStats(NPCID.Sets.AttackTime[this.type] * 2, (int)this.ai[1], this.spriteDirection, ref rectangle5);
						int myPlayer = Main.myPlayer;
						for (int num445 = 0; num445 < 200; num445++)
						{
							NPC nPC2 = Main.npc[num445];
							if (nPC2.active && nPC2.immune[myPlayer] == 0 && !nPC2.dontTakeDamage && !nPC2.friendly && nPC2.damage > 0 && rectangle5.Intersects(nPC2.Hitbox) && (nPC2.noTileCollide || Collision.CanHit(this.position, this.width, this.height, nPC2.position, nPC2.width, nPC2.height)))
							{
								nPC2.StrikeNPCNoInteraction(num441, num442, this.spriteDirection, false, false, false);
								if (Main.netMode != 0)
								{
									NetMessage.SendData(28, -1, -1, "", num445, (float)num441, num442, (float)this.spriteDirection, 0, 0, 0);
								}
								nPC2.netUpdate = true;
								nPC2.immune[myPlayer] = (int)this.ai[1] + 2;
							}
						}
					}
					if (this.ai[1] <= 0f)
					{
						bool flag57 = false;
						if (flag45)
						{
							int num446 = -num390;
							if (!Collision.CanHit(base.Center, 0, 0, base.Center + Vector2.UnitX * (float)num446 * 32f, 0, 0) || this.localAI[2] == 8f)
							{
								flag57 = true;
							}
							if (flag57)
							{
								int num447 = NPCID.Sets.AttackTime[this.type];
								int num448 = (num390 == 1) ? num392 : num391;
								int num449 = (num390 == 1) ? num391 : num392;
								if (num448 != -1 && !Collision.CanHit(base.Center, 0, 0, Main.npc[num448].Center, 0, 0))
								{
									if (num449 != -1 && Collision.CanHit(base.Center, 0, 0, Main.npc[num449].Center, 0, 0))
									{
										num448 = num449;
									}
									else
									{
										num448 = -1;
									}
								}
								if (num448 != -1)
								{
									this.ai[0] = 15f;
									this.ai[1] = (float)num447;
									this.ai[2] = 0f;
									this.localAI[3] = 0f;
									this.direction = ((this.position.X < Main.npc[num448].position.X) ? 1 : -1);
									this.netUpdate = true;
								}
								else
								{
									flag57 = false;
								}
							}
						}
						if (!flag57)
						{
							this.ai[0] = (float)((this.localAI[2] == 8f && flag45) ? 8 : 0);
							this.ai[1] = (float)(num440 + Main.rand.Next(maxValue6));
							this.ai[2] = 0f;
							this.localAI[1] = (this.localAI[3] = (float)(num440 / 2 + Main.rand.Next(maxValue6)));
							this.netUpdate = true;
						}
					}
				}
				if (Main.netMode != 1 && (this.townNPC || this.type == 453) && !flag42)
				{
					bool flag58 = this.ai[0] < 2f && !flag45;
					bool flag59 = (this.ai[0] < 2f || this.ai[0] == 8f) && (flag45 || flag46);
					if (this.localAI[1] > 0f)
					{
						this.localAI[1] -= 1f;
					}
					if (this.localAI[1] > 0f)
					{
						flag59 = false;
					}
					if (flag59 && this.type == 124 && this.localAI[0] == 1f)
					{
						flag59 = false;
					}
					if (flag59 && this.type == 20)
					{
						flag59 = false;
						for (int num450 = 0; num450 < 200; num450++)
						{
							NPC nPC3 = Main.npc[num450];
							if (nPC3.active && nPC3.townNPC && base.Distance(nPC3.Center) <= 1200f && nPC3.HasBuff(165) == -1)
							{
								flag59 = true;
								break;
							}
						}
					}
					if (flag58 && this.ai[0] == 0f && this.velocity.Y == 0f && Main.rand.Next(300) == 0)
					{
						int num451 = 420;
						if (Main.rand.Next(2) == 0)
						{
							num451 *= Main.rand.Next(1, 4);
						}
						else
						{
							num451 *= Main.rand.Next(1, 3);
						}
						int num452 = 100;
						int num453 = 20;
						for (int num454 = 0; num454 < 200; num454++)
						{
							NPC nPC4 = Main.npc[num454];
							bool flag60 = (nPC4.ai[0] == 1f && nPC4.closeDoor) || (nPC4.ai[0] == 1f && nPC4.ai[1] > 200f) || nPC4.ai[0] > 1f;
							if (nPC4 != this && nPC4.active && nPC4.CanTalk && !flag60 && nPC4.Distance(base.Center) < (float)num452 && nPC4.Distance(base.Center) > (float)num453 && Collision.CanHit(base.Center, 0, 0, nPC4.Center, 0, 0))
							{
								int num455 = (this.position.X < nPC4.position.X).ToDirectionInt();
								this.ai[0] = 3f;
								this.ai[1] = (float)num451;
								this.ai[2] = (float)num454;
								this.direction = num455;
								this.netUpdate = true;
								nPC4.ai[0] = 4f;
								nPC4.ai[1] = (float)num451;
								nPC4.ai[2] = (float)this.whoAmI;
								nPC4.direction = -num455;
								nPC4.netUpdate = true;
								break;
							}
						}
					}
					else if (flag58 && this.ai[0] == 0f && this.velocity.Y == 0f && Main.rand.Next(1800) == 0)
					{
						int num456 = 420;
						if (Main.rand.Next(2) == 0)
						{
							num456 *= Main.rand.Next(1, 4);
						}
						else
						{
							num456 *= Main.rand.Next(1, 3);
						}
						int num457 = 100;
						int num458 = 20;
						for (int num459 = 0; num459 < 200; num459++)
						{
							NPC nPC5 = Main.npc[num459];
							bool flag61 = (nPC5.ai[0] == 1f && nPC5.closeDoor) || (nPC5.ai[0] == 1f && nPC5.ai[1] > 200f) || nPC5.ai[0] > 1f;
							if (nPC5 != this && nPC5.active && nPC5.CanTalk && !flag61 && nPC5.Distance(base.Center) < (float)num457 && nPC5.Distance(base.Center) > (float)num458 && Collision.CanHit(base.Center, 0, 0, nPC5.Center, 0, 0))
							{
								int num460 = (this.position.X < nPC5.position.X).ToDirectionInt();
								this.ai[0] = 16f;
								this.ai[1] = (float)num456;
								this.ai[2] = (float)num459;
								this.localAI[2] = (float)Main.rand.Next(4);
								this.localAI[3] = (float)Main.rand.Next(3 - (int)this.localAI[2]);
								this.direction = num460;
								this.netUpdate = true;
								nPC5.ai[0] = 17f;
								nPC5.ai[1] = (float)num456;
								nPC5.ai[2] = (float)this.whoAmI;
								nPC5.localAI[2] = 0f;
								nPC5.localAI[3] = 0f;
								nPC5.direction = -num460;
								nPC5.netUpdate = true;
								break;
							}
						}
					}
					else if (flag58 && this.ai[0] == 0f && this.velocity.Y == 0f && Main.rand.Next(1200) == 0 && (this.type == 208 || (BirthdayParty.PartyIsUp && NPCID.Sets.AttackType[this.type] == NPCID.Sets.AttackType[208])))
					{
						int num461 = 300;
						int num462 = 150;
						for (int num463 = 0; num463 < 255; num463++)
						{
							Player player2 = Main.player[num463];
							if (player2.active && !player2.dead && player2.Distance(base.Center) < (float)num462 && Collision.CanHitLine(base.Top, 0, 0, player2.Top, 0, 0))
							{
								int direction2 = (this.position.X < player2.position.X).ToDirectionInt();
								this.ai[0] = 6f;
								this.ai[1] = (float)num461;
								this.ai[2] = (float)num463;
								this.direction = direction2;
								this.netUpdate = true;
								break;
							}
						}
					}
					else if (flag58 && this.ai[0] == 0f && this.velocity.Y == 0f && Main.rand.Next(1800) == 0)
					{
						this.ai[0] = 2f;
						this.ai[1] = (float)(45 * Main.rand.Next(1, 2));
						this.netUpdate = true;
					}
					else if (flag58 && this.ai[0] == 0f && this.velocity.Y == 0f && Main.rand.Next(600) == 0 && this.type == 229 && !flag46)
					{
						this.ai[0] = 11f;
						this.ai[1] = (float)(30 * Main.rand.Next(1, 4));
						this.netUpdate = true;
					}
					else if (flag58 && this.ai[0] == 0f && this.velocity.Y == 0f && Main.rand.Next(1200) == 0)
					{
						int num464 = 220;
						int num465 = 150;
						for (int num466 = 0; num466 < 255; num466++)
						{
							Player player3 = Main.player[num466];
							if (player3.active && !player3.dead && player3.Distance(base.Center) < (float)num465 && Collision.CanHitLine(base.Top, 0, 0, player3.Top, 0, 0))
							{
								int direction3 = (this.position.X < player3.position.X).ToDirectionInt();
								this.ai[0] = 7f;
								this.ai[1] = (float)num464;
								this.ai[2] = (float)num466;
								this.direction = direction3;
								this.netUpdate = true;
								break;
							}
						}
					}
					else if (flag58 && this.ai[0] == 1f && this.velocity.Y == 0f && Main.rand.Next(300) == 0)
					{
						Point b = base.Center.ToTileCoordinates();
						bool flag62 = WorldGen.InWorld(b.X, b.Y, 1);
						if (flag62)
						{
							for (int num467 = 0; num467 < 200; num467++)
							{
								if (Main.npc[num467].active && Main.npc[num467].aiStyle == 7 && Main.npc[num467].townNPC && Main.npc[num467].ai[0] == 5f)
								{
									Point a = Main.npc[num467].Center.ToTileCoordinates();
									if (a == b)
									{
										flag62 = false;
										break;
									}
								}
							}
						}
						if (flag62)
						{
							Tile tile2 = Main.tile[b.X, b.Y];
							flag62 = (tile2.type == 15);
							if (flag62 && tile2.frameY == 1080)
							{
								flag62 = false;
							}
							if (flag62)
							{
								this.ai[0] = 5f;
								this.ai[1] = (float)(900 + Main.rand.Next(10800));
								this.direction = ((tile2.frameX == 0) ? -1 : 1);
								base.Bottom = new Vector2((float)(b.X * 16 + 8 + 2 * this.direction), (float)(b.Y * 16 + 32));
								this.velocity = Vector2.Zero;
								this.localAI[3] = 0f;
								this.netUpdate = true;
							}
						}
					}
					else if (flag58 && this.ai[0] == 1f && this.velocity.Y == 0f && Main.rand.Next(600) == 0 && Utils.PlotTileLine(base.Top, base.Bottom, (float)this.width, new Utils.PerLinePoint(DelegateMethods.SearchAvoidedByNPCs)))
					{
						Point point2 = (base.Center + new Vector2((float)(this.direction * 10), 0f)).ToTileCoordinates();
						bool flag63 = WorldGen.InWorld(point2.X, point2.Y, 1);
						if (flag63)
						{
							Tile tileSafely6 = Framing.GetTileSafely(point2.X, point2.Y);
							if (!tileSafely6.nactive() || !TileID.Sets.InteractibleByNPCs[(int)tileSafely6.type])
							{
								flag63 = false;
							}
						}
						if (flag63)
						{
							this.ai[0] = 9f;
							this.ai[1] = (float)(40 + Main.rand.Next(90));
							this.velocity = Vector2.Zero;
							this.localAI[3] = 0f;
							this.netUpdate = true;
						}
					}
					if (this.ai[0] < 2f && this.velocity.Y == 0f && this.type == 18)
					{
						int num468 = -1;
						for (int num469 = 0; num469 < 200; num469++)
						{
							NPC nPC6 = Main.npc[num469];
							if (nPC6.active && nPC6.townNPC && nPC6.life != nPC6.lifeMax && (num468 == -1 || nPC6.lifeMax - nPC6.life > Main.npc[num468].lifeMax - Main.npc[num468].life) && Collision.CanHitLine(this.position, this.width, this.height, nPC6.position, nPC6.width, nPC6.height) && base.Distance(nPC6.Center) < 500f)
							{
								num468 = num469;
							}
						}
						if (num468 != -1)
						{
							this.ai[0] = 13f;
							this.ai[1] = 34f;
							this.ai[2] = (float)num468;
							this.localAI[3] = 0f;
							this.direction = ((this.position.X < Main.npc[num468].position.X) ? 1 : -1);
							this.netUpdate = true;
						}
					}
					if (flag59 && this.velocity.Y == 0f && NPCID.Sets.AttackType[this.type] == 0 && NPCID.Sets.AttackAverageChance[this.type] > 0 && Main.rand.Next(NPCID.Sets.AttackAverageChance[this.type] * 2) == 0)
					{
						int num470 = NPCID.Sets.AttackTime[this.type];
						int num471 = (num390 == 1) ? num392 : num391;
						int num472 = (num390 == 1) ? num391 : num392;
						if (num471 != -1 && !Collision.CanHit(base.Center, 0, 0, Main.npc[num471].Center, 0, 0))
						{
							if (num472 != -1 && Collision.CanHit(base.Center, 0, 0, Main.npc[num472].Center, 0, 0))
							{
								num471 = num472;
							}
							else
							{
								num471 = -1;
							}
						}
						if (num471 != -1)
						{
							this.localAI[2] = this.ai[0];
							this.ai[0] = 10f;
							this.ai[1] = (float)num470;
							this.ai[2] = 0f;
							this.localAI[3] = 0f;
							this.direction = ((this.position.X < Main.npc[num471].position.X) ? 1 : -1);
							this.netUpdate = true;
						}
					}
					else if (flag59 && this.velocity.Y == 0f && NPCID.Sets.AttackType[this.type] == 1 && NPCID.Sets.AttackAverageChance[this.type] > 0 && Main.rand.Next(NPCID.Sets.AttackAverageChance[this.type] * 2) == 0)
					{
						int num473 = NPCID.Sets.AttackTime[this.type];
						int num474 = (num390 == 1) ? num392 : num391;
						int num475 = (num390 == 1) ? num391 : num392;
						if (num474 != -1 && !Collision.CanHitLine(base.Center, 0, 0, Main.npc[num474].Center, 0, 0))
						{
							if (num475 != -1 && Collision.CanHitLine(base.Center, 0, 0, Main.npc[num475].Center, 0, 0))
							{
								num474 = num475;
							}
							else
							{
								num474 = -1;
							}
						}
						if (num474 != -1)
						{
							Vector2 vector50 = base.DirectionTo(Main.npc[num474].Center);
							if (vector50.Y <= 0.5f && vector50.Y >= -0.5f)
							{
								this.localAI[2] = this.ai[0];
								this.ai[0] = 12f;
								this.ai[1] = (float)num473;
								this.ai[2] = vector50.Y;
								this.localAI[3] = 0f;
								this.direction = ((this.position.X < Main.npc[num474].position.X) ? 1 : -1);
								this.netUpdate = true;
							}
						}
					}
					if (flag59 && this.velocity.Y == 0f && NPCID.Sets.AttackType[this.type] == 2 && NPCID.Sets.AttackAverageChance[this.type] > 0 && Main.rand.Next(NPCID.Sets.AttackAverageChance[this.type] * 2) == 0)
					{
						int num476 = NPCID.Sets.AttackTime[this.type];
						int num477 = (num390 == 1) ? num392 : num391;
						int num478 = (num390 == 1) ? num391 : num392;
						if (num477 != -1 && !Collision.CanHitLine(base.Center, 0, 0, Main.npc[num477].Center, 0, 0))
						{
							if (num478 != -1 && Collision.CanHitLine(base.Center, 0, 0, Main.npc[num478].Center, 0, 0))
							{
								num477 = num478;
							}
							else
							{
								num477 = -1;
							}
						}
						if (num477 != -1)
						{
							this.localAI[2] = this.ai[0];
							this.ai[0] = 14f;
							this.ai[1] = (float)num476;
							this.ai[2] = 0f;
							this.localAI[3] = 0f;
							this.direction = ((this.position.X < Main.npc[num477].position.X) ? 1 : -1);
							this.netUpdate = true;
						}
						else if (this.type == 20)
						{
							this.localAI[2] = this.ai[0];
							this.ai[0] = 14f;
							this.ai[1] = (float)num476;
							this.ai[2] = 0f;
							this.localAI[3] = 0f;
							this.netUpdate = true;
						}
					}
					if (flag59 && this.velocity.Y == 0f && NPCID.Sets.AttackType[this.type] == 3 && NPCID.Sets.AttackAverageChance[this.type] > 0 && Main.rand.Next(NPCID.Sets.AttackAverageChance[this.type] * 2) == 0)
					{
						int num479 = NPCID.Sets.AttackTime[this.type];
						int num480 = (num390 == 1) ? num392 : num391;
						int num481 = (num390 == 1) ? num391 : num392;
						if (num480 != -1 && !Collision.CanHit(base.Center, 0, 0, Main.npc[num480].Center, 0, 0))
						{
							if (num481 != -1 && Collision.CanHit(base.Center, 0, 0, Main.npc[num481].Center, 0, 0))
							{
								num480 = num481;
							}
							else
							{
								num480 = -1;
							}
						}
						if (num480 != -1)
						{
							this.localAI[2] = this.ai[0];
							this.ai[0] = 15f;
							this.ai[1] = (float)num479;
							this.ai[2] = 0f;
							this.localAI[3] = 0f;
							this.direction = ((this.position.X < Main.npc[num480].position.X) ? 1 : -1);
							this.netUpdate = true;
							return;
						}
					}
				}
			}
			else if (this.aiStyle == 8)
			{
				this.TargetClosest(true);
				this.velocity.X = this.velocity.X * 0.93f;
				if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
				{
					this.velocity.X = 0f;
				}
				if (this.ai[0] == 0f)
				{
					this.ai[0] = 500f;
				}
				if (this.type == 172)
				{
					if (this.alpha < 255)
					{
						this.alpha++;
					}
					if (this.justHit)
					{
						this.alpha = 0;
					}
				}
				if (this.ai[2] != 0f && this.ai[3] != 0f)
				{
					if (this.type == 172)
					{
						this.alpha = 255;
					}
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
					for (int num482 = 0; num482 < 50; num482++)
					{
						if (this.type == 29 || this.type == 45)
						{
							int num483 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, 0f, 0f, 100, default(Color), (float)Main.rand.Next(1, 3));
							Main.dust[num483].velocity *= 3f;
							if (Main.dust[num483].scale > 1f)
							{
								Main.dust[num483].noGravity = true;
							}
						}
						else if (this.type == 32)
						{
							int num484 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 172, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num484].velocity *= 3f;
							Main.dust[num484].noGravity = true;
						}
						else if (this.type == 283 || this.type == 284)
						{
							int num485 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 173, 0f, 0f, 0, default(Color), 1f);
							Main.dust[num485].velocity *= 2f;
							Main.dust[num485].scale = 1.4f;
						}
						else if (this.type == 285 || this.type == 286)
						{
							int num486 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 174, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num486].velocity *= 3f;
							Main.dust[num486].noGravity = true;
						}
						else if (this.type == 281 || this.type == 282)
						{
							int num487 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 175, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num487].velocity *= 3f;
							Main.dust[num487].noGravity = true;
						}
						else if (this.type == 172)
						{
							int num488 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 106, 0f, 0f, 100, default(Color), 2.5f);
							Main.dust[num488].velocity *= 3f;
							Main.dust[num488].noGravity = true;
						}
						else if (this.type == 533)
						{
							int num489 = Dust.NewDust(this.position, this.width, this.height, 27, 0f, 0f, 100, default(Color), 2.5f);
							Main.dust[num489].velocity *= 3f;
							Main.dust[num489].noGravity = true;
						}
						else
						{
							int num490 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
							Main.dust[num490].velocity *= 3f;
							Main.dust[num490].noGravity = true;
						}
					}
					this.position.X = this.ai[2] * 16f - (float)(this.width / 2) + 8f;
					this.position.Y = this.ai[3] * 16f - (float)this.height;
					this.velocity.X = 0f;
					this.velocity.Y = 0f;
					this.ai[2] = 0f;
					this.ai[3] = 0f;
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
					for (int num491 = 0; num491 < 50; num491++)
					{
						if (this.type == 29 || this.type == 45)
						{
							int num492 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, 0f, 0f, 100, default(Color), (float)Main.rand.Next(1, 3));
							Main.dust[num492].velocity *= 3f;
							if (Main.dust[num492].scale > 1f)
							{
								Main.dust[num492].noGravity = true;
							}
						}
						else if (this.type == 32)
						{
							int num493 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 172, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num493].velocity *= 3f;
							Main.dust[num493].noGravity = true;
						}
						else if (this.type == 172)
						{
							int num494 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 106, 0f, 0f, 100, default(Color), 2.5f);
							Main.dust[num494].velocity *= 3f;
							Main.dust[num494].noGravity = true;
						}
						else if (this.type == 283 || this.type == 284)
						{
							int num495 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 173, 0f, 0f, 0, default(Color), 1f);
							Main.dust[num495].velocity *= 2f;
							Main.dust[num495].scale = 1.4f;
						}
						else if (this.type == 285 || this.type == 286)
						{
							int num496 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 174, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num496].velocity *= 3f;
							Main.dust[num496].noGravity = true;
						}
						else if (this.type == 281 || this.type == 282)
						{
							int num497 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 175, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num497].velocity *= 3f;
							Main.dust[num497].noGravity = true;
						}
						else if (this.type == 533)
						{
							int num498 = Dust.NewDust(this.position, this.width, this.height, 27, 0f, 0f, 100, default(Color), 2.5f);
							Main.dust[num498].velocity *= 3f;
							Main.dust[num498].noGravity = true;
						}
						else
						{
							int num499 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
							Main.dust[num499].velocity *= 3f;
							Main.dust[num499].noGravity = true;
						}
					}
				}
				this.ai[0] += 1f;
				if (this.type == 283 || this.type == 284)
				{
					if (this.ai[0] == 50f || this.ai[0] == 100f || this.ai[0] == 150f || this.ai[0] == 200f || this.ai[0] == 250f)
					{
						this.ai[1] = 30f;
						this.netUpdate = true;
					}
					if (this.ai[0] >= 400f)
					{
						this.ai[0] = 700f;
					}
				}
				else if (this.type == 172)
				{
					if (this.ai[0] == 75f || this.ai[0] == 150f || this.ai[0] == 225f || this.ai[0] == 300f || this.ai[0] == 375f || this.ai[0] == 450f)
					{
						this.ai[1] = 30f;
						this.netUpdate = true;
					}
				}
				else if (this.type == 533)
				{
					if (this.ai[0] == 180f)
					{
						this.ai[1] = 181f;
						this.netUpdate = true;
					}
				}
				else if (this.type == 281 || this.type == 282)
				{
					if (this.ai[0] == 20f || this.ai[0] == 40f || this.ai[0] == 60f || this.ai[0] == 120f || this.ai[0] == 140f || this.ai[0] == 160f || this.ai[0] == 220f || this.ai[0] == 240f || this.ai[0] == 260f)
					{
						this.ai[1] = 30f;
						this.netUpdate = true;
					}
					if (this.ai[0] >= 460f)
					{
						this.ai[0] = 700f;
					}
				}
				else if (this.ai[0] == 100f || this.ai[0] == 200f || this.ai[0] == 300f)
				{
					this.ai[1] = 30f;
					this.netUpdate = true;
				}
				if ((this.type == 285 || this.type == 286) && this.ai[0] > 400f)
				{
					this.ai[0] = 650f;
				}
				if (this.type == 533 && this.ai[0] >= 360f)
				{
					this.ai[0] = 650f;
				}
				if (this.ai[0] >= 650f && Main.netMode != 1)
				{
					this.ai[0] = 1f;
					int num500 = (int)Main.player[this.target].position.X / 16;
					int num501 = (int)Main.player[this.target].position.Y / 16;
					int num502 = (int)this.position.X / 16;
					int num503 = (int)this.position.Y / 16;
					int num504 = 20;
					int num505 = 0;
					bool flag64 = false;
					if (Math.Abs(this.position.X - Main.player[this.target].position.X) + Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000f)
					{
						num505 = 100;
						flag64 = true;
					}
					while (!flag64 && num505 < 100)
					{
						num505++;
						int num506 = Main.rand.Next(num500 - num504, num500 + num504);
						int num507 = Main.rand.Next(num501 - num504, num501 + num504);
						for (int num508 = num507; num508 < num501 + num504; num508++)
						{
							if ((num508 < num501 - 4 || num508 > num501 + 4 || num506 < num500 - 4 || num506 > num500 + 4) && (num508 < num503 - 1 || num508 > num503 + 1 || num506 < num502 - 1 || num506 > num502 + 1) && Main.tile[num506, num508].nactive())
							{
								bool flag65 = true;
								if ((this.type == 32 || (this.type >= 281 && this.type <= 286)) && !Main.wallDungeon[(int)Main.tile[num506, num508 - 1].wall])
								{
									flag65 = false;
								}
								else if (Main.tile[num506, num508 - 1].lava())
								{
									flag65 = false;
								}
								if (flag65 && Main.tileSolid[(int)Main.tile[num506, num508].type] && !Collision.SolidTiles(num506 - 1, num506 + 1, num508 - 4, num508 - 1))
								{
									this.ai[1] = 20f;
									this.ai[2] = (float)num506;
									this.ai[3] = (float)num508;
									flag64 = true;
									break;
								}
							}
						}
					}
					this.netUpdate = true;
				}
				if (this.ai[1] > 0f)
				{
					this.ai[1] -= 1f;
					if (this.type == 533)
					{
						if (this.ai[1] % 30f == 0f && this.ai[1] / 30f < 5f)
						{
							Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
							if (Main.netMode != 1)
							{
								Point point3 = base.Center.ToTileCoordinates();
								Point point4 = Main.player[this.target].Center.ToTileCoordinates();
								Vector2 vector51 = Main.player[this.target].Center - base.Center;
								int num509 = 6;
								int num510 = 6;
								int num511 = 0;
								int num512 = 2;
								int num513 = 0;
								bool flag66 = false;
								if (vector51.Length() > 2000f)
								{
									flag66 = true;
								}
								while (!flag66)
								{
									if (num513 >= 50)
									{
										break;
									}
									num513++;
									int num514 = Main.rand.Next(point4.X - num509, point4.X + num509 + 1);
									int num515 = Main.rand.Next(point4.Y - num509, point4.Y + num509 + 1);
									if ((num515 < point4.Y - num511 || num515 > point4.Y + num511 || num514 < point4.X - num511 || num514 > point4.X + num511) && (num515 < point3.Y - num510 || num515 > point3.Y + num510 || num514 < point3.X - num510 || num514 > point3.X + num510) && !Main.tile[num514, num515].nactive())
									{
										bool flag67 = true;
										if (flag67 && Main.tile[num514, num515].lava())
										{
											flag67 = false;
										}
										if (flag67 && Collision.SolidTiles(num514 - num512, num514 + num512, num515 - num512, num515 + num512))
										{
											flag67 = false;
										}
										if (flag67)
										{
											Projectile.NewProjectile((float)(num514 * 16 + 8), (float)(num515 * 16 + 8), 0f, 0f, 596, 0, 1f, Main.myPlayer, (float)this.target, 0f);
											break;
										}
									}
								}
							}
						}
					}
					else if (this.ai[1] == 25f)
					{
						if (this.type >= 281 && this.type <= 286)
						{
							if (Main.netMode != 1)
							{
								float num516 = 6f;
								if (this.type == 285 || this.type == 286)
								{
									num516 = 8f;
								}
								if (this.type == 281 || this.type == 282)
								{
									num516 = 4f;
								}
								Vector2 vector52 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y);
								float num517 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector52.X;
								float num518 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector52.Y;
								if (this.type == 283 || this.type == 284)
								{
									num517 += (float)Main.rand.Next(-30, 31);
									num518 += (float)Main.rand.Next(-30, 31);
									num517 -= Main.player[this.target].velocity.X * 10f;
									num518 -= Main.player[this.target].velocity.Y * 10f;
								}
								float num519 = (float)Math.Sqrt((double)(num517 * num517 + num518 * num518));
								num519 = num516 / num519;
								num517 *= num519;
								num518 *= num519;
								int num520 = 30;
								int num521 = 290;
								if (this.type == 285 || this.type == 286)
								{
									num521 = 291;
									num520 = 40;
								}
								if (this.type == 281 || this.type == 282)
								{
									num521 = 293;
									num520 = 40;
								}
								if (Main.expertMode)
								{
									num520 = (int)((double)num520 * 0.8);
								}
								int num522 = Projectile.NewProjectile(vector52.X, vector52.Y, num517, num518, num521, num520, 0f, Main.myPlayer, 0f, 0f);
								Main.projectile[num522].timeLeft = 300;
								if (num521 == 291)
								{
									Main.projectile[num522].ai[0] = Main.player[this.target].Center.X;
									Main.projectile[num522].ai[1] = Main.player[this.target].Center.Y;
									Main.projectile[num522].netUpdate = true;
								}
								this.localAI[0] = 0f;
							}
						}
						else
						{
							if (this.type != 172)
							{
								Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
							}
							if (Main.netMode != 1)
							{
								if (this.type == 29 || this.type == 45)
								{
									NPC.NewNPC((int)this.position.X + this.width / 2, (int)this.position.Y - 8, 30, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (this.type == 32)
								{
									NPC.NewNPC((int)this.position.X + this.width / 2, (int)this.position.Y - 8, 33, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (this.type == 172)
								{
									float num523 = 10f;
									Vector2 vector53 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num524 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector53.X + (float)Main.rand.Next(-10, 11);
									float num525 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector53.Y + (float)Main.rand.Next(-10, 11);
									float num526 = (float)Math.Sqrt((double)(num524 * num524 + num525 * num525));
									num526 = num523 / num526;
									num524 *= num526;
									num525 *= num526;
									int num527 = 40;
									int num528 = 129;
									int num529 = Projectile.NewProjectile(vector53.X, vector53.Y, num524, num525, num528, num527, 0f, Main.myPlayer, 0f, 0f);
									Main.projectile[num529].timeLeft = 300;
									this.localAI[0] = 0f;
								}
								else
								{
									NPC.NewNPC((int)this.position.X + this.width / 2 + this.direction * 8, (int)this.position.Y + 20, 25, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
						}
					}
				}
				if (this.type == 29 || this.type == 45)
				{
					if (Main.rand.Next(5) == 0)
					{
						int num530 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 27, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 1.5f);
						Main.dust[num530].noGravity = true;
						Dust expr_1F693_cp_0 = Main.dust[num530];
						expr_1F693_cp_0.velocity.X = expr_1F693_cp_0.velocity.X * 0.5f;
						Main.dust[num530].velocity.Y = -2f;
						return;
					}
				}
				else if (this.type == 32)
				{
					if (Main.rand.Next(3) != 0)
					{
						int num531 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 172, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 0.9f);
						Main.dust[num531].noGravity = true;
						Dust expr_1F76C_cp_0 = Main.dust[num531];
						expr_1F76C_cp_0.velocity.X = expr_1F76C_cp_0.velocity.X * 0.3f;
						Dust expr_1F78C_cp_0 = Main.dust[num531];
						expr_1F78C_cp_0.velocity.Y = expr_1F78C_cp_0.velocity.Y * 0.2f;
						Dust expr_1F7AC_cp_0 = Main.dust[num531];
						expr_1F7AC_cp_0.velocity.Y = expr_1F7AC_cp_0.velocity.Y - 1f;
						return;
					}
				}
				else
				{
					if (this.type == 172)
					{
						int num532 = 1;
						if (this.alpha == 255)
						{
							num532 = 2;
						}
						for (int num533 = 0; num533 < num532; num533++)
						{
							if (Main.rand.Next(255) > 255 - this.alpha)
							{
								int num534 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 106, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 1.2f);
								Main.dust[num534].noGravity = true;
								Dust expr_1F89D_cp_0 = Main.dust[num534];
								expr_1F89D_cp_0.velocity.X = expr_1F89D_cp_0.velocity.X * (0.1f + (float)Main.rand.Next(30) * 0.01f);
								Dust expr_1F8D1_cp_0 = Main.dust[num534];
								expr_1F8D1_cp_0.velocity.Y = expr_1F8D1_cp_0.velocity.Y * (0.1f + (float)Main.rand.Next(30) * 0.01f);
								Main.dust[num534].scale *= 1f + (float)Main.rand.Next(6) * 0.1f;
							}
						}
						return;
					}
					if (this.type == 283 || this.type == 284)
					{
						if (Main.rand.Next(2) == 0)
						{
							int num535 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 173, 0f, 0f, 0, default(Color), 1f);
							Dust expr_1F9D1_cp_0 = Main.dust[num535];
							expr_1F9D1_cp_0.velocity.X = expr_1F9D1_cp_0.velocity.X * 0.5f;
							Dust expr_1F9F1_cp_0 = Main.dust[num535];
							expr_1F9F1_cp_0.velocity.Y = expr_1F9F1_cp_0.velocity.Y * 0.5f;
							return;
						}
					}
					else if (this.type == 285 || this.type == 286)
					{
						if (Main.rand.Next(2) == 0)
						{
							int num536 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 174, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 1f);
							Main.dust[num536].noGravity = true;
							Main.dust[num536].velocity *= 0.4f;
							Dust expr_1FAE0_cp_0 = Main.dust[num536];
							expr_1FAE0_cp_0.velocity.Y = expr_1FAE0_cp_0.velocity.Y - 0.7f;
							return;
						}
					}
					else if (this.type == 281 || this.type == 282)
					{
						if (Main.rand.Next(2) == 0)
						{
							int num537 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 175, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 0.1f);
							Main.dust[num537].noGravity = true;
							Main.dust[num537].velocity *= 0.5f;
							Main.dust[num537].fadeIn = 1.2f;
							return;
						}
					}
					else
					{
						if (this.type == 533)
						{
							Lighting.AddLight(base.Top, 0.6f, 0.6f, 0.3f);
							return;
						}
						if (Main.rand.Next(2) == 0)
						{
							int num538 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2f);
							Main.dust[num538].noGravity = true;
							Dust expr_1FC9A_cp_0 = Main.dust[num538];
							expr_1FC9A_cp_0.velocity.X = expr_1FC9A_cp_0.velocity.X * 1f;
							Dust expr_1FCBA_cp_0 = Main.dust[num538];
							expr_1FCBA_cp_0.velocity.Y = expr_1FCBA_cp_0.velocity.Y * 1f;
							return;
						}
					}
				}
			}
			else if (this.aiStyle == 9)
			{
				if (this.type == 516)
				{
					if (this.alpha < 220)
					{
						this.alpha += 40;
					}
					if (this.ai[0] == 0f)
					{
						this.ai[0] = 1f;
						Vector2 vector54 = Main.player[this.target].Center - base.Center;
						vector54.Normalize();
						if (vector54.HasNaNs())
						{
							vector54 = -Vector2.UnitY;
						}
						vector54 = vector54.RotatedByRandom(1.5707963705062866).RotatedBy(-0.78539818525314331, default(Vector2));
						if (vector54.Y > 0.2f)
						{
							vector54.Y = 0.2f;
						}
						this.velocity = vector54 * (6f + Main.rand.NextFloat() * 4f);
					}
					if (this.collideX || this.collideY || base.Distance(Main.player[this.target].Center) < 20f)
					{
						this.StrikeNPCNoInteraction(9999, 0f, this.direction, false, false, false);
					}
				}
				if (this.target == 255)
				{
					this.TargetClosest(true);
					float num539 = 6f;
					if (this.type == 25)
					{
						num539 = 5f;
					}
					if (this.type == 112)
					{
						num539 = 7f;
					}
					Vector2 vector55 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num540 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector55.X;
					float num541 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector55.Y;
					float num542 = (float)Math.Sqrt((double)(num540 * num540 + num541 * num541));
					num542 = num539 / num542;
					this.velocity.X = num540 * num542;
					this.velocity.Y = num541 * num542;
				}
				if (this.type == 112)
				{
					this.damage = ((this.ai[1] == 1f) ? 65 : this.defDamage);
					this.ai[0] += 1f;
					if (this.ai[0] > 3f)
					{
						this.ai[0] = 3f;
					}
					if (this.ai[0] == 2f)
					{
						this.position += this.velocity;
						Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 9);
						for (int num543 = 0; num543 < 20; num543++)
						{
							int num544 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 18, 0f, 0f, 100, default(Color), 1.8f);
							Main.dust[num544].velocity *= 1.3f;
							Main.dust[num544].velocity += this.velocity;
							Main.dust[num544].noGravity = true;
						}
					}
				}
				if (this.type == 112 && Collision.SolidCollision(this.position, this.width, this.height))
				{
					int arg_20104_0 = Main.netMode;
					this.StrikeNPCNoInteraction(999, 0f, 0, false, false, false);
				}
				if (this.timeLeft > 100)
				{
					this.timeLeft = 100;
				}
				if (this.type != 516)
				{
					for (int num545 = 0; num545 < 2; num545++)
					{
						if (this.type == 30)
						{
							this.alpha = 255;
							for (int num546 = 0; num546 < 2; num546++)
							{
								int num547 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 27, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 1.3f);
								Main.dust[num547].noGravity = true;
								Main.dust[num547].velocity *= 0.3f;
								Dust expr_20308_cp_0 = Main.dust[num547];
								expr_20308_cp_0.velocity.X = expr_20308_cp_0.velocity.X - this.velocity.X * 0.2f;
								Dust expr_20334_cp_0 = Main.dust[num547];
								expr_20334_cp_0.velocity.Y = expr_20334_cp_0.velocity.Y - this.velocity.Y * 0.2f;
							}
						}
						else if (this.type == 33)
						{
							for (int num548 = 0; num548 < 3; num548++)
							{
								float num549 = this.velocity.X / 3f * (float)num545;
								float num550 = this.velocity.Y / 3f * (float)num545;
								int num551 = 2;
								int num552 = Dust.NewDust(new Vector2(this.position.X + (float)num551, this.position.Y + (float)num551), this.width - num551 * 2, this.height - num551 * 2, 172, 0f, 0f, 100, default(Color), 1.2f);
								Main.dust[num552].noGravity = true;
								Main.dust[num552].velocity *= 0.1f;
								Main.dust[num552].velocity += this.velocity * 0.5f;
								Dust expr_20492_cp_0 = Main.dust[num552];
								expr_20492_cp_0.position.X = expr_20492_cp_0.position.X - num549;
								Dust expr_204B1_cp_0 = Main.dust[num552];
								expr_204B1_cp_0.position.Y = expr_204B1_cp_0.position.Y - num550;
							}
							if (Main.rand.Next(5) == 0)
							{
								int num553 = 2;
								int num554 = Dust.NewDust(new Vector2(this.position.X + (float)num553, this.position.Y + (float)num553), this.width - num553 * 2, this.height - num553 * 2, 172, 0f, 0f, 100, default(Color), 0.6f);
								Main.dust[num554].velocity *= 0.25f;
								Main.dust[num554].velocity += this.velocity * 0.5f;
							}
						}
						else if (this.type == 112)
						{
							int num555 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 18, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 80, default(Color), 1.3f);
							Main.dust[num555].velocity *= 0.3f;
							Main.dust[num555].noGravity = true;
						}
						else
						{
							Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 1f, 0.3f, 0.1f);
							int num556 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2f);
							Main.dust[num556].noGravity = true;
							Dust expr_2072F_cp_0 = Main.dust[num556];
							expr_2072F_cp_0.velocity.X = expr_2072F_cp_0.velocity.X * 0.3f;
							Dust expr_2074F_cp_0 = Main.dust[num556];
							expr_2074F_cp_0.velocity.Y = expr_2074F_cp_0.velocity.Y * 0.3f;
						}
					}
					this.rotation += 0.4f * (float)this.direction;
					return;
				}
				this.rotation += 0.1f * (float)this.direction;
				float num557 = 15f;
				float num558 = 0.0833333358f;
				Vector2 center4 = base.Center;
				Vector2 center5 = Main.player[this.target].Center;
				Vector2 vec3 = center5 - center4;
				vec3.Normalize();
				if (vec3.HasNaNs())
				{
					vec3 = new Vector2((float)this.direction, 0f);
				}
				this.velocity = (this.velocity * (num557 - 1f) + vec3 * (this.velocity.Length() + num558)) / num557;
				if (this.velocity.Length() < 6f)
				{
					this.velocity *= 1.05f;
					return;
				}
			}
			else if (this.aiStyle == 10)
			{
				float num559 = 1f;
				float num560 = 0.011f;
				this.TargetClosest(true);
				Vector2 vector56 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float num561 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector56.X;
				float num562 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector56.Y;
				float num563 = (float)Math.Sqrt((double)(num561 * num561 + num562 * num562));
				float num564 = num563;
				this.ai[1] += 1f;
				if (this.ai[1] > 600f)
				{
					num560 *= 8f;
					num559 = 4f;
					if (this.ai[1] > 650f)
					{
						this.ai[1] = 0f;
					}
				}
				else if (num564 < 250f)
				{
					this.ai[0] += 0.9f;
					if (this.ai[0] > 0f)
					{
						this.velocity.Y = this.velocity.Y + 0.019f;
					}
					else
					{
						this.velocity.Y = this.velocity.Y - 0.019f;
					}
					if (this.ai[0] < -100f || this.ai[0] > 100f)
					{
						this.velocity.X = this.velocity.X + 0.019f;
					}
					else
					{
						this.velocity.X = this.velocity.X - 0.019f;
					}
					if (this.ai[0] > 200f)
					{
						this.ai[0] = -200f;
					}
				}
				if (num564 > 350f)
				{
					num559 = 5f;
					num560 = 0.3f;
				}
				else if (num564 > 300f)
				{
					num559 = 3f;
					num560 = 0.2f;
				}
				else if (num564 > 250f)
				{
					num559 = 1.5f;
					num560 = 0.1f;
				}
				num563 = num559 / num563;
				num561 *= num563;
				num562 *= num563;
				if (Main.player[this.target].dead)
				{
					num561 = (float)this.direction * num559 / 2f;
					num562 = -num559 / 2f;
				}
				if (this.velocity.X < num561)
				{
					this.velocity.X = this.velocity.X + num560;
				}
				else if (this.velocity.X > num561)
				{
					this.velocity.X = this.velocity.X - num560;
				}
				if (this.velocity.Y < num562)
				{
					this.velocity.Y = this.velocity.Y + num560;
				}
				else if (this.velocity.Y > num562)
				{
					this.velocity.Y = this.velocity.Y - num560;
				}
				if (num561 > 0f)
				{
					this.spriteDirection = -1;
					this.rotation = (float)Math.Atan2((double)num562, (double)num561);
				}
				if (num561 < 0f)
				{
					this.spriteDirection = 1;
					this.rotation = (float)Math.Atan2((double)num562, (double)num561) + 3.14f;
				}
				if (this.type == 289)
				{
					if (this.justHit)
					{
						this.ai[2] = 0f;
						this.ai[3] = 0f;
					}
					vector56 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					num561 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector56.X;
					num562 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector56.Y;
					num563 = (float)Math.Sqrt((double)(num561 * num561 + num562 * num562));
					if (num563 > 500f)
					{
						this.ai[2] = 0f;
						this.ai[3] = 0f;
						return;
					}
					this.ai[2] += 1f;
					if (this.ai[3] == 0f)
					{
						if (this.ai[2] > 120f)
						{
							this.ai[2] = 0f;
							this.ai[3] = 1f;
							this.netUpdate = true;
							return;
						}
					}
					else
					{
						if (this.ai[2] > 40f)
						{
							this.ai[3] = 0f;
						}
						if (Main.netMode != 1 && this.ai[2] == 20f)
						{
							float num565 = 6f;
							int num566 = 25;
							int num567 = 299;
							num563 = num565 / num563;
							num561 *= num563;
							num562 *= num563;
							Projectile.NewProjectile(vector56.X, vector56.Y, num561, num562, num567, num566, 0f, Main.myPlayer, 0f, 0f);
							return;
						}
					}
				}
			}
			else if (this.aiStyle == 11)
			{
				this.defense = this.defDefense;
				if (this.ai[0] == 0f && Main.netMode != 1)
				{
					this.TargetClosest(true);
					this.ai[0] = 1f;
					if (this.type != 68)
					{
						int num568 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 36, this.whoAmI, 0f, 0f, 0f, 0f, 255);
						Main.npc[num568].ai[0] = -1f;
						Main.npc[num568].ai[1] = (float)this.whoAmI;
						Main.npc[num568].target = this.target;
						Main.npc[num568].netUpdate = true;
						num568 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 36, this.whoAmI, 0f, 0f, 0f, 0f, 255);
						Main.npc[num568].ai[0] = 1f;
						Main.npc[num568].ai[1] = (float)this.whoAmI;
						Main.npc[num568].ai[3] = 150f;
						Main.npc[num568].target = this.target;
						Main.npc[num568].netUpdate = true;
					}
				}
				if (this.type == 68 && this.ai[1] != 3f && this.ai[1] != 2f)
				{
					Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
					this.ai[1] = 2f;
				}
				if (Main.player[this.target].dead || Math.Abs(this.position.X - Main.player[this.target].position.X) > 2000f || Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000f)
				{
					this.TargetClosest(true);
					if (Main.player[this.target].dead || Math.Abs(this.position.X - Main.player[this.target].position.X) > 2000f || Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000f)
					{
						this.ai[1] = 3f;
					}
				}
				if (Main.dayTime && this.ai[1] != 3f && this.ai[1] != 2f)
				{
					this.ai[1] = 2f;
					Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
				}
				int num569 = 0;
				if (Main.expertMode)
				{
					for (int num570 = 0; num570 < 200; num570++)
					{
						if (Main.npc[num570].active && Main.npc[num570].type == this.type + 1)
						{
							num569++;
						}
					}
					this.defense += num569 * 25;
					if ((num569 < 2 || (double)this.life < (double)this.lifeMax * 0.75) && this.ai[1] == 0f)
					{
						float num571 = 80f;
						if (num569 == 0)
						{
							num571 /= 2f;
						}
						if (Main.netMode != 1 && this.ai[2] % num571 == 0f)
						{
							Vector2 vector57 = base.Center;
							float num572 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector57.X;
							float num573 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector57.Y;
							Math.Sqrt((double)(num572 * num572 + num573 * num573));
							if (Collision.CanHit(vector57, 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
							{
								float num574 = 3f;
								if (num569 == 0)
								{
									num574 += 2f;
								}
								float num575 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector57.X + (float)Main.rand.Next(-20, 21);
								float num576 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector57.Y + (float)Main.rand.Next(-20, 21);
								float num577 = (float)Math.Sqrt((double)(num575 * num575 + num576 * num576));
								num577 = num574 / num577;
								num575 *= num577;
								num576 *= num577;
								Vector2 value12 = new Vector2(num575 * 1f + (float)Main.rand.Next(-50, 51) * 0.01f, num576 * 1f + (float)Main.rand.Next(-50, 51) * 0.01f);
								value12.Normalize();
								value12 *= num574;
								value12 += this.velocity;
								num575 = value12.X;
								num576 = value12.Y;
								int num578 = 17;
								int num579 = 270;
								vector57 += value12 * 5f;
								int num580 = Projectile.NewProjectile(vector57.X, vector57.Y, num575, num576, num579, num578, 0f, Main.myPlayer, -1f, 0f);
								Main.projectile[num580].timeLeft = 300;
							}
						}
					}
				}
				if (this.ai[1] == 0f)
				{
					this.damage = this.defDamage;
					this.ai[2] += 1f;
					if (this.ai[2] >= 800f)
					{
						this.ai[2] = 0f;
						this.ai[1] = 1f;
						this.TargetClosest(true);
						this.netUpdate = true;
					}
					this.rotation = this.velocity.X / 15f;
					float num581 = 0.02f;
					float num582 = 2f;
					float num583 = 0.05f;
					float num584 = 8f;
					if (Main.expertMode)
					{
						num581 = 0.03f;
						num582 = 4f;
						num583 = 0.07f;
						num584 = 9.5f;
					}
					if (this.position.Y > Main.player[this.target].position.Y - 250f)
					{
						if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y * 0.98f;
						}
						this.velocity.Y = this.velocity.Y - num581;
						if (this.velocity.Y > num582)
						{
							this.velocity.Y = num582;
						}
					}
					else if (this.position.Y < Main.player[this.target].position.Y - 250f)
					{
						if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y * 0.98f;
						}
						this.velocity.Y = this.velocity.Y + num581;
						if (this.velocity.Y < -num582)
						{
							this.velocity.Y = -num582;
						}
					}
					if (this.position.X + (float)(this.width / 2) > Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))
					{
						if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X * 0.98f;
						}
						this.velocity.X = this.velocity.X - num583;
						if (this.velocity.X > num584)
						{
							this.velocity.X = num584;
						}
					}
					if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))
					{
						if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X * 0.98f;
						}
						this.velocity.X = this.velocity.X + num583;
						if (this.velocity.X < -num584)
						{
							this.velocity.X = -num584;
						}
					}
				}
				else if (this.ai[1] == 1f)
				{
					this.defense -= 10;
					this.ai[2] += 1f;
					if (this.ai[2] == 2f)
					{
						Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
					}
					if (this.ai[2] >= 400f)
					{
						this.ai[2] = 0f;
						this.ai[1] = 0f;
					}
					this.rotation += (float)this.direction * 0.3f;
					Vector2 vector58 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num585 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector58.X;
					float num586 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector58.Y;
					float num587 = (float)Math.Sqrt((double)(num585 * num585 + num586 * num586));
					float num588 = 1.5f;
					if (Main.expertMode)
					{
						this.damage = (int)((double)this.defDamage * 1.3);
						num588 = 4f;
						if (num587 > 150f)
						{
							num588 *= 1.05f;
						}
						if (num587 > 200f)
						{
							num588 *= 1.1f;
						}
						if (num587 > 250f)
						{
							num588 *= 1.1f;
						}
						if (num587 > 300f)
						{
							num588 *= 1.1f;
						}
						if (num587 > 350f)
						{
							num588 *= 1.1f;
						}
						if (num587 > 400f)
						{
							num588 *= 1.1f;
						}
						if (num587 > 450f)
						{
							num588 *= 1.1f;
						}
						if (num587 > 500f)
						{
							num588 *= 1.1f;
						}
						if (num587 > 550f)
						{
							num588 *= 1.1f;
						}
						if (num587 > 600f)
						{
							num588 *= 1.1f;
						}
						if (num569 == 0)
						{
							num588 *= 1.2f;
						}
						else if (num569 == 1)
						{
							num588 *= 1.1f;
						}
					}
					num587 = num588 / num587;
					this.velocity.X = num585 * num587;
					this.velocity.Y = num586 * num587;
				}
				else if (this.ai[1] == 2f)
				{
					this.damage = 1000;
					this.defense = 9999;
					this.rotation += (float)this.direction * 0.3f;
					Vector2 vector59 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num589 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector59.X;
					float num590 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector59.Y;
					float num591 = (float)Math.Sqrt((double)(num589 * num589 + num590 * num590));
					num591 = 8f / num591;
					this.velocity.X = num589 * num591;
					this.velocity.Y = num590 * num591;
				}
				else if (this.ai[1] == 3f)
				{
					this.velocity.Y = this.velocity.Y + 0.1f;
					if (this.velocity.Y < 0f)
					{
						this.velocity.Y = this.velocity.Y * 0.95f;
					}
					this.velocity.X = this.velocity.X * 0.95f;
					if (this.timeLeft > 50)
					{
						this.timeLeft = 50;
					}
				}
				if (this.ai[1] != 2f && this.ai[1] != 3f && this.type != 68)
				{
					if (num569 == 0 && Main.expertMode)
					{
						return;
					}
					int num592 = Dust.NewDust(new Vector2(this.position.X + (float)(this.width / 2) - 15f - this.velocity.X * 5f, this.position.Y + (float)this.height - 2f), 30, 10, 5, -this.velocity.X * 0.2f, 3f, 0, default(Color), 2f);
					Main.dust[num592].noGravity = true;
					Dust expr_21DBF_cp_0 = Main.dust[num592];
					expr_21DBF_cp_0.velocity.X = expr_21DBF_cp_0.velocity.X * 1.3f;
					Dust expr_21DDF_cp_0 = Main.dust[num592];
					expr_21DDF_cp_0.velocity.X = expr_21DDF_cp_0.velocity.X + this.velocity.X * 0.4f;
					Dust expr_21E0B_cp_0 = Main.dust[num592];
					expr_21E0B_cp_0.velocity.Y = expr_21E0B_cp_0.velocity.Y + (2f + this.velocity.Y);
					for (int num593 = 0; num593 < 2; num593++)
					{
						num592 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 120f), this.width, 60, 5, this.velocity.X, this.velocity.Y, 0, default(Color), 2f);
						Main.dust[num592].noGravity = true;
						Main.dust[num592].velocity -= this.velocity;
						Dust expr_21ECE_cp_0 = Main.dust[num592];
						expr_21ECE_cp_0.velocity.Y = expr_21ECE_cp_0.velocity.Y + 5f;
					}
					return;
				}
			}
			else if (this.aiStyle == 12)
			{
				this.spriteDirection = -(int)this.ai[0];
				if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 11)
				{
					this.ai[2] += 10f;
					if (this.ai[2] > 50f || Main.netMode != 2)
					{
						this.life = -1;
						this.HitEffect(0, 10.0);
						this.active = false;
					}
				}
				if (this.ai[2] == 0f || this.ai[2] == 3f)
				{
					if (Main.npc[(int)this.ai[1]].ai[1] == 3f && this.timeLeft > 10)
					{
						this.timeLeft = 10;
					}
					if (Main.npc[(int)this.ai[1]].ai[1] != 0f)
					{
						if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y - 100f)
						{
							if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.96f;
							}
							this.velocity.Y = this.velocity.Y - 0.07f;
							if (this.velocity.Y > 6f)
							{
								this.velocity.Y = 6f;
							}
						}
						else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 100f)
						{
							if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.96f;
							}
							this.velocity.Y = this.velocity.Y + 0.07f;
							if (this.velocity.Y < -6f)
							{
								this.velocity.Y = -6f;
							}
						}
						if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 120f * this.ai[0])
						{
							if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X * 0.96f;
							}
							this.velocity.X = this.velocity.X - 0.1f;
							if (this.velocity.X > 8f)
							{
								this.velocity.X = 8f;
							}
						}
						if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 120f * this.ai[0])
						{
							if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X * 0.96f;
							}
							this.velocity.X = this.velocity.X + 0.1f;
							if (this.velocity.X < -8f)
							{
								this.velocity.X = -8f;
							}
						}
					}
					else
					{
						this.ai[3] += 1f;
						if (Main.expertMode)
						{
							this.ai[3] += 0.5f;
						}
						if (this.ai[3] >= 300f)
						{
							this.ai[2] += 1f;
							this.ai[3] = 0f;
							this.netUpdate = true;
						}
						if (Main.expertMode)
						{
							if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y + 230f)
							{
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.96f;
								}
								this.velocity.Y = this.velocity.Y - 0.04f;
								if (this.velocity.Y > 3f)
								{
									this.velocity.Y = 3f;
								}
							}
							else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y + 230f)
							{
								if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.96f;
								}
								this.velocity.Y = this.velocity.Y + 0.04f;
								if (this.velocity.Y < -3f)
								{
									this.velocity.Y = -3f;
								}
							}
							if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0])
							{
								if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X * 0.96f;
								}
								this.velocity.X = this.velocity.X - 0.07f;
								if (this.velocity.X > 8f)
								{
									this.velocity.X = 8f;
								}
							}
							if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0])
							{
								if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X * 0.96f;
								}
								this.velocity.X = this.velocity.X + 0.07f;
								if (this.velocity.X < -8f)
								{
									this.velocity.X = -8f;
								}
							}
						}
						if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y + 230f)
						{
							if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.96f;
							}
							this.velocity.Y = this.velocity.Y - 0.04f;
							if (this.velocity.Y > 3f)
							{
								this.velocity.Y = 3f;
							}
						}
						else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y + 230f)
						{
							if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.96f;
							}
							this.velocity.Y = this.velocity.Y + 0.04f;
							if (this.velocity.Y < -3f)
							{
								this.velocity.Y = -3f;
							}
						}
						if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0])
						{
							if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X * 0.96f;
							}
							this.velocity.X = this.velocity.X - 0.07f;
							if (this.velocity.X > 8f)
							{
								this.velocity.X = 8f;
							}
						}
						if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0])
						{
							if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X * 0.96f;
							}
							this.velocity.X = this.velocity.X + 0.07f;
							if (this.velocity.X < -8f)
							{
								this.velocity.X = -8f;
							}
						}
					}
					Vector2 vector60 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num594 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector60.X;
					float num595 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector60.Y;
					Math.Sqrt((double)(num594 * num594 + num595 * num595));
					this.rotation = (float)Math.Atan2((double)num595, (double)num594) + 1.57f;
					return;
				}
				if (this.ai[2] == 1f)
				{
					Vector2 vector61 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num596 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector61.X;
					float num597 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector61.Y;
					float num598 = (float)Math.Sqrt((double)(num596 * num596 + num597 * num597));
					this.rotation = (float)Math.Atan2((double)num597, (double)num596) + 1.57f;
					this.velocity.X = this.velocity.X * 0.95f;
					this.velocity.Y = this.velocity.Y - 0.1f;
					if (Main.expertMode)
					{
						this.velocity.Y = this.velocity.Y - 0.06f;
						if (this.velocity.Y < -13f)
						{
							this.velocity.Y = -13f;
						}
					}
					else if (this.velocity.Y < -8f)
					{
						this.velocity.Y = -8f;
					}
					if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 200f)
					{
						this.TargetClosest(true);
						this.ai[2] = 2f;
						vector61 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						num596 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector61.X;
						num597 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector61.Y;
						num598 = (float)Math.Sqrt((double)(num596 * num596 + num597 * num597));
						if (Main.expertMode)
						{
							num598 = 21f / num598;
						}
						else
						{
							num598 = 18f / num598;
						}
						this.velocity.X = num596 * num598;
						this.velocity.Y = num597 * num598;
						this.netUpdate = true;
						return;
					}
				}
				else if (this.ai[2] == 2f)
				{
					if (this.position.Y > Main.player[this.target].position.Y || this.velocity.Y < 0f)
					{
						this.ai[2] = 3f;
						return;
					}
				}
				else if (this.ai[2] == 4f)
				{
					Vector2 vector62 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num599 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector62.X;
					float num600 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector62.Y;
					float num601 = (float)Math.Sqrt((double)(num599 * num599 + num600 * num600));
					this.rotation = (float)Math.Atan2((double)num600, (double)num599) + 1.57f;
					this.velocity.Y = this.velocity.Y * 0.95f;
					this.velocity.X = this.velocity.X + 0.1f * -this.ai[0];
					if (Main.expertMode)
					{
						this.velocity.X = this.velocity.X + 0.07f * -this.ai[0];
						if (this.velocity.X < -12f)
						{
							this.velocity.X = -12f;
						}
						else if (this.velocity.X > 12f)
						{
							this.velocity.X = 12f;
						}
					}
					else if (this.velocity.X < -8f)
					{
						this.velocity.X = -8f;
					}
					else if (this.velocity.X > 8f)
					{
						this.velocity.X = 8f;
					}
					if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 500f || this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) + 500f)
					{
						this.TargetClosest(true);
						this.ai[2] = 5f;
						vector62 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						num599 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector62.X;
						num600 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector62.Y;
						num601 = (float)Math.Sqrt((double)(num599 * num599 + num600 * num600));
						if (Main.expertMode)
						{
							num601 = 22f / num601;
						}
						else
						{
							num601 = 17f / num601;
						}
						this.velocity.X = num599 * num601;
						this.velocity.Y = num600 * num601;
						this.netUpdate = true;
						return;
					}
				}
				else if (this.ai[2] == 5f && ((this.velocity.X > 0f && this.position.X + (float)(this.width / 2) > Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2)) || (this.velocity.X < 0f && this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))))
				{
					this.ai[2] = 0f;
					return;
				}
			}
			else if (this.aiStyle == 13)
			{
				if (this.ai[0] < 0f || this.ai[0] >= (float)Main.maxTilesX || this.ai[1] < 0f || this.ai[1] >= (float)Main.maxTilesX)
				{
					return;
				}
				if (Main.tile[(int)this.ai[0], (int)this.ai[1]] == null)
				{
					Main.tile[(int)this.ai[0], (int)this.ai[1]] = new Tile();
				}
				if (!Main.tile[(int)this.ai[0], (int)this.ai[1]].active())
				{
					this.life = -1;
					this.HitEffect(0, 10.0);
					this.active = false;
					return;
				}
				FixExploitManEaters.ProtectSpot((int)this.ai[0], (int)this.ai[1]);
				this.TargetClosest(true);
				float num602 = 0.035f;
				float num603 = 150f;
				if (this.type == 43)
				{
					num603 = 250f;
				}
				if (this.type == 101)
				{
					num603 = 175f;
				}
				if (this.type == 259)
				{
					num603 = 100f;
				}
				if (this.type == 175)
				{
					num603 = 500f;
					num602 = 0.05f;
				}
				if (this.type == 260)
				{
					num603 = 350f;
					num602 = 0.15f;
				}
				this.ai[2] += 1f;
				if (this.ai[2] > 300f)
				{
					num603 = (float)((int)((double)num603 * 1.3));
					if (this.ai[2] > 450f)
					{
						this.ai[2] = 0f;
					}
				}
				Vector2 vector63 = new Vector2(this.ai[0] * 16f + 8f, this.ai[1] * 16f + 8f);
				float num604 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - (float)(this.width / 2) - vector63.X;
				float num605 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - (float)(this.height / 2) - vector63.Y;
				float num606 = (float)Math.Sqrt((double)(num604 * num604 + num605 * num605));
				if (num606 > num603)
				{
					num606 = num603 / num606;
					num604 *= num606;
					num605 *= num606;
				}
				if (this.position.X < this.ai[0] * 16f + 8f + num604)
				{
					this.velocity.X = this.velocity.X + num602;
					if (this.velocity.X < 0f && num604 > 0f)
					{
						this.velocity.X = this.velocity.X + num602 * 1.5f;
					}
				}
				else if (this.position.X > this.ai[0] * 16f + 8f + num604)
				{
					this.velocity.X = this.velocity.X - num602;
					if (this.velocity.X > 0f && num604 < 0f)
					{
						this.velocity.X = this.velocity.X - num602 * 1.5f;
					}
				}
				if (this.position.Y < this.ai[1] * 16f + 8f + num605)
				{
					this.velocity.Y = this.velocity.Y + num602;
					if (this.velocity.Y < 0f && num605 > 0f)
					{
						this.velocity.Y = this.velocity.Y + num602 * 1.5f;
					}
				}
				else if (this.position.Y > this.ai[1] * 16f + 8f + num605)
				{
					this.velocity.Y = this.velocity.Y - num602;
					if (this.velocity.Y > 0f && num605 < 0f)
					{
						this.velocity.Y = this.velocity.Y - num602 * 1.5f;
					}
				}
				if (this.type == 43)
				{
					if (this.velocity.X > 3f)
					{
						this.velocity.X = 3f;
					}
					if (this.velocity.X < -3f)
					{
						this.velocity.X = -3f;
					}
					if (this.velocity.Y > 3f)
					{
						this.velocity.Y = 3f;
					}
					if (this.velocity.Y < -3f)
					{
						this.velocity.Y = -3f;
					}
				}
				else if (this.type == 175)
				{
					if (this.velocity.X > 4f)
					{
						this.velocity.X = 4f;
					}
					if (this.velocity.X < -4f)
					{
						this.velocity.X = -4f;
					}
					if (this.velocity.Y > 4f)
					{
						this.velocity.Y = 4f;
					}
					if (this.velocity.Y < -4f)
					{
						this.velocity.Y = -4f;
					}
				}
				else
				{
					if (this.velocity.X > 2f)
					{
						this.velocity.X = 2f;
					}
					if (this.velocity.X < -2f)
					{
						this.velocity.X = -2f;
					}
					if (this.velocity.Y > 2f)
					{
						this.velocity.Y = 2f;
					}
					if (this.velocity.Y < -2f)
					{
						this.velocity.Y = -2f;
					}
				}
				if (this.type == 259 || this.type == 260)
				{
					this.rotation = (float)Math.Atan2((double)num605, (double)num604) + 1.57f;
				}
				else
				{
					if (num604 > 0f)
					{
						this.spriteDirection = 1;
						this.rotation = (float)Math.Atan2((double)num605, (double)num604);
					}
					if (num604 < 0f)
					{
						this.spriteDirection = -1;
						this.rotation = (float)Math.Atan2((double)num605, (double)num604) + 3.14f;
					}
				}
				if (this.collideX)
				{
					this.netUpdate = true;
					this.velocity.X = this.oldVelocity.X * -0.7f;
					if (this.velocity.X > 0f && this.velocity.X < 2f)
					{
						this.velocity.X = 2f;
					}
					if (this.velocity.X < 0f && this.velocity.X > -2f)
					{
						this.velocity.X = -2f;
					}
				}
				if (this.collideY)
				{
					this.netUpdate = true;
					this.velocity.Y = this.oldVelocity.Y * -0.7f;
					if (this.velocity.Y > 0f && this.velocity.Y < 2f)
					{
						this.velocity.Y = 2f;
					}
					if (this.velocity.Y < 0f && this.velocity.Y > -2f)
					{
						this.velocity.Y = -2f;
					}
				}
				if (Main.netMode != 1)
				{
					if (this.type == 101 && !Main.player[this.target].dead)
					{
						if (this.justHit)
						{
							this.localAI[0] = 0f;
						}
						this.localAI[0] += 1f;
						if (this.localAI[0] >= 120f)
						{
							if (!Collision.SolidCollision(this.position, this.width, this.height) && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
							{
								float num607 = 10f;
								vector63 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								num604 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector63.X + (float)Main.rand.Next(-10, 11);
								num605 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector63.Y + (float)Main.rand.Next(-10, 11);
								num606 = (float)Math.Sqrt((double)(num604 * num604 + num605 * num605));
								num606 = num607 / num606;
								num604 *= num606;
								num605 *= num606;
								int num608 = 22;
								if (Main.expertMode)
								{
									num608 = (int)((double)num608 * 0.8);
								}
								int num609 = 96;
								int num610 = Projectile.NewProjectile(vector63.X, vector63.Y, num604, num605, num609, num608, 0f, Main.myPlayer, 0f, 0f);
								Main.projectile[num610].timeLeft = 300;
								this.localAI[0] = 0f;
							}
							else
							{
								this.localAI[0] = 100f;
							}
						}
					}
					if (this.type == 260 && !Main.player[this.target].dead)
					{
						if (this.justHit)
						{
							this.localAI[0] = 0f;
						}
						this.localAI[0] += 1f;
						if (this.localAI[0] >= 150f)
						{
							if (!Collision.SolidCollision(this.position, this.width, this.height))
							{
								float num611 = 14f;
								vector63 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								num604 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector63.X + (float)Main.rand.Next(-10, 11);
								float num612 = Math.Abs(num604 * 0.1f);
								if (num605 > 0f)
								{
									num612 = 0f;
								}
								num605 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector63.Y + (float)Main.rand.Next(-10, 11) - num612;
								num606 = (float)Math.Sqrt((double)(num604 * num604 + num605 * num605));
								num606 = num611 / num606;
								num604 *= num606;
								num605 *= num606;
								int num613 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 261, 0, 0f, 0f, 0f, 0f, 255);
								Main.npc[num613].velocity.X = num604;
								Main.npc[num613].velocity.Y = num605;
								Main.npc[num613].netUpdate = true;
								this.localAI[0] = 0f;
								return;
							}
							this.localAI[0] = 250f;
							return;
						}
					}
				}
			}
			else if (this.aiStyle == 14)
			{
				if (this.type == 60 || this.type == 151)
				{
					int num614 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2f);
					Main.dust[num614].noGravity = true;
				}
				if (this.type == 150 && Main.rand.Next(10) == 0)
				{
					int num615 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 67, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, default(Color), 1.5f);
					Main.dust[num615].noGravity = true;
					Main.dust[num615].velocity *= 0.2f;
					Main.dust[num615].noLight = true;
				}
				this.noGravity = true;
				if (this.collideX)
				{
					this.velocity.X = this.oldVelocity.X * -0.5f;
					if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
					{
						this.velocity.X = 2f;
					}
					if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
					{
						this.velocity.X = -2f;
					}
				}
				if (this.collideY)
				{
					this.velocity.Y = this.oldVelocity.Y * -0.5f;
					if (this.velocity.Y > 0f && this.velocity.Y < 1f)
					{
						this.velocity.Y = 1f;
					}
					if (this.velocity.Y < 0f && this.velocity.Y > -1f)
					{
						this.velocity.Y = -1f;
					}
				}
				if (this.type == 226)
				{
					int direction4 = 1;
					int num616 = 1;
					if (this.velocity.X < 0f)
					{
						direction4 = -1;
					}
					if (this.velocity.Y < 0f)
					{
						num616 = -1;
					}
					this.TargetClosest(true);
					if (!Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						this.direction = direction4;
						this.directionY = num616;
					}
				}
				else
				{
					this.TargetClosest(true);
				}
				if (this.type == 158)
				{
					if ((double)this.position.Y < Main.worldSurface * 16.0 && Main.dayTime && !Main.eclipse)
					{
						this.directionY = -1;
						this.direction *= -1;
					}
					if (this.direction == -1 && this.velocity.X > -7f)
					{
						this.velocity.X = this.velocity.X - 0.2f;
						if (this.velocity.X > 4f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X + 0.05f;
						}
						if (this.velocity.X < -7f)
						{
							this.velocity.X = -7f;
						}
					}
					else if (this.direction == 1 && this.velocity.X < 7f)
					{
						this.velocity.X = this.velocity.X + 0.2f;
						if (this.velocity.X < -4f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
						else if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X - 0.05f;
						}
						if (this.velocity.X > 7f)
						{
							this.velocity.X = 7f;
						}
					}
					if (this.directionY == -1 && this.velocity.Y > -7f)
					{
						this.velocity.Y = this.velocity.Y - 0.2f;
						if (this.velocity.Y > 4f)
						{
							this.velocity.Y = this.velocity.Y - 0.1f;
						}
						else if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.05f;
						}
						if (this.velocity.Y < -7f)
						{
							this.velocity.Y = -7f;
						}
					}
					else if (this.directionY == 1 && this.velocity.Y < 7f)
					{
						this.velocity.Y = this.velocity.Y + 0.2f;
						if (this.velocity.Y < -4f)
						{
							this.velocity.Y = this.velocity.Y + 0.1f;
						}
						else if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.05f;
						}
						if (this.velocity.Y > 7f)
						{
							this.velocity.Y = 7f;
						}
					}
				}
				else if (this.type == 226)
				{
					if (this.direction == -1 && this.velocity.X > -4f)
					{
						this.velocity.X = this.velocity.X - 0.2f;
						if (this.velocity.X > 4f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X + 0.05f;
						}
						if (this.velocity.X < -4f)
						{
							this.velocity.X = -4f;
						}
					}
					else if (this.direction == 1 && this.velocity.X < 4f)
					{
						this.velocity.X = this.velocity.X + 0.2f;
						if (this.velocity.X < -4f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
						else if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X - 0.05f;
						}
						if (this.velocity.X > 4f)
						{
							this.velocity.X = 4f;
						}
					}
					if (this.directionY == -1 && (double)this.velocity.Y > -2.5)
					{
						this.velocity.Y = this.velocity.Y - 0.1f;
						if ((double)this.velocity.Y > 2.5)
						{
							this.velocity.Y = this.velocity.Y - 0.05f;
						}
						else if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.03f;
						}
						if ((double)this.velocity.Y < -2.5)
						{
							this.velocity.Y = -2.5f;
						}
					}
					else if (this.directionY == 1 && (double)this.velocity.Y < 2.5)
					{
						this.velocity.Y = this.velocity.Y + 0.1f;
						if ((double)this.velocity.Y < -2.5)
						{
							this.velocity.Y = this.velocity.Y + 0.05f;
						}
						else if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.03f;
						}
						if ((double)this.velocity.Y > 2.5)
						{
							this.velocity.Y = 2.5f;
						}
					}
				}
				else
				{
					if (this.direction == -1 && this.velocity.X > -4f)
					{
						this.velocity.X = this.velocity.X - 0.1f;
						if (this.velocity.X > 4f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X + 0.05f;
						}
						if (this.velocity.X < -4f)
						{
							this.velocity.X = -4f;
						}
					}
					else if (this.direction == 1 && this.velocity.X < 4f)
					{
						this.velocity.X = this.velocity.X + 0.1f;
						if (this.velocity.X < -4f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
						else if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X - 0.05f;
						}
						if (this.velocity.X > 4f)
						{
							this.velocity.X = 4f;
						}
					}
					if (this.directionY == -1 && (double)this.velocity.Y > -1.5)
					{
						this.velocity.Y = this.velocity.Y - 0.04f;
						if ((double)this.velocity.Y > 1.5)
						{
							this.velocity.Y = this.velocity.Y - 0.05f;
						}
						else if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.03f;
						}
						if ((double)this.velocity.Y < -1.5)
						{
							this.velocity.Y = -1.5f;
						}
					}
					else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
					{
						this.velocity.Y = this.velocity.Y + 0.04f;
						if ((double)this.velocity.Y < -1.5)
						{
							this.velocity.Y = this.velocity.Y + 0.05f;
						}
						else if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.03f;
						}
						if ((double)this.velocity.Y > 1.5)
						{
							this.velocity.Y = 1.5f;
						}
					}
				}
				if (this.type == 49 || this.type == 51 || this.type == 60 || this.type == 62 || this.type == 66 || this.type == 93 || this.type == 137 || this.type == 150 || this.type == 151 || this.type == 152)
				{
					if (this.wet)
					{
						if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y * 0.95f;
						}
						this.velocity.Y = this.velocity.Y - 0.5f;
						if (this.velocity.Y < -4f)
						{
							this.velocity.Y = -4f;
						}
						this.TargetClosest(true);
					}
					if (this.type == 60)
					{
						if (this.direction == -1 && this.velocity.X > -4f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
							if (this.velocity.X > 4f)
							{
								this.velocity.X = this.velocity.X - 0.07f;
							}
							else if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X + 0.03f;
							}
							if (this.velocity.X < -4f)
							{
								this.velocity.X = -4f;
							}
						}
						else if (this.direction == 1 && this.velocity.X < 4f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
							if (this.velocity.X < -4f)
							{
								this.velocity.X = this.velocity.X + 0.07f;
							}
							else if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X - 0.03f;
							}
							if (this.velocity.X > 4f)
							{
								this.velocity.X = 4f;
							}
						}
						if (this.directionY == -1 && (double)this.velocity.Y > -1.5)
						{
							this.velocity.Y = this.velocity.Y - 0.04f;
							if ((double)this.velocity.Y > 1.5)
							{
								this.velocity.Y = this.velocity.Y - 0.03f;
							}
							else if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y + 0.02f;
							}
							if ((double)this.velocity.Y < -1.5)
							{
								this.velocity.Y = -1.5f;
							}
						}
						else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
						{
							this.velocity.Y = this.velocity.Y + 0.04f;
							if ((double)this.velocity.Y < -1.5)
							{
								this.velocity.Y = this.velocity.Y + 0.03f;
							}
							else if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y - 0.02f;
							}
							if ((double)this.velocity.Y > 1.5)
							{
								this.velocity.Y = 1.5f;
							}
						}
					}
					else
					{
						if (this.direction == -1 && this.velocity.X > -4f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
							if (this.velocity.X > 4f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
							}
							else if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X + 0.05f;
							}
							if (this.velocity.X < -4f)
							{
								this.velocity.X = -4f;
							}
						}
						else if (this.direction == 1 && this.velocity.X < 4f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
							if (this.velocity.X < -4f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
							}
							else if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X - 0.05f;
							}
							if (this.velocity.X > 4f)
							{
								this.velocity.X = 4f;
							}
						}
						if (this.directionY == -1 && (double)this.velocity.Y > -1.5)
						{
							this.velocity.Y = this.velocity.Y - 0.04f;
							if ((double)this.velocity.Y > 1.5)
							{
								this.velocity.Y = this.velocity.Y - 0.05f;
							}
							else if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y + 0.03f;
							}
							if ((double)this.velocity.Y < -1.5)
							{
								this.velocity.Y = -1.5f;
							}
						}
						else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
						{
							this.velocity.Y = this.velocity.Y + 0.04f;
							if ((double)this.velocity.Y < -1.5)
							{
								this.velocity.Y = this.velocity.Y + 0.05f;
							}
							else if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y - 0.03f;
							}
							if ((double)this.velocity.Y > 1.5)
							{
								this.velocity.Y = 1.5f;
							}
						}
					}
				}
				if (this.type == 48 && this.wet)
				{
					if (this.velocity.Y > 0f)
					{
						this.velocity.Y = this.velocity.Y * 0.95f;
					}
					this.velocity.Y = this.velocity.Y - 0.5f;
					if (this.velocity.Y < -4f)
					{
						this.velocity.Y = -4f;
					}
					this.TargetClosest(true);
				}
				if (this.type == 158 && Main.netMode != 1)
				{
					Vector2 vector64 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num617 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector64.X;
					float num618 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector64.Y;
					float num619 = (float)Math.Sqrt((double)(num617 * num617 + num618 * num618));
					if (num619 < 200f && this.position.Y + (float)this.height < Main.player[this.target].position.Y + (float)Main.player[this.target].height && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						this.Transform(159);
					}
				}
				this.ai[1] += 1f;
				if (this.type == 158)
				{
					this.ai[1] += 1f;
				}
				if (this.ai[1] > 200f)
				{
					if (!Main.player[this.target].wet && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						this.ai[1] = 0f;
					}
					float num620 = 0.2f;
					float num621 = 0.1f;
					float num622 = 4f;
					float num623 = 1.5f;
					if (this.type == 48 || this.type == 62 || this.type == 66)
					{
						num620 = 0.12f;
						num621 = 0.07f;
						num622 = 3f;
						num623 = 1.25f;
					}
					if (this.ai[1] > 1000f)
					{
						this.ai[1] = 0f;
					}
					this.ai[2] += 1f;
					if (this.ai[2] > 0f)
					{
						if (this.velocity.Y < num623)
						{
							this.velocity.Y = this.velocity.Y + num621;
						}
					}
					else if (this.velocity.Y > -num623)
					{
						this.velocity.Y = this.velocity.Y - num621;
					}
					if (this.ai[2] < -150f || this.ai[2] > 150f)
					{
						if (this.velocity.X < num622)
						{
							this.velocity.X = this.velocity.X + num620;
						}
					}
					else if (this.velocity.X > -num622)
					{
						this.velocity.X = this.velocity.X - num620;
					}
					if (this.ai[2] > 300f)
					{
						this.ai[2] = -300f;
					}
				}
				if (Main.netMode != 1)
				{
					if (this.type == 48)
					{
						this.ai[0] += 1f;
						if (this.ai[0] == 30f || this.ai[0] == 60f || this.ai[0] == 90f)
						{
							if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
							{
								float num624 = 6f;
								Vector2 vector65 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num625 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector65.X + (float)Main.rand.Next(-100, 101);
								float num626 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector65.Y + (float)Main.rand.Next(-100, 101);
								float num627 = (float)Math.Sqrt((double)(num625 * num625 + num626 * num626));
								num627 = num624 / num627;
								num625 *= num627;
								num626 *= num627;
								int num628 = 15;
								int num629 = 38;
								int num630 = Projectile.NewProjectile(vector65.X, vector65.Y, num625, num626, num629, num628, 0f, Main.myPlayer, 0f, 0f);
								Main.projectile[num630].timeLeft = 300;
							}
						}
						else if (this.ai[0] >= (float)(400 + Main.rand.Next(400)))
						{
							this.ai[0] = 0f;
						}
					}
					if (this.type == 62 || this.type == 66)
					{
						this.ai[0] += 1f;
						if (this.ai[0] == 20f || this.ai[0] == 40f || this.ai[0] == 60f || this.ai[0] == 80f)
						{
							if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
							{
								float num631 = 0.2f;
								Vector2 vector66 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num632 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector66.X + (float)Main.rand.Next(-100, 101);
								float num633 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector66.Y + (float)Main.rand.Next(-100, 101);
								float num634 = (float)Math.Sqrt((double)(num632 * num632 + num633 * num633));
								num634 = num631 / num634;
								num632 *= num634;
								num633 *= num634;
								int num635 = 21;
								int num636 = 44;
								int num637 = Projectile.NewProjectile(vector66.X, vector66.Y, num632, num633, num636, num635, 0f, Main.myPlayer, 0f, 0f);
								Main.projectile[num637].timeLeft = 300;
							}
						}
						else if (this.ai[0] >= (float)(300 + Main.rand.Next(300)))
						{
							this.ai[0] = 0f;
						}
					}
					if (this.type == 156)
					{
						this.ai[0] += 1f;
						if (this.ai[0] == 20f || this.ai[0] == 40f || this.ai[0] == 60f || this.ai[0] == 80f || this.ai[0] == 100f)
						{
							if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
							{
								float num638 = 0.2f;
								Vector2 value13 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num639 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - value13.X + (float)Main.rand.Next(-50, 51);
								float num640 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - value13.Y + (float)Main.rand.Next(-50, 51);
								float num641 = (float)Math.Sqrt((double)(num639 * num639 + num640 * num640));
								num641 = num638 / num641;
								num639 *= num641;
								num640 *= num641;
								int num642 = 80;
								int num643 = 115;
								value13 += this.velocity * 5f;
								int num644 = Projectile.NewProjectile(value13.X + num639 * 100f, value13.Y + num640 * 100f, num639, num640, num643, num642, 0f, Main.myPlayer, 0f, 0f);
								Main.projectile[num644].timeLeft = 300;
								return;
							}
						}
						else if (this.ai[0] >= (float)(250 + Main.rand.Next(250)))
						{
							this.ai[0] = 0f;
							return;
						}
					}
				}
			}
			else if (this.aiStyle == 15)
			{
				float num645 = 1f;
				bool flag68 = false;
				bool flag69 = false;
				this.aiAction = 0;
				if (this.ai[3] == 0f && this.life > 0)
				{
					this.ai[3] = (float)this.lifeMax;
				}
				if (this.localAI[3] == 0f && Main.netMode != 1)
				{
					this.ai[0] = -100f;
					this.localAI[3] = 1f;
					this.TargetClosest(true);
					this.netUpdate = true;
				}
				if (Main.player[this.target].dead)
				{
					this.TargetClosest(true);
					if (Main.player[this.target].dead)
					{
						this.timeLeft = 0;
						if (Main.player[this.target].Center.X < base.Center.X)
						{
							this.direction = 1;
						}
						else
						{
							this.direction = -1;
						}
					}
				}
				if (!Main.player[this.target].dead && this.ai[2] >= 300f && this.ai[1] < 5f && this.velocity.Y == 0f)
				{
					this.ai[2] = 0f;
					this.ai[0] = 0f;
					this.ai[1] = 5f;
					if (Main.netMode != 1)
					{
						this.TargetClosest(false);
						Point point5 = base.Center.ToTileCoordinates();
						Point point6 = Main.player[this.target].Center.ToTileCoordinates();
						Vector2 vector67 = Main.player[this.target].Center - base.Center;
						int num646 = 10;
						int num647 = 0;
						int num648 = 7;
						int num649 = 0;
						bool flag70 = false;
						if (vector67.Length() > 2000f)
						{
							flag70 = true;
							num649 = 100;
						}
						while (!flag70 && num649 < 100)
						{
							num649++;
							int num650 = Main.rand.Next(point6.X - num646, point6.X + num646 + 1);
							int num651 = Main.rand.Next(point6.Y - num646, point6.Y + 1);
							if ((num651 < point6.Y - num648 || num651 > point6.Y + num648 || num650 < point6.X - num648 || num650 > point6.X + num648) && (num651 < point5.Y - num647 || num651 > point5.Y + num647 || num650 < point5.X - num647 || num650 > point5.X + num647) && !Main.tile[num650, num651].nactive())
							{
								int num652 = num651;
								int num653 = 0;
								bool flag71 = Main.tile[num650, num652].nactive() && Main.tileSolid[(int)Main.tile[num650, num652].type] && !Main.tileSolidTop[(int)Main.tile[num650, num652].type];
								if (flag71)
								{
									num653 = 1;
								}
								else
								{
									while (num653 < 150 && num652 + num653 < Main.maxTilesY)
									{
										int num654 = num652 + num653;
										bool flag72 = Main.tile[num650, num654].nactive() && Main.tileSolid[(int)Main.tile[num650, num654].type] && !Main.tileSolidTop[(int)Main.tile[num650, num654].type];
										if (flag72)
										{
											num653--;
											break;
										}
										num653++;
									}
								}
								num651 += num653;
								bool flag73 = true;
								if (flag73 && Main.tile[num650, num651].lava())
								{
									flag73 = false;
								}
								if (flag73 && !Collision.CanHitLine(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
								{
									flag73 = false;
								}
								if (flag73)
								{
									this.localAI[1] = (float)(num650 * 16 + 8);
									this.localAI[2] = (float)(num651 * 16 + 16);
									break;
								}
							}
						}
						if (num649 >= 100)
						{
							Vector2 bottom = Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].Bottom;
							this.localAI[1] = bottom.X;
							this.localAI[2] = bottom.Y;
						}
					}
				}
				if (!Collision.CanHitLine(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
				{
					this.ai[2] += 1f;
				}
				if (Math.Abs(base.Top.Y - Main.player[this.target].Bottom.Y) > 320f)
				{
					this.ai[2] += 1f;
				}
				if (this.ai[1] == 5f)
				{
					flag68 = true;
					this.aiAction = 1;
					this.ai[0] += 1f;
					num645 = MathHelper.Clamp((60f - this.ai[0]) / 60f, 0f, 1f);
					num645 = 0.5f + num645 * 0.5f;
					if (this.ai[0] >= 60f)
					{
						flag69 = true;
					}
					if (this.ai[0] == 60f)
					{
						Gore.NewGore(base.Center + new Vector2(-40f, (float)(-(float)this.height / 2)), this.velocity, 734, 1f);
					}
					if (this.ai[0] >= 60f && Main.netMode != 1)
					{
						base.Bottom = new Vector2(this.localAI[1], this.localAI[2]);
						this.ai[1] = 6f;
						this.ai[0] = 0f;
						this.netUpdate = true;
					}
					if (Main.netMode == 1 && this.ai[0] >= 120f)
					{
						this.ai[1] = 6f;
						this.ai[0] = 0f;
					}
					if (!flag69)
					{
						for (int num655 = 0; num655 < 10; num655++)
						{
							int num656 = Dust.NewDust(this.position + Vector2.UnitX * -20f, this.width + 40, this.height, 4, this.velocity.X, this.velocity.Y, 150, new Color(78, 136, 255, 80), 2f);
							Main.dust[num656].noGravity = true;
							Main.dust[num656].velocity *= 0.5f;
						}
					}
				}
				else if (this.ai[1] == 6f)
				{
					flag68 = true;
					this.aiAction = 0;
					this.ai[0] += 1f;
					num645 = MathHelper.Clamp(this.ai[0] / 30f, 0f, 1f);
					num645 = 0.5f + num645 * 0.5f;
					if (this.ai[0] >= 30f && Main.netMode != 1)
					{
						this.ai[1] = 0f;
						this.ai[0] = 0f;
						this.netUpdate = true;
						this.TargetClosest(true);
					}
					if (Main.netMode == 1 && this.ai[0] >= 60f)
					{
						this.ai[1] = 0f;
						this.ai[0] = 0f;
						this.TargetClosest(true);
					}
					for (int num657 = 0; num657 < 10; num657++)
					{
						int num658 = Dust.NewDust(this.position + Vector2.UnitX * -20f, this.width + 40, this.height, 4, this.velocity.X, this.velocity.Y, 150, new Color(78, 136, 255, 80), 2f);
						Main.dust[num658].noGravity = true;
						Main.dust[num658].velocity *= 2f;
					}
				}
				this.dontTakeDamage = (this.hide = flag69);
				if (this.velocity.Y == 0f)
				{
					this.velocity.X = this.velocity.X * 0.8f;
					if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
					{
						this.velocity.X = 0f;
					}
					if (!flag68)
					{
						this.ai[0] += 2f;
						if ((double)this.life < (double)this.lifeMax * 0.8)
						{
							this.ai[0] += 1f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.6)
						{
							this.ai[0] += 1f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.4)
						{
							this.ai[0] += 2f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.2)
						{
							this.ai[0] += 3f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.1)
						{
							this.ai[0] += 4f;
						}
						if (this.ai[0] >= 0f)
						{
							this.netUpdate = true;
							this.TargetClosest(true);
							if (this.ai[1] == 3f)
							{
								this.velocity.Y = -13f;
								this.velocity.X = this.velocity.X + 3.5f * (float)this.direction;
								this.ai[0] = -200f;
								this.ai[1] = 0f;
							}
							else if (this.ai[1] == 2f)
							{
								this.velocity.Y = -6f;
								this.velocity.X = this.velocity.X + 4.5f * (float)this.direction;
								this.ai[0] = -120f;
								this.ai[1] += 1f;
							}
							else
							{
								this.velocity.Y = -8f;
								this.velocity.X = this.velocity.X + 4f * (float)this.direction;
								this.ai[0] = -120f;
								this.ai[1] += 1f;
							}
						}
						else if (this.ai[0] >= -30f)
						{
							this.aiAction = 1;
						}
					}
				}
				else if (this.target < 255 && ((this.direction == 1 && this.velocity.X < 3f) || (this.direction == -1 && this.velocity.X > -3f)))
				{
					if ((this.direction == -1 && (double)this.velocity.X < 0.1) || (this.direction == 1 && (double)this.velocity.X > -0.1))
					{
						this.velocity.X = this.velocity.X + 0.2f * (float)this.direction;
					}
					else
					{
						this.velocity.X = this.velocity.X * 0.93f;
					}
				}
				int num659 = Dust.NewDust(this.position, this.width, this.height, 4, this.velocity.X, this.velocity.Y, 255, new Color(0, 80, 255, 80), this.scale * 1.2f);
				Main.dust[num659].noGravity = true;
				Main.dust[num659].velocity *= 0.5f;
				if (this.life > 0)
				{
					float num660 = (float)this.life / (float)this.lifeMax;
					num660 = num660 * 0.5f + 0.75f;
					num660 *= num645;
					if (num660 != this.scale)
					{
						this.position.X = this.position.X + (float)(this.width / 2);
						this.position.Y = this.position.Y + (float)this.height;
						this.scale = num660;
						this.width = (int)(98f * this.scale);
						this.height = (int)(92f * this.scale);
						this.position.X = this.position.X - (float)(this.width / 2);
						this.position.Y = this.position.Y - (float)this.height;
					}
					if (Main.netMode != 1)
					{
						int num661 = (int)((double)this.lifeMax * 0.05);
						if ((float)(this.life + num661) < this.ai[3])
						{
							this.ai[3] = (float)this.life;
							int num662 = Main.rand.Next(1, 4);
							for (int num663 = 0; num663 < num662; num663++)
							{
								int x2 = (int)(this.position.X + (float)Main.rand.Next(this.width - 32));
								int y = (int)(this.position.Y + (float)Main.rand.Next(this.height - 32));
								int num664 = 1;
								if (Main.expertMode && Main.rand.Next(4) == 0)
								{
									num664 = 535;
								}
								int num665 = NPC.NewNPC(x2, y, num664, 0, 0f, 0f, 0f, 0f, 255);
								Main.npc[num665].SetDefaults(num664, -1f);
								Main.npc[num665].velocity.X = (float)Main.rand.Next(-15, 16) * 0.1f;
								Main.npc[num665].velocity.Y = (float)Main.rand.Next(-30, 1) * 0.1f;
								Main.npc[num665].ai[0] = (float)(-1000 * Main.rand.Next(3));
								Main.npc[num665].ai[1] = 0f;
								if (Main.netMode == 2 && num665 < 200)
								{
									NetMessage.SendData(23, -1, -1, "", num665, 0f, 0f, 0f, 0, 0, 0);
								}
							}
							return;
						}
					}
				}
			}
			else if (this.aiStyle == 16)
			{
				if (this.direction == 0)
				{
					this.TargetClosest(true);
				}
				if (this.wet)
				{
					bool flag74 = false;
					if (this.type != 55)
					{
						this.TargetClosest(false);
						if (Main.player[this.target].wet && !Main.player[this.target].dead)
						{
							flag74 = true;
						}
					}
					if (!flag74)
					{
						if (this.collideX)
						{
							this.velocity.X = this.velocity.X * -1f;
							this.direction *= -1;
							this.netUpdate = true;
						}
						if (this.collideY)
						{
							this.netUpdate = true;
							if (this.velocity.Y > 0f)
							{
								this.velocity.Y = Math.Abs(this.velocity.Y) * -1f;
								this.directionY = -1;
								this.ai[0] = -1f;
							}
							else if (this.velocity.Y < 0f)
							{
								this.velocity.Y = Math.Abs(this.velocity.Y);
								this.directionY = 1;
								this.ai[0] = 1f;
							}
						}
					}
					if (this.type == 102)
					{
						Lighting.AddLight((int)(this.position.X + (float)(this.width / 2) + (float)(this.direction * (this.width + 8))) / 16, (int)(this.position.Y + 2f) / 16, 0.07f, 0.04f, 0.025f);
					}
					if (flag74)
					{
						this.TargetClosest(true);
						if (this.type == 157)
						{
							if (this.velocity.X > 0f && this.direction < 0)
							{
								this.velocity.X = this.velocity.X * 0.95f;
							}
							if (this.velocity.X < 0f && this.direction > 0)
							{
								this.velocity.X = this.velocity.X * 0.95f;
							}
							this.velocity.X = this.velocity.X + (float)this.direction * 0.25f;
							this.velocity.Y = this.velocity.Y + (float)this.directionY * 0.2f;
							if (this.velocity.X > 8f)
							{
								this.velocity.X = 7f;
							}
							if (this.velocity.X < -8f)
							{
								this.velocity.X = -7f;
							}
							if (this.velocity.Y > 5f)
							{
								this.velocity.Y = 4f;
							}
							if (this.velocity.Y < -5f)
							{
								this.velocity.Y = -4f;
							}
						}
						else if (this.type == 65 || this.type == 102)
						{
							this.velocity.X = this.velocity.X + (float)this.direction * 0.15f;
							this.velocity.Y = this.velocity.Y + (float)this.directionY * 0.15f;
							if (this.velocity.X > 5f)
							{
								this.velocity.X = 5f;
							}
							if (this.velocity.X < -5f)
							{
								this.velocity.X = -5f;
							}
							if (this.velocity.Y > 3f)
							{
								this.velocity.Y = 3f;
							}
							if (this.velocity.Y < -3f)
							{
								this.velocity.Y = -3f;
							}
						}
						else
						{
							this.velocity.X = this.velocity.X + (float)this.direction * 0.1f;
							this.velocity.Y = this.velocity.Y + (float)this.directionY * 0.1f;
							if (this.velocity.X > 3f)
							{
								this.velocity.X = 3f;
							}
							if (this.velocity.X < -3f)
							{
								this.velocity.X = -3f;
							}
							if (this.velocity.Y > 2f)
							{
								this.velocity.Y = 2f;
							}
							if (this.velocity.Y < -2f)
							{
								this.velocity.Y = -2f;
							}
						}
					}
					else
					{
						if (this.type == 157)
						{
							if (Main.player[this.target].position.Y > this.position.Y)
							{
								this.directionY = 1;
							}
							else
							{
								this.directionY = -1;
							}
							this.velocity.X = this.velocity.X + (float)this.direction * 0.2f;
							if (this.velocity.X < -2f || this.velocity.X > 2f)
							{
								this.velocity.X = this.velocity.X * 0.95f;
							}
							if (this.ai[0] == -1f)
							{
								float num666 = -0.6f;
								if (this.directionY < 0)
								{
									num666 = -1f;
								}
								if (this.directionY > 0)
								{
									num666 = -0.2f;
								}
								this.velocity.Y = this.velocity.Y - 0.02f;
								if (this.velocity.Y < num666)
								{
									this.ai[0] = 1f;
								}
							}
							else
							{
								float num667 = 0.6f;
								if (this.directionY < 0)
								{
									num667 = 0.2f;
								}
								if (this.directionY > 0)
								{
									num667 = 1f;
								}
								this.velocity.Y = this.velocity.Y + 0.02f;
								if (this.velocity.Y > num667)
								{
									this.ai[0] = -1f;
								}
							}
						}
						else
						{
							this.velocity.X = this.velocity.X + (float)this.direction * 0.1f;
							if (this.velocity.X < -1f || this.velocity.X > 1f)
							{
								this.velocity.X = this.velocity.X * 0.95f;
							}
							if (this.ai[0] == -1f)
							{
								this.velocity.Y = this.velocity.Y - 0.01f;
								if ((double)this.velocity.Y < -0.3)
								{
									this.ai[0] = 1f;
								}
							}
							else
							{
								this.velocity.Y = this.velocity.Y + 0.01f;
								if ((double)this.velocity.Y > 0.3)
								{
									this.ai[0] = -1f;
								}
							}
						}
						int num668 = (int)(this.position.X + (float)(this.width / 2)) / 16;
						int num669 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
						if (Main.tile[num668, num669 - 1] == null)
						{
							Main.tile[num668, num669 - 1] = new Tile();
						}
						if (Main.tile[num668, num669 + 1] == null)
						{
							Main.tile[num668, num669 + 1] = new Tile();
						}
						if (Main.tile[num668, num669 + 2] == null)
						{
							Main.tile[num668, num669 + 2] = new Tile();
						}
						if (Main.tile[num668, num669 - 1].liquid > 128)
						{
							if (Main.tile[num668, num669 + 1].active())
							{
								this.ai[0] = -1f;
							}
							else if (Main.tile[num668, num669 + 2].active())
							{
								this.ai[0] = -1f;
							}
						}
						if (this.type != 157 && ((double)this.velocity.Y > 0.4 || (double)this.velocity.Y < -0.4))
						{
							this.velocity.Y = this.velocity.Y * 0.95f;
						}
					}
				}
				else
				{
					if (this.velocity.Y == 0f)
					{
						if (this.type == 65)
						{
							this.velocity.X = this.velocity.X * 0.94f;
							if ((double)this.velocity.X > -0.2 && (double)this.velocity.X < 0.2)
							{
								this.velocity.X = 0f;
							}
						}
						else if (Main.netMode != 1)
						{
							this.velocity.Y = (float)Main.rand.Next(-50, -20) * 0.1f;
							this.velocity.X = (float)Main.rand.Next(-20, 20) * 0.1f;
							this.netUpdate = true;
						}
					}
					this.velocity.Y = this.velocity.Y + 0.3f;
					if (this.velocity.Y > 10f)
					{
						this.velocity.Y = 10f;
					}
					this.ai[0] = 1f;
				}
				this.rotation = this.velocity.Y * (float)this.direction * 0.1f;
				if ((double)this.rotation < -0.2)
				{
					this.rotation = -0.2f;
				}
				if ((double)this.rotation > 0.2)
				{
					this.rotation = 0.2f;
					return;
				}
			}
			else if (this.aiStyle == 17)
			{
				this.noGravity = true;
				if (this.ai[0] == 0f)
				{
					this.noGravity = false;
					this.TargetClosest(true);
					if (Main.netMode != 1)
					{
						if (this.velocity.X != 0f || this.velocity.Y < 0f || (double)this.velocity.Y > 0.3)
						{
							this.ai[0] = 1f;
							this.netUpdate = true;
						}
						else
						{
							Rectangle rectangle6 = new Rectangle((int)Main.player[this.target].position.X, (int)Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height);
							Rectangle rectangle7 = new Rectangle((int)this.position.X - 100, (int)this.position.Y - 100, this.width + 200, this.height + 200);
							if (rectangle7.Intersects(rectangle6) || this.life < this.lifeMax)
							{
								this.ai[0] = 1f;
								this.velocity.Y = this.velocity.Y - 6f;
								this.netUpdate = true;
							}
						}
					}
				}
				else if (!Main.player[this.target].dead)
				{
					if (this.collideX)
					{
						this.velocity.X = this.oldVelocity.X * -0.5f;
						if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
						{
							this.velocity.X = 2f;
						}
						if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
						{
							this.velocity.X = -2f;
						}
					}
					if (this.collideY)
					{
						this.velocity.Y = this.oldVelocity.Y * -0.5f;
						if (this.velocity.Y > 0f && this.velocity.Y < 1f)
						{
							this.velocity.Y = 1f;
						}
						if (this.velocity.Y < 0f && this.velocity.Y > -1f)
						{
							this.velocity.Y = -1f;
						}
					}
					this.TargetClosest(true);
					if (this.direction == -1 && this.velocity.X > -3f)
					{
						this.velocity.X = this.velocity.X - 0.1f;
						if (this.velocity.X > 3f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X - 0.05f;
						}
						if (this.velocity.X < -3f)
						{
							this.velocity.X = -3f;
						}
					}
					else if (this.direction == 1 && this.velocity.X < 3f)
					{
						this.velocity.X = this.velocity.X + 0.1f;
						if (this.velocity.X < -3f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
						else if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X + 0.05f;
						}
						if (this.velocity.X > 3f)
						{
							this.velocity.X = 3f;
						}
					}
					float num670 = Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2)));
					float num671 = Main.player[this.target].position.Y - (float)(this.height / 2);
					if (num670 > 50f)
					{
						num671 -= 100f;
					}
					if (this.position.Y < num671)
					{
						this.velocity.Y = this.velocity.Y + 0.05f;
						if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.01f;
						}
					}
					else
					{
						this.velocity.Y = this.velocity.Y - 0.05f;
						if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.01f;
						}
					}
					if (this.velocity.Y < -3f)
					{
						this.velocity.Y = -3f;
					}
					if (this.velocity.Y > 3f)
					{
						this.velocity.Y = 3f;
					}
				}
				if (this.wet)
				{
					if (this.velocity.Y > 0f)
					{
						this.velocity.Y = this.velocity.Y * 0.95f;
					}
					this.velocity.Y = this.velocity.Y - 0.5f;
					if (this.velocity.Y < -4f)
					{
						this.velocity.Y = -4f;
					}
					this.TargetClosest(true);
					return;
				}
			}
			else if (this.aiStyle == 18)
			{
				bool flag75 = false;
				if (this.wet && this.ai[1] == 1f)
				{
					flag75 = true;
				}
				else
				{
					this.dontTakeDamage = false;
				}
				if (Main.expertMode && (this.type == 63 || this.type == 64 || this.type == 103 || this.type == 242))
				{
					if (this.wet)
					{
						if (this.target >= 0 && Main.player[this.target].wet && !Main.player[this.target].dead && (Main.player[this.target].Center - base.Center).Length() < 150f)
						{
							if (this.ai[1] == 0f)
							{
								this.ai[2] += 2f;
							}
							else
							{
								this.ai[2] -= 0.25f;
							}
						}
						if (flag75)
						{
							this.dontTakeDamage = true;
							this.ai[2] += 1f;
							if (this.ai[2] >= 120f)
							{
								this.ai[1] = 0f;
							}
						}
						else
						{
							this.ai[2] += 1f;
							if (this.ai[2] >= 420f)
							{
								this.ai[1] = 1f;
								this.ai[2] = 0f;
							}
						}
					}
					else
					{
						this.ai[1] = 0f;
						this.ai[2] = 0f;
					}
				}
				float num672 = 1f;
				if (flag75)
				{
					num672 += 0.5f;
				}
				if (this.type == 63)
				{
					Lighting.AddLight((int)(this.position.X + (float)(this.height / 2)) / 16, (int)(this.position.Y + (float)(this.height / 2)) / 16, 0.05f * num672, 0.15f * num672, 0.4f * num672);
				}
				else if (this.type == 103)
				{
					Lighting.AddLight((int)(this.position.X + (float)(this.height / 2)) / 16, (int)(this.position.Y + (float)(this.height / 2)) / 16, 0.05f * num672, 0.45f * num672, 0.1f * num672);
				}
				else if (this.type != 221 && this.type != 242)
				{
					Lighting.AddLight((int)(this.position.X + (float)(this.height / 2)) / 16, (int)(this.position.Y + (float)(this.height / 2)) / 16, 0.35f * num672, 0.05f * num672, 0.2f * num672);
				}
				if (this.direction == 0)
				{
					this.TargetClosest(true);
				}
				if (flag75)
				{
					return;
				}
				if (!this.wet)
				{
					this.rotation += this.velocity.X * 0.1f;
					if (this.velocity.Y == 0f)
					{
						this.velocity.X = this.velocity.X * 0.98f;
						if ((double)this.velocity.X > -0.01 && (double)this.velocity.X < 0.01)
						{
							this.velocity.X = 0f;
						}
					}
					this.velocity.Y = this.velocity.Y + 0.2f;
					if (this.velocity.Y > 10f)
					{
						this.velocity.Y = 10f;
					}
					this.ai[0] = 1f;
					return;
				}
				if (this.collideX)
				{
					this.velocity.X = this.velocity.X * -1f;
					this.direction *= -1;
				}
				if (this.collideY)
				{
					if (this.velocity.Y > 0f)
					{
						this.velocity.Y = Math.Abs(this.velocity.Y) * -1f;
						this.directionY = -1;
						this.ai[0] = -1f;
					}
					else if (this.velocity.Y < 0f)
					{
						this.velocity.Y = Math.Abs(this.velocity.Y);
						this.directionY = 1;
						this.ai[0] = 1f;
					}
				}
				bool flag76 = false;
				if (!this.friendly)
				{
					this.TargetClosest(false);
					if (Main.player[this.target].wet && !Main.player[this.target].dead)
					{
						flag76 = true;
					}
				}
				if (flag76)
				{
					this.localAI[2] = 1f;
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
					this.velocity *= 0.98f;
					float num673 = 0.2f;
					if (this.type == 103)
					{
						this.velocity *= 0.98f;
						num673 = 0.6f;
					}
					if (this.type == 221)
					{
						this.velocity *= 0.99f;
						num673 = 1f;
					}
					if (this.type == 242)
					{
						this.velocity *= 0.995f;
						num673 = 3f;
					}
					if (this.velocity.X > -num673 && this.velocity.X < num673 && this.velocity.Y > -num673 && this.velocity.Y < num673)
					{
						if (this.type == 221)
						{
							this.localAI[0] = 1f;
						}
						this.TargetClosest(true);
						float num674 = 7f;
						if (this.type == 103)
						{
							num674 = 9f;
						}
						Vector2 vector68 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num675 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector68.X;
						float num676 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector68.Y;
						float num677 = (float)Math.Sqrt((double)(num675 * num675 + num676 * num676));
						num677 = num674 / num677;
						num675 *= num677;
						num676 *= num677;
						this.velocity.X = num675;
						this.velocity.Y = num676;
						return;
					}
				}
				else
				{
					this.localAI[2] = 0f;
					this.velocity.X = this.velocity.X + (float)this.direction * 0.02f;
					this.rotation = this.velocity.X * 0.4f;
					if (this.velocity.X < -1f || this.velocity.X > 1f)
					{
						this.velocity.X = this.velocity.X * 0.95f;
					}
					if (this.ai[0] == -1f)
					{
						this.velocity.Y = this.velocity.Y - 0.01f;
						if (this.velocity.Y < -1f)
						{
							this.ai[0] = 1f;
						}
					}
					else
					{
						this.velocity.Y = this.velocity.Y + 0.01f;
						if (this.velocity.Y > 1f)
						{
							this.ai[0] = -1f;
						}
					}
					int num678 = (int)(this.position.X + (float)(this.width / 2)) / 16;
					int num679 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
					if (Main.tile[num678, num679 - 1] == null)
					{
						Main.tile[num678, num679 - 1] = new Tile();
					}
					if (Main.tile[num678, num679 + 1] == null)
					{
						Main.tile[num678, num679 + 1] = new Tile();
					}
					if (Main.tile[num678, num679 + 2] == null)
					{
						Main.tile[num678, num679 + 2] = new Tile();
					}
					if (Main.tile[num678, num679 - 1].liquid > 128)
					{
						if (Main.tile[num678, num679 + 1].active())
						{
							this.ai[0] = -1f;
						}
						else if (Main.tile[num678, num679 + 2].active())
						{
							this.ai[0] = -1f;
						}
					}
					else
					{
						this.ai[0] = 1f;
					}
					if ((double)this.velocity.Y > 1.2 || (double)this.velocity.Y < -1.2)
					{
						this.velocity.Y = this.velocity.Y * 0.99f;
						return;
					}
				}
			}
			else
			{
				if (this.aiStyle == 19)
				{
					this.TargetClosest(true);
					float num680 = 12f;
					Vector2 vector69 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num681 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector69.X;
					float num682 = Main.player[this.target].position.Y - vector69.Y;
					float num683 = (float)Math.Sqrt((double)(num681 * num681 + num682 * num682));
					num683 = num680 / num683;
					num681 *= num683;
					num682 *= num683;
					bool flag77 = false;
					if (this.directionY < 0)
					{
						this.rotation = (float)(Math.Atan2((double)num682, (double)num681) + 1.57);
						flag77 = ((double)this.rotation >= -1.2 && (double)this.rotation <= 1.2);
						if ((double)this.rotation < -0.8)
						{
							this.rotation = -0.8f;
						}
						else if ((double)this.rotation > 0.8)
						{
							this.rotation = 0.8f;
						}
						if (this.velocity.X != 0f)
						{
							this.velocity.X = this.velocity.X * 0.9f;
							if ((double)this.velocity.X > -0.1 || (double)this.velocity.X < 0.1)
							{
								this.netUpdate = true;
								this.velocity.X = 0f;
							}
						}
					}
					if (this.ai[0] > 0f)
					{
						if (this.ai[0] == 200f)
						{
							Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 5);
						}
						this.ai[0] -= 1f;
					}
					if (Main.netMode != 1 && flag77 && this.ai[0] == 0f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						this.ai[0] = 200f;
						int num684 = 10;
						int num685 = 31;
						int num686 = Projectile.NewProjectile(vector69.X, vector69.Y, num681, num682, num685, num684, 0f, Main.myPlayer, 0f, 0f);
						Main.projectile[num686].ai[0] = 2f;
						Main.projectile[num686].timeLeft = 300;
						Main.projectile[num686].friendly = false;
						NetMessage.SendData(27, -1, -1, "", num686, 0f, 0f, 0f, 0, 0, 0);
						this.netUpdate = true;
					}
					try
					{
						int num687 = (int)this.position.X / 16;
						int num688 = (int)(this.position.X + (float)(this.width / 2)) / 16;
						int num689 = (int)(this.position.X + (float)this.width) / 16;
						int num690 = (int)(this.position.Y + (float)this.height) / 16;
						bool flag78 = false;
						if (Main.tile[num687, num690] == null)
						{
							Main.tile[num687, num690] = new Tile();
						}
						if (Main.tile[num688, num690] == null)
						{
							Main.tile[num687, num690] = new Tile();
						}
						if (Main.tile[num689, num690] == null)
						{
							Main.tile[num687, num690] = new Tile();
						}
						if ((Main.tile[num687, num690].nactive() && Main.tileSolid[(int)Main.tile[num687, num690].type]) || (Main.tile[num688, num690].nactive() && Main.tileSolid[(int)Main.tile[num688, num690].type]) || (Main.tile[num689, num690].nactive() && Main.tileSolid[(int)Main.tile[num689, num690].type]))
						{
							flag78 = true;
						}
						if (flag78)
						{
							this.noGravity = true;
							this.noTileCollide = true;
							this.velocity.Y = -0.2f;
						}
						else
						{
							this.noGravity = false;
							this.noTileCollide = false;
							if (Main.rand.Next(2) == 0)
							{
								int num691 = Dust.NewDust(new Vector2(this.position.X - 4f, this.position.Y + (float)this.height - 8f), this.width + 8, 24, 32, 0f, this.velocity.Y / 2f, 0, default(Color), 1f);
								Dust expr_28E25_cp_0 = Main.dust[num691];
								expr_28E25_cp_0.velocity.X = expr_28E25_cp_0.velocity.X * 0.4f;
								Dust expr_28E45_cp_0 = Main.dust[num691];
								expr_28E45_cp_0.velocity.Y = expr_28E45_cp_0.velocity.Y * -1f;
								if (Main.rand.Next(2) == 0)
								{
									Main.dust[num691].noGravity = true;
									Main.dust[num691].scale += 0.2f;
								}
							}
						}
						return;
					}
					catch
					{
						return;
					}
				}
				if (this.aiStyle == 20)
				{
					if (this.ai[0] == 0f)
					{
						if (Main.netMode != 1)
						{
							this.TargetClosest(true);
							this.direction *= -1;
							this.directionY *= -1;
							this.position.Y = this.position.Y + (float)(this.height / 2 + 8);
							this.ai[1] = this.position.X + (float)(this.width / 2);
							this.ai[2] = this.position.Y + (float)(this.height / 2);
							if (this.direction == 0)
							{
								this.direction = 1;
							}
							if (this.directionY == 0)
							{
								this.directionY = 1;
							}
							this.ai[3] = 1f + (float)Main.rand.Next(15) * 0.1f;
							this.velocity.Y = (float)(this.directionY * 6) * this.ai[3];
							this.ai[0] += 1f;
							this.netUpdate = true;
							return;
						}
						this.ai[1] = this.position.X + (float)(this.width / 2);
						this.ai[2] = this.position.Y + (float)(this.height / 2);
						return;
					}
					else
					{
						float num692 = 6f * this.ai[3];
						float num693 = 0.2f * this.ai[3];
						float num694 = num692 / num693 / 2f;
						if (this.ai[0] >= 1f && this.ai[0] < (float)((int)num694))
						{
							this.velocity.Y = (float)this.directionY * num692;
							this.ai[0] += 1f;
							return;
						}
						if (this.ai[0] >= (float)((int)num694))
						{
							this.velocity.Y = 0f;
							this.directionY *= -1;
							this.velocity.X = num692 * (float)this.direction;
							this.ai[0] = -1f;
							return;
						}
						if (this.directionY > 0)
						{
							if (this.velocity.Y >= num692)
							{
								this.directionY *= -1;
								this.velocity.Y = num692;
							}
						}
						else if (this.directionY < 0 && this.velocity.Y <= -num692)
						{
							this.directionY *= -1;
							this.velocity.Y = -num692;
						}
						if (this.direction > 0)
						{
							if (this.velocity.X >= num692)
							{
								this.direction *= -1;
								this.velocity.X = num692;
							}
						}
						else if (this.direction < 0 && this.velocity.X <= -num692)
						{
							this.direction *= -1;
							this.velocity.X = -num692;
						}
						this.velocity.X = this.velocity.X + num693 * (float)this.direction;
						this.velocity.Y = this.velocity.Y + num693 * (float)this.directionY;
						return;
					}
				}
				else
				{
					if (this.aiStyle == 21)
					{
						if (this.ai[0] == 0f)
						{
							this.TargetClosest(true);
							this.directionY = 1;
							this.ai[0] = 1f;
						}
						int num695 = 6;
						if (this.ai[1] == 0f)
						{
							this.rotation += (float)(this.direction * this.directionY) * 0.13f;
							if (this.collideY)
							{
								this.ai[0] = 2f;
							}
							if (!this.collideY && this.ai[0] == 2f)
							{
								this.direction = -this.direction;
								this.ai[1] = 1f;
								this.ai[0] = 1f;
							}
							if (this.collideX)
							{
								this.directionY = -this.directionY;
								this.ai[1] = 1f;
							}
						}
						else
						{
							this.rotation -= (float)(this.direction * this.directionY) * 0.13f;
							if (this.collideX)
							{
								this.ai[0] = 2f;
							}
							if (!this.collideX && this.ai[0] == 2f)
							{
								this.directionY = -this.directionY;
								this.ai[1] = 0f;
								this.ai[0] = 1f;
							}
							if (this.collideY)
							{
								this.direction = -this.direction;
								this.ai[1] = 0f;
							}
						}
						this.velocity.X = (float)(num695 * this.direction);
						this.velocity.Y = (float)(num695 * this.directionY);
						float num696 = (float)(270 - (int)Main.mouseTextColor) / 400f;
						Lighting.AddLight((int)(this.position.X + (float)(this.width / 2)) / 16, (int)(this.position.Y + (float)(this.height / 2)) / 16, 0.9f, 0.3f + num696, 0.2f);
						return;
					}
					if (this.aiStyle == 22)
					{
						bool flag79 = false;
						bool flag80 = this.type == 330 && !Main.pumpkinMoon;
						if (this.type == 253 && !Main.eclipse)
						{
							flag80 = true;
						}
						if (this.type == 490 && Main.dayTime)
						{
							flag80 = true;
						}
						if (this.justHit)
						{
							this.ai[2] = 0f;
						}
						if (!flag80)
						{
							if (this.ai[2] >= 0f)
							{
								int num697 = 16;
								bool flag81 = false;
								bool flag82 = false;
								if (this.position.X > this.ai[0] - (float)num697 && this.position.X < this.ai[0] + (float)num697)
								{
									flag81 = true;
								}
								else if ((this.velocity.X < 0f && this.direction > 0) || (this.velocity.X > 0f && this.direction < 0))
								{
									flag81 = true;
								}
								num697 += 24;
								if (this.position.Y > this.ai[1] - (float)num697 && this.position.Y < this.ai[1] + (float)num697)
								{
									flag82 = true;
								}
								if (flag81 && flag82)
								{
									this.ai[2] += 1f;
									if (this.ai[2] >= 30f && num697 == 16)
									{
										flag79 = true;
									}
									if (this.ai[2] >= 60f)
									{
										this.ai[2] = -200f;
										this.direction *= -1;
										this.velocity.X = this.velocity.X * -1f;
										this.collideX = false;
									}
								}
								else
								{
									this.ai[0] = this.position.X;
									this.ai[1] = this.position.Y;
									this.ai[2] = 0f;
								}
								this.TargetClosest(true);
							}
							else if (this.type == 253)
							{
								this.TargetClosest(true);
								this.ai[2] += 2f;
							}
							else
							{
								if (this.type == 330)
								{
									this.ai[2] += 0.1f;
								}
								else
								{
									this.ai[2] += 1f;
								}
								if (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) > this.position.X + (float)(this.width / 2))
								{
									this.direction = -1;
								}
								else
								{
									this.direction = 1;
								}
							}
						}
						int num698 = (int)((this.position.X + (float)(this.width / 2)) / 16f) + this.direction * 2;
						int num699 = (int)((this.position.Y + (float)this.height) / 16f);
						bool flag83 = true;
						bool flag84 = false;
						int num700 = 3;
						if (this.type == 122)
						{
							if (this.justHit)
							{
								this.ai[3] = 0f;
								this.localAI[1] = 0f;
							}
							float num701 = 7f;
							Vector2 vector70 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num702 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector70.X;
							float num703 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector70.Y;
							float num704 = (float)Math.Sqrt((double)(num702 * num702 + num703 * num703));
							num704 = num701 / num704;
							num702 *= num704;
							num703 *= num704;
							if (Main.netMode != 1 && this.ai[3] == 32f && !Main.player[this.target].npcTypeNoAggro[this.type])
							{
								int num705 = 25;
								int num706 = 84;
								Projectile.NewProjectile(vector70.X, vector70.Y, num702, num703, num706, num705, 0f, Main.myPlayer, 0f, 0f);
							}
							num700 = 8;
							if (this.ai[3] > 0f)
							{
								this.ai[3] += 1f;
								if (this.ai[3] >= 64f)
								{
									this.ai[3] = 0f;
								}
							}
							if (Main.netMode != 1 && this.ai[3] == 0f)
							{
								this.localAI[1] += 1f;
								if (this.localAI[1] > 120f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && !Main.player[this.target].npcTypeNoAggro[this.type])
								{
									this.localAI[1] = 0f;
									this.ai[3] = 1f;
									this.netUpdate = true;
								}
							}
						}
						else if (this.type == 75)
						{
							num700 = 4;
							if (Main.rand.Next(6) == 0)
							{
								int num707 = Dust.NewDust(this.position, this.width, this.height, 55, 0f, 0f, 200, this.color, 1f);
								Main.dust[num707].velocity *= 0.3f;
							}
							if (Main.rand.Next(40) == 0)
							{
								Main.PlaySound(27, (int)this.position.X, (int)this.position.Y, 1);
							}
						}
						else if (this.type == 169)
						{
							Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0f, 0.6f, 0.75f);
							this.alpha = 30;
							if (Main.rand.Next(3) == 0)
							{
								int num708 = Dust.NewDust(this.position, this.width, this.height, 92, 0f, 0f, 200, default(Color), 1f);
								Main.dust[num708].velocity *= 0.3f;
								Main.dust[num708].noGravity = true;
							}
							if (this.justHit)
							{
								this.ai[3] = 0f;
								this.localAI[1] = 0f;
							}
							float num709 = 5f;
							Vector2 vector71 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num710 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector71.X;
							float num711 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector71.Y;
							float num712 = (float)Math.Sqrt((double)(num710 * num710 + num711 * num711));
							num712 = num709 / num712;
							num710 *= num712;
							num711 *= num712;
							if (num710 > 0f)
							{
								this.direction = 1;
							}
							else
							{
								this.direction = -1;
							}
							this.spriteDirection = this.direction;
							if (this.direction < 0)
							{
								this.rotation = (float)Math.Atan2((double)(-(double)num711), (double)(-(double)num710));
							}
							else
							{
								this.rotation = (float)Math.Atan2((double)num711, (double)num710);
							}
							if (Main.netMode != 1 && this.ai[3] == 16f)
							{
								int num713 = 45;
								int num714 = 128;
								Projectile.NewProjectile(vector71.X, vector71.Y, num710, num711, num714, num713, 0f, Main.myPlayer, 0f, 0f);
							}
							num700 = 10;
							if (this.ai[3] > 0f)
							{
								this.ai[3] += 1f;
								if (this.ai[3] >= 64f)
								{
									this.ai[3] = 0f;
								}
							}
							if (Main.netMode != 1 && this.ai[3] == 0f)
							{
								this.localAI[1] += 1f;
								if (this.localAI[1] > 120f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
								{
									this.localAI[1] = 0f;
									this.ai[3] = 1f;
									this.netUpdate = true;
								}
							}
						}
						else if (this.type == 268)
						{
							this.rotation = this.velocity.X * 0.1f;
							if (Main.player[this.target].Center.Y < base.Center.Y)
							{
								num700 = 12;
							}
							else
							{
								num700 = 6;
							}
							if (Main.netMode != 1 && !this.confused)
							{
								this.ai[3] += 1f;
								if (this.justHit)
								{
									this.ai[3] = -45f;
									this.localAI[1] = 0f;
								}
								if (Main.netMode != 1 && this.ai[3] >= (float)(60 + Main.rand.Next(60)))
								{
									this.ai[3] = 0f;
									if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].head))
									{
										float num715 = 10f;
										Vector2 vector72 = new Vector2(this.position.X + (float)this.width * 0.5f - 4f, this.position.Y + (float)this.height * 0.7f);
										float num716 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector72.X;
										float num717 = Math.Abs(num716) * 0.1f;
										float num718 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector72.Y - num717;
										num716 += (float)Main.rand.Next(-10, 11);
										num718 += (float)Main.rand.Next(-30, 21);
										float num719 = (float)Math.Sqrt((double)(num716 * num716 + num718 * num718));
										num719 = num715 / num719;
										num716 *= num719;
										num718 *= num719;
										int num720 = 40;
										int num721 = 288;
										Projectile.NewProjectile(vector72.X, vector72.Y, num716, num718, num721, num720, 0f, Main.myPlayer, 0f, 0f);
									}
								}
							}
						}
						if (this.type == 490)
						{
							num700 = 4;
							if (this.target >= 0)
							{
								float num722 = (Main.player[this.target].Center - base.Center).Length();
								num722 /= 70f;
								if (num722 > 8f)
								{
									num722 = 8f;
								}
								num700 += (int)num722;
							}
						}
						for (int num723 = num699; num723 < num699 + num700; num723++)
						{
							if (Main.tile[num698, num723] == null)
							{
								Main.tile[num698, num723] = new Tile();
							}
							if ((Main.tile[num698, num723].nactive() && Main.tileSolid[(int)Main.tile[num698, num723].type]) || Main.tile[num698, num723].liquid > 0)
							{
								if (num723 <= num699 + 1)
								{
									flag84 = true;
								}
								flag83 = false;
								break;
							}
						}
						if (Main.player[this.target].npcTypeNoAggro[this.type])
						{
							bool flag85 = false;
							for (int num724 = num699; num724 < num699 + num700 - 2; num724++)
							{
								if (Main.tile[num698, num724] == null)
								{
									Main.tile[num698, num724] = new Tile();
								}
								if ((Main.tile[num698, num724].nactive() && Main.tileSolid[(int)Main.tile[num698, num724].type]) || Main.tile[num698, num724].liquid > 0)
								{
									flag85 = true;
									break;
								}
							}
							this.directionY = (!flag85).ToDirectionInt();
						}
						if (this.type == 169 || this.type == 268)
						{
							for (int num725 = num699 - 3; num725 < num699; num725++)
							{
								if (Main.tile[num698, num725] == null)
								{
									Main.tile[num698, num725] = new Tile();
								}
								if ((Main.tile[num698, num725].nactive() && Main.tileSolid[(int)Main.tile[num698, num725].type]) || Main.tile[num698, num725].liquid > 0)
								{
									flag84 = false;
									flag79 = true;
									break;
								}
							}
						}
						if (flag79)
						{
							flag84 = false;
							flag83 = true;
							if (this.type == 268)
							{
								this.velocity.Y = this.velocity.Y + 2f;
							}
						}
						if (flag83)
						{
							if (this.type == 75 || this.type == 169)
							{
								this.velocity.Y = this.velocity.Y + 0.2f;
								if (this.velocity.Y > 2f)
								{
									this.velocity.Y = 2f;
								}
							}
							else if (this.type == 490)
							{
								this.velocity.Y = this.velocity.Y + 0.03f;
								if ((double)this.velocity.Y > 0.75)
								{
									this.velocity.Y = 0.75f;
								}
							}
							else
							{
								this.velocity.Y = this.velocity.Y + 0.1f;
								if (this.velocity.Y > 3f)
								{
									this.velocity.Y = 3f;
								}
							}
						}
						else
						{
							if (this.type == 75 || this.type == 169)
							{
								if ((this.directionY < 0 && this.velocity.Y > 0f) || flag84)
								{
									this.velocity.Y = this.velocity.Y - 0.2f;
								}
							}
							else if (this.type == 490)
							{
								if ((this.directionY < 0 && this.velocity.Y > 0f) || flag84)
								{
									this.velocity.Y = this.velocity.Y - 0.075f;
								}
								if (this.velocity.Y < -0.75f)
								{
									this.velocity.Y = -0.75f;
								}
							}
							else if (this.directionY < 0 && this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y - 0.1f;
							}
							if (this.velocity.Y < -4f)
							{
								this.velocity.Y = -4f;
							}
						}
						if (this.type == 75 && this.wet)
						{
							this.velocity.Y = this.velocity.Y - 0.2f;
							if (this.velocity.Y < -2f)
							{
								this.velocity.Y = -2f;
							}
						}
						if (this.collideX)
						{
							this.velocity.X = this.oldVelocity.X * -0.4f;
							if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 1f)
							{
								this.velocity.X = 1f;
							}
							if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -1f)
							{
								this.velocity.X = -1f;
							}
						}
						if (this.collideY)
						{
							this.velocity.Y = this.oldVelocity.Y * -0.25f;
							if (this.velocity.Y > 0f && this.velocity.Y < 1f)
							{
								this.velocity.Y = 1f;
							}
							if (this.velocity.Y < 0f && this.velocity.Y > -1f)
							{
								this.velocity.Y = -1f;
							}
						}
						float num726 = 2f;
						if (this.type == 75)
						{
							num726 = 3f;
						}
						if (this.type == 253)
						{
							num726 = 4f;
						}
						if (this.type == 490)
						{
							num726 = 1.5f;
						}
						if (this.type == 330)
						{
							this.alpha = 0;
							num726 = 4f;
							if (!flag80)
							{
								this.TargetClosest(true);
							}
							else if (this.timeLeft > 10)
							{
								this.timeLeft = 10;
							}
							if (this.direction < 0 && this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if (this.direction > 0 && this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
						}
						if (this.direction == -1 && this.velocity.X > -num726)
						{
							this.velocity.X = this.velocity.X - 0.1f;
							if (this.velocity.X > num726)
							{
								this.velocity.X = this.velocity.X - 0.1f;
							}
							else if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X + 0.05f;
							}
							if (this.velocity.X < -num726)
							{
								this.velocity.X = -num726;
							}
						}
						else if (this.direction == 1 && this.velocity.X < num726)
						{
							this.velocity.X = this.velocity.X + 0.1f;
							if (this.velocity.X < -num726)
							{
								this.velocity.X = this.velocity.X + 0.1f;
							}
							else if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X - 0.05f;
							}
							if (this.velocity.X > num726)
							{
								this.velocity.X = num726;
							}
						}
						if (this.type == 490)
						{
							num726 = 1f;
						}
						else
						{
							num726 = 1.5f;
						}
						if (this.directionY == -1 && this.velocity.Y > -num726)
						{
							this.velocity.Y = this.velocity.Y - 0.04f;
							if (this.velocity.Y > num726)
							{
								this.velocity.Y = this.velocity.Y - 0.05f;
							}
							else if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y + 0.03f;
							}
							if (this.velocity.Y < -num726)
							{
								this.velocity.Y = -num726;
							}
						}
						else if (this.directionY == 1 && this.velocity.Y < num726)
						{
							this.velocity.Y = this.velocity.Y + 0.04f;
							if (this.velocity.Y < -num726)
							{
								this.velocity.Y = this.velocity.Y + 0.05f;
							}
							else if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y - 0.03f;
							}
							if (this.velocity.Y > num726)
							{
								this.velocity.Y = num726;
							}
						}
						if (this.type == 122)
						{
							Lighting.AddLight((int)this.position.X / 16, (int)this.position.Y / 16, 0.4f, 0f, 0.25f);
							return;
						}
					}
					else if (this.aiStyle == 23)
					{
						this.noGravity = true;
						this.noTileCollide = true;
						if (this.type == 83)
						{
							Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.2f, 0.05f, 0.3f);
						}
						else if (this.type == 179)
						{
							Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.3f, 0.15f, 0.05f);
						}
						else
						{
							Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.05f, 0.2f, 0.3f);
						}
						if (this.target < 0 || this.target == 255 || Main.player[this.target].dead)
						{
							this.TargetClosest(true);
						}
						if (this.ai[0] == 0f)
						{
							float num727 = 9f;
							Vector2 vector73 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num728 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector73.X;
							float num729 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector73.Y;
							float num730 = (float)Math.Sqrt((double)(num728 * num728 + num729 * num729));
							num730 = num727 / num730;
							num728 *= num730;
							num729 *= num730;
							this.velocity.X = num728;
							this.velocity.Y = num729;
							this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 0.785f;
							this.ai[0] = 1f;
							this.ai[1] = 0f;
							this.netUpdate = true;
							return;
						}
						if (this.ai[0] == 1f)
						{
							if (this.justHit)
							{
								this.ai[0] = 2f;
								this.ai[1] = 0f;
							}
							this.velocity *= 0.99f;
							this.ai[1] += 1f;
							if (this.ai[1] >= 100f)
							{
								this.netUpdate = true;
								this.ai[0] = 2f;
								this.ai[1] = 0f;
								this.velocity.X = 0f;
								this.velocity.Y = 0f;
								return;
							}
						}
						else
						{
							if (this.justHit)
							{
								this.ai[0] = 2f;
								this.ai[1] = 0f;
							}
							this.velocity *= 0.96f;
							this.ai[1] += 1f;
							float num731 = this.ai[1] / 120f;
							num731 = 0.1f + num731 * 0.4f;
							this.rotation += num731 * (float)this.direction;
							if (this.ai[1] >= 120f)
							{
								this.netUpdate = true;
								this.ai[0] = 0f;
								this.ai[1] = 0f;
								return;
							}
						}
					}
					else if (this.aiStyle == 24)
					{
						this.noGravity = true;
						if (this.ai[0] == 0f)
						{
							this.noGravity = false;
							this.TargetClosest(true);
							if (Main.netMode != 1)
							{
								if (this.velocity.X != 0f || this.velocity.Y < 0f || (double)this.velocity.Y > 0.3)
								{
									this.ai[0] = 1f;
									this.netUpdate = true;
									this.direction = -this.direction;
								}
								else
								{
									Rectangle rectangle8 = new Rectangle((int)Main.player[this.target].position.X, (int)Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height);
									Rectangle rectangle9 = new Rectangle((int)this.position.X - 100, (int)this.position.Y - 100, this.width + 200, this.height + 200);
									if (rectangle9.Intersects(rectangle8) || this.life < this.lifeMax)
									{
										this.ai[0] = 1f;
										this.velocity.Y = this.velocity.Y - 6f;
										this.netUpdate = true;
										this.direction = -this.direction;
									}
								}
							}
						}
						else if (!Main.player[this.target].dead)
						{
							if (this.collideX)
							{
								this.direction *= -1;
								this.velocity.X = this.oldVelocity.X * -0.5f;
								if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
								{
									this.velocity.X = 2f;
								}
								if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
								{
									this.velocity.X = -2f;
								}
							}
							if (this.collideY)
							{
								this.velocity.Y = this.oldVelocity.Y * -0.5f;
								if (this.velocity.Y > 0f && this.velocity.Y < 1f)
								{
									this.velocity.Y = 1f;
								}
								if (this.velocity.Y < 0f && this.velocity.Y > -1f)
								{
									this.velocity.Y = -1f;
								}
							}
							if (this.direction == -1 && this.velocity.X > -3f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
								if (this.velocity.X > 3f)
								{
									this.velocity.X = this.velocity.X - 0.1f;
								}
								else if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X - 0.05f;
								}
								if (this.velocity.X < -3f)
								{
									this.velocity.X = -3f;
								}
							}
							else if (this.direction == 1 && this.velocity.X < 3f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
								if (this.velocity.X < -3f)
								{
									this.velocity.X = this.velocity.X + 0.1f;
								}
								else if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X + 0.05f;
								}
								if (this.velocity.X > 3f)
								{
									this.velocity.X = 3f;
								}
							}
							int num732 = (int)((this.position.X + (float)(this.width / 2)) / 16f) + this.direction;
							int num733 = (int)((this.position.Y + (float)this.height) / 16f);
							bool flag86 = true;
							int num734 = 15;
							bool flag87 = false;
							for (int num735 = num733; num735 < num733 + num734; num735++)
							{
								if (Main.tile[num732, num735] == null)
								{
									Main.tile[num732, num735] = new Tile();
								}
								if ((Main.tile[num732, num735].nactive() && Main.tileSolid[(int)Main.tile[num732, num735].type]) || Main.tile[num732, num735].liquid > 0)
								{
									if (num735 < num733 + 5)
									{
										flag87 = true;
									}
									flag86 = false;
									break;
								}
							}
							if (flag86)
							{
								this.velocity.Y = this.velocity.Y + 0.05f;
							}
							else
							{
								this.velocity.Y = this.velocity.Y - 0.1f;
							}
							if (flag87)
							{
								this.velocity.Y = this.velocity.Y - 0.2f;
							}
							if (this.velocity.Y > 2f)
							{
								this.velocity.Y = 2f;
							}
							if (this.velocity.Y < -4f)
							{
								this.velocity.Y = -4f;
							}
						}
						if (this.wet)
						{
							this.ai[1] = 0f;
							if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.95f;
							}
							this.velocity.Y = this.velocity.Y - 0.5f;
							if (this.velocity.Y < -4f)
							{
								this.velocity.Y = -4f;
							}
							this.TargetClosest(true);
							return;
						}
					}
					else if (this.aiStyle == 25)
					{
						bool flag88 = this.type == 341 && !Main.snowMoon;
						if (this.ai[3] == 0f)
						{
							this.position.X = this.position.X + 8f;
							if (this.position.Y / 16f > (float)(Main.maxTilesY - 200))
							{
								this.ai[3] = 3f;
							}
							else if ((double)(this.position.Y / 16f) > Main.worldSurface)
							{
								this.TargetClosest(true);
								if (Main.player[this.target].ZoneSnow)
								{
									this.ai[3] = 4f;
								}
								else
								{
									this.ai[3] = 2f;
								}
							}
							else
							{
								this.ai[3] = 1f;
							}
						}
						if (this.type == 341)
						{
							this.ai[3] = 1f;
						}
						if (this.ai[0] == 0f)
						{
							if (!flag88)
							{
								this.TargetClosest(true);
							}
							if (Main.netMode != 1)
							{
								if (this.velocity.X != 0f || this.velocity.Y < 0f || (double)this.velocity.Y > 0.3)
								{
									this.ai[0] = 1f;
									this.netUpdate = true;
									return;
								}
								Rectangle rectangle10 = new Rectangle((int)Main.player[this.target].position.X, (int)Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height);
								Rectangle rectangle11 = new Rectangle((int)this.position.X - 100, (int)this.position.Y - 100, this.width + 200, this.height + 200);
								if (rectangle11.Intersects(rectangle10) || this.life < this.lifeMax)
								{
									this.ai[0] = 1f;
									this.netUpdate = true;
									return;
								}
							}
						}
						else if (this.velocity.Y == 0f)
						{
							this.ai[2] += 1f;
							int num736 = 20;
							if (this.ai[1] == 0f)
							{
								num736 = 12;
							}
							if (this.ai[2] < (float)num736)
							{
								this.velocity.X = this.velocity.X * 0.9f;
								return;
							}
							this.ai[2] = 0f;
							if (!flag88)
							{
								this.TargetClosest(true);
							}
							if (this.direction == 0)
							{
								this.direction = -1;
							}
							this.spriteDirection = this.direction;
							this.ai[1] += 1f;
							if (this.ai[1] == 2f)
							{
								this.velocity.X = (float)this.direction * 2.5f;
								this.velocity.Y = -8f;
								this.ai[1] = 0f;
							}
							else
							{
								this.velocity.X = (float)this.direction * 3.5f;
								this.velocity.Y = -4f;
							}
							this.netUpdate = true;
							return;
						}
						else
						{
							if (this.direction == 1 && this.velocity.X < 1f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
								return;
							}
							if (this.direction == -1 && this.velocity.X > -1f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
								return;
							}
						}
					}
					else if (this.aiStyle == 26)
					{
						int num737 = 30;
						int num738 = 10;
						bool flag89 = false;
						bool flag90 = false;
						bool flag91 = false;
						if (this.velocity.Y == 0f && ((this.velocity.X > 0f && this.direction < 0) || (this.velocity.X < 0f && this.direction > 0)))
						{
							flag90 = true;
							this.ai[3] += 1f;
						}
						if (this.type == 546)
						{
							num738 = 4;
							bool flag92 = this.velocity.Y == 0f;
							for (int num739 = 0; num739 < 200; num739++)
							{
								if (num739 != this.whoAmI && Main.npc[num739].active && Main.npc[num739].type == this.type && Math.Abs(this.position.X - Main.npc[num739].position.X) + Math.Abs(this.position.Y - Main.npc[num739].position.Y) < (float)this.width)
								{
									if (this.position.X < Main.npc[num739].position.X)
									{
										this.velocity.X = this.velocity.X - 0.05f;
									}
									else
									{
										this.velocity.X = this.velocity.X + 0.05f;
									}
									if (this.position.Y < Main.npc[num739].position.Y)
									{
										this.velocity.Y = this.velocity.Y - 0.05f;
									}
									else
									{
										this.velocity.Y = this.velocity.Y + 0.05f;
									}
								}
							}
							if (flag92)
							{
								this.velocity.Y = 0f;
							}
						}
						if (this.position.X == this.oldPosition.X || this.ai[3] >= (float)num737 || flag90)
						{
							this.ai[3] += 1f;
							flag91 = true;
						}
						else if (this.ai[3] > 0f)
						{
							this.ai[3] -= 1f;
						}
						if (this.ai[3] > (float)(num737 * num738))
						{
							this.ai[3] = 0f;
						}
						if (this.justHit)
						{
							this.ai[3] = 0f;
						}
						if (this.ai[3] == (float)num737)
						{
							this.netUpdate = true;
						}
						Vector2 vector74 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num740 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector74.X;
						float num741 = Main.player[this.target].position.Y - vector74.Y;
						float num742 = (float)Math.Sqrt((double)(num740 * num740 + num741 * num741));
						if (num742 < 200f && !flag91)
						{
							this.ai[3] = 0f;
						}
						if (this.type == 410)
						{
							this.ai[1] += 1f;
							bool flag93 = this.ai[1] >= 240f;
							if (!flag93 && this.velocity.Y == 0f)
							{
								for (int num743 = 0; num743 < 255; num743++)
								{
									if (Main.player[num743].active && !Main.player[num743].dead && Main.player[num743].Distance(base.Center) < 800f && Main.player[num743].Center.Y < base.Center.Y && Math.Abs(Main.player[num743].Center.X - base.Center.X) < 20f)
									{
										flag93 = true;
										break;
									}
								}
							}
							if (flag93 && Main.netMode != 1)
							{
								for (int num744 = 0; num744 < 3; num744++)
								{
									Projectile.NewProjectile(base.Center.X, base.Center.Y, (Main.rand.NextFloat() - 0.5f) * 2f, -4f - 10f * Main.rand.NextFloat(), 538, 50, 0f, Main.myPlayer, 0f, 0f);
								}
								this.HitEffect(9999, 10.0);
								this.active = false;
								return;
							}
						}
						else if (this.type == 423)
						{
							if (this.ai[2] == 1f)
							{
								this.ai[1] += 1f;
								this.velocity.X = this.velocity.X * 0.7f;
								if (this.ai[1] < 30f)
								{
									Vector2 vector75 = base.Center + Vector2.UnitX * (float)this.spriteDirection * -20f;
									Dust dust11 = Main.dust[Dust.NewDust(vector75, 0, 0, 242, 0f, 0f, 0, default(Color), 1f)];
									Vector2 vector76 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
									dust11.position = vector75 + vector76 * 20f;
									dust11.velocity = -vector76 * 2f;
									dust11.scale = 0.5f + vector76.X * (float)(-(float)this.spriteDirection);
									dust11.fadeIn = 1f;
									dust11.noGravity = true;
								}
								else if (this.ai[1] == 30f)
								{
									for (int num745 = 0; num745 < 20; num745++)
									{
										Vector2 vector77 = base.Center + Vector2.UnitX * (float)this.spriteDirection * -20f;
										Dust dust12 = Main.dust[Dust.NewDust(vector77, 0, 0, 242, 0f, 0f, 0, default(Color), 1f)];
										Vector2 vector78 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
										dust12.position = vector77 + vector78 * 4f;
										dust12.velocity = vector78 * 4f + Vector2.UnitX * Main.rand.NextFloat() * (float)this.spriteDirection * -5f;
										dust12.scale = 0.5f + vector78.X * (float)(-(float)this.spriteDirection);
										dust12.fadeIn = 1f;
										dust12.noGravity = true;
									}
								}
								if (this.velocity.X > -0.5f && this.velocity.X < 0.5f)
								{
									this.velocity.X = 0f;
								}
								if (this.ai[1] == 30f && Main.netMode != 1)
								{
									int num746 = Main.expertMode ? 35 : 50;
									Projectile.NewProjectile(base.Center.X + (float)(this.spriteDirection * -20), base.Center.Y, (float)(this.spriteDirection * -7), 0f, 575, num746, 0f, Main.myPlayer, (float)this.target, 0f);
								}
								if (this.ai[1] >= 60f)
								{
									this.ai[1] = (float)(-(float)Main.rand.Next(320, 601));
									this.ai[2] = 0f;
								}
							}
							else
							{
								this.ai[1] += 1f;
								if (this.ai[1] >= 180f && num742 < 500f && this.velocity.Y == 0f)
								{
									flag89 = true;
									this.ai[1] = 0f;
									this.ai[2] = 1f;
									this.netUpdate = true;
								}
								else if (this.velocity.Y == 0f && num742 < 100f && Math.Abs(this.velocity.X) > 3f && ((base.Center.X < Main.player[this.target].Center.X && this.velocity.X > 0f) || (base.Center.X > Main.player[this.target].Center.X && this.velocity.X < 0f)))
								{
									this.velocity.Y = this.velocity.Y - 4f;
								}
							}
						}
						else if (this.type == 155 || this.type == 329)
						{
							if (this.velocity.Y == 0f && num742 < 100f && Math.Abs(this.velocity.X) > 3f && ((this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) && this.velocity.X > 0f) || (this.position.X + (float)(this.width / 2) > Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) && this.velocity.X < 0f)))
							{
								this.velocity.Y = this.velocity.Y - 4f;
							}
						}
						else if (this.type == 546 && this.velocity.Y == 0f && Math.Abs(this.velocity.X) > 3f && ((base.Center.X < Main.player[this.target].Center.X && this.velocity.X > 0f) || (base.Center.X > Main.player[this.target].Center.X && this.velocity.X < 0f)))
						{
							this.velocity.Y = this.velocity.Y - 4f;
							Main.PlaySound(3, base.Center, 11);
						}
						if (this.ai[3] < (float)num737)
						{
							if ((this.type == 329 || this.type == 315) && !Main.pumpkinMoon)
							{
								if (this.timeLeft > 10)
								{
									this.timeLeft = 10;
								}
							}
							else
							{
								this.TargetClosest(true);
							}
						}
						else
						{
							if (this.velocity.X == 0f)
							{
								if (this.velocity.Y == 0f)
								{
									this.ai[0] += 1f;
									if (this.ai[0] >= 2f)
									{
										this.direction *= -1;
										this.spriteDirection = this.direction;
										this.ai[0] = 0f;
									}
								}
							}
							else
							{
								this.ai[0] = 0f;
							}
							this.directionY = -1;
							if (this.direction == 0)
							{
								this.direction = 1;
							}
						}
						float num747 = 6f;
						float num748 = 0.07f;
						if (!flag89 && (this.velocity.Y == 0f || this.wet || (this.velocity.X <= 0f && this.direction < 0) || (this.velocity.X >= 0f && this.direction > 0)))
						{
							if (this.type == 155)
							{
								if (this.velocity.X > 0f && this.direction < 0)
								{
									this.velocity.X = this.velocity.X * 0.95f;
								}
								if (this.velocity.X < 0f && this.direction > 0)
								{
									this.velocity.X = this.velocity.X * 0.95f;
								}
							}
							else if (this.type == 329)
							{
								if (this.velocity.X > 0f && this.direction < 0)
								{
									this.velocity.X = this.velocity.X * 0.9f;
								}
								if (this.velocity.X < 0f && this.direction > 0)
								{
									this.velocity.X = this.velocity.X * 0.9f;
								}
								if (this.direction > 0 && this.velocity.X < 3f)
								{
									this.velocity.X = this.velocity.X + 0.1f;
								}
								if (this.direction < 0 && this.velocity.X > -3f)
								{
									this.velocity.X = this.velocity.X - 0.1f;
								}
							}
							else if (this.type == 315)
							{
								if (this.velocity.X > 0f && this.direction < 0)
								{
									this.velocity.X = this.velocity.X * 0.95f;
								}
								if (this.velocity.X < 0f && this.direction > 0)
								{
									this.velocity.X = this.velocity.X * 0.95f;
								}
								if (this.velocity.X < -num747 || this.velocity.X > num747)
								{
									if (this.velocity.Y == 0f)
									{
										this.velocity *= 0.8f;
									}
								}
								else if (this.velocity.X < num747 && this.direction == 1)
								{
									this.velocity.X = this.velocity.X + 0.07f;
									if (this.velocity.X > num747)
									{
										this.velocity.X = num747;
									}
								}
								else if (this.velocity.X > -num747 && this.direction == -1)
								{
									this.velocity.X = this.velocity.X - 0.07f;
									if (this.velocity.X < -num747)
									{
										this.velocity.X = -num747;
									}
								}
							}
							else if (this.type == 410)
							{
								if (Math.Sign(this.velocity.X) != this.direction)
								{
									this.velocity.X = this.velocity.X * 0.9f;
								}
								num747 = 6f;
								num748 = 0.2f;
							}
							else if (this.type == 423)
							{
								if (Math.Sign(this.velocity.X) != this.direction)
								{
									this.velocity.X = this.velocity.X * 0.85f;
								}
								num747 = 10f;
								num748 = 0.2f;
							}
							else if (this.type == 546)
							{
								if (Math.Sign(this.velocity.X) != this.direction)
								{
									this.velocity.X = this.velocity.X * 0.92f;
								}
								float num749 = MathHelper.Lerp(0.6f, 1f, Math.Abs(Main.windSpeedSet)) * (float)Math.Sign(Main.windSpeedSet);
								if (!Main.player[this.target].ZoneSandstorm)
								{
									num749 = 0f;
								}
								num747 = 5f + num749 * (float)this.direction * 4f;
								num748 = 0.2f;
							}
							if (this.velocity.X < -num747 || this.velocity.X > num747)
							{
								if (this.velocity.Y == 0f)
								{
									this.velocity *= 0.8f;
								}
							}
							else if (this.velocity.X < num747 && this.direction == 1)
							{
								this.velocity.X = this.velocity.X + num748;
								if (this.velocity.X > num747)
								{
									this.velocity.X = num747;
								}
							}
							else if (this.velocity.X > -num747 && this.direction == -1)
							{
								this.velocity.X = this.velocity.X - num748;
								if (this.velocity.X < -num747)
								{
									this.velocity.X = -num747;
								}
							}
						}
						if (this.velocity.Y >= 0f)
						{
							int num750 = 0;
							if (this.velocity.X < 0f)
							{
								num750 = -1;
							}
							if (this.velocity.X > 0f)
							{
								num750 = 1;
							}
							Vector2 position5 = this.position;
							position5.X += this.velocity.X;
							int num751 = (int)((position5.X + (float)(this.width / 2) + (float)((this.width / 2 + 1) * num750)) / 16f);
							int num752 = (int)((position5.Y + (float)this.height - 1f) / 16f);
							if (Main.tile[num751, num752] == null)
							{
								Main.tile[num751, num752] = new Tile();
							}
							if (Main.tile[num751, num752 - 1] == null)
							{
								Main.tile[num751, num752 - 1] = new Tile();
							}
							if (Main.tile[num751, num752 - 2] == null)
							{
								Main.tile[num751, num752 - 2] = new Tile();
							}
							if (Main.tile[num751, num752 - 3] == null)
							{
								Main.tile[num751, num752 - 3] = new Tile();
							}
							if (Main.tile[num751, num752 + 1] == null)
							{
								Main.tile[num751, num752 + 1] = new Tile();
							}
							if ((float)(num751 * 16) < position5.X + (float)this.width && (float)(num751 * 16 + 16) > position5.X && ((Main.tile[num751, num752].nactive() && !Main.tile[num751, num752].topSlope() && !Main.tile[num751, num752 - 1].topSlope() && Main.tileSolid[(int)Main.tile[num751, num752].type] && !Main.tileSolidTop[(int)Main.tile[num751, num752].type]) || (Main.tile[num751, num752 - 1].halfBrick() && Main.tile[num751, num752 - 1].nactive())) && (!Main.tile[num751, num752 - 1].nactive() || !Main.tileSolid[(int)Main.tile[num751, num752 - 1].type] || Main.tileSolidTop[(int)Main.tile[num751, num752 - 1].type] || (Main.tile[num751, num752 - 1].halfBrick() && (!Main.tile[num751, num752 - 4].nactive() || !Main.tileSolid[(int)Main.tile[num751, num752 - 4].type] || Main.tileSolidTop[(int)Main.tile[num751, num752 - 4].type]))) && (!Main.tile[num751, num752 - 2].nactive() || !Main.tileSolid[(int)Main.tile[num751, num752 - 2].type] || Main.tileSolidTop[(int)Main.tile[num751, num752 - 2].type]) && (!Main.tile[num751, num752 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num751, num752 - 3].type] || Main.tileSolidTop[(int)Main.tile[num751, num752 - 3].type]) && (!Main.tile[num751 - num750, num752 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num751 - num750, num752 - 3].type]))
							{
								float num753 = (float)(num752 * 16);
								if (Main.tile[num751, num752].halfBrick())
								{
									num753 += 8f;
								}
								if (Main.tile[num751, num752 - 1].halfBrick())
								{
									num753 -= 8f;
								}
								if (num753 < position5.Y + (float)this.height)
								{
									float num754 = position5.Y + (float)this.height - num753;
									if ((double)num754 <= 16.1)
									{
										this.gfxOffY += this.position.Y + (float)this.height - num753;
										this.position.Y = num753 - (float)this.height;
										if (num754 < 9f)
										{
											this.stepSpeed = 1f;
										}
										else
										{
											this.stepSpeed = 2f;
										}
									}
								}
							}
						}
						if (this.velocity.Y == 0f)
						{
							int num755 = (int)((this.position.X + (float)(this.width / 2) + (float)((this.width / 2 + 2) * this.direction) + this.velocity.X * 5f) / 16f);
							int num756 = (int)((this.position.Y + (float)this.height - 15f) / 16f);
							if (Main.tile[num755, num756] == null)
							{
								Main.tile[num755, num756] = new Tile();
							}
							if (Main.tile[num755, num756 - 1] == null)
							{
								Main.tile[num755, num756 - 1] = new Tile();
							}
							if (Main.tile[num755, num756 - 2] == null)
							{
								Main.tile[num755, num756 - 2] = new Tile();
							}
							if (Main.tile[num755, num756 - 3] == null)
							{
								Main.tile[num755, num756 - 3] = new Tile();
							}
							if (Main.tile[num755, num756 + 1] == null)
							{
								Main.tile[num755, num756 + 1] = new Tile();
							}
							if (Main.tile[num755 + this.direction, num756 - 1] == null)
							{
								Main.tile[num755 + this.direction, num756 - 1] = new Tile();
							}
							if (Main.tile[num755 + this.direction, num756 + 1] == null)
							{
								Main.tile[num755 + this.direction, num756 + 1] = new Tile();
							}
							if (Main.tile[num755 - this.direction, num756 + 1] == null)
							{
								Main.tile[num755 - this.direction, num756 + 1] = new Tile();
							}
							int num757 = this.spriteDirection;
							if (this.type == 423 || this.type == 410 || this.type == 546)
							{
								num757 *= -1;
							}
							if ((this.velocity.X < 0f && num757 == -1) || (this.velocity.X > 0f && num757 == 1))
							{
								bool flag94 = this.type == 410 || this.type == 423;
								float num758 = 3f;
								if (Main.tile[num755, num756 - 2].nactive() && Main.tileSolid[(int)Main.tile[num755, num756 - 2].type])
								{
									if (Main.tile[num755, num756 - 3].nactive() && Main.tileSolid[(int)Main.tile[num755, num756 - 3].type])
									{
										this.velocity.Y = -8.5f;
										this.netUpdate = true;
									}
									else
									{
										this.velocity.Y = -7.5f;
										this.netUpdate = true;
									}
								}
								else if (Main.tile[num755, num756 - 1].nactive() && !Main.tile[num755, num756 - 1].topSlope() && Main.tileSolid[(int)Main.tile[num755, num756 - 1].type])
								{
									this.velocity.Y = -7f;
									this.netUpdate = true;
								}
								else if (this.position.Y + (float)this.height - (float)(num756 * 16) > 20f && Main.tile[num755, num756].nactive() && !Main.tile[num755, num756].topSlope() && Main.tileSolid[(int)Main.tile[num755, num756].type])
								{
									this.velocity.Y = -6f;
									this.netUpdate = true;
								}
								else if ((this.directionY < 0 || Math.Abs(this.velocity.X) > num758) && (!flag94 || !Main.tile[num755, num756 + 1].nactive() || !Main.tileSolid[(int)Main.tile[num755, num756 + 1].type]) && (!Main.tile[num755, num756 + 2].nactive() || !Main.tileSolid[(int)Main.tile[num755, num756 + 2].type]) && (!Main.tile[num755 + this.direction, num756 + 3].nactive() || !Main.tileSolid[(int)Main.tile[num755 + this.direction, num756 + 3].type]))
								{
									this.velocity.Y = -8f;
									this.netUpdate = true;
								}
							}
						}
						if (this.type == 423 && Math.Abs(this.velocity.X) >= num747 * 0.95f)
						{
							Rectangle hitbox2 = base.Hitbox;
							for (int num759 = 0; num759 < 2; num759++)
							{
								if (Main.rand.Next(3) == 0)
								{
									Dust dust13 = Main.dust[Dust.NewDust(hitbox2.TopLeft(), hitbox2.Width, hitbox2.Height, 242, 0f, 0f, 0, default(Color), 1f)];
									dust13.velocity = Vector2.Zero;
									dust13.noGravity = true;
									dust13.fadeIn = 1f;
									dust13.scale = 0.5f + Main.rand.NextFloat();
								}
							}
						}
						if (this.type == 546)
						{
							this.rotation += this.velocity.X * 0.05f;
							this.spriteDirection = -this.direction;
							return;
						}
					}
					else if (this.aiStyle == 27)
					{
						if (this.position.X < 160f || this.position.X > (float)((Main.maxTilesX - 10) * 16))
						{
							this.active = false;
						}
						if (this.localAI[0] == 0f)
						{
							this.localAI[0] = 1f;
							Main.wofB = -1;
							Main.wofT = -1;
						}
						this.ai[1] += 1f;
						if (this.ai[2] == 0f)
						{
							if ((double)this.life < (double)this.lifeMax * 0.5)
							{
								this.ai[1] += 1f;
							}
							if ((double)this.life < (double)this.lifeMax * 0.2)
							{
								this.ai[1] += 1f;
							}
							if (this.ai[1] > 2700f)
							{
								this.ai[2] = 1f;
							}
						}
						if (this.ai[2] > 0f && this.ai[1] > 60f)
						{
							int num760 = 3;
							if ((double)this.life < (double)this.lifeMax * 0.3)
							{
								num760++;
							}
							this.ai[2] += 1f;
							this.ai[1] = 0f;
							if (this.ai[2] > (float)num760)
							{
								this.ai[2] = 0f;
							}
							if (Main.netMode != 1)
							{
								int num761 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)(this.height / 2) + 20f), 117, 1, 0f, 0f, 0f, 0f, 255);
								Main.npc[num761].velocity.X = (float)(this.direction * 8);
							}
						}
						this.localAI[3] += 1f;
						if (this.localAI[3] >= (float)(600 + Main.rand.Next(1000)))
						{
							this.localAI[3] = (float)(-(float)Main.rand.Next(200));
							Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 10);
						}
						Main.wof = this.whoAmI;
						int num762 = (int)(this.position.X / 16f);
						int num763 = (int)((this.position.X + (float)this.width) / 16f);
						int num764 = (int)((this.position.Y + (float)(this.height / 2)) / 16f);
						int num765 = 0;
						int num766 = num764 + 7;
						while (num765 < 15 && num766 > Main.maxTilesY - 200)
						{
							num766++;
							for (int num767 = num762; num767 <= num763; num767++)
							{
								try
								{
									if (WorldGen.SolidTile(num767, num766) || Main.tile[num767, num766].liquid > 0)
									{
										num765++;
									}
								}
								catch
								{
									num765 += 15;
								}
							}
						}
						num766 += 4;
						if (Main.wofB == -1)
						{
							Main.wofB = num766 * 16;
						}
						else if (Main.wofB > num766 * 16)
						{
							Main.wofB--;
							if (Main.wofB < num766 * 16)
							{
								Main.wofB = num766 * 16;
							}
						}
						else if (Main.wofB < num766 * 16)
						{
							Main.wofB++;
							if (Main.wofB > num766 * 16)
							{
								Main.wofB = num766 * 16;
							}
						}
						num765 = 0;
						num766 = num764 - 7;
						while (num765 < 15 && num766 < Main.maxTilesY - 10)
						{
							num766--;
							for (int num768 = num762; num768 <= num763; num768++)
							{
								try
								{
									if (WorldGen.SolidTile(num768, num766) || Main.tile[num768, num766].liquid > 0)
									{
										num765++;
									}
								}
								catch
								{
									num765 += 15;
								}
							}
						}
						num766 -= 4;
						if (Main.wofT == -1)
						{
							Main.wofT = num766 * 16;
						}
						else if (Main.wofT > num766 * 16)
						{
							Main.wofT--;
							if (Main.wofT < num766 * 16)
							{
								Main.wofT = num766 * 16;
							}
						}
						else if (Main.wofT < num766 * 16)
						{
							Main.wofT++;
							if (Main.wofT > num766 * 16)
							{
								Main.wofT = num766 * 16;
							}
						}
						float num769 = (float)((Main.wofB + Main.wofT) / 2 - this.height / 2);
						if (this.position.Y > num769 + 1f)
						{
							this.velocity.Y = -1f;
						}
						else if (this.position.Y < num769 - 1f)
						{
							this.velocity.Y = 1f;
						}
						this.velocity.Y = 0f;
						int num770 = (Main.maxTilesY - 180) * 16;
						if (num769 < (float)num770)
						{
							num769 = (float)num770;
						}
						this.position.Y = num769;
						float num771 = 1.5f;
						if ((double)this.life < (double)this.lifeMax * 0.75)
						{
							num771 += 0.25f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.5)
						{
							num771 += 0.4f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.25)
						{
							num771 += 0.5f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.1)
						{
							num771 += 0.6f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.66 && Main.expertMode)
						{
							num771 += 0.3f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.33 && Main.expertMode)
						{
							num771 += 0.3f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.05 && Main.expertMode)
						{
							num771 += 0.6f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.035 && Main.expertMode)
						{
							num771 += 0.6f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.025 && Main.expertMode)
						{
							num771 += 0.6f;
						}
						if (Main.expertMode)
						{
							num771 *= 1.35f;
							num771 += 0.35f;
						}
						if (this.velocity.X == 0f)
						{
							this.TargetClosest(true);
							this.velocity.X = (float)this.direction;
						}
						if (this.velocity.X < 0f)
						{
							this.velocity.X = -num771;
							this.direction = -1;
						}
						else
						{
							this.velocity.X = num771;
							this.direction = 1;
						}
						this.spriteDirection = this.direction;
						Vector2 vector79 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num772 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector79.X;
						float num773 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector79.Y;
						float num774 = (float)Math.Sqrt((double)(num772 * num772 + num773 * num773));
						num772 *= num774;
						num773 *= num774;
						if (this.direction > 0)
						{
							if (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) > this.position.X + (float)(this.width / 2))
							{
								this.rotation = (float)Math.Atan2((double)(-(double)num773), (double)(-(double)num772)) + 3.14f;
							}
							else
							{
								this.rotation = 0f;
							}
						}
						else if (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) < this.position.X + (float)(this.width / 2))
						{
							this.rotation = (float)Math.Atan2((double)num773, (double)num772) + 3.14f;
						}
						else
						{
							this.rotation = 0f;
						}
						if (Main.expertMode && Main.netMode != 1)
						{
							int num775 = (int)(1f + (float)this.life / (float)this.lifeMax * 10f);
							num775 *= num775;
							if (num775 < 400)
							{
								num775 = (num775 * 19 + 400) / 20;
							}
							if (num775 < 60)
							{
								num775 = (num775 * 3 + 60) / 4;
							}
							if (num775 < 20)
							{
								num775 = (num775 + 20) / 2;
							}
							num775 = (int)((double)num775 * 0.7);
							if (Main.rand.Next(num775) == 0)
							{
								int num776 = 0;
								float[] array2 = new float[10];
								for (int num777 = 0; num777 < 200; num777++)
								{
									if (num776 < 10 && Main.npc[num777].active && Main.npc[num777].type == 115)
									{
										array2[num776] = Main.npc[num777].ai[0];
										num776++;
									}
								}
								int maxValue7 = 1 + num776 * 2;
								if (num776 < 10 && Main.rand.Next(maxValue7) <= 1)
								{
									int num778 = -1;
									for (int num779 = 0; num779 < 1000; num779++)
									{
										int num780 = Main.rand.Next(10);
										float num781 = (float)num780 * 0.1f - 0.05f;
										bool flag95 = true;
										for (int num782 = 0; num782 < num776; num782++)
										{
											if (num781 == array2[num782])
											{
												flag95 = false;
												break;
											}
										}
										if (flag95)
										{
											num778 = num780;
											break;
										}
									}
									if (num778 >= 0)
									{
										int num783 = NPC.NewNPC((int)this.position.X, (int)num769, 115, this.whoAmI, 0f, 0f, 0f, 0f, 255);
										Main.npc[num783].ai[0] = (float)num778 * 0.1f - 0.05f;
									}
								}
							}
						}
						if (this.localAI[0] == 1f && Main.netMode != 1)
						{
							this.localAI[0] = 2f;
							num769 = (float)((Main.wofB + Main.wofT) / 2);
							num769 = (num769 + (float)Main.wofT) / 2f;
							int num784 = NPC.NewNPC((int)this.position.X, (int)num769, 114, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num784].ai[0] = 1f;
							num769 = (float)((Main.wofB + Main.wofT) / 2);
							num769 = (num769 + (float)Main.wofB) / 2f;
							num784 = NPC.NewNPC((int)this.position.X, (int)num769, 114, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num784].ai[0] = -1f;
							num769 = (float)((Main.wofB + Main.wofT) / 2);
							num769 = (num769 + (float)Main.wofB) / 2f;
							for (int num785 = 0; num785 < 11; num785++)
							{
								num784 = NPC.NewNPC((int)this.position.X, (int)num769, 115, this.whoAmI, 0f, 0f, 0f, 0f, 255);
								Main.npc[num784].ai[0] = (float)num785 * 0.1f - 0.05f;
							}
							return;
						}
					}
					else if (this.aiStyle == 28)
					{
						if (Main.wof < 0)
						{
							this.active = false;
							return;
						}
						this.realLife = Main.wof;
						if (Main.npc[Main.wof].life > 0)
						{
							this.life = Main.npc[Main.wof].life;
						}
						this.TargetClosest(true);
						this.position.X = Main.npc[Main.wof].position.X;
						this.direction = Main.npc[Main.wof].direction;
						this.spriteDirection = this.direction;
						float num786 = (float)((Main.wofB + Main.wofT) / 2);
						if (this.ai[0] > 0f)
						{
							num786 = (num786 + (float)Main.wofT) / 2f;
						}
						else
						{
							num786 = (num786 + (float)Main.wofB) / 2f;
						}
						num786 -= (float)(this.height / 2);
						if (this.position.Y > num786 + 1f)
						{
							this.velocity.Y = -1f;
						}
						else if (this.position.Y < num786 - 1f)
						{
							this.velocity.Y = 1f;
						}
						else
						{
							this.velocity.Y = 0f;
							this.position.Y = num786;
						}
						if (this.velocity.Y > 5f)
						{
							this.velocity.Y = 5f;
						}
						if (this.velocity.Y < -5f)
						{
							this.velocity.Y = -5f;
						}
						Vector2 vector80 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num787 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector80.X;
						float num788 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector80.Y;
						float num789 = (float)Math.Sqrt((double)(num787 * num787 + num788 * num788));
						num787 *= num789;
						num788 *= num789;
						bool flag96 = true;
						if (this.direction > 0)
						{
							if (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) > this.position.X + (float)(this.width / 2))
							{
								this.rotation = (float)Math.Atan2((double)(-(double)num788), (double)(-(double)num787)) + 3.14f;
							}
							else
							{
								this.rotation = 0f;
								flag96 = false;
							}
						}
						else if (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) < this.position.X + (float)(this.width / 2))
						{
							this.rotation = (float)Math.Atan2((double)num788, (double)num787) + 3.14f;
						}
						else
						{
							this.rotation = 0f;
							flag96 = false;
						}
						if (Main.netMode != 1)
						{
							int num790 = 4;
							this.localAI[1] += 1f;
							if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.75)
							{
								this.localAI[1] += 1f;
								num790++;
							}
							if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.5)
							{
								this.localAI[1] += 1f;
								num790++;
							}
							if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.25)
							{
								this.localAI[1] += 1f;
								num790 += 2;
							}
							if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.1)
							{
								this.localAI[1] += 2f;
								num790 += 3;
							}
							if (Main.expertMode)
							{
								this.localAI[1] += 0.5f;
								num790++;
								if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.1)
								{
									this.localAI[1] += 2f;
									num790 += 3;
								}
							}
							if (this.localAI[2] == 0f)
							{
								if (this.localAI[1] > 600f)
								{
									this.localAI[2] = 1f;
									this.localAI[1] = 0f;
									return;
								}
							}
							else if (this.localAI[1] > 45f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
							{
								this.localAI[1] = 0f;
								this.localAI[2] += 1f;
								if (this.localAI[2] >= (float)num790)
								{
									this.localAI[2] = 0f;
								}
								if (flag96)
								{
									float num791 = 9f;
									int num792 = 11;
									int num793 = 83;
									if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.5)
									{
										num792++;
										num791 += 1f;
									}
									if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.25)
									{
										num792++;
										num791 += 1f;
									}
									if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.1)
									{
										num792 += 2;
										num791 += 2f;
									}
									vector80 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									num787 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector80.X;
									num788 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector80.Y;
									num789 = (float)Math.Sqrt((double)(num787 * num787 + num788 * num788));
									num789 = num791 / num789;
									num787 *= num789;
									num788 *= num789;
									vector80.X += num787;
									vector80.Y += num788;
									Projectile.NewProjectile(vector80.X, vector80.Y, num787, num788, num793, num792, 0f, Main.myPlayer, 0f, 0f);
									return;
								}
							}
						}
					}
					else if (this.aiStyle == 29)
					{
						if (this.justHit)
						{
							this.ai[1] = 10f;
						}
						if (Main.wof < 0)
						{
							this.active = false;
							return;
						}
						this.TargetClosest(true);
						float num794 = 0.1f;
						float num795 = 300f;
						if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.25)
						{
							this.damage = (int)(75f * Main.damageMultiplier);
							this.defense = 40;
							if (!Main.expertMode)
							{
								num795 = 900f;
							}
							else
							{
								num794 += 0.1f;
							}
						}
						else if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.5)
						{
							this.damage = (int)(60f * Main.damageMultiplier);
							this.defense = 30;
							if (!Main.expertMode)
							{
								num795 = 700f;
							}
							else
							{
								num794 += 0.066f;
							}
						}
						else if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.75)
						{
							this.damage = (int)(45f * Main.damageMultiplier);
							this.defense = 20;
							if (!Main.expertMode)
							{
								num795 = 500f;
							}
							else
							{
								num794 += 0.033f;
							}
						}
						if (Main.expertMode)
						{
							this.defense = this.defDefense;
							if (this.whoAmI % 4 == 0)
							{
								num795 *= 1.75f;
							}
							if (this.whoAmI % 4 == 1)
							{
								num795 *= 1.5f;
							}
							if (this.whoAmI % 4 == 2)
							{
								num795 *= 1.25f;
							}
							if (this.whoAmI % 3 == 0)
							{
								num795 *= 1.5f;
							}
							if (this.whoAmI % 3 == 1)
							{
								num795 *= 1.25f;
							}
							num795 *= 0.75f;
						}
						float num796 = Main.npc[Main.wof].position.X + (float)(Main.npc[Main.wof].width / 2);
						float num797 = Main.npc[Main.wof].position.Y;
						float num798 = (float)(Main.wofB - Main.wofT);
						num797 = (float)Main.wofT + num798 * this.ai[0];
						this.ai[2] += 1f;
						if (this.ai[2] > 100f)
						{
							num795 = (float)((int)(num795 * 1.3f));
							if (this.ai[2] > 200f)
							{
								this.ai[2] = 0f;
							}
						}
						Vector2 vector81 = new Vector2(num796, num797);
						float num799 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - (float)(this.width / 2) - vector81.X;
						float num800 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - (float)(this.height / 2) - vector81.Y;
						float num801 = (float)Math.Sqrt((double)(num799 * num799 + num800 * num800));
						if (this.ai[1] == 0f)
						{
							if (num801 > num795)
							{
								num801 = num795 / num801;
								num799 *= num801;
								num800 *= num801;
							}
							if (this.position.X < num796 + num799)
							{
								this.velocity.X = this.velocity.X + num794;
								if (this.velocity.X < 0f && num799 > 0f)
								{
									this.velocity.X = this.velocity.X + num794 * 2.5f;
								}
							}
							else if (this.position.X > num796 + num799)
							{
								this.velocity.X = this.velocity.X - num794;
								if (this.velocity.X > 0f && num799 < 0f)
								{
									this.velocity.X = this.velocity.X - num794 * 2.5f;
								}
							}
							if (this.position.Y < num797 + num800)
							{
								this.velocity.Y = this.velocity.Y + num794;
								if (this.velocity.Y < 0f && num800 > 0f)
								{
									this.velocity.Y = this.velocity.Y + num794 * 2.5f;
								}
							}
							else if (this.position.Y > num797 + num800)
							{
								this.velocity.Y = this.velocity.Y - num794;
								if (this.velocity.Y > 0f && num800 < 0f)
								{
									this.velocity.Y = this.velocity.Y - num794 * 2.5f;
								}
							}
							float num802 = 4f;
							if (Main.expertMode && Main.wof >= 0)
							{
								float num803 = 1.5f;
								float num804 = (float)(Main.npc[Main.wof].life / Main.npc[Main.wof].lifeMax);
								if ((double)num804 < 0.75)
								{
									num803 += 0.7f;
								}
								if ((double)num804 < 0.5)
								{
									num803 += 0.7f;
								}
								if ((double)num804 < 0.25)
								{
									num803 += 0.9f;
								}
								if ((double)num804 < 0.1)
								{
									num803 += 0.9f;
								}
								num803 *= 1.25f;
								num803 += 0.3f;
								num802 += num803 * 0.35f;
								if (base.Center.X < Main.npc[Main.wof].Center.X && Main.npc[Main.wof].velocity.X > 0f)
								{
									num802 += 6f;
								}
								if (base.Center.X > Main.npc[Main.wof].Center.X && Main.npc[Main.wof].velocity.X < 0f)
								{
									num802 += 6f;
								}
							}
							if (this.velocity.X > num802)
							{
								this.velocity.X = num802;
							}
							if (this.velocity.X < -num802)
							{
								this.velocity.X = -num802;
							}
							if (this.velocity.Y > num802)
							{
								this.velocity.Y = num802;
							}
							if (this.velocity.Y < -num802)
							{
								this.velocity.Y = -num802;
							}
						}
						else if (this.ai[1] > 0f)
						{
							this.ai[1] -= 1f;
						}
						else
						{
							this.ai[1] = 0f;
						}
						if (num799 > 0f)
						{
							this.spriteDirection = 1;
							this.rotation = (float)Math.Atan2((double)num800, (double)num799);
						}
						if (num799 < 0f)
						{
							this.spriteDirection = -1;
							this.rotation = (float)Math.Atan2((double)num800, (double)num799) + 3.14f;
						}
						Lighting.AddLight((int)(this.position.X + (float)(this.width / 2)) / 16, (int)(this.position.Y + (float)(this.height / 2)) / 16, 0.3f, 0.2f, 0.1f);
						return;
					}
					else if (this.aiStyle == 30)
					{
						if (this.target < 0 || this.target == 255 || Main.player[this.target].dead || !Main.player[this.target].active)
						{
							this.TargetClosest(true);
						}
						bool dead2 = Main.player[this.target].dead;
						float num805 = this.position.X + (float)(this.width / 2) - Main.player[this.target].position.X - (float)(Main.player[this.target].width / 2);
						float num806 = this.position.Y + (float)this.height - 59f - Main.player[this.target].position.Y - (float)(Main.player[this.target].height / 2);
						float num807 = (float)Math.Atan2((double)num806, (double)num805) + 1.57f;
						if (num807 < 0f)
						{
							num807 += 6.283f;
						}
						else if ((double)num807 > 6.283)
						{
							num807 -= 6.283f;
						}
						float num808 = 0.1f;
						if (this.rotation < num807)
						{
							if ((double)(num807 - this.rotation) > 3.1415)
							{
								this.rotation -= num808;
							}
							else
							{
								this.rotation += num808;
							}
						}
						else if (this.rotation > num807)
						{
							if ((double)(this.rotation - num807) > 3.1415)
							{
								this.rotation += num808;
							}
							else
							{
								this.rotation -= num808;
							}
						}
						if (this.rotation > num807 - num808 && this.rotation < num807 + num808)
						{
							this.rotation = num807;
						}
						if (this.rotation < 0f)
						{
							this.rotation += 6.283f;
						}
						else if ((double)this.rotation > 6.283)
						{
							this.rotation -= 6.283f;
						}
						if (this.rotation > num807 - num808 && this.rotation < num807 + num808)
						{
							this.rotation = num807;
						}
						if (Main.rand.Next(5) == 0)
						{
							int num809 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f), this.width, (int)((float)this.height * 0.5f), 5, this.velocity.X, 2f, 0, default(Color), 1f);
							Dust expr_2FBF8_cp_0 = Main.dust[num809];
							expr_2FBF8_cp_0.velocity.X = expr_2FBF8_cp_0.velocity.X * 0.5f;
							Dust expr_2FC18_cp_0 = Main.dust[num809];
							expr_2FC18_cp_0.velocity.Y = expr_2FC18_cp_0.velocity.Y * 0.1f;
						}
						if (Main.netMode != 1 && !Main.dayTime && !dead2 && this.timeLeft < 10)
						{
							for (int num810 = 0; num810 < 200; num810++)
							{
								if (num810 != this.whoAmI && Main.npc[num810].active && (Main.npc[num810].type == 125 || Main.npc[num810].type == 126) && Main.npc[num810].timeLeft - 1 > this.timeLeft)
								{
									this.timeLeft = Main.npc[num810].timeLeft - 1;
								}
							}
						}
						if (Main.dayTime || dead2)
						{
							this.velocity.Y = this.velocity.Y - 0.04f;
							if (this.timeLeft > 10)
							{
								this.timeLeft = 10;
								return;
							}
						}
						else if (this.ai[0] == 0f)
						{
							if (this.ai[1] == 0f)
							{
								float num811 = 7f;
								float num812 = 0.1f;
								if (Main.expertMode)
								{
									num811 = 8.25f;
									num812 = 0.115f;
								}
								int num813 = 1;
								if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)Main.player[this.target].width)
								{
									num813 = -1;
								}
								Vector2 vector82 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num814 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) + (float)(num813 * 300) - vector82.X;
								float num815 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 300f - vector82.Y;
								float num816 = (float)Math.Sqrt((double)(num814 * num814 + num815 * num815));
								float num817 = num816;
								num816 = num811 / num816;
								num814 *= num816;
								num815 *= num816;
								if (this.velocity.X < num814)
								{
									this.velocity.X = this.velocity.X + num812;
									if (this.velocity.X < 0f && num814 > 0f)
									{
										this.velocity.X = this.velocity.X + num812;
									}
								}
								else if (this.velocity.X > num814)
								{
									this.velocity.X = this.velocity.X - num812;
									if (this.velocity.X > 0f && num814 < 0f)
									{
										this.velocity.X = this.velocity.X - num812;
									}
								}
								if (this.velocity.Y < num815)
								{
									this.velocity.Y = this.velocity.Y + num812;
									if (this.velocity.Y < 0f && num815 > 0f)
									{
										this.velocity.Y = this.velocity.Y + num812;
									}
								}
								else if (this.velocity.Y > num815)
								{
									this.velocity.Y = this.velocity.Y - num812;
									if (this.velocity.Y > 0f && num815 < 0f)
									{
										this.velocity.Y = this.velocity.Y - num812;
									}
								}
								this.ai[2] += 1f;
								if (this.ai[2] >= 600f)
								{
									this.ai[1] = 1f;
									this.ai[2] = 0f;
									this.ai[3] = 0f;
									this.target = 255;
									this.netUpdate = true;
								}
								else if (this.position.Y + (float)this.height < Main.player[this.target].position.Y && num817 < 400f)
								{
									if (!Main.player[this.target].dead)
									{
										this.ai[3] += 1f;
										if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.9)
										{
											this.ai[3] += 0.3f;
										}
										if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.8)
										{
											this.ai[3] += 0.3f;
										}
										if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.7)
										{
											this.ai[3] += 0.3f;
										}
										if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.6)
										{
											this.ai[3] += 0.3f;
										}
									}
									if (this.ai[3] >= 60f)
									{
										this.ai[3] = 0f;
										vector82 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										num814 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector82.X;
										num815 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector82.Y;
										if (Main.netMode != 1)
										{
											float num818 = 9f;
											int num819 = 20;
											int num820 = 83;
											if (Main.expertMode)
											{
												num818 = 10.5f;
												num819 = 19;
											}
											num816 = (float)Math.Sqrt((double)(num814 * num814 + num815 * num815));
											num816 = num818 / num816;
											num814 *= num816;
											num815 *= num816;
											num814 += (float)Main.rand.Next(-40, 41) * 0.08f;
											num815 += (float)Main.rand.Next(-40, 41) * 0.08f;
											vector82.X += num814 * 15f;
											vector82.Y += num815 * 15f;
											Projectile.NewProjectile(vector82.X, vector82.Y, num814, num815, num820, num819, 0f, Main.myPlayer, 0f, 0f);
										}
									}
								}
							}
							else if (this.ai[1] == 1f)
							{
								this.rotation = num807;
								float num821 = 12f;
								if (Main.expertMode)
								{
									num821 = 15f;
								}
								Vector2 vector83 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num822 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector83.X;
								float num823 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector83.Y;
								float num824 = (float)Math.Sqrt((double)(num822 * num822 + num823 * num823));
								num824 = num821 / num824;
								this.velocity.X = num822 * num824;
								this.velocity.Y = num823 * num824;
								this.ai[1] = 2f;
							}
							else if (this.ai[1] == 2f)
							{
								this.ai[2] += 1f;
								if (this.ai[2] >= 25f)
								{
									this.velocity.X = this.velocity.X * 0.96f;
									this.velocity.Y = this.velocity.Y * 0.96f;
									if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
									{
										this.velocity.X = 0f;
									}
									if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
									{
										this.velocity.Y = 0f;
									}
								}
								else
								{
									this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
								}
								if (this.ai[2] >= 70f)
								{
									this.ai[3] += 1f;
									this.ai[2] = 0f;
									this.target = 255;
									this.rotation = num807;
									if (this.ai[3] >= 4f)
									{
										this.ai[1] = 0f;
										this.ai[3] = 0f;
									}
									else
									{
										this.ai[1] = 1f;
									}
								}
							}
							if ((double)this.life < (double)this.lifeMax * 0.4)
							{
								this.ai[0] = 1f;
								this.ai[1] = 0f;
								this.ai[2] = 0f;
								this.ai[3] = 0f;
								this.netUpdate = true;
								return;
							}
						}
						else if (this.ai[0] == 1f || this.ai[0] == 2f)
						{
							if (this.ai[0] == 1f)
							{
								this.ai[2] += 0.005f;
								if ((double)this.ai[2] > 0.5)
								{
									this.ai[2] = 0.5f;
								}
							}
							else
							{
								this.ai[2] -= 0.005f;
								if (this.ai[2] < 0f)
								{
									this.ai[2] = 0f;
								}
							}
							this.rotation += this.ai[2];
							this.ai[1] += 1f;
							if (this.ai[1] == 100f)
							{
								this.ai[0] += 1f;
								this.ai[1] = 0f;
								if (this.ai[0] == 3f)
								{
									this.ai[2] = 0f;
								}
								else
								{
									Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, 1);
									for (int num825 = 0; num825 < 2; num825++)
									{
										Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 143, 1f);
										Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 7, 1f);
										Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 6, 1f);
									}
									for (int num826 = 0; num826 < 20; num826++)
									{
										Dust.NewDust(this.position, this.width, this.height, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, default(Color), 1f);
									}
									Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
								}
							}
							Dust.NewDust(this.position, this.width, this.height, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, default(Color), 1f);
							this.velocity.X = this.velocity.X * 0.98f;
							this.velocity.Y = this.velocity.Y * 0.98f;
							if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
							{
								this.velocity.X = 0f;
							}
							if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
							{
								this.velocity.Y = 0f;
								return;
							}
						}
						else
						{
							this.damage = (int)((double)this.defDamage * 1.5);
							this.defense = this.defDefense + 10;
							this.soundHit = 4;
							if (this.ai[1] == 0f)
							{
								float num827 = 8f;
								float num828 = 0.15f;
								if (Main.expertMode)
								{
									num827 = 9.5f;
									num828 = 0.175f;
								}
								Vector2 vector84 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num829 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector84.X;
								float num830 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 300f - vector84.Y;
								float num831 = (float)Math.Sqrt((double)(num829 * num829 + num830 * num830));
								num831 = num827 / num831;
								num829 *= num831;
								num830 *= num831;
								if (this.velocity.X < num829)
								{
									this.velocity.X = this.velocity.X + num828;
									if (this.velocity.X < 0f && num829 > 0f)
									{
										this.velocity.X = this.velocity.X + num828;
									}
								}
								else if (this.velocity.X > num829)
								{
									this.velocity.X = this.velocity.X - num828;
									if (this.velocity.X > 0f && num829 < 0f)
									{
										this.velocity.X = this.velocity.X - num828;
									}
								}
								if (this.velocity.Y < num830)
								{
									this.velocity.Y = this.velocity.Y + num828;
									if (this.velocity.Y < 0f && num830 > 0f)
									{
										this.velocity.Y = this.velocity.Y + num828;
									}
								}
								else if (this.velocity.Y > num830)
								{
									this.velocity.Y = this.velocity.Y - num828;
									if (this.velocity.Y > 0f && num830 < 0f)
									{
										this.velocity.Y = this.velocity.Y - num828;
									}
								}
								this.ai[2] += 1f;
								if (this.ai[2] >= 300f)
								{
									this.ai[1] = 1f;
									this.ai[2] = 0f;
									this.ai[3] = 0f;
									this.TargetClosest(true);
									this.netUpdate = true;
								}
								vector84 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								num829 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector84.X;
								num830 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector84.Y;
								this.rotation = (float)Math.Atan2((double)num830, (double)num829) - 1.57f;
								if (Main.netMode != 1)
								{
									this.localAI[1] += 1f;
									if ((double)this.life < (double)this.lifeMax * 0.75)
									{
										this.localAI[1] += 1f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.5)
									{
										this.localAI[1] += 1f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.25)
									{
										this.localAI[1] += 1f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.1)
									{
										this.localAI[1] += 2f;
									}
									if (this.localAI[1] > 180f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
									{
										this.localAI[1] = 0f;
										float num832 = 8.5f;
										int num833 = 25;
										int num834 = 100;
										if (Main.expertMode)
										{
											num832 = 10f;
											num833 = 23;
										}
										num831 = (float)Math.Sqrt((double)(num829 * num829 + num830 * num830));
										num831 = num832 / num831;
										num829 *= num831;
										num830 *= num831;
										vector84.X += num829 * 15f;
										vector84.Y += num830 * 15f;
										Projectile.NewProjectile(vector84.X, vector84.Y, num829, num830, num834, num833, 0f, Main.myPlayer, 0f, 0f);
										return;
									}
								}
							}
							else
							{
								int num835 = 1;
								if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)Main.player[this.target].width)
								{
									num835 = -1;
								}
								float num836 = 8f;
								float num837 = 0.2f;
								if (Main.expertMode)
								{
									num836 = 9.5f;
									num837 = 0.25f;
								}
								Vector2 vector85 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num838 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) + (float)(num835 * 340) - vector85.X;
								float num839 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector85.Y;
								float num840 = (float)Math.Sqrt((double)(num838 * num838 + num839 * num839));
								num840 = num836 / num840;
								num838 *= num840;
								num839 *= num840;
								if (this.velocity.X < num838)
								{
									this.velocity.X = this.velocity.X + num837;
									if (this.velocity.X < 0f && num838 > 0f)
									{
										this.velocity.X = this.velocity.X + num837;
									}
								}
								else if (this.velocity.X > num838)
								{
									this.velocity.X = this.velocity.X - num837;
									if (this.velocity.X > 0f && num838 < 0f)
									{
										this.velocity.X = this.velocity.X - num837;
									}
								}
								if (this.velocity.Y < num839)
								{
									this.velocity.Y = this.velocity.Y + num837;
									if (this.velocity.Y < 0f && num839 > 0f)
									{
										this.velocity.Y = this.velocity.Y + num837;
									}
								}
								else if (this.velocity.Y > num839)
								{
									this.velocity.Y = this.velocity.Y - num837;
									if (this.velocity.Y > 0f && num839 < 0f)
									{
										this.velocity.Y = this.velocity.Y - num837;
									}
								}
								vector85 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								num838 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector85.X;
								num839 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector85.Y;
								this.rotation = (float)Math.Atan2((double)num839, (double)num838) - 1.57f;
								if (Main.netMode != 1)
								{
									this.localAI[1] += 1f;
									if ((double)this.life < (double)this.lifeMax * 0.75)
									{
										this.localAI[1] += 0.5f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.5)
									{
										this.localAI[1] += 0.75f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.25)
									{
										this.localAI[1] += 1f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.1)
									{
										this.localAI[1] += 1.5f;
									}
									if (Main.expertMode)
									{
										this.localAI[1] += 1.5f;
									}
									if (this.localAI[1] > 60f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
									{
										this.localAI[1] = 0f;
										float num841 = 9f;
										int num842 = 18;
										int num843 = 100;
										if (Main.expertMode)
										{
											num842 = 17;
										}
										num840 = (float)Math.Sqrt((double)(num838 * num838 + num839 * num839));
										num840 = num841 / num840;
										num838 *= num840;
										num839 *= num840;
										vector85.X += num838 * 15f;
										vector85.Y += num839 * 15f;
										Projectile.NewProjectile(vector85.X, vector85.Y, num838, num839, num843, num842, 0f, Main.myPlayer, 0f, 0f);
									}
								}
								this.ai[2] += 1f;
								if (this.ai[2] >= 180f)
								{
									this.ai[1] = 0f;
									this.ai[2] = 0f;
									this.ai[3] = 0f;
									this.TargetClosest(true);
									this.netUpdate = true;
									return;
								}
							}
						}
					}
					else if (this.aiStyle == 31)
					{
						if (this.target < 0 || this.target == 255 || Main.player[this.target].dead || !Main.player[this.target].active)
						{
							this.TargetClosest(true);
						}
						bool dead3 = Main.player[this.target].dead;
						float num844 = this.position.X + (float)(this.width / 2) - Main.player[this.target].position.X - (float)(Main.player[this.target].width / 2);
						float num845 = this.position.Y + (float)this.height - 59f - Main.player[this.target].position.Y - (float)(Main.player[this.target].height / 2);
						float num846 = (float)Math.Atan2((double)num845, (double)num844) + 1.57f;
						if (num846 < 0f)
						{
							num846 += 6.283f;
						}
						else if ((double)num846 > 6.283)
						{
							num846 -= 6.283f;
						}
						float num847 = 0.15f;
						if (this.rotation < num846)
						{
							if ((double)(num846 - this.rotation) > 3.1415)
							{
								this.rotation -= num847;
							}
							else
							{
								this.rotation += num847;
							}
						}
						else if (this.rotation > num846)
						{
							if ((double)(this.rotation - num846) > 3.1415)
							{
								this.rotation += num847;
							}
							else
							{
								this.rotation -= num847;
							}
						}
						if (this.rotation > num846 - num847 && this.rotation < num846 + num847)
						{
							this.rotation = num846;
						}
						if (this.rotation < 0f)
						{
							this.rotation += 6.283f;
						}
						else if ((double)this.rotation > 6.283)
						{
							this.rotation -= 6.283f;
						}
						if (this.rotation > num846 - num847 && this.rotation < num846 + num847)
						{
							this.rotation = num846;
						}
						if (Main.rand.Next(5) == 0)
						{
							int num848 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f), this.width, (int)((float)this.height * 0.5f), 5, this.velocity.X, 2f, 0, default(Color), 1f);
							Dust expr_31AD7_cp_0 = Main.dust[num848];
							expr_31AD7_cp_0.velocity.X = expr_31AD7_cp_0.velocity.X * 0.5f;
							Dust expr_31AF7_cp_0 = Main.dust[num848];
							expr_31AF7_cp_0.velocity.Y = expr_31AF7_cp_0.velocity.Y * 0.1f;
						}
						if (Main.netMode != 1 && !Main.dayTime && !dead3 && this.timeLeft < 10)
						{
							for (int num849 = 0; num849 < 200; num849++)
							{
								if (num849 != this.whoAmI && Main.npc[num849].active && (Main.npc[num849].type == 125 || Main.npc[num849].type == 126) && Main.npc[num849].timeLeft - 1 > this.timeLeft)
								{
									this.timeLeft = Main.npc[num849].timeLeft - 1;
								}
							}
						}
						if (Main.dayTime || dead3)
						{
							this.velocity.Y = this.velocity.Y - 0.04f;
							if (this.timeLeft > 10)
							{
								this.timeLeft = 10;
								return;
							}
						}
						else if (this.ai[0] == 0f)
						{
							if (this.ai[1] == 0f)
							{
								this.TargetClosest(true);
								float num850 = 12f;
								float num851 = 0.4f;
								int num852 = 1;
								if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)Main.player[this.target].width)
								{
									num852 = -1;
								}
								Vector2 vector86 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num853 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) + (float)(num852 * 400) - vector86.X;
								float num854 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector86.Y;
								float num855 = (float)Math.Sqrt((double)(num853 * num853 + num854 * num854));
								num855 = num850 / num855;
								num853 *= num855;
								num854 *= num855;
								if (this.velocity.X < num853)
								{
									this.velocity.X = this.velocity.X + num851;
									if (this.velocity.X < 0f && num853 > 0f)
									{
										this.velocity.X = this.velocity.X + num851;
									}
								}
								else if (this.velocity.X > num853)
								{
									this.velocity.X = this.velocity.X - num851;
									if (this.velocity.X > 0f && num853 < 0f)
									{
										this.velocity.X = this.velocity.X - num851;
									}
								}
								if (this.velocity.Y < num854)
								{
									this.velocity.Y = this.velocity.Y + num851;
									if (this.velocity.Y < 0f && num854 > 0f)
									{
										this.velocity.Y = this.velocity.Y + num851;
									}
								}
								else if (this.velocity.Y > num854)
								{
									this.velocity.Y = this.velocity.Y - num851;
									if (this.velocity.Y > 0f && num854 < 0f)
									{
										this.velocity.Y = this.velocity.Y - num851;
									}
								}
								this.ai[2] += 1f;
								if (this.ai[2] >= 600f)
								{
									this.ai[1] = 1f;
									this.ai[2] = 0f;
									this.ai[3] = 0f;
									this.target = 255;
									this.netUpdate = true;
								}
								else
								{
									if (!Main.player[this.target].dead)
									{
										this.ai[3] += 1f;
										if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.8)
										{
											this.ai[3] += 0.6f;
										}
									}
									if (this.ai[3] >= 60f)
									{
										this.ai[3] = 0f;
										vector86 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										num853 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector86.X;
										num854 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector86.Y;
										if (Main.netMode != 1)
										{
											float num856 = 12f;
											int num857 = 25;
											int num858 = 96;
											if (Main.expertMode)
											{
												num856 = 14f;
												num857 = 22;
											}
											num855 = (float)Math.Sqrt((double)(num853 * num853 + num854 * num854));
											num855 = num856 / num855;
											num853 *= num855;
											num854 *= num855;
											num853 += (float)Main.rand.Next(-40, 41) * 0.05f;
											num854 += (float)Main.rand.Next(-40, 41) * 0.05f;
											vector86.X += num853 * 4f;
											vector86.Y += num854 * 4f;
											Projectile.NewProjectile(vector86.X, vector86.Y, num853, num854, num858, num857, 0f, Main.myPlayer, 0f, 0f);
										}
									}
								}
							}
							else if (this.ai[1] == 1f)
							{
								this.rotation = num846;
								float num859 = 13f;
								if (Main.expertMode)
								{
									if ((double)this.life < (double)this.lifeMax * 0.9)
									{
										num859 += 0.5f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.8)
									{
										num859 += 0.5f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.7)
									{
										num859 += 0.55f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.6)
									{
										num859 += 0.6f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.5)
									{
										num859 += 0.65f;
									}
								}
								Vector2 vector87 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num860 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector87.X;
								float num861 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector87.Y;
								float num862 = (float)Math.Sqrt((double)(num860 * num860 + num861 * num861));
								num862 = num859 / num862;
								this.velocity.X = num860 * num862;
								this.velocity.Y = num861 * num862;
								this.ai[1] = 2f;
							}
							else if (this.ai[1] == 2f)
							{
								this.ai[2] += 1f;
								if (this.ai[2] >= 8f)
								{
									this.velocity.X = this.velocity.X * 0.9f;
									this.velocity.Y = this.velocity.Y * 0.9f;
									if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
									{
										this.velocity.X = 0f;
									}
									if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
									{
										this.velocity.Y = 0f;
									}
								}
								else
								{
									this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
								}
								if (this.ai[2] >= 42f)
								{
									this.ai[3] += 1f;
									this.ai[2] = 0f;
									this.target = 255;
									this.rotation = num846;
									if (this.ai[3] >= 10f)
									{
										this.ai[1] = 0f;
										this.ai[3] = 0f;
									}
									else
									{
										this.ai[1] = 1f;
									}
								}
							}
							if ((double)this.life < (double)this.lifeMax * 0.4)
							{
								this.ai[0] = 1f;
								this.ai[1] = 0f;
								this.ai[2] = 0f;
								this.ai[3] = 0f;
								this.netUpdate = true;
								return;
							}
						}
						else if (this.ai[0] == 1f || this.ai[0] == 2f)
						{
							if (this.ai[0] == 1f)
							{
								this.ai[2] += 0.005f;
								if ((double)this.ai[2] > 0.5)
								{
									this.ai[2] = 0.5f;
								}
							}
							else
							{
								this.ai[2] -= 0.005f;
								if (this.ai[2] < 0f)
								{
									this.ai[2] = 0f;
								}
							}
							this.rotation += this.ai[2];
							this.ai[1] += 1f;
							if (this.ai[1] == 100f)
							{
								this.ai[0] += 1f;
								this.ai[1] = 0f;
								if (this.ai[0] == 3f)
								{
									this.ai[2] = 0f;
								}
								else
								{
									Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, 1);
									for (int num863 = 0; num863 < 2; num863++)
									{
										Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 144, 1f);
										Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 7, 1f);
										Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 6, 1f);
									}
									for (int num864 = 0; num864 < 20; num864++)
									{
										Dust.NewDust(this.position, this.width, this.height, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, default(Color), 1f);
									}
									Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
								}
							}
							Dust.NewDust(this.position, this.width, this.height, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, default(Color), 1f);
							this.velocity.X = this.velocity.X * 0.98f;
							this.velocity.Y = this.velocity.Y * 0.98f;
							if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
							{
								this.velocity.X = 0f;
							}
							if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
							{
								this.velocity.Y = 0f;
								return;
							}
						}
						else
						{
							this.soundHit = 4;
							this.damage = (int)((double)this.defDamage * 1.5);
							this.defense = this.defDefense + 18;
							if (this.ai[1] == 0f)
							{
								float num865 = 4f;
								float num866 = 0.1f;
								int num867 = 1;
								if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)Main.player[this.target].width)
								{
									num867 = -1;
								}
								Vector2 vector88 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num868 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) + (float)(num867 * 180) - vector88.X;
								float num869 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector88.Y;
								float num870 = (float)Math.Sqrt((double)(num868 * num868 + num869 * num869));
								if (Main.expertMode)
								{
									if (num870 > 300f)
									{
										num865 += 0.5f;
									}
									if (num870 > 400f)
									{
										num865 += 0.5f;
									}
									if (num870 > 500f)
									{
										num865 += 0.55f;
									}
									if (num870 > 600f)
									{
										num865 += 0.55f;
									}
									if (num870 > 700f)
									{
										num865 += 0.6f;
									}
									if (num870 > 800f)
									{
										num865 += 0.6f;
									}
								}
								num870 = num865 / num870;
								num868 *= num870;
								num869 *= num870;
								if (this.velocity.X < num868)
								{
									this.velocity.X = this.velocity.X + num866;
									if (this.velocity.X < 0f && num868 > 0f)
									{
										this.velocity.X = this.velocity.X + num866;
									}
								}
								else if (this.velocity.X > num868)
								{
									this.velocity.X = this.velocity.X - num866;
									if (this.velocity.X > 0f && num868 < 0f)
									{
										this.velocity.X = this.velocity.X - num866;
									}
								}
								if (this.velocity.Y < num869)
								{
									this.velocity.Y = this.velocity.Y + num866;
									if (this.velocity.Y < 0f && num869 > 0f)
									{
										this.velocity.Y = this.velocity.Y + num866;
									}
								}
								else if (this.velocity.Y > num869)
								{
									this.velocity.Y = this.velocity.Y - num866;
									if (this.velocity.Y > 0f && num869 < 0f)
									{
										this.velocity.Y = this.velocity.Y - num866;
									}
								}
								this.ai[2] += 1f;
								if (this.ai[2] >= 400f)
								{
									this.ai[1] = 1f;
									this.ai[2] = 0f;
									this.ai[3] = 0f;
									this.target = 255;
									this.netUpdate = true;
								}
								if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
								{
									this.localAI[2] += 1f;
									if (this.localAI[2] > 22f)
									{
										this.localAI[2] = 0f;
										Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 34);
									}
									if (Main.netMode != 1)
									{
										this.localAI[1] += 1f;
										if ((double)this.life < (double)this.lifeMax * 0.75)
										{
											this.localAI[1] += 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.5)
										{
											this.localAI[1] += 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.25)
										{
											this.localAI[1] += 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.1)
										{
											this.localAI[1] += 2f;
										}
										if (this.localAI[1] > 8f)
										{
											this.localAI[1] = 0f;
											float num871 = 6f;
											int num872 = 30;
											if (Main.expertMode)
											{
												num872 = 27;
											}
											int num873 = 101;
											vector88 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											num868 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector88.X;
											num869 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector88.Y;
											num870 = (float)Math.Sqrt((double)(num868 * num868 + num869 * num869));
											num870 = num871 / num870;
											num868 *= num870;
											num869 *= num870;
											num869 += (float)Main.rand.Next(-40, 41) * 0.01f;
											num868 += (float)Main.rand.Next(-40, 41) * 0.01f;
											num869 += this.velocity.Y * 0.5f;
											num868 += this.velocity.X * 0.5f;
											vector88.X -= num868 * 1f;
											vector88.Y -= num869 * 1f;
											Projectile.NewProjectile(vector88.X, vector88.Y, num868, num869, num873, num872, 0f, Main.myPlayer, 0f, 0f);
											return;
										}
									}
								}
							}
							else
							{
								if (this.ai[1] == 1f)
								{
									Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
									this.rotation = num846;
									float num874 = 14f;
									if (Main.expertMode)
									{
										num874 += 2.5f;
									}
									Vector2 vector89 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num875 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector89.X;
									float num876 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector89.Y;
									float num877 = (float)Math.Sqrt((double)(num875 * num875 + num876 * num876));
									num877 = num874 / num877;
									this.velocity.X = num875 * num877;
									this.velocity.Y = num876 * num877;
									this.ai[1] = 2f;
									return;
								}
								if (this.ai[1] == 2f)
								{
									this.ai[2] += 1f;
									if (Main.expertMode)
									{
										this.ai[2] += 0.5f;
									}
									if (this.ai[2] >= 50f)
									{
										this.velocity.X = this.velocity.X * 0.93f;
										this.velocity.Y = this.velocity.Y * 0.93f;
										if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
										{
											this.velocity.X = 0f;
										}
										if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
										{
											this.velocity.Y = 0f;
										}
									}
									else
									{
										this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
									}
									if (this.ai[2] >= 80f)
									{
										this.ai[3] += 1f;
										this.ai[2] = 0f;
										this.target = 255;
										this.rotation = num846;
										if (this.ai[3] >= 6f)
										{
											this.ai[1] = 0f;
											this.ai[3] = 0f;
											return;
										}
										this.ai[1] = 1f;
										return;
									}
								}
							}
						}
					}
					else if (this.aiStyle == 32)
					{
						this.damage = this.defDamage;
						this.defense = this.defDefense;
						if (this.ai[0] == 0f && Main.netMode != 1)
						{
							this.TargetClosest(true);
							this.ai[0] = 1f;
							int num878 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 128, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num878].ai[0] = -1f;
							Main.npc[num878].ai[1] = (float)this.whoAmI;
							Main.npc[num878].target = this.target;
							Main.npc[num878].netUpdate = true;
							num878 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 129, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num878].ai[0] = 1f;
							Main.npc[num878].ai[1] = (float)this.whoAmI;
							Main.npc[num878].target = this.target;
							Main.npc[num878].netUpdate = true;
							num878 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 130, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num878].ai[0] = -1f;
							Main.npc[num878].ai[1] = (float)this.whoAmI;
							Main.npc[num878].target = this.target;
							Main.npc[num878].ai[3] = 150f;
							Main.npc[num878].netUpdate = true;
							num878 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 131, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num878].ai[0] = 1f;
							Main.npc[num878].ai[1] = (float)this.whoAmI;
							Main.npc[num878].target = this.target;
							Main.npc[num878].netUpdate = true;
							Main.npc[num878].ai[3] = 150f;
						}
						if (Main.player[this.target].dead || Math.Abs(this.position.X - Main.player[this.target].position.X) > 6000f || Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 6000f)
						{
							this.TargetClosest(true);
							if (Main.player[this.target].dead || Math.Abs(this.position.X - Main.player[this.target].position.X) > 6000f || Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 6000f)
							{
								this.ai[1] = 3f;
							}
						}
						if (Main.dayTime && this.ai[1] != 3f && this.ai[1] != 2f)
						{
							this.ai[1] = 2f;
							Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
						}
						if (this.ai[1] == 0f)
						{
							this.ai[2] += 1f;
							if (this.ai[2] >= 600f)
							{
								this.ai[2] = 0f;
								this.ai[1] = 1f;
								this.TargetClosest(true);
								this.netUpdate = true;
							}
							this.rotation = this.velocity.X / 15f;
							if (this.position.Y > Main.player[this.target].position.Y - 200f)
							{
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.98f;
								}
								this.velocity.Y = this.velocity.Y - 0.1f;
								if (this.velocity.Y > 2f)
								{
									this.velocity.Y = 2f;
								}
							}
							else if (this.position.Y < Main.player[this.target].position.Y - 500f)
							{
								if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.98f;
								}
								this.velocity.Y = this.velocity.Y + 0.1f;
								if (this.velocity.Y < -2f)
								{
									this.velocity.Y = -2f;
								}
							}
							if (this.position.X + (float)(this.width / 2) > Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) + 100f)
							{
								if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X * 0.98f;
								}
								this.velocity.X = this.velocity.X - 0.1f;
								if (this.velocity.X > 8f)
								{
									this.velocity.X = 8f;
								}
							}
							if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - 100f)
							{
								if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X * 0.98f;
								}
								this.velocity.X = this.velocity.X + 0.1f;
								if (this.velocity.X < -8f)
								{
									this.velocity.X = -8f;
									return;
								}
							}
						}
						else
						{
							if (this.ai[1] == 1f)
							{
								this.defense *= 2;
								this.damage *= 2;
								this.ai[2] += 1f;
								if (this.ai[2] == 2f)
								{
									Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
								}
								if (this.ai[2] >= 400f)
								{
									this.ai[2] = 0f;
									this.ai[1] = 0f;
								}
								this.rotation += (float)this.direction * 0.3f;
								Vector2 vector90 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num879 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector90.X;
								float num880 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector90.Y;
								float num881 = (float)Math.Sqrt((double)(num879 * num879 + num880 * num880));
								num881 = 2f / num881;
								this.velocity.X = num879 * num881;
								this.velocity.Y = num880 * num881;
								return;
							}
							if (this.ai[1] == 2f)
							{
								this.damage = 1000;
								this.defense = 9999;
								this.rotation += (float)this.direction * 0.3f;
								Vector2 vector91 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num882 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector91.X;
								float num883 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector91.Y;
								float num884 = (float)Math.Sqrt((double)(num882 * num882 + num883 * num883));
								float num885 = 10f;
								num885 += num884 / 100f;
								if (num885 < 8f)
								{
									num885 = 8f;
								}
								if (num885 > 32f)
								{
									num885 = 32f;
								}
								num884 = num885 / num884;
								this.velocity.X = num882 * num884;
								this.velocity.Y = num883 * num884;
								return;
							}
							if (this.ai[1] == 3f)
							{
								this.velocity.Y = this.velocity.Y + 0.1f;
								if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.95f;
								}
								this.velocity.X = this.velocity.X * 0.95f;
								if (this.timeLeft > 500)
								{
									this.timeLeft = 500;
									return;
								}
							}
						}
					}
					else if (this.aiStyle == 33)
					{
						Vector2 vector92 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num886 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector92.X;
						float num887 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector92.Y;
						float num888 = (float)Math.Sqrt((double)(num886 * num886 + num887 * num887));
						if (this.ai[2] != 99f)
						{
							if (num888 > 800f)
							{
								this.ai[2] = 99f;
							}
						}
						else if (num888 < 400f)
						{
							this.ai[2] = 0f;
						}
						this.spriteDirection = -(int)this.ai[0];
						if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 32)
						{
							this.ai[2] += 10f;
							if (this.ai[2] > 50f || Main.netMode != 2)
							{
								this.life = -1;
								this.HitEffect(0, 10.0);
								this.active = false;
							}
						}
						if (this.ai[2] == 99f)
						{
							if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y)
							{
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.96f;
								}
								this.velocity.Y = this.velocity.Y - 0.1f;
								if (this.velocity.Y > 8f)
								{
									this.velocity.Y = 8f;
								}
							}
							else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y)
							{
								if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.96f;
								}
								this.velocity.Y = this.velocity.Y + 0.1f;
								if (this.velocity.Y < -8f)
								{
									this.velocity.Y = -8f;
								}
							}
							if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2))
							{
								if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X * 0.96f;
								}
								this.velocity.X = this.velocity.X - 0.5f;
								if (this.velocity.X > 12f)
								{
									this.velocity.X = 12f;
								}
							}
							if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2))
							{
								if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X * 0.96f;
								}
								this.velocity.X = this.velocity.X + 0.5f;
								if (this.velocity.X < -12f)
								{
									this.velocity.X = -12f;
									return;
								}
							}
						}
						else
						{
							if (this.ai[2] == 0f || this.ai[2] == 3f)
							{
								if (Main.npc[(int)this.ai[1]].ai[1] == 3f && this.timeLeft > 10)
								{
									this.timeLeft = 10;
								}
								if (Main.npc[(int)this.ai[1]].ai[1] != 0f)
								{
									this.TargetClosest(true);
									if (Main.player[this.target].dead)
									{
										this.velocity.Y = this.velocity.Y + 0.1f;
										if (this.velocity.Y > 16f)
										{
											this.velocity.Y = 16f;
										}
									}
									else
									{
										Vector2 vector93 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float num889 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector93.X;
										float num890 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector93.Y;
										float num891 = (float)Math.Sqrt((double)(num889 * num889 + num890 * num890));
										num891 = 7f / num891;
										num889 *= num891;
										num890 *= num891;
										this.rotation = (float)Math.Atan2((double)num890, (double)num889) - 1.57f;
										if (this.velocity.X > num889)
										{
											if (this.velocity.X > 0f)
											{
												this.velocity.X = this.velocity.X * 0.97f;
											}
											this.velocity.X = this.velocity.X - 0.05f;
										}
										if (this.velocity.X < num889)
										{
											if (this.velocity.X < 0f)
											{
												this.velocity.X = this.velocity.X * 0.97f;
											}
											this.velocity.X = this.velocity.X + 0.05f;
										}
										if (this.velocity.Y > num890)
										{
											if (this.velocity.Y > 0f)
											{
												this.velocity.Y = this.velocity.Y * 0.97f;
											}
											this.velocity.Y = this.velocity.Y - 0.05f;
										}
										if (this.velocity.Y < num890)
										{
											if (this.velocity.Y < 0f)
											{
												this.velocity.Y = this.velocity.Y * 0.97f;
											}
											this.velocity.Y = this.velocity.Y + 0.05f;
										}
									}
									this.ai[3] += 1f;
									if (this.ai[3] >= 600f)
									{
										this.ai[2] = 0f;
										this.ai[3] = 0f;
										this.netUpdate = true;
									}
								}
								else
								{
									this.ai[3] += 1f;
									if (this.ai[3] >= 300f)
									{
										this.ai[2] += 1f;
										this.ai[3] = 0f;
										this.netUpdate = true;
									}
									if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y + 320f)
									{
										if (this.velocity.Y > 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.96f;
										}
										this.velocity.Y = this.velocity.Y - 0.04f;
										if (this.velocity.Y > 3f)
										{
											this.velocity.Y = 3f;
										}
									}
									else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y + 260f)
									{
										if (this.velocity.Y < 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.96f;
										}
										this.velocity.Y = this.velocity.Y + 0.04f;
										if (this.velocity.Y < -3f)
										{
											this.velocity.Y = -3f;
										}
									}
									if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2))
									{
										if (this.velocity.X > 0f)
										{
											this.velocity.X = this.velocity.X * 0.96f;
										}
										this.velocity.X = this.velocity.X - 0.3f;
										if (this.velocity.X > 12f)
										{
											this.velocity.X = 12f;
										}
									}
									if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 250f)
									{
										if (this.velocity.X < 0f)
										{
											this.velocity.X = this.velocity.X * 0.96f;
										}
										this.velocity.X = this.velocity.X + 0.3f;
										if (this.velocity.X < -12f)
										{
											this.velocity.X = -12f;
										}
									}
								}
								Vector2 vector94 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num892 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector94.X;
								float num893 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector94.Y;
								Math.Sqrt((double)(num892 * num892 + num893 * num893));
								this.rotation = (float)Math.Atan2((double)num893, (double)num892) + 1.57f;
								return;
							}
							if (this.ai[2] == 1f)
							{
								Vector2 vector95 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num894 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector95.X;
								float num895 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector95.Y;
								float num896 = (float)Math.Sqrt((double)(num894 * num894 + num895 * num895));
								this.rotation = (float)Math.Atan2((double)num895, (double)num894) + 1.57f;
								this.velocity.X = this.velocity.X * 0.95f;
								this.velocity.Y = this.velocity.Y - 0.1f;
								if (this.velocity.Y < -8f)
								{
									this.velocity.Y = -8f;
								}
								if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 200f)
								{
									this.TargetClosest(true);
									this.ai[2] = 2f;
									vector95 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									num894 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector95.X;
									num895 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector95.Y;
									num896 = (float)Math.Sqrt((double)(num894 * num894 + num895 * num895));
									num896 = 22f / num896;
									this.velocity.X = num894 * num896;
									this.velocity.Y = num895 * num896;
									this.netUpdate = true;
									return;
								}
							}
							else if (this.ai[2] == 2f)
							{
								if (this.position.Y > Main.player[this.target].position.Y || this.velocity.Y < 0f)
								{
									this.ai[2] = 3f;
									return;
								}
							}
							else
							{
								if (this.ai[2] == 4f)
								{
									this.TargetClosest(true);
									Vector2 vector96 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num897 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector96.X;
									float num898 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector96.Y;
									float num899 = (float)Math.Sqrt((double)(num897 * num897 + num898 * num898));
									num899 = 7f / num899;
									num897 *= num899;
									num898 *= num899;
									if (this.velocity.X > num897)
									{
										if (this.velocity.X > 0f)
										{
											this.velocity.X = this.velocity.X * 0.97f;
										}
										this.velocity.X = this.velocity.X - 0.05f;
									}
									if (this.velocity.X < num897)
									{
										if (this.velocity.X < 0f)
										{
											this.velocity.X = this.velocity.X * 0.97f;
										}
										this.velocity.X = this.velocity.X + 0.05f;
									}
									if (this.velocity.Y > num898)
									{
										if (this.velocity.Y > 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.97f;
										}
										this.velocity.Y = this.velocity.Y - 0.05f;
									}
									if (this.velocity.Y < num898)
									{
										if (this.velocity.Y < 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.97f;
										}
										this.velocity.Y = this.velocity.Y + 0.05f;
									}
									this.ai[3] += 1f;
									if (this.ai[3] >= 600f)
									{
										this.ai[2] = 0f;
										this.ai[3] = 0f;
										this.netUpdate = true;
									}
									vector96 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									num897 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector96.X;
									num898 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector96.Y;
									num899 = (float)Math.Sqrt((double)(num897 * num897 + num898 * num898));
									this.rotation = (float)Math.Atan2((double)num898, (double)num897) + 1.57f;
									return;
								}
								if (this.ai[2] == 5f && ((this.velocity.X > 0f && this.position.X + (float)(this.width / 2) > Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2)) || (this.velocity.X < 0f && this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))))
								{
									this.ai[2] = 0f;
									return;
								}
							}
						}
					}
					else if (this.aiStyle == 34)
					{
						this.spriteDirection = -(int)this.ai[0];
						Vector2 vector97 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num900 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector97.X;
						float num901 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector97.Y;
						float num902 = (float)Math.Sqrt((double)(num900 * num900 + num901 * num901));
						if (this.ai[2] != 99f)
						{
							if (num902 > 800f)
							{
								this.ai[2] = 99f;
							}
						}
						else if (num902 < 400f)
						{
							this.ai[2] = 0f;
						}
						if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 32)
						{
							this.ai[2] += 10f;
							if (this.ai[2] > 50f || Main.netMode != 2)
							{
								this.life = -1;
								this.HitEffect(0, 10.0);
								this.active = false;
							}
						}
						if (this.ai[2] == 99f)
						{
							if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y)
							{
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.96f;
								}
								this.velocity.Y = this.velocity.Y - 0.1f;
								if (this.velocity.Y > 8f)
								{
									this.velocity.Y = 8f;
								}
							}
							else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y)
							{
								if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.96f;
								}
								this.velocity.Y = this.velocity.Y + 0.1f;
								if (this.velocity.Y < -8f)
								{
									this.velocity.Y = -8f;
								}
							}
							if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2))
							{
								if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X * 0.96f;
								}
								this.velocity.X = this.velocity.X - 0.5f;
								if (this.velocity.X > 12f)
								{
									this.velocity.X = 12f;
								}
							}
							if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2))
							{
								if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X * 0.96f;
								}
								this.velocity.X = this.velocity.X + 0.5f;
								if (this.velocity.X < -12f)
								{
									this.velocity.X = -12f;
									return;
								}
							}
						}
						else
						{
							if (this.ai[2] == 0f || this.ai[2] == 3f)
							{
								if (Main.npc[(int)this.ai[1]].ai[1] == 3f && this.timeLeft > 10)
								{
									this.timeLeft = 10;
								}
								if (Main.npc[(int)this.ai[1]].ai[1] != 0f)
								{
									this.TargetClosest(true);
									this.TargetClosest(true);
									if (Main.player[this.target].dead)
									{
										this.velocity.Y = this.velocity.Y + 0.1f;
										if (this.velocity.Y > 16f)
										{
											this.velocity.Y = 16f;
										}
									}
									else
									{
										Vector2 vector98 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float num903 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector98.X;
										float num904 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector98.Y;
										float num905 = (float)Math.Sqrt((double)(num903 * num903 + num904 * num904));
										num905 = 12f / num905;
										num903 *= num905;
										num904 *= num905;
										this.rotation = (float)Math.Atan2((double)num904, (double)num903) - 1.57f;
										if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) < 2f)
										{
											this.rotation = (float)Math.Atan2((double)num904, (double)num903) - 1.57f;
											this.velocity.X = num903;
											this.velocity.Y = num904;
											this.netUpdate = true;
										}
										else
										{
											this.velocity *= 0.97f;
										}
										this.ai[3] += 1f;
										if (this.ai[3] >= 600f)
										{
											this.ai[2] = 0f;
											this.ai[3] = 0f;
											this.netUpdate = true;
										}
									}
								}
								else
								{
									this.ai[3] += 1f;
									if (this.ai[3] >= 600f)
									{
										this.ai[2] += 1f;
										this.ai[3] = 0f;
										this.netUpdate = true;
									}
									if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y + 300f)
									{
										if (this.velocity.Y > 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.96f;
										}
										this.velocity.Y = this.velocity.Y - 0.1f;
										if (this.velocity.Y > 3f)
										{
											this.velocity.Y = 3f;
										}
									}
									else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y + 230f)
									{
										if (this.velocity.Y < 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.96f;
										}
										this.velocity.Y = this.velocity.Y + 0.1f;
										if (this.velocity.Y < -3f)
										{
											this.velocity.Y = -3f;
										}
									}
									if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) + 250f)
									{
										if (this.velocity.X > 0f)
										{
											this.velocity.X = this.velocity.X * 0.94f;
										}
										this.velocity.X = this.velocity.X - 0.3f;
										if (this.velocity.X > 9f)
										{
											this.velocity.X = 9f;
										}
									}
									if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2))
									{
										if (this.velocity.X < 0f)
										{
											this.velocity.X = this.velocity.X * 0.94f;
										}
										this.velocity.X = this.velocity.X + 0.2f;
										if (this.velocity.X < -8f)
										{
											this.velocity.X = -8f;
										}
									}
								}
								Vector2 vector99 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num906 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector99.X;
								float num907 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector99.Y;
								Math.Sqrt((double)(num906 * num906 + num907 * num907));
								this.rotation = (float)Math.Atan2((double)num907, (double)num906) + 1.57f;
								return;
							}
							if (this.ai[2] == 1f)
							{
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.9f;
								}
								Vector2 vector100 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num908 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 280f * this.ai[0] - vector100.X;
								float num909 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector100.Y;
								float num910 = (float)Math.Sqrt((double)(num908 * num908 + num909 * num909));
								this.rotation = (float)Math.Atan2((double)num909, (double)num908) + 1.57f;
								this.velocity.X = (this.velocity.X * 5f + Main.npc[(int)this.ai[1]].velocity.X) / 6f;
								this.velocity.X = this.velocity.X + 0.5f;
								this.velocity.Y = this.velocity.Y - 0.5f;
								if (this.velocity.Y < -9f)
								{
									this.velocity.Y = -9f;
								}
								if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 280f)
								{
									this.TargetClosest(true);
									this.ai[2] = 2f;
									vector100 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									num908 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector100.X;
									num909 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector100.Y;
									num910 = (float)Math.Sqrt((double)(num908 * num908 + num909 * num909));
									num910 = 20f / num910;
									this.velocity.X = num908 * num910;
									this.velocity.Y = num909 * num910;
									this.netUpdate = true;
									return;
								}
							}
							else if (this.ai[2] == 2f)
							{
								if (this.position.Y > Main.player[this.target].position.Y || this.velocity.Y < 0f)
								{
									if (this.ai[3] >= 4f)
									{
										this.ai[2] = 3f;
										this.ai[3] = 0f;
										return;
									}
									this.ai[2] = 1f;
									this.ai[3] += 1f;
									return;
								}
							}
							else if (this.ai[2] == 4f)
							{
								Vector2 vector101 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num911 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector101.X;
								float num912 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector101.Y;
								float num913 = (float)Math.Sqrt((double)(num911 * num911 + num912 * num912));
								this.rotation = (float)Math.Atan2((double)num912, (double)num911) + 1.57f;
								this.velocity.Y = (this.velocity.Y * 5f + Main.npc[(int)this.ai[1]].velocity.Y) / 6f;
								this.velocity.X = this.velocity.X + 0.5f;
								if (this.velocity.X > 12f)
								{
									this.velocity.X = 12f;
								}
								if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 500f || this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) + 500f)
								{
									this.TargetClosest(true);
									this.ai[2] = 5f;
									vector101 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									num911 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector101.X;
									num912 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector101.Y;
									num913 = (float)Math.Sqrt((double)(num911 * num911 + num912 * num912));
									num913 = 17f / num913;
									this.velocity.X = num911 * num913;
									this.velocity.Y = num912 * num913;
									this.netUpdate = true;
									return;
								}
							}
							else if (this.ai[2] == 5f && this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - 100f)
							{
								if (this.ai[3] >= 4f)
								{
									this.ai[2] = 0f;
									this.ai[3] = 0f;
									return;
								}
								this.ai[2] = 4f;
								this.ai[3] += 1f;
								return;
							}
						}
					}
					else if (this.aiStyle == 35)
					{
						this.spriteDirection = -(int)this.ai[0];
						if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 32)
						{
							this.ai[2] += 10f;
							if (this.ai[2] > 50f || Main.netMode != 2)
							{
								this.life = -1;
								this.HitEffect(0, 10.0);
								this.active = false;
							}
						}
						if (this.ai[2] == 0f)
						{
							if (Main.npc[(int)this.ai[1]].ai[1] == 3f && this.timeLeft > 10)
							{
								this.timeLeft = 10;
							}
							if (Main.npc[(int)this.ai[1]].ai[1] != 0f)
							{
								this.localAI[0] += 2f;
								if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y - 100f)
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y - 0.07f;
									if (this.velocity.Y > 6f)
									{
										this.velocity.Y = 6f;
									}
								}
								else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 100f)
								{
									if (this.velocity.Y < 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y + 0.07f;
									if (this.velocity.Y < -6f)
									{
										this.velocity.Y = -6f;
									}
								}
								if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 120f * this.ai[0])
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X - 0.1f;
									if (this.velocity.X > 8f)
									{
										this.velocity.X = 8f;
									}
								}
								if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 120f * this.ai[0])
								{
									if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X + 0.1f;
									if (this.velocity.X < -8f)
									{
										this.velocity.X = -8f;
									}
								}
							}
							else
							{
								this.ai[3] += 1f;
								if (this.ai[3] >= 1100f)
								{
									this.localAI[0] = 0f;
									this.ai[2] = 1f;
									this.ai[3] = 0f;
									this.netUpdate = true;
								}
								if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y - 150f)
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y - 0.04f;
									if (this.velocity.Y > 3f)
									{
										this.velocity.Y = 3f;
									}
								}
								else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 150f)
								{
									if (this.velocity.Y < 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y + 0.04f;
									if (this.velocity.Y < -3f)
									{
										this.velocity.Y = -3f;
									}
								}
								if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) + 200f)
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X - 0.2f;
									if (this.velocity.X > 8f)
									{
										this.velocity.X = 8f;
									}
								}
								if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) + 160f)
								{
									if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X + 0.2f;
									if (this.velocity.X < -8f)
									{
										this.velocity.X = -8f;
									}
								}
							}
							Vector2 vector102 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num914 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector102.X;
							float num915 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector102.Y;
							float num916 = (float)Math.Sqrt((double)(num914 * num914 + num915 * num915));
							this.rotation = (float)Math.Atan2((double)num915, (double)num914) + 1.57f;
							if (Main.netMode != 1)
							{
								this.localAI[0] += 1f;
								if (this.localAI[0] > 140f)
								{
									this.localAI[0] = 0f;
									float num917 = 12f;
									int num918 = 0;
									int num919 = 102;
									num916 = num917 / num916;
									num914 = -num914 * num916;
									num915 = -num915 * num916;
									num914 += (float)Main.rand.Next(-40, 41) * 0.01f;
									num915 += (float)Main.rand.Next(-40, 41) * 0.01f;
									vector102.X += num914 * 4f;
									vector102.Y += num915 * 4f;
									Projectile.NewProjectile(vector102.X, vector102.Y, num914, num915, num919, num918, 0f, Main.myPlayer, 0f, 0f);
									return;
								}
							}
						}
						else if (this.ai[2] == 1f)
						{
							this.ai[3] += 1f;
							if (this.ai[3] >= 300f)
							{
								this.localAI[0] = 0f;
								this.ai[2] = 0f;
								this.ai[3] = 0f;
								this.netUpdate = true;
							}
							Vector2 vector103 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num920 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - vector103.X;
							float num921 = Main.npc[(int)this.ai[1]].position.Y - vector103.Y;
							num921 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 80f - vector103.Y;
							float num922 = (float)Math.Sqrt((double)(num920 * num920 + num921 * num921));
							num922 = 6f / num922;
							num920 *= num922;
							num921 *= num922;
							if (this.velocity.X > num920)
							{
								if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X * 0.9f;
								}
								this.velocity.X = this.velocity.X - 0.04f;
							}
							if (this.velocity.X < num920)
							{
								if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X * 0.9f;
								}
								this.velocity.X = this.velocity.X + 0.04f;
							}
							if (this.velocity.Y > num921)
							{
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.9f;
								}
								this.velocity.Y = this.velocity.Y - 0.08f;
							}
							if (this.velocity.Y < num921)
							{
								if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.9f;
								}
								this.velocity.Y = this.velocity.Y + 0.08f;
							}
							this.TargetClosest(true);
							vector103 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							num920 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector103.X;
							num921 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector103.Y;
							num922 = (float)Math.Sqrt((double)(num920 * num920 + num921 * num921));
							this.rotation = (float)Math.Atan2((double)num921, (double)num920) - 1.57f;
							if (Main.netMode != 1)
							{
								this.localAI[0] += 1f;
								if (this.localAI[0] > 40f)
								{
									this.localAI[0] = 0f;
									float num923 = 10f;
									int num924 = 0;
									int num925 = 102;
									num922 = num923 / num922;
									num920 *= num922;
									num921 *= num922;
									num920 += (float)Main.rand.Next(-40, 41) * 0.01f;
									num921 += (float)Main.rand.Next(-40, 41) * 0.01f;
									vector103.X += num920 * 4f;
									vector103.Y += num921 * 4f;
									Projectile.NewProjectile(vector103.X, vector103.Y, num920, num921, num925, num924, 0f, Main.myPlayer, 0f, 0f);
									return;
								}
							}
						}
					}
					else if (this.aiStyle == 36)
					{
						this.spriteDirection = -(int)this.ai[0];
						if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 32)
						{
							this.ai[2] += 10f;
							if (this.ai[2] > 50f || Main.netMode != 2)
							{
								this.life = -1;
								this.HitEffect(0, 10.0);
								this.active = false;
							}
						}
						if (this.ai[2] == 0f || this.ai[2] == 3f)
						{
							if (Main.npc[(int)this.ai[1]].ai[1] == 3f && this.timeLeft > 10)
							{
								this.timeLeft = 10;
							}
							if (Main.npc[(int)this.ai[1]].ai[1] != 0f)
							{
								this.localAI[0] += 3f;
								if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y - 100f)
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y - 0.07f;
									if (this.velocity.Y > 6f)
									{
										this.velocity.Y = 6f;
									}
								}
								else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 100f)
								{
									if (this.velocity.Y < 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y + 0.07f;
									if (this.velocity.Y < -6f)
									{
										this.velocity.Y = -6f;
									}
								}
								if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 120f * this.ai[0])
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X - 0.1f;
									if (this.velocity.X > 8f)
									{
										this.velocity.X = 8f;
									}
								}
								if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 120f * this.ai[0])
								{
									if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X + 0.1f;
									if (this.velocity.X < -8f)
									{
										this.velocity.X = -8f;
									}
								}
							}
							else
							{
								this.ai[3] += 1f;
								if (this.ai[3] >= 800f)
								{
									this.ai[2] += 1f;
									this.ai[3] = 0f;
									this.netUpdate = true;
								}
								if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y - 100f)
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y - 0.1f;
									if (this.velocity.Y > 3f)
									{
										this.velocity.Y = 3f;
									}
								}
								else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 100f)
								{
									if (this.velocity.Y < 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y + 0.1f;
									if (this.velocity.Y < -3f)
									{
										this.velocity.Y = -3f;
									}
								}
								if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 180f * this.ai[0])
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X - 0.14f;
									if (this.velocity.X > 8f)
									{
										this.velocity.X = 8f;
									}
								}
								if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 180f * this.ai[0])
								{
									if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X + 0.14f;
									if (this.velocity.X < -8f)
									{
										this.velocity.X = -8f;
									}
								}
							}
							this.TargetClosest(true);
							Vector2 vector104 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num926 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector104.X;
							float num927 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector104.Y;
							float num928 = (float)Math.Sqrt((double)(num926 * num926 + num927 * num927));
							this.rotation = (float)Math.Atan2((double)num927, (double)num926) - 1.57f;
							if (Main.netMode != 1)
							{
								this.localAI[0] += 1f;
								if (this.localAI[0] > 200f)
								{
									this.localAI[0] = 0f;
									float num929 = 8f;
									int num930 = 25;
									int num931 = 100;
									num928 = num929 / num928;
									num926 *= num928;
									num927 *= num928;
									num926 += (float)Main.rand.Next(-40, 41) * 0.05f;
									num927 += (float)Main.rand.Next(-40, 41) * 0.05f;
									vector104.X += num926 * 8f;
									vector104.Y += num927 * 8f;
									Projectile.NewProjectile(vector104.X, vector104.Y, num926, num927, num931, num930, 0f, Main.myPlayer, 0f, 0f);
									return;
								}
							}
						}
						else if (this.ai[2] == 1f)
						{
							this.ai[3] += 1f;
							if (this.ai[3] >= 200f)
							{
								this.localAI[0] = 0f;
								this.ai[2] = 0f;
								this.ai[3] = 0f;
								this.netUpdate = true;
							}
							Vector2 vector105 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num932 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - 350f - vector105.X;
							float num933 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 20f - vector105.Y;
							float num934 = (float)Math.Sqrt((double)(num932 * num932 + num933 * num933));
							num934 = 7f / num934;
							num932 *= num934;
							num933 *= num934;
							if (this.velocity.X > num932)
							{
								if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X * 0.9f;
								}
								this.velocity.X = this.velocity.X - 0.1f;
							}
							if (this.velocity.X < num932)
							{
								if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X * 0.9f;
								}
								this.velocity.X = this.velocity.X + 0.1f;
							}
							if (this.velocity.Y > num933)
							{
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.9f;
								}
								this.velocity.Y = this.velocity.Y - 0.03f;
							}
							if (this.velocity.Y < num933)
							{
								if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.9f;
								}
								this.velocity.Y = this.velocity.Y + 0.03f;
							}
							this.TargetClosest(true);
							vector105 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							num932 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector105.X;
							num933 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector105.Y;
							num934 = (float)Math.Sqrt((double)(num932 * num932 + num933 * num933));
							this.rotation = (float)Math.Atan2((double)num933, (double)num932) - 1.57f;
							if (Main.netMode == 1)
							{
								this.localAI[0] += 1f;
								if (this.localAI[0] > 80f)
								{
									this.localAI[0] = 0f;
									float num935 = 10f;
									int num936 = 25;
									int num937 = 100;
									num934 = num935 / num934;
									num932 *= num934;
									num933 *= num934;
									num932 += (float)Main.rand.Next(-40, 41) * 0.05f;
									num933 += (float)Main.rand.Next(-40, 41) * 0.05f;
									vector105.X += num932 * 8f;
									vector105.Y += num933 * 8f;
									Projectile.NewProjectile(vector105.X, vector105.Y, num932, num933, num937, num936, 0f, Main.myPlayer, 0f, 0f);
									return;
								}
							}
						}
					}
					else if (this.aiStyle == 37)
					{
						if (this.ai[3] > 0f)
						{
							this.realLife = (int)this.ai[3];
						}
						if (this.target < 0 || this.target == 255 || Main.player[this.target].dead)
						{
							this.TargetClosest(true);
						}
						if (this.type >= 134 && this.type <= 136)
						{
							this.velocity.Length();
							if (this.type == 134 || (this.type != 134 && Main.npc[(int)this.ai[1]].alpha < 128))
							{
								if (this.alpha != 0)
								{
									for (int num938 = 0; num938 < 2; num938++)
									{
										int num939 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 182, 0f, 0f, 100, default(Color), 2f);
										Main.dust[num939].noGravity = true;
										Main.dust[num939].noLight = true;
									}
								}
								this.alpha -= 42;
								if (this.alpha < 0)
								{
									this.alpha = 0;
								}
							}
						}
						if (this.type > 134)
						{
							bool flag97 = false;
							if (this.ai[1] <= 0f)
							{
								flag97 = true;
							}
							else if (Main.npc[(int)this.ai[1]].life <= 0)
							{
								flag97 = true;
							}
							if (flag97)
							{
								this.life = 0;
								this.HitEffect(0, 10.0);
								this.checkDead();
							}
						}
						if (Main.netMode != 1)
						{
							if (this.ai[0] == 0f && this.type == 134)
							{
								this.ai[3] = (float)this.whoAmI;
								this.realLife = this.whoAmI;
								int num940 = this.whoAmI;
								int num941 = 80;
								for (int num942 = 0; num942 <= num941; num942++)
								{
									int num943 = 135;
									if (num942 == num941)
									{
										num943 = 136;
									}
									int num944 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), num943, this.whoAmI, 0f, 0f, 0f, 0f, 255);
									Main.npc[num944].ai[3] = (float)this.whoAmI;
									Main.npc[num944].realLife = this.whoAmI;
									Main.npc[num944].ai[1] = (float)num940;
									Main.npc[num940].ai[0] = (float)num944;
									NetMessage.SendData(23, -1, -1, "", num944, 0f, 0f, 0f, 0, 0, 0);
									num940 = num944;
								}
							}
							if (this.type == 135)
							{
								this.localAI[0] += (float)Main.rand.Next(4);
								if (this.localAI[0] >= (float)Main.rand.Next(1400, 26000))
								{
									this.localAI[0] = 0f;
									this.TargetClosest(true);
									if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
									{
										float num945 = 8f;
										Vector2 vector106 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)(this.height / 2));
										float num946 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector106.X + (float)Main.rand.Next(-20, 21);
										float num947 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector106.Y + (float)Main.rand.Next(-20, 21);
										float num948 = (float)Math.Sqrt((double)(num946 * num946 + num947 * num947));
										num948 = num945 / num948;
										num946 *= num948;
										num947 *= num948;
										num946 += (float)Main.rand.Next(-20, 21) * 0.05f;
										num947 += (float)Main.rand.Next(-20, 21) * 0.05f;
										int num949 = 22;
										if (Main.expertMode)
										{
											num949 = 18;
										}
										int num950 = 100;
										vector106.X += num946 * 5f;
										vector106.Y += num947 * 5f;
										int num951 = Projectile.NewProjectile(vector106.X, vector106.Y, num946, num947, num950, num949, 0f, Main.myPlayer, 0f, 0f);
										Main.projectile[num951].timeLeft = 300;
										this.netUpdate = true;
									}
								}
							}
						}
						int num952 = (int)(this.position.X / 16f) - 1;
						int num953 = (int)((this.position.X + (float)this.width) / 16f) + 2;
						int num954 = (int)(this.position.Y / 16f) - 1;
						int num955 = (int)((this.position.Y + (float)this.height) / 16f) + 2;
						if (num952 < 0)
						{
							num952 = 0;
						}
						if (num953 > Main.maxTilesX)
						{
							num953 = Main.maxTilesX;
						}
						if (num954 < 0)
						{
							num954 = 0;
						}
						if (num955 > Main.maxTilesY)
						{
							num955 = Main.maxTilesY;
						}
						bool flag98 = false;
						if (!flag98)
						{
							for (int num956 = num952; num956 < num953; num956++)
							{
								for (int num957 = num954; num957 < num955; num957++)
								{
									if (Main.tile[num956, num957] != null && ((Main.tile[num956, num957].nactive() && (Main.tileSolid[(int)Main.tile[num956, num957].type] || (Main.tileSolidTop[(int)Main.tile[num956, num957].type] && Main.tile[num956, num957].frameY == 0))) || Main.tile[num956, num957].liquid > 64))
									{
										Vector2 vector107;
										vector107.X = (float)(num956 * 16);
										vector107.Y = (float)(num957 * 16);
										if (this.position.X + (float)this.width > vector107.X && this.position.X < vector107.X + 16f && this.position.Y + (float)this.height > vector107.Y && this.position.Y < vector107.Y + 16f)
										{
											flag98 = true;
											break;
										}
									}
								}
							}
						}
						if (!flag98)
						{
							if (this.type != 135 || this.ai[2] != 1f)
							{
								Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.3f, 0.1f, 0.05f);
							}
							this.localAI[1] = 1f;
							if (this.type == 134)
							{
								Rectangle rectangle12 = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
								int num958 = 1000;
								bool flag99 = true;
								if (this.position.Y > Main.player[this.target].position.Y)
								{
									for (int num959 = 0; num959 < 255; num959++)
									{
										if (Main.player[num959].active)
										{
											Rectangle rectangle13 = new Rectangle((int)Main.player[num959].position.X - num958, (int)Main.player[num959].position.Y - num958, num958 * 2, num958 * 2);
											if (rectangle12.Intersects(rectangle13))
											{
												flag99 = false;
												break;
											}
										}
									}
									if (flag99)
									{
										flag98 = true;
									}
								}
							}
						}
						else
						{
							this.localAI[1] = 0f;
						}
						float num960 = 16f;
						if (Main.dayTime || Main.player[this.target].dead)
						{
							flag98 = false;
							this.velocity.Y = this.velocity.Y + 1f;
							if ((double)this.position.Y > Main.worldSurface * 16.0)
							{
								this.velocity.Y = this.velocity.Y + 1f;
								num960 = 32f;
							}
							if ((double)this.position.Y > Main.rockLayer * 16.0)
							{
								for (int num961 = 0; num961 < 200; num961++)
								{
									if (Main.npc[num961].aiStyle == this.aiStyle)
									{
										Main.npc[num961].active = false;
									}
								}
							}
						}
						float num962 = 0.1f;
						float num963 = 0.15f;
						Vector2 vector108 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num964 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2);
						float num965 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2);
						num964 = (float)((int)(num964 / 16f) * 16);
						num965 = (float)((int)(num965 / 16f) * 16);
						vector108.X = (float)((int)(vector108.X / 16f) * 16);
						vector108.Y = (float)((int)(vector108.Y / 16f) * 16);
						num964 -= vector108.X;
						num965 -= vector108.Y;
						float num966 = (float)Math.Sqrt((double)(num964 * num964 + num965 * num965));
						if (this.ai[1] > 0f && this.ai[1] < (float)Main.npc.Length)
						{
							try
							{
								vector108 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								num964 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - vector108.X;
								num965 = Main.npc[(int)this.ai[1]].position.Y + (float)(Main.npc[(int)this.ai[1]].height / 2) - vector108.Y;
							}
							catch
							{
							}
							this.rotation = (float)Math.Atan2((double)num965, (double)num964) + 1.57f;
							num966 = (float)Math.Sqrt((double)(num964 * num964 + num965 * num965));
							int num967 = (int)(44f * this.scale);
							num966 = (num966 - (float)num967) / num966;
							num964 *= num966;
							num965 *= num966;
							this.velocity = Vector2.Zero;
							this.position.X = this.position.X + num964;
							this.position.Y = this.position.Y + num965;
							return;
						}
						if (!flag98)
						{
							this.TargetClosest(true);
							this.velocity.Y = this.velocity.Y + 0.15f;
							if (this.velocity.Y > num960)
							{
								this.velocity.Y = num960;
							}
							if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)num960 * 0.4)
							{
								if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X - num962 * 1.1f;
								}
								else
								{
									this.velocity.X = this.velocity.X + num962 * 1.1f;
								}
							}
							else if (this.velocity.Y == num960)
							{
								if (this.velocity.X < num964)
								{
									this.velocity.X = this.velocity.X + num962;
								}
								else if (this.velocity.X > num964)
								{
									this.velocity.X = this.velocity.X - num962;
								}
							}
							else if (this.velocity.Y > 4f)
							{
								if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X + num962 * 0.9f;
								}
								else
								{
									this.velocity.X = this.velocity.X - num962 * 0.9f;
								}
							}
						}
						else
						{
							if (this.soundDelay == 0)
							{
								float num968 = num966 / 40f;
								if (num968 < 10f)
								{
									num968 = 10f;
								}
								if (num968 > 20f)
								{
									num968 = 20f;
								}
								this.soundDelay = (int)num968;
								Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 1);
							}
							num966 = (float)Math.Sqrt((double)(num964 * num964 + num965 * num965));
							float num969 = Math.Abs(num964);
							float num970 = Math.Abs(num965);
							float num971 = num960 / num966;
							num964 *= num971;
							num965 *= num971;
							if (((this.velocity.X > 0f && num964 > 0f) || (this.velocity.X < 0f && num964 < 0f)) && ((this.velocity.Y > 0f && num965 > 0f) || (this.velocity.Y < 0f && num965 < 0f)))
							{
								if (this.velocity.X < num964)
								{
									this.velocity.X = this.velocity.X + num963;
								}
								else if (this.velocity.X > num964)
								{
									this.velocity.X = this.velocity.X - num963;
								}
								if (this.velocity.Y < num965)
								{
									this.velocity.Y = this.velocity.Y + num963;
								}
								else if (this.velocity.Y > num965)
								{
									this.velocity.Y = this.velocity.Y - num963;
								}
							}
							if ((this.velocity.X > 0f && num964 > 0f) || (this.velocity.X < 0f && num964 < 0f) || (this.velocity.Y > 0f && num965 > 0f) || (this.velocity.Y < 0f && num965 < 0f))
							{
								if (this.velocity.X < num964)
								{
									this.velocity.X = this.velocity.X + num962;
								}
								else if (this.velocity.X > num964)
								{
									this.velocity.X = this.velocity.X - num962;
								}
								if (this.velocity.Y < num965)
								{
									this.velocity.Y = this.velocity.Y + num962;
								}
								else if (this.velocity.Y > num965)
								{
									this.velocity.Y = this.velocity.Y - num962;
								}
								if ((double)Math.Abs(num965) < (double)num960 * 0.2 && ((this.velocity.X > 0f && num964 < 0f) || (this.velocity.X < 0f && num964 > 0f)))
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y + num962 * 2f;
									}
									else
									{
										this.velocity.Y = this.velocity.Y - num962 * 2f;
									}
								}
								if ((double)Math.Abs(num964) < (double)num960 * 0.2 && ((this.velocity.Y > 0f && num965 < 0f) || (this.velocity.Y < 0f && num965 > 0f)))
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X + num962 * 2f;
									}
									else
									{
										this.velocity.X = this.velocity.X - num962 * 2f;
									}
								}
							}
							else if (num969 > num970)
							{
								if (this.velocity.X < num964)
								{
									this.velocity.X = this.velocity.X + num962 * 1.1f;
								}
								else if (this.velocity.X > num964)
								{
									this.velocity.X = this.velocity.X - num962 * 1.1f;
								}
								if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)num960 * 0.5)
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y + num962;
									}
									else
									{
										this.velocity.Y = this.velocity.Y - num962;
									}
								}
							}
							else
							{
								if (this.velocity.Y < num965)
								{
									this.velocity.Y = this.velocity.Y + num962 * 1.1f;
								}
								else if (this.velocity.Y > num965)
								{
									this.velocity.Y = this.velocity.Y - num962 * 1.1f;
								}
								if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)num960 * 0.5)
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X + num962;
									}
									else
									{
										this.velocity.X = this.velocity.X - num962;
									}
								}
							}
						}
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
						if (this.type == 134)
						{
							if (flag98)
							{
								if (this.localAI[0] != 1f)
								{
									this.netUpdate = true;
								}
								this.localAI[0] = 1f;
							}
							else
							{
								if (this.localAI[0] != 0f)
								{
									this.netUpdate = true;
								}
								this.localAI[0] = 0f;
							}
							if (((this.velocity.X > 0f && this.oldVelocity.X < 0f) || (this.velocity.X < 0f && this.oldVelocity.X > 0f) || (this.velocity.Y > 0f && this.oldVelocity.Y < 0f) || (this.velocity.Y < 0f && this.oldVelocity.Y > 0f)) && !this.justHit)
							{
								this.netUpdate = true;
								return;
							}
						}
					}
					else if (this.aiStyle == 38)
					{
						float num972 = 4f;
						float num973 = 1f;
						if (this.type == 143)
						{
							num972 = 3f;
							num973 = 0.7f;
						}
						if (this.type == 145)
						{
							num972 = 3.5f;
							num973 = 0.8f;
						}
						if (this.type == 143)
						{
							this.ai[2] += 1f;
							if (this.ai[2] >= 120f)
							{
								this.ai[2] = 0f;
								if (Main.netMode != 1)
								{
									Vector2 vector109 = new Vector2(this.position.X + (float)this.width * 0.5f - (float)(this.direction * 12), this.position.Y + (float)this.height * 0.5f);
									float speedX = (float)(12 * this.spriteDirection);
									float speedY = 0f;
									if (Main.netMode != 1)
									{
										int num974 = 25;
										int num975 = 110;
										int num976 = Projectile.NewProjectile(vector109.X, vector109.Y, speedX, speedY, num975, num974, 0f, Main.myPlayer, 0f, 0f);
										Main.projectile[num976].ai[0] = 2f;
										Main.projectile[num976].timeLeft = 300;
										Main.projectile[num976].friendly = false;
										NetMessage.SendData(27, -1, -1, "", num976, 0f, 0f, 0f, 0, 0, 0);
										this.netUpdate = true;
									}
								}
							}
						}
						if (this.type == 144 && this.ai[1] >= 3f)
						{
							this.TargetClosest(true);
							this.spriteDirection = this.direction;
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
								this.ai[2] += 1f;
								if ((double)this.velocity.X > -0.3 && (double)this.velocity.X < 0.3)
								{
									this.velocity.X = 0f;
								}
								if (this.ai[2] >= 200f)
								{
									this.ai[2] = 0f;
									this.ai[1] = 0f;
								}
							}
						}
						else if (this.type == 145 && this.ai[1] >= 3f)
						{
							this.TargetClosest(true);
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
								this.ai[2] += 1f;
								if ((double)this.velocity.X > -0.3 && (double)this.velocity.X < 0.3)
								{
									this.velocity.X = 0f;
								}
								if (this.ai[2] >= 16f)
								{
									this.ai[2] = 0f;
									this.ai[1] = 0f;
								}
							}
							if (this.velocity.X == 0f && this.velocity.Y == 0f && this.ai[2] == 8f)
							{
								float num977 = 10f;
								Vector2 vector110 = new Vector2(this.position.X + (float)this.width * 0.5f - (float)(this.direction * 12), this.position.Y + (float)this.height * 0.25f);
								float num978 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector110.X;
								float num979 = Main.player[this.target].position.Y - vector110.Y;
								float num980 = (float)Math.Sqrt((double)(num978 * num978 + num979 * num979));
								num980 = num977 / num980;
								num978 *= num980;
								num979 *= num980;
								if (Main.netMode != 1)
								{
									int num981 = 35;
									int num982 = 109;
									int num983 = Projectile.NewProjectile(vector110.X, vector110.Y, num978, num979, num982, num981, 0f, Main.myPlayer, 0f, 0f);
									Main.projectile[num983].ai[0] = 2f;
									Main.projectile[num983].timeLeft = 300;
									Main.projectile[num983].friendly = false;
									NetMessage.SendData(27, -1, -1, "", num983, 0f, 0f, 0f, 0, 0, 0);
									this.netUpdate = true;
								}
							}
						}
						else
						{
							if (this.velocity.Y == 0f)
							{
								if (this.localAI[2] == this.position.X)
								{
									this.direction *= -1;
									this.ai[3] = 60f;
								}
								this.localAI[2] = this.position.X;
								if (this.ai[3] == 0f)
								{
									this.TargetClosest(true);
								}
								this.ai[0] += 1f;
								if (this.ai[0] > 2f)
								{
									this.ai[0] = 0f;
									this.ai[1] += 1f;
									this.velocity.Y = -8.2f;
									this.velocity.X = this.velocity.X + (float)this.direction * num973 * 1.1f;
								}
								else
								{
									this.velocity.Y = -6f;
									this.velocity.X = this.velocity.X + (float)this.direction * num973 * 0.9f;
								}
								this.spriteDirection = this.direction;
							}
							this.velocity.X = this.velocity.X + (float)this.direction * num973 * 0.01f;
						}
						if (this.ai[3] > 0f)
						{
							this.ai[3] -= 1f;
						}
						if (this.velocity.X > num972 && this.direction > 0)
						{
							this.velocity.X = 4f;
						}
						if (this.velocity.X < -num972 && this.direction < 0)
						{
							this.velocity.X = -4f;
							return;
						}
					}
					else if (this.aiStyle == 39)
					{
						if (this.target < 0 || Main.player[this.target].dead || this.direction == 0)
						{
							this.TargetClosest(true);
						}
						bool flag100 = true;
						int num984 = 0;
						if (this.velocity.X < 0f)
						{
							num984 = -1;
						}
						if (this.velocity.X > 0f)
						{
							num984 = 1;
						}
						Vector2 position6 = this.position;
						position6.X += this.velocity.X;
						int num985 = (int)((position6.X + (float)(this.width / 2) + (float)((this.width / 2 + 1) * num984)) / 16f);
						int num986 = (int)((position6.Y + (float)this.height - 1f) / 16f);
						if ((float)(num985 * 16) < position6.X + (float)this.width && (float)(num985 * 16 + 16) > position6.X && ((Main.tile[num985, num986].nactive() && !Main.tile[num985, num986].topSlope() && !Main.tile[num985, num986 - 1].topSlope() && ((Main.tileSolid[(int)Main.tile[num985, num986].type] && !Main.tileSolidTop[(int)Main.tile[num985, num986].type]) || (flag100 && Main.tileSolidTop[(int)Main.tile[num985, num986].type] && (!Main.tileSolid[(int)Main.tile[num985, num986 - 1].type] || !Main.tile[num985, num986 - 1].nactive()) && Main.tile[num985, num986].type != 16 && Main.tile[num985, num986].type != 18 && Main.tile[num985, num986].type != 134))) || (Main.tile[num985, num986 - 1].halfBrick() && Main.tile[num985, num986 - 1].nactive())) && (!Main.tile[num985, num986 - 1].nactive() || !Main.tileSolid[(int)Main.tile[num985, num986 - 1].type] || Main.tileSolidTop[(int)Main.tile[num985, num986 - 1].type] || (Main.tile[num985, num986 - 1].halfBrick() && (!Main.tile[num985, num986 - 4].nactive() || !Main.tileSolid[(int)Main.tile[num985, num986 - 4].type] || Main.tileSolidTop[(int)Main.tile[num985, num986 - 4].type]))) && (!Main.tile[num985, num986 - 2].nactive() || !Main.tileSolid[(int)Main.tile[num985, num986 - 2].type] || Main.tileSolidTop[(int)Main.tile[num985, num986 - 2].type]) && (!Main.tile[num985, num986 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num985, num986 - 3].type] || Main.tileSolidTop[(int)Main.tile[num985, num986 - 3].type]) && (!Main.tile[num985 - num984, num986 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num985 - num984, num986 - 3].type] || Main.tileSolidTop[(int)Main.tile[num985 - num984, num986 - 3].type]))
						{
							float num987 = (float)(num986 * 16);
							if (Main.tile[num985, num986].halfBrick())
							{
								num987 += 8f;
							}
							if (Main.tile[num985, num986 - 1].halfBrick())
							{
								num987 -= 8f;
							}
							if (num987 < position6.Y + (float)this.height)
							{
								float num988 = position6.Y + (float)this.height - num987;
								if ((double)num988 <= 16.1)
								{
									this.gfxOffY += this.position.Y + (float)this.height - num987;
									this.position.Y = num987 - (float)this.height;
									if (num988 < 9f)
									{
										this.stepSpeed = 0.75f;
									}
									else
									{
										this.stepSpeed = 1.5f;
									}
								}
							}
						}
						if (this.justHit && this.type != 417)
						{
							this.ai[0] = 0f;
							this.ai[1] = 0f;
							this.TargetClosest(true);
						}
						if (this.type == 154 && Main.rand.Next(10) == 0)
						{
							int num989 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 67, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, default(Color), 1.5f);
							Main.dust[num989].noGravity = true;
							Main.dust[num989].velocity *= 0.2f;
						}
						if (this.ai[0] == 0f)
						{
							if (this.velocity.X < 0f)
							{
								this.direction = -1;
							}
							else if (this.velocity.X > 0f)
							{
								this.direction = 1;
							}
							this.spriteDirection = this.direction;
							Vector2 vector111 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num990 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector111.X;
							float num991 = Main.player[this.target].position.Y - vector111.Y;
							float num992 = (float)Math.Sqrt((double)(num990 * num990 + num991 * num991));
							bool flag101 = Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height);
							if (this.type >= 496 && this.type <= 497)
							{
								if (num992 > 200f && flag101)
								{
									this.ai[1] += 2f;
								}
								if (num992 > 600f && (flag101 || this.position.Y + (float)this.height > Main.player[this.target].position.Y - 200f))
								{
									this.ai[1] += 4f;
								}
							}
							else
							{
								if (num992 > 200f && flag101)
								{
									this.ai[1] += 4f;
								}
								if (num992 > 600f && (flag101 || this.position.Y + (float)this.height > Main.player[this.target].position.Y - 200f))
								{
									this.ai[1] += 10f;
								}
								if (this.wet)
								{
									this.ai[1] = 1000f;
								}
							}
							this.defense = this.defDefense;
							this.damage = this.defDamage;
							if (this.type >= 496 && this.type <= 497)
							{
								this.knockBackResist = 0.75f * Main.knockBackMultiplier;
							}
							else
							{
								this.knockBackResist = 0.3f * Main.knockBackMultiplier;
							}
							this.ai[1] += 1f;
							if (this.ai[1] >= 400f)
							{
								this.ai[1] = 0f;
								this.ai[0] = 1f;
							}
							if (!this.justHit && this.velocity.X != this.oldVelocity.X)
							{
								this.direction *= -1;
							}
							if (this.velocity.Y == 0f && Main.player[this.target].position.Y < this.position.Y + (float)this.height)
							{
								int num993;
								int num994;
								if (this.direction > 0)
								{
									num993 = (int)(((double)this.position.X + (double)this.width * 0.5) / 16.0);
									num994 = num993 + 3;
								}
								else
								{
									num994 = (int)(((double)this.position.X + (double)this.width * 0.5) / 16.0);
									num993 = num994 - 3;
								}
								int num995 = (int)((this.position.Y + (float)this.height + 2f) / 16f) - 1;
								int num996 = num995 + 4;
								bool flag102 = false;
								for (int num997 = num993; num997 <= num994; num997++)
								{
									for (int num998 = num995; num998 <= num996; num998++)
									{
										if (Main.tile[num997, num998] != null && Main.tile[num997, num998].nactive() && Main.tileSolid[(int)Main.tile[num997, num998].type])
										{
											flag102 = true;
										}
									}
								}
								if (!flag102)
								{
									this.direction *= -1;
									this.velocity.X = 0.1f * (float)this.direction;
								}
							}
							if (this.type >= 496 && this.type <= 497)
							{
								float num999 = 0.5f;
								if (this.velocity.X < -num999 || this.velocity.X > num999)
								{
									if (this.velocity.Y == 0f)
									{
										this.velocity *= 0.8f;
										return;
									}
								}
								else if (this.velocity.X < num999 && this.direction == 1)
								{
									this.velocity.X = this.velocity.X + 0.07f;
									if (this.velocity.X > num999)
									{
										this.velocity.X = num999;
										return;
									}
								}
								else if (this.velocity.X > -num999 && this.direction == -1)
								{
									this.velocity.X = this.velocity.X - 0.07f;
									if (this.velocity.X < -num999)
									{
										this.velocity.X = -num999;
										return;
									}
								}
							}
							else
							{
								float num1000 = 1f;
								if (num992 < 400f)
								{
									if (this.velocity.X < -num1000 || this.velocity.X > num1000)
									{
										if (this.velocity.Y == 0f)
										{
											this.velocity *= 0.8f;
											return;
										}
									}
									else if (this.velocity.X < num1000 && this.direction == 1)
									{
										this.velocity.X = this.velocity.X + 0.07f;
										if (this.velocity.X > num1000)
										{
											this.velocity.X = num1000;
											return;
										}
									}
									else if (this.velocity.X > -num1000 && this.direction == -1)
									{
										this.velocity.X = this.velocity.X - 0.07f;
										if (this.velocity.X < -num1000)
										{
											this.velocity.X = -num1000;
											return;
										}
									}
								}
								else if (this.velocity.X < -1.5f || this.velocity.X > 1.5f)
								{
									if (this.velocity.Y == 0f)
									{
										this.velocity *= 0.8f;
										return;
									}
								}
								else if (this.velocity.X < 1.5f && this.direction == 1)
								{
									this.velocity.X = this.velocity.X + 0.07f;
									if (this.velocity.X > 1.5f)
									{
										this.velocity.X = 1.5f;
										return;
									}
								}
								else if (this.velocity.X > -1.5f && this.direction == -1)
								{
									this.velocity.X = this.velocity.X - 0.07f;
									if (this.velocity.X < -1.5f)
									{
										this.velocity.X = -1.5f;
										return;
									}
								}
							}
						}
						else if (this.ai[0] == 1f)
						{
							this.velocity.X = this.velocity.X * 0.5f;
							if (this.type >= 496 && this.type <= 497)
							{
								this.ai[1] += 0.5f;
							}
							else
							{
								this.ai[1] += 1f;
							}
							if (this.ai[1] >= 30f)
							{
								this.netUpdate = true;
								this.TargetClosest(true);
								this.ai[1] = 0f;
								this.ai[2] = 0f;
								this.ai[0] = 3f;
								if (this.type == 417)
								{
									this.ai[0] = 6f;
									this.ai[2] = (float)Main.rand.Next(2, 5);
									return;
								}
							}
						}
						else
						{
							if (this.ai[0] == 3f)
							{
								if (this.type == 154 && Main.rand.Next(3) < 2)
								{
									int num1001 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 67, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, default(Color), 1.5f);
									Main.dust[num1001].noGravity = true;
									Main.dust[num1001].velocity *= 0.2f;
								}
								if (Main.expertMode)
								{
									if (this.type >= 496 && this.type <= 497)
									{
										this.damage = (int)((double)this.defDamage * 1.5 * 0.9);
									}
									else
									{
										this.damage = (int)((double)(this.defDamage * 2) * 0.9);
									}
								}
								else if (this.type >= 496 && this.type <= 497)
								{
									this.damage = (int)((double)this.defDamage * 1.5);
								}
								else
								{
									this.damage = this.defDamage * 2;
								}
								this.defense = this.defDefense * 2;
								this.ai[1] += 1f;
								if (this.ai[1] == 1f)
								{
									this.netUpdate = true;
									this.TargetClosest(true);
									this.ai[2] += 0.3f;
									this.rotation += this.ai[2] * (float)this.direction;
									this.ai[1] += 1f;
									bool flag103 = Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height);
									float num1002 = 10f;
									if (!flag103)
									{
										num1002 = 6f;
									}
									if (this.type >= 496 && this.type <= 497)
									{
										num1002 *= 0.75f;
									}
									Vector2 vector112 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num1003 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector112.X;
									float num1004 = Math.Abs(num1003) * 0.2f;
									if (this.directionY > 0)
									{
										num1004 = 0f;
									}
									float num1005 = Main.player[this.target].position.Y - vector112.Y - num1004;
									float num1006 = (float)Math.Sqrt((double)(num1003 * num1003 + num1005 * num1005));
									this.netUpdate = true;
									num1006 = num1002 / num1006;
									num1003 *= num1006;
									num1005 *= num1006;
									if (!flag103)
									{
										num1005 = -10f;
									}
									this.velocity.X = num1003;
									this.velocity.Y = num1005;
									this.ai[3] = this.velocity.X;
								}
								else
								{
									if (this.position.X + (float)this.width > Main.player[this.target].position.X && this.position.X < Main.player[this.target].position.X + (float)Main.player[this.target].width && this.position.Y < Main.player[this.target].position.Y + (float)Main.player[this.target].height)
									{
										this.velocity.X = this.velocity.X * 0.8f;
										this.ai[3] = 0f;
										if (this.velocity.Y < 0f)
										{
											this.velocity.Y = this.velocity.Y + 0.2f;
										}
									}
									if (this.ai[3] != 0f)
									{
										this.velocity.X = this.ai[3];
										this.velocity.Y = this.velocity.Y - 0.22f;
									}
									if (this.ai[1] >= 90f)
									{
										this.noGravity = false;
										this.ai[1] = 0f;
										this.ai[0] = 4f;
									}
								}
								if (this.wet && this.directionY < 0)
								{
									this.velocity.Y = this.velocity.Y - 0.3f;
								}
								this.rotation += this.ai[2] * (float)this.direction;
								return;
							}
							if (this.ai[0] == 4f)
							{
								if (this.wet && this.directionY < 0)
								{
									this.velocity.Y = this.velocity.Y - 0.3f;
								}
								this.velocity.X = this.velocity.X * 0.96f;
								if (this.ai[2] > 0f)
								{
									this.ai[2] -= 0.01f;
									this.rotation += this.ai[2] * (float)this.direction;
								}
								else if (this.velocity.Y >= 0f)
								{
									this.rotation = 0f;
								}
								if (this.ai[2] <= 0f && (this.velocity.Y == 0f || this.wet))
								{
									this.netUpdate = true;
									this.rotation = 0f;
									this.ai[2] = 0f;
									this.ai[1] = 0f;
									this.ai[0] = 5f;
									return;
								}
							}
							else
							{
								if (this.ai[0] == 6f)
								{
									this.damage = (int)((float)this.defDamage * (Main.expertMode ? 1.4f : 1.8f));
									this.defense = this.defDefense * 2;
									this.knockBackResist = 0f;
									if (Main.rand.Next(3) < 2)
									{
										int num1007 = Dust.NewDust(base.Center - new Vector2(30f), 60, 60, 6, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, default(Color), 1.5f);
										Main.dust[num1007].noGravity = true;
										Main.dust[num1007].velocity *= 0.2f;
										Main.dust[num1007].fadeIn = 1f;
									}
									this.ai[1] += 1f;
									if (this.ai[3] > 0f)
									{
										if (this.ai[3] == 1f)
										{
											Vector2 vector113 = base.Center - new Vector2(50f);
											for (int num1008 = 0; num1008 < 32; num1008++)
											{
												int num1009 = Dust.NewDust(vector113, 100, 100, 6, 0f, 0f, 100, default(Color), 2.5f);
												Main.dust[num1009].noGravity = true;
												Main.dust[num1009].velocity *= 3f;
												num1009 = Dust.NewDust(vector113, 100, 100, 6, 0f, 0f, 100, default(Color), 1.5f);
												Main.dust[num1009].velocity *= 2f;
												Main.dust[num1009].noGravity = true;
											}
											for (int num1010 = 0; num1010 < 4; num1010++)
											{
												int num1011 = Gore.NewGore(vector113 + new Vector2((float)(50 * Main.rand.Next(100)) / 100f, (float)(50 * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, default(Vector2), Main.rand.Next(61, 64), 1f);
												Main.gore[num1011].velocity *= 0.3f;
												Gore expr_3B7BA_cp_0 = Main.gore[num1011];
												expr_3B7BA_cp_0.velocity.X = expr_3B7BA_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.05f;
												Gore expr_3B7EA_cp_0 = Main.gore[num1011];
												expr_3B7EA_cp_0.velocity.Y = expr_3B7EA_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.05f;
											}
										}
										for (int num1012 = 0; num1012 < 5; num1012++)
										{
											int num1013 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
											Main.dust[num1013].velocity = Main.dust[num1013].velocity * Main.rand.NextFloat();
										}
										this.ai[3] += 1f;
										if (this.ai[3] >= 10f)
										{
											this.ai[3] = 0f;
										}
									}
									if (this.ai[1] == 1f)
									{
										this.netUpdate = true;
										this.TargetClosest(true);
										bool flag104 = Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height);
										float num1014 = 16f;
										if (!flag104)
										{
											num1014 = 10f;
										}
										Vector2 vector114 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float num1015 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector114.X;
										float num1016 = Math.Abs(num1015) * 0.2f;
										if (this.directionY > 0)
										{
											num1016 = 0f;
										}
										float num1017 = Main.player[this.target].position.Y - vector114.Y - num1016;
										float num1018 = (float)Math.Sqrt((double)(num1015 * num1015 + num1017 * num1017));
										this.netUpdate = true;
										num1018 = num1014 / num1018;
										num1015 *= num1018;
										num1017 *= num1018;
										if (!flag104)
										{
											num1017 = -12f;
										}
										this.velocity.X = num1015;
										this.velocity.Y = num1017;
									}
									else
									{
										if (this.position.X + (float)this.width > Main.player[this.target].position.X && this.position.X < Main.player[this.target].position.X + (float)Main.player[this.target].width && this.position.Y < Main.player[this.target].position.Y + (float)Main.player[this.target].height)
										{
											this.velocity.X = this.velocity.X * 0.9f;
											if (this.velocity.Y < 0f)
											{
												this.velocity.Y = this.velocity.Y + 0.2f;
											}
										}
										if (this.ai[2] == 0f || this.ai[1] >= 1200f)
										{
											this.ai[1] = 0f;
											this.ai[0] = 5f;
										}
									}
									if (this.wet && this.directionY < 0)
									{
										this.velocity.Y = this.velocity.Y - 0.3f;
									}
									this.rotation += MathHelper.Clamp(this.velocity.X / 10f * (float)this.direction, -0.314159274f, 0.314159274f);
									return;
								}
								if (this.ai[0] == 5f)
								{
									this.rotation = 0f;
									this.velocity.X = 0f;
									if (this.type >= 496 && this.type <= 497)
									{
										this.ai[1] += 0.5f;
									}
									else
									{
										this.ai[1] += 1f;
									}
									if (this.ai[1] >= 30f)
									{
										this.TargetClosest(true);
										this.netUpdate = true;
										this.ai[1] = 0f;
										this.ai[0] = 0f;
									}
									if (this.wet)
									{
										this.ai[0] = 3f;
										this.ai[1] = 0f;
										return;
									}
								}
							}
						}
					}
					else if (this.aiStyle == 40)
					{
						if (this.target < 0 || this.target == 255 || Main.player[this.target].dead)
						{
							this.TargetClosest(true);
						}
						float num1019 = 2f;
						float num1020 = 0.08f;
						if (this.type == 531)
						{
							num1019 = 4f;
							num1020 = 0.16f;
						}
						Vector2 vector115 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num1021 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2);
						float num1022 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2);
						num1021 = (float)((int)(num1021 / 8f) * 8);
						num1022 = (float)((int)(num1022 / 8f) * 8);
						vector115.X = (float)((int)(vector115.X / 8f) * 8);
						vector115.Y = (float)((int)(vector115.Y / 8f) * 8);
						num1021 -= vector115.X;
						num1022 -= vector115.Y;
						float num1023 = (float)Math.Sqrt((double)(num1021 * num1021 + num1022 * num1022));
						if (num1023 == 0f)
						{
							num1021 = this.velocity.X;
							num1022 = this.velocity.Y;
						}
						else
						{
							num1023 = num1019 / num1023;
							num1021 *= num1023;
							num1022 *= num1023;
						}
						if (Main.player[this.target].dead)
						{
							num1021 = (float)this.direction * num1019 / 2f;
							num1022 = -num1019 / 2f;
						}
						this.spriteDirection = -1;
						if (!Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
						{
							this.ai[0] += 1f;
							if (this.ai[0] > 0f)
							{
								this.velocity.Y = this.velocity.Y + 0.023f;
							}
							else
							{
								this.velocity.Y = this.velocity.Y - 0.023f;
							}
							if (this.ai[0] < -100f || this.ai[0] > 100f)
							{
								this.velocity.X = this.velocity.X + 0.023f;
							}
							else
							{
								this.velocity.X = this.velocity.X - 0.023f;
							}
							if (this.ai[0] > 200f)
							{
								this.ai[0] = -200f;
							}
							this.velocity.X = this.velocity.X + num1021 * 0.007f;
							this.velocity.Y = this.velocity.Y + num1022 * 0.007f;
							this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
							if ((double)this.velocity.X > 1.5)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if ((double)this.velocity.X < -1.5)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if ((double)this.velocity.Y > 1.5)
							{
								this.velocity.Y = this.velocity.Y * 0.9f;
							}
							if ((double)this.velocity.Y < -1.5)
							{
								this.velocity.Y = this.velocity.Y * 0.9f;
							}
							if (this.velocity.X > 3f)
							{
								this.velocity.X = 3f;
							}
							if (this.velocity.X < -3f)
							{
								this.velocity.X = -3f;
							}
							if (this.velocity.Y > 3f)
							{
								this.velocity.Y = 3f;
							}
							if (this.velocity.Y < -3f)
							{
								this.velocity.Y = -3f;
							}
						}
						else
						{
							if (this.velocity.X < num1021)
							{
								this.velocity.X = this.velocity.X + num1020;
								if (this.velocity.X < 0f && num1021 > 0f)
								{
									this.velocity.X = this.velocity.X + num1020;
								}
							}
							else if (this.velocity.X > num1021)
							{
								this.velocity.X = this.velocity.X - num1020;
								if (this.velocity.X > 0f && num1021 < 0f)
								{
									this.velocity.X = this.velocity.X - num1020;
								}
							}
							if (this.velocity.Y < num1022)
							{
								this.velocity.Y = this.velocity.Y + num1020;
								if (this.velocity.Y < 0f && num1022 > 0f)
								{
									this.velocity.Y = this.velocity.Y + num1020;
								}
							}
							else if (this.velocity.Y > num1022)
							{
								this.velocity.Y = this.velocity.Y - num1020;
								if (this.velocity.Y > 0f && num1022 < 0f)
								{
									this.velocity.Y = this.velocity.Y - num1020;
								}
							}
							this.rotation = (float)Math.Atan2((double)num1022, (double)num1021);
						}
						if (this.type == 531)
						{
							this.rotation += 1.57079637f;
						}
						float num1024 = 0.5f;
						if (this.collideX)
						{
							this.netUpdate = true;
							this.velocity.X = this.oldVelocity.X * -num1024;
							if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
							{
								this.velocity.X = 2f;
							}
							if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
							{
								this.velocity.X = -2f;
							}
						}
						if (this.collideY)
						{
							this.netUpdate = true;
							this.velocity.Y = this.oldVelocity.Y * -num1024;
							if (this.velocity.Y > 0f && (double)this.velocity.Y < 1.5)
							{
								this.velocity.Y = 2f;
							}
							if (this.velocity.Y < 0f && (double)this.velocity.Y > -1.5)
							{
								this.velocity.Y = -2f;
							}
						}
						if (((this.velocity.X > 0f && this.oldVelocity.X < 0f) || (this.velocity.X < 0f && this.oldVelocity.X > 0f) || (this.velocity.Y > 0f && this.oldVelocity.Y < 0f) || (this.velocity.Y < 0f && this.oldVelocity.Y > 0f)) && !this.justHit)
						{
							this.netUpdate = true;
						}
						if (Main.netMode != 1)
						{
							if (Main.netMode != 1 && Main.expertMode && this.target >= 0 && (this.type == 163 || this.type == 238) && Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
							{
								this.localAI[0] += 1f;
								if (this.justHit)
								{
									this.localAI[0] -= (float)Main.rand.Next(20, 60);
									if (this.localAI[0] < 0f)
									{
										this.localAI[0] = 0f;
									}
								}
								if (this.localAI[0] > (float)Main.rand.Next(180, 900))
								{
									this.localAI[0] = 0f;
									Vector2 vector116 = Main.player[this.target].Center - base.Center;
									vector116.Normalize();
									vector116 *= 8f;
									Projectile.NewProjectile(base.Center.X, base.Center.Y, vector116.X, vector116.Y, 472, 18, 0f, Main.myPlayer, 0f, 0f);
								}
							}
							int num1025 = (int)base.Center.X / 16;
							int num1026 = (int)base.Center.Y / 16;
							bool flag105 = false;
							for (int num1027 = num1025 - 1; num1027 <= num1025 + 1; num1027++)
							{
								for (int num1028 = num1026 - 1; num1028 <= num1026 + 1; num1028++)
								{
									if (Main.tile[num1027, num1028] == null)
									{
										return;
									}
									if (Main.tile[num1027, num1028].wall > 0)
									{
										flag105 = true;
									}
								}
							}
							if (!flag105)
							{
								if (this.type == 237)
								{
									this.Transform(236);
									return;
								}
								if (this.type == 238)
								{
									this.Transform(163);
									return;
								}
								if (this.type == 240)
								{
									this.Transform(239);
									return;
								}
								if (this.type == 531)
								{
									this.Transform(530);
									return;
								}
								this.Transform(164);
								return;
							}
						}
					}
					else if (this.aiStyle == 41)
					{
						if (this.ai[2] > 1f)
						{
							this.ai[2] -= 1f;
						}
						if (this.ai[2] == 0f)
						{
							this.ai[0] = -100f;
							this.ai[2] = 1f;
							this.TargetClosest(true);
							this.spriteDirection = this.direction;
						}
						if (this.type == 378)
						{
							Vector2 value14 = new Vector2(-6f, -10f);
							value14.X *= (float)this.spriteDirection;
							if (this.ai[1] != 5f && Main.rand.Next(3) == 0)
							{
								int num1029 = Dust.NewDust(base.Center + value14 - Vector2.One * 5f, 4, 4, 6, 0f, 0f, 0, default(Color), 1f);
								Main.dust[num1029].scale = 1.5f;
								Main.dust[num1029].noGravity = true;
								Main.dust[num1029].velocity = Main.dust[num1029].velocity * 0.25f + Vector2.Normalize(value14) * 1f;
								Main.dust[num1029].velocity = Main.dust[num1029].velocity.RotatedBy((double)(-1.57079637f * (float)this.direction), default(Vector2));
							}
							if (this.ai[1] == 5f)
							{
								this.velocity = Vector2.Zero;
								this.position.X = this.position.X + (float)(this.width / 2);
								this.position.Y = this.position.Y + (float)(this.height / 2);
								this.width = 160;
								this.height = 160;
								this.position.X = this.position.X - (float)(this.width / 2);
								this.position.Y = this.position.Y - (float)(this.height / 2);
								this.dontTakeDamage = true;
								for (int num1030 = 0; num1030 < 8; num1030++)
								{
									Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
								}
								for (int num1031 = 0; num1031 < 32; num1031++)
								{
									int num1032 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
									Main.dust[num1032].noGravity = true;
									Main.dust[num1032].velocity *= 3f;
									num1032 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
									Main.dust[num1032].velocity *= 2f;
									Main.dust[num1032].noGravity = true;
								}
								for (int num1033 = 0; num1033 < 2; num1033++)
								{
									int num1034 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, default(Vector2), Main.rand.Next(61, 64), 1f);
									Main.gore[num1034].velocity *= 0.3f;
									Gore expr_3CCBC_cp_0 = Main.gore[num1034];
									expr_3CCBC_cp_0.velocity.X = expr_3CCBC_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.05f;
									Gore expr_3CCEC_cp_0 = Main.gore[num1034];
									expr_3CCEC_cp_0.velocity.Y = expr_3CCEC_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.05f;
								}
								if (this.ai[2] == 1f)
								{
									Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
									this.life = -1;
									this.HitEffect(0, 10.0);
									this.active = false;
								}
								return;
							}
						}
						if (this.type == 378 && this.ai[1] != 5f)
						{
							if (this.wet || Vector2.Distance(base.Center, Main.player[this.target].Center) < 64f)
							{
								this.ai[1] = 5f;
								this.ai[2] = 3f;
								this.netUpdate = true;
								return;
							}
						}
						else if (this.wet && this.type != 177)
						{
							if (this.collideX)
							{
								this.direction *= -this.direction;
								this.spriteDirection = this.direction;
							}
							if (this.collideY)
							{
								this.TargetClosest(true);
								if (this.oldVelocity.Y < 0f)
								{
									this.velocity.Y = 5f;
								}
								else
								{
									this.velocity.Y = this.velocity.Y - 2f;
								}
								this.spriteDirection = this.direction;
							}
							if (this.velocity.Y > 4f)
							{
								this.velocity.Y = this.velocity.Y * 0.95f;
							}
							this.velocity.Y = this.velocity.Y - 0.3f;
							if (this.velocity.Y < -4f)
							{
								this.velocity.Y = -4f;
							}
						}
						if (this.velocity.Y == 0f)
						{
							if (this.ai[3] == this.position.X)
							{
								this.direction *= -1;
								this.ai[2] = 300f;
							}
							this.ai[3] = 0f;
							this.velocity.X = this.velocity.X * 0.8f;
							if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
							{
								this.velocity.X = 0f;
							}
							if (this.type == 177)
							{
								this.ai[0] += 2f;
							}
							else
							{
								this.ai[0] += 5f;
							}
							Vector2 vector117 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num1035 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector117.X;
							float num1036 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector117.Y;
							float num1037 = (float)Math.Sqrt((double)(num1035 * num1035 + num1036 * num1036));
							float num1038 = 400f / num1037;
							if (this.type == 177)
							{
								num1038 *= 5f;
							}
							else
							{
								num1038 *= 10f;
							}
							if (num1038 > 30f)
							{
								num1038 = 30f;
							}
							this.ai[0] += (float)((int)num1038);
							if (this.ai[0] >= 0f)
							{
								this.netUpdate = true;
								if (this.ai[2] == 1f)
								{
									this.TargetClosest(true);
								}
								if (this.type == 177)
								{
									if (this.ai[1] == 2f)
									{
										this.velocity.Y = -11.5f;
										this.velocity.X = this.velocity.X + 2f * (float)this.direction;
										if (num1037 < 350f && num1037 > 200f)
										{
											this.velocity.X = this.velocity.X + (float)this.direction;
										}
										this.ai[0] = -200f;
										this.ai[1] = 0f;
										this.ai[3] = this.position.X;
									}
									else
									{
										this.velocity.Y = -7.5f;
										this.velocity.X = this.velocity.X + (float)(4 * this.direction);
										if (num1037 < 350f && num1037 > 200f)
										{
											this.velocity.X = this.velocity.X + (float)this.direction;
										}
										this.ai[0] = -120f;
										this.ai[1] += 1f;
									}
								}
								else if (this.ai[1] == 3f)
								{
									this.velocity.Y = -9f;
									this.velocity.X = this.velocity.X + (float)(3 * this.direction);
									if (num1037 < 350f && num1037 > 200f)
									{
										this.velocity.X = this.velocity.X + (float)this.direction;
									}
									this.ai[0] = -200f;
									this.ai[1] = 0f;
									this.ai[3] = this.position.X;
								}
								else
								{
									this.velocity.Y = -5f;
									this.velocity.X = this.velocity.X + (float)(5 * this.direction);
									if (num1037 < 350f && num1037 > 200f)
									{
										this.velocity.X = this.velocity.X + (float)this.direction;
									}
									this.ai[0] = -120f;
									this.ai[1] += 1f;
								}
							}
							else if (this.ai[0] >= -30f)
							{
								this.aiAction = 1;
							}
							this.spriteDirection = this.direction;
							return;
						}
						if (this.target < 255)
						{
							if (this.type == 177)
							{
								bool flag106 = false;
								if (this.position.Y + (float)this.height < Main.player[this.target].position.Y && this.position.X + (float)this.width > Main.player[this.target].position.X && this.position.X < Main.player[this.target].position.X + (float)Main.player[this.target].width)
								{
									flag106 = true;
									this.velocity.X = this.velocity.X * 0.92f;
									if (this.velocity.Y < 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.9f;
										this.velocity.Y = this.velocity.Y + 0.1f;
									}
								}
								if (!flag106 && ((this.direction == 1 && this.velocity.X < 4f) || (this.direction == -1 && this.velocity.X > -4f)))
								{
									if ((this.direction == -1 && (double)this.velocity.X < 0.1) || (this.direction == 1 && (double)this.velocity.X > -0.1))
									{
										this.velocity.X = this.velocity.X + 0.2f * (float)this.direction;
										return;
									}
									this.velocity.X = this.velocity.X * 0.93f;
									return;
								}
							}
							else if ((this.direction == 1 && this.velocity.X < 3f) || (this.direction == -1 && this.velocity.X > -3f))
							{
								if ((this.direction == -1 && (double)this.velocity.X < 0.1) || (this.direction == 1 && (double)this.velocity.X > -0.1))
								{
									this.velocity.X = this.velocity.X + 0.2f * (float)this.direction;
									return;
								}
								this.velocity.X = this.velocity.X * 0.93f;
								return;
							}
						}
					}
					else if (this.aiStyle == 42)
					{
						this.TargetClosest(true);
						if (this.ai[0] == 0f)
						{
							if (this.target >= 0)
							{
								Vector2 vector118 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num1039 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector118.X;
								float num1040 = Main.player[this.target].position.Y - vector118.Y;
								float num1041 = (float)Math.Sqrt((double)(num1039 * num1039 + num1040 * num1040));
								if (num1041 < 200f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
								{
									this.ai[0] = 1f;
								}
							}
							if (this.velocity.X != 0f || this.velocity.Y < 0f || this.velocity.Y > 2f || this.life != this.lifeMax)
							{
								this.ai[0] = 1f;
								return;
							}
						}
						else
						{
							this.ai[0] += 1f;
							if (this.ai[0] >= 21f)
							{
								this.ai[0] = 21f;
								this.Transform(196);
								return;
							}
						}
					}
					else if (this.aiStyle == 43)
					{
						int num1042 = 0;
						for (int num1043 = 0; num1043 < 255; num1043++)
						{
							if (Main.player[num1043].active && !Main.player[num1043].dead && (base.Center - Main.player[num1043].Center).Length() < 1000f)
							{
								num1042++;
							}
						}
						if (Main.expertMode)
						{
							int num1044 = (int)(20f * (1f - (float)this.life / (float)this.lifeMax));
							this.defense = this.defDefense + num1044;
						}
						if (this.target < 0 || this.target == 255 || Main.player[this.target].dead || !Main.player[this.target].active)
						{
							this.TargetClosest(true);
						}
						bool dead4 = Main.player[this.target].dead;
						if (dead4 && Main.expertMode)
						{
							if ((double)this.position.Y < Main.worldSurface * 16.0 + 2000.0)
							{
								this.velocity.Y = this.velocity.Y + 0.04f;
							}
							if (this.position.X < (float)(Main.maxTilesX * 8))
							{
								this.velocity.X = this.velocity.X - 0.04f;
							}
							else
							{
								this.velocity.X = this.velocity.X + 0.04f;
							}
							if (this.timeLeft > 10)
							{
								this.timeLeft = 10;
								return;
							}
						}
						else if (this.ai[0] == -1f)
						{
							if (Main.netMode != 1)
							{
								float num1045 = this.ai[1];
								int num1046;
								do
								{
									num1046 = Main.rand.Next(3);
									if (num1046 == 1)
									{
										num1046 = 2;
									}
									else if (num1046 == 2)
									{
										num1046 = 3;
									}
								}
								while ((float)num1046 == num1045);
								this.ai[0] = (float)num1046;
								this.ai[1] = 0f;
								this.ai[2] = 0f;
								return;
							}
						}
						else if (this.ai[0] == 0f)
						{
							int num1047 = 2;
							if (Main.expertMode)
							{
								if (this.life < this.lifeMax / 2)
								{
									num1047++;
								}
								if (this.life < this.lifeMax / 3)
								{
									num1047++;
								}
								if (this.life < this.lifeMax / 5)
								{
									num1047++;
								}
							}
							if (this.ai[1] > (float)(2 * num1047) && this.ai[1] % 2f == 0f)
							{
								this.ai[0] = -1f;
								this.ai[1] = 0f;
								this.ai[2] = 0f;
								this.netUpdate = true;
								return;
							}
							if (this.ai[1] % 2f == 0f)
							{
								this.TargetClosest(true);
								if (Math.Abs(this.position.Y + (float)(this.height / 2) - (Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2))) < 20f)
								{
									this.localAI[0] = 1f;
									this.ai[1] += 1f;
									this.ai[2] = 0f;
									float num1048 = 12f;
									if (Main.expertMode)
									{
										num1048 = 16f;
										if ((double)this.life < (double)this.lifeMax * 0.75)
										{
											num1048 += 2f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.5)
										{
											num1048 += 2f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.25)
										{
											num1048 += 2f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.1)
										{
											num1048 += 2f;
										}
									}
									Vector2 vector119 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num1049 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector119.X;
									float num1050 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector119.Y;
									float num1051 = (float)Math.Sqrt((double)(num1049 * num1049 + num1050 * num1050));
									num1051 = num1048 / num1051;
									this.velocity.X = num1049 * num1051;
									this.velocity.Y = num1050 * num1051;
									this.spriteDirection = this.direction;
									Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
									return;
								}
								this.localAI[0] = 0f;
								float num1052 = 12f;
								float num1053 = 0.15f;
								if (Main.expertMode)
								{
									if ((double)this.life < (double)this.lifeMax * 0.75)
									{
										num1052 += 1f;
										num1053 += 0.05f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.5)
									{
										num1052 += 1f;
										num1053 += 0.05f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.25)
									{
										num1052 += 2f;
										num1053 += 0.05f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.1)
									{
										num1052 += 2f;
										num1053 += 0.1f;
									}
								}
								if (this.position.Y + (float)(this.height / 2) < Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2))
								{
									this.velocity.Y = this.velocity.Y + num1053;
								}
								else
								{
									this.velocity.Y = this.velocity.Y - num1053;
								}
								if (this.velocity.Y < -12f)
								{
									this.velocity.Y = -num1052;
								}
								if (this.velocity.Y > 12f)
								{
									this.velocity.Y = num1052;
								}
								if (Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))) > 600f)
								{
									this.velocity.X = this.velocity.X + 0.15f * (float)this.direction;
								}
								else if (Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))) < 300f)
								{
									this.velocity.X = this.velocity.X - 0.15f * (float)this.direction;
								}
								else
								{
									this.velocity.X = this.velocity.X * 0.8f;
								}
								if (this.velocity.X < -16f)
								{
									this.velocity.X = -16f;
								}
								if (this.velocity.X > 16f)
								{
									this.velocity.X = 16f;
								}
								this.spriteDirection = this.direction;
								return;
							}
							else
							{
								if (this.velocity.X < 0f)
								{
									this.direction = -1;
								}
								else
								{
									this.direction = 1;
								}
								this.spriteDirection = this.direction;
								int num1054 = 600;
								if (Main.expertMode)
								{
									if ((double)this.life < (double)this.lifeMax * 0.1)
									{
										num1054 = 300;
									}
									else if ((double)this.life < (double)this.lifeMax * 0.25)
									{
										num1054 = 450;
									}
									else if ((double)this.life < (double)this.lifeMax * 0.5)
									{
										num1054 = 500;
									}
									else if ((double)this.life < (double)this.lifeMax * 0.75)
									{
										num1054 = 550;
									}
								}
								int num1055 = 1;
								if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))
								{
									num1055 = -1;
								}
								if (this.direction == num1055 && Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))) > (float)num1054)
								{
									this.ai[2] = 1f;
								}
								if (this.ai[2] != 1f)
								{
									this.localAI[0] = 1f;
									return;
								}
								this.TargetClosest(true);
								this.spriteDirection = this.direction;
								this.localAI[0] = 0f;
								this.velocity *= 0.9f;
								float num1056 = 0.1f;
								if (Main.expertMode)
								{
									if (this.life < this.lifeMax / 2)
									{
										this.velocity *= 0.9f;
										num1056 += 0.05f;
									}
									if (this.life < this.lifeMax / 3)
									{
										this.velocity *= 0.9f;
										num1056 += 0.05f;
									}
									if (this.life < this.lifeMax / 5)
									{
										this.velocity *= 0.9f;
										num1056 += 0.05f;
									}
								}
								if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) < num1056)
								{
									this.ai[2] = 0f;
									this.ai[1] += 1f;
									return;
								}
							}
						}
						else if (this.ai[0] == 2f)
						{
							this.TargetClosest(true);
							this.spriteDirection = this.direction;
							float num1057 = 12f;
							float num1058 = 0.07f;
							if (Main.expertMode)
							{
								num1058 = 0.1f;
							}
							Vector2 vector120 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num1059 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector120.X;
							float num1060 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 200f - vector120.Y;
							float num1061 = (float)Math.Sqrt((double)(num1059 * num1059 + num1060 * num1060));
							if (num1061 < 200f)
							{
								this.ai[0] = 1f;
								this.ai[1] = 0f;
								this.netUpdate = true;
								return;
							}
							num1061 = num1057 / num1061;
							if (this.velocity.X < num1059)
							{
								this.velocity.X = this.velocity.X + num1058;
								if (this.velocity.X < 0f && num1059 > 0f)
								{
									this.velocity.X = this.velocity.X + num1058;
								}
							}
							else if (this.velocity.X > num1059)
							{
								this.velocity.X = this.velocity.X - num1058;
								if (this.velocity.X > 0f && num1059 < 0f)
								{
									this.velocity.X = this.velocity.X - num1058;
								}
							}
							if (this.velocity.Y < num1060)
							{
								this.velocity.Y = this.velocity.Y + num1058;
								if (this.velocity.Y < 0f && num1060 > 0f)
								{
									this.velocity.Y = this.velocity.Y + num1058;
									return;
								}
							}
							else if (this.velocity.Y > num1060)
							{
								this.velocity.Y = this.velocity.Y - num1058;
								if (this.velocity.Y > 0f && num1060 < 0f)
								{
									this.velocity.Y = this.velocity.Y - num1058;
									return;
								}
							}
						}
						else if (this.ai[0] == 1f)
						{
							this.localAI[0] = 0f;
							this.TargetClosest(true);
							Vector2 vector121 = new Vector2(this.position.X + (float)(this.width / 2) + (float)(Main.rand.Next(20) * this.direction), this.position.Y + (float)this.height * 0.8f);
							Vector2 vector122 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num1062 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector122.X;
							float num1063 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector122.Y;
							float num1064 = (float)Math.Sqrt((double)(num1062 * num1062 + num1063 * num1063));
							this.ai[1] += 1f;
							if (Main.expertMode)
							{
								this.ai[1] += (float)(num1042 / 2);
								if ((double)this.life < (double)this.lifeMax * 0.75)
								{
									this.ai[1] += 0.25f;
								}
								if ((double)this.life < (double)this.lifeMax * 0.5)
								{
									this.ai[1] += 0.25f;
								}
								if ((double)this.life < (double)this.lifeMax * 0.25)
								{
									this.ai[1] += 0.25f;
								}
								if ((double)this.life < (double)this.lifeMax * 0.1)
								{
									this.ai[1] += 0.25f;
								}
							}
							bool flag107 = false;
							if (this.ai[1] > 40f)
							{
								this.ai[1] = 0f;
								this.ai[2] += 1f;
								flag107 = true;
							}
							if (Collision.CanHit(vector121, 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && flag107)
							{
								Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, 1);
								if (Main.netMode != 1)
								{
									int num1065 = Main.rand.Next(210, 212);
									int num1066 = NPC.NewNPC((int)vector121.X, (int)vector121.Y, num1065, 0, 0f, 0f, 0f, 0f, 255);
									Main.npc[num1066].velocity.X = (float)Main.rand.Next(-200, 201) * 0.002f;
									Main.npc[num1066].velocity.Y = (float)Main.rand.Next(-200, 201) * 0.002f;
									Main.npc[num1066].localAI[0] = 60f;
									Main.npc[num1066].netUpdate = true;
								}
							}
							if (num1064 > 400f || !Collision.CanHit(new Vector2(vector121.X, vector121.Y - 30f), 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
							{
								float num1067 = 14f;
								float num1068 = 0.1f;
								vector122 = vector121;
								num1062 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector122.X;
								num1063 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector122.Y;
								num1064 = (float)Math.Sqrt((double)(num1062 * num1062 + num1063 * num1063));
								num1064 = num1067 / num1064;
								if (this.velocity.X < num1062)
								{
									this.velocity.X = this.velocity.X + num1068;
									if (this.velocity.X < 0f && num1062 > 0f)
									{
										this.velocity.X = this.velocity.X + num1068;
									}
								}
								else if (this.velocity.X > num1062)
								{
									this.velocity.X = this.velocity.X - num1068;
									if (this.velocity.X > 0f && num1062 < 0f)
									{
										this.velocity.X = this.velocity.X - num1068;
									}
								}
								if (this.velocity.Y < num1063)
								{
									this.velocity.Y = this.velocity.Y + num1068;
									if (this.velocity.Y < 0f && num1063 > 0f)
									{
										this.velocity.Y = this.velocity.Y + num1068;
									}
								}
								else if (this.velocity.Y > num1063)
								{
									this.velocity.Y = this.velocity.Y - num1068;
									if (this.velocity.Y > 0f && num1063 < 0f)
									{
										this.velocity.Y = this.velocity.Y - num1068;
									}
								}
							}
							else
							{
								this.velocity *= 0.9f;
							}
							this.spriteDirection = this.direction;
							if (this.ai[2] > 5f)
							{
								this.ai[0] = -1f;
								this.ai[1] = 1f;
								this.netUpdate = true;
								return;
							}
						}
						else if (this.ai[0] == 3f)
						{
							float num1069 = 4f;
							float num1070 = 0.05f;
							if (Main.expertMode)
							{
								num1070 = 0.075f;
								num1069 = 6f;
							}
							Vector2 vector123 = new Vector2(this.position.X + (float)(this.width / 2) + (float)(Main.rand.Next(20) * this.direction), this.position.Y + (float)this.height * 0.8f);
							Vector2 vector124 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num1071 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector124.X;
							float num1072 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 300f - vector124.Y;
							float num1073 = (float)Math.Sqrt((double)(num1071 * num1071 + num1072 * num1072));
							this.ai[1] += 1f;
							bool flag108 = false;
							if (Main.expertMode)
							{
								if ((double)this.life < (double)this.lifeMax * 0.1)
								{
									if (this.ai[1] % 15f == 14f)
									{
										flag108 = true;
									}
								}
								else if (this.life < this.lifeMax / 3)
								{
									if (this.ai[1] % 25f == 24f)
									{
										flag108 = true;
									}
								}
								else if (this.life < this.lifeMax / 2)
								{
									if (this.ai[1] % 30f == 29f)
									{
										flag108 = true;
									}
								}
								else if (this.ai[1] % 35f == 34f)
								{
									flag108 = true;
								}
							}
							else if (this.ai[1] % 40f == 39f)
							{
								flag108 = true;
							}
							if (flag108 && this.position.Y + (float)this.height < Main.player[this.target].position.Y && Collision.CanHit(vector123, 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
							{
								Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
								if (Main.netMode != 1)
								{
									float num1074 = 8f;
									if (Main.expertMode)
									{
										num1074 += 2f;
									}
									if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.1)
									{
										num1074 += 3f;
									}
									float num1075 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector123.X + (float)Main.rand.Next(-80, 81);
									float num1076 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector123.Y + (float)Main.rand.Next(-40, 41);
									float num1077 = (float)Math.Sqrt((double)(num1075 * num1075 + num1076 * num1076));
									num1077 = num1074 / num1077;
									num1075 *= num1077;
									num1076 *= num1077;
									int num1078 = 11;
									int num1079 = 55;
									int num1080 = Projectile.NewProjectile(vector123.X, vector123.Y, num1075, num1076, num1079, num1078, 0f, Main.myPlayer, 0f, 0f);
									Main.projectile[num1080].timeLeft = 300;
								}
							}
							if (!Collision.CanHit(new Vector2(vector123.X, vector123.Y - 30f), 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
							{
								num1069 = 14f;
								num1070 = 0.1f;
								vector124 = vector123;
								num1071 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector124.X;
								num1072 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector124.Y;
								num1073 = (float)Math.Sqrt((double)(num1071 * num1071 + num1072 * num1072));
								num1073 = num1069 / num1073;
								if (this.velocity.X < num1071)
								{
									this.velocity.X = this.velocity.X + num1070;
									if (this.velocity.X < 0f && num1071 > 0f)
									{
										this.velocity.X = this.velocity.X + num1070;
									}
								}
								else if (this.velocity.X > num1071)
								{
									this.velocity.X = this.velocity.X - num1070;
									if (this.velocity.X > 0f && num1071 < 0f)
									{
										this.velocity.X = this.velocity.X - num1070;
									}
								}
								if (this.velocity.Y < num1072)
								{
									this.velocity.Y = this.velocity.Y + num1070;
									if (this.velocity.Y < 0f && num1072 > 0f)
									{
										this.velocity.Y = this.velocity.Y + num1070;
									}
								}
								else if (this.velocity.Y > num1072)
								{
									this.velocity.Y = this.velocity.Y - num1070;
									if (this.velocity.Y > 0f && num1072 < 0f)
									{
										this.velocity.Y = this.velocity.Y - num1070;
									}
								}
							}
							else if (num1073 > 100f)
							{
								this.TargetClosest(true);
								this.spriteDirection = this.direction;
								num1073 = num1069 / num1073;
								if (this.velocity.X < num1071)
								{
									this.velocity.X = this.velocity.X + num1070;
									if (this.velocity.X < 0f && num1071 > 0f)
									{
										this.velocity.X = this.velocity.X + num1070 * 2f;
									}
								}
								else if (this.velocity.X > num1071)
								{
									this.velocity.X = this.velocity.X - num1070;
									if (this.velocity.X > 0f && num1071 < 0f)
									{
										this.velocity.X = this.velocity.X - num1070 * 2f;
									}
								}
								if (this.velocity.Y < num1072)
								{
									this.velocity.Y = this.velocity.Y + num1070;
									if (this.velocity.Y < 0f && num1072 > 0f)
									{
										this.velocity.Y = this.velocity.Y + num1070 * 2f;
									}
								}
								else if (this.velocity.Y > num1072)
								{
									this.velocity.Y = this.velocity.Y - num1070;
									if (this.velocity.Y > 0f && num1072 < 0f)
									{
										this.velocity.Y = this.velocity.Y - num1070 * 2f;
									}
								}
							}
							if (this.ai[1] > 800f)
							{
								this.ai[0] = -1f;
								this.ai[1] = 3f;
								this.netUpdate = true;
								return;
							}
						}
					}
					else if (this.aiStyle == 44)
					{
						this.noGravity = true;
						if (this.collideX)
						{
							if (this.oldVelocity.X > 0f)
							{
								this.direction = -1;
							}
							else
							{
								this.direction = 1;
							}
							this.velocity.X = (float)this.direction;
						}
						if (this.collideY)
						{
							if (this.oldVelocity.Y > 0f)
							{
								this.directionY = -1;
							}
							else
							{
								this.directionY = 1;
							}
							this.velocity.Y = (float)this.directionY;
						}
						int num1081 = this.target;
						int direction5 = this.direction;
						if (this.target == 255 || Main.player[this.target].wet || Main.player[this.target].dead || Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
						{
							this.ai[0] = 90f;
							this.TargetClosest(true);
						}
						else if (this.ai[0] > 0f)
						{
							this.ai[0] -= 1f;
							this.TargetClosest(true);
						}
						if (this.netUpdate && num1081 == this.target && direction5 == this.direction)
						{
							this.netUpdate = false;
						}
						float num1082 = 0.05f;
						float num1083 = 0.01f;
						float num1084 = 3f;
						float num1085 = 1f;
						float num1086 = 30f;
						float num1087 = 100f;
						float num1088 = Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2)));
						float num1089 = Main.player[this.target].position.Y - (float)(this.height / 2);
						if (this.type == 509)
						{
							num1082 = 0.09f;
							num1083 = 0.03f;
							num1084 = 5f;
							num1085 = 2f;
							num1086 = 40f;
							num1087 = 150f;
							num1089 = Main.player[this.target].Center.Y - (float)(this.height / 2);
							this.rotation = this.velocity.X * 0.1f;
							for (int num1090 = 0; num1090 < 200; num1090++)
							{
								if (num1090 != this.whoAmI && Main.npc[num1090].active && Main.npc[num1090].type == this.type && Math.Abs(this.position.X - Main.npc[num1090].position.X) + Math.Abs(this.position.Y - Main.npc[num1090].position.Y) < (float)this.width)
								{
									if (this.position.X < Main.npc[num1090].position.X)
									{
										this.velocity.X = this.velocity.X - 0.05f;
									}
									else
									{
										this.velocity.X = this.velocity.X + 0.05f;
									}
									if (this.position.Y < Main.npc[num1090].position.Y)
									{
										this.velocity.Y = this.velocity.Y - 0.05f;
									}
									else
									{
										this.velocity.Y = this.velocity.Y + 0.05f;
									}
								}
							}
						}
						if (this.ai[0] <= 0f)
						{
							num1084 *= 0.8f;
							num1082 *= 0.7f;
							num1089 = base.Center.Y + (float)(this.directionY * 1000);
							if (this.velocity.X < 0f)
							{
								this.direction = -1;
							}
							else if (this.velocity.X > 0f || this.direction == 0)
							{
								this.direction = 1;
							}
						}
						if (num1088 > num1086)
						{
							if (this.direction == -1 && this.velocity.X > -num1084)
							{
								this.velocity.X = this.velocity.X - num1082;
								if (this.velocity.X > num1084)
								{
									this.velocity.X = this.velocity.X - num1082;
								}
								else if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X - num1082 / 2f;
								}
								if (this.velocity.X < -num1084)
								{
									this.velocity.X = -num1084;
								}
							}
							else if (this.direction == 1 && this.velocity.X < num1084)
							{
								this.velocity.X = this.velocity.X + num1082;
								if (this.velocity.X < -num1084)
								{
									this.velocity.X = this.velocity.X + num1082;
								}
								else if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X + num1082 / 2f;
								}
								if (this.velocity.X > num1084)
								{
									this.velocity.X = num1084;
								}
							}
						}
						if (num1088 > num1087)
						{
							num1089 -= num1087 / 2f;
						}
						if (this.position.Y < num1089)
						{
							this.velocity.Y = this.velocity.Y + num1083;
							if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y + num1083;
							}
						}
						else
						{
							this.velocity.Y = this.velocity.Y - num1083;
							if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y - num1083;
							}
						}
						if (this.velocity.Y < -num1085)
						{
							this.velocity.Y = -num1085;
						}
						if (this.velocity.Y > num1085)
						{
							this.velocity.Y = num1085;
						}
						if (this.wet)
						{
							if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.95f;
							}
							this.velocity.Y = this.velocity.Y - 0.5f;
							if (this.velocity.Y < -4f)
							{
								this.velocity.Y = -4f;
								return;
							}
						}
					}
					else if (this.aiStyle == 45)
					{
						NPC.golemBoss = this.whoAmI;
						if (this.localAI[0] == 0f && Main.netMode != 1)
						{
							this.localAI[0] = 1f;
							NPC.NewNPC((int)base.Center.X - 84, (int)base.Center.Y - 9, 247, 0, 0f, 0f, 0f, 0f, 255);
							NPC.NewNPC((int)base.Center.X + 78, (int)base.Center.Y - 9, 248, 0, 0f, 0f, 0f, 0f, 255);
							NPC.NewNPC((int)base.Center.X - 3, (int)base.Center.Y - 57, 246, 0, 0f, 0f, 0f, 0f, 255);
						}
						if (this.target >= 0 && Main.player[this.target].dead)
						{
							this.TargetClosest(true);
							if (Main.player[this.target].dead)
							{
								this.noTileCollide = true;
							}
						}
						if (this.alpha > 0)
						{
							this.alpha -= 10;
							if (this.alpha < 0)
							{
								this.alpha = 0;
							}
							this.ai[1] = 0f;
						}
						bool flag109 = false;
						bool flag110 = false;
						bool flag111 = false;
						this.dontTakeDamage = false;
						for (int num1091 = 0; num1091 < 200; num1091++)
						{
							if (Main.npc[num1091].active && Main.npc[num1091].type == 246)
							{
								flag109 = true;
							}
							if (Main.npc[num1091].active && Main.npc[num1091].type == 247)
							{
								flag110 = true;
							}
							if (Main.npc[num1091].active && Main.npc[num1091].type == 248)
							{
								flag111 = true;
							}
						}
						this.dontTakeDamage = flag109;
						if (!flag110)
						{
							int num1092 = Dust.NewDust(new Vector2(base.Center.X - 80f, base.Center.Y - 9f), 8, 8, 31, 0f, 0f, 100, default(Color), 1f);
							Main.dust[num1092].alpha += Main.rand.Next(100);
							Main.dust[num1092].velocity *= 0.2f;
							Dust expr_40062_cp_0 = Main.dust[num1092];
							expr_40062_cp_0.velocity.Y = expr_40062_cp_0.velocity.Y - (0.5f + (float)Main.rand.Next(10) * 0.1f);
							Main.dust[num1092].fadeIn = 0.5f + (float)Main.rand.Next(10) * 0.1f;
							if (Main.rand.Next(10) == 0)
							{
								num1092 = Dust.NewDust(new Vector2(base.Center.X - 80f, base.Center.Y - 9f), 8, 8, 6, 0f, 0f, 0, default(Color), 1f);
								if (Main.rand.Next(20) != 0)
								{
									Main.dust[num1092].noGravity = true;
									Main.dust[num1092].scale *= 1f + (float)Main.rand.Next(10) * 0.1f;
									Dust expr_4016D_cp_0 = Main.dust[num1092];
									expr_4016D_cp_0.velocity.Y = expr_4016D_cp_0.velocity.Y - 1f;
								}
							}
						}
						if (!flag111)
						{
							int num1093 = Dust.NewDust(new Vector2(base.Center.X + 62f, base.Center.Y - 9f), 8, 8, 31, 0f, 0f, 100, default(Color), 1f);
							Main.dust[num1093].alpha += Main.rand.Next(100);
							Main.dust[num1093].velocity *= 0.2f;
							Dust expr_4022A_cp_0 = Main.dust[num1093];
							expr_4022A_cp_0.velocity.Y = expr_4022A_cp_0.velocity.Y - (0.5f + (float)Main.rand.Next(10) * 0.1f);
							Main.dust[num1093].fadeIn = 0.5f + (float)Main.rand.Next(10) * 0.1f;
							if (Main.rand.Next(10) == 0)
							{
								num1093 = Dust.NewDust(new Vector2(base.Center.X + 62f, base.Center.Y - 9f), 8, 8, 6, 0f, 0f, 0, default(Color), 1f);
								if (Main.rand.Next(20) != 0)
								{
									Main.dust[num1093].noGravity = true;
									Main.dust[num1093].scale *= 1f + (float)Main.rand.Next(10) * 0.1f;
									Dust expr_40335_cp_0 = Main.dust[num1093];
									expr_40335_cp_0.velocity.Y = expr_40335_cp_0.velocity.Y - 1f;
								}
							}
						}
						if (this.ai[0] == 0f)
						{
							this.noTileCollide = false;
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.8f;
								this.ai[1] += 1f;
								if (this.ai[1] > 0f)
								{
									if (!flag110)
									{
										this.ai[1] += 2f;
									}
									if (!flag111)
									{
										this.ai[1] += 2f;
									}
									if (!flag109)
									{
										this.ai[1] += 2f;
									}
									if (this.life < this.lifeMax)
									{
										this.ai[1] += 1f;
									}
									if (this.life < this.lifeMax / 2)
									{
										this.ai[1] += 4f;
									}
									if (this.life < this.lifeMax / 3)
									{
										this.ai[1] += 8f;
									}
								}
								if (this.ai[1] >= 300f)
								{
									this.ai[1] = -20f;
									this.frameCounter = 0.0;
								}
								else if (this.ai[1] == -1f)
								{
									this.TargetClosest(true);
									this.velocity.X = (float)(4 * this.direction);
									this.velocity.Y = -12.1f;
									this.ai[0] = 1f;
									this.ai[1] = 0f;
								}
							}
						}
						else if (this.ai[0] == 1f)
						{
							if (this.velocity.Y == 0f)
							{
								Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
								this.ai[0] = 0f;
								for (int num1094 = (int)this.position.X - 20; num1094 < (int)this.position.X + this.width + 40; num1094 += 20)
								{
									for (int num1095 = 0; num1095 < 4; num1095++)
									{
										int num1096 = Dust.NewDust(new Vector2(this.position.X - 20f, this.position.Y + (float)this.height), this.width + 20, 4, 31, 0f, 0f, 100, default(Color), 1.5f);
										Main.dust[num1096].velocity *= 0.2f;
									}
									int num1097 = Gore.NewGore(new Vector2((float)(num1094 - 20), this.position.Y + (float)this.height - 8f), default(Vector2), Main.rand.Next(61, 64), 1f);
									Main.gore[num1097].velocity *= 0.4f;
								}
							}
							else
							{
								this.TargetClosest(true);
								if (this.position.X < Main.player[this.target].position.X && this.position.X + (float)this.width > Main.player[this.target].position.X + (float)Main.player[this.target].width)
								{
									this.velocity.X = this.velocity.X * 0.9f;
									this.velocity.Y = this.velocity.Y + 0.2f;
								}
								else
								{
									if (this.direction < 0)
									{
										this.velocity.X = this.velocity.X - 0.2f;
									}
									else if (this.direction > 0)
									{
										this.velocity.X = this.velocity.X + 0.2f;
									}
									float num1098 = 3f;
									if (this.life < this.lifeMax)
									{
										num1098 += 1f;
									}
									if (this.life < this.lifeMax / 2)
									{
										num1098 += 1f;
									}
									if (this.life < this.lifeMax / 4)
									{
										num1098 += 1f;
									}
									if (this.velocity.X < -num1098)
									{
										this.velocity.X = -num1098;
									}
									if (this.velocity.X > num1098)
									{
										this.velocity.X = num1098;
									}
								}
							}
						}
						if (this.target <= 0 || this.target == 255 || Main.player[this.target].dead)
						{
							this.TargetClosest(true);
						}
						int num1099 = 3000;
						if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) + Math.Abs(base.Center.Y - Main.player[this.target].Center.Y) > (float)num1099)
						{
							this.TargetClosest(true);
							if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) + Math.Abs(base.Center.Y - Main.player[this.target].Center.Y) > (float)num1099)
							{
								this.active = false;
								return;
							}
						}
					}
					else if (this.aiStyle == 46)
					{
						this.noTileCollide = true;
						if (NPC.golemBoss < 0)
						{
							this.StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
							return;
						}
						float num1100 = 12f;
						Vector2 vector125 = new Vector2(base.Center.X, base.Center.Y);
						float num1101 = Main.npc[NPC.golemBoss].Center.X - vector125.X;
						float num1102 = Main.npc[NPC.golemBoss].Center.Y - vector125.Y;
						num1102 -= 57f;
						num1101 -= 3f;
						float num1103 = (float)Math.Sqrt((double)(num1101 * num1101 + num1102 * num1102));
						if (num1103 < 20f)
						{
							this.rotation = 0f;
							this.velocity.X = num1101;
							this.velocity.Y = num1102;
						}
						else
						{
							num1103 = num1100 / num1103;
							this.velocity.X = num1101 * num1103;
							this.velocity.Y = num1102 * num1103;
							this.rotation = this.velocity.X * 0.1f;
						}
						if (this.alpha > 0)
						{
							this.alpha -= 10;
							if (this.alpha < 0)
							{
								this.alpha = 0;
							}
							this.ai[1] = 30f;
						}
						if (this.ai[0] == 0f)
						{
							this.ai[1] += 1f;
							int num1104 = 300;
							if (this.ai[1] < 20f || this.ai[1] > (float)(num1104 - 20))
							{
								this.localAI[0] = 1f;
							}
							else
							{
								this.localAI[0] = 0f;
							}
							if (this.ai[1] >= (float)num1104)
							{
								this.TargetClosest(true);
								this.ai[1] = 0f;
								Vector2 vector126 = new Vector2(base.Center.X, base.Center.Y + 10f);
								float num1105 = 8f;
								float num1106 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector126.X;
								float num1107 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector126.Y;
								float num1108 = (float)Math.Sqrt((double)(num1106 * num1106 + num1107 * num1107));
								num1108 = num1105 / num1108;
								num1106 *= num1108;
								num1107 *= num1108;
								int num1109 = 18;
								int num1110 = 258;
								if (Main.netMode != 1)
								{
									Projectile.NewProjectile(vector126.X, vector126.Y, num1106, num1107, num1110, num1109, 0f, Main.myPlayer, 0f, 0f);
								}
							}
						}
						else if (this.ai[0] == 1f)
						{
							this.TargetClosest(true);
							Vector2 vector127 = new Vector2(base.Center.X, base.Center.Y + 10f);
							if (Main.player[this.target].Center.X < base.Center.X - (float)this.width)
							{
								this.localAI[1] = -1f;
								vector127.X -= 40f;
							}
							else if (Main.player[this.target].Center.X > base.Center.X + (float)this.width)
							{
								this.localAI[1] = 1f;
								vector127.X += 40f;
							}
							else
							{
								this.localAI[1] = 0f;
							}
							this.ai[1] += 1f;
							if ((double)this.life < (double)this.lifeMax * 0.4)
							{
								this.ai[1] += 1f;
							}
							if ((double)this.life < (double)this.lifeMax * 0.2)
							{
								this.ai[1] += 1f;
							}
							int num1111 = 300;
							if (this.ai[1] < 20f || this.ai[1] > (float)(num1111 - 20))
							{
								this.localAI[0] = 1f;
							}
							else
							{
								this.localAI[0] = 0f;
							}
							if (this.ai[1] >= (float)num1111)
							{
								this.TargetClosest(true);
								this.ai[1] = 0f;
								float num1112 = 8f;
								float num1113 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector127.X;
								float num1114 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector127.Y;
								float num1115 = (float)Math.Sqrt((double)(num1113 * num1113 + num1114 * num1114));
								num1115 = num1112 / num1115;
								num1113 *= num1115;
								num1114 *= num1115;
								int num1116 = 24;
								int num1117 = 258;
								if (Main.netMode != 1)
								{
									Projectile.NewProjectile(vector127.X, vector127.Y, num1113, num1114, num1117, num1116, 0f, Main.myPlayer, 0f, 0f);
								}
							}
							this.ai[2] += 1f;
							if (this.life < this.lifeMax / 3)
							{
								this.ai[2] += 1f;
							}
							if (this.life < this.lifeMax / 4)
							{
								this.ai[2] += 1f;
							}
							if (this.life < this.lifeMax / 5)
							{
								this.ai[2] += 1f;
							}
							if (!Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
							{
								this.ai[2] += 4f;
							}
							if (this.ai[2] > (float)(60 + Main.rand.Next(600)))
							{
								this.ai[2] = 0f;
								int num1118 = 28;
								int num1119 = 259;
								if (this.localAI[1] == 0f)
								{
									for (int num1120 = 0; num1120 < 2; num1120++)
									{
										vector127 = new Vector2(base.Center.X, base.Center.Y - 22f);
										if (num1120 == 0)
										{
											vector127.X -= 18f;
										}
										else
										{
											vector127.X += 18f;
										}
										float num1121 = 11f;
										float num1122 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector127.X;
										float num1123 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector127.Y;
										float num1124 = (float)Math.Sqrt((double)(num1122 * num1122 + num1123 * num1123));
										num1124 = num1121 / num1124;
										num1122 *= num1124;
										num1123 *= num1124;
										vector127.X += num1122 * 3f;
										vector127.Y += num1123 * 3f;
										if (Main.netMode != 1)
										{
											int num1125 = Projectile.NewProjectile(vector127.X, vector127.Y, num1122, num1123, num1119, num1118, 0f, Main.myPlayer, 0f, 0f);
											Main.projectile[num1125].timeLeft = 300;
										}
									}
								}
								else if (this.localAI[1] != 0f)
								{
									vector127 = new Vector2(base.Center.X, base.Center.Y - 22f);
									if (this.localAI[1] == -1f)
									{
										vector127.X -= 30f;
									}
									else if (this.localAI[1] == 1f)
									{
										vector127.X += 30f;
									}
									float num1126 = 12f;
									float num1127 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector127.X;
									float num1128 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector127.Y;
									float num1129 = (float)Math.Sqrt((double)(num1127 * num1127 + num1128 * num1128));
									num1129 = num1126 / num1129;
									num1127 *= num1129;
									num1128 *= num1129;
									vector127.X += num1127 * 3f;
									vector127.Y += num1128 * 3f;
									if (Main.netMode != 1)
									{
										int num1130 = Projectile.NewProjectile(vector127.X, vector127.Y, num1127, num1128, num1119, num1118, 0f, Main.myPlayer, 0f, 0f);
										Main.projectile[num1130].timeLeft = 300;
									}
								}
							}
						}
						if (this.life < this.lifeMax / 2)
						{
							this.ai[0] = 1f;
							return;
						}
						this.ai[0] = 0f;
						return;
					}
					else if (this.aiStyle == 47)
					{
						if (NPC.golemBoss < 0)
						{
							this.StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
							return;
						}
						if (this.alpha > 0)
						{
							this.alpha -= 10;
							if (this.alpha < 0)
							{
								this.alpha = 0;
							}
							this.ai[1] = 0f;
						}
						if (this.ai[0] == 0f)
						{
							this.noTileCollide = true;
							float num1131 = 14f;
							if (this.life < this.lifeMax / 2)
							{
								num1131 += 3f;
							}
							if (this.life < this.lifeMax / 4)
							{
								num1131 += 3f;
							}
							if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax)
							{
								num1131 += 8f;
							}
							Vector2 vector128 = new Vector2(base.Center.X, base.Center.Y);
							float num1132 = Main.npc[NPC.golemBoss].Center.X - vector128.X;
							float num1133 = Main.npc[NPC.golemBoss].Center.Y - vector128.Y;
							num1133 -= 9f;
							if (this.type == 247)
							{
								num1132 -= 84f;
							}
							else
							{
								num1132 += 78f;
							}
							float num1134 = (float)Math.Sqrt((double)(num1132 * num1132 + num1133 * num1133));
							if (num1134 < 12f + num1131)
							{
								this.rotation = 0f;
								this.velocity.X = num1132;
								this.velocity.Y = num1133;
								this.ai[1] += 1f;
								if (this.life < this.lifeMax / 2)
								{
									this.ai[1] += 1f;
								}
								if (this.life < this.lifeMax / 4)
								{
									this.ai[1] += 1f;
								}
								if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax)
								{
									this.ai[1] += 10f;
								}
								if (this.ai[1] >= 60f)
								{
									this.TargetClosest(true);
									if ((this.type == 247 && base.Center.X + 100f > Main.player[this.target].Center.X) || (this.type == 248 && base.Center.X - 100f < Main.player[this.target].Center.X))
									{
										this.ai[1] = 0f;
										this.ai[0] = 1f;
										return;
									}
									this.ai[1] = 0f;
									return;
								}
							}
							else
							{
								num1134 = num1131 / num1134;
								this.velocity.X = num1132 * num1134;
								this.velocity.Y = num1133 * num1134;
								this.rotation = (float)Math.Atan2((double)(-(double)this.velocity.Y), (double)(-(double)this.velocity.X));
								if (this.type == 247)
								{
									this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
									return;
								}
							}
						}
						else if (this.ai[0] == 1f)
						{
							this.noTileCollide = true;
							this.collideX = false;
							this.collideY = false;
							float num1135 = 12f;
							if (this.life < this.lifeMax / 2)
							{
								num1135 += 4f;
							}
							if (this.life < this.lifeMax / 4)
							{
								num1135 += 4f;
							}
							if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax)
							{
								num1135 += 10f;
							}
							Vector2 vector129 = new Vector2(base.Center.X, base.Center.Y);
							float num1136 = Main.player[this.target].Center.X - vector129.X;
							float num1137 = Main.player[this.target].Center.Y - vector129.Y;
							float num1138 = (float)Math.Sqrt((double)(num1136 * num1136 + num1137 * num1137));
							num1138 = num1135 / num1138;
							this.velocity.X = num1136 * num1138;
							this.velocity.Y = num1137 * num1138;
							this.ai[0] = 2f;
							this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
							if (this.type == 247)
							{
								this.rotation = (float)Math.Atan2((double)(-(double)this.velocity.Y), (double)(-(double)this.velocity.X));
								return;
							}
						}
						else if (this.ai[0] == 2f)
						{
							if (Math.Abs(this.velocity.X) > Math.Abs(this.velocity.Y))
							{
								if (this.velocity.X > 0f && base.Center.X > Main.player[this.target].Center.X)
								{
									this.noTileCollide = false;
								}
								if (this.velocity.X < 0f && base.Center.X < Main.player[this.target].Center.X)
								{
									this.noTileCollide = false;
								}
							}
							else
							{
								if (this.velocity.Y > 0f && base.Center.Y > Main.player[this.target].Center.Y)
								{
									this.noTileCollide = false;
								}
								if (this.velocity.Y < 0f && base.Center.Y < Main.player[this.target].Center.Y)
								{
									this.noTileCollide = false;
								}
							}
							Vector2 vector130 = new Vector2(base.Center.X, base.Center.Y);
							float num1139 = Main.npc[NPC.golemBoss].Center.X - vector130.X;
							float num1140 = Main.npc[NPC.golemBoss].Center.Y - vector130.Y;
							num1139 += Main.npc[NPC.golemBoss].velocity.X;
							num1140 += Main.npc[NPC.golemBoss].velocity.Y;
							num1140 -= 9f;
							if (this.type == 247)
							{
								num1139 -= 84f;
							}
							else
							{
								num1139 += 78f;
							}
							float num1141 = (float)Math.Sqrt((double)(num1139 * num1139 + num1140 * num1140));
							if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax)
							{
								this.knockBackResist = 0f;
								if (num1141 > 700f || this.collideX || this.collideY)
								{
									this.noTileCollide = true;
									this.ai[0] = 0f;
									return;
								}
							}
							else
							{
								bool flag112 = this.justHit;
								if (flag112)
								{
									int num1142 = 0;
									while (num1142 < 200)
									{
										if (Main.npc[num1142].active && Main.npc[num1142].type == 246)
										{
											if (Main.npc[num1142].life < Main.npc[num1142].lifeMax / 2)
											{
												if (this.knockBackResist == 0f)
												{
													flag112 = false;
												}
												this.knockBackResist = 0f;
												break;
											}
											break;
										}
										else
										{
											num1142++;
										}
									}
								}
								if (num1141 > 600f || this.collideX || this.collideY || flag112)
								{
									this.noTileCollide = true;
									this.ai[0] = 0f;
									return;
								}
							}
						}
						else if (this.ai[0] == 3f)
						{
							this.noTileCollide = true;
							float num1143 = 12f;
							float num1144 = 0.4f;
							Vector2 vector131 = new Vector2(base.Center.X, base.Center.Y);
							float num1145 = Main.player[this.target].Center.X - vector131.X;
							float num1146 = Main.player[this.target].Center.Y - vector131.Y;
							float num1147 = (float)Math.Sqrt((double)(num1145 * num1145 + num1146 * num1146));
							num1147 = num1143 / num1147;
							num1145 *= num1147;
							num1146 *= num1147;
							if (this.velocity.X < num1145)
							{
								this.velocity.X = this.velocity.X + num1144;
								if (this.velocity.X < 0f && num1145 > 0f)
								{
									this.velocity.X = this.velocity.X + num1144 * 2f;
								}
							}
							else if (this.velocity.X > num1145)
							{
								this.velocity.X = this.velocity.X - num1144;
								if (this.velocity.X > 0f && num1145 < 0f)
								{
									this.velocity.X = this.velocity.X - num1144 * 2f;
								}
							}
							if (this.velocity.Y < num1146)
							{
								this.velocity.Y = this.velocity.Y + num1144;
								if (this.velocity.Y < 0f && num1146 > 0f)
								{
									this.velocity.Y = this.velocity.Y + num1144 * 2f;
								}
							}
							else if (this.velocity.Y > num1146)
							{
								this.velocity.Y = this.velocity.Y - num1144;
								if (this.velocity.Y > 0f && num1146 < 0f)
								{
									this.velocity.Y = this.velocity.Y - num1144 * 2f;
								}
							}
							this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
							if (this.type == 247)
							{
								this.rotation = (float)Math.Atan2((double)(-(double)this.velocity.Y), (double)(-(double)this.velocity.X));
								return;
							}
						}
					}
					else if (this.aiStyle == 48)
					{
						bool flag113 = false;
						if (!Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
						{
							this.noTileCollide = true;
							flag113 = true;
						}
						else
						{
							this.noTileCollide = false;
						}
						if (NPC.golemBoss < 0)
						{
							this.StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
							return;
						}
						this.TargetClosest(true);
						float num1148 = 7f;
						float num1149 = 0.05f;
						Vector2 vector132 = new Vector2(base.Center.X, base.Center.Y);
						float num1150 = Main.player[this.target].Center.X - vector132.X;
						float num1151 = Main.player[this.target].Center.Y - vector132.Y - 300f;
						float num1152 = (float)Math.Sqrt((double)(num1150 * num1150 + num1151 * num1151));
						num1152 = num1148 / num1152;
						num1150 *= num1152;
						num1151 *= num1152;
						if (this.velocity.X < num1150)
						{
							this.velocity.X = this.velocity.X + num1149;
							if (this.velocity.X < 0f && num1150 > 0f)
							{
								this.velocity.X = this.velocity.X + num1149;
							}
						}
						else if (this.velocity.X > num1150)
						{
							this.velocity.X = this.velocity.X - num1149;
							if (this.velocity.X > 0f && num1150 < 0f)
							{
								this.velocity.X = this.velocity.X - num1149;
							}
						}
						if (this.velocity.Y < num1151)
						{
							this.velocity.Y = this.velocity.Y + num1149;
							if (this.velocity.Y < 0f && num1151 > 0f)
							{
								this.velocity.Y = this.velocity.Y + num1149;
							}
						}
						else if (this.velocity.Y > num1151)
						{
							this.velocity.Y = this.velocity.Y - num1149;
							if (this.velocity.Y > 0f && num1151 < 0f)
							{
								this.velocity.Y = this.velocity.Y - num1149;
							}
						}
						this.ai[1] += 1f;
						if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.8)
						{
							this.ai[1] += 1f;
						}
						if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.6)
						{
							this.ai[1] += 1f;
						}
						if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.2)
						{
							this.ai[1] += 1f;
						}
						if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.1)
						{
							this.ai[1] += 1f;
						}
						int num1153 = 360;
						if (this.ai[1] < 20f || this.ai[1] > (float)(num1153 - 20))
						{
							this.localAI[0] = 1f;
						}
						else
						{
							this.localAI[0] = 0f;
						}
						if (flag113)
						{
							this.ai[1] = 20f;
						}
						if (this.ai[1] >= (float)num1153)
						{
							this.TargetClosest(true);
							this.ai[1] = 0f;
							Vector2 vector133 = new Vector2(base.Center.X, base.Center.Y - 10f);
							float num1154 = 8f;
							int num1155 = 20;
							int num1156 = 258;
							float num1157 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector133.X;
							float num1158 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector133.Y;
							float num1159 = (float)Math.Sqrt((double)(num1157 * num1157 + num1158 * num1158));
							num1159 = num1154 / num1159;
							num1157 *= num1159;
							num1158 *= num1159;
							if (Main.netMode != 1)
							{
								Projectile.NewProjectile(vector133.X, vector133.Y, num1157, num1158, num1156, num1155, 0f, Main.myPlayer, 0f, 0f);
							}
						}
						this.ai[2] += 1f;
						if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax / 1.25)
						{
							this.ai[2] += 1f;
						}
						if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax / 1.5)
						{
							this.ai[2] += 1f;
						}
						if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 2)
						{
							this.ai[2] += 1f;
						}
						if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 3)
						{
							this.ai[2] += 1f;
						}
						if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 4)
						{
							this.ai[2] += 1f;
						}
						if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 5)
						{
							this.ai[2] += 1f;
						}
						if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 6)
						{
							this.ai[2] += 1f;
						}
						if (!Collision.CanHit(Main.npc[NPC.golemBoss].Center, 1, 1, Main.player[this.target].Center, 1, 1))
						{
							this.ai[2] += 4f;
						}
						if (this.ai[2] > (float)(100 + Main.rand.Next(4800)))
						{
							this.ai[2] = 0f;
							for (int num1160 = 0; num1160 < 2; num1160++)
							{
								Vector2 vector134 = new Vector2(base.Center.X, base.Center.Y - 50f);
								if (num1160 == 0)
								{
									vector134.X -= 14f;
								}
								else if (num1160 == 1)
								{
									vector134.X += 14f;
								}
								float num1161 = 11f;
								int num1162 = 24;
								int num1163 = 259;
								if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.5)
								{
									num1162++;
									num1161 += 0.25f;
								}
								if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.4)
								{
									num1162++;
									num1161 += 0.25f;
								}
								if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.3)
								{
									num1162++;
									num1161 += 0.25f;
								}
								if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.2)
								{
									num1162++;
									num1161 += 0.25f;
								}
								if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.1)
								{
									num1162++;
									num1161 += 0.25f;
								}
								float num1164 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector134.X;
								float num1165 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector134.Y;
								float num1166 = (float)Math.Sqrt((double)(num1164 * num1164 + num1165 * num1165));
								num1166 = num1161 / num1166;
								num1164 *= num1166;
								num1165 *= num1166;
								vector134.X += num1164 * 3f;
								vector134.Y += num1165 * 3f;
								if (Main.netMode != 1)
								{
									int num1167 = Projectile.NewProjectile(vector134.X, vector134.Y, num1164, num1165, num1163, num1162, 0f, Main.myPlayer, 0f, 0f);
									Main.projectile[num1167].timeLeft = 300;
								}
							}
							return;
						}
					}
					else if (this.aiStyle == 49)
					{
						this.noGravity = true;
						this.TargetClosest(true);
						float num1168 = 4f;
						float num1169 = 0.25f;
						Vector2 vector135 = new Vector2(base.Center.X, base.Center.Y);
						float num1170 = Main.player[this.target].Center.X - vector135.X;
						float num1171 = Main.player[this.target].Center.Y - vector135.Y - 200f;
						float num1172 = (float)Math.Sqrt((double)(num1170 * num1170 + num1171 * num1171));
						if (num1172 < 20f)
						{
							num1170 = this.velocity.X;
							num1171 = this.velocity.Y;
						}
						else
						{
							num1172 = num1168 / num1172;
							num1170 *= num1172;
							num1171 *= num1172;
						}
						if (this.velocity.X < num1170)
						{
							this.velocity.X = this.velocity.X + num1169;
							if (this.velocity.X < 0f && num1170 > 0f)
							{
								this.velocity.X = this.velocity.X + num1169 * 2f;
							}
						}
						else if (this.velocity.X > num1170)
						{
							this.velocity.X = this.velocity.X - num1169;
							if (this.velocity.X > 0f && num1170 < 0f)
							{
								this.velocity.X = this.velocity.X - num1169 * 2f;
							}
						}
						if (this.velocity.Y < num1171)
						{
							this.velocity.Y = this.velocity.Y + num1169;
							if (this.velocity.Y < 0f && num1171 > 0f)
							{
								this.velocity.Y = this.velocity.Y + num1169 * 2f;
							}
						}
						else if (this.velocity.Y > num1171)
						{
							this.velocity.Y = this.velocity.Y - num1169;
							if (this.velocity.Y > 0f && num1171 < 0f)
							{
								this.velocity.Y = this.velocity.Y - num1169 * 2f;
							}
						}
						if (this.position.X + (float)this.width > Main.player[this.target].position.X && this.position.X < Main.player[this.target].position.X + (float)Main.player[this.target].width && this.position.Y + (float)this.height < Main.player[this.target].position.Y && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && Main.netMode != 1)
						{
							this.ai[0] += 1f;
							if (this.ai[0] > 8f)
							{
								this.ai[0] = 0f;
								int num1173 = (int)(this.position.X + 10f + (float)Main.rand.Next(this.width - 20));
								int num1174 = (int)(this.position.Y + (float)this.height + 4f);
								Projectile.NewProjectile((float)num1173, (float)num1174, 0f, 5f, 264, 20, 0f, Main.myPlayer, 0f, 0f);
								return;
							}
						}
					}
					else
					{
						if (this.aiStyle == 50)
						{
							if (this.timeLeft > 5)
							{
								this.timeLeft = 5;
							}
							this.noTileCollide = true;
							this.velocity.Y = this.velocity.Y + 0.02f;
							if (this.velocity.Y < 0f && !Main.expertMode)
							{
								this.velocity.Y = this.velocity.Y * 0.99f;
							}
							if (this.velocity.Y > 1f)
							{
								this.velocity.Y = 1f;
							}
							this.TargetClosest(true);
							if (this.position.X + (float)this.width < Main.player[this.target].position.X)
							{
								if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X * 0.98f;
								}
								if (Main.expertMode && this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X * 0.98f;
								}
								this.velocity.X = this.velocity.X + 0.1f;
								if (Main.expertMode)
								{
									this.velocity.X = this.velocity.X + 0.1f;
								}
							}
							else if (this.position.X > Main.player[this.target].position.X + (float)Main.player[this.target].width)
							{
								if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X * 0.98f;
								}
								if (Main.expertMode && this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X * 0.98f;
								}
								this.velocity.X = this.velocity.X - 0.1f;
								if (Main.expertMode)
								{
									this.velocity.X = this.velocity.X + 0.1f;
								}
							}
							if (this.velocity.X > 5f || this.velocity.X < -5f)
							{
								this.velocity.X = this.velocity.X * 0.97f;
							}
							this.rotation = this.velocity.X * 0.2f;
							return;
						}
						if (this.aiStyle == 51)
						{
							bool flag114 = false;
							bool flag115 = false;
							this.TargetClosest(true);
							if (Main.player[this.target].dead)
							{
								flag115 = true;
								flag114 = true;
							}
							if (Main.netMode != 1)
							{
								int num1175 = 6000;
								if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) + Math.Abs(base.Center.Y - Main.player[this.target].Center.Y) > (float)num1175)
								{
									this.active = false;
									this.life = 0;
									if (Main.netMode == 2)
									{
										NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
									}
								}
							}
							NPC.plantBoss = this.whoAmI;
							if (this.localAI[0] == 0f && Main.netMode != 1)
							{
								this.localAI[0] = 1f;
								NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 263, this.whoAmI, 0f, 0f, 0f, 0f, 255);
								NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 263, this.whoAmI, 0f, 0f, 0f, 0f, 255);
								NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 263, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							}
							int[] array3 = new int[3];
							float num1176 = 0f;
							float num1177 = 0f;
							int num1178 = 0;
							for (int num1179 = 0; num1179 < 200; num1179++)
							{
								if (Main.npc[num1179].active && Main.npc[num1179].aiStyle == 52)
								{
									num1176 += Main.npc[num1179].Center.X;
									num1177 += Main.npc[num1179].Center.Y;
									array3[num1178] = num1179;
									num1178++;
									if (num1178 > 2)
									{
										break;
									}
								}
							}
							num1176 /= (float)num1178;
							num1177 /= (float)num1178;
							float num1180 = 2.5f;
							float num1181 = 0.025f;
							if (this.life < this.lifeMax / 2)
							{
								num1180 = 5f;
								num1181 = 0.05f;
							}
							if (this.life < this.lifeMax / 4)
							{
								num1180 = 7f;
							}
							if (!Main.player[this.target].ZoneJungle || (double)Main.player[this.target].position.Y < Main.worldSurface * 16.0 || Main.player[this.target].position.Y > (float)((Main.maxTilesY - 200) * 16))
							{
								flag114 = true;
								num1180 += 8f;
								num1181 = 0.15f;
							}
							if (Main.expertMode)
							{
								num1180 += 1f;
								num1180 *= 1.1f;
								num1181 += 0.01f;
								num1181 *= 1.1f;
							}
							Vector2 vector136 = new Vector2(num1176, num1177);
							float num1182 = Main.player[this.target].Center.X - vector136.X;
							float num1183 = Main.player[this.target].Center.Y - vector136.Y;
							if (flag115)
							{
								num1183 *= -1f;
								num1182 *= -1f;
								num1180 += 8f;
							}
							float num1184 = (float)Math.Sqrt((double)(num1182 * num1182 + num1183 * num1183));
							int num1185 = 500;
							if (flag114)
							{
								num1185 += 350;
							}
							if (Main.expertMode)
							{
								num1185 += 150;
							}
							if (num1184 >= (float)num1185)
							{
								num1184 = (float)num1185 / num1184;
								num1182 *= num1184;
								num1183 *= num1184;
							}
							num1176 += num1182;
							num1177 += num1183;
							vector136 = new Vector2(base.Center.X, base.Center.Y);
							num1182 = num1176 - vector136.X;
							num1183 = num1177 - vector136.Y;
							num1184 = (float)Math.Sqrt((double)(num1182 * num1182 + num1183 * num1183));
							if (num1184 < num1180)
							{
								num1182 = this.velocity.X;
								num1183 = this.velocity.Y;
							}
							else
							{
								num1184 = num1180 / num1184;
								num1182 *= num1184;
								num1183 *= num1184;
							}
							if (this.velocity.X < num1182)
							{
								this.velocity.X = this.velocity.X + num1181;
								if (this.velocity.X < 0f && num1182 > 0f)
								{
									this.velocity.X = this.velocity.X + num1181 * 2f;
								}
							}
							else if (this.velocity.X > num1182)
							{
								this.velocity.X = this.velocity.X - num1181;
								if (this.velocity.X > 0f && num1182 < 0f)
								{
									this.velocity.X = this.velocity.X - num1181 * 2f;
								}
							}
							if (this.velocity.Y < num1183)
							{
								this.velocity.Y = this.velocity.Y + num1181;
								if (this.velocity.Y < 0f && num1183 > 0f)
								{
									this.velocity.Y = this.velocity.Y + num1181 * 2f;
								}
							}
							else if (this.velocity.Y > num1183)
							{
								this.velocity.Y = this.velocity.Y - num1181;
								if (this.velocity.Y > 0f && num1183 < 0f)
								{
									this.velocity.Y = this.velocity.Y - num1181 * 2f;
								}
							}
							Vector2 vector137 = new Vector2(base.Center.X, base.Center.Y);
							float num1186 = Main.player[this.target].Center.X - vector137.X;
							float num1187 = Main.player[this.target].Center.Y - vector137.Y;
							this.rotation = (float)Math.Atan2((double)num1187, (double)num1186) + 1.57f;
							if (this.life > this.lifeMax / 2)
							{
								this.defense = 36;
								this.damage = (int)(50f * Main.damageMultiplier);
								if (flag114)
								{
									this.defense *= 2;
									this.damage *= 2;
								}
								if (Main.netMode != 1)
								{
									this.localAI[1] += 1f;
									if ((double)this.life < (double)this.lifeMax * 0.9)
									{
										this.localAI[1] += 1f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.8)
									{
										this.localAI[1] += 1f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.7)
									{
										this.localAI[1] += 1f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.6)
									{
										this.localAI[1] += 1f;
									}
									if (flag114)
									{
										this.localAI[1] += 3f;
									}
									if (Main.expertMode)
									{
										this.localAI[1] += 1f;
									}
									if (Main.expertMode && this.justHit && Main.rand.Next(2) == 0)
									{
										this.localAI[3] = 1f;
									}
									if (this.localAI[1] > 80f)
									{
										this.localAI[1] = 0f;
										bool flag116 = Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height);
										if (this.localAI[3] > 0f)
										{
											flag116 = true;
											this.localAI[3] = 0f;
										}
										if (flag116)
										{
											Vector2 vector138 = new Vector2(base.Center.X, base.Center.Y);
											float num1188 = 15f;
											if (Main.expertMode)
											{
												num1188 = 17f;
											}
											float num1189 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector138.X;
											float num1190 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector138.Y;
											float num1191 = (float)Math.Sqrt((double)(num1189 * num1189 + num1190 * num1190));
											num1191 = num1188 / num1191;
											num1189 *= num1191;
											num1190 *= num1191;
											int num1192 = 22;
											int num1193 = 275;
											int maxValue8 = 4;
											int maxValue9 = 8;
											if (Main.expertMode)
											{
												maxValue8 = 2;
												maxValue9 = 6;
											}
											if ((double)this.life < (double)this.lifeMax * 0.8 && Main.rand.Next(maxValue8) == 0)
											{
												num1192 = 27;
												this.localAI[1] = -30f;
												num1193 = 276;
											}
											else if ((double)this.life < (double)this.lifeMax * 0.8 && Main.rand.Next(maxValue9) == 0)
											{
												num1192 = 31;
												this.localAI[1] = -120f;
												num1193 = 277;
											}
											if (flag114)
											{
												num1192 *= 2;
											}
											if (Main.expertMode)
											{
												num1192 = (int)((double)num1192 * 0.9);
											}
											vector138.X += num1189 * 3f;
											vector138.Y += num1190 * 3f;
											int num1194 = Projectile.NewProjectile(vector138.X, vector138.Y, num1189, num1190, num1193, num1192, 0f, Main.myPlayer, 0f, 0f);
											if (num1193 != 277)
											{
												Main.projectile[num1194].timeLeft = 300;
												return;
											}
										}
									}
								}
							}
							else
							{
								this.defense = 10;
								this.damage = (int)(70f * Main.damageMultiplier);
								if (flag114)
								{
									this.defense *= 4;
									this.damage *= 2;
								}
								if (Main.netMode != 1)
								{
									if (this.localAI[0] == 1f)
									{
										this.localAI[0] = 2f;
										for (int num1195 = 0; num1195 < 8; num1195++)
										{
											NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 264, this.whoAmI, 0f, 0f, 0f, 0f, 255);
										}
										if (Main.expertMode)
										{
											for (int num1196 = 0; num1196 < 200; num1196++)
											{
												if (Main.npc[num1196].active && Main.npc[num1196].aiStyle == 52)
												{
													for (int num1197 = 0; num1197 < 3; num1197++)
													{
														int num1198 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 264, this.whoAmI, 0f, 0f, 0f, 0f, 255);
														Main.npc[num1198].ai[3] = (float)(num1196 + 1);
													}
												}
											}
										}
									}
									else if (Main.expertMode && Main.rand.Next(60) == 0)
									{
										int num1199 = 0;
										for (int num1200 = 0; num1200 < 200; num1200++)
										{
											if (Main.npc[num1200].active && Main.npc[num1200].type == 264 && Main.npc[num1200].ai[3] == 0f)
											{
												num1199++;
											}
										}
										if (num1199 < 8 && Main.rand.Next((num1199 + 1) * 10) <= 1)
										{
											NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 264, this.whoAmI, 0f, 0f, 0f, 0f, 255);
										}
									}
								}
								if (this.localAI[2] == 0f)
								{
									Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 378, this.scale);
									Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 379, this.scale);
									Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 380, this.scale);
									this.localAI[2] = 1f;
								}
								this.localAI[1] += 1f;
								if ((double)this.life < (double)this.lifeMax * 0.4)
								{
									this.localAI[1] += 1f;
								}
								if ((double)this.life < (double)this.lifeMax * 0.3)
								{
									this.localAI[1] += 1f;
								}
								if ((double)this.life < (double)this.lifeMax * 0.2)
								{
									this.localAI[1] += 1f;
								}
								if ((double)this.life < (double)this.lifeMax * 0.1)
								{
									this.localAI[1] += 1f;
								}
								if (this.localAI[1] >= 350f)
								{
									float num1201 = 8f;
									Vector2 vector139 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num1202 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector139.X + (float)Main.rand.Next(-10, 11);
									float num1203 = Math.Abs(num1202 * 0.2f);
									float num1204 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector139.Y + (float)Main.rand.Next(-10, 11);
									if (num1204 > 0f)
									{
										num1203 = 0f;
									}
									num1204 -= num1203;
									float num1205 = (float)Math.Sqrt((double)(num1202 * num1202 + num1204 * num1204));
									num1205 = num1201 / num1205;
									num1202 *= num1205;
									num1204 *= num1205;
									int num1206 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 265, 0, 0f, 0f, 0f, 0f, 255);
									Main.npc[num1206].velocity.X = num1202;
									Main.npc[num1206].velocity.Y = num1204;
									Main.npc[num1206].netUpdate = true;
									this.localAI[1] = 0f;
									return;
								}
							}
						}
						else if (this.aiStyle == 52)
						{
							bool flag117 = false;
							bool flag118 = false;
							if (NPC.plantBoss < 0)
							{
								this.StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
								this.netUpdate = true;
								return;
							}
							if (Main.player[Main.npc[NPC.plantBoss].target].dead)
							{
								flag118 = true;
							}
							if ((NPC.plantBoss != -1 && !Main.player[Main.npc[NPC.plantBoss].target].ZoneJungle) || (double)Main.player[Main.npc[NPC.plantBoss].target].position.Y < Main.worldSurface * 16.0 || Main.player[Main.npc[NPC.plantBoss].target].position.Y > (float)((Main.maxTilesY - 200) * 16) || flag118)
							{
								this.localAI[0] -= 4f;
								flag117 = true;
							}
							if (Main.netMode == 1)
							{
								if (this.ai[0] == 0f)
								{
									this.ai[0] = (float)((int)(base.Center.X / 16f));
								}
								if (this.ai[1] == 0f)
								{
									this.ai[1] = (float)((int)(base.Center.X / 16f));
								}
							}
							if (Main.netMode != 1)
							{
								if (this.ai[0] == 0f || this.ai[1] == 0f)
								{
									this.localAI[0] = 0f;
								}
								this.localAI[0] -= 1f;
								if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2)
								{
									this.localAI[0] -= 2f;
								}
								if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 4)
								{
									this.localAI[0] -= 2f;
								}
								if (flag117)
								{
									this.localAI[0] -= 6f;
								}
								if (!flag118 && this.localAI[0] <= 0f && this.ai[0] != 0f)
								{
									for (int num1207 = 0; num1207 < 200; num1207++)
									{
										if (num1207 != this.whoAmI && Main.npc[num1207].active && Main.npc[num1207].type == this.type && (Main.npc[num1207].velocity.X != 0f || Main.npc[num1207].velocity.Y != 0f))
										{
											this.localAI[0] = (float)Main.rand.Next(60, 300);
										}
									}
								}
								if (this.localAI[0] <= 0f)
								{
									this.localAI[0] = (float)Main.rand.Next(300, 600);
									bool flag119 = false;
									int num1208 = 0;
									while (!flag119 && num1208 <= 1000)
									{
										num1208++;
										int num1209 = (int)(Main.player[Main.npc[NPC.plantBoss].target].Center.X / 16f);
										int num1210 = (int)(Main.player[Main.npc[NPC.plantBoss].target].Center.Y / 16f);
										if (this.ai[0] == 0f)
										{
											num1209 = (int)((Main.player[Main.npc[NPC.plantBoss].target].Center.X + Main.npc[NPC.plantBoss].Center.X) / 32f);
											num1210 = (int)((Main.player[Main.npc[NPC.plantBoss].target].Center.Y + Main.npc[NPC.plantBoss].Center.Y) / 32f);
										}
										if (flag118)
										{
											num1209 = (int)Main.npc[NPC.plantBoss].position.X / 16;
											num1210 = (int)(Main.npc[NPC.plantBoss].position.Y + 400f) / 16;
										}
										int num1211 = 20;
										num1211 += (int)(100f * ((float)num1208 / 1000f));
										int num1212 = num1209 + Main.rand.Next(-num1211, num1211 + 1);
										int num1213 = num1210 + Main.rand.Next(-num1211, num1211 + 1);
										if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2 && Main.rand.Next(6) == 0)
										{
											this.TargetClosest(true);
											int num1214 = (int)(Main.player[this.target].Center.X / 16f);
											int num1215 = (int)(Main.player[this.target].Center.Y / 16f);
											if (Main.tile[num1214, num1215].wall > 0)
											{
												num1212 = num1214;
												num1213 = num1215;
											}
										}
										try
										{
											if (WorldGen.SolidTile(num1212, num1213) || (Main.tile[num1212, num1213].wall > 0 && (num1208 > 500 || Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2)))
											{
												flag119 = true;
												this.ai[0] = (float)num1212;
												this.ai[1] = (float)num1213;
												this.netUpdate = true;
											}
										}
										catch
										{
										}
									}
								}
							}
							if (this.ai[0] > 0f && this.ai[1] > 0f)
							{
								float num1216 = 6f;
								if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2)
								{
									num1216 = 8f;
								}
								if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 4)
								{
									num1216 = 10f;
								}
								if (Main.expertMode)
								{
									num1216 += 1f;
								}
								if (Main.expertMode && Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2)
								{
									num1216 += 1f;
								}
								if (flag117)
								{
									num1216 *= 2f;
								}
								if (flag118)
								{
									num1216 *= 2f;
								}
								Vector2 vector140 = new Vector2(base.Center.X, base.Center.Y);
								float num1217 = this.ai[0] * 16f - 8f - vector140.X;
								float num1218 = this.ai[1] * 16f - 8f - vector140.Y;
								float num1219 = (float)Math.Sqrt((double)(num1217 * num1217 + num1218 * num1218));
								if (num1219 < 12f + num1216)
								{
									this.velocity.X = num1217;
									this.velocity.Y = num1218;
								}
								else
								{
									num1219 = num1216 / num1219;
									this.velocity.X = num1217 * num1219;
									this.velocity.Y = num1218 * num1219;
								}
								Vector2 vector141 = new Vector2(base.Center.X, base.Center.Y);
								float num1220 = Main.npc[NPC.plantBoss].Center.X - vector141.X;
								float num1221 = Main.npc[NPC.plantBoss].Center.Y - vector141.Y;
								this.rotation = (float)Math.Atan2((double)num1221, (double)num1220) - 1.57f;
								return;
							}
						}
						else if (this.aiStyle == 53)
						{
							if (NPC.plantBoss < 0)
							{
								this.StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
								this.netUpdate = true;
								return;
							}
							int num1222 = NPC.plantBoss;
							if (this.ai[3] > 0f)
							{
								num1222 = (int)this.ai[3] - 1;
							}
							if (Main.netMode != 1)
							{
								this.localAI[0] -= 1f;
								if (this.localAI[0] <= 0f)
								{
									this.localAI[0] = (float)Main.rand.Next(120, 480);
									this.ai[0] = (float)Main.rand.Next(-100, 101);
									this.ai[1] = (float)Main.rand.Next(-100, 101);
									this.netUpdate = true;
								}
							}
							this.TargetClosest(true);
							float num1223 = 0.2f;
							float num1224 = 200f;
							if ((double)Main.npc[NPC.plantBoss].life < (double)Main.npc[NPC.plantBoss].lifeMax * 0.25)
							{
								num1224 += 100f;
							}
							if ((double)Main.npc[NPC.plantBoss].life < (double)Main.npc[NPC.plantBoss].lifeMax * 0.1)
							{
								num1224 += 100f;
							}
							if (Main.expertMode)
							{
								float num1225 = 1f - (float)this.life / (float)this.lifeMax;
								num1224 += num1225 * 300f;
								num1223 += 0.3f;
							}
							if (!Main.npc[num1222].active || NPC.plantBoss < 0)
							{
								this.active = false;
								return;
							}
							float num1226 = Main.npc[num1222].position.X + (float)(Main.npc[num1222].width / 2);
							float num1227 = Main.npc[num1222].position.Y + (float)(Main.npc[num1222].height / 2);
							Vector2 vector142 = new Vector2(num1226, num1227);
							float num1228 = num1226 + this.ai[0];
							float num1229 = num1227 + this.ai[1];
							float num1230 = num1228 - vector142.X;
							float num1231 = num1229 - vector142.Y;
							float num1232 = (float)Math.Sqrt((double)(num1230 * num1230 + num1231 * num1231));
							num1232 = num1224 / num1232;
							num1230 *= num1232;
							num1231 *= num1232;
							if (this.position.X < num1226 + num1230)
							{
								this.velocity.X = this.velocity.X + num1223;
								if (this.velocity.X < 0f && num1230 > 0f)
								{
									this.velocity.X = this.velocity.X * 0.9f;
								}
							}
							else if (this.position.X > num1226 + num1230)
							{
								this.velocity.X = this.velocity.X - num1223;
								if (this.velocity.X > 0f && num1230 < 0f)
								{
									this.velocity.X = this.velocity.X * 0.9f;
								}
							}
							if (this.position.Y < num1227 + num1231)
							{
								this.velocity.Y = this.velocity.Y + num1223;
								if (this.velocity.Y < 0f && num1231 > 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.9f;
								}
							}
							else if (this.position.Y > num1227 + num1231)
							{
								this.velocity.Y = this.velocity.Y - num1223;
								if (this.velocity.Y > 0f && num1231 < 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.9f;
								}
							}
							if (this.velocity.X > 8f)
							{
								this.velocity.X = 8f;
							}
							if (this.velocity.X < -8f)
							{
								this.velocity.X = -8f;
							}
							if (this.velocity.Y > 8f)
							{
								this.velocity.Y = 8f;
							}
							if (this.velocity.Y < -8f)
							{
								this.velocity.Y = -8f;
							}
							if (num1230 > 0f)
							{
								this.spriteDirection = 1;
								this.rotation = (float)Math.Atan2((double)num1231, (double)num1230);
							}
							if (num1230 < 0f)
							{
								this.spriteDirection = -1;
								this.rotation = (float)Math.Atan2((double)num1231, (double)num1230) + 3.14f;
								return;
							}
						}
						else if (this.aiStyle == 54)
						{
							NPC.crimsonBoss = this.whoAmI;
							if (Main.netMode != 1 && this.localAI[0] == 0f)
							{
								this.localAI[0] = 1f;
								for (int num1233 = 0; num1233 < 20; num1233++)
								{
									float num1234 = base.Center.X;
									float num1235 = base.Center.Y;
									num1234 += (float)Main.rand.Next(-this.width, this.width);
									num1235 += (float)Main.rand.Next(-this.height, this.height);
									int num1236 = NPC.NewNPC((int)num1234, (int)num1235, 267, 0, 0f, 0f, 0f, 0f, 255);
									Main.npc[num1236].velocity = new Vector2((float)Main.rand.Next(-30, 31) * 0.1f, (float)Main.rand.Next(-30, 31) * 0.1f);
									Main.npc[num1236].netUpdate = true;
								}
							}
							if (Main.netMode != 1)
							{
								this.TargetClosest(true);
								int num1237 = 6000;
								if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) + Math.Abs(base.Center.Y - Main.player[this.target].Center.Y) > (float)num1237)
								{
									this.active = false;
									this.life = 0;
									if (Main.netMode == 2)
									{
										NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
									}
								}
							}
							if (this.ai[0] < 0f)
							{
								if (this.localAI[2] == 0f)
								{
									Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, 1);
									this.localAI[2] = 1f;
									Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 392, 1f);
									Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 393, 1f);
									Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 394, 1f);
									Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 395, 1f);
									for (int num1238 = 0; num1238 < 20; num1238++)
									{
										Dust.NewDust(this.position, this.width, this.height, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, default(Color), 1f);
									}
									Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
								}
								this.dontTakeDamage = false;
								this.knockBackResist = 0.5f;
								if (Main.expertMode)
								{
									this.knockBackResist *= Main.expertKnockBack;
								}
								this.TargetClosest(true);
								Vector2 vector143 = new Vector2(base.Center.X, base.Center.Y);
								float num1239 = Main.player[this.target].Center.X - vector143.X;
								float num1240 = Main.player[this.target].Center.Y - vector143.Y;
								float num1241 = (float)Math.Sqrt((double)(num1239 * num1239 + num1240 * num1240));
								float num1242 = 8f;
								num1241 = num1242 / num1241;
								num1239 *= num1241;
								num1240 *= num1241;
								this.velocity.X = (this.velocity.X * 50f + num1239) / 51f;
								this.velocity.Y = (this.velocity.Y * 50f + num1240) / 51f;
								if (this.ai[0] == -1f)
								{
									if (Main.netMode != 1)
									{
										this.localAI[1] += 1f;
										if (this.justHit)
										{
											this.localAI[1] -= (float)Main.rand.Next(5);
										}
										int num1243 = 60 + Main.rand.Next(120);
										if (Main.netMode != 0)
										{
											num1243 += Main.rand.Next(30, 90);
										}
										if (this.localAI[1] >= (float)num1243)
										{
											this.localAI[1] = 0f;
											this.TargetClosest(true);
											int num1244 = 0;
											int num1245;
											int num1246;
											while (true)
											{
												num1244++;
												num1245 = (int)Main.player[this.target].Center.X / 16;
												num1246 = (int)Main.player[this.target].Center.Y / 16;
												if (Main.rand.Next(2) == 0)
												{
													num1245 += Main.rand.Next(7, 13);
												}
												else
												{
													num1245 -= Main.rand.Next(7, 13);
												}
												if (Main.rand.Next(2) == 0)
												{
													num1246 += Main.rand.Next(7, 13);
												}
												else
												{
													num1246 -= Main.rand.Next(7, 13);
												}
												if (!WorldGen.SolidTile(num1245, num1246))
												{
													break;
												}
												if (num1244 > 100)
												{
													goto Block_6036;
												}
											}
											this.ai[3] = 0f;
											this.ai[0] = -2f;
											this.ai[1] = (float)num1245;
											this.ai[2] = (float)num1246;
											this.netUpdate = true;
											this.netSpam = 0;
											Block_6036:
											;
										}
									}
								}
								else if (this.ai[0] == -2f)
								{
									this.velocity *= 0.9f;
									if (Main.netMode != 0)
									{
										this.ai[3] += 15f;
									}
									else
									{
										this.ai[3] += 25f;
									}
									if (this.ai[3] >= 255f)
									{
										this.ai[3] = 255f;
										this.position.X = this.ai[1] * 16f - (float)(this.width / 2);
										this.position.Y = this.ai[2] * 16f - (float)(this.height / 2);
										Main.PlaySound(2, (int)base.Center.X, (int)base.Center.Y, 8);
										this.ai[0] = -3f;
										this.netUpdate = true;
										this.netSpam = 0;
									}
									this.alpha = (int)this.ai[3];
								}
								else if (this.ai[0] == -3f)
								{
									if (Main.netMode != 0)
									{
										this.ai[3] -= 15f;
									}
									else
									{
										this.ai[3] -= 25f;
									}
									if (this.ai[3] <= 0f)
									{
										this.ai[3] = 0f;
										this.ai[0] = -1f;
										this.netUpdate = true;
										this.netSpam = 0;
									}
									this.alpha = (int)this.ai[3];
								}
							}
							else
							{
								this.TargetClosest(true);
								Vector2 vector144 = new Vector2(base.Center.X, base.Center.Y);
								float num1247 = Main.player[this.target].Center.X - vector144.X;
								float num1248 = Main.player[this.target].Center.Y - vector144.Y;
								float num1249 = (float)Math.Sqrt((double)(num1247 * num1247 + num1248 * num1248));
								float num1250 = 1f;
								if (num1249 < num1250)
								{
									this.velocity.X = num1247;
									this.velocity.Y = num1248;
								}
								else
								{
									num1249 = num1250 / num1249;
									this.velocity.X = num1247 * num1249;
									this.velocity.Y = num1248 * num1249;
								}
								if (this.ai[0] == 0f)
								{
									if (Main.netMode != 1)
									{
										int num1251 = 0;
										for (int num1252 = 0; num1252 < 200; num1252++)
										{
											if (Main.npc[num1252].active && Main.npc[num1252].type == 267)
											{
												num1251++;
											}
										}
										if (num1251 == 0)
										{
											this.ai[0] = -1f;
											this.localAI[1] = 0f;
											this.alpha = 0;
											this.netUpdate = true;
										}
										this.localAI[1] += 1f;
										if (this.localAI[1] >= (float)(120 + Main.rand.Next(300)))
										{
											this.localAI[1] = 0f;
											this.TargetClosest(true);
											int num1253 = 0;
											int num1254;
											int num1255;
											while (true)
											{
												num1253++;
												num1254 = (int)Main.player[this.target].Center.X / 16;
												num1255 = (int)Main.player[this.target].Center.Y / 16;
												num1254 += Main.rand.Next(-50, 51);
												num1255 += Main.rand.Next(-50, 51);
												if (!WorldGen.SolidTile(num1254, num1255) && Collision.CanHit(new Vector2((float)(num1254 * 16), (float)(num1255 * 16)), 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
												{
													break;
												}
												if (num1253 > 100)
												{
													goto Block_6053;
												}
											}
											this.ai[0] = 1f;
											this.ai[1] = (float)num1254;
											this.ai[2] = (float)num1255;
											this.netUpdate = true;
											Block_6053:
											;
										}
									}
								}
								else if (this.ai[0] == 1f)
								{
									this.alpha += 5;
									if (this.alpha >= 255)
									{
										Main.PlaySound(2, (int)base.Center.X, (int)base.Center.Y, 8);
										this.alpha = 255;
										this.position.X = this.ai[1] * 16f - (float)(this.width / 2);
										this.position.Y = this.ai[2] * 16f - (float)(this.height / 2);
										this.ai[0] = 2f;
									}
								}
								else if (this.ai[0] == 2f)
								{
									this.alpha -= 5;
									if (this.alpha <= 0)
									{
										this.alpha = 0;
										this.ai[0] = 0f;
									}
								}
							}
							if (Main.player[this.target].dead || !Main.player[this.target].ZoneCrimson)
							{
								if (this.localAI[3] < 120f)
								{
									this.localAI[3] += 1f;
								}
								if (this.localAI[3] > 60f)
								{
									this.velocity.Y = this.velocity.Y + (this.localAI[3] - 60f) * 0.25f;
								}
								this.ai[0] = 2f;
								this.alpha = 10;
								return;
							}
							if (this.localAI[3] > 0f)
							{
								this.localAI[3] -= 1f;
								return;
							}
						}
						else if (this.aiStyle == 55)
						{
							if (NPC.crimsonBoss < 0)
							{
								this.active = false;
								this.netUpdate = true;
								return;
							}
							if (this.ai[0] == 0f)
							{
								Vector2 vector145 = new Vector2(base.Center.X, base.Center.Y);
								float num1256 = Main.npc[NPC.crimsonBoss].Center.X - vector145.X;
								float num1257 = Main.npc[NPC.crimsonBoss].Center.Y - vector145.Y;
								float num1258 = (float)Math.Sqrt((double)(num1256 * num1256 + num1257 * num1257));
								if (num1258 > 90f)
								{
									num1258 = 8f / num1258;
									num1256 *= num1258;
									num1257 *= num1258;
									this.velocity.X = (this.velocity.X * 15f + num1256) / 16f;
									this.velocity.Y = (this.velocity.Y * 15f + num1257) / 16f;
									return;
								}
								if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) < 8f)
								{
									this.velocity.Y = this.velocity.Y * 1.05f;
									this.velocity.X = this.velocity.X * 1.05f;
								}
								if (Main.netMode != 1 && ((Main.expertMode && Main.rand.Next(100) == 0) || Main.rand.Next(200) == 0))
								{
									this.TargetClosest(true);
									vector145 = new Vector2(base.Center.X, base.Center.Y);
									num1256 = Main.player[this.target].Center.X - vector145.X;
									num1257 = Main.player[this.target].Center.Y - vector145.Y;
									num1258 = (float)Math.Sqrt((double)(num1256 * num1256 + num1257 * num1257));
									num1258 = 8f / num1258;
									this.velocity.X = num1256 * num1258;
									this.velocity.Y = num1257 * num1258;
									this.ai[0] = 1f;
									this.netUpdate = true;
									return;
								}
							}
							else
							{
								if (Main.expertMode)
								{
									Vector2 value15 = Main.player[this.target].Center - base.Center;
									value15.Normalize();
									value15 *= 9f;
									this.velocity = (this.velocity * 99f + value15) / 100f;
								}
								Vector2 vector146 = new Vector2(base.Center.X, base.Center.Y);
								float num1259 = Main.npc[NPC.crimsonBoss].Center.X - vector146.X;
								float num1260 = Main.npc[NPC.crimsonBoss].Center.Y - vector146.Y;
								float num1261 = (float)Math.Sqrt((double)(num1259 * num1259 + num1260 * num1260));
								if (num1261 > 700f || this.justHit)
								{
									this.ai[0] = 0f;
									return;
								}
							}
						}
						else
						{
							if (this.aiStyle == 56)
							{
								this.TargetClosest(true);
								Vector2 vector147 = new Vector2(base.Center.X, base.Center.Y);
								float num1262 = Main.player[this.target].Center.X - vector147.X;
								float num1263 = Main.player[this.target].Center.Y - vector147.Y;
								float num1264 = (float)Math.Sqrt((double)(num1262 * num1262 + num1263 * num1263));
								float num1265 = 12f;
								num1264 = num1265 / num1264;
								num1262 *= num1264;
								num1263 *= num1264;
								this.velocity.X = (this.velocity.X * 100f + num1262) / 101f;
								this.velocity.Y = (this.velocity.Y * 100f + num1263) / 101f;
								this.rotation = (float)Math.Atan2((double)num1263, (double)num1262) - 1.57f;
								int num1266 = Dust.NewDust(this.position, this.width, this.height, 180, 0f, 0f, 0, default(Color), 1f);
								Main.dust[num1266].velocity *= 0.1f;
								Main.dust[num1266].scale = 1.3f;
								Main.dust[num1266].noGravity = true;
								return;
							}
							if (this.aiStyle == 57)
							{
								float num1267 = 2f;
								this.noGravity = true;
								this.noTileCollide = true;
								if (!Main.dayTime)
								{
									this.TargetClosest(true);
								}
								bool flag120 = false;
								if ((double)this.life < (double)this.lifeMax * 0.75)
								{
									num1267 = 3f;
								}
								if ((double)this.life < (double)this.lifeMax * 0.5)
								{
									num1267 = 4f;
								}
								if (Main.dayTime)
								{
									if (this.timeLeft > 10)
									{
										this.timeLeft = 10;
									}
									num1267 = 8f;
								}
								else if (this.ai[0] == 0f)
								{
									this.ai[1] += 1f;
									if ((double)this.life < (double)this.lifeMax * 0.5)
									{
										this.ai[1] += 1f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.25)
									{
										this.ai[1] += 1f;
									}
									if (this.ai[1] >= 300f && Main.netMode != 1)
									{
										this.ai[1] = 0f;
										if ((double)this.life < (double)this.lifeMax * 0.25 && this.type != 344)
										{
											this.ai[0] = (float)Main.rand.Next(3, 5);
										}
										else
										{
											this.ai[0] = (float)Main.rand.Next(1, 3);
										}
										this.netUpdate = true;
									}
								}
								else if (this.ai[0] == 1f)
								{
									if (this.type == 344)
									{
										flag120 = true;
										this.ai[1] += 1f;
										if (this.ai[1] % 5f == 0f)
										{
											Vector2 vector148 = new Vector2(this.position.X + 20f + (float)Main.rand.Next(this.width - 40), this.position.Y + 20f + (float)Main.rand.Next(this.height - 40));
											float num1268 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector148.X;
											float num1269 = Main.player[this.target].position.Y - vector148.Y;
											num1268 += (float)Main.rand.Next(-50, 51);
											num1269 += (float)Main.rand.Next(-50, 51);
											num1269 -= Math.Abs(num1268) * ((float)Main.rand.Next(0, 21) * 0.01f);
											float num1270 = (float)Math.Sqrt((double)(num1268 * num1268 + num1269 * num1269));
											float num1271 = 12.5f;
											num1270 = num1271 / num1270;
											num1268 *= num1270;
											num1269 *= num1270;
											num1268 *= 1f + (float)Main.rand.Next(-20, 21) * 0.02f;
											num1269 *= 1f + (float)Main.rand.Next(-20, 21) * 0.02f;
											Projectile.NewProjectile(vector148.X, vector148.Y, num1268, num1269, 345, 43, 0f, Main.myPlayer, (float)Main.rand.Next(0, 31), 0f);
										}
										if (this.ai[1] >= 180f)
										{
											this.ai[1] = 0f;
											this.ai[0] = 0f;
										}
									}
									else
									{
										flag120 = true;
										this.ai[1] += 1f;
										if (this.ai[1] % 15f == 0f)
										{
											Vector2 vector149 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f + 30f);
											float num1272 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector149.X;
											float num1273 = Main.player[this.target].position.Y - vector149.Y;
											float num1274 = (float)Math.Sqrt((double)(num1272 * num1272 + num1273 * num1273));
											float num1275 = 10f;
											num1274 = num1275 / num1274;
											num1272 *= num1274;
											num1273 *= num1274;
											num1272 *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
											num1273 *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
											Projectile.NewProjectile(vector149.X, vector149.Y, num1272, num1273, 325, 50, 0f, Main.myPlayer, 0f, 0f);
										}
										if (this.ai[1] >= 120f)
										{
											this.ai[1] = 0f;
											this.ai[0] = 0f;
										}
									}
								}
								else if (this.ai[0] == 2f)
								{
									if (this.type == 344)
									{
										flag120 = true;
										this.ai[1] += 1f;
										if (this.ai[1] > 60f && this.ai[1] < 240f && this.ai[1] % 15f == 0f)
										{
											float num1276 = 4.5f;
											Vector2 vector150 = new Vector2(this.position.X + 20f + (float)Main.rand.Next(this.width - 40), this.position.Y + 60f + (float)Main.rand.Next(this.height - 80));
											float num1277 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector150.X;
											float num1278 = Main.player[this.target].position.Y - vector150.Y;
											num1278 -= Math.Abs(num1277) * 0.3f;
											num1276 += Math.Abs(num1277) * 0.004f;
											num1277 += (float)Main.rand.Next(-50, 51);
											num1278 -= (float)Main.rand.Next(50, 201);
											float num1279 = (float)Math.Sqrt((double)(num1277 * num1277 + num1278 * num1278));
											num1279 = num1276 / num1279;
											num1277 *= num1279;
											num1278 *= num1279;
											num1277 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
											num1278 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
											Projectile.NewProjectile(vector150.X, vector150.Y, num1277, num1278, 346, 57, 0f, Main.myPlayer, 0f, (float)Main.rand.Next(2));
										}
										if (this.ai[1] >= 300f)
										{
											this.ai[1] = 0f;
											this.ai[0] = 0f;
										}
									}
									else
									{
										flag120 = true;
										this.ai[1] += 1f;
										if (this.ai[1] > 60f && this.ai[1] < 240f && this.ai[1] % 8f == 0f)
										{
											float num1280 = 10f;
											Vector2 vector151 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f + 30f);
											float num1281 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector151.X;
											float num1282 = Main.player[this.target].position.Y - vector151.Y;
											num1282 -= Math.Abs(num1281) * 0.3f;
											num1280 += Math.Abs(num1281) * 0.004f;
											if (num1280 > 14f)
											{
												num1280 = 14f;
											}
											num1281 += (float)Main.rand.Next(-50, 51);
											num1282 -= (float)Main.rand.Next(50, 201);
											float num1283 = (float)Math.Sqrt((double)(num1281 * num1281 + num1282 * num1282));
											num1283 = num1280 / num1283;
											num1281 *= num1283;
											num1282 *= num1283;
											num1281 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
											num1282 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
											Projectile.NewProjectile(vector151.X, vector151.Y, num1281, num1282, Main.rand.Next(326, 329), 40, 0f, Main.myPlayer, 0f, 0f);
										}
										if (this.ai[1] >= 300f)
										{
											this.ai[1] = 0f;
											this.ai[0] = 0f;
										}
									}
								}
								else if (this.ai[0] == 3f)
								{
									num1267 = 4f;
									this.ai[1] += 1f;
									if (this.ai[1] % 30f == 0f)
									{
										Vector2 vector152 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f + 30f);
										float num1284 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector152.X;
										float num1285 = Main.player[this.target].position.Y - vector152.Y;
										float num1286 = (float)Math.Sqrt((double)(num1284 * num1284 + num1285 * num1285));
										float num1287 = 16f;
										num1286 = num1287 / num1286;
										num1284 *= num1286;
										num1285 *= num1286;
										num1284 *= 1f + (float)Main.rand.Next(-20, 21) * 0.001f;
										num1285 *= 1f + (float)Main.rand.Next(-20, 21) * 0.001f;
										Projectile.NewProjectile(vector152.X, vector152.Y, num1284, num1285, 325, 75, 0f, Main.myPlayer, 0f, 0f);
									}
									if (this.ai[1] >= 120f)
									{
										this.ai[1] = 0f;
										this.ai[0] = 0f;
									}
								}
								else if (this.ai[0] == 4f)
								{
									num1267 = 4f;
									this.ai[1] += 1f;
									if (this.ai[1] % 10f == 0f)
									{
										float num1288 = 12f;
										Vector2 vector153 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f + 30f);
										float num1289 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector153.X;
										float num1290 = Main.player[this.target].position.Y - vector153.Y;
										num1290 -= Math.Abs(num1289) * 0.2f;
										num1288 += Math.Abs(num1289) * 0.002f;
										if (num1288 > 16f)
										{
											num1288 = 16f;
										}
										num1289 += (float)Main.rand.Next(-50, 51);
										num1290 -= (float)Main.rand.Next(50, 201);
										float num1291 = (float)Math.Sqrt((double)(num1289 * num1289 + num1290 * num1290));
										num1291 = num1288 / num1291;
										num1289 *= num1291;
										num1290 *= num1291;
										num1289 *= 1f + (float)Main.rand.Next(-30, 31) * 0.005f;
										num1290 *= 1f + (float)Main.rand.Next(-30, 31) * 0.005f;
										Projectile.NewProjectile(vector153.X, vector153.Y, num1289, num1290, Main.rand.Next(326, 329), 50, 0f, Main.myPlayer, 0f, 0f);
									}
									if (this.ai[1] >= 240f)
									{
										this.ai[1] = 0f;
										this.ai[0] = 0f;
									}
								}
								if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) < 50f)
								{
									flag120 = true;
								}
								if (flag120)
								{
									this.velocity.X = this.velocity.X * 0.9f;
									if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
									{
										this.velocity.X = 0f;
									}
								}
								else
								{
									if (this.direction > 0)
									{
										this.velocity.X = (this.velocity.X * 20f + num1267) / 21f;
									}
									if (this.direction < 0)
									{
										this.velocity.X = (this.velocity.X * 20f - num1267) / 21f;
									}
								}
								int num1292 = 80;
								int num1293 = 20;
								Vector2 position7 = new Vector2(base.Center.X - (float)(num1292 / 2), this.position.Y + (float)this.height - (float)num1293);
								bool flag121 = false;
								if (this.position.X < Main.player[this.target].position.X && this.position.X + (float)this.width > Main.player[this.target].position.X + (float)Main.player[this.target].width && this.position.Y + (float)this.height < Main.player[this.target].position.Y + (float)Main.player[this.target].height - 16f)
								{
									flag121 = true;
								}
								if (flag121)
								{
									this.velocity.Y = this.velocity.Y + 0.5f;
								}
								else if (Collision.SolidCollision(position7, num1292, num1293))
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = 0f;
									}
									if ((double)this.velocity.Y > -0.2)
									{
										this.velocity.Y = this.velocity.Y - 0.025f;
									}
									else
									{
										this.velocity.Y = this.velocity.Y - 0.2f;
									}
									if (this.velocity.Y < -4f)
									{
										this.velocity.Y = -4f;
									}
								}
								else
								{
									if (this.velocity.Y < 0f)
									{
										this.velocity.Y = 0f;
									}
									if ((double)this.velocity.Y < 0.1)
									{
										this.velocity.Y = this.velocity.Y + 0.025f;
									}
									else
									{
										this.velocity.Y = this.velocity.Y + 0.5f;
									}
								}
								if (this.velocity.Y > 10f)
								{
									this.velocity.Y = 10f;
									return;
								}
							}
							else
							{
								if (this.aiStyle == 58)
								{
									this.localAI[0] += 1f;
									if (this.localAI[0] > 6f)
									{
										this.localAI[0] = 0f;
										this.localAI[1] += 1f;
										if (this.localAI[1] > 4f)
										{
											this.localAI[1] = 0f;
										}
									}
									if (Main.netMode != 1)
									{
										this.localAI[2] += 1f;
										if (this.localAI[2] > 300f)
										{
											this.ai[3] = (float)Main.rand.Next(3);
											this.localAI[2] = 0f;
										}
										else if (this.ai[3] == 0f && this.localAI[2] % 30f == 0f && this.localAI[2] > 30f)
										{
											float num1294 = 5f;
											Vector2 vector154 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f + 30f);
											if (!WorldGen.SolidTile((int)vector154.X / 16, (int)vector154.Y / 16))
											{
												float num1295 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector154.X;
												float num1296 = Main.player[this.target].position.Y - vector154.Y;
												num1295 += (float)Main.rand.Next(-50, 51);
												num1296 += (float)Main.rand.Next(50, 201);
												num1296 *= 0.2f;
												float num1297 = (float)Math.Sqrt((double)(num1295 * num1295 + num1296 * num1296));
												num1297 = num1294 / num1297;
												num1295 *= num1297;
												num1296 *= num1297;
												num1295 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
												num1296 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
												Projectile.NewProjectile(vector154.X, vector154.Y, num1295, num1296, Main.rand.Next(326, 329), 40, 0f, Main.myPlayer, 0f, 0f);
											}
										}
									}
									if (this.ai[0] == 0f && Main.netMode != 1)
									{
										this.TargetClosest(true);
										this.ai[0] = 1f;
										int num1298 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 328, this.whoAmI, 0f, 0f, 0f, 0f, 255);
										Main.npc[num1298].ai[0] = -1f;
										Main.npc[num1298].ai[1] = (float)this.whoAmI;
										Main.npc[num1298].target = this.target;
										Main.npc[num1298].netUpdate = true;
										num1298 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 328, this.whoAmI, 0f, 0f, 0f, 0f, 255);
										Main.npc[num1298].ai[0] = 1f;
										Main.npc[num1298].ai[1] = (float)this.whoAmI;
										Main.npc[num1298].ai[3] = 150f;
										Main.npc[num1298].target = this.target;
										Main.npc[num1298].netUpdate = true;
									}
									if (Main.player[this.target].dead || Math.Abs(this.position.X - Main.player[this.target].position.X) > 2000f || Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000f)
									{
										this.TargetClosest(true);
										if (Main.player[this.target].dead || Math.Abs(this.position.X - Main.player[this.target].position.X) > 2000f || Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000f)
										{
											this.ai[1] = 2f;
										}
									}
									if (Main.dayTime)
									{
										this.velocity.Y = this.velocity.Y + 0.3f;
										this.velocity.X = this.velocity.X * 0.9f;
									}
									else if (this.ai[1] == 0f)
									{
										this.ai[2] += 1f;
										if (this.ai[2] >= 300f)
										{
											if (this.ai[3] != 1f)
											{
												this.ai[1] = 0f;
												this.ai[2] = 0f;
											}
											else
											{
												this.ai[2] = 0f;
												this.ai[1] = 1f;
												this.TargetClosest(true);
												this.netUpdate = true;
											}
										}
										Vector2 vector155 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float num1299 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector155.X;
										float num1300 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 200f - vector155.Y;
										float num1301 = (float)Math.Sqrt((double)(num1299 * num1299 + num1300 * num1300));
										float num1302 = 6f;
										if (this.ai[3] == 1f)
										{
											if (num1301 > 900f)
											{
												num1302 = 12f;
											}
											else if (num1301 > 600f)
											{
												num1302 = 10f;
											}
											else if (num1301 > 300f)
											{
												num1302 = 8f;
											}
										}
										if (num1301 > 50f)
										{
											num1301 = num1302 / num1301;
											this.velocity.X = (this.velocity.X * 14f + num1299 * num1301) / 15f;
											this.velocity.Y = (this.velocity.Y * 14f + num1300 * num1301) / 15f;
										}
									}
									else if (this.ai[1] == 1f)
									{
										this.ai[2] += 1f;
										if (this.ai[2] >= 600f || this.ai[3] != 1f)
										{
											this.ai[2] = 0f;
											this.ai[1] = 0f;
										}
										Vector2 vector156 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float num1303 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector156.X;
										float num1304 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector156.Y;
										float num1305 = (float)Math.Sqrt((double)(num1303 * num1303 + num1304 * num1304));
										num1305 = 16f / num1305;
										this.velocity.X = (this.velocity.X * 49f + num1303 * num1305) / 50f;
										this.velocity.Y = (this.velocity.Y * 49f + num1304 * num1305) / 50f;
									}
									else if (this.ai[1] == 2f)
									{
										this.ai[1] = 3f;
										this.velocity.Y = this.velocity.Y + 0.1f;
										if (this.velocity.Y < 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.95f;
										}
										this.velocity.X = this.velocity.X * 0.95f;
										if (this.timeLeft > 500)
										{
											this.timeLeft = 500;
										}
									}
									this.rotation = this.velocity.X * -0.02f;
									return;
								}
								if (this.aiStyle == 59)
								{
									this.spriteDirection = -(int)this.ai[0];
									if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 58)
									{
										this.ai[2] += 10f;
										if (this.ai[2] > 50f || Main.netMode != 2)
										{
											this.life = -1;
											this.HitEffect(0, 10.0);
											this.active = false;
										}
									}
									if (Main.netMode != 1 && Main.npc[(int)this.ai[1]].ai[3] == 2f)
									{
										this.localAI[1] += 1f;
										if (this.localAI[1] > 90f)
										{
											this.localAI[1] = 0f;
											float num1306 = 0.01f;
											Vector2 vector157 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f + 30f);
											float num1307 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector157.X;
											float num1308 = Main.player[this.target].position.Y - vector157.Y;
											float num1309 = (float)Math.Sqrt((double)(num1307 * num1307 + num1308 * num1308));
											num1309 = num1306 / num1309;
											num1307 *= num1309;
											num1308 *= num1309;
											Projectile.NewProjectile(base.Center.X, base.Center.Y, num1307, num1308, 329, 60, 0f, Main.myPlayer, this.rotation, (float)this.spriteDirection);
										}
									}
									if (Main.dayTime)
									{
										this.velocity.Y = this.velocity.Y + 0.3f;
										this.velocity.X = this.velocity.X * 0.9f;
										return;
									}
									if (this.ai[2] == 0f || this.ai[2] == 3f)
									{
										if (Main.npc[(int)this.ai[1]].ai[1] == 3f && this.timeLeft > 10)
										{
											this.timeLeft = 10;
										}
										this.ai[3] += 1f;
										if (this.ai[3] >= 180f)
										{
											this.ai[2] += 1f;
											this.ai[3] = 0f;
											this.netUpdate = true;
										}
										Vector2 vector158 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float num1310 = (Main.player[this.target].Center.X + Main.npc[(int)this.ai[1]].Center.X) / 2f;
										float num1311 = (Main.player[this.target].Center.Y + Main.npc[(int)this.ai[1]].Center.Y) / 2f;
										num1310 += -170f * this.ai[0] - vector158.X;
										num1311 += 90f - vector158.Y;
										float num1312 = Math.Abs(Main.player[this.target].Center.X - Main.npc[(int)this.ai[1]].Center.X) + Math.Abs(Main.player[this.target].Center.Y - Main.npc[(int)this.ai[1]].Center.Y);
										if (num1312 > 700f)
										{
											num1310 = Main.npc[(int)this.ai[1]].Center.X - 170f * this.ai[0] - vector158.X;
											num1311 = Main.npc[(int)this.ai[1]].Center.Y + 90f - vector158.Y;
										}
										float num1313 = (float)Math.Sqrt((double)(num1310 * num1310 + num1311 * num1311));
										float num1314 = 6f;
										if (num1313 > 1000f)
										{
											num1314 = 21f;
										}
										else if (num1313 > 800f)
										{
											num1314 = 18f;
										}
										else if (num1313 > 600f)
										{
											num1314 = 15f;
										}
										else if (num1313 > 400f)
										{
											num1314 = 12f;
										}
										else if (num1313 > 200f)
										{
											num1314 = 9f;
										}
										if (this.ai[0] < 0f && base.Center.X > Main.npc[(int)this.ai[1]].Center.X)
										{
											num1310 -= 4f;
										}
										if (this.ai[0] > 0f && base.Center.X < Main.npc[(int)this.ai[1]].Center.X)
										{
											num1310 += 4f;
										}
										num1313 = num1314 / num1313;
										this.velocity.X = (this.velocity.X * 14f + num1310 * num1313) / 15f;
										this.velocity.Y = (this.velocity.Y * 14f + num1311 * num1313) / 15f;
										num1313 = (float)Math.Sqrt((double)(num1310 * num1310 + num1311 * num1311));
										if (num1313 > 20f)
										{
											this.rotation = (float)Math.Atan2((double)num1311, (double)num1310) + 1.57f;
											return;
										}
									}
									else if (this.ai[2] == 1f)
									{
										Vector2 vector159 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float num1315 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector159.X;
										float num1316 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector159.Y;
										float num1317 = (float)Math.Sqrt((double)(num1315 * num1315 + num1316 * num1316));
										this.rotation = (float)Math.Atan2((double)num1316, (double)num1315) + 1.57f;
										this.velocity.X = this.velocity.X * 0.95f;
										this.velocity.Y = this.velocity.Y - 0.3f;
										if (this.velocity.Y < -14f)
										{
											this.velocity.Y = -14f;
										}
										if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 200f)
										{
											this.TargetClosest(true);
											this.ai[2] = 2f;
											vector159 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											num1315 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector159.X;
											num1316 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector159.Y;
											num1317 = (float)Math.Sqrt((double)(num1315 * num1315 + num1316 * num1316));
											num1317 = 18f / num1317;
											this.velocity.X = num1315 * num1317;
											this.velocity.Y = num1316 * num1317;
											this.netUpdate = true;
											return;
										}
									}
									else if (this.ai[2] == 2f)
									{
										float num1318 = Math.Abs(base.Center.X - Main.npc[(int)this.ai[1]].Center.X) + Math.Abs(base.Center.Y - Main.npc[(int)this.ai[1]].Center.Y);
										if (this.position.Y > Main.player[this.target].position.Y || this.velocity.Y < 0f || num1318 > 800f)
										{
											this.ai[2] = 3f;
											return;
										}
									}
									else if (this.ai[2] == 4f)
									{
										Vector2 vector160 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float num1319 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector160.X;
										float num1320 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector160.Y;
										float num1321 = (float)Math.Sqrt((double)(num1319 * num1319 + num1320 * num1320));
										this.rotation = (float)Math.Atan2((double)num1320, (double)num1319) + 1.57f;
										this.velocity.Y = this.velocity.Y * 0.95f;
										this.velocity.X = this.velocity.X + 0.3f * -this.ai[0];
										if (this.velocity.X < -14f)
										{
											this.velocity.X = -14f;
										}
										if (this.velocity.X > 14f)
										{
											this.velocity.X = 14f;
										}
										if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 500f || this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) + 500f)
										{
											this.TargetClosest(true);
											this.ai[2] = 5f;
											vector160 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											num1319 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector160.X;
											num1320 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector160.Y;
											num1321 = (float)Math.Sqrt((double)(num1319 * num1319 + num1320 * num1320));
											num1321 = 17f / num1321;
											this.velocity.X = num1319 * num1321;
											this.velocity.Y = num1320 * num1321;
											this.netUpdate = true;
											return;
										}
									}
									else if (this.ai[2] == 5f)
									{
										float num1322 = Math.Abs(base.Center.X - Main.npc[(int)this.ai[1]].Center.X) + Math.Abs(base.Center.Y - Main.npc[(int)this.ai[1]].Center.Y);
										if ((this.velocity.X > 0f && this.position.X + (float)(this.width / 2) > Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2)) || (this.velocity.X < 0f && this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2)) || num1322 > 800f)
										{
											this.ai[2] = 0f;
											return;
										}
									}
								}
								else if (this.aiStyle == 60)
								{
									if (Main.dayTime)
									{
										if (this.velocity.X > 0f)
										{
											this.velocity.X = this.velocity.X + 0.25f;
										}
										else
										{
											this.velocity.X = this.velocity.X - 0.25f;
										}
										this.velocity.Y = this.velocity.Y - 0.1f;
										this.rotation = this.velocity.X * 0.05f;
									}
									else if (this.ai[0] == 0f)
									{
										if (this.ai[2] == 0f)
										{
											this.TargetClosest(true);
											if (base.Center.X < Main.player[this.target].Center.X)
											{
												this.ai[2] = 1f;
											}
											else
											{
												this.ai[2] = -1f;
											}
										}
										this.TargetClosest(true);
										int num1323 = 800;
										float num1324 = Math.Abs(base.Center.X - Main.player[this.target].Center.X);
										if (base.Center.X < Main.player[this.target].Center.X && this.ai[2] < 0f && num1324 > (float)num1323)
										{
											this.ai[2] = 0f;
										}
										if (base.Center.X > Main.player[this.target].Center.X && this.ai[2] > 0f && num1324 > (float)num1323)
										{
											this.ai[2] = 0f;
										}
										float num1325 = 0.45f;
										float num1326 = 7f;
										if ((double)this.life < (double)this.lifeMax * 0.75)
										{
											num1325 = 0.55f;
											num1326 = 8f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.5)
										{
											num1325 = 0.7f;
											num1326 = 10f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.25)
										{
											num1325 = 0.8f;
											num1326 = 11f;
										}
										this.velocity.X = this.velocity.X + this.ai[2] * num1325;
										if (this.velocity.X > num1326)
										{
											this.velocity.X = num1326;
										}
										if (this.velocity.X < -num1326)
										{
											this.velocity.X = -num1326;
										}
										float num1327 = Main.player[this.target].position.Y - (this.position.Y + (float)this.height);
										if (num1327 < 150f)
										{
											this.velocity.Y = this.velocity.Y - 0.2f;
										}
										if (num1327 > 200f)
										{
											this.velocity.Y = this.velocity.Y + 0.2f;
										}
										if (this.velocity.Y > 8f)
										{
											this.velocity.Y = 8f;
										}
										if (this.velocity.Y < -8f)
										{
											this.velocity.Y = -8f;
										}
										this.rotation = this.velocity.X * 0.05f;
										if ((num1324 < 500f || this.ai[3] < 0f) && this.position.Y < Main.player[this.target].position.Y)
										{
											this.ai[3] += 1f;
											int num1328 = 13;
											if ((double)this.life < (double)this.lifeMax * 0.75)
											{
												num1328 = 12;
											}
											if ((double)this.life < (double)this.lifeMax * 0.5)
											{
												num1328 = 11;
											}
											if ((double)this.life < (double)this.lifeMax * 0.25)
											{
												num1328 = 10;
											}
											num1328++;
											if (this.ai[3] > (float)num1328)
											{
												this.ai[3] = (float)(-(float)num1328);
											}
											if (this.ai[3] == 0f && Main.netMode != 1)
											{
												Vector2 vector161 = new Vector2(base.Center.X, base.Center.Y);
												vector161.X += this.velocity.X * 7f;
												float num1329 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector161.X;
												float num1330 = Main.player[this.target].Center.Y - vector161.Y;
												float num1331 = (float)Math.Sqrt((double)(num1329 * num1329 + num1330 * num1330));
												float num1332 = 6f;
												if ((double)this.life < (double)this.lifeMax * 0.75)
												{
													num1332 = 7f;
												}
												if ((double)this.life < (double)this.lifeMax * 0.5)
												{
													num1332 = 8f;
												}
												if ((double)this.life < (double)this.lifeMax * 0.25)
												{
													num1332 = 9f;
												}
												num1331 = num1332 / num1331;
												num1329 *= num1331;
												num1330 *= num1331;
												Projectile.NewProjectile(vector161.X, vector161.Y, num1329, num1330, 348, 42, 0f, Main.myPlayer, 0f, 0f);
											}
										}
										else if (this.ai[3] < 0f)
										{
											this.ai[3] += 1f;
										}
										if (Main.netMode != 1)
										{
											this.ai[1] += (float)Main.rand.Next(1, 4);
											if (this.ai[1] > 800f && num1324 < 600f)
											{
												this.ai[0] = -1f;
											}
										}
									}
									else if (this.ai[0] == 1f)
									{
										this.TargetClosest(true);
										float num1333 = 0.15f;
										float num1334 = 7f;
										if ((double)this.life < (double)this.lifeMax * 0.75)
										{
											num1333 = 0.17f;
											num1334 = 8f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.5)
										{
											num1333 = 0.2f;
											num1334 = 9f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.25)
										{
											num1333 = 0.25f;
											num1334 = 10f;
										}
										num1333 -= 0.05f;
										num1334 -= 1f;
										if (base.Center.X < Main.player[this.target].Center.X)
										{
											this.velocity.X = this.velocity.X + num1333;
											if (this.velocity.X < 0f)
											{
												this.velocity.X = this.velocity.X * 0.98f;
											}
										}
										if (base.Center.X > Main.player[this.target].Center.X)
										{
											this.velocity.X = this.velocity.X - num1333;
											if (this.velocity.X > 0f)
											{
												this.velocity.X = this.velocity.X * 0.98f;
											}
										}
										if (this.velocity.X > num1334 || this.velocity.X < -num1334)
										{
											this.velocity.X = this.velocity.X * 0.95f;
										}
										float num1335 = Main.player[this.target].position.Y - (this.position.Y + (float)this.height);
										if (num1335 < 180f)
										{
											this.velocity.Y = this.velocity.Y - 0.1f;
										}
										if (num1335 > 200f)
										{
											this.velocity.Y = this.velocity.Y + 0.1f;
										}
										if (this.velocity.Y > 6f)
										{
											this.velocity.Y = 6f;
										}
										if (this.velocity.Y < -6f)
										{
											this.velocity.Y = -6f;
										}
										this.rotation = this.velocity.X * 0.01f;
										if (Main.netMode != 1)
										{
											this.ai[3] += 1f;
											int num1336 = 15;
											if ((double)this.life < (double)this.lifeMax * 0.75)
											{
												num1336 = 14;
											}
											if ((double)this.life < (double)this.lifeMax * 0.5)
											{
												num1336 = 12;
											}
											if ((double)this.life < (double)this.lifeMax * 0.25)
											{
												num1336 = 10;
											}
											if ((double)this.life < (double)this.lifeMax * 0.1)
											{
												num1336 = 8;
											}
											num1336 += 3;
											if (this.ai[3] >= (float)num1336)
											{
												this.ai[3] = 0f;
												Vector2 vector162 = new Vector2(base.Center.X, this.position.Y + (float)this.height - 14f);
												int i2 = (int)(vector162.X / 16f);
												int j2 = (int)(vector162.Y / 16f);
												if (!WorldGen.SolidTile(i2, j2))
												{
													float num1337 = this.velocity.Y;
													if (num1337 < 0f)
													{
														num1337 = 0f;
													}
													num1337 += 3f;
													float speedX2 = this.velocity.X * 0.25f;
													Projectile.NewProjectile(vector162.X, vector162.Y, speedX2, num1337, 349, 37, 0f, Main.myPlayer, (float)Main.rand.Next(5), 0f);
												}
											}
										}
										if (Main.netMode != 1)
										{
											this.ai[1] += (float)Main.rand.Next(1, 4);
											if (this.ai[1] > 600f)
											{
												this.ai[0] = -1f;
											}
										}
									}
									else if (this.ai[0] == 2f)
									{
										this.TargetClosest(true);
										Vector2 vector163 = new Vector2(base.Center.X, base.Center.Y - 20f);
										float num1338 = (float)Main.rand.Next(-1000, 1001);
										float num1339 = (float)Main.rand.Next(-1000, 1001);
										float num1340 = (float)Math.Sqrt((double)(num1338 * num1338 + num1339 * num1339));
										float num1341 = 15f;
										this.velocity *= 0.95f;
										num1340 = num1341 / num1340;
										num1338 *= num1340;
										num1339 *= num1340;
										this.rotation += 0.2f;
										vector163.X += num1338 * 4f;
										vector163.Y += num1339 * 4f;
										this.ai[3] += 1f;
										int num1342 = 7;
										if ((double)this.life < (double)this.lifeMax * 0.75)
										{
											num1342--;
										}
										if ((double)this.life < (double)this.lifeMax * 0.5)
										{
											num1342 -= 2;
										}
										if ((double)this.life < (double)this.lifeMax * 0.25)
										{
											num1342 -= 3;
										}
										if ((double)this.life < (double)this.lifeMax * 0.1)
										{
											num1342 -= 4;
										}
										if (this.ai[3] > (float)num1342)
										{
											this.ai[3] = 0f;
											Projectile.NewProjectile(vector163.X, vector163.Y, num1338, num1339, 349, 35, 0f, Main.myPlayer, 0f, 0f);
										}
										if (Main.netMode != 1)
										{
											this.ai[1] += (float)Main.rand.Next(1, 4);
											if (this.ai[1] > 500f)
											{
												this.ai[0] = -1f;
											}
										}
									}
									if (this.ai[0] == -1f)
									{
										int num1343 = Main.rand.Next(3);
										this.TargetClosest(true);
										if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) > 1000f)
										{
											num1343 = 0;
										}
										this.ai[0] = (float)num1343;
										this.ai[1] = 0f;
										this.ai[2] = 0f;
										this.ai[3] = 0f;
										return;
									}
								}
								else if (this.aiStyle == 61)
								{
									float num1344 = 2f;
									this.noGravity = true;
									this.noTileCollide = true;
									if (!Main.dayTime)
									{
										this.TargetClosest(true);
									}
									bool flag122 = false;
									if ((double)this.life < (double)this.lifeMax * 0.75)
									{
										num1344 = 3f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.5)
									{
										num1344 = 4f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.25)
									{
										num1344 = 5f;
									}
									if (Main.dayTime)
									{
										if (this.timeLeft > 10)
										{
											this.timeLeft = 10;
										}
										num1344 = 8f;
										if (this.velocity.X == 0f)
										{
											this.velocity.X = 0.1f;
										}
									}
									else if (this.ai[0] == 0f)
									{
										this.ai[1] += 1f;
										if (this.ai[1] >= 300f && Main.netMode != 1)
										{
											this.TargetClosest(true);
											this.ai[1] = 0f;
											this.ai[0] = 1f;
											this.netUpdate = true;
										}
									}
									else if (this.ai[0] == 1f)
									{
										this.ai[1] += 1f;
										flag122 = true;
										int num1345 = 16;
										if ((double)this.life < (double)this.lifeMax * 0.25)
										{
											num1345 = 8;
										}
										else if ((double)this.life < (double)this.lifeMax * 0.5)
										{
											num1345 = 11;
										}
										else if ((double)this.life < (double)this.lifeMax * 0.75)
										{
											num1345 = 14;
										}
										if (this.ai[1] % (float)num1345 == 0f)
										{
											Vector2 vector164 = new Vector2(base.Center.X + (float)(this.direction * 50), base.Center.Y + (float)Main.rand.Next(15, 36));
											float num1346 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector164.X;
											float num1347 = Main.player[this.target].Center.Y - vector164.Y;
											num1346 += (float)Main.rand.Next(-40, 41);
											num1347 += (float)Main.rand.Next(-40, 41);
											float num1348 = (float)Math.Sqrt((double)(num1346 * num1346 + num1347 * num1347));
											float num1349 = 15f;
											num1348 = num1349 / num1348;
											num1346 *= num1348;
											num1347 *= num1348;
											num1346 *= 1f + (float)Main.rand.Next(-20, 21) * 0.015f;
											num1347 *= 1f + (float)Main.rand.Next(-20, 21) * 0.015f;
											Projectile.NewProjectile(vector164.X, vector164.Y, num1346, num1347, 180, 36, 0f, Main.myPlayer, 0f, 0f);
										}
										if (this.ai[1] > 240f)
										{
											this.ai[0] = 0f;
											this.ai[1] = 0f;
										}
									}
									if (Main.netMode != 1)
									{
										int num1350 = 600;
										int num1351 = 1200;
										int num1352 = 2700;
										if ((double)this.life < (double)this.lifeMax * 0.25)
										{
											num1350 = (int)((double)num1350 * 0.5);
											num1351 = (int)((double)num1351 * 0.5);
											num1352 = (int)((double)num1352 * 0.5);
										}
										else if ((double)this.life < (double)this.lifeMax * 0.5)
										{
											num1350 = (int)((double)num1350 * 0.75);
											num1351 = (int)((double)num1351 * 0.75);
											num1352 = (int)((double)num1352 * 0.75);
										}
										else if ((double)this.life < (double)this.lifeMax * 0.75)
										{
											num1350 = (int)((double)num1350 * 0.9);
											num1351 = (int)((double)num1351 * 0.9);
											num1352 = (int)((double)num1352 * 0.9);
										}
										if (Main.rand.Next(num1350) == 0)
										{
											Vector2 vector165 = new Vector2(base.Center.X - (float)(this.direction * 24), base.Center.Y - 64f);
											float num1353 = (float)(Main.rand.Next(1, 100) * this.direction);
											float num1354 = 1f;
											float num1355 = (float)Math.Sqrt((double)(num1353 * num1353 + num1354 * num1354));
											float num1356 = 1f;
											num1355 = num1356 / num1355;
											num1353 *= num1355;
											num1354 *= num1355;
											Projectile.NewProjectile(vector165.X, vector165.Y, num1353, num1354, 352, 80, 0f, Main.myPlayer, 0f, 0f);
										}
										if (Main.rand.Next(num1351) == 0)
										{
											this.localAI[1] = 1f;
										}
										if (this.localAI[1] >= 1f)
										{
											this.localAI[1] += 1f;
											int num1357 = 12;
											if (this.localAI[1] % (float)num1357 == 0f)
											{
												Vector2 vector166 = new Vector2(base.Center.X - (float)(this.direction * 24), base.Center.Y - 64f);
												float num1358 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector166.X;
												float num1359 = Main.player[this.target].Center.Y - vector166.Y;
												num1358 += (float)Main.rand.Next(-50, 51);
												num1359 += (float)Main.rand.Next(-50, 51);
												float num1360 = (float)Math.Sqrt((double)(num1358 * num1358 + num1359 * num1359));
												float num1361 = 12.5f;
												num1360 = num1361 / num1360;
												num1358 *= num1360;
												num1359 *= num1360;
												num1358 *= 1f + (float)Main.rand.Next(-20, 21) * 0.015f;
												num1359 *= 1f + (float)Main.rand.Next(-20, 21) * 0.015f;
												Projectile.NewProjectile(vector166.X, vector166.Y, num1358, num1359, 350, 42, 0f, Main.myPlayer, 0f, 0f);
											}
											if (this.localAI[1] >= 100f)
											{
												this.localAI[1] = 0f;
											}
										}
										if (Main.rand.Next(num1352) == 0)
										{
											this.localAI[2] = 2f;
										}
										if (this.localAI[2] > 0f)
										{
											this.localAI[2] += 1f;
											int num1362 = 9;
											if (this.localAI[2] % (float)num1362 == 0f)
											{
												Vector2 vector167 = new Vector2(base.Center.X - (float)(this.direction * 24), base.Center.Y - 64f);
												float num1363 = (float)Main.rand.Next(-100, 101);
												float num1364 = -300f;
												float num1365 = (float)Math.Sqrt((double)(num1363 * num1363 + num1364 * num1364));
												float num1366 = 11f;
												num1365 = num1366 / num1365;
												num1363 *= num1365;
												num1364 *= num1365;
												num1363 *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
												num1364 *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
												Projectile.NewProjectile(vector167.X, vector167.Y, num1363, num1364, 351, 50, 0f, Main.myPlayer, 0f, 0f);
											}
											if (this.localAI[2] >= 100f)
											{
												this.localAI[2] = 0f;
											}
										}
									}
									if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) < 50f)
									{
										flag122 = true;
									}
									if (flag122)
									{
										this.velocity.X = this.velocity.X * 0.9f;
										if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
										{
											this.velocity.X = 0f;
										}
									}
									else
									{
										if (this.direction > 0)
										{
											this.velocity.X = (this.velocity.X * 20f + num1344) / 21f;
										}
										if (this.direction < 0)
										{
											this.velocity.X = (this.velocity.X * 20f - num1344) / 21f;
										}
									}
									int num1367 = 80;
									int num1368 = 20;
									Vector2 position8 = new Vector2(base.Center.X - (float)(num1367 / 2), this.position.Y + (float)this.height - (float)num1368);
									bool flag123 = false;
									if (this.position.X < Main.player[this.target].position.X && this.position.X + (float)this.width > Main.player[this.target].position.X + (float)Main.player[this.target].width && this.position.Y + (float)this.height < Main.player[this.target].position.Y + (float)Main.player[this.target].height - 16f)
									{
										flag123 = true;
									}
									if (flag123)
									{
										this.velocity.Y = this.velocity.Y + 0.5f;
									}
									else if (Collision.SolidCollision(position8, num1367, num1368))
									{
										if (this.velocity.Y > 0f)
										{
											this.velocity.Y = 0f;
										}
										if ((double)this.velocity.Y > -0.2)
										{
											this.velocity.Y = this.velocity.Y - 0.025f;
										}
										else
										{
											this.velocity.Y = this.velocity.Y - 0.2f;
										}
										if (this.velocity.Y < -4f)
										{
											this.velocity.Y = -4f;
										}
									}
									else
									{
										if (this.velocity.Y < 0f)
										{
											this.velocity.Y = 0f;
										}
										if ((double)this.velocity.Y < 0.1)
										{
											this.velocity.Y = this.velocity.Y + 0.025f;
										}
										else
										{
											this.velocity.Y = this.velocity.Y + 0.5f;
										}
									}
									if (this.velocity.Y > 10f)
									{
										this.velocity.Y = 10f;
										return;
									}
								}
								else if (this.aiStyle == 62)
								{
									this.TargetClosest(true);
									this.rotation = Math.Abs(this.velocity.X) * (float)this.direction * 0.1f;
									this.spriteDirection = this.direction;
									float num1369 = 7f;
									Vector2 vector168 = new Vector2(base.Center.X + (float)(this.direction * 20), base.Center.Y + 6f);
									float num1370 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector168.X;
									float num1371 = Main.player[this.target].position.Y - vector168.Y;
									float num1372 = (float)Math.Sqrt((double)(num1370 * num1370 + num1371 * num1371));
									float num1373 = num1369 / num1372;
									num1370 *= num1373;
									num1371 *= num1373;
									bool flag124 = Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1);
									if (Main.dayTime)
									{
										int num1374 = 60;
										this.velocity.X = (this.velocity.X * (float)(num1374 - 1) - num1370) / (float)num1374;
										this.velocity.Y = (this.velocity.Y * (float)(num1374 - 1) - num1371) / (float)num1374;
										if (this.timeLeft > 10)
										{
											this.timeLeft = 10;
											return;
										}
									}
									else
									{
										if (num1372 > 600f || !flag124)
										{
											int num1375 = 60;
											this.velocity.X = (this.velocity.X * (float)(num1375 - 1) + num1370) / (float)num1375;
											this.velocity.Y = (this.velocity.Y * (float)(num1375 - 1) + num1371) / (float)num1375;
											return;
										}
										this.velocity *= 0.98f;
										if (Math.Abs(this.velocity.X) < 1f && Math.Abs(this.velocity.Y) < 1f && Main.netMode != 1)
										{
											this.localAI[0] += 1f;
											if (this.localAI[0] >= 15f)
											{
												this.localAI[0] = 0f;
												num1370 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector168.X;
												num1371 = Main.player[this.target].Center.Y - vector168.Y;
												num1370 += (float)Main.rand.Next(-35, 36);
												num1371 += (float)Main.rand.Next(-35, 36);
												num1370 *= 1f + (float)Main.rand.Next(-20, 21) * 0.015f;
												num1371 *= 1f + (float)Main.rand.Next(-20, 21) * 0.015f;
												num1372 = (float)Math.Sqrt((double)(num1370 * num1370 + num1371 * num1371));
												num1369 = 10f;
												num1373 = num1369 / num1372;
												num1370 *= num1373;
												num1371 *= num1373;
												num1370 *= 1f + (float)Main.rand.Next(-20, 21) * 0.0125f;
												num1371 *= 1f + (float)Main.rand.Next(-20, 21) * 0.0125f;
												Projectile.NewProjectile(vector168.X, vector168.Y, num1370, num1371, 180, 32, 0f, Main.myPlayer, 0f, 0f);
												return;
											}
										}
									}
								}
								else if (this.aiStyle == 63)
								{
									this.TargetClosest(true);
									float num1376 = 11f;
									Vector2 vector169 = new Vector2(base.Center.X + (float)(this.direction * 20), base.Center.Y + 6f);
									float num1377 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector169.X;
									float num1378 = Main.player[this.target].Center.Y - vector169.Y;
									float num1379 = (float)Math.Sqrt((double)(num1377 * num1377 + num1378 * num1378));
									float num1380 = num1376 / num1379;
									num1377 *= num1380;
									num1378 *= num1380;
									if (Main.dayTime)
									{
										num1377 = -num1377;
										num1378 = -num1378;
									}
									this.ai[0] -= 1f;
									if (num1379 < 200f || this.ai[0] > 0f)
									{
										if (num1379 < 200f)
										{
											this.ai[0] = 20f;
										}
										if (this.velocity.X < 0f)
										{
											this.direction = -1;
										}
										else
										{
											this.direction = 1;
										}
										this.rotation += (float)this.direction * 0.3f;
										return;
									}
									this.velocity.X = (this.velocity.X * 50f + num1377) / 51f;
									this.velocity.Y = (this.velocity.Y * 50f + num1378) / 51f;
									if (num1379 < 350f)
									{
										this.velocity.X = (this.velocity.X * 10f + num1377) / 11f;
										this.velocity.Y = (this.velocity.Y * 10f + num1378) / 11f;
									}
									if (num1379 < 300f)
									{
										this.velocity.X = (this.velocity.X * 7f + num1377) / 8f;
										this.velocity.Y = (this.velocity.Y * 7f + num1378) / 8f;
									}
									this.rotation = this.velocity.X * 0.15f;
									return;
								}
								else
								{
									if (this.aiStyle == 64)
									{
										float num1381 = this.ai[0];
										float num1382 = this.ai[1];
										if (Main.netMode != 1)
										{
											this.localAI[0] -= 1f;
											if (this.ai[3] == 0f)
											{
												this.ai[3] = (float)Main.rand.Next(75, 111) * 0.01f;
											}
											if (this.localAI[0] <= 0f)
											{
												this.TargetClosest(true);
												this.localAI[0] = (float)Main.rand.Next(60, 180);
												float num1383 = Math.Abs(base.Center.X - Main.player[this.target].Center.X);
												if (num1383 > 700f && this.localAI[3] == 0f)
												{
													float num1384 = (float)Main.rand.Next(50, 151) * 0.01f;
													if (num1383 > 1000f)
													{
														num1384 = (float)Main.rand.Next(150, 201) * 0.01f;
													}
													else if (num1383 > 850f)
													{
														num1384 = (float)Main.rand.Next(100, 151) * 0.01f;
													}
													int num1385 = this.direction * Main.rand.Next(100, 251);
													int num1386 = Main.rand.Next(-50, 51);
													if (this.position.Y > Main.player[this.target].position.Y - 100f)
													{
														num1386 -= Main.rand.Next(100, 251);
													}
													float num1387 = num1384 / (float)Math.Sqrt((double)(num1385 * num1385 + num1386 * num1386));
													num1381 = (float)num1385 * num1387;
													num1382 = (float)num1386 * num1387;
												}
												else
												{
													this.localAI[3] = 1f;
													float num1388 = (float)Main.rand.Next(5, 151) * 0.01f;
													int num1389 = Main.rand.Next(-100, 101);
													int num1390 = Main.rand.Next(-100, 101);
													float num1391 = num1388 / (float)Math.Sqrt((double)(num1389 * num1389 + num1390 * num1390));
													num1381 = (float)num1389 * num1391;
													num1382 = (float)num1390 * num1391;
												}
												this.netUpdate = true;
											}
										}
										this.scale = this.ai[3];
										if (this.localAI[2] > 0f)
										{
											int i3 = (int)base.Center.X / 16;
											int j3 = (int)base.Center.Y / 16;
											if (this.localAI[2] > 3f)
											{
												if (this.type == 358)
												{
													Lighting.AddLight(i3, j3, 0.101249993f * this.scale, 0.21374999f * this.scale, 0.225f * this.scale);
												}
												else
												{
													Lighting.AddLight(i3, j3, 0.109500006f * this.scale, 0.15f * this.scale, 0.0615f * this.scale);
												}
											}
											this.localAI[2] -= 1f;
										}
										else if (this.localAI[1] > 0f)
										{
											this.localAI[1] -= 1f;
										}
										else
										{
											this.localAI[1] = (float)Main.rand.Next(30, 180);
											if (!Main.dayTime || (double)(this.position.Y / 16f) > Main.worldSurface + 10.0)
											{
												this.localAI[2] = (float)Main.rand.Next(10, 30);
											}
										}
										int num1392 = 80;
										this.velocity.X = (this.velocity.X * (float)(num1392 - 1) + num1381) / (float)num1392;
										this.velocity.Y = (this.velocity.Y * (float)(num1392 - 1) + num1382) / (float)num1392;
										if (this.velocity.Y > 0f)
										{
											int num1393 = 4;
											int num1394 = (int)base.Center.X / 16;
											int num1395 = (int)base.Center.Y / 16;
											for (int num1396 = num1395; num1396 < num1395 + num1393; num1396++)
											{
												if (Main.tile[num1394, num1396] != null && ((Main.tile[num1394, num1396].nactive() && Main.tileSolid[(int)Main.tile[num1394, num1396].type]) || Main.tile[num1394, num1396].liquid > 0))
												{
													num1382 *= -1f;
													if (this.velocity.Y > 0f)
													{
														this.velocity.Y = this.velocity.Y * 0.9f;
													}
												}
											}
										}
										if (this.velocity.Y < 0f)
										{
											int num1397 = 30;
											bool flag125 = false;
											int num1398 = (int)base.Center.X / 16;
											int num1399 = (int)base.Center.Y / 16;
											for (int num1400 = num1399; num1400 < num1399 + num1397; num1400++)
											{
												if (Main.tile[num1398, num1400] != null && Main.tile[num1398, num1400].nactive() && Main.tileSolid[(int)Main.tile[num1398, num1400].type])
												{
													flag125 = true;
												}
											}
											if (!flag125)
											{
												num1382 *= -1f;
												if (this.velocity.Y < 0f)
												{
													this.velocity.Y = this.velocity.Y * 0.9f;
												}
											}
										}
										if (this.collideX)
										{
											if (this.velocity.X < 0f)
											{
												num1381 = Math.Abs(num1381);
											}
											else
											{
												num1381 = -Math.Abs(num1381);
											}
											this.velocity.X = this.velocity.X * -0.2f;
										}
										if (this.velocity.X < 0f)
										{
											this.direction = -1;
										}
										if (this.velocity.X > 0f)
										{
											this.direction = 1;
										}
										this.ai[0] = num1381;
										this.ai[1] = num1382;
										return;
									}
									if (this.aiStyle == 65)
									{
										float num1401 = this.ai[0];
										float num1402 = this.ai[1];
										if (Main.netMode != 1)
										{
											if (this.ai[2] == 0f)
											{
												int num1403 = 0;
												int num1404 = 4;
												int num1405 = 6;
												int num1406 = 3;
												int num1407 = 7;
												int num1408 = 2;
												int num1409 = 1;
												int num1410 = 5;
												int num1411 = Main.rand.Next(100);
												if (num1411 == 0)
												{
													num1411 = num1410;
												}
												else if (num1411 < 3)
												{
													num1411 = num1409;
												}
												else if (num1411 < 9)
												{
													num1411 = num1408;
												}
												else if (num1411 < 19)
												{
													num1411 = num1407;
												}
												else if (num1411 < 34)
												{
													num1411 = num1406;
												}
												else if (num1411 < 53)
												{
													num1411 = num1405;
												}
												else if (num1411 < 75)
												{
													num1411 = num1404;
												}
												else
												{
													num1411 = num1403;
												}
												this.ai[2] = (float)(1 + num1411);
											}
											if (this.ai[3] == 0f)
											{
												this.ai[3] = (float)Main.rand.Next(75, 111) * 0.01f;
											}
											this.localAI[0] -= 1f;
											if (this.localAI[0] <= 0f)
											{
												this.TargetClosest(true);
												this.localAI[0] = (float)Main.rand.Next(90, 240);
												float num1412 = Math.Abs(base.Center.X - Main.player[this.target].Center.X);
												if (num1412 > 700f && this.localAI[3] == 0f)
												{
													float num1413 = (float)Main.rand.Next(50, 151) * 0.01f;
													if (num1412 > 1000f)
													{
														num1413 = (float)Main.rand.Next(150, 201) * 0.01f;
													}
													else if (num1412 > 850f)
													{
														num1413 = (float)Main.rand.Next(100, 151) * 0.01f;
													}
													int num1414 = this.direction * Main.rand.Next(100, 251);
													int num1415 = Main.rand.Next(-50, 51);
													if (this.position.Y > Main.player[this.target].position.Y - 100f)
													{
														num1415 -= Main.rand.Next(100, 251);
													}
													float num1416 = num1413 / (float)Math.Sqrt((double)(num1414 * num1414 + num1415 * num1415));
													num1401 = (float)num1414 * num1416;
													num1402 = (float)num1415 * num1416;
												}
												else
												{
													this.localAI[3] = 1f;
													float num1417 = (float)Main.rand.Next(26, 301) * 0.01f;
													int num1418 = Main.rand.Next(-100, 101);
													int num1419 = Main.rand.Next(-100, 101);
													float num1420 = num1417 / (float)Math.Sqrt((double)(num1418 * num1418 + num1419 * num1419));
													num1401 = (float)num1418 * num1420;
													num1402 = (float)num1419 * num1420;
												}
												this.netUpdate = true;
											}
										}
										this.scale = this.ai[3];
										int num1421 = 60;
										this.velocity.X = (this.velocity.X * (float)(num1421 - 1) + num1401) / (float)num1421;
										this.velocity.Y = (this.velocity.Y * (float)(num1421 - 1) + num1402) / (float)num1421;
										if (this.velocity.Y > 0f)
										{
											int num1422 = 3;
											int num1423 = (int)base.Center.X / 16;
											int num1424 = (int)base.Center.Y / 16;
											for (int num1425 = num1424; num1425 < num1424 + num1422; num1425++)
											{
												if (Main.tile[num1423, num1425] != null && ((Main.tile[num1423, num1425].nactive() && Main.tileSolid[(int)Main.tile[num1423, num1425].type]) || Main.tile[num1423, num1425].liquid > 0))
												{
													num1402 *= -1f;
													if (this.velocity.Y > 0f)
													{
														this.velocity.Y = this.velocity.Y * 0.9f;
													}
												}
											}
										}
										if (this.velocity.Y < 0f)
										{
											int num1426 = 30;
											bool flag126 = false;
											int num1427 = (int)base.Center.X / 16;
											int num1428 = (int)base.Center.Y / 16;
											for (int num1429 = num1428; num1429 < num1428 + num1426; num1429++)
											{
												if (Main.tile[num1427, num1429] != null && Main.tile[num1427, num1429].nactive() && Main.tileSolid[(int)Main.tile[num1427, num1429].type])
												{
													flag126 = true;
												}
											}
											if (!flag126)
											{
												num1402 *= -1f;
												if (this.velocity.Y < 0f)
												{
													this.velocity.Y = this.velocity.Y * 0.9f;
												}
											}
										}
										if (this.collideX)
										{
											if (this.velocity.X < 0f)
											{
												num1401 = Math.Abs(num1401);
											}
											else
											{
												num1401 = -Math.Abs(num1401);
											}
											this.velocity.X = this.velocity.X * -0.2f;
										}
										if (this.velocity.X < 0f)
										{
											this.direction = -1;
										}
										if (this.velocity.X > 0f)
										{
											this.direction = 1;
										}
										this.ai[0] = num1401;
										this.ai[1] = num1402;
										if (this.type == 356)
										{
											this.catchItem = (short)(1994f + this.ai[2] - 1f);
											return;
										}
									}
									else if (this.aiStyle == 66)
									{
										if (this.type == 484)
										{
											float num1430 = (float)Main.rand.Next(90, 111) * 0.01f;
											num1430 *= (Main.essScale + 0.5f) / 2f;
											Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.3f * num1430, 0.1f * num1430, 0.25f * num1430);
										}
										if (this.type == 357 || this.type == 448 || (this.type >= 484 && this.type <= 487))
										{
											if (this.localAI[2] < 90f)
											{
												this.localAI[2] += 1f;
											}
											else
											{
												this.friendly = false;
											}
										}
										if (this.velocity.Y == 0f)
										{
											if (this.ai[0] == 1f)
											{
												if (this.direction == 0)
												{
													this.TargetClosest(true);
												}
												if (this.collideX)
												{
													this.direction *= -1;
												}
												float num1431 = 0.2f;
												if (this.type == 485)
												{
													num1431 = 0.25f;
												}
												if (this.type == 486)
												{
													num1431 = 0.325f;
												}
												if (this.type == 487)
												{
													num1431 = 0.4f;
												}
												this.velocity.X = num1431 * (float)this.direction;
												if (this.type == 374)
												{
													this.velocity.X = this.velocity.X * 3f;
												}
											}
											else
											{
												this.velocity.X = 0f;
											}
											if (Main.netMode != 1)
											{
												this.localAI[1] -= 1f;
												if (this.localAI[1] <= 0f)
												{
													if (this.ai[0] == 1f)
													{
														this.ai[0] = 0f;
														this.localAI[1] = (float)Main.rand.Next(300, 900);
													}
													else
													{
														this.ai[0] = 1f;
														this.localAI[1] = (float)Main.rand.Next(600, 1800);
													}
													this.netUpdate = true;
												}
											}
										}
										if (this.type == 374)
										{
											this.spriteDirection = this.direction;
											bool flag127 = false;
											for (int num1432 = 0; num1432 < 255; num1432++)
											{
												Player player4 = Main.player[num1432];
												if (player4.active && !player4.dead && Vector2.Distance(player4.Center, base.Center) <= 160f)
												{
													flag127 = true;
													break;
												}
											}
											int num1433 = 90;
											if (flag127 && this.ai[1] < (float)num1433)
											{
												this.ai[1] += 1f;
											}
											if (this.ai[1] == (float)num1433 && Main.netMode != 1)
											{
												this.position.Y = this.position.Y + 16f;
												this.Transform(375);
												this.netUpdate = true;
												return;
											}
										}
									}
									else if (this.aiStyle == 67)
									{
										if (this.type == 359)
										{
											if (this.ai[3] != 0f)
											{
												this.scale = this.ai[3];
												int num1434 = (int)(12f * this.scale);
												int num1435 = (int)(12f * this.scale);
												if (num1434 != this.width)
												{
													this.position.X = this.position.X + (float)(this.width / 2) - (float)num1434 - 2f;
													this.width = num1434;
												}
												if (num1435 != this.height)
												{
													this.position.Y = this.position.Y + (float)this.height - (float)num1435;
													this.height = num1435;
												}
											}
											if (this.ai[3] == 0f && Main.netMode != 1)
											{
												this.ai[3] = (float)Main.rand.Next(80, 111) * 0.01f;
												this.netUpdate = true;
											}
										}
										if (this.type == 360)
										{
											Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.1f, 0.2f, 0.7f);
										}
										float num1436 = 0.3f;
										if (this.type == 360)
										{
											num1436 = 0.6f;
										}
										if (this.ai[0] == 0f)
										{
											this.TargetClosest(true);
											this.directionY = 1;
											this.ai[0] = 1f;
											if (this.direction > 0)
											{
												this.spriteDirection = 1;
											}
										}
										bool flag128 = false;
										if (Main.netMode != 1)
										{
											if (this.ai[2] == 0f && Main.rand.Next(7200) == 0)
											{
												this.ai[2] = 2f;
												this.netUpdate = true;
											}
											if (!this.collideX && !this.collideY)
											{
												this.localAI[3] += 1f;
												if (this.localAI[3] > 5f)
												{
													this.ai[2] = 2f;
													this.netUpdate = true;
												}
											}
											else
											{
												this.localAI[3] = 0f;
											}
										}
										if (this.ai[2] > 0f)
										{
											this.ai[1] = 0f;
											this.ai[0] = 1f;
											this.directionY = 1;
											if (this.velocity.Y > num1436)
											{
												this.rotation += (float)this.direction * 0.1f;
											}
											else
											{
												this.rotation = 0f;
											}
											this.spriteDirection = this.direction;
											this.velocity.X = num1436 * (float)this.direction;
											this.noGravity = false;
											int num1437 = (int)(base.Center.X + (float)(this.width / 2 * -(float)this.direction)) / 16;
											int num1438 = (int)(this.position.Y + (float)this.height + 8f) / 16;
											if (Main.tile[num1437, num1438] != null && !Main.tile[num1437, num1438].topSlope() && this.collideY)
											{
												this.ai[2] -= 1f;
											}
											num1438 = (int)(this.position.Y + (float)this.height - 4f) / 16;
											num1437 = (int)(base.Center.X + (float)(this.width / 2 * this.direction)) / 16;
											if (Main.tile[num1437, num1438] != null && Main.tile[num1437, num1438].bottomSlope())
											{
												this.direction *= -1;
											}
											if (this.collideX && this.velocity.Y == 0f)
											{
												flag128 = true;
												this.ai[2] = 0f;
												this.directionY = -1;
												this.ai[1] = 1f;
											}
											if (this.velocity.Y == 0f)
											{
												if (this.localAI[1] == this.position.X)
												{
													this.localAI[2] += 1f;
													if (this.localAI[2] > 10f)
													{
														this.direction = 1;
														this.velocity.X = (float)this.direction * num1436;
														this.localAI[2] = 0f;
													}
												}
												else
												{
													this.localAI[2] = 0f;
													this.localAI[1] = this.position.X;
												}
											}
										}
										if (this.ai[2] == 0f)
										{
											this.noGravity = true;
											if (this.ai[1] == 0f)
											{
												if (this.collideY)
												{
													this.ai[0] = 2f;
												}
												if (!this.collideY && this.ai[0] == 2f)
												{
													this.direction = -this.direction;
													this.ai[1] = 1f;
													this.ai[0] = 1f;
												}
												if (this.collideX)
												{
													this.directionY = -this.directionY;
													this.ai[1] = 1f;
												}
											}
											else
											{
												if (this.collideX)
												{
													this.ai[0] = 2f;
												}
												if (!this.collideX && this.ai[0] == 2f)
												{
													this.directionY = -this.directionY;
													this.ai[1] = 0f;
													this.ai[0] = 1f;
												}
												if (this.collideY)
												{
													this.direction = -this.direction;
													this.ai[1] = 0f;
												}
											}
											if (!flag128)
											{
												float num1439 = this.rotation;
												if (this.directionY < 0)
												{
													if (this.direction < 0)
													{
														if (this.collideX)
														{
															this.rotation = 1.57f;
															this.spriteDirection = -1;
														}
														else if (this.collideY)
														{
															this.rotation = 3.14f;
															this.spriteDirection = 1;
														}
													}
													else if (this.collideY)
													{
														this.rotation = 3.14f;
														this.spriteDirection = -1;
													}
													else if (this.collideX)
													{
														this.rotation = 4.71f;
														this.spriteDirection = 1;
													}
												}
												else if (this.direction < 0)
												{
													if (this.collideY)
													{
														this.rotation = 0f;
														this.spriteDirection = -1;
													}
													else if (this.collideX)
													{
														this.rotation = 1.57f;
														this.spriteDirection = 1;
													}
												}
												else if (this.collideX)
												{
													this.rotation = 4.71f;
													this.spriteDirection = -1;
												}
												else if (this.collideY)
												{
													this.rotation = 0f;
													this.spriteDirection = 1;
												}
												float num1440 = this.rotation;
												this.rotation = num1439;
												if ((double)this.rotation > 6.28)
												{
													this.rotation -= 6.28f;
												}
												if (this.rotation < 0f)
												{
													this.rotation += 6.28f;
												}
												float num1441 = Math.Abs(this.rotation - num1440);
												float num1442 = 0.1f;
												if (this.rotation > num1440)
												{
													if ((double)num1441 > 3.14)
													{
														this.rotation += num1442;
													}
													else
													{
														this.rotation -= num1442;
														if (this.rotation < num1440)
														{
															this.rotation = num1440;
														}
													}
												}
												if (this.rotation < num1440)
												{
													if ((double)num1441 > 3.14)
													{
														this.rotation -= num1442;
													}
													else
													{
														this.rotation += num1442;
														if (this.rotation > num1440)
														{
															this.rotation = num1440;
														}
													}
												}
											}
											this.velocity.X = num1436 * (float)this.direction;
											this.velocity.Y = num1436 * (float)this.directionY;
											return;
										}
									}
									else if (this.aiStyle == 68)
									{
										this.noGravity = true;
										if (this.ai[0] == 0f)
										{
											this.noGravity = false;
											int direction6 = this.direction;
											int num1443 = this.target;
											this.TargetClosest(true);
											if (num1443 >= 0 && direction6 != 0)
											{
												this.direction = direction6;
											}
											if (this.wet)
											{
												float num1444 = 2f;
												this.velocity.X = (this.velocity.X * 19f + num1444 * (float)this.direction) / 20f;
												int num1445 = (int)(base.Center.X + (float)((this.width / 2 + 8) * this.direction)) / 16;
												int num1446 = (int)(base.Center.Y / 16f);
												int j4 = (int)(this.position.Y / 16f);
												int num1447 = (int)((this.position.Y + (float)this.height) / 16f);
												if (Main.tile[num1445, num1446] == null)
												{
													Main.tile[num1445, num1446] = new Tile();
												}
												if (Main.tile[num1445, num1447] == null)
												{
													Main.tile[num1445, num1447] = new Tile();
												}
												if (WorldGen.SolidTile(num1445, num1446) || WorldGen.SolidTile(num1445, j4) || WorldGen.SolidTile(num1445, num1447) || Main.tile[num1445, num1447].liquid == 0)
												{
													this.direction *= -1;
												}
												this.spriteDirection = this.direction;
												if (this.velocity.Y > 0f)
												{
													this.velocity.Y = this.velocity.Y * 0.5f;
												}
												this.noGravity = true;
												num1445 = (int)(base.Center.X / 16f);
												num1446 = (int)(base.Center.Y / 16f);
												float num1448 = this.position.Y + (float)this.height;
												if (Main.tile[num1445, num1446 - 1] == null)
												{
													Main.tile[num1445, num1446 - 1] = new Tile();
												}
												if (Main.tile[num1445, num1446] == null)
												{
													Main.tile[num1445, num1446] = new Tile();
												}
												if (Main.tile[num1445, num1446 + 1] == null)
												{
													Main.tile[num1445, num1446 + 1] = new Tile();
												}
												if (Main.tile[num1445, num1446 - 1].liquid > 0)
												{
													num1448 = (float)(num1446 * 16);
													num1448 -= (float)(Main.tile[num1445, num1446 - 1].liquid / 16);
												}
												else if (Main.tile[num1445, num1446].liquid > 0)
												{
													num1448 = (float)((num1446 + 1) * 16);
													num1448 -= (float)(Main.tile[num1445, num1446].liquid / 16);
												}
												else if (Main.tile[num1445, num1446 + 1].liquid > 0)
												{
													num1448 = (float)((num1446 + 2) * 16);
													num1448 -= (float)(Main.tile[num1445, num1446 + 1].liquid / 16);
												}
												num1448 -= 6f;
												if (base.Center.Y > num1448)
												{
													this.velocity.Y = this.velocity.Y - 0.1f;
													if (this.velocity.Y < -8f)
													{
														this.velocity.Y = -8f;
													}
													if (base.Center.Y + this.velocity.Y < num1448)
													{
														this.velocity.Y = num1448 - base.Center.Y;
													}
												}
												else
												{
													this.velocity.Y = num1448 - base.Center.Y;
												}
											}
											if (Main.netMode != 1)
											{
												if (!this.wet)
												{
													this.ai[0] = 1f;
													this.netUpdate = true;
													this.direction = -this.direction;
													return;
												}
												Rectangle rectangle14 = new Rectangle((int)Main.player[this.target].position.X, (int)Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height);
												Rectangle rectangle15 = new Rectangle((int)this.position.X - 100, (int)this.position.Y - 100, this.width + 200, this.height + 200);
												if (rectangle15.Intersects(rectangle14) || this.life < this.lifeMax)
												{
													this.ai[0] = 1f;
													this.velocity.Y = this.velocity.Y - 6f;
													this.netUpdate = true;
													this.direction = -this.direction;
													return;
												}
											}
										}
										else if (!Main.player[this.target].dead)
										{
											bool flag129 = false;
											this.ai[1] += 1f;
											if (this.ai[1] >= 300f)
											{
												flag129 = true;
											}
											if (flag129)
											{
												if (this.velocity.Y == 0f || this.collideY || this.wet)
												{
													this.velocity.X = 0f;
													this.velocity.Y = 0f;
													this.ai[0] = 0f;
													this.ai[1] = 0f;
													if (Main.netMode != 1)
													{
														if ((this.type == 363 || this.type == 365) && !this.wet)
														{
															int direction7 = this.direction;
															this.Transform(this.type - 1);
															this.TargetClosest(true);
															this.direction = direction7;
															this.ai[0] = 0f;
															this.ai[1] = (float)(200 + Main.rand.Next(200));
														}
														this.netUpdate = true;
														return;
													}
												}
												else
												{
													this.velocity.X = this.velocity.X * 0.98f;
													this.velocity.Y = this.velocity.Y + 0.1f;
													if (this.velocity.Y > 2f)
													{
														this.velocity.Y = 2f;
														return;
													}
												}
											}
											else
											{
												if (this.collideX)
												{
													this.direction *= -1;
													this.velocity.X = this.oldVelocity.X * -0.5f;
													if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
													{
														this.velocity.X = 2f;
													}
													if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
													{
														this.velocity.X = -2f;
													}
												}
												if (this.collideY)
												{
													this.velocity.Y = this.oldVelocity.Y * -0.5f;
													if (this.velocity.Y > 0f && this.velocity.Y < 1f)
													{
														this.velocity.Y = 1f;
													}
													if (this.velocity.Y < 0f && this.velocity.Y > -1f)
													{
														this.velocity.Y = -1f;
													}
												}
												if (this.direction == -1 && this.velocity.X > -3f)
												{
													this.velocity.X = this.velocity.X - 0.1f;
													if (this.velocity.X > 3f)
													{
														this.velocity.X = this.velocity.X - 0.1f;
													}
													else if (this.velocity.X > 0f)
													{
														this.velocity.X = this.velocity.X - 0.05f;
													}
													if (this.velocity.X < -3f)
													{
														this.velocity.X = -3f;
													}
												}
												else if (this.direction == 1 && this.velocity.X < 3f)
												{
													this.velocity.X = this.velocity.X + 0.1f;
													if (this.velocity.X < -3f)
													{
														this.velocity.X = this.velocity.X + 0.1f;
													}
													else if (this.velocity.X < 0f)
													{
														this.velocity.X = this.velocity.X + 0.05f;
													}
													if (this.velocity.X > 3f)
													{
														this.velocity.X = 3f;
													}
												}
												int num1449 = (int)((this.position.X + (float)(this.width / 2)) / 16f) + this.direction;
												int num1450 = (int)((this.position.Y + (float)this.height) / 16f);
												bool flag130 = true;
												int num1451 = 15;
												bool flag131 = false;
												for (int num1452 = num1450; num1452 < num1450 + num1451; num1452++)
												{
													if (Main.tile[num1449, num1452] == null)
													{
														Main.tile[num1449, num1452] = new Tile();
													}
													if ((Main.tile[num1449, num1452].nactive() && Main.tileSolid[(int)Main.tile[num1449, num1452].type]) || Main.tile[num1449, num1452].liquid > 0)
													{
														if (num1452 < num1450 + 5)
														{
															flag131 = true;
														}
														flag130 = false;
														break;
													}
												}
												if (flag130)
												{
													this.velocity.Y = this.velocity.Y + 0.1f;
												}
												else
												{
													this.velocity.Y = this.velocity.Y - 0.1f;
												}
												if (flag131)
												{
													this.velocity.Y = this.velocity.Y - 0.2f;
												}
												if (this.velocity.Y > 3f)
												{
													this.velocity.Y = 3f;
												}
												if (this.velocity.Y < -4f)
												{
													this.velocity.Y = -4f;
													return;
												}
											}
										}
									}
									else if (this.aiStyle == 69)
									{
										bool expertMode = Main.expertMode;
										float num1453 = expertMode ? (0.6f * Main.damageMultiplier) : 1f;
										bool flag132 = (double)this.life <= (double)this.lifeMax * 0.5;
										bool flag133 = expertMode && (double)this.life <= (double)this.lifeMax * 0.15;
										bool flag134 = this.ai[0] > 4f;
										bool flag135 = this.ai[0] > 9f;
										bool flag136 = this.ai[3] < 10f;
										if (flag135)
										{
											this.damage = (int)((float)this.defDamage * 1.1f * num1453);
											this.defense = 0;
										}
										else if (flag134)
										{
											this.damage = (int)((float)this.defDamage * 1.2f * num1453);
											this.defense = (int)((float)this.defDefense * 0.8f);
										}
										else
										{
											this.damage = this.defDamage;
											this.defense = this.defDefense;
										}
										int num1454 = expertMode ? 40 : 60;
										float num1455 = expertMode ? 0.55f : 0.45f;
										float scaleFactor10 = expertMode ? 8.5f : 7.5f;
										if (flag135)
										{
											num1455 = 0.7f;
											scaleFactor10 = 12f;
											num1454 = 30;
										}
										else if (flag134 && flag136)
										{
											num1455 = (expertMode ? 0.6f : 0.5f);
											scaleFactor10 = (expertMode ? 10f : 8f);
											num1454 = (expertMode ? 40 : 20);
										}
										else if (flag136 && !flag134 && !flag135)
										{
											num1454 = 30;
										}
										int num1456 = expertMode ? 28 : 30;
										float num1457 = expertMode ? 17f : 16f;
										if (flag135)
										{
											num1456 = 25;
											num1457 = 27f;
										}
										else if (flag136 && flag134)
										{
											num1456 = (expertMode ? 27 : 30);
											if (expertMode)
											{
												num1457 = 21f;
											}
										}
										int num1458 = 80;
										int num1459 = 4;
										float num1460 = 0.3f;
										float scaleFactor11 = 5f;
										int num1461 = 90;
										int num1462 = 180;
										int num1463 = 180;
										int num1464 = 30;
										int num1465 = 120;
										int num1466 = 4;
										float scaleFactor12 = 6f;
										float scaleFactor13 = 20f;
										float num1467 = 6.28318548f / (float)(num1465 / 2);
										int num1468 = 75;
										Vector2 vector170 = base.Center;
										Player player5 = Main.player[this.target];
										if (this.target < 0 || this.target == 255 || player5.dead || !player5.active)
										{
											this.TargetClosest(true);
											player5 = Main.player[this.target];
											this.netUpdate = true;
										}
										if (player5.dead || Vector2.Distance(player5.Center, vector170) > 5600f)
										{
											this.velocity.Y = this.velocity.Y - 0.4f;
											if (this.timeLeft > 10)
											{
												this.timeLeft = 10;
											}
											if (this.ai[0] > 4f)
											{
												this.ai[0] = 5f;
											}
											else
											{
												this.ai[0] = 0f;
											}
											this.ai[2] = 0f;
										}
										bool flag137 = player5.position.Y < 800f || (double)player5.position.Y > Main.worldSurface * 16.0 || (player5.position.X > 6400f && player5.position.X < (float)(Main.maxTilesX * 16 - 6400));
										if (flag137)
										{
											num1454 = 20;
											this.damage = this.defDamage * 2;
											this.defense = this.defDefense * 2;
											this.ai[3] = 0f;
											num1457 += 6f;
										}
										if (this.localAI[0] == 0f)
										{
											this.localAI[0] = 1f;
											this.alpha = 255;
											this.rotation = 0f;
											if (Main.netMode != 1)
											{
												this.ai[0] = -1f;
												this.netUpdate = true;
											}
										}
										float num1469 = (float)Math.Atan2((double)(player5.Center.Y - vector170.Y), (double)(player5.Center.X - vector170.X));
										if (this.spriteDirection == 1)
										{
											num1469 += 3.14159274f;
										}
										if (num1469 < 0f)
										{
											num1469 += 6.28318548f;
										}
										if (num1469 > 6.28318548f)
										{
											num1469 -= 6.28318548f;
										}
										if (this.ai[0] == -1f)
										{
											num1469 = 0f;
										}
										if (this.ai[0] == 3f)
										{
											num1469 = 0f;
										}
										if (this.ai[0] == 4f)
										{
											num1469 = 0f;
										}
										if (this.ai[0] == 8f)
										{
											num1469 = 0f;
										}
										float num1470 = 0.04f;
										if (this.ai[0] == 1f || this.ai[0] == 6f)
										{
											num1470 = 0f;
										}
										if (this.ai[0] == 7f)
										{
											num1470 = 0f;
										}
										if (this.ai[0] == 3f)
										{
											num1470 = 0.01f;
										}
										if (this.ai[0] == 4f)
										{
											num1470 = 0.01f;
										}
										if (this.ai[0] == 8f)
										{
											num1470 = 0.01f;
										}
										if (this.rotation < num1469)
										{
											if ((double)(num1469 - this.rotation) > 3.1415926535897931)
											{
												this.rotation -= num1470;
											}
											else
											{
												this.rotation += num1470;
											}
										}
										if (this.rotation > num1469)
										{
											if ((double)(this.rotation - num1469) > 3.1415926535897931)
											{
												this.rotation += num1470;
											}
											else
											{
												this.rotation -= num1470;
											}
										}
										if (this.rotation > num1469 - num1470 && this.rotation < num1469 + num1470)
										{
											this.rotation = num1469;
										}
										if (this.rotation < 0f)
										{
											this.rotation += 6.28318548f;
										}
										if (this.rotation > 6.28318548f)
										{
											this.rotation -= 6.28318548f;
										}
										if (this.rotation > num1469 - num1470 && this.rotation < num1469 + num1470)
										{
											this.rotation = num1469;
										}
										if (this.ai[0] != -1f && this.ai[0] < 9f)
										{
											bool flag138 = Collision.SolidCollision(this.position, this.width, this.height);
											if (flag138)
											{
												this.alpha += 15;
											}
											else
											{
												this.alpha -= 15;
											}
											if (this.alpha < 0)
											{
												this.alpha = 0;
											}
											if (this.alpha > 150)
											{
												this.alpha = 150;
											}
										}
										if (this.ai[0] == -1f)
										{
											this.velocity *= 0.98f;
											int num1471 = Math.Sign(player5.Center.X - vector170.X);
											if (num1471 != 0)
											{
												this.direction = num1471;
												this.spriteDirection = -this.direction;
											}
											if (this.ai[2] > 20f)
											{
												this.velocity.Y = -2f;
												this.alpha -= 5;
												bool flag139 = Collision.SolidCollision(this.position, this.width, this.height);
												if (flag139)
												{
													this.alpha += 15;
												}
												if (this.alpha < 0)
												{
													this.alpha = 0;
												}
												if (this.alpha > 150)
												{
													this.alpha = 150;
												}
											}
											if (this.ai[2] == (float)(num1461 - 30))
											{
												int num1472 = 36;
												for (int num1473 = 0; num1473 < num1472; num1473++)
												{
													Vector2 vector171 = Vector2.Normalize(this.velocity) * new Vector2((float)this.width / 2f, (float)this.height) * 0.75f * 0.5f;
													vector171 = vector171.RotatedBy((double)((float)(num1473 - (num1472 / 2 - 1)) * 6.28318548f / (float)num1472), default(Vector2)) + base.Center;
													Vector2 value16 = vector171 - base.Center;
													int num1474 = Dust.NewDust(vector171 + value16, 0, 0, 172, value16.X * 2f, value16.Y * 2f, 100, default(Color), 1.4f);
													Main.dust[num1474].noGravity = true;
													Main.dust[num1474].noLight = true;
													Main.dust[num1474].velocity = Vector2.Normalize(value16) * 3f;
												}
												Main.PlaySound(29, (int)vector170.X, (int)vector170.Y, 20);
											}
											this.ai[2] += 1f;
											if (this.ai[2] >= (float)num1468)
											{
												this.ai[0] = 0f;
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[0] == 0f && !player5.dead)
										{
											if (this.ai[1] == 0f)
											{
												this.ai[1] = (float)(300 * Math.Sign((vector170 - player5.Center).X));
											}
											Vector2 value17 = player5.Center + new Vector2(this.ai[1], -200f) - vector170;
											Vector2 vector172 = Vector2.Normalize(value17 - this.velocity) * scaleFactor10;
											if (this.velocity.X < vector172.X)
											{
												this.velocity.X = this.velocity.X + num1455;
												if (this.velocity.X < 0f && vector172.X > 0f)
												{
													this.velocity.X = this.velocity.X + num1455;
												}
											}
											else if (this.velocity.X > vector172.X)
											{
												this.velocity.X = this.velocity.X - num1455;
												if (this.velocity.X > 0f && vector172.X < 0f)
												{
													this.velocity.X = this.velocity.X - num1455;
												}
											}
											if (this.velocity.Y < vector172.Y)
											{
												this.velocity.Y = this.velocity.Y + num1455;
												if (this.velocity.Y < 0f && vector172.Y > 0f)
												{
													this.velocity.Y = this.velocity.Y + num1455;
												}
											}
											else if (this.velocity.Y > vector172.Y)
											{
												this.velocity.Y = this.velocity.Y - num1455;
												if (this.velocity.Y > 0f && vector172.Y < 0f)
												{
													this.velocity.Y = this.velocity.Y - num1455;
												}
											}
											int num1475 = Math.Sign(player5.Center.X - vector170.X);
											if (num1475 != 0)
											{
												if (this.ai[2] == 0f && num1475 != this.direction)
												{
													this.rotation += 3.14159274f;
												}
												this.direction = num1475;
												if (this.spriteDirection != -this.direction)
												{
													this.rotation += 3.14159274f;
												}
												this.spriteDirection = -this.direction;
											}
											this.ai[2] += 1f;
											if (this.ai[2] >= (float)num1454)
											{
												int num1476 = 0;
												switch ((int)this.ai[3])
												{
													case 0:
													case 1:
													case 2:
													case 3:
													case 4:
													case 5:
													case 6:
													case 7:
													case 8:
													case 9:
														num1476 = 1;
														break;
													case 10:
														this.ai[3] = 1f;
														num1476 = 2;
														break;
													case 11:
														this.ai[3] = 0f;
														num1476 = 3;
														break;
												}
												if (flag132)
												{
													num1476 = 4;
												}
												if (num1476 == 1)
												{
													this.ai[0] = 1f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
													this.velocity = Vector2.Normalize(player5.Center - vector170) * num1457;
													this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
													if (num1475 != 0)
													{
														this.direction = num1475;
														if (this.spriteDirection == 1)
														{
															this.rotation += 3.14159274f;
														}
														this.spriteDirection = -this.direction;
													}
												}
												else if (num1476 == 2)
												{
													this.ai[0] = 2f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
												}
												else if (num1476 == 3)
												{
													this.ai[0] = 3f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
												}
												else if (num1476 == 4)
												{
													this.ai[0] = 4f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
												}
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[0] == 1f)
										{
											int num1477 = 7;
											for (int num1478 = 0; num1478 < num1477; num1478++)
											{
												Vector2 vector173 = Vector2.Normalize(this.velocity) * new Vector2((float)(this.width + 50) / 2f, (float)this.height) * 0.75f;
												vector173 = vector173.RotatedBy((double)(num1478 - (num1477 / 2 - 1)) * 3.1415926535897931 / (double)((float)num1477), default(Vector2)) + vector170;
												Vector2 value18 = ((float)(Main.rand.NextDouble() * 3.1415927410125732) - 1.57079637f).ToRotationVector2() * (float)Main.rand.Next(3, 8);
												int num1479 = Dust.NewDust(vector173 + value18, 0, 0, 172, value18.X * 2f, value18.Y * 2f, 100, default(Color), 1.4f);
												Main.dust[num1479].noGravity = true;
												Main.dust[num1479].noLight = true;
												Main.dust[num1479].velocity /= 4f;
												Main.dust[num1479].velocity -= this.velocity;
											}
											this.ai[2] += 1f;
											if (this.ai[2] >= (float)num1456)
											{
												this.ai[0] = 0f;
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.ai[3] += 2f;
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[0] == 2f)
										{
											if (this.ai[1] == 0f)
											{
												this.ai[1] = (float)(300 * Math.Sign((vector170 - player5.Center).X));
											}
											Vector2 value19 = player5.Center + new Vector2(this.ai[1], -200f) - vector170;
											Vector2 vector174 = Vector2.Normalize(value19 - this.velocity) * scaleFactor11;
											if (this.velocity.X < vector174.X)
											{
												this.velocity.X = this.velocity.X + num1460;
												if (this.velocity.X < 0f && vector174.X > 0f)
												{
													this.velocity.X = this.velocity.X + num1460;
												}
											}
											else if (this.velocity.X > vector174.X)
											{
												this.velocity.X = this.velocity.X - num1460;
												if (this.velocity.X > 0f && vector174.X < 0f)
												{
													this.velocity.X = this.velocity.X - num1460;
												}
											}
											if (this.velocity.Y < vector174.Y)
											{
												this.velocity.Y = this.velocity.Y + num1460;
												if (this.velocity.Y < 0f && vector174.Y > 0f)
												{
													this.velocity.Y = this.velocity.Y + num1460;
												}
											}
											else if (this.velocity.Y > vector174.Y)
											{
												this.velocity.Y = this.velocity.Y - num1460;
												if (this.velocity.Y > 0f && vector174.Y < 0f)
												{
													this.velocity.Y = this.velocity.Y - num1460;
												}
											}
											if (this.ai[2] == 0f)
											{
												Main.PlaySound(29, (int)vector170.X, (int)vector170.Y, 20);
											}
											if (this.ai[2] % (float)num1459 == 0f)
											{
												Main.PlaySound(4, (int)base.Center.X, (int)base.Center.Y, 19);
												if (Main.netMode != 1)
												{
													Vector2 vector175 = Vector2.Normalize(player5.Center - vector170) * (float)(this.width + 20) / 2f + vector170;
													NPC.NewNPC((int)vector175.X, (int)vector175.Y + 45, 371, 0, 0f, 0f, 0f, 0f, 255);
												}
											}
											int num1480 = Math.Sign(player5.Center.X - vector170.X);
											if (num1480 != 0)
											{
												this.direction = num1480;
												if (this.spriteDirection != -this.direction)
												{
													this.rotation += 3.14159274f;
												}
												this.spriteDirection = -this.direction;
											}
											this.ai[2] += 1f;
											if (this.ai[2] >= (float)num1458)
											{
												this.ai[0] = 0f;
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[0] == 3f)
										{
											this.velocity *= 0.98f;
											this.velocity.Y = MathHelper.Lerp(this.velocity.Y, 0f, 0.02f);
											if (this.ai[2] == (float)(num1461 - 30))
											{
												Main.PlaySound(29, (int)vector170.X, (int)vector170.Y, 9);
											}
											if (Main.netMode != 1 && this.ai[2] == (float)(num1461 - 30))
											{
												Vector2 vector176 = this.rotation.ToRotationVector2() * (Vector2.UnitX * (float)this.direction) * (float)(this.width + 20) / 2f + vector170;
												Projectile.NewProjectile(vector176.X, vector176.Y, (float)(this.direction * 2), 8f, 385, 0, 0f, Main.myPlayer, 0f, 0f);
												Projectile.NewProjectile(vector176.X, vector176.Y, (float)(-(float)this.direction * 2), 8f, 385, 0, 0f, Main.myPlayer, 0f, 0f);
											}
											this.ai[2] += 1f;
											if (this.ai[2] >= (float)num1461)
											{
												this.ai[0] = 0f;
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[0] == 4f)
										{
											this.velocity *= 0.98f;
											this.velocity.Y = MathHelper.Lerp(this.velocity.Y, 0f, 0.02f);
											if (this.ai[2] == (float)(num1462 - 60))
											{
												Main.PlaySound(29, (int)vector170.X, (int)vector170.Y, 20);
											}
											this.ai[2] += 1f;
											if (this.ai[2] >= (float)num1462)
											{
												this.ai[0] = 5f;
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.ai[3] = 0f;
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[0] == 5f && !player5.dead)
										{
											if (this.ai[1] == 0f)
											{
												this.ai[1] = (float)(300 * Math.Sign((vector170 - player5.Center).X));
											}
											Vector2 value20 = player5.Center + new Vector2(this.ai[1], -200f) - vector170;
											Vector2 vector177 = Vector2.Normalize(value20 - this.velocity) * scaleFactor10;
											if (this.velocity.X < vector177.X)
											{
												this.velocity.X = this.velocity.X + num1455;
												if (this.velocity.X < 0f && vector177.X > 0f)
												{
													this.velocity.X = this.velocity.X + num1455;
												}
											}
											else if (this.velocity.X > vector177.X)
											{
												this.velocity.X = this.velocity.X - num1455;
												if (this.velocity.X > 0f && vector177.X < 0f)
												{
													this.velocity.X = this.velocity.X - num1455;
												}
											}
											if (this.velocity.Y < vector177.Y)
											{
												this.velocity.Y = this.velocity.Y + num1455;
												if (this.velocity.Y < 0f && vector177.Y > 0f)
												{
													this.velocity.Y = this.velocity.Y + num1455;
												}
											}
											else if (this.velocity.Y > vector177.Y)
											{
												this.velocity.Y = this.velocity.Y - num1455;
												if (this.velocity.Y > 0f && vector177.Y < 0f)
												{
													this.velocity.Y = this.velocity.Y - num1455;
												}
											}
											int num1481 = Math.Sign(player5.Center.X - vector170.X);
											if (num1481 != 0)
											{
												if (this.ai[2] == 0f && num1481 != this.direction)
												{
													this.rotation += 3.14159274f;
												}
												this.direction = num1481;
												if (this.spriteDirection != -this.direction)
												{
													this.rotation += 3.14159274f;
												}
												this.spriteDirection = -this.direction;
											}
											this.ai[2] += 1f;
											if (this.ai[2] >= (float)num1454)
											{
												int num1482 = 0;
												switch ((int)this.ai[3])
												{
													case 0:
													case 1:
													case 2:
													case 3:
													case 4:
													case 5:
														num1482 = 1;
														break;
													case 6:
														this.ai[3] = 1f;
														num1482 = 2;
														break;
													case 7:
														this.ai[3] = 0f;
														num1482 = 3;
														break;
												}
												if (flag133)
												{
													num1482 = 4;
												}
												if (num1482 == 1)
												{
													this.ai[0] = 6f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
													this.velocity = Vector2.Normalize(player5.Center - vector170) * num1457;
													this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
													if (num1481 != 0)
													{
														this.direction = num1481;
														if (this.spriteDirection == 1)
														{
															this.rotation += 3.14159274f;
														}
														this.spriteDirection = -this.direction;
													}
												}
												else if (num1482 == 2)
												{
													this.velocity = Vector2.Normalize(player5.Center - vector170) * scaleFactor13;
													this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
													if (num1481 != 0)
													{
														this.direction = num1481;
														if (this.spriteDirection == 1)
														{
															this.rotation += 3.14159274f;
														}
														this.spriteDirection = -this.direction;
													}
													this.ai[0] = 7f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
												}
												else if (num1482 == 3)
												{
													this.ai[0] = 8f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
												}
												else if (num1482 == 4)
												{
													this.ai[0] = 9f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
												}
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[0] == 6f)
										{
											int num1483 = 7;
											for (int num1484 = 0; num1484 < num1483; num1484++)
											{
												Vector2 vector178 = Vector2.Normalize(this.velocity) * new Vector2((float)(this.width + 50) / 2f, (float)this.height) * 0.75f;
												vector178 = vector178.RotatedBy((double)(num1484 - (num1483 / 2 - 1)) * 3.1415926535897931 / (double)((float)num1483), default(Vector2)) + vector170;
												Vector2 value21 = ((float)(Main.rand.NextDouble() * 3.1415927410125732) - 1.57079637f).ToRotationVector2() * (float)Main.rand.Next(3, 8);
												int num1485 = Dust.NewDust(vector178 + value21, 0, 0, 172, value21.X * 2f, value21.Y * 2f, 100, default(Color), 1.4f);
												Main.dust[num1485].noGravity = true;
												Main.dust[num1485].noLight = true;
												Main.dust[num1485].velocity /= 4f;
												Main.dust[num1485].velocity -= this.velocity;
											}
											this.ai[2] += 1f;
											if (this.ai[2] >= (float)num1456)
											{
												this.ai[0] = 5f;
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.ai[3] += 2f;
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[0] == 7f)
										{
											if (this.ai[2] == 0f)
											{
												Main.PlaySound(29, (int)vector170.X, (int)vector170.Y, 20);
											}
											if (this.ai[2] % (float)num1466 == 0f)
											{
												Main.PlaySound(4, (int)base.Center.X, (int)base.Center.Y, 19);
												if (Main.netMode != 1)
												{
													Vector2 vector179 = Vector2.Normalize(this.velocity) * (float)(this.width + 20) / 2f + vector170;
													int num1486 = NPC.NewNPC((int)vector179.X, (int)vector179.Y + 45, 371, 0, 0f, 0f, 0f, 0f, 255);
													Main.npc[num1486].target = this.target;
													Main.npc[num1486].velocity = Vector2.Normalize(this.velocity).RotatedBy((double)(1.57079637f * (float)this.direction), default(Vector2)) * scaleFactor12;
													Main.npc[num1486].netUpdate = true;
													Main.npc[num1486].ai[3] = (float)Main.rand.Next(80, 121) / 100f;
												}
											}
											this.velocity = this.velocity.RotatedBy((double)(-(double)num1467 * (float)this.direction), default(Vector2));
											this.rotation -= num1467 * (float)this.direction;
											this.ai[2] += 1f;
											if (this.ai[2] >= (float)num1465)
											{
												this.ai[0] = 5f;
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[0] == 8f)
										{
											this.velocity *= 0.98f;
											this.velocity.Y = MathHelper.Lerp(this.velocity.Y, 0f, 0.02f);
											if (this.ai[2] == (float)(num1461 - 30))
											{
												Main.PlaySound(29, (int)vector170.X, (int)vector170.Y, 20);
											}
											if (Main.netMode != 1 && this.ai[2] == (float)(num1461 - 30))
											{
												Projectile.NewProjectile(vector170.X, vector170.Y, 0f, 0f, 385, 0, 0f, Main.myPlayer, 1f, (float)(this.target + 1));
											}
											this.ai[2] += 1f;
											if (this.ai[2] >= (float)num1461)
											{
												this.ai[0] = 5f;
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[0] == 9f)
										{
											if (this.ai[2] < (float)(num1463 - 90))
											{
												bool flag140 = Collision.SolidCollision(this.position, this.width, this.height);
												if (flag140)
												{
													this.alpha += 15;
												}
												else
												{
													this.alpha -= 15;
												}
												if (this.alpha < 0)
												{
													this.alpha = 0;
												}
												if (this.alpha > 150)
												{
													this.alpha = 150;
												}
											}
											else if (this.alpha < 255)
											{
												this.alpha += 4;
												if (this.alpha > 255)
												{
													this.alpha = 255;
												}
											}
											this.velocity *= 0.98f;
											this.velocity.Y = MathHelper.Lerp(this.velocity.Y, 0f, 0.02f);
											if (this.ai[2] == (float)(num1463 - 60))
											{
												Main.PlaySound(29, (int)vector170.X, (int)vector170.Y, 20);
											}
											this.ai[2] += 1f;
											if (this.ai[2] >= (float)num1463)
											{
												this.ai[0] = 10f;
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.ai[3] = 0f;
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[0] == 10f && !player5.dead)
										{
											this.dontTakeDamage = false;
											this.chaseable = false;
											if (this.alpha < 255)
											{
												this.alpha += 25;
												if (this.alpha > 255)
												{
													this.alpha = 255;
												}
											}
											if (this.ai[1] == 0f)
											{
												this.ai[1] = (float)(360 * Math.Sign((vector170 - player5.Center).X));
											}
											Vector2 value22 = player5.Center + new Vector2(this.ai[1], -200f) - vector170;
											Vector2 desiredVelocity = Vector2.Normalize(value22 - this.velocity) * scaleFactor10;
											this.SimpleFlyMovement(desiredVelocity, num1455);
											int num1487 = Math.Sign(player5.Center.X - vector170.X);
											if (num1487 != 0)
											{
												if (this.ai[2] == 0f && num1487 != this.direction)
												{
													this.rotation += 3.14159274f;
													for (int num1488 = 0; num1488 < this.oldPos.Length; num1488++)
													{
														this.oldPos[num1488] = Vector2.Zero;
													}
												}
												this.direction = num1487;
												if (this.spriteDirection != -this.direction)
												{
													this.rotation += 3.14159274f;
												}
												this.spriteDirection = -this.direction;
											}
											this.ai[2] += 1f;
											if (this.ai[2] >= (float)num1454)
											{
												int num1489 = 0;
												switch ((int)this.ai[3])
												{
													case 0:
													case 2:
													case 3:
													case 5:
													case 6:
													case 7:
														num1489 = 1;
														break;
													case 1:
													case 4:
													case 8:
														num1489 = 2;
														break;
												}
												if (num1489 == 1)
												{
													this.ai[0] = 11f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
													this.velocity = Vector2.Normalize(player5.Center - vector170) * num1457;
													this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
													if (num1487 != 0)
													{
														this.direction = num1487;
														if (this.spriteDirection == 1)
														{
															this.rotation += 3.14159274f;
														}
														this.spriteDirection = -this.direction;
													}
												}
												else if (num1489 == 2)
												{
													this.ai[0] = 12f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
												}
												else if (num1489 == 3)
												{
													this.ai[0] = 13f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
												}
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[0] == 11f)
										{
											this.dontTakeDamage = false;
											this.chaseable = true;
											this.alpha -= 25;
											if (this.alpha < 0)
											{
												this.alpha = 0;
											}
											int num1490 = 7;
											for (int num1491 = 0; num1491 < num1490; num1491++)
											{
												Vector2 vector180 = Vector2.Normalize(this.velocity) * new Vector2((float)(this.width + 50) / 2f, (float)this.height) * 0.75f;
												vector180 = vector180.RotatedBy((double)(num1491 - (num1490 / 2 - 1)) * 3.1415926535897931 / (double)((float)num1490), default(Vector2)) + vector170;
												Vector2 value23 = ((float)(Main.rand.NextDouble() * 3.1415927410125732) - 1.57079637f).ToRotationVector2() * (float)Main.rand.Next(3, 8);
												int num1492 = Dust.NewDust(vector180 + value23, 0, 0, 172, value23.X * 2f, value23.Y * 2f, 100, default(Color), 1.4f);
												Main.dust[num1492].noGravity = true;
												Main.dust[num1492].noLight = true;
												Main.dust[num1492].velocity /= 4f;
												Main.dust[num1492].velocity -= this.velocity;
											}
											this.ai[2] += 1f;
											if (this.ai[2] >= (float)num1456)
											{
												this.ai[0] = 10f;
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.ai[3] += 1f;
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[0] == 12f)
										{
											this.dontTakeDamage = true;
											this.chaseable = false;
											if (this.alpha < 255)
											{
												this.alpha += 17;
												if (this.alpha > 255)
												{
													this.alpha = 255;
												}
											}
											this.velocity *= 0.98f;
											this.velocity.Y = MathHelper.Lerp(this.velocity.Y, 0f, 0.02f);
											if (this.ai[2] == (float)(num1464 / 2))
											{
												Main.PlaySound(29, (int)vector170.X, (int)vector170.Y, 20);
											}
											if (Main.netMode != 1 && this.ai[2] == (float)(num1464 / 2))
											{
												if (this.ai[1] == 0f)
												{
													this.ai[1] = (float)(300 * Math.Sign((vector170 - player5.Center).X));
												}
												Vector2 center6 = player5.Center + new Vector2(-this.ai[1], -200f);
												vector170 = (base.Center = center6);
												int num1493 = Math.Sign(player5.Center.X - vector170.X);
												if (num1493 != 0)
												{
													if (this.ai[2] == 0f && num1493 != this.direction)
													{
														this.rotation += 3.14159274f;
														for (int num1494 = 0; num1494 < this.oldPos.Length; num1494++)
														{
															this.oldPos[num1494] = Vector2.Zero;
														}
													}
													this.direction = num1493;
													if (this.spriteDirection != -this.direction)
													{
														this.rotation += 3.14159274f;
													}
													this.spriteDirection = -this.direction;
												}
											}
											this.ai[2] += 1f;
											if (this.ai[2] >= (float)num1464)
											{
												this.ai[0] = 10f;
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.ai[3] += 1f;
												if (this.ai[3] >= 9f)
												{
													this.ai[3] = 0f;
												}
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[0] == 13f)
										{
											if (this.ai[2] == 0f)
											{
												Main.PlaySound(29, (int)vector170.X, (int)vector170.Y, 20);
											}
											this.velocity = this.velocity.RotatedBy((double)(-(double)num1467 * (float)this.direction), default(Vector2));
											this.rotation -= num1467 * (float)this.direction;
											this.ai[2] += 1f;
											if (this.ai[2] >= (float)num1465)
											{
												this.ai[0] = 10f;
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.ai[3] += 1f;
												this.netUpdate = true;
												return;
											}
										}
									}
									else if (this.aiStyle == 70)
									{
										if (this.target == 255)
										{
											this.TargetClosest(true);
											this.ai[3] = (float)Main.rand.Next(80, 121) / 100f;
											float scaleFactor14 = (float)Main.rand.Next(165, 265) / 15f;
											this.velocity = Vector2.Normalize(Main.player[this.target].Center - base.Center + new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101))) * scaleFactor14;
											this.netUpdate = true;
										}
										Vector2 vector181 = Vector2.Normalize(Main.player[this.target].Center - base.Center);
										this.velocity = (this.velocity * 40f + vector181 * 20f) / 41f;
										this.scale = this.ai[3];
										this.alpha -= 30;
										if (this.alpha < 50)
										{
											this.alpha = 50;
										}
										this.alpha = 50;
										this.velocity.X = (this.velocity.X * 50f + Main.windSpeed * 2f + (float)Main.rand.Next(-10, 11) * 0.1f) / 51f;
										this.velocity.Y = (this.velocity.Y * 50f + -0.25f + (float)Main.rand.Next(-10, 11) * 0.2f) / 51f;
										if (this.velocity.Y > 0f)
										{
											this.velocity.Y = this.velocity.Y - 0.04f;
										}
										if (this.ai[0] == 0f)
										{
											int num1495 = 40;
											Rectangle rect = this.getRect();
											rect.X -= num1495 + this.width / 2;
											rect.Y -= num1495 + this.height / 2;
											rect.Width += num1495 * 2;
											rect.Height += num1495 * 2;
											for (int num1496 = 0; num1496 < 255; num1496++)
											{
												Player player6 = Main.player[num1496];
												if (player6.active && !player6.dead && rect.Intersects(player6.getRect()))
												{
													this.ai[0] = 1f;
													this.ai[1] = 4f;
													this.netUpdate = true;
													break;
												}
											}
										}
										if (this.ai[0] == 0f)
										{
											this.ai[1] += 1f;
											if (this.ai[1] >= 150f)
											{
												this.ai[0] = 1f;
												this.ai[1] = 4f;
											}
										}
										if (this.ai[0] == 1f)
										{
											this.ai[1] -= 1f;
											if (this.ai[1] <= 0f)
											{
												this.life = 0;
												this.HitEffect(0, 10.0);
												this.active = false;
												return;
											}
										}
										if (this.justHit || this.ai[0] == 1f)
										{
											this.dontTakeDamage = true;
											this.position = base.Center;
											this.width = (this.height = 100);
											this.position = new Vector2(this.position.X - (float)(this.width / 2), this.position.Y - (float)(this.height / 2));
											if (this.timeLeft > 3)
											{
												this.timeLeft = 3;
												return;
											}
										}
									}
									else if (this.aiStyle == 71)
									{
										this.noTileCollide = true;
										int num1497 = 90;
										if (this.target < 0 || this.target == 255 || Main.player[this.target].dead)
										{
											this.TargetClosest(false);
											this.direction = 1;
											this.netUpdate = true;
										}
										if (this.ai[0] == 0f)
										{
											this.ai[1] += 1f;
											int arg_50B85_0 = this.type;
											this.noGravity = true;
											this.dontTakeDamage = true;
											this.velocity.Y = this.ai[3];
											if (this.type == 373)
											{
												float num1498 = 0.104719758f;
												float num1499 = this.ai[2];
												float num1500 = (float)(Math.Cos((double)(num1498 * this.localAI[1])) - 0.5) * num1499;
												this.position.X = this.position.X - num1500 * (float)(-(float)this.direction);
												this.localAI[1] += 1f;
												num1500 = (float)(Math.Cos((double)(num1498 * this.localAI[1])) - 0.5) * num1499;
												this.position.X = this.position.X + num1500 * (float)(-(float)this.direction);
												if (Math.Abs(Math.Cos((double)(num1498 * this.localAI[1])) - 0.5) > 0.25)
												{
													this.spriteDirection = ((Math.Cos((double)(num1498 * this.localAI[1])) - 0.5 >= 0.0) ? -1 : 1);
												}
												this.rotation = this.velocity.Y * (float)this.spriteDirection * 0.1f;
												if ((double)this.rotation < -0.2)
												{
													this.rotation = -0.2f;
												}
												if ((double)this.rotation > 0.2)
												{
													this.rotation = 0.2f;
												}
												this.alpha -= 6;
												if (this.alpha < 0)
												{
													this.alpha = 0;
												}
											}
											if (this.ai[1] >= (float)num1497)
											{
												this.ai[0] = 1f;
												this.ai[1] = 0f;
												if (!Collision.SolidCollision(this.position, this.width, this.height))
												{
													this.ai[1] = 1f;
												}
												Main.PlaySound(4, (int)base.Center.X, (int)base.Center.Y, 19);
												this.TargetClosest(true);
												this.spriteDirection = this.direction;
												Vector2 vector182 = Main.player[this.target].Center - base.Center;
												vector182.Normalize();
												this.velocity = vector182 * 16f;
												this.rotation = this.velocity.ToRotation();
												if (this.direction == -1)
												{
													this.rotation += 3.14159274f;
												}
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[0] == 1f)
										{
											this.noGravity = true;
											if (!Collision.SolidCollision(this.position, this.width, this.height))
											{
												if (this.ai[1] < 1f)
												{
													this.ai[1] = 1f;
												}
											}
											else
											{
												this.alpha -= 15;
												if (this.alpha < 150)
												{
													this.alpha = 150;
												}
											}
											if (this.ai[1] >= 1f)
											{
												this.alpha -= 60;
												if (this.alpha < 0)
												{
													this.alpha = 0;
												}
												this.dontTakeDamage = false;
												this.ai[1] += 1f;
												if (Collision.SolidCollision(this.position, this.width, this.height))
												{
													Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, this.soundKilled);
													this.life = 0;
													this.HitEffect(0, 10.0);
													this.active = false;
													return;
												}
											}
											if (this.ai[1] >= 60f)
											{
												this.noGravity = false;
											}
											this.rotation = this.velocity.ToRotation();
											if (this.direction == -1)
											{
												this.rotation += 3.14159274f;
												return;
											}
										}
									}
									else if (this.aiStyle == 72)
									{
										if (this.type == 384)
										{
											int num1501 = (int)this.ai[0];
											if (Main.npc[num1501].active && Main.npc[num1501].type == 383)
											{
												this.velocity = Vector2.Zero;
												this.position = Main.npc[num1501].Center;
												this.position.X = this.position.X - (float)(this.width / 2);
												this.position.Y = this.position.Y - (float)(this.height / 2);
												this.gfxOffY = Main.npc[num1501].gfxOffY;
												Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.1f, 0.5f, 0.7f);
												return;
											}
											this.life = 0;
											this.HitEffect(0, 10.0);
											this.active = false;
											return;
										}
									}
									else if (this.aiStyle == 73)
									{
										this.TargetClosest(false);
										this.spriteDirection = this.direction;
										this.velocity.X = this.velocity.X * 0.93f;
										if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
										{
											this.velocity.X = 0f;
										}
										if (this.type == 387)
										{
											float num1502 = 120f;
											float num1503 = 60f;
											if (this.ai[1] < num1502)
											{
												this.ai[1] += 1f;
												if (this.ai[1] > 60f)
												{
													float num1504 = (this.ai[1] - num1503) / (num1502 - num1503);
													this.alpha = (int)((1f - num1504) * 255f);
												}
												else
												{
													this.alpha = 255;
												}
												this.dontTakeDamage = true;
												this.frameCounter = 0.0;
												this.frame.Y = 0;
												float num1505 = this.ai[1] / num1503;
												Vector2 spinningpoint = new Vector2(0f, -30f);
												spinningpoint = spinningpoint.RotatedBy((double)(num1505 * 1.5f * 6.28318548f), default(Vector2)) * new Vector2(1f, 0.4f);
												for (int num1506 = 0; num1506 < 4; num1506++)
												{
													Vector2 value24 = Vector2.Zero;
													float scaleFactor15 = 1f;
													if (num1506 == 0)
													{
														value24 = Vector2.UnitY * -15f;
														scaleFactor15 = 0.15f;
													}
													if (num1506 == 1)
													{
														value24 = Vector2.UnitY * -5f;
														scaleFactor15 = 0.3f;
													}
													if (num1506 == 2)
													{
														value24 = Vector2.UnitY * 5f;
														scaleFactor15 = 0.6f;
													}
													if (num1506 == 3)
													{
														value24 = Vector2.UnitY * 20f;
														scaleFactor15 = 0.45f;
													}
													int num1507 = Dust.NewDust(base.Center, 0, 0, 226, 0f, 0f, 100, default(Color), 0.5f);
													Main.dust[num1507].noGravity = true;
													Main.dust[num1507].position = base.Center + spinningpoint * scaleFactor15 + value24;
													Main.dust[num1507].velocity = Vector2.Zero;
													spinningpoint *= -1f;
													num1507 = Dust.NewDust(base.Center, 0, 0, 226, 0f, 0f, 100, default(Color), 0.5f);
													Main.dust[num1507].noGravity = true;
													Main.dust[num1507].position = base.Center + spinningpoint * scaleFactor15 + value24;
													Main.dust[num1507].velocity = Vector2.Zero;
												}
												Lighting.AddLight((int)base.Center.X / 16, (int)(base.Center.Y - 10f) / 16, 0.1f * num1505, 0.5f * num1505, 0.7f * num1505);
												return;
											}
											Lighting.AddLight((int)base.Center.X / 16, (int)(base.Center.Y - 10f) / 16, 0.1f, 0.5f, 0.7f);
											this.dontTakeDamage = false;
										}
										if (this.ai[0] < 60f)
										{
											this.ai[0] += 1f;
										}
										if (this.justHit)
										{
											this.ai[0] = -30f;
										}
										if (this.ai[0] == 60f)
										{
											this.ai[0] = -120f;
											Vector2 center7 = Main.player[this.target].Center;
											Vector2 value25 = base.Center - Vector2.UnitY * 10f;
											Vector2 vector183 = center7 - value25;
											vector183.X += (float)Main.rand.Next(-100, 101);
											vector183.Y += (float)Main.rand.Next(-100, 101);
											vector183.X *= (float)Main.rand.Next(70, 131) * 0.01f;
											vector183.Y *= (float)Main.rand.Next(70, 131) * 0.01f;
											vector183.Normalize();
											if (float.IsNaN(vector183.X) || float.IsNaN(vector183.Y))
											{
												vector183 = -Vector2.UnitY;
											}
											vector183 *= 14f;
											int num1508 = 35;
											if (Main.expertMode && this.type >= 381 && this.type <= 392)
											{
												num1508 = (int)((double)num1508 * 0.8);
											}
											Projectile.NewProjectile(value25.X, value25.Y, vector183.X, vector183.Y, 435, num1508, 0f, Main.myPlayer, 0f, 0f);
											return;
										}
									}
									else if (this.aiStyle == 74)
									{
										this.TargetClosest(false);
										this.rotation = this.velocity.ToRotation();
										if (Math.Sign(this.velocity.X) != 0)
										{
											this.spriteDirection = -Math.Sign(this.velocity.X);
										}
										if (this.rotation < -1.57079637f)
										{
											this.rotation += 3.14159274f;
										}
										if (this.rotation > 1.57079637f)
										{
											this.rotation -= 3.14159274f;
										}
										if (this.type == 418)
										{
											this.spriteDirection = Math.Sign(this.velocity.X);
										}
										float num1509 = 0.4f;
										float num1510 = 10f;
										float scaleFactor16 = 200f;
										float num1511 = 750f;
										float num1512 = 30f;
										float num1513 = 30f;
										float scaleFactor17 = 0.95f;
										int num1514 = 50;
										float scaleFactor18 = 14f;
										float num1515 = 30f;
										float num1516 = 100f;
										float num1517 = 20f;
										float num1518 = 0f;
										float num1519 = 7f;
										bool flag141 = true;
										if (this.type == 418)
										{
											num1509 = 0.3f;
											num1510 = 8f;
											scaleFactor16 = 300f;
											num1511 = 800f;
											num1512 = 60f;
											num1513 = 5f;
											scaleFactor17 = 0.8f;
											num1514 = 0;
											scaleFactor18 = 10f;
											num1515 = 30f;
											num1516 = 150f;
											num1517 = 60f;
											num1518 = 0.333333343f;
											num1519 = 8f;
											flag141 = false;
										}
										num1518 *= num1517;
										if (Main.expertMode)
										{
											num1509 *= Main.expertKnockBack;
										}
										if (this.type == 388 && this.ai[0] != 3f)
										{
											int num1520 = Dust.NewDust(this.position, this.width, this.height, 226, 0f, 0f, 100, default(Color), 0.5f);
											Main.dust[num1520].noGravity = true;
											Main.dust[num1520].velocity = this.velocity / 5f;
											Vector2 vector184 = new Vector2(-10f, 10f);
											if (this.spriteDirection == 1)
											{
												vector184.X *= -1f;
											}
											vector184 = vector184.RotatedBy((double)this.rotation, default(Vector2));
											Main.dust[num1520].position = base.Center + vector184;
										}
										if (this.type == 418)
										{
											int num1521 = (this.ai[0] == 2f) ? 2 : 1;
											int num1522 = (this.ai[0] == 2f) ? 30 : 20;
											for (int num1523 = 0; num1523 < 2; num1523++)
											{
												if (Main.rand.Next(3) < num1521)
												{
													int num1524 = Dust.NewDust(base.Center - new Vector2((float)num1522), num1522 * 2, num1522 * 2, 6, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, default(Color), 1.5f);
													Main.dust[num1524].noGravity = true;
													Main.dust[num1524].velocity *= 0.2f;
													Main.dust[num1524].fadeIn = 1f;
												}
											}
										}
										if (this.ai[0] == 0f)
										{
											this.knockBackResist = num1509;
											float scaleFactor19 = num1510;
											Vector2 center8 = base.Center;
											Vector2 center9 = Main.player[this.target].Center;
											Vector2 vector185 = center9 - center8;
											Vector2 vector186 = vector185 - Vector2.UnitY * scaleFactor16;
											float num1525 = vector185.Length();
											vector185 = Vector2.Normalize(vector185) * scaleFactor19;
											vector186 = Vector2.Normalize(vector186) * scaleFactor19;
											bool flag142 = Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1);
											if (this.ai[3] >= 120f)
											{
												flag142 = true;
											}
											float num1526 = 8f;
											flag142 = (flag142 && vector185.ToRotation() > 3.14159274f / num1526 && vector185.ToRotation() < 3.14159274f - 3.14159274f / num1526);
											if (num1525 > num1511 || !flag142)
											{
												this.velocity.X = (this.velocity.X * (num1512 - 1f) + vector186.X) / num1512;
												this.velocity.Y = (this.velocity.Y * (num1512 - 1f) + vector186.Y) / num1512;
												if (!flag142)
												{
													this.ai[3] += 1f;
													if (this.ai[3] == 120f)
													{
														this.netUpdate = true;
													}
												}
												else
												{
													this.ai[3] = 0f;
												}
											}
											else
											{
												this.ai[0] = 1f;
												this.ai[2] = vector185.X;
												this.ai[3] = vector185.Y;
												this.netUpdate = true;
											}
										}
										else if (this.ai[0] == 1f)
										{
											this.knockBackResist = 0f;
											this.velocity *= scaleFactor17;
											this.ai[1] += 1f;
											if (this.ai[1] >= num1513)
											{
												this.ai[0] = 2f;
												this.ai[1] = 0f;
												this.netUpdate = true;
												Vector2 velocity2 = new Vector2(this.ai[2], this.ai[3]) + new Vector2((float)Main.rand.Next(-num1514, num1514 + 1), (float)Main.rand.Next(-num1514, num1514 + 1)) * 0.04f;
												velocity2.Normalize();
												velocity2 *= scaleFactor18;
												this.velocity = velocity2;
											}
											if (this.type == 388 && Main.rand.Next(4) == 0)
											{
												int num1527 = Dust.NewDust(this.position, this.width, this.height, 226, 0f, 0f, 100, default(Color), 0.5f);
												Main.dust[num1527].noGravity = true;
												Main.dust[num1527].velocity *= 2f;
												Main.dust[num1527].velocity = Main.dust[num1527].velocity / 2f + Vector2.Normalize(Main.dust[num1527].position - base.Center);
											}
										}
										else if (this.ai[0] == 2f)
										{
											this.knockBackResist = 0f;
											float num1528 = num1515;
											this.ai[1] += 1f;
											bool flag143 = Vector2.Distance(base.Center, Main.player[this.target].Center) > num1516 && base.Center.Y > Main.player[this.target].Center.Y;
											if ((this.ai[1] >= num1528 && flag143) || this.velocity.Length() < num1519)
											{
												this.ai[0] = 0f;
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.ai[3] = 0f;
												this.velocity /= 2f;
												this.netUpdate = true;
												if (this.type == 418)
												{
													this.ai[1] = 45f;
													this.ai[0] = 4f;
												}
											}
											else
											{
												Vector2 center10 = base.Center;
												Vector2 center11 = Main.player[this.target].Center;
												Vector2 vec4 = center11 - center10;
												vec4.Normalize();
												if (vec4.HasNaNs())
												{
													vec4 = new Vector2((float)this.direction, 0f);
												}
												this.velocity = (this.velocity * (num1517 - 1f) + vec4 * (this.velocity.Length() + num1518)) / num1517;
											}
											if (flag141 && Collision.SolidCollision(this.position, this.width, this.height))
											{
												this.ai[0] = 3f;
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.ai[3] = 0f;
												this.netUpdate = true;
											}
										}
										else if (this.ai[0] == 4f)
										{
											this.ai[1] -= 3f;
											if (this.ai[1] <= 0f)
											{
												this.ai[0] = 0f;
												this.ai[1] = 0f;
												this.netUpdate = true;
											}
											this.velocity *= 0.95f;
										}
										if (flag141 && this.ai[0] != 3f && Vector2.Distance(base.Center, Main.player[this.target].Center) < 64f)
										{
											this.ai[0] = 3f;
											this.ai[1] = 0f;
											this.ai[2] = 0f;
											this.ai[3] = 0f;
											this.netUpdate = true;
										}
										if (this.ai[0] == 3f)
										{
											this.position = base.Center;
											this.width = (this.height = 192);
											this.position.X = this.position.X - (float)(this.width / 2);
											this.position.Y = this.position.Y - (float)(this.height / 2);
											this.velocity = Vector2.Zero;
											this.damage = (int)(80f * Main.damageMultiplier);
											this.alpha = 255;
											Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.2f, 0.7f, 1.1f);
											for (int num1529 = 0; num1529 < 10; num1529++)
											{
												int num1530 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
												Main.dust[num1530].velocity *= 1.4f;
												Main.dust[num1530].position = ((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * ((float)Main.rand.NextDouble() * 96f) + base.Center;
											}
											for (int num1531 = 0; num1531 < 40; num1531++)
											{
												int num1532 = Dust.NewDust(this.position, this.width, this.height, 226, 0f, 0f, 100, default(Color), 0.5f);
												Main.dust[num1532].noGravity = true;
												Main.dust[num1532].velocity *= 2f;
												Main.dust[num1532].position = ((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * ((float)Main.rand.NextDouble() * 96f) + base.Center;
												Main.dust[num1532].velocity = Main.dust[num1532].velocity / 2f + Vector2.Normalize(Main.dust[num1532].position - base.Center);
												if (Main.rand.Next(2) == 0)
												{
													num1532 = Dust.NewDust(this.position, this.width, this.height, 226, 0f, 0f, 100, default(Color), 0.9f);
													Main.dust[num1532].noGravity = true;
													Main.dust[num1532].velocity *= 1.2f;
													Main.dust[num1532].position = ((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * ((float)Main.rand.NextDouble() * 96f) + base.Center;
													Main.dust[num1532].velocity = Main.dust[num1532].velocity / 2f + Vector2.Normalize(Main.dust[num1532].position - base.Center);
												}
												if (Main.rand.Next(4) == 0)
												{
													num1532 = Dust.NewDust(this.position, this.width, this.height, 226, 0f, 0f, 100, default(Color), 0.7f);
													Main.dust[num1532].velocity *= 1.2f;
													Main.dust[num1532].position = ((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * ((float)Main.rand.NextDouble() * 96f) + base.Center;
													Main.dust[num1532].velocity = Main.dust[num1532].velocity / 2f + Vector2.Normalize(Main.dust[num1532].position - base.Center);
												}
											}
											this.ai[1] += 1f;
											if (this.ai[1] >= 3f)
											{
												Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
												this.life = 0;
												this.HitEffect(0, 10.0);
												this.active = false;
												return;
											}
										}
									}
									else if (this.aiStyle == 75)
									{
										int num1533 = -1;
										Vector2 vector187 = Vector2.Zero;
										int num1534 = 0;
										if (this.type == 390)
										{
											if (this.localAI[0] == 0f && Main.netMode != 1)
											{
												this.localAI[0] = 1f;
												int num1535 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 391, this.whoAmI, 0f, 0f, 0f, 0f, 255);
												this.ai[0] = (float)num1535;
												this.netUpdate = true;
											}
											int num1536 = (int)this.ai[0];
											if (Main.npc[num1536].active && Main.npc[num1536].type == 391)
											{
												if (this.timeLeft < 60)
												{
													this.timeLeft = 60;
												}
												num1533 = num1536;
												vector187 = Vector2.UnitY * -14f;
											}
										}
										if (this.type == 416)
										{
											if (this.localAI[0] == 0f && Main.netMode != 1)
											{
												this.localAI[0] = 1f;
												int num1537 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 415, this.whoAmI, 0f, 0f, 0f, 0f, 255);
												this.ai[0] = (float)num1537;
												this.netUpdate = true;
											}
											int num1538 = (int)this.ai[0];
											if (Main.npc[num1538].active && Main.npc[num1538].type == 415)
											{
												if (this.timeLeft < 60)
												{
													this.timeLeft = 60;
												}
												num1533 = num1538;
												vector187 = new Vector2((float)(-(float)Main.npc[num1538].spriteDirection * 10), -30f);
											}
										}
										else if (this.type == 392)
										{
											int num1539 = (int)this.ai[0];
											if (Main.npc[num1539].active && Main.npc[num1539].type == 395)
											{
												if (this.timeLeft < 60)
												{
													this.timeLeft = 60;
												}
												num1533 = num1539;
												vector187 = Vector2.UnitY * 2f;
												vector187 *= Main.npc[num1539].scale;
												float num1540 = Main.npc[num1539].rotation;
												vector187 = vector187.RotatedBy((double)num1540, default(Vector2));
												this.rotation = num1540;
												if (Main.netMode != 1)
												{
													bool flag144 = true;
													if (Main.npc[num1539].ai[0] >= 1f || Main.npc[num1539].ai[0] < 0f)
													{
														flag144 = false;
													}
													if (flag144)
													{
														for (int num1541 = 0; num1541 < 2; num1541++)
														{
															if (Main.npc[(int)this.localAI[num1541]].active && Main.npc[(int)this.localAI[num1541]].type == 393)
															{
																flag144 = false;
															}
														}
														for (int num1542 = 2; num1542 < 4; num1542++)
														{
															if (Main.npc[(int)this.localAI[num1542]].active && Main.npc[(int)this.localAI[num1542]].type == 394)
															{
																flag144 = false;
															}
														}
													}
													if (Main.npc[num1539].ai[3] % 200f == 0f && Main.npc[num1539].ai[0] != 1f)
													{
														for (int num1543 = 0; num1543 < 2; num1543++)
														{
															if (Main.npc[(int)this.localAI[num1543]].active && Main.npc[(int)this.localAI[num1543]].type == 393)
															{
																Main.npc[(int)this.localAI[num1543]].netUpdate = true;
															}
														}
														for (int num1544 = 2; num1544 < 4; num1544++)
														{
															if (Main.npc[(int)this.localAI[num1544]].active && Main.npc[(int)this.localAI[num1544]].type == 394)
															{
																Main.npc[(int)this.localAI[num1544]].netUpdate = true;
															}
														}
														this.netUpdate = true;
													}
													if (flag144)
													{
														Main.npc[num1539].ai[0] = 1f;
														Main.npc[num1539].ai[1] = 0f;
														Main.npc[num1539].ai[2] = 0f;
														Main.npc[num1539].ai[3] = 0f;
														Main.npc[num1539].netUpdate = true;
													}
												}
											}
										}
										else if (this.type == 393)
										{
											int num1545 = (int)this.ai[0];
											if (Main.npc[num1545].active && Main.npc[num1545].type == 395)
											{
												if (this.timeLeft < 60)
												{
													this.timeLeft = 60;
												}
												num1533 = num1545;
												vector187 = Vector2.UnitY * 29f + ((this.ai[1] == 1f) ? Vector2.UnitX : (-Vector2.UnitX)) * 60f;
												vector187 *= Main.npc[num1545].scale;
												float num1546 = Main.npc[num1545].rotation;
												vector187 = vector187.RotatedBy((double)num1546, default(Vector2));
												this.rotation = num1546;
											}
										}
										else if (this.type == 394)
										{
											int num1547 = (int)this.ai[0];
											if (Main.npc[num1547].active && Main.npc[num1547].type == 395)
											{
												if (this.timeLeft < 60)
												{
													this.timeLeft = 60;
												}
												num1533 = num1547;
												vector187 = Vector2.UnitY * -13f + ((this.ai[1] == 1f) ? Vector2.UnitX : (-Vector2.UnitX)) * 49f;
												vector187 *= Main.npc[num1547].scale;
												float num1548 = Main.npc[num1547].rotation;
												vector187 = vector187.RotatedBy((double)num1548, default(Vector2));
												this.rotation = num1548;
												num1534 = ((this.ai[1] == 1f) ? 1 : -1);
											}
										}
										else if (this.type == 492)
										{
											int num1549 = (int)this.ai[0];
											if (Main.npc[num1549].active && Main.npc[num1549].type == 491)
											{
												if (this.timeLeft < 60)
												{
													this.timeLeft = 60;
												}
												num1533 = num1549;
												vector187 = new Vector2((-122f + 68f * this.ai[1]) * (float)((Main.npc[num1549].spriteDirection == 1) ? -1 : 1), -6f);
												vector187 *= Main.npc[num1549].scale;
												float num1550 = Main.npc[num1549].rotation;
												vector187 = vector187.RotatedBy((double)num1550, default(Vector2));
												this.rotation = num1550;
											}
										}
										if (num1533 != -1)
										{
											NPC nPC7 = Main.npc[num1533];
											this.velocity = Vector2.Zero;
											this.position = nPC7.Center;
											this.position.X = this.position.X - (float)(this.width / 2);
											this.position.Y = this.position.Y - (float)(this.height / 2);
											this.position += vector187;
											this.gfxOffY = nPC7.gfxOffY;
											this.direction = nPC7.direction;
											if (num1534 == 0)
											{
												this.spriteDirection = nPC7.spriteDirection;
											}
											else
											{
												this.spriteDirection = num1534;
											}
											if (this.type == 390)
											{
												this.timeLeft = nPC7.timeLeft;
												this.velocity = nPC7.velocity;
												this.target = nPC7.target;
												if (this.ai[1] < 60f)
												{
													this.ai[1] += 1f;
												}
												if (this.justHit)
												{
													this.ai[1] = -30f;
												}
												int num1551 = 438;
												int num1552 = 30;
												float scaleFactor20 = 7f;
												if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
												{
													Vector2 vector188 = Main.player[this.target].Center - base.Center;
													Vector2 vector189 = Vector2.Normalize(vector188);
													float num1553 = vector188.Length();
													float num1554 = 700f;
													if (this.type == 214)
													{
														num1554 = 550f;
													}
													if (this.type == 215)
													{
														num1554 = 800f;
													}
													if (num1553 < num1554)
													{
														if (this.ai[1] == 60f && Math.Sign(vector188.X) == this.direction)
														{
															this.ai[1] = -60f;
															Vector2 center12 = Main.player[this.target].Center;
															Vector2 value26 = base.Center - Vector2.UnitY * 4f;
															Vector2 vector190 = center12 - value26;
															vector190.X += (float)Main.rand.Next(-50, 51);
															vector190.Y += (float)Main.rand.Next(-50, 51);
															vector190.X *= (float)Main.rand.Next(80, 121) * 0.01f;
															vector190.Y *= (float)Main.rand.Next(80, 121) * 0.01f;
															vector190.Normalize();
															if (float.IsNaN(vector190.X) || float.IsNaN(vector190.Y))
															{
																vector190 = -Vector2.UnitY;
															}
															vector190 *= scaleFactor20;
															Projectile.NewProjectile(value26.X, value26.Y, vector190.X, vector190.Y, num1551, num1552, 0f, Main.myPlayer, 0f, 0f);
															this.netUpdate = true;
														}
														else
														{
															float num1555 = this.ai[2];
															this.velocity.X = this.velocity.X * 0.5f;
															this.ai[2] = 3f;
															if (Math.Abs(vector189.Y) > Math.Abs(vector189.X) * 2f)
															{
																if (vector189.Y > 0f)
																{
																	this.ai[2] = 1f;
																}
																else
																{
																	this.ai[2] = 5f;
																}
															}
															else if (Math.Abs(vector189.X) > Math.Abs(vector189.Y) * 2f)
															{
																this.ai[2] = 3f;
															}
															else if (vector189.Y > 0f)
															{
																this.ai[2] = 2f;
															}
															else
															{
																this.ai[2] = 4f;
															}
															if (this.ai[2] != num1555)
															{
																this.netUpdate = true;
															}
														}
													}
												}
											}
											if (this.type == 492)
											{
												this.timeLeft = nPC7.timeLeft;
												this.velocity = nPC7.velocity;
												if (this.ai[3] < 240f)
												{
													this.ai[3] += 1f;
												}
												if (this.ai[3] == 2f)
												{
													this.TargetClosest(false);
												}
												if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
												{
													Vector2 vector191 = Main.player[this.target].Center - base.Center;
													Vector2.Normalize(vector191);
													if (this.ai[3] >= 240f)
													{
														this.ai[3] = 0f;
														Vector2 center13 = Main.player[this.target].Center;
														Vector2 center14 = base.Center;
														Vector2 value27 = Vector2.Normalize(center13 - center14);
														if (float.IsNaN(value27.X) || float.IsNaN(value27.Y))
														{
															value27 = Vector2.UnitY;
														}
														value27 *= 14f;
														value27 += Vector2.UnitY * -5f;
														if (Main.netMode != 1)
														{
															Projectile.NewProjectile(center14.X, center14.Y, value27.X, value27.Y, 240, 30, 0f, Main.myPlayer, 0f, 0f);
														}
														this.netUpdate = true;
													}
													else
													{
														float num1556 = this.ai[2];
														float[] array4 = new float[8];
														for (int num1557 = 0; num1557 < array4.Length; num1557++)
														{
															array4[num1557] = Vector2.Distance(base.Center + Vector2.UnitY.RotatedBy((double)((float)num1557 * -0.7853982f), default(Vector2)) * 50f, Main.player[this.target].Center);
														}
														int num1558 = 0;
														for (int num1559 = 1; num1559 < array4.Length; num1559++)
														{
															if (array4[num1558] > array4[num1559])
															{
																num1558 = num1559;
															}
														}
														this.ai[2] = (float)(num1558 + 1);
														if (this.spriteDirection == 1)
														{
															this.ai[2] = 9f - this.ai[2];
														}
														if (this.ai[2] != num1556)
														{
															this.netUpdate = true;
														}
													}
												}
												else
												{
													if (this.ai[2] != 0f)
													{
														this.netUpdate = true;
													}
													this.ai[2] = 0f;
												}
											}
											if (this.type == 394)
											{
												this.timeLeft = nPC7.timeLeft;
												int num1560 = 50;
												if (Main.expertMode)
												{
													num1560 = 37;
												}
												this.ai[3] = nPC7.ai[3];
												float num1561 = 440f;
												float num1562 = 140f;
												if (this.ai[3] >= num1561 && this.ai[3] < num1561 + num1562)
												{
													float num1563 = this.ai[3] - num1561;
													if (num1563 % 20f == 0f)
													{
														if (Main.netMode != 1)
														{
															Vector2 spinningpoint2 = (float)num1534 * Vector2.UnitX;
															spinningpoint2 = spinningpoint2.RotatedBy((Main.rand.NextDouble() - 0.5) * 0.78539818525314331, default(Vector2));
															spinningpoint2 *= 8f;
															Vector2 vector192 = (float)num1534 * Vector2.UnitX * 36f + base.Center + Vector2.UnitY * 8f;
															Projectile.NewProjectile(vector192.X, vector192.Y, spinningpoint2.X, spinningpoint2.Y, 448, num1560, 0f, Main.myPlayer, 0f, 20f);
														}
														Main.PlaySound(2, (int)base.Center.X, (int)base.Center.Y, 39);
													}
												}
											}
											if (this.type == 393)
											{
												this.timeLeft = nPC7.timeLeft;
												int num1564 = 35;
												if (Main.expertMode)
												{
													num1564 = 30;
												}
												this.ai[3] = nPC7.ai[3];
												float num1565 = 280f;
												float num1566 = 140f;
												bool flag145 = this.ai[3] >= num1565 && this.ai[3] < num1565 + num1566;
												if (!flag145)
												{
													this.TargetClosest(false);
													Player player7 = Main.player[this.target];
													Vector2 v = player7.Center - base.Center;
													if (v.Y < 0f)
													{
														v.Y = 0f;
													}
													v.Normalize();
													if (float.IsNaN(v.X) || float.IsNaN(v.Y))
													{
														v = Vector2.UnitY;
													}
													this.ai[2] = v.ToRotation();
												}
												if (flag145)
												{
													float num1567 = this.ai[3] - num1565;
													if (num1567 % 6f == 0f)
													{
														if (Main.netMode != 1)
														{
															Vector2 spinningpoint3 = this.ai[2].ToRotationVector2();
															spinningpoint3 = spinningpoint3.RotatedBy((Main.rand.NextDouble() - 0.5) * 0.78539818525314331 / 3.0, default(Vector2));
															spinningpoint3 *= 16f;
															Vector2 vector193 = base.Center + spinningpoint3 * 1f;
															Projectile.NewProjectile(vector193.X, vector193.Y, spinningpoint3.X, spinningpoint3.Y, 449, num1564, 0f, Main.myPlayer, 0f, 0f);
														}
														Main.PlaySound(2, (int)base.Center.X, (int)base.Center.Y, 12);
													}
												}
											}
											if (this.type == 392)
											{
												this.timeLeft = nPC7.timeLeft;
												int num1568 = 70;
												if (Main.expertMode)
												{
													num1568 = 50;
												}
												this.ai[3] = nPC7.ai[3];
												float num1569 = 20f;
												float num1570 = 240f;
												bool flag146 = this.ai[3] >= num1569 && this.ai[3] < num1569 + num1570 && nPC7.ai[0] == 0f;
												if (flag146)
												{
													float num1571 = this.ai[3] - num1569;
													if (num1571 == 0f)
													{
														if (Main.netMode != 1)
														{
															Vector2 center15 = base.Center;
															Projectile.NewProjectile(center15.X, center15.Y, 0f, 0f, 447, num1568, 0f, Main.myPlayer, (float)(this.whoAmI + 1), 0f);
														}
														Main.PlaySound(2, (int)base.Center.X, (int)base.Center.Y, 12);
													}
												}
												flag146 = false;
												int maxValue10 = 1000;
												int maxValue11 = 1000;
												int num1572 = 450;
												int num1573 = 30;
												if (Main.expertMode)
												{
													num1573 = 25;
												}
												if (nPC7.ai[0] == 2f)
												{
													flag146 = true;
													maxValue11 = 120;
													maxValue10 = 120;
												}
												if (!flag146)
												{
													num1569 = 280f;
													num1570 = 120f;
													flag146 = (flag146 || (this.ai[3] >= num1569 && this.ai[3] < num1569 + num1570));
													if (flag146)
													{
														maxValue11 = 90;
														maxValue10 = 60;
													}
												}
												if (!flag146)
												{
													num1569 = 440f;
													num1570 = 140f;
													flag146 = (flag146 || (this.ai[3] >= num1569 && this.ai[3] < num1569 + num1570));
													if (flag146)
													{
														maxValue11 = 60;
														maxValue10 = 90;
													}
												}
												bool flag147 = true;
												bool flag148 = true;
												bool flag149 = true;
												bool flag150 = true;
												if (Main.npc[(int)this.localAI[0]].active && Main.npc[(int)this.localAI[0]].type == 393)
												{
													flag147 = false;
												}
												if (Main.npc[(int)this.localAI[1]].active && Main.npc[(int)this.localAI[1]].type == 393)
												{
													flag148 = false;
												}
												if (Main.npc[(int)this.localAI[2]].active && Main.npc[(int)this.localAI[2]].type == 394)
												{
													flag149 = false;
												}
												if (Main.npc[(int)this.localAI[3]].active && Main.npc[(int)this.localAI[3]].type == 394)
												{
													flag150 = false;
												}
												if (flag146)
												{
													bool flag151 = flag147;
													if (flag151 && Main.rand.Next(maxValue10) == 0)
													{
														if (Main.netMode != 1)
														{
															Vector2 spinningpoint4 = new Vector2(-1f * (float)Main.rand.NextDouble() * 3f, 1f);
															spinningpoint4 = spinningpoint4.RotatedBy((Main.rand.NextDouble() - 0.5) * 0.78539818525314331, default(Vector2));
															spinningpoint4 *= 3f;
															Vector2 vector194 = -1f * Vector2.UnitX * (float)Main.rand.Next(50, 70) + base.Center + Vector2.UnitY * (float)Main.rand.Next(30, 45);
															Projectile.NewProjectile(vector194.X, vector194.Y, spinningpoint4.X, spinningpoint4.Y, num1572, num1573, 0f, Main.myPlayer, 0f, 0f);
														}
														Main.PlaySound(2, (int)base.Center.X, (int)base.Center.Y, 39);
													}
													flag151 = flag148;
													if (flag151 && Main.rand.Next(maxValue10) == 0)
													{
														if (Main.netMode != 1)
														{
															Vector2 spinningpoint5 = new Vector2(1f * (float)Main.rand.NextDouble() * 3f, 1f);
															spinningpoint5 = spinningpoint5.RotatedBy((Main.rand.NextDouble() - 0.5) * 0.78539818525314331, default(Vector2));
															spinningpoint5 *= 3f;
															Vector2 vector195 = 1f * Vector2.UnitX * (float)Main.rand.Next(50, 70) + base.Center + Vector2.UnitY * (float)Main.rand.Next(30, 45);
															Projectile.NewProjectile(vector195.X, vector195.Y, spinningpoint5.X, spinningpoint5.Y, num1572, num1573, 0f, Main.myPlayer, 0f, 0f);
														}
														Main.PlaySound(2, (int)base.Center.X, (int)base.Center.Y, 39);
													}
												}
												if (flag146)
												{
													bool flag152 = flag149;
													if (flag152 && Main.rand.Next(maxValue11) == 0)
													{
														if (Main.netMode != 1)
														{
															Vector2 spinningpoint6 = new Vector2(-1f * (float)Main.rand.NextDouble() * 2f, -1f);
															spinningpoint6 = spinningpoint6.RotatedBy((Main.rand.NextDouble() - 0.5) * 0.78539818525314331, default(Vector2));
															spinningpoint6 *= 3f;
															Vector2 vector196 = -1f * Vector2.UnitX * (float)Main.rand.Next(30, 60) + base.Center + Vector2.UnitY * (float)Main.rand.Next(-30, -10);
															Projectile.NewProjectile(vector196.X, vector196.Y, spinningpoint6.X, spinningpoint6.Y, num1572, num1573, 0f, Main.myPlayer, 0f, 0f);
														}
														Main.PlaySound(2, (int)base.Center.X, (int)base.Center.Y, 39);
													}
													flag152 = flag150;
													if (flag152 && Main.rand.Next(maxValue11) == 0)
													{
														if (Main.netMode != 1)
														{
															Vector2 spinningpoint7 = new Vector2(1f * (float)Main.rand.NextDouble() * 2f, -1f);
															spinningpoint7 = spinningpoint7.RotatedBy((Main.rand.NextDouble() - 0.5) * 0.78539818525314331, default(Vector2));
															spinningpoint7 *= 3f;
															Vector2 vector197 = 1f * Vector2.UnitX * (float)Main.rand.Next(30, 60) + base.Center + Vector2.UnitY * (float)Main.rand.Next(-30, -10);
															Projectile.NewProjectile(vector197.X, vector197.Y, spinningpoint7.X, spinningpoint7.Y, num1572, num1573, 0f, Main.myPlayer, 0f, 0f);
														}
														Main.PlaySound(2, (int)base.Center.X, (int)base.Center.Y, 39);
													}
												}
												if (flag147 && Main.rand.Next(8) == 0)
												{
													int num1574 = Dust.NewDust(-1f * Vector2.UnitX * (float)Main.rand.Next(50, 70) + base.Center + Vector2.UnitY * (float)Main.rand.Next(15, 30), 4, 16, (Main.rand.Next(4) != 0) ? 31 : 228, 0f, 0f, 100, default(Color), 1.2f);
													Main.dust[num1574].velocity = new Vector2(-1f * (float)Main.rand.NextDouble() * 3f, 1f).RotatedBy((Main.rand.NextDouble() - 0.5) * 0.78539818525314331, default(Vector2));
													Main.dust[num1574].velocity *= 0.5f;
													Main.dust[num1574].velocity.Y = -Math.Abs(Main.dust[num1574].velocity.Y);
												}
												if (flag148 && Main.rand.Next(8) == 0)
												{
													int num1575 = Dust.NewDust(Vector2.UnitX * (float)Main.rand.Next(50, 70) + base.Center + Vector2.UnitY * (float)Main.rand.Next(15, 30), 4, 16, (Main.rand.Next(4) != 0) ? 31 : 228, 0f, 0f, 100, default(Color), 1.2f);
													Main.dust[num1575].velocity = new Vector2((float)Main.rand.NextDouble() * 3f, 1f).RotatedBy((Main.rand.NextDouble() - 0.5) * 0.78539818525314331, default(Vector2));
													Main.dust[num1575].velocity *= 0.5f;
													Main.dust[num1575].velocity.Y = -Math.Abs(Main.dust[num1575].velocity.Y);
												}
												if (flag149 && Main.rand.Next(8) == 0)
												{
													int num1576 = Dust.NewDust(-1f * Vector2.UnitX * (float)Main.rand.Next(30, 60) + base.Center + Vector2.UnitY * (float)Main.rand.Next(-30, -10), 4, 16, (Main.rand.Next(4) != 0) ? 31 : 228, 0f, 0f, 100, default(Color), 1.2f);
													Main.dust[num1576].velocity = new Vector2(-1f * (float)Main.rand.NextDouble() * 2f, 1f).RotatedBy((Main.rand.NextDouble() - 0.5) * 0.78539818525314331, default(Vector2));
													Main.dust[num1576].velocity *= 0.5f;
													Main.dust[num1576].velocity.Y = -Math.Abs(Main.dust[num1576].velocity.Y);
												}
												if (flag150 && Main.rand.Next(8) == 0)
												{
													int num1577 = Dust.NewDust(Vector2.UnitX * (float)Main.rand.Next(30, 60) + base.Center + Vector2.UnitY * (float)Main.rand.Next(-30, -10), 4, 16, (Main.rand.Next(4) != 0) ? 31 : 228, 0f, 0f, 100, default(Color), 1.2f);
													Main.dust[num1577].velocity = new Vector2((float)Main.rand.NextDouble() * 2f, 1f).RotatedBy((Main.rand.NextDouble() - 0.5) * 0.78539818525314331, default(Vector2));
													Main.dust[num1577].velocity *= 0.5f;
													Main.dust[num1577].velocity.Y = -Math.Abs(Main.dust[num1577].velocity.Y);
													return;
												}
											}
										}
										else
										{
											if (this.type == 390)
											{
												this.Transform(382);
												return;
											}
											if (this.type == 416)
											{
												this.Transform(518);
												return;
											}
											this.life = 0;
											this.HitEffect(0, 10.0);
											this.active = false;
											return;
										}
									}
									else if (this.aiStyle == 76)
									{
										if (this.localAI[3] == 0f && Main.netMode != 1 && this.type == 395)
										{
											this.localAI[3] = 1f;
											int[] array5 = new int[4];
											int num1578 = 0;
											for (int num1579 = 0; num1579 < 2; num1579++)
											{
												int num1580 = NPC.NewNPC((int)base.Center.X + num1579 * 300 - 150, (int)base.Center.Y, 393, this.whoAmI, 0f, 0f, 0f, 0f, 255);
												Main.npc[num1580].ai[1] = (float)num1579;
												Main.npc[num1580].netUpdate = true;
												array5[num1578++] = num1580;
											}
											for (int num1581 = 0; num1581 < 2; num1581++)
											{
												int num1582 = NPC.NewNPC((int)base.Center.X + num1581 * 300 - 150, (int)base.Center.Y, 394, this.whoAmI, 0f, 0f, 0f, 0f, 255);
												Main.npc[num1582].ai[1] = (float)num1581;
												Main.npc[num1582].netUpdate = true;
												array5[num1578++] = num1582;
											}
											int num1583 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 392, this.whoAmI, 0f, 0f, 0f, 0f, 255);
											Main.npc[num1583].ai[0] = (float)this.whoAmI;
											Main.npc[num1583].netUpdate = true;
											for (int num1584 = 0; num1584 < 4; num1584++)
											{
												Main.npc[array5[num1584]].ai[0] = (float)this.whoAmI;
											}
											for (int num1585 = 0; num1585 < 4; num1585++)
											{
												Main.npc[num1583].localAI[num1585] = (float)array5[num1585];
											}
										}
										Vector2 center16 = base.Center;
										Player player8 = Main.player[this.target];
										if (this.target < 0 || this.target == 255 || player8.dead || !player8.active)
										{
											this.TargetClosest(true);
											player8 = Main.player[this.target];
											this.netUpdate = true;
										}
										if ((player8.dead || Vector2.Distance(player8.Center, center16) > 5600f) && this.ai[0] != 1f)
										{
											if (this.ai[0] == 0f)
											{
												this.ai[0] = -1f;
											}
											if (this.ai[0] == 2f)
											{
												this.ai[0] = -2f;
											}
											this.netUpdate = true;
										}
										if (this.ai[0] == -1f || this.ai[0] == -2f)
										{
											this.velocity.Y = this.velocity.Y - 0.4f;
											if (this.timeLeft > 10)
											{
												this.timeLeft = 10;
											}
											if (!player8.dead)
											{
												this.timeLeft = 300;
												if (this.ai[0] == -2f)
												{
													this.ai[0] = 2f;
												}
												if (this.ai[0] == 0f)
												{
													this.ai[0] = 0f;
												}
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.ai[3] = 0f;
												this.netUpdate = true;
											}
										}
										else if (this.ai[0] == 0f)
										{
											int num1586 = 0;
											if (this.ai[3] >= 580f)
											{
												num1586 = 0;
											}
											else if (this.ai[3] >= 440f)
											{
												num1586 = 5;
											}
											else if (this.ai[3] >= 420f)
											{
												num1586 = 4;
											}
											else if (this.ai[3] >= 280f)
											{
												num1586 = 3;
											}
											else if (this.ai[3] >= 260f)
											{
												num1586 = 2;
											}
											else if (this.ai[3] >= 20f)
											{
												num1586 = 1;
											}
											this.ai[3] += 1f;
											if (this.ai[3] >= 600f)
											{
												this.ai[3] = 0f;
											}
											int num1587 = num1586;
											if (this.ai[3] >= 580f)
											{
												num1586 = 0;
											}
											else if (this.ai[3] >= 440f)
											{
												num1586 = 5;
											}
											else if (this.ai[3] >= 420f)
											{
												num1586 = 4;
											}
											else if (this.ai[3] >= 280f)
											{
												num1586 = 3;
											}
											else if (this.ai[3] >= 260f)
											{
												num1586 = 2;
											}
											else if (this.ai[3] >= 20f)
											{
												num1586 = 1;
											}
											if (num1586 != num1587)
											{
												if (num1586 == 0)
												{
													this.ai[2] = 0f;
												}
												if (num1586 == 1)
												{
													this.ai[2] = (float)((Math.Sign((player8.Center - center16).X) == 1) ? 1 : -1);
												}
												if (num1586 == 2)
												{
													this.ai[2] = 0f;
												}
												this.netUpdate = true;
											}
											if (num1586 == 0)
											{
												if (this.ai[2] == 0f)
												{
													this.ai[2] = (float)(-600 * Math.Sign((center16 - player8.Center).X));
												}
												Vector2 vector198 = player8.Center + new Vector2(this.ai[2], -250f) - center16;
												if (vector198.Length() < 50f)
												{
													this.ai[3] = 19f;
												}
												else
												{
													vector198.Normalize();
													this.velocity = Vector2.Lerp(this.velocity, vector198 * 16f, 0.1f);
												}
											}
											if (num1586 == 1)
											{
												int num1588 = (int)base.Center.X / 16;
												int num1589 = (int)(this.position.Y + (float)this.height) / 16;
												int num1590 = 0;
												bool flag153 = Main.tile[num1588, num1589].nactive() && Main.tileSolid[(int)Main.tile[num1588, num1589].type] && !Main.tileSolidTop[(int)Main.tile[num1588, num1589].type];
												if (flag153)
												{
													num1590 = 1;
												}
												else
												{
													while (num1590 < 150 && num1589 + num1590 < Main.maxTilesY)
													{
														int num1591 = num1589 + num1590;
														bool flag154 = Main.tile[num1588, num1591].nactive() && Main.tileSolid[(int)Main.tile[num1588, num1591].type] && !Main.tileSolidTop[(int)Main.tile[num1588, num1591].type];
														if (flag154)
														{
															num1590--;
															break;
														}
														num1590++;
													}
												}
												float num1592 = (float)(num1590 * 16);
												float num1593 = 250f;
												if (num1592 < num1593)
												{
													float num1594 = -4f;
													if (-num1594 > num1592)
													{
														num1594 = -num1592;
													}
													this.velocity.Y = MathHelper.Lerp(this.velocity.Y, num1594, 0.05f);
												}
												else
												{
													this.velocity.Y = this.velocity.Y * 0.95f;
												}
												this.velocity.X = 3.5f * this.ai[2];
											}
											if (num1586 == 2)
											{
												if (this.ai[2] == 0f)
												{
													this.ai[2] = (float)(300 * Math.Sign((center16 - player8.Center).X));
												}
												Vector2 vector199 = player8.Center + new Vector2(this.ai[2], -170f) - center16;
												int num1595 = (int)base.Center.X / 16;
												int num1596 = (int)(this.position.Y + (float)this.height) / 16;
												int num1597 = 0;
												bool flag155 = Main.tile[num1595, num1596].nactive() && Main.tileSolid[(int)Main.tile[num1595, num1596].type] && !Main.tileSolidTop[(int)Main.tile[num1595, num1596].type];
												if (flag155)
												{
													num1597 = 1;
												}
												else
												{
													while (num1597 < 150 && num1596 + num1597 < Main.maxTilesY)
													{
														int num1598 = num1596 + num1597;
														bool flag156 = Main.tile[num1595, num1598].nactive() && Main.tileSolid[(int)Main.tile[num1595, num1598].type] && !Main.tileSolidTop[(int)Main.tile[num1595, num1598].type];
														if (flag156)
														{
															num1597--;
															break;
														}
														num1597++;
													}
												}
												float num1599 = (float)(num1597 * 16);
												float num1600 = 170f;
												if (num1599 < num1600)
												{
													vector199.Y -= num1600 - num1599;
												}
												if (vector199.Length() < 70f)
												{
													this.ai[3] = 279f;
												}
												else
												{
													vector199.Normalize();
													this.velocity = Vector2.Lerp(this.velocity, vector199 * 20f, 0.1f);
												}
											}
											else if (num1586 == 3)
											{
												float num1601 = 0.85f;
												int num1602 = (int)base.Center.X / 16;
												int num1603 = (int)(this.position.Y + (float)this.height) / 16;
												int num1604 = 0;
												bool flag157 = Main.tile[num1602, num1603].nactive() && Main.tileSolid[(int)Main.tile[num1602, num1603].type] && !Main.tileSolidTop[(int)Main.tile[num1602, num1603].type];
												if (flag157)
												{
													num1604 = 1;
												}
												else
												{
													while (num1604 < 150 && num1603 + num1604 < Main.maxTilesY)
													{
														int num1605 = num1603 + num1604;
														bool flag158 = Main.tile[num1602, num1605].nactive() && Main.tileSolid[(int)Main.tile[num1602, num1605].type] && !Main.tileSolidTop[(int)Main.tile[num1602, num1605].type];
														if (flag158)
														{
															num1604--;
															break;
														}
														num1604++;
													}
												}
												float num1606 = (float)(num1604 * 16);
												float num1607 = 170f;
												if (num1606 < num1607)
												{
													float num1608 = -4f;
													if (-num1608 > num1606)
													{
														num1608 = -num1606;
													}
													this.velocity.Y = MathHelper.Lerp(this.velocity.Y, num1608, 0.05f);
												}
												else
												{
													this.velocity.Y = this.velocity.Y * num1601;
												}
												this.velocity.X = this.velocity.X * num1601;
											}
											if (num1586 == 4)
											{
												Vector2 vector200 = player8.Center + new Vector2(0f, -250f) - center16;
												if (vector200.Length() < 50f)
												{
													this.ai[3] = 439f;
												}
												else
												{
													vector200.Normalize();
													this.velocity = Vector2.Lerp(this.velocity, vector200 * 16f, 0.1f);
												}
											}
											else if (num1586 == 5)
											{
												this.velocity *= 0.85f;
											}
										}
										else if (this.ai[0] == 1f)
										{
											this.dontTakeDamage = false;
											this.velocity *= 0.96f;
											float num1609 = 150f;
											this.ai[1] += 1f;
											if (this.ai[1] >= num1609)
											{
												this.ai[0] = 2f;
												this.ai[1] = 0f;
												this.rotation = 0f;
												this.netUpdate = true;
											}
											else if (this.ai[1] < 40f)
											{
												this.rotation = Vector2.UnitY.RotatedBy((double)(this.ai[1] / 40f * 6.28318548f), default(Vector2)).Y * 0.2f;
											}
											else if (this.ai[1] < 80f)
											{
												this.rotation = Vector2.UnitY.RotatedBy((double)(this.ai[1] / 20f * 6.28318548f), default(Vector2)).Y * 0.3f;
											}
											else if (this.ai[1] < 120f)
											{
												this.rotation = Vector2.UnitY.RotatedBy((double)(this.ai[1] / 10f * 6.28318548f), default(Vector2)).Y * 0.4f;
											}
											else
											{
												this.rotation = (this.ai[1] - 120f) / 30f * 6.28318548f;
											}
										}
										else if (this.ai[0] == 2f)
										{
											int num1610 = 100;
											float num1611 = 3600f;
											float num1612 = 120f;
											float num1613 = 60f;
											int num1614 = 0;
											if (this.ai[3] % num1612 >= num1613)
											{
												num1614 = 1;
											}
											int num1615 = num1614;
											num1614 = 0;
											this.ai[3] += 1f;
											if (this.ai[3] % num1612 >= num1613)
											{
												num1614 = 1;
											}
											if (num1614 != num1615)
											{
												if (num1614 == 1)
												{
													this.ai[2] = (float)((Math.Sign((player8.Center - center16).X) == 1) ? 1 : -1);
													if (Main.netMode != 1)
													{
														Vector2 center17 = base.Center;
														Projectile.NewProjectile(center17.X, center17.Y, 0f, 0f, 447, num1610, 0f, Main.myPlayer, (float)(this.whoAmI + 1), 0f);
													}
													Main.PlaySound(2, (int)base.Center.X, (int)base.Center.Y, 12);
												}
												this.netUpdate = true;
											}
											if (this.ai[3] >= num1611)
											{
												this.ai[0] = 2f;
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.ai[3] = 0f;
												this.netUpdate = true;
											}
											else if (num1614 == 0)
											{
												Vector2 vector201 = player8.Center + new Vector2(this.ai[2] * 350f, -250f) - center16;
												vector201.Normalize();
												this.velocity = Vector2.Lerp(this.velocity, vector201 * 16f, 0.1f);
											}
											else
											{
												int num1616 = (int)base.Center.X / 16;
												int num1617 = (int)(this.position.Y + (float)this.height) / 16;
												int num1618 = 0;
												bool flag159 = Main.tile[num1616, num1617].nactive() && Main.tileSolid[(int)Main.tile[num1616, num1617].type] && !Main.tileSolidTop[(int)Main.tile[num1616, num1617].type];
												if (flag159)
												{
													num1618 = 1;
												}
												else
												{
													while (num1618 < 150 && num1617 + num1618 < Main.maxTilesY)
													{
														int num1619 = num1617 + num1618;
														bool flag160 = Main.tile[num1616, num1619].nactive() && Main.tileSolid[(int)Main.tile[num1616, num1619].type] && !Main.tileSolidTop[(int)Main.tile[num1616, num1619].type];
														if (flag160)
														{
															num1618--;
															break;
														}
														num1618++;
													}
												}
												float num1620 = (float)(num1618 * 16);
												float num1621 = 250f;
												if (num1620 < num1621)
												{
													float num1622 = -4f;
													if (-num1622 > num1620)
													{
														num1622 = -num1620;
													}
													this.velocity.Y = MathHelper.Lerp(this.velocity.Y, num1622, 0.05f);
												}
												else
												{
													this.velocity.Y = this.velocity.Y * 0.95f;
												}
												this.velocity.X = 8f * this.ai[2];
											}
											this.rotation = 0f;
										}
										bool flag161 = false;
										if (this.position.Y < -100f)
										{
											flag161 = true;
										}
										if (this.position.X < -100f)
										{
											flag161 = true;
										}
										if (this.position.Y > (float)(Main.maxTilesY * 16 + 100))
										{
											flag161 = true;
										}
										if (this.position.X > (float)(Main.maxTilesX * 16 + 100))
										{
											flag161 = true;
										}
										if (flag161)
										{
											this.position = Vector2.Clamp(this.position, new Vector2(-100f), new Vector2(100f) + new Vector2((float)Main.maxTilesX, (float)Main.maxTilesY) * 16f);
											this.active = false;
											this.netUpdate = true;
											return;
										}
									}
									else if (this.aiStyle == 77)
									{
										if (this.ai[0] != -1f && this.ai[0] != 2f && Main.rand.Next(200) == 0)
										{
											Main.PlaySound(29, (int)base.Center.X, (int)base.Center.Y, Main.rand.Next(93, 100));
										}
										if (this.localAI[3] == 0f)
										{
											this.netUpdate = true;
											this.localAI[3] = 1f;
											this.ai[0] = -1f;
										}
										if (this.ai[0] == -2f)
										{
											this.dontTakeDamage = true;
											this.ai[1] += 1f;
											if (this.ai[1] == 30f)
											{
												Main.PlaySound(29, (int)base.Center.X, (int)base.Center.Y, 92);
											}
											if (this.ai[1] < 60f)
											{
												MoonlordDeathDrama.RequestLight(this.ai[1] / 30f, base.Center);
											}
											if (this.ai[1] == 60f)
											{
												this.ai[1] = 0f;
												this.ai[0] = 0f;
												if (Main.netMode != 1 && this.type == 398)
												{
													this.ai[2] = (float)Main.rand.Next(3);
													this.ai[2] = 0f;
													this.netUpdate = true;
												}
											}
										}
										if (this.ai[0] == -1f)
										{
											this.dontTakeDamage = true;
											this.ai[1] += 1f;
											if (this.ai[1] == 30f)
											{
												Main.PlaySound(29, (int)base.Center.X, (int)base.Center.Y, 92);
											}
											if (this.ai[1] < 60f)
											{
												MoonlordDeathDrama.RequestLight(this.ai[1] / 30f, base.Center);
											}
											if (this.ai[1] == 60f)
											{
												this.ai[1] = 0f;
												this.ai[0] = 0f;
												if (Main.netMode != 1 && this.type == 398)
												{
													this.ai[2] = (float)Main.rand.Next(3);
													this.ai[2] = 0f;
													this.netUpdate = true;
													int[] array6 = new int[3];
													int num1623 = 0;
													for (int num1624 = 0; num1624 < 2; num1624++)
													{
														int num1625 = NPC.NewNPC((int)base.Center.X + num1624 * 800 - 400, (int)base.Center.Y - 100, 397, this.whoAmI, 0f, 0f, 0f, 0f, 255);
														Main.npc[num1625].ai[2] = (float)num1624;
														Main.npc[num1625].netUpdate = true;
														array6[num1623++] = num1625;
													}
													int num1626 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y - 400, 396, this.whoAmI, 0f, 0f, 0f, 0f, 255);
													Main.npc[num1626].netUpdate = true;
													array6[num1623++] = num1626;
													for (int num1627 = 0; num1627 < 3; num1627++)
													{
														Main.npc[array6[num1627]].ai[3] = (float)this.whoAmI;
													}
													for (int num1628 = 0; num1628 < 3; num1628++)
													{
														this.localAI[num1628] = (float)array6[num1628];
													}
												}
											}
										}
										if (this.ai[0] == 0f)
										{
											this.dontTakeDamage = true;
											this.TargetClosest(false);
											Vector2 value28 = Main.player[this.target].Center - base.Center + new Vector2(0f, 130f);
											if (value28.Length() > 20f)
											{
												Vector2 desiredVelocity2 = Vector2.Normalize(value28 - this.velocity) * 8f;
												Vector2 velocity3 = this.velocity;
												this.SimpleFlyMovement(desiredVelocity2, 0.5f);
												this.velocity = Vector2.Lerp(this.velocity, velocity3, 0.5f);
											}
											if (Main.netMode != 1)
											{
												bool flag162 = false;
												if (this.localAI[0] < 0f || this.localAI[1] < 0f || this.localAI[2] < 0f)
												{
													flag162 = true;
												}
												else if (!Main.npc[(int)this.localAI[0]].active || Main.npc[(int)this.localAI[0]].type != 397)
												{
													flag162 = true;
												}
												else if (!Main.npc[(int)this.localAI[1]].active || Main.npc[(int)this.localAI[1]].type != 397)
												{
													flag162 = true;
												}
												else if (!Main.npc[(int)this.localAI[2]].active || Main.npc[(int)this.localAI[2]].type != 396)
												{
													flag162 = true;
												}
												if (flag162)
												{
													this.life = 0;
													this.HitEffect(0, 10.0);
													this.active = false;
												}
												bool flag163 = true;
												if (Main.npc[(int)this.localAI[0]].ai[0] != -2f)
												{
													flag163 = false;
												}
												if (Main.npc[(int)this.localAI[1]].ai[0] != -2f)
												{
													flag163 = false;
												}
												if (Main.npc[(int)this.localAI[2]].ai[0] != -2f)
												{
													flag163 = false;
												}
												if (flag163)
												{
													this.ai[0] = 1f;
													this.dontTakeDamage = false;
													this.netUpdate = true;
												}
											}
										}
										else if (this.ai[0] == 1f)
										{
											this.dontTakeDamage = false;
											this.TargetClosest(false);
											Vector2 value29 = Main.player[this.target].Center - base.Center + new Vector2(0f, 130f);
											if (value29.Length() > 20f)
											{
												Vector2 desiredVelocity3 = Vector2.Normalize(value29 - this.velocity) * 8f;
												Vector2 velocity4 = this.velocity;
												this.SimpleFlyMovement(desiredVelocity3, 0.5f);
												this.velocity = Vector2.Lerp(this.velocity, velocity4, 0.5f);
											}
										}
										else if (this.ai[0] == 2f)
										{
											this.dontTakeDamage = true;
											Vector2 value30 = new Vector2((float)this.direction, -0.5f);
											this.velocity = Vector2.Lerp(this.velocity, value30, 0.98f);
											this.ai[1] += 1f;
											if (this.ai[1] < 60f)
											{
												MoonlordDeathDrama.RequestLight(this.ai[1] / 60f, base.Center);
											}
											if (this.ai[1] == 60f)
											{
												for (int num1629 = 0; num1629 < 1000; num1629++)
												{
													Projectile projectile = Main.projectile[num1629];
													if (projectile.active && (projectile.type == 456 || projectile.type == 462 || projectile.type == 455 || projectile.type == 452 || projectile.type == 454))
													{
														projectile.Kill();
													}
												}
												for (int num1630 = 0; num1630 < 200; num1630++)
												{
													NPC nPC8 = Main.npc[num1630];
													if (nPC8.active && nPC8.type == 400)
													{
														nPC8.HitEffect(0, 9999.0);
														nPC8.active = false;
													}
												}
											}
											if (this.ai[1] % 3f == 0f && this.ai[1] < 580f && this.ai[1] > 60f)
											{
												Vector2 vector202 = Utils.RandomVector2(Main.rand, -1f, 1f);
												if (vector202 != Vector2.Zero)
												{
													vector202.Normalize();
												}
												vector202 *= 20f + Main.rand.NextFloat() * 400f;
												bool flag164 = true;
												Vector2 vector203 = base.Center + vector202;
												Point point7 = vector203.ToTileCoordinates();
												if (!WorldGen.InWorld(point7.X, point7.Y, 0))
												{
													flag164 = false;
												}
												if (flag164 && WorldGen.SolidTile(point7.X, point7.Y))
												{
													flag164 = false;
												}
												float num1631 = (float)Main.rand.Next(6, 19);
												float num1632 = 6.28318548f / num1631;
												float num1633 = 6.28318548f * Main.rand.NextFloat();
												float scaleFactor21 = 1f + Main.rand.NextFloat() * 2f;
												float num1634 = 1f + Main.rand.NextFloat();
												float fadeIn = 0.4f + Main.rand.NextFloat();
												int num1635 = Utils.SelectRandom<int>(Main.rand, new int[]
													{
														31,
														229
													});
#if CLIENT
												if (flag164)
												{
													MoonlordDeathDrama.AddExplosion(vector203);
													for (float num1636 = 0f; num1636 < num1631 * 2f; num1636 += 1f)
													{
														Dust dust14 = Main.dust[Dust.NewDust(vector203, 0, 0, 229, 0f, 0f, 0, default(Color), 1f)];
														dust14.noGravity = true;
														dust14.position = vector203;
														dust14.velocity = Vector2.UnitY.RotatedBy((double)(num1633 + num1632 * num1636), default(Vector2)) * scaleFactor21 * (Main.rand.NextFloat() * 1.6f + 1.6f);
														dust14.fadeIn = fadeIn;
														dust14.scale = num1634;
													}
												}
#endif
												for (float num1637 = 0f; num1637 < this.ai[1] / 60f; num1637 += 1f)
												{
													Vector2 vector204 = Utils.RandomVector2(Main.rand, -1f, 1f);
													if (vector204 != Vector2.Zero)
													{
														vector204.Normalize();
													}
													vector204 *= 20f + Main.rand.NextFloat() * 800f;
													Vector2 vector205 = base.Center + vector204;
													Point point8 = vector205.ToTileCoordinates();
													bool flag165 = true;
													if (!WorldGen.InWorld(point8.X, point8.Y, 0))
													{
														flag165 = false;
													}
													if (flag165 && WorldGen.SolidTile(point8.X, point8.Y))
													{
														flag165 = false;
													}
													if (flag165)
													{
														Dust dust15 = Main.dust[Dust.NewDust(vector205, 0, 0, num1635, 0f, 0f, 0, default(Color), 1f)];
														dust15.noGravity = true;
														dust15.position = vector205;
														dust15.velocity = -Vector2.UnitY * scaleFactor21 * (Main.rand.NextFloat() * 0.9f + 1.6f);
														dust15.fadeIn = fadeIn;
														dust15.scale = num1634;
													}
												}
											}
											if (this.ai[1] % 15f == 0f && this.ai[1] < 480f && this.ai[1] >= 90f && Main.netMode != 1)
											{
												Vector2 vector206 = Utils.RandomVector2(Main.rand, -1f, 1f);
												if (vector206 != Vector2.Zero)
												{
													vector206.Normalize();
												}
												vector206 *= 20f + Main.rand.NextFloat() * 400f;
												bool flag166 = true;
												Vector2 vec5 = base.Center + vector206;
												Point point9 = vec5.ToTileCoordinates();
												if (!WorldGen.InWorld(point9.X, point9.Y, 0))
												{
													flag166 = false;
												}
												if (flag166 && WorldGen.SolidTile(point9.X, point9.Y))
												{
													flag166 = false;
												}
												if (flag166)
												{
													float num1638 = (float)(Main.rand.Next(4) < 2).ToDirectionInt() * (0.3926991f + 0.7853982f * Main.rand.NextFloat());
													Vector2 vector207 = new Vector2(0f, -Main.rand.NextFloat() * 0.5f - 0.5f).RotatedBy((double)num1638, default(Vector2)) * 6f;
													Projectile.NewProjectile(vec5.X, vec5.Y, vector207.X, vector207.Y, 622, 0, 0f, Main.myPlayer, 0f, 0f);
												}
											}
											if (this.ai[1] == 1f)
											{
												Main.PlaySound(4, (int)base.Center.X, (int)base.Center.Y, 61);
											}
											if (this.ai[1] >= 480f)
											{
												MoonlordDeathDrama.RequestLight((this.ai[1] - 480f) / 120f, base.Center);
											}
											if (this.ai[1] >= 600f)
											{
												this.life = 0;
												this.HitEffect(0, 1337.0);
												this.checkDead();
												return;
											}
										}
										else if (this.ai[0] == 3f)
										{
											this.dontTakeDamage = true;
											Vector2 value31 = new Vector2((float)this.direction, -0.5f);
											this.velocity = Vector2.Lerp(this.velocity, value31, 0.98f);
											this.ai[1] += 1f;
											if (this.ai[1] < 60f)
											{
												MoonlordDeathDrama.RequestLight(this.ai[1] / 40f, base.Center);
											}
											if (this.ai[1] == 40f)
											{
												for (int num1639 = 0; num1639 < 1000; num1639++)
												{
													Projectile projectile2 = Main.projectile[num1639];
													if (projectile2.active && (projectile2.type == 456 || projectile2.type == 462 || projectile2.type == 455 || projectile2.type == 452 || projectile2.type == 454))
													{
														projectile2.active = false;
														if (Main.netMode != 1)
														{
															NetMessage.SendData(27, -1, -1, "", num1639, 0f, 0f, 0f, 0, 0, 0);
														}
													}
												}
												for (int num1640 = 0; num1640 < 200; num1640++)
												{
													NPC nPC9 = Main.npc[num1640];
													if (nPC9.active && nPC9.type == 400)
													{
														nPC9.active = false;
														if (Main.netMode != 1)
														{
															NetMessage.SendData(23, -1, -1, "", nPC9.whoAmI, 0f, 0f, 0f, 0, 0, 0);
														}
													}
												}
												for (int num1641 = 0; num1641 < 500; num1641++)
												{
													Gore gore = Main.gore[num1641];
													if (gore.active && gore.type >= 619 && gore.type <= 622)
													{
														gore.active = false;
													}
												}
											}
											if (this.ai[1] >= 60f)
											{
												for (int num1642 = 0; num1642 < 200; num1642++)
												{
													NPC nPC10 = Main.npc[num1642];
													if (nPC10.active && (nPC10.type == 400 || nPC10.type == 397 || nPC10.type == 396))
													{
														nPC10.active = false;
														if (Main.netMode != 1)
														{
															NetMessage.SendData(23, -1, -1, "", nPC10.whoAmI, 0f, 0f, 0f, 0, 0, 0);
														}
													}
												}
												this.active = false;
												if (Main.netMode != 1)
												{
													NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
												}
												NPC.LunarApocalypseIsUp = false;
												if (Main.netMode == 2)
												{
													NetMessage.SendData(7, -1, -1, "", 0, 0f, 0f, 0f, 0, 0, 0);
												}
												return;
											}
										}
										bool flag167 = false;
										if (this.ai[0] == -2f || this.ai[0] == -1f || this.ai[0] == -2f || this.ai[0] == 3f)
										{
											flag167 = true;
										}
										if (Main.player[this.target].active && !Main.player[this.target].dead)
										{
											flag167 = true;
										}
										if (!flag167)
										{
											for (int num1643 = 0; num1643 < 255; num1643++)
											{
												if (Main.player[num1643].active && !Main.player[num1643].dead)
												{
													flag167 = true;
													break;
												}
											}
										}
										if (!flag167)
										{
											this.ai[0] = 3f;
											this.ai[1] = 0f;
											this.netUpdate = true;
										}
										if (this.ai[0] >= 0f && this.ai[0] < 2f && Main.netMode != 1 && base.Distance(Main.player[this.target].Center) > 2400f)
										{
											this.ai[0] = -2f;
											this.netUpdate = true;
											Vector2 value32 = Main.player[this.target].Center - Vector2.UnitY * 150f - base.Center;
											this.position += value32;
											if (Main.npc[(int)this.localAI[0]].active)
											{
												Main.npc[(int)this.localAI[0]].position += value32;
												Main.npc[(int)this.localAI[0]].netUpdate = true;
											}
											if (Main.npc[(int)this.localAI[1]].active)
											{
												Main.npc[(int)this.localAI[1]].position += value32;
												Main.npc[(int)this.localAI[1]].netUpdate = true;
											}
											if (Main.npc[(int)this.localAI[2]].active)
											{
												Main.npc[(int)this.localAI[2]].position += value32;
												Main.npc[(int)this.localAI[2]].netUpdate = true;
											}
											for (int num1644 = 0; num1644 < 200; num1644++)
											{
												NPC nPC11 = Main.npc[num1644];
												if (nPC11.active && nPC11.type == 400)
												{
													nPC11.position += value32;
													nPC11.netUpdate = true;
												}
											}
											return;
										}
									}
									else if (this.aiStyle == 78)
									{
										NPC.InitializeMoonLordAttacks();
										if (!Main.npc[(int)this.ai[3]].active || Main.npc[(int)this.ai[3]].type != 398)
										{
											this.life = 0;
											this.HitEffect(0, 10.0);
											this.active = false;
										}
										bool flag168 = this.ai[2] == 0f;
										float num1645 = (float)(-(float)flag168.ToDirectionInt());
										this.spriteDirection = (int)num1645;
										this.dontTakeDamage = (this.frameCounter >= 21.0);
										Vector2 vector208 = new Vector2(30f, 66f);
										float num1646 = 0f;
										float num1647 = 0f;
										bool flag169 = true;
										int num1648 = 0;
										if (this.ai[0] != -2f)
										{
											float num1649 = this.ai[0];
											this.ai[1] += 1f;
											int num1650 = (int)Main.npc[(int)this.ai[3]].ai[2];
											int num1651 = flag168 ? 0 : 1;
											int num1652 = 0;
											int num1653 = 0;
											while (num1652 < 5)
											{
												num1647 = (float)NPC.MoonLordAttacksArray[num1650, num1651, 1, num1652];
												if (num1647 + (float)num1653 > this.ai[1])
												{
													break;
												}
												num1653 += (int)num1647;
												num1652++;
											}
											if (num1652 == 5)
											{
												num1652 = 0;
												this.ai[1] = 0f;
												num1647 = (float)NPC.MoonLordAttacksArray[num1650, num1651, 1, num1652];
												num1653 = 0;
											}
											this.ai[0] = (float)NPC.MoonLordAttacksArray[num1650, num1651, 0, num1652];
											num1646 = (float)((int)this.ai[1] - num1653);
											if (this.ai[0] != num1649)
											{
												this.netUpdate = true;
											}
										}
										if (this.ai[0] == -2f)
										{
											this.damage = 80;
											num1648 = 0;
											this.dontTakeDamage = true;
											this.ai[1] += 1f;
											if (this.ai[1] >= 32f)
											{
												this.ai[1] = 0f;
											}
											if (this.ai[1] < 0f)
											{
												this.ai[1] = 0f;
											}
											Vector2 center18 = Main.npc[(int)this.ai[3]].Center;
											Vector2 value33 = center18 + new Vector2(350f * num1645, -100f);
											Vector2 vector209 = value33 - base.Center;
											if (vector209.Length() > 20f)
											{
												vector209.Normalize();
												vector209 *= 6f;
												Vector2 velocity5 = this.velocity;
												if (vector209 != Vector2.Zero)
												{
													this.SimpleFlyMovement(vector209, 0.3f);
												}
												this.velocity = Vector2.Lerp(velocity5, this.velocity, 0.5f);
											}
										}
										else if (this.ai[0] == 0f)
										{
											num1648 = 3;
											this.localAI[1] -= 0.05f;
											if (this.localAI[1] < 0f)
											{
												this.localAI[1] = 0f;
											}
											Vector2 center19 = Main.npc[(int)this.ai[3]].Center;
											Vector2 value34 = center19 + new Vector2(350f * num1645, -100f);
											Vector2 vector210 = value34 - base.Center;
											if (vector210.Length() > 20f)
											{
												vector210.Normalize();
												vector210 *= 6f;
												Vector2 velocity6 = this.velocity;
												if (vector210 != Vector2.Zero)
												{
													this.SimpleFlyMovement(vector210, 0.3f);
												}
												this.velocity = Vector2.Lerp(velocity6, this.velocity, 0.5f);
											}
										}
										else if (this.ai[0] == 1f)
										{
											num1648 = 0;
											int num1654 = 7;
											int num1655 = 4;
											if (num1646 >= (float)(num1654 * num1655 * 2))
											{
												this.localAI[1] -= 0.07f;
												if (this.localAI[1] < 0f)
												{
													this.localAI[1] = 0f;
												}
											}
											else if (num1646 >= (float)(num1654 * num1655))
											{
												this.localAI[1] += 0.05f;
												if (this.localAI[1] > 0.75f)
												{
													this.localAI[1] = 0.75f;
												}
												float num1656 = 6.28318548f * (num1646 % (float)(num1654 * num1655)) / (float)(num1654 * num1655) - 1.57079637f;
												this.localAI[0] = new Vector2((float)Math.Cos((double)num1656) * vector208.X, (float)Math.Sin((double)num1656) * vector208.Y).ToRotation();
												if (num1646 % (float)num1655 == 0f)
												{
													Vector2 value35 = new Vector2(1f * -num1645, 3f);
													Vector2 vector211 = Utils.Vector2FromElipse(this.localAI[0].ToRotationVector2(), vector208 * this.localAI[1]);
													Vector2 vector212 = base.Center + Vector2.Normalize(vector211) * vector208.Length() * 0.4f + value35;
													Vector2 vector213 = Vector2.Normalize(vector211) * 8f;
													float ai = (6.28318548f * (float)Main.rand.NextDouble() - 3.14159274f) / 30f + 0.0174532924f * num1645;
													Projectile.NewProjectile(vector212.X, vector212.Y, vector213.X, vector213.Y, 452, 30, 0f, Main.myPlayer, 0f, ai);
												}
											}
											else
											{
												this.localAI[1] += 0.02f;
												if (this.localAI[1] > 0.75f)
												{
													this.localAI[1] = 0.75f;
												}
												float num1657 = 6.28318548f * (num1646 % (float)(num1654 * num1655)) / (float)(num1654 * num1655) - 1.57079637f;
												this.localAI[0] = new Vector2((float)Math.Cos((double)num1657) * vector208.X, (float)Math.Sin((double)num1657) * vector208.Y).ToRotation();
											}
										}
										else if (this.ai[0] == 2f)
										{
											this.localAI[1] -= 0.05f;
											if (this.localAI[1] < 0f)
											{
												this.localAI[1] = 0f;
											}
											Vector2 center20 = Main.npc[(int)this.ai[3]].Center;
											Vector2 value36 = new Vector2(220f * num1645, -60f) + center20;
											value36 += new Vector2(num1645 * 100f, -50f);
											Vector2 value37 = new Vector2(400f * num1645, -60f);
											if (num1646 < 30f)
											{
												Vector2 vector214 = value36 - base.Center;
												if (vector214 != Vector2.Zero)
												{
													Vector2 vector215 = vector214;
													vector215.Normalize();
													this.velocity = Vector2.SmoothStep(this.velocity, vector215 * Math.Min(8f, vector214.Length()), 0.2f);
												}
											}
											else if (num1646 < 210f)
											{
												num1648 = 1;
												int num1658 = (int)num1646 - 30;
												if (num1658 % 30 == 0 && Main.netMode != 1)
												{
													Vector2 vector216 = new Vector2(5f * num1645, -8f);
													int num1659 = num1658 / 30;
													vector216.X += ((float)num1659 - 3.5f) * num1645 * 3f;
													vector216.Y += ((float)num1659 - 4.5f) * 1f;
													vector216 *= 1.2f;
													Projectile.NewProjectile(base.Center.X, base.Center.Y, vector216.X, vector216.Y, 454, 50, 1f, Main.myPlayer, 0f, (float)this.whoAmI);
												}
												Vector2 vector217 = Vector2.SmoothStep(value36, value36 + value37, (num1646 - 30f) / 180f) - base.Center;
												if (vector217 != Vector2.Zero)
												{
													Vector2 vector218 = vector217;
													vector218.Normalize();
													this.velocity = Vector2.Lerp(this.velocity, vector218 * Math.Min(20f, vector217.Length()), 0.5f);
												}
											}
											else if (num1646 < 282f)
											{
												num1648 = 0;
												this.velocity *= 0.9f;
											}
											else if (num1646 < 287f)
											{
												num1648 = 1;
												this.velocity *= 0.9f;
											}
											else if (num1646 < 292f)
											{
												num1648 = 2;
												this.velocity *= 0.9f;
											}
											else if (num1646 < 300f)
											{
												num1648 = 3;
												if (num1646 == 292f && Main.netMode != 1)
												{
													int num1660 = (int)Player.FindClosest(this.position, this.width, this.height);
													Vector2 velocity7 = Vector2.Normalize(Main.player[num1660].Center - (base.Center + Vector2.UnitY * -350f));
													if (float.IsNaN(velocity7.X) || float.IsNaN(velocity7.Y))
													{
														velocity7 = Vector2.UnitY;
													}
													velocity7 *= 12f;
													for (int num1661 = 0; num1661 < 1000; num1661++)
													{
														Projectile projectile3 = Main.projectile[num1661];
														if (projectile3.active && projectile3.type == 454 && projectile3.ai[1] == (float)this.whoAmI && projectile3.ai[0] != -1f)
														{
															projectile3.ai[0] = -1f;
															projectile3.velocity = velocity7;
															projectile3.netUpdate = true;
														}
													}
												}
												Vector2 vector219 = Vector2.SmoothStep(value36, value36 + value37, 1f - (num1646 - 270f) / 30f) - base.Center;
												if (vector219 != Vector2.Zero)
												{
													Vector2 vector220 = vector219;
													vector220.Normalize();
													this.velocity = Vector2.Lerp(this.velocity, vector220 * Math.Min(14f, vector219.Length()), 0.1f);
												}
											}
											else
											{
												num1648 = 3;
												Vector2 vector221 = value36 - base.Center;
												if (vector221 != Vector2.Zero)
												{
													Vector2 vector222 = vector221;
													vector222.Normalize();
													this.velocity = Vector2.SmoothStep(this.velocity, vector222 * Math.Min(8f, vector221.Length()), 0.2f);
												}
											}
										}
										else if (this.ai[0] == 3f)
										{
											if (num1646 == 0f)
											{
												this.TargetClosest(false);
												this.netUpdate = true;
											}
											Vector2 v2 = Main.player[this.target].Center + Main.player[this.target].velocity * 20f - base.Center;
											this.localAI[0] = this.localAI[0].AngleLerp(v2.ToRotation(), 0.5f);
											this.localAI[1] += 0.05f;
											if (this.localAI[1] > 1f)
											{
												this.localAI[1] = 1f;
											}
											if (num1646 == num1647 - 35f)
											{
												Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 6);
											}
											if ((num1646 == num1647 - 14f || num1646 == num1647 - 7f || num1646 == num1647) && Main.netMode != 1)
											{
												Vector2 vector223 = Utils.Vector2FromElipse(this.localAI[0].ToRotationVector2(), vector208 * this.localAI[1]);
												Vector2 vector224 = Vector2.Normalize(v2) * 8f;
												Projectile.NewProjectile(base.Center.X + vector223.X, base.Center.Y + vector223.Y, vector224.X, vector224.Y, 462, 30, 0f, Main.myPlayer, 0f, 0f);
											}
										}
										if (flag169)
										{
											Vector2 center21 = Main.npc[(int)this.ai[3]].Center;
											Vector2 value38 = new Vector2(220f * num1645, -60f) + center21;
											Vector2 vector225 = value38 + new Vector2(num1645 * 110f, -150f);
											Vector2 max = vector225 + new Vector2(num1645 * 370f, 150f);
											if (vector225.X > max.X)
											{
												Utils.Swap<float>(ref vector225.X, ref max.X);
											}
											if (vector225.Y > max.Y)
											{
												Utils.Swap<float>(ref vector225.Y, ref max.Y);
											}
											Vector2 value39 = Vector2.Clamp(base.Center + this.velocity, vector225, max);
											if (value39 != base.Center + this.velocity)
											{
												base.Center = value39 - this.velocity;
											}
										}
										int num1662 = num1648 * 7;
										if ((double)num1662 > this.frameCounter)
										{
											this.frameCounter += 1.0;
										}
										if ((double)num1662 < this.frameCounter)
										{
											this.frameCounter -= 1.0;
										}
										if (this.frameCounter < 0.0)
										{
											this.frameCounter = 0.0;
										}
										if (this.frameCounter > 21.0)
										{
											this.frameCounter = 21.0;
										}
										int num1663 = 0;
										if (flag168)
										{
											num1663 = 0;
										}
										if (num1663 == 0)
										{
											return;
										}
										if (num1663 == 1)
										{
											if (this.ai[0] == 0f)
											{
												if ((this.ai[1] += 1f) >= 20f)
												{
													this.ai[1] = 0f;
													this.ai[0] = 1f;
													this.netUpdate = true;
												}
												this.velocity = Vector2.UnitX * 4f;
												return;
											}
											if (this.ai[0] == 1f)
											{
												if ((this.ai[1] += 1f) >= 20f)
												{
													this.ai[1] = 0f;
													this.ai[0] = 2f;
													this.netUpdate = true;
												}
												this.velocity = Vector2.UnitX * -4f;
												return;
											}
											if (this.ai[0] == 2f || this.ai[0] == 4f)
											{
												if ((this.ai[1] += 1f) >= 20f)
												{
													this.ai[1] = 0f;
													this.ai[0] += 1f;
													this.netUpdate = true;
												}
												this.velocity = Vector2.UnitY * -4f * (float)(flag168 ? 1 : -1);
												return;
											}
											if (this.ai[0] == 3f || this.ai[0] == 5f)
											{
												if ((this.ai[1] += 1f) >= 20f)
												{
													this.ai[1] = 0f;
													this.ai[0] += 1f;
													if (this.ai[0] == 6f)
													{
														this.ai[0] = 0f;
													}
													this.netUpdate = true;
												}
												this.velocity = Vector2.UnitY * 4f * (float)(flag168 ? 1 : -1);
												return;
											}
										}
										else
										{
											if (num1663 == 2)
											{
												new Vector2(30f, 66f);
												this.TargetClosest(false);
												Vector2 v3 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - base.Center;
												float num1664 = v3.Length() / 200f;
												if (num1664 > 1f)
												{
													num1664 = 1f;
												}
												num1664 = 1f - num1664;
												num1664 *= 2f;
												if (num1664 > 1f)
												{
													num1664 = 1f;
												}
												this.localAI[0] = v3.ToRotation();
												this.localAI[1] = num1664;
												this.localAI[1] = 1f;
												return;
											}
											if (num1663 == 3)
											{
												int num1665 = 7;
												int num1666 = 4;
												this.ai[1] += 1f;
												if (this.ai[1] >= (float)(num1665 * num1666 * 10))
												{
													this.ai[1] = 0f;
													return;
												}
												if (this.ai[1] >= (float)(num1665 * num1666))
												{
													this.localAI[1] -= 0.07f;
													if (this.localAI[1] < 0f)
													{
														this.localAI[1] = 0f;
														return;
													}
												}
												else
												{
													this.localAI[1] += 0.05f;
													if (this.localAI[1] > 0.75f)
													{
														this.localAI[1] = 0.75f;
													}
													float num1667 = 6.28318548f * (this.ai[1] % (float)(num1665 * num1666)) / (float)(num1665 * num1666) - 1.57079637f;
													this.localAI[0] = new Vector2((float)Math.Cos((double)num1667) * vector208.X, (float)Math.Sin((double)num1667) * vector208.Y).ToRotation();
													if (this.ai[1] % (float)num1666 == 0f)
													{
														Vector2 value40 = new Vector2(1f * -num1645, 3f);
														Vector2 vector226 = Utils.Vector2FromElipse(this.localAI[0].ToRotationVector2(), vector208 * this.localAI[1]);
														Vector2 vector227 = base.Center + Vector2.Normalize(vector226) * vector208.Length() * 0.4f + value40;
														Vector2 vector228 = Vector2.Normalize(vector226) * 8f;
														float ai2 = (6.28318548f * (float)Main.rand.NextDouble() - 3.14159274f) / 30f + 0.0174532924f * num1645;
														Projectile.NewProjectile(vector227.X, vector227.Y, vector228.X, vector228.Y, 452, 5, 0f, Main.myPlayer, 0f, ai2);
														return;
													}
												}
											}
											else if (num1663 == 4)
											{
												Vector2 center22 = Main.npc[(int)this.ai[3]].Center;
												Vector2 value41 = new Vector2(220f * num1645, -60f) + center22;
												value41 += new Vector2(num1645 * 100f, -50f);
												Vector2 value42 = new Vector2(400f * num1645, -60f);
												this.ai[1] += 1f;
												if (this.ai[1] < 30f)
												{
													Vector2 vector229 = value41 - base.Center;
													if (vector229 != Vector2.Zero)
													{
														Vector2 vector230 = vector229;
														vector230.Normalize();
														this.velocity = Vector2.SmoothStep(this.velocity, vector230 * Math.Min(8f, vector229.Length()), 0.2f);
														return;
													}
												}
												else if (this.ai[1] < 210f)
												{
													int num1668 = (int)this.ai[1] - 30;
													if (num1668 % 30 == 0 && Main.netMode != 1)
													{
														Vector2 vector231 = new Vector2(5f * num1645, -8f);
														int num1669 = num1668 / 30;
														vector231.X += ((float)num1669 - 3.5f) * num1645 * 3f;
														vector231.Y += ((float)num1669 - 4.5f) * 1f;
														vector231 *= 1.2f;
														Projectile.NewProjectile(base.Center.X, base.Center.Y, vector231.X, vector231.Y, 454, 1, 1f, Main.myPlayer, 0f, (float)this.whoAmI);
													}
													Vector2 vector232 = Vector2.SmoothStep(value41, value41 + value42, (this.ai[1] - 30f) / 180f) - base.Center;
													if (vector232 != Vector2.Zero)
													{
														Vector2 vector233 = vector232;
														vector233.Normalize();
														this.velocity = Vector2.Lerp(this.velocity, vector233 * Math.Min(4f, vector232.Length()), 0.1f);
														return;
													}
												}
												else
												{
													if (this.ai[1] < 270f)
													{
														this.velocity *= 0.9f;
														return;
													}
													if (this.ai[1] >= 300f)
													{
														this.ai[1] = 0f;
														return;
													}
													if (this.ai[1] == 270f && Main.netMode != 1)
													{
														int num1670 = (int)Player.FindClosest(this.position, this.width, this.height);
														Vector2 velocity8 = Vector2.Normalize(Main.player[num1670].Center - (base.Center + Vector2.UnitY * -350f));
														if (float.IsNaN(velocity8.X) || float.IsNaN(velocity8.Y))
														{
															velocity8 = Vector2.UnitY;
														}
														velocity8 *= 12f;
														for (int num1671 = 0; num1671 < 1000; num1671++)
														{
															Projectile projectile4 = Main.projectile[num1671];
															if (projectile4.active && projectile4.type == 454 && projectile4.ai[1] == (float)this.whoAmI && projectile4.ai[0] != -1f)
															{
																projectile4.ai[0] = -1f;
																projectile4.velocity = velocity8;
																projectile4.netUpdate = true;
															}
														}
													}
													Vector2 vector234 = Vector2.SmoothStep(value41, value41 + value42, 1f - (this.ai[1] - 270f) / 30f) - base.Center;
													if (vector234 != Vector2.Zero)
													{
														Vector2 vector235 = vector234;
														vector235.Normalize();
														this.velocity = Vector2.Lerp(this.velocity, vector235 * Math.Min(14f, vector234.Length()), 0.1f);
														return;
													}
												}
											}
											else if (num1663 == 5)
											{
												this.dontTakeDamage = true;
												this.ai[1] += 1f;
												if (this.ai[1] >= 40f)
												{
													this.ai[1] = 0f;
													return;
												}
											}
										}
									}
									else if (this.aiStyle == 79)
									{
										if (!Main.npc[(int)this.ai[3]].active || Main.npc[(int)this.ai[3]].type != 398)
										{
											this.life = 0;
											this.HitEffect(0, 10.0);
											this.active = false;
										}
										this.dontTakeDamage = (this.localAI[3] >= 15f);
										this.velocity = Vector2.Zero;
										base.Center = Main.npc[(int)this.ai[3]].Center + new Vector2(0f, -400f);
										Vector2 value43 = new Vector2(27f, 59f);
										float num1672 = 0f;
										float num1673 = 0f;
										int num1674 = 0;
										int num1675 = 0;
										if (this.ai[0] >= 0f)
										{
											float num1676 = this.ai[0];
											this.ai[1] += 1f;
											int num1677 = (int)Main.npc[(int)this.ai[3]].ai[2];
											int num1678 = 2;
											int num1679 = 0;
											int num1680 = 0;
											while (num1679 < 5)
											{
												num1673 = (float)NPC.MoonLordAttacksArray[num1677, num1678, 1, num1679];
												if (num1673 + (float)num1680 > this.ai[1])
												{
													break;
												}
												num1680 += (int)num1673;
												num1679++;
											}
											if (num1679 == 5)
											{
												num1679 = 0;
												this.ai[1] = 0f;
												num1673 = (float)NPC.MoonLordAttacksArray[num1677, num1678, 1, num1679];
												num1680 = 0;
											}
											this.ai[0] = (float)NPC.MoonLordAttacksArray[num1677, num1678, 0, num1679];
											num1672 = (float)((int)this.ai[1] - num1680);
											if (this.ai[0] != num1676)
											{
												this.netUpdate = true;
											}
										}
										if (this.ai[0] == -3f)
										{
											this.damage = 0;
											this.dontTakeDamage = true;
											this.rotation = MathHelper.Lerp(this.rotation, 0.2617994f, 0.07f);
											this.ai[1] += 1f;
											if (this.ai[1] >= 32f)
											{
												this.ai[1] = 0f;
											}
											if (this.ai[1] < 0f)
											{
												this.ai[1] = 0f;
											}
											if (this.localAI[2] < 14f)
											{
												this.localAI[2] += 1f;
											}
										}
										else if (this.ai[0] == -2f)
										{
											if (Main.npc[(int)this.ai[3]].ai[0] == 2f)
											{
												this.ai[0] = -3f;
												return;
											}
											this.damage = 80;
											this.dontTakeDamage = true;
											this.ai[1] += 1f;
											if (this.ai[1] >= 32f)
											{
												this.ai[1] = 0f;
											}
											if (this.ai[1] < 0f)
											{
												this.ai[1] = 0f;
											}
											this.ai[2] += 1f;
											if (this.ai[2] >= 555f)
											{
												this.ai[2] = 0f;
											}
											if (this.ai[2] >= 120f)
											{
												num1672 = this.ai[2] - 120f;
												num1673 = 555f;
												num1674 = 2;
												Vector2 value44 = new Vector2(0f, 216f);
												if (num1672 == 0f && Main.netMode != 1)
												{
													Vector2 value45 = base.Center + value44;
													for (int num1681 = 0; num1681 < 255; num1681++)
													{
														Player player9 = Main.player[num1681];
														if (player9.active && !player9.dead && Vector2.Distance(player9.Center, value45) <= 3000f)
														{
															Vector2 value46 = Main.player[this.target].Center - value45;
															if (value46 != Vector2.Zero)
															{
																value46.Normalize();
															}
															Projectile.NewProjectile(value45.X, value45.Y, value46.X, value46.Y, 456, 0, 0f, Main.myPlayer, (float)(this.whoAmI + 1), (float)num1681);
														}
													}
												}
												if ((num1672 == 120f || num1672 == 180f || num1672 == 240f) && Main.netMode != 1)
												{
													for (int num1682 = 0; num1682 < 1000; num1682++)
													{
														Projectile projectile5 = Main.projectile[num1682];
														if (projectile5.active && projectile5.type == 456 && Main.player[(int)projectile5.ai[1]].HasBuff(145) != -1)
														{
															Vector2 center23 = Main.player[this.target].Center;
															int num1683 = NPC.NewNPC((int)center23.X, (int)center23.Y, 401, 0, 0f, 0f, 0f, 0f, 255);
															Main.npc[num1683].netUpdate = true;
															Main.npc[num1683].ai[0] = (float)(this.whoAmI + 1);
															Main.npc[num1683].ai[1] = (float)num1682;
														}
													}
												}
											}
										}
										else if (this.ai[0] == 0f)
										{
											num1675 = 3;
											this.TargetClosest(false);
											Vector2 v4 = Main.player[this.target].Center - base.Center - new Vector2(0f, -22f);
											float num1684 = v4.Length() / 500f;
											if (num1684 > 1f)
											{
												num1684 = 1f;
											}
											num1684 = 1f - num1684;
											num1684 *= 2f;
											if (num1684 > 1f)
											{
												num1684 = 1f;
											}
											this.localAI[0] = v4.ToRotation();
											this.localAI[1] = num1684;
											this.localAI[2] = MathHelper.Lerp(this.localAI[2], 1f, 0.2f);
										}
										if (this.ai[0] == 1f)
										{
											if (num1672 < 180f)
											{
												this.localAI[1] -= 0.05f;
												if (this.localAI[1] < 0f)
												{
													this.localAI[1] = 0f;
												}
												if (num1672 >= 60f)
												{
													Vector2 center24 = base.Center;
													int num1685 = 0;
													if (num1672 >= 120f)
													{
														num1685 = 1;
													}
													for (int num1686 = 0; num1686 < 1 + num1685; num1686++)
													{
														int num1687 = 229;
														float num1688 = 0.8f;
														if (num1686 % 2 == 1)
														{
															num1687 = 229;
															num1688 = 1.65f;
														}
														Vector2 vector236 = center24 + ((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * value43 / 2f;
														int num1689 = Dust.NewDust(vector236 - Vector2.One * 8f, 16, 16, num1687, this.velocity.X / 2f, this.velocity.Y / 2f, 0, default(Color), 1f);
														Main.dust[num1689].velocity = Vector2.Normalize(center24 - vector236) * 3.5f * (10f - (float)num1685 * 2f) / 10f;
														Main.dust[num1689].noGravity = true;
														Main.dust[num1689].scale = num1688;
														Main.dust[num1689].customData = this;
													}
												}
											}
											else if (num1672 < num1673 - 15f)
											{
												if (num1672 == 180f && Main.netMode != 1)
												{
													this.TargetClosest(false);
													Vector2 vector237 = Main.player[this.target].Center - base.Center;
													vector237.Normalize();
													float num1690 = -1f;
													if (vector237.X < 0f)
													{
														num1690 = 1f;
													}
													vector237 = vector237.RotatedBy((double)(-(double)num1690 * 6.28318548f / 6f), default(Vector2));
													Projectile.NewProjectile(base.Center.X, base.Center.Y, vector237.X, vector237.Y, 455, 75, 0f, Main.myPlayer, num1690 * 6.28318548f / 540f, (float)this.whoAmI);
													this.ai[2] = (vector237.ToRotation() + 9.424778f) * num1690;
													this.netUpdate = true;
												}
												this.localAI[1] += 0.05f;
												if (this.localAI[1] > 1f)
												{
													this.localAI[1] = 1f;
												}
												float num1691 = (float)(this.ai[2] >= 0f).ToDirectionInt();
												float num1692 = this.ai[2];
												if (num1692 < 0f)
												{
													num1692 *= -1f;
												}
												num1692 += -9.424778f;
												num1692 += num1691 * 6.28318548f / 540f;
												this.localAI[0] = num1692;
												this.ai[2] = (num1692 + 9.424778f) * num1691;
											}
											else
											{
												this.localAI[1] -= 0.07f;
												if (this.localAI[1] < 0f)
												{
													this.localAI[1] = 0f;
												}
												num1675 = 3;
											}
										}
										else if (this.ai[0] == 2f)
										{
											num1674 = 2;
											num1675 = 3;
											Vector2 value47 = new Vector2(0f, 216f);
											if (num1672 == 0f && Main.netMode != 1)
											{
												Vector2 value48 = base.Center + value47;
												for (int num1693 = 0; num1693 < 255; num1693++)
												{
													Player player10 = Main.player[num1693];
													if (player10.active && !player10.dead && Vector2.Distance(player10.Center, value48) <= 3000f)
													{
														Vector2 value49 = Main.player[this.target].Center - value48;
														if (value49 != Vector2.Zero)
														{
															value49.Normalize();
														}
														Projectile.NewProjectile(value48.X, value48.Y, value49.X, value49.Y, 456, 0, 0f, Main.myPlayer, (float)(this.whoAmI + 1), (float)num1693);
													}
												}
											}
											if ((num1672 == 120f || num1672 == 180f || num1672 == 240f) && Main.netMode != 1)
											{
												for (int num1694 = 0; num1694 < 1000; num1694++)
												{
													Projectile projectile6 = Main.projectile[num1694];
													if (projectile6.active && projectile6.type == 456 && Main.player[(int)projectile6.ai[1]].HasBuff(145) != -1)
													{
														Vector2 center25 = Main.player[this.target].Center;
														int num1695 = NPC.NewNPC((int)center25.X, (int)center25.Y, 401, 0, 0f, 0f, 0f, 0f, 255);
														Main.npc[num1695].netUpdate = true;
														Main.npc[num1695].ai[0] = (float)(this.whoAmI + 1);
														Main.npc[num1695].ai[1] = (float)num1694;
													}
												}
											}
										}
										else if (this.ai[0] == 3f)
										{
											if (num1672 == 0f)
											{
												this.TargetClosest(false);
												this.netUpdate = true;
											}
											Vector2 v5 = Main.player[this.target].Center + Main.player[this.target].velocity * 20f - base.Center;
											this.localAI[0] = this.localAI[0].AngleLerp(v5.ToRotation(), 0.5f);
											this.localAI[1] += 0.05f;
											if (this.localAI[1] > 1f)
											{
												this.localAI[1] = 1f;
											}
											if (num1672 == num1673 - 35f)
											{
												Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 6);
											}
											if ((num1672 == num1673 - 14f || num1672 == num1673 - 7f || num1672 == num1673) && Main.netMode != 1)
											{
												Vector2 vector238 = Utils.Vector2FromElipse(this.localAI[0].ToRotationVector2(), value43 * this.localAI[1]);
												Vector2 vector239 = Vector2.Normalize(v5) * 8f;
												Projectile.NewProjectile(base.Center.X + vector238.X, base.Center.Y + vector238.Y, vector239.X, vector239.Y, 462, 30, 0f, Main.myPlayer, 0f, 0f);
											}
										}
										int num1696 = num1674 * 7;
										if ((float)num1696 > this.localAI[2])
										{
											this.localAI[2] += 1f;
										}
										if ((float)num1696 < this.localAI[2])
										{
											this.localAI[2] -= 1f;
										}
										if (this.localAI[2] < 0f)
										{
											this.localAI[2] = 0f;
										}
										if (this.localAI[2] > 14f)
										{
											this.localAI[2] = 14f;
										}
										int num1697 = num1675 * 5;
										if ((float)num1697 > this.localAI[3])
										{
											this.localAI[3] += 1f;
										}
										if ((float)num1697 < this.localAI[3])
										{
											this.localAI[3] -= 1f;
										}
										if (this.localAI[3] < 0f)
										{
											this.localAI[2] = 0f;
										}
										if (this.localAI[3] > 15f)
										{
											this.localAI[2] = 15f;
										}
										int num1698 = 0;
										if (num1698 == 1)
										{
											new Vector2(27f, 59f);
											this.TargetClosest(false);
											Vector2 v6 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - base.Center;
											float num1699 = v6.Length() / 200f;
											if (num1699 > 1f)
											{
												num1699 = 1f;
											}
											num1699 = 1f - num1699;
											num1699 *= 2f;
											if (num1699 > 1f)
											{
												num1699 = 1f;
											}
											this.localAI[0] = v6.ToRotation();
											this.localAI[1] = num1699;
											this.localAI[1] = 1f;
										}
										if (num1698 == 2)
										{
											Vector2 vector240 = new Vector2(27f, 59f);
											float num1700 = 6.28318548f * ((float)Main.time % 600f) / 600f;
											this.localAI[0] = new Vector2((float)Math.Cos((double)num1700) * vector240.X, (float)Math.Sin((double)num1700) * vector240.Y).ToRotation();
											this.localAI[1] = 0.75f;
											if (this.ai[1] == 0f)
											{
												Vector2 vector241 = num1700.ToRotationVector2();
												vector241 = Vector2.One;
												Projectile.NewProjectile(base.Center.X, base.Center.Y, vector241.X, vector241.Y, 455, 1, 0f, Main.myPlayer, 0.0104719754f, (float)this.whoAmI);
											}
											this.ai[1] += 1f;
											if (this.ai[1] >= 600f)
											{
												this.ai[1] = 0f;
											}
										}
										if (num1698 == 3)
										{
											Vector2 vector242 = new Vector2(0f, 216f);
											if (this.ai[1] == 0f)
											{
												this.TargetClosest(false);
												Vector2 vector243 = Main.player[this.target].Center - base.Center;
												vector243.Normalize();
												Projectile.NewProjectile(base.Center.X + vector242.X, base.Center.Y + vector242.Y, vector243.X, vector243.Y, 456, 0, 0f, Main.myPlayer, (float)(this.whoAmI + 1), (float)this.target);
											}
											this.ai[1] += 1f;
											if (this.ai[1] >= 600f)
											{
												this.ai[1] = 0f;
											}
										}
										if (num1698 == 4)
										{
											new Vector2(27f, 59f);
											this.TargetClosest(false);
											Vector2 v7 = Main.player[this.target].Center + Main.player[this.target].velocity * 20f - base.Center;
											this.localAI[0] = this.localAI[0].AngleLerp(v7.ToRotation(), 0.5f);
											this.localAI[1] = 1f;
											this.ai[1] += 1f;
											if (this.ai[1] == 55f)
											{
												Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 6);
											}
											if (this.ai[1] == 76f || this.ai[1] == 83f || this.ai[1] == 90f)
											{
												value43 = new Vector2(27f, 59f);
												Vector2 vector244 = Utils.Vector2FromElipse(this.localAI[0].ToRotationVector2(), value43 * this.localAI[1]);
												Vector2 vector245 = Vector2.Normalize(v7) * 8f;
												Projectile.NewProjectile(base.Center.X + vector244.X, base.Center.Y + vector244.Y, vector245.X, vector245.Y, 462, 5, 0f, Main.myPlayer, 0f, 0f);
											}
											if (this.ai[1] >= 90f)
											{
												this.ai[1] = 0f;
												return;
											}
										}
									}
									else
									{
										if (this.aiStyle == 80)
										{
											if (this.ai[0] == 0f)
											{
												if (this.direction == 0)
												{
													this.TargetClosest(true);
													this.netUpdate = true;
												}
												if (this.collideX)
												{
													this.direction = -this.direction;
													this.netUpdate = true;
												}
												this.velocity.X = 3f * (float)this.direction;
												Vector2 center26 = base.Center;
												Point point10 = center26.ToTileCoordinates();
												int num1701 = 30;
												if (WorldGen.InWorld(point10.X, point10.Y, 30))
												{
													for (int num1702 = 0; num1702 < 30; num1702++)
													{
														if (WorldGen.SolidTile(point10.X, point10.Y + num1702))
														{
															num1701 = num1702;
															break;
														}
													}
												}
												if (num1701 < 15)
												{
													this.velocity.Y = Math.Max(this.velocity.Y - 0.05f, -3.5f);
												}
												else if (num1701 < 20)
												{
													this.velocity.Y = this.velocity.Y * 0.95f;
												}
												else
												{
													this.velocity.Y = Math.Min(this.velocity.Y + 0.05f, 1.5f);
												}
												float num1704;
												int num1703 = this.FindClosestPlayer(out num1704);
												if (num1703 == -1 || Main.player[num1703].dead)
												{
													return;
												}
												if (num1704 < 352f && Main.player[num1703].Center.Y > base.Center.Y)
												{
													this.ai[0] = 1f;
													this.ai[1] = 0f;
													this.netUpdate = true;
												}
											}
											else if (this.ai[0] == 1f)
											{
												this.ai[1] += 1f;
												this.velocity *= 0.95f;
												if (this.ai[1] >= 60f)
												{
													this.ai[1] = 0f;
													this.ai[0] = 2f;
													int num1705 = this.FindClosestPlayer();
													if (num1705 != -1)
													{
														this.ai[3] = ((Main.player[num1705].Center.X > base.Center.X) ? -1f : 1f);
													}
													else
													{
														this.ai[3] = 1f;
													}
													this.netUpdate = true;
												}
											}
											else if (this.ai[0] == 2f)
											{
												this.noTileCollide = true;
												this.ai[1] += 1f;
												this.velocity.Y = Math.Max(this.velocity.Y - 0.1f, -10f);
												this.velocity.X = Math.Min(this.velocity.X + this.ai[3] * 0.05f, 4f);
												if ((this.position.Y < (float)(-(float)this.height) || this.ai[1] >= 180f) && Main.netMode != 1)
												{
													Main.StartInvasion(4);
													this.active = false;
													this.netUpdate = true;
												}
											}
											Vector3 rgb4 = Color.SkyBlue.ToVector3();
											if (this.ai[0] == 2f)
											{
												rgb4 = Color.Red.ToVector3();
											}
											rgb4 *= 0.65f;
											Lighting.AddLight(base.Center, rgb4);
											return;
										}
										if (this.aiStyle == 81)
										{
											if (Main.rand.Next(420) == 0)
											{
												Main.PlaySound(29, (int)base.Center.X, (int)base.Center.Y, Main.rand.Next(100, 101));
											}
											Vector2 value50 = new Vector2(30f);
											if (!Main.npc[(int)this.ai[3]].active || Main.npc[(int)this.ai[3]].type != 398)
											{
												this.life = 0;
												this.HitEffect(0, 10.0);
												this.active = false;
											}
											float num1706 = 0f;
											float num1707 = this.ai[0];
											this.ai[1] += 1f;
											int num1708 = 0;
											int num1709 = 0;
											while (num1708 < 10)
											{
												num1706 = (float)NPC.MoonLordAttacksArray2[1, num1708];
												if (num1706 + (float)num1709 > this.ai[1])
												{
													break;
												}
												num1709 += (int)num1706;
												num1708++;
											}
											if (num1708 == 10)
											{
												num1708 = 0;
												this.ai[1] = 0f;
												num1706 = (float)NPC.MoonLordAttacksArray2[1, num1708];
												num1709 = 0;
											}
											this.ai[0] = (float)NPC.MoonLordAttacksArray2[0, num1708];
											float num1710 = (float)((int)this.ai[1] - num1709);
											if (this.ai[0] != num1707)
											{
												this.netUpdate = true;
											}
											if (this.ai[0] == -1f)
											{
												this.ai[1] += 1f;
												if (this.ai[1] > 180f)
												{
													this.ai[1] = 0f;
												}
												float value51;
												if (this.ai[1] < 60f)
												{
													value51 = 0.75f;
													this.localAI[0] = 0f;
													this.localAI[1] = (float)Math.Sin((double)(this.ai[1] * 6.28318548f / 15f)) * 0.35f;
													if (this.localAI[1] < 0f)
													{
														this.localAI[0] = 3.14159274f;
													}
												}
												else if (this.ai[1] < 120f)
												{
													value51 = 1f;
													if (this.localAI[1] < 0.5f)
													{
														this.localAI[1] += 0.025f;
													}
													this.localAI[0] += 0.209439516f;
												}
												else
												{
													value51 = 1.15f;
													this.localAI[1] -= 0.05f;
													if (this.localAI[1] < 0f)
													{
														this.localAI[1] = 0f;
													}
												}
												this.localAI[2] = MathHelper.Lerp(this.localAI[2], value51, 0.3f);
											}
											if (this.ai[0] == 0f)
											{
												this.TargetClosest(false);
												Vector2 v8 = Main.player[this.target].Center + Main.player[this.target].velocity * 20f - base.Center;
												this.localAI[0] = this.localAI[0].AngleLerp(v8.ToRotation(), 0.5f);
												this.localAI[1] += 0.05f;
												if (this.localAI[1] > 0.7f)
												{
													this.localAI[1] = 0.7f;
												}
												this.localAI[2] = MathHelper.Lerp(this.localAI[2], 1f, 0.2f);
												float scaleFactor22 = 24f;
												Vector2 center27 = base.Center;
												Vector2 center28 = Main.player[this.target].Center;
												Vector2 value52 = center28 - center27;
												Vector2 vector246 = value52 - Vector2.UnitY * 200f;
												vector246 = Vector2.Normalize(vector246) * scaleFactor22;
												int num1711 = 30;
												this.velocity.X = (this.velocity.X * (float)(num1711 - 1) + vector246.X) / (float)num1711;
												this.velocity.Y = (this.velocity.Y * (float)(num1711 - 1) + vector246.Y) / (float)num1711;
												float num1712 = 0.25f;
												for (int num1713 = 0; num1713 < 200; num1713++)
												{
													if (num1713 != this.whoAmI && Main.npc[num1713].active && Main.npc[num1713].type == 400 && Vector2.Distance(base.Center, Main.npc[num1713].Center) < 150f)
													{
														if (this.position.X < Main.npc[num1713].position.X)
														{
															this.velocity.X = this.velocity.X - num1712;
														}
														else
														{
															this.velocity.X = this.velocity.X + num1712;
														}
														if (this.position.Y < Main.npc[num1713].position.Y)
														{
															this.velocity.Y = this.velocity.Y - num1712;
														}
														else
														{
															this.velocity.Y = this.velocity.Y + num1712;
														}
													}
												}
												return;
											}
											if (this.ai[0] == 1f)
											{
												if (num1710 == 0f)
												{
													this.TargetClosest(false);
													this.netUpdate = true;
												}
												this.velocity *= 0.95f;
												if (this.velocity.Length() < 1f)
												{
													this.velocity = Vector2.Zero;
												}
												Vector2 v9 = Main.player[this.target].Center + Main.player[this.target].velocity * 20f - base.Center;
												this.localAI[0] = this.localAI[0].AngleLerp(v9.ToRotation(), 0.5f);
												this.localAI[1] += 0.05f;
												if (this.localAI[1] > 1f)
												{
													this.localAI[1] = 1f;
												}
												if (num1710 < 20f)
												{
													this.localAI[2] = MathHelper.Lerp(this.localAI[2], 1.1f, 0.2f);
												}
												else
												{
													this.localAI[2] = MathHelper.Lerp(this.localAI[2], 0.4f, 0.2f);
												}
												if (num1710 == num1706 - 35f)
												{
													Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 6);
												}
												if ((num1710 == num1706 - 14f || num1710 == num1706 - 7f || num1710 == num1706) && Main.netMode != 1)
												{
													Vector2 vector247 = Utils.Vector2FromElipse(this.localAI[0].ToRotationVector2(), value50 * this.localAI[1]);
													Vector2 vector248 = Vector2.Normalize(v9) * 8f;
													Projectile.NewProjectile(base.Center.X + vector247.X, base.Center.Y + vector247.Y, vector248.X, vector248.Y, 462, 35, 0f, Main.myPlayer, 0f, 0f);
													return;
												}
											}
											else if (this.ai[0] == 2f)
											{
												if (num1710 < 15f)
												{
													this.localAI[1] -= 0.07f;
													if (this.localAI[1] < 0f)
													{
														this.localAI[1] = 0f;
													}
													this.localAI[2] = MathHelper.Lerp(this.localAI[2], 0.4f, 0.2f);
													this.velocity *= 0.8f;
													if (this.velocity.Length() < 1f)
													{
														this.velocity = Vector2.Zero;
														return;
													}
												}
												else if (num1710 < 75f)
												{
													float num1714 = (num1710 - 15f) / 10f;
													int num1715 = 0;
													int num1716 = 0;
													switch ((int)num1714)
													{
														case 0:
															num1715 = 0;
															num1716 = 2;
															break;
														case 1:
															num1715 = 2;
															num1716 = 5;
															break;
														case 2:
															num1715 = 5;
															num1716 = 3;
															break;
														case 3:
															num1715 = 3;
															num1716 = 1;
															break;
														case 4:
															num1715 = 1;
															num1716 = 4;
															break;
														case 5:
															num1715 = 4;
															num1716 = 0;
															break;
													}
													Vector2 spinningpoint8 = Vector2.UnitY * -30f;
													Vector2 value53 = spinningpoint8.RotatedBy((double)((float)num1715 * 6.28318548f / 6f), default(Vector2));
													Vector2 value54 = spinningpoint8.RotatedBy((double)((float)num1716 * 6.28318548f / 6f), default(Vector2));
													Vector2 vector249 = Vector2.Lerp(value53, value54, num1714 - (float)((int)num1714));
													float value55 = vector249.Length() / 30f;
													this.localAI[0] = vector249.ToRotation();
													this.localAI[1] = MathHelper.Lerp(this.localAI[1], value55, 0.5f);
													for (int num1717 = 0; num1717 < 2; num1717++)
													{
														int num1718 = Dust.NewDust(base.Center + vector249 - Vector2.One * 4f, 0, 0, 229, 0f, 0f, 0, default(Color), 1f);
														Main.dust[num1718].velocity += vector249 / 15f;
														Main.dust[num1718].noGravity = true;
													}
													if ((num1710 - 15f) % 10f == 0f && Main.netMode != 1)
													{
														Vector2 vec6 = Vector2.Normalize(vector249);
														if (vec6.HasNaNs())
														{
															vec6 = Vector2.UnitY * -1f;
														}
														vec6 *= 4f;
														Projectile.NewProjectile(base.Center.X + vector249.X, base.Center.Y + vector249.Y, vec6.X, vec6.Y, 454, 55, 0f, Main.myPlayer, 30f, (float)this.whoAmI);
														return;
													}
												}
												else
												{
													if (num1710 < 105f)
													{
														this.localAI[0] = this.localAI[0].AngleLerp(this.ai[2] - 1.57079637f, 0.2f);
														this.localAI[2] = MathHelper.Lerp(this.localAI[2], 0.75f, 0.2f);
														if (num1710 == 75f)
														{
															this.TargetClosest(false);
															this.netUpdate = true;
															this.velocity = Vector2.UnitY * -7f;
															for (int num1719 = 0; num1719 < 1000; num1719++)
															{
																Projectile projectile7 = Main.projectile[num1719];
																if (projectile7.active && projectile7.type == 454 && projectile7.ai[1] == (float)this.whoAmI && projectile7.ai[0] != -1f)
																{
																	projectile7.velocity += this.velocity;
																	projectile7.netUpdate = true;
																}
															}
														}
														this.velocity.Y = this.velocity.Y * 0.96f;
														this.ai[2] = (Main.player[this.target].Center - base.Center).ToRotation() + 1.57079637f;
														this.rotation = this.rotation.AngleTowards(this.ai[2], 0.104719758f);
														return;
													}
													if (num1710 < 120f)
													{
														Main.PlaySound(29, (int)base.Center.X, (int)base.Center.Y, 102);
														if (num1710 == 105f)
														{
															this.netUpdate = true;
														}
														Vector2 velocity9 = (this.ai[2] - 1.57079637f).ToRotationVector2() * 12f;
														this.velocity = velocity9 * 2f;
														for (int num1720 = 0; num1720 < 1000; num1720++)
														{
															Projectile projectile8 = Main.projectile[num1720];
															if (projectile8.active && projectile8.type == 454 && projectile8.ai[1] == (float)this.whoAmI && projectile8.ai[0] != -1f)
															{
																projectile8.ai[0] = -1f;
																projectile8.velocity = velocity9;
																projectile8.netUpdate = true;
															}
														}
														return;
													}
													this.velocity *= 0.92f;
													this.rotation = this.rotation.AngleLerp(0f, 0.2f);
													return;
												}
											}
											else if (this.ai[0] == 3f)
											{
												if (num1710 < 15f)
												{
													this.localAI[1] -= 0.07f;
													if (this.localAI[1] < 0f)
													{
														this.localAI[1] = 0f;
													}
													this.localAI[2] = MathHelper.Lerp(this.localAI[2], 0.4f, 0.2f);
													this.velocity *= 0.9f;
													if (this.velocity.Length() < 1f)
													{
														this.velocity = Vector2.Zero;
														return;
													}
												}
												else if (num1710 < 45f)
												{
													this.localAI[0] = 0f;
													this.localAI[1] = (float)Math.Sin((double)((num1710 - 15f) * 6.28318548f / 15f)) * 0.5f;
													if (this.localAI[1] < 0f)
													{
														this.localAI[0] = 3.14159274f;
														return;
													}
												}
												else
												{
													if (num1710 >= 185f)
													{
														this.velocity *= 0.88f;
														this.rotation = this.rotation.AngleLerp(0f, 0.2f);
														this.localAI[1] -= 0.07f;
														if (this.localAI[1] < 0f)
														{
															this.localAI[1] = 0f;
														}
														this.localAI[2] = MathHelper.Lerp(this.localAI[2], 1f, 0.2f);
														return;
													}
													if (num1710 == 45f)
													{
														this.ai[2] = (float)(Main.rand.Next(2) == 0).ToDirectionInt() * 6.28318548f / 40f;
														this.netUpdate = true;
													}
													if ((num1710 - 15f - 30f) % 40f == 0f)
													{
														this.ai[2] *= 0.95f;
													}
													this.localAI[0] += this.ai[2];
													this.localAI[1] += 0.05f;
													if (this.localAI[1] > 1f)
													{
														this.localAI[1] = 1f;
													}
													Vector2 vector250 = this.localAI[0].ToRotationVector2() * value50 * this.localAI[1];
													float scaleFactor23 = MathHelper.Lerp(8f, 20f, (num1710 - 15f - 30f) / 140f);
													this.velocity = Vector2.Normalize(vector250) * scaleFactor23;
													this.rotation = this.rotation.AngleLerp(this.velocity.ToRotation() + 1.57079637f, 0.2f);
													if ((num1710 - 15f - 30f) % 10f == 0f && Main.netMode != 1)
													{
														Vector2 vector251 = base.Center + Vector2.Normalize(vector250) * value50.Length() * 0.4f;
														Vector2 vector252 = Vector2.Normalize(vector250) * 8f;
														float ai3 = (6.28318548f * (float)Main.rand.NextDouble() - 3.14159274f) / 30f + 0.0174532924f * this.ai[2];
														Projectile.NewProjectile(vector251.X, vector251.Y, vector252.X, vector252.Y, 452, 35, 0f, Main.myPlayer, 0f, ai3);
														return;
													}
												}
											}
											else if (this.ai[0] == 4f)
											{
												if (num1710 == 0f)
												{
													this.TargetClosest(false);
													this.netUpdate = true;
												}
												if (num1710 < 180f)
												{
													this.localAI[2] = MathHelper.Lerp(this.localAI[2], 1f, 0.2f);
													this.localAI[1] -= 0.05f;
													if (this.localAI[1] < 0f)
													{
														this.localAI[1] = 0f;
													}
													this.velocity *= 0.95f;
													if (this.velocity.Length() < 1f)
													{
														this.velocity = Vector2.Zero;
													}
													if (num1710 >= 60f)
													{
														Vector2 center29 = base.Center;
														int num1721 = 0;
														if (num1710 >= 120f)
														{
															num1721 = 1;
														}
														for (int num1722 = 0; num1722 < 1 + num1721; num1722++)
														{
															int num1723 = 229;
															float num1724 = 0.8f;
															if (num1722 % 2 == 1)
															{
																num1723 = 229;
																num1724 = 1.65f;
															}
															Vector2 vector253 = center29 + ((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * value50 / 2f;
															int num1725 = Dust.NewDust(vector253 - Vector2.One * 8f, 16, 16, num1723, this.velocity.X / 2f, this.velocity.Y / 2f, 0, default(Color), 1f);
															Main.dust[num1725].velocity = Vector2.Normalize(center29 - vector253) * 3.5f * (10f - (float)num1721 * 2f) / 10f;
															Main.dust[num1725].noGravity = true;
															Main.dust[num1725].scale = num1724;
															Main.dust[num1725].customData = this;
														}
														return;
													}
												}
												else
												{
													if (num1710 < num1706 - 15f)
													{
														if (num1710 == 180f && Main.netMode != 1)
														{
															this.TargetClosest(false);
															Vector2 vector254 = Main.player[this.target].Center - base.Center;
															vector254.Normalize();
															float num1726 = -1f;
															if (vector254.X < 0f)
															{
																num1726 = 1f;
															}
															vector254 = vector254.RotatedBy((double)(-(double)num1726 * 6.28318548f / 6f), default(Vector2));
															Projectile.NewProjectile(base.Center.X, base.Center.Y, vector254.X, vector254.Y, 455, 50, 0f, Main.myPlayer, num1726 * 6.28318548f / 540f, (float)this.whoAmI);
															this.ai[2] = (vector254.ToRotation() + 9.424778f) * num1726;
															this.netUpdate = true;
														}
														this.localAI[1] += 0.05f;
														if (this.localAI[1] > 1f)
														{
															this.localAI[1] = 1f;
														}
														float num1727 = (float)(this.ai[2] >= 0f).ToDirectionInt();
														float num1728 = this.ai[2];
														if (num1728 < 0f)
														{
															num1728 *= -1f;
														}
														num1728 += -9.424778f;
														num1728 += num1727 * 6.28318548f / 540f;
														this.localAI[0] = num1728;
														this.ai[2] = (num1728 + 9.424778f) * num1727;
														return;
													}
													this.localAI[1] -= 0.07f;
													if (this.localAI[1] < 0f)
													{
														this.localAI[1] = 0f;
														return;
													}
												}
											}
										}
										else if (this.aiStyle == 82)
										{
											float num1729 = 90f;
											Vector2 value56 = new Vector2(0f, 216f);
											int num1730 = (int)Math.Abs(this.ai[0]) - 1;
											int num1731 = (int)this.ai[1];
											if (!Main.npc[num1730].active || Main.npc[num1730].type != 396)
											{
												this.life = 0;
												this.HitEffect(0, 10.0);
												this.active = false;
												return;
											}
											this.ai[2] += 1f;
											if (this.ai[2] >= num1729)
											{
												if (Main.netMode != 1)
												{
													int num1732 = (int)Main.npc[num1730].ai[3];
													int num1733 = -1;
													int num1734 = -1;
													int num1735 = num1730;
													for (int num1736 = 0; num1736 < 200; num1736++)
													{
														if (Main.npc[num1736].active && Main.npc[num1736].ai[3] == (float)num1732)
														{
															if (num1733 == -1 && Main.npc[num1736].type == 397 && Main.npc[num1736].ai[2] == 0f)
															{
																num1733 = num1736;
															}
															if (num1734 == -1 && Main.npc[num1736].type == 397 && Main.npc[num1736].ai[2] == 1f)
															{
																num1734 = num1736;
															}
															if (num1733 != -1 && num1734 != -1 && num1735 != -1)
															{
																break;
															}
														}
													}
													int num1737 = 1000;
													int num1738 = Main.npc[num1732].lifeMax - Main.npc[num1732].life;
													int num1739 = Main.npc[num1733].lifeMax - Main.npc[num1733].life;
													int num1740 = Main.npc[num1734].lifeMax - Main.npc[num1734].life;
													int num1741 = Main.npc[num1735].lifeMax - Main.npc[num1735].life;
													if (num1741 > 0 && num1737 > 0)
													{
														int num1742 = num1741 - num1737;
														if (num1742 > 0)
														{
															num1742 = 0;
														}
														int num1743 = num1737 + num1742;
														num1737 -= num1743;
														Main.npc[num1735].life += num1743;
														NPC.HealEffect(Utils.CenteredRectangle(Main.npc[num1735].Center, new Vector2(50f)), num1743, true);
													}
													if (num1738 > 0 && num1737 > 0)
													{
														int num1744 = num1738 - num1737;
														if (num1744 > 0)
														{
															num1744 = 0;
														}
														int num1745 = num1737 + num1744;
														num1737 -= num1745;
														Main.npc[num1732].life += num1745;
														NPC.HealEffect(Utils.CenteredRectangle(Main.npc[num1732].Center, new Vector2(50f)), num1745, true);
													}
													if (num1739 > 0 && num1737 > 0)
													{
														int num1746 = num1739 - num1737;
														if (num1746 > 0)
														{
															num1746 = 0;
														}
														int num1747 = num1737 + num1746;
														num1737 -= num1747;
														Main.npc[num1733].life += num1747;
														NPC.HealEffect(Utils.CenteredRectangle(Main.npc[num1733].Center, new Vector2(50f)), num1747, true);
													}
													if (num1740 > 0 && num1737 > 0)
													{
														int num1748 = num1740 - num1737;
														if (num1748 > 0)
														{
															num1748 = 0;
														}
														int num1749 = num1737 + num1748;
														num1737 -= num1749;
														Main.npc[num1734].life += num1749;
														NPC.HealEffect(Utils.CenteredRectangle(Main.npc[num1734].Center, new Vector2(50f)), num1749, true);
													}
												}
												this.life = 0;
												this.HitEffect(0, 10.0);
												this.active = false;
												return;
											}
											this.velocity = Vector2.Zero;
											base.Center = Vector2.Lerp(Main.projectile[num1731].Center, Main.npc[(int)Math.Abs(this.ai[0]) - 1].Center + value56, this.ai[2] / num1729);
											Vector2 spinningpoint9 = Vector2.UnitY * (float)(-(float)this.height) / 2f;
											for (int num1750 = 0; num1750 < 6; num1750++)
											{
												int num1751 = Dust.NewDust(base.Center - Vector2.One * 4f + spinningpoint9.RotatedBy((double)((float)num1750 * 6.28318548f / 6f), default(Vector2)), 0, 0, 229, 0f, 0f, 0, default(Color), 1f);
												Main.dust[num1751].velocity = -Vector2.UnitY;
												Main.dust[num1751].noGravity = true;
												Main.dust[num1751].scale = 0.7f;
												Main.dust[num1751].customData = this;
											}
											spinningpoint9 = Vector2.UnitY * (float)(-(float)this.height) / 6f;
											for (int num1752 = 0; num1752 < 3; num1752++)
											{
												int num1753 = Dust.NewDust(base.Center - Vector2.One * 4f + spinningpoint9.RotatedBy((double)((float)num1752 * 6.28318548f / 6f), default(Vector2)), 0, 0, 229, 0f, -2f, 0, default(Color), 1f);
												Main.dust[num1753].noGravity = true;
												Main.dust[num1753].scale = 1.5f;
												Main.dust[num1753].customData = this;
											}
											return;
										}
										else if (this.aiStyle == 83)
										{
											if (this.type == 437)
											{
												if (this.localAI[3] == 0f && Main.netMode != 1)
												{
													this.localAI[3] = 1f;
													this.netUpdate = true;
													Point[] array7 = null;
													if (!CultistRitual.CheckFloor(base.Center, out array7))
													{
														this.life = 0;
														this.HitEffect(0, 10.0);
														this.active = false;
														return;
													}
													int num1754 = 0;
													int num1755 = 1;
													for (int num1756 = 0; num1756 < 4; num1756++)
													{
														bool flag170 = num1756 == 1 || num1756 == 2;
														int num1757;
														if (flag170)
														{
															num1757 = 438;
														}
														else
														{
															num1757 = 379;
														}
														int num1758 = NPC.NewNPC(array7[num1756].X * 16 + 8, array7[num1756].Y * 16 - 48, num1757, 0, 0f, 0f, 0f, 0f, 255);
														if (flag170)
														{
															this.localAI[num1755++] = (float)(num1758 + 1);
															Main.npc[num1758].ai[3] = (float)(-(float)(this.whoAmI + 1));
														}
														else
														{
															this.ai[num1754++] = (float)(num1758 + 1);
															Main.npc[num1758].ai[3] = (float)(-(float)(this.whoAmI + 1));
														}
														Main.npc[num1758].netUpdate = true;
													}
												}
												if (this.localAI[0] == 1f && Main.netMode != 1)
												{
													this.localAI[0] = 2f;
													for (int num1759 = 0; num1759 < 2; num1759++)
													{
														Main.npc[(int)this.localAI[num1759 + 1] - 1].ai[1] = 1f;
														Main.npc[(int)this.localAI[num1759 + 1] - 1].netUpdate = true;
														Main.npc[(int)this.ai[num1759] - 1].ai[3] = 0f;
														Main.npc[(int)this.ai[num1759] - 1].TargetClosest(true);
														Main.npc[(int)this.ai[num1759] - 1].netUpdate = true;
													}
												}
												if (this.ai[0] != -1f && Main.netMode != 1)
												{
													bool flag171 = true;
													for (int num1760 = 0; num1760 < 2; num1760++)
													{
														if (Main.npc[(int)this.localAI[num1760 + 1] - 1].active && Main.npc[(int)this.localAI[num1760 + 1] - 1].type == 438)
														{
															flag171 = false;
														}
														if (Main.npc[(int)this.ai[num1760] - 1].active && Main.npc[(int)this.ai[num1760] - 1].type == 379)
														{
															flag171 = false;
														}
													}
													if (flag171)
													{
														this.ai[0] = -1f;
														this.ai[1] = 0f;
														this.ai[3] = 0f;
														int num1761 = (int)base.Center.X / 16 + 11 * (Main.rand.Next(2) == 0).ToDirectionInt();
														int num1762 = 0;
														for (int num1763 = -5; num1763 < 12; num1763++)
														{
															int num1764 = num1761;
															int num1765 = (int)base.Center.Y / 16 + num1763;
															if (WorldGen.SolidTile(num1764, num1765) && !Collision.SolidTiles(num1764 - 1, num1764 + 1, num1765 - 3, num1765 - 1))
															{
																num1762 = num1765;
																break;
															}
															if (num1763 == 11)
															{
																num1762 = num1765;
															}
														}
														int num1766 = NPC.NewNPC(num1761 * 16 + 10, num1762 * 16 - 2, 439, 0, 0f, 0f, 0f, 0f, 255);
														Main.npc[num1766].direction = (Main.npc[num1766].spriteDirection = Math.Sign(base.Center.X - (float)(num1761 * 16) - 10f));
														this.ai[2] = (float)num1766;
														this.netUpdate = true;
														CultistRitual.TabletDestroyed();
													}
												}
												if (this.ai[0] == -1f)
												{
													this.ai[3] += 1f;
													if (this.ai[3] > 300f)
													{
														this.life = 0;
														this.HitEffect(0, 9999.0);
														this.active = false;
														if (Main.netMode != 1)
														{
															for (int num1767 = 0; num1767 < 6; num1767++)
															{
																float num1768 = 3f + Main.rand.NextFloat() * 6f;
																Vector2 vector255 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
																Vector2 value57 = base.Center;
																value57 += vector255 * 30f;
																Projectile.NewProjectile(value57.X, value57.Y, vector255.X * num1768, vector255.Y * num1768, 526, 0, 0f, Main.myPlayer, Main.npc[(int)this.ai[2]].Center.X, Main.npc[(int)this.ai[2]].Center.Y);
															}
															for (int num1769 = 0; num1769 < 20; num1769++)
															{
																if (Main.rand.Next(2) != 0)
																{
																	float num1770 = 3f + Main.rand.NextFloat() * 6f;
																	Vector2 vector256 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
																	Vector2 value58 = base.Center;
																	value58 += vector256 * 30f;
																	Vector2 vector257 = base.Center + vector256 * (Main.rand.NextFloat() * 45f + 45f) + Vector2.UnitY * 20f;
																	Projectile.NewProjectile(value58.X, value58.Y, vector256.X * num1770, -20f, 526, 0, 0f, Main.myPlayer, vector257.X, vector257.Y);
																}
															}
														}
													}
													else if (this.ai[3] % 10f == 1f && this.ai[3] > 120f && Main.netMode != 1)
													{
														float num1771 = 3f + Main.rand.NextFloat() * 6f;
														Vector2 vector258 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
														Vector2 value59 = base.Center;
														value59 += vector258 * 25f;
														Projectile.NewProjectile(value59.X, value59.Y, vector258.X * num1771, vector258.Y * num1771, 526, 0, 0f, Main.myPlayer, Main.npc[(int)this.ai[2]].Center.X, Main.npc[(int)this.ai[2]].Center.Y);
													}
												}
											}
											if (this.type == 438)
											{
												this.velocity.X = this.velocity.X * 0.93f;
												if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
												{
													this.velocity.X = 0f;
												}
												int num1772 = (int)(-this.ai[3] - 1f);
												if (num1772 == -1)
												{
													this.life = 0;
													this.HitEffect(0, 10.0);
													this.active = false;
													return;
												}
												int num1773 = Math.Sign(Main.npc[num1772].Center.X - base.Center.X);
												if (num1773 != this.direction)
												{
													this.velocity.X = 0f;
													this.direction = (this.spriteDirection = num1773);
													this.netUpdate = true;
												}
												if (this.justHit && Main.netMode != 1 && Main.npc[num1772].localAI[0] == 0f)
												{
													Main.npc[num1772].localAI[0] = 1f;
												}
												if ((this.ai[0] += 1f) >= 300f)
												{
													this.ai[0] = 0f;
													this.netUpdate = true;
												}
											}
											if (this.type == 437)
											{
												Lighting.AddLight(base.Center, 0.8f, 0.75f, 0.55f);
												return;
											}
										}
										else
										{
											if (this.aiStyle == 84)
											{
												if (this.ai[0] != -1f && Main.rand.Next(1000) == 0)
												{
													Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(88, 92));
												}
												bool expertMode2 = Main.expertMode;
												bool flag172 = this.life <= this.lifeMax / 2;
												int num1774 = 120;
												int num1775 = 35;
												if (expertMode2)
												{
													num1774 = 90;
													num1775 = 25;
												}
												int num1776 = 18;
												int num1777 = 3;
												int num1778 = 30;
												if (expertMode2)
												{
													num1776 = 12;
													num1777 = 4;
													num1778 = 20;
												}
												int num1779 = 80;
												int num1780 = 45;
												if (expertMode2)
												{
													num1779 = 40;
													num1780 = 30;
												}
												int num1781 = 20;
												int num1782 = 2;
												if (expertMode2)
												{
													num1781 = 30;
													num1782 = 2;
												}
												int num1783 = 20;
												int num1784 = 3;
												bool flag173 = this.type == 439;
												bool flag174 = false;
												bool flag175 = false;
												if (flag172)
												{
													this.defense = (int)((float)this.defDefense * 0.65f);
												}
												if (!flag173)
												{
													bool flag176 = this.ai[3] < 0f || !Main.npc[(int)this.ai[3]].active || Main.npc[(int)this.ai[3]].type != 439;
													if (flag176)
													{
														this.life = 0;
														this.HitEffect(0, 10.0);
														this.active = false;
														return;
													}
													this.ai[0] = Main.npc[(int)this.ai[3]].ai[0];
													this.ai[1] = Main.npc[(int)this.ai[3]].ai[1];
													if (this.ai[0] == 5f)
													{
														if (this.justHit)
														{
															this.life = 0;
															this.HitEffect(0, 10.0);
															this.active = false;
															if (Main.netMode != 1)
															{
																NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
															}
															NPC nPC12 = Main.npc[(int)this.ai[3]];
															nPC12.ai[0] = 6f;
															nPC12.ai[1] = 0f;
															nPC12.netUpdate = true;
														}
													}
													else
													{
														flag174 = true;
														flag175 = true;
													}
												}
												else if (this.ai[0] == 5f && this.ai[1] >= 120f && this.ai[1] < 420f && this.justHit)
												{
													this.ai[0] = 0f;
													this.ai[1] = 0f;
													this.ai[3] += 1f;
													this.velocity = Vector2.Zero;
													this.netUpdate = true;
													List<int> list = new List<int>();
													for (int num1785 = 0; num1785 < 200; num1785++)
													{
														if (Main.npc[num1785].active && Main.npc[num1785].type == 440 && Main.npc[num1785].ai[3] == (float)this.whoAmI)
														{
															list.Add(num1785);
														}
													}
													int num1786 = 10;
													if (Main.expertMode)
													{
														num1786 = 3;
													}
													foreach (int current in list)
													{
														NPC nPC13 = Main.npc[current];
														if (nPC13.localAI[1] == this.localAI[1] && num1786 > 0)
														{
															num1786--;
															nPC13.life = 0;
															nPC13.HitEffect(0, 10.0);
															nPC13.active = false;
															if (Main.netMode != 1)
															{
																NetMessage.SendData(23, -1, -1, "", current, 0f, 0f, 0f, 0, 0, 0);
															}
														}
														else if (num1786 > 0)
														{
															num1786--;
															nPC13.life = 0;
															nPC13.HitEffect(0, 10.0);
															nPC13.active = false;
														}
													}
													Main.projectile[(int)this.ai[2]].ai[1] = -1f;
													Main.projectile[(int)this.ai[2]].netUpdate = true;
												}
												Vector2 center30 = base.Center;
												Player player11 = Main.player[this.target];
												if (this.target < 0 || this.target == 255 || player11.dead || !player11.active)
												{
													this.TargetClosest(false);
													player11 = Main.player[this.target];
													this.netUpdate = true;
												}
												if (player11.dead || Vector2.Distance(player11.Center, center30) > 5600f)
												{
													this.life = 0;
													this.HitEffect(0, 10.0);
													this.active = false;
													if (Main.netMode != 1)
													{
														NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0f, 0f, 0, 0, 0);
													}
													List<int> list2 = new List<int>();
													list2.Add(this.whoAmI);
													for (int num1787 = 0; num1787 < 200; num1787++)
													{
														if (Main.npc[num1787].active && Main.npc[num1787].type == 440 && Main.npc[num1787].ai[3] == (float)this.whoAmI)
														{
															Main.npc[num1787].life = 0;
															Main.npc[num1787].HitEffect(0, 10.0);
															Main.npc[num1787].active = false;
															if (Main.netMode != 1)
															{
																NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0f, 0f, 0, 0, 0);
															}
														}
													}
												}
												float num1788 = this.ai[3];
												if (this.localAI[0] == 0f)
												{
													Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 89);
													this.localAI[0] = 1f;
													this.alpha = 255;
													this.rotation = 0f;
													if (Main.netMode != 1)
													{
														this.ai[0] = -1f;
														this.netUpdate = true;
													}
												}
												if (this.ai[0] == -1f)
												{
													this.alpha -= 5;
													if (this.alpha < 0)
													{
														this.alpha = 0;
													}
													this.ai[1] += 1f;
													if (this.ai[1] >= 420f)
													{
														this.ai[0] = 0f;
														this.ai[1] = 0f;
														this.netUpdate = true;
													}
													else if (this.ai[1] > 360f)
													{
														this.velocity *= 0.95f;
														if (this.localAI[2] != 13f)
														{
															Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 105);
														}
														this.localAI[2] = 13f;
													}
													else if (this.ai[1] > 300f)
													{
														this.velocity = -Vector2.UnitY;
														this.localAI[2] = 10f;
													}
													else if (this.ai[1] > 120f)
													{
														this.localAI[2] = 1f;
													}
													else
													{
														this.localAI[2] = 0f;
													}
													flag174 = true;
													flag175 = true;
												}
												if (this.ai[0] == 0f)
												{
													if (this.ai[1] == 0f)
													{
														this.TargetClosest(false);
													}
													this.localAI[2] = 10f;
													int num1789 = Math.Sign(player11.Center.X - center30.X);
													if (num1789 != 0)
													{
														this.direction = (this.spriteDirection = num1789);
													}
													this.ai[1] += 1f;
													if (this.ai[1] >= 40f && flag173)
													{
														int num1790 = 0;
														if (flag172)
														{
															switch ((int)this.ai[3])
															{
																case 0:
																	num1790 = 0;
																	break;
																case 1:
																	num1790 = 1;
																	break;
																case 2:
																	num1790 = 0;
																	break;
																case 3:
																	num1790 = 5;
																	break;
																case 4:
																	num1790 = 0;
																	break;
																case 5:
																	num1790 = 3;
																	break;
																case 6:
																	num1790 = 0;
																	break;
																case 7:
																	num1790 = 5;
																	break;
																case 8:
																	num1790 = 0;
																	break;
																case 9:
																	num1790 = 2;
																	break;
																case 10:
																	num1790 = 0;
																	break;
																case 11:
																	num1790 = 3;
																	break;
																case 12:
																	num1790 = 0;
																	break;
																case 13:
																	num1790 = 4;
																	this.ai[3] = -1f;
																	break;
																default:
																	this.ai[3] = -1f;
																	break;
															}
														}
														else
														{
															switch ((int)this.ai[3])
															{
																case 0:
																	num1790 = 0;
																	break;
																case 1:
																	num1790 = 1;
																	break;
																case 2:
																	num1790 = 0;
																	break;
																case 3:
																	num1790 = 2;
																	break;
																case 4:
																	num1790 = 0;
																	break;
																case 5:
																	num1790 = 3;
																	break;
																case 6:
																	num1790 = 0;
																	break;
																case 7:
																	num1790 = 1;
																	break;
																case 8:
																	num1790 = 0;
																	break;
																case 9:
																	num1790 = 2;
																	break;
																case 10:
																	num1790 = 0;
																	break;
																case 11:
																	num1790 = 4;
																	this.ai[3] = -1f;
																	break;
																default:
																	this.ai[3] = -1f;
																	break;
															}
														}
														int maxValue12 = 6;
														if (this.life < this.lifeMax / 3)
														{
															maxValue12 = 4;
														}
														if (this.life < this.lifeMax / 4)
														{
															maxValue12 = 3;
														}
														if (expertMode2 && flag172 && Main.rand.Next(maxValue12) == 0 && num1790 != 0 && num1790 != 4 && num1790 != 5 && NPC.CountNPCS(523) < 10)
														{
															num1790 = 6;
														}
														if (num1790 == 0)
														{
															float num1791 = (float)Math.Ceiling((double)((player11.Center + new Vector2(0f, -100f) - center30).Length() / 50f));
															if (num1791 == 0f)
															{
																num1791 = 1f;
															}
															List<int> list3 = new List<int>();
															int num1792 = 0;
															list3.Add(this.whoAmI);
															for (int num1793 = 0; num1793 < 200; num1793++)
															{
																if (Main.npc[num1793].active && Main.npc[num1793].type == 440 && Main.npc[num1793].ai[3] == (float)this.whoAmI)
																{
																	list3.Add(num1793);
																}
															}
															bool flag177 = list3.Count % 2 == 0;
															foreach (int current2 in list3)
															{
																NPC nPC14 = Main.npc[current2];
																Vector2 center31 = nPC14.Center;
																float num1794 = (float)((num1792 + flag177.ToInt() + 1) / 2) * 6.28318548f * 0.4f / (float)list3.Count;
																if (num1792 % 2 == 1)
																{
																	num1794 *= -1f;
																}
																if (list3.Count == 1)
																{
																	num1794 = 0f;
																}
																Vector2 value60 = new Vector2(0f, -1f).RotatedBy((double)num1794, default(Vector2)) * new Vector2(300f, 200f);
																Vector2 value61 = player11.Center + value60 - center31;
																nPC14.ai[0] = 1f;
																nPC14.ai[1] = num1791 * 2f;
																nPC14.velocity = value61 / num1791;
																if (this.whoAmI >= nPC14.whoAmI)
																{
																	nPC14.position -= nPC14.velocity;
																}
																nPC14.netUpdate = true;
																num1792++;
															}
														}
														if (num1790 == 1)
														{
															this.ai[0] = 3f;
															this.ai[1] = 0f;
														}
														else if (num1790 == 2)
														{
															this.ai[0] = 2f;
															this.ai[1] = 0f;
														}
														else if (num1790 == 3)
														{
															this.ai[0] = 4f;
															this.ai[1] = 0f;
														}
														else if (num1790 == 4)
														{
															this.ai[0] = 5f;
															this.ai[1] = 0f;
														}
														if (num1790 == 5)
														{
															this.ai[0] = 7f;
															this.ai[1] = 0f;
														}
														if (num1790 == 6)
														{
															this.ai[0] = 8f;
															this.ai[1] = 0f;
														}
														this.netUpdate = true;
													}
												}
												else if (this.ai[0] == 1f)
												{
													flag174 = true;
													this.localAI[2] = 10f;
													if ((float)((int)this.ai[1]) % 2f != 0f && this.ai[1] != 1f)
													{
														this.position -= this.velocity;
													}
													this.ai[1] -= 1f;
													if (this.ai[1] <= 0f)
													{
														this.ai[0] = 0f;
														this.ai[1] = 0f;
														this.ai[3] += 1f;
														this.velocity = Vector2.Zero;
														this.netUpdate = true;
													}
												}
												else if (this.ai[0] == 2f)
												{
													this.localAI[2] = 11f;
													Vector2 vec7 = Vector2.Normalize(player11.Center - center30);
													if (vec7.HasNaNs())
													{
														vec7 = new Vector2((float)this.direction, 0f);
													}
													if (this.ai[1] >= 4f && flag173 && (int)(this.ai[1] - 4f) % num1774 == 0)
													{
														if (Main.netMode != 1)
														{
															List<int> list4 = new List<int>();
															for (int num1795 = 0; num1795 < 200; num1795++)
															{
																if (Main.npc[num1795].active && Main.npc[num1795].type == 440 && Main.npc[num1795].ai[3] == (float)this.whoAmI)
																{
																	list4.Add(num1795);
																}
															}
															foreach (int current3 in list4)
															{
																NPC nPC15 = Main.npc[current3];
																Vector2 center32 = nPC15.Center;
																int num1796 = Math.Sign(player11.Center.X - center32.X);
																if (num1796 != 0)
																{
																	nPC15.direction = (nPC15.spriteDirection = num1796);
																}
																if (Main.netMode != 1)
																{
																	vec7 = Vector2.Normalize(player11.Center - center32 + player11.velocity * 20f);
																	if (vec7.HasNaNs())
																	{
																		vec7 = new Vector2((float)this.direction, 0f);
																	}
																	Vector2 vector259 = center32 + new Vector2((float)(this.direction * 30), 12f);
																	for (int num1797 = 0; num1797 < 1; num1797++)
																	{
																		Vector2 spinninpoint = vec7 * (6f + (float)Main.rand.NextDouble() * 4f);
																		spinninpoint = spinninpoint.RotatedByRandom(0.52359879016876221);
																		Projectile.NewProjectile(vector259.X, vector259.Y, spinninpoint.X, spinninpoint.Y, 468, 18, 0f, Main.myPlayer, 0f, 0f);
																	}
																}
															}
														}
														if (Main.netMode != 1)
														{
															vec7 = Vector2.Normalize(player11.Center - center30 + player11.velocity * 20f);
															if (vec7.HasNaNs())
															{
																vec7 = new Vector2((float)this.direction, 0f);
															}
															Vector2 vector260 = base.Center + new Vector2((float)(this.direction * 30), 12f);
															for (int num1798 = 0; num1798 < 1; num1798++)
															{
																Vector2 vector261 = vec7 * 4f;
																Projectile.NewProjectile(vector260.X, vector260.Y, vector261.X, vector261.Y, 464, num1775, 0f, Main.myPlayer, 0f, 1f);
															}
														}
													}
													this.ai[1] += 1f;
													if (this.ai[1] >= (float)(4 + num1774))
													{
														this.ai[0] = 0f;
														this.ai[1] = 0f;
														this.ai[3] += 1f;
														this.velocity = Vector2.Zero;
														this.netUpdate = true;
													}
												}
												else if (this.ai[0] == 3f)
												{
													this.localAI[2] = 11f;
													Vector2 vec8 = Vector2.Normalize(player11.Center - center30);
													if (vec8.HasNaNs())
													{
														vec8 = new Vector2((float)this.direction, 0f);
													}
													if (this.ai[1] >= 4f && flag173 && (int)(this.ai[1] - 4f) % num1776 == 0)
													{
														int num1799 = (int)(this.ai[1] - 4f) / num1776;
														if (num1799 == 2)
														{
															List<int> list5 = new List<int>();
															for (int num1800 = 0; num1800 < 200; num1800++)
															{
																if (Main.npc[num1800].active && Main.npc[num1800].type == 440 && Main.npc[num1800].ai[3] == (float)this.whoAmI)
																{
																	list5.Add(num1800);
																}
															}
															if (Main.netMode != 1)
															{
																foreach (int current4 in list5)
																{
																	NPC nPC16 = Main.npc[current4];
																	Vector2 center33 = nPC16.Center;
																	int num1801 = Math.Sign(player11.Center.X - center33.X);
																	if (num1801 != 0)
																	{
																		nPC16.direction = (nPC16.spriteDirection = num1801);
																	}
																	if (Main.netMode != 1)
																	{
																		vec8 = Vector2.Normalize(player11.Center - center33 + player11.velocity * 20f);
																		if (vec8.HasNaNs())
																		{
																			vec8 = new Vector2((float)this.direction, 0f);
																		}
																		Vector2 vector262 = center33 + new Vector2((float)(this.direction * 30), 12f);
																		for (int num1802 = 0; num1802 < 1; num1802++)
																		{
																			Vector2 spinninpoint2 = vec8 * (6f + (float)Main.rand.NextDouble() * 4f);
																			spinninpoint2 = spinninpoint2.RotatedByRandom(0.52359879016876221);
																			Projectile.NewProjectile(vector262.X, vector262.Y, spinninpoint2.X, spinninpoint2.Y, 468, 18, 0f, Main.myPlayer, 0f, 0f);
																		}
																	}
																}
															}
														}
														int num1803 = Math.Sign(player11.Center.X - center30.X);
														if (num1803 != 0)
														{
															this.direction = (this.spriteDirection = num1803);
														}
														if (Main.netMode != 1)
														{
															vec8 = Vector2.Normalize(player11.Center - center30 + player11.velocity * 20f);
															if (vec8.HasNaNs())
															{
																vec8 = new Vector2((float)this.direction, 0f);
															}
															Vector2 vector263 = base.Center + new Vector2((float)(this.direction * 30), 12f);
															for (int num1804 = 0; num1804 < 1; num1804++)
															{
																Vector2 spinninpoint3 = vec8 * (6f + (float)Main.rand.NextDouble() * 4f);
																spinninpoint3 = spinninpoint3.RotatedByRandom(0.52359879016876221);
																Projectile.NewProjectile(vector263.X, vector263.Y, spinninpoint3.X, spinninpoint3.Y, 467, num1778, 0f, Main.myPlayer, 0f, 0f);
															}
														}
													}
													this.ai[1] += 1f;
													if (this.ai[1] >= (float)(4 + num1776 * num1777))
													{
														this.ai[0] = 0f;
														this.ai[1] = 0f;
														this.ai[3] += 1f;
														this.velocity = Vector2.Zero;
														this.netUpdate = true;
													}
												}
												else if (this.ai[0] == 4f)
												{
													if (flag173)
													{
														this.localAI[2] = 12f;
													}
													else
													{
														this.localAI[2] = 11f;
													}
													if (this.ai[1] == 20f && flag173 && Main.netMode != 1)
													{
														List<int> list6 = new List<int>();
														for (int num1805 = 0; num1805 < 200; num1805++)
														{
															if (Main.npc[num1805].active && Main.npc[num1805].type == 440 && Main.npc[num1805].ai[3] == (float)this.whoAmI)
															{
																list6.Add(num1805);
															}
														}
														foreach (int current5 in list6)
														{
															NPC nPC17 = Main.npc[current5];
															Vector2 center34 = nPC17.Center;
															int num1806 = Math.Sign(player11.Center.X - center34.X);
															if (num1806 != 0)
															{
																nPC17.direction = (nPC17.spriteDirection = num1806);
															}
															if (Main.netMode != 1)
															{
																Vector2 vec9 = Vector2.Normalize(player11.Center - center34 + player11.velocity * 20f);
																if (vec9.HasNaNs())
																{
																	vec9 = new Vector2((float)this.direction, 0f);
																}
																Vector2 vector264 = center34 + new Vector2((float)(this.direction * 30), 12f);
																for (int num1807 = 0; num1807 < 1; num1807++)
																{
																	Vector2 spinninpoint4 = vec9 * (6f + (float)Main.rand.NextDouble() * 4f);
																	spinninpoint4 = spinninpoint4.RotatedByRandom(0.52359879016876221);
																	Projectile.NewProjectile(vector264.X, vector264.Y, spinninpoint4.X, spinninpoint4.Y, 468, 18, 0f, Main.myPlayer, 0f, 0f);
																}
															}
														}
														if ((int)(this.ai[1] - 20f) % num1779 == 0)
														{
															Projectile.NewProjectile(base.Center.X, base.Center.Y - 100f, 0f, 0f, 465, num1780, 0f, Main.myPlayer, 0f, 0f);
														}
													}
													this.ai[1] += 1f;
													if (this.ai[1] >= (float)(20 + num1779))
													{
														this.ai[0] = 0f;
														this.ai[1] = 0f;
														this.ai[3] += 1f;
														this.velocity = Vector2.Zero;
														this.netUpdate = true;
													}
												}
												else if (this.ai[0] == 5f)
												{
													this.localAI[2] = 10f;
													Vector2 vec10 = Vector2.Normalize(player11.Center - center30);
													if (vec10.HasNaNs())
													{
														vec10 = new Vector2((float)this.direction, 0f);
													}
													if (this.ai[1] >= 0f && this.ai[1] < 30f)
													{
														flag174 = true;
														flag175 = true;
														float num1808 = (this.ai[1] - 0f) / 30f;
														this.alpha = (int)(num1808 * 255f);
													}
													else if (this.ai[1] >= 30f && this.ai[1] < 90f)
													{
														if (this.ai[1] == 30f && Main.netMode != 1 && flag173)
														{
															this.localAI[1] += 1f;
															Vector2 spinningpoint10 = new Vector2(180f, 0f);
															List<int> list7 = new List<int>();
															for (int num1809 = 0; num1809 < 200; num1809++)
															{
																if (Main.npc[num1809].active && Main.npc[num1809].type == 440 && Main.npc[num1809].ai[3] == (float)this.whoAmI)
																{
																	list7.Add(num1809);
																}
															}
															int num1810 = 6 - list7.Count;
															if (num1810 > 2)
															{
																num1810 = 2;
															}
															int num1811 = list7.Count + num1810 + 1;
															float[] array8 = new float[num1811];
															for (int num1812 = 0; num1812 < array8.Length; num1812++)
															{
																array8[num1812] = Vector2.Distance(base.Center + spinningpoint10.RotatedBy((double)((float)num1812 * 6.28318548f / (float)num1811 - 1.57079637f), default(Vector2)), player11.Center);
															}
															int num1813 = 0;
															for (int num1814 = 1; num1814 < array8.Length; num1814++)
															{
																if (array8[num1813] > array8[num1814])
																{
																	num1813 = num1814;
																}
															}
															if (num1813 < num1811 / 2)
															{
																num1813 += num1811 / 2;
															}
															else
															{
																num1813 -= num1811 / 2;
															}
															int num1815 = num1810;
															for (int num1816 = 0; num1816 < array8.Length; num1816++)
															{
																if (num1813 != num1816)
																{
																	Vector2 center35 = base.Center + spinningpoint10.RotatedBy((double)((float)num1816 * 6.28318548f / (float)num1811 - 1.57079637f), default(Vector2));
																	if (num1815-- > 0)
																	{
																		int num1817 = NPC.NewNPC((int)center35.X, (int)center35.Y + this.height / 2, 440, this.whoAmI, 0f, 0f, 0f, 0f, 255);
																		Main.npc[num1817].ai[3] = (float)this.whoAmI;
																		Main.npc[num1817].netUpdate = true;
																		Main.npc[num1817].localAI[1] = this.localAI[1];
																	}
																	else
																	{
																		int num1818 = list7[-num1815 - 1];
																		Main.npc[num1818].Center = center35;
																		NetMessage.SendData(23, -1, -1, "", num1818, 0f, 0f, 0f, 0, 0, 0);
																	}
																}
															}
															this.ai[2] = (float)Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 490, 0, 0f, Main.myPlayer, 0f, (float)this.whoAmI);
															base.Center += spinningpoint10.RotatedBy((double)((float)num1813 * 6.28318548f / (float)num1811 - 1.57079637f), default(Vector2));
															this.netUpdate = true;
															list7.Clear();
														}
														flag174 = true;
														flag175 = true;
														this.alpha = 255;
														if (flag173)
														{
															Vector2 value62 = Main.projectile[(int)this.ai[2]].Center;
															value62 -= base.Center;
															if (value62 == Vector2.Zero)
															{
																value62 = -Vector2.UnitY;
															}
															value62.Normalize();
															if (Math.Abs(value62.Y) < 0.77f)
															{
																this.localAI[2] = 11f;
															}
															else if (value62.Y < 0f)
															{
																this.localAI[2] = 12f;
															}
															else
															{
																this.localAI[2] = 10f;
															}
															int num1819 = Math.Sign(value62.X);
															if (num1819 != 0)
															{
																this.direction = (this.spriteDirection = num1819);
															}
														}
														else
														{
															Vector2 value63 = Main.projectile[(int)Main.npc[(int)this.ai[3]].ai[2]].Center;
															value63 -= base.Center;
															if (value63 == Vector2.Zero)
															{
																value63 = -Vector2.UnitY;
															}
															value63.Normalize();
															if (Math.Abs(value63.Y) < 0.77f)
															{
																this.localAI[2] = 11f;
															}
															else if (value63.Y < 0f)
															{
																this.localAI[2] = 12f;
															}
															else
															{
																this.localAI[2] = 10f;
															}
															int num1820 = Math.Sign(value63.X);
															if (num1820 != 0)
															{
																this.direction = (this.spriteDirection = num1820);
															}
														}
													}
													else if (this.ai[1] >= 90f && this.ai[1] < 120f)
													{
														flag174 = true;
														flag175 = true;
														float num1821 = (this.ai[1] - 90f) / 30f;
														this.alpha = 255 - (int)(num1821 * 255f);
													}
													else if (this.ai[1] >= 120f && this.ai[1] < 420f)
													{
														flag175 = true;
														this.alpha = 0;
														if (flag173)
														{
															Vector2 value64 = Main.projectile[(int)this.ai[2]].Center;
															value64 -= base.Center;
															if (value64 == Vector2.Zero)
															{
																value64 = -Vector2.UnitY;
															}
															value64.Normalize();
															if (Math.Abs(value64.Y) < 0.77f)
															{
																this.localAI[2] = 11f;
															}
															else if (value64.Y < 0f)
															{
																this.localAI[2] = 12f;
															}
															else
															{
																this.localAI[2] = 10f;
															}
															int num1822 = Math.Sign(value64.X);
															if (num1822 != 0)
															{
																this.direction = (this.spriteDirection = num1822);
															}
														}
														else
														{
															Vector2 value65 = Main.projectile[(int)Main.npc[(int)this.ai[3]].ai[2]].Center;
															value65 -= base.Center;
															if (value65 == Vector2.Zero)
															{
																value65 = -Vector2.UnitY;
															}
															value65.Normalize();
															if (Math.Abs(value65.Y) < 0.77f)
															{
																this.localAI[2] = 11f;
															}
															else if (value65.Y < 0f)
															{
																this.localAI[2] = 12f;
															}
															else
															{
																this.localAI[2] = 10f;
															}
															int num1823 = Math.Sign(value65.X);
															if (num1823 != 0)
															{
																this.direction = (this.spriteDirection = num1823);
															}
														}
													}
													this.ai[1] += 1f;
													if (this.ai[1] >= 420f)
													{
														flag175 = true;
														this.ai[0] = 0f;
														this.ai[1] = 0f;
														this.ai[3] += 1f;
														this.velocity = Vector2.Zero;
														this.netUpdate = true;
													}
												}
												else if (this.ai[0] == 6f)
												{
													this.localAI[2] = 13f;
													this.ai[1] += 1f;
													if (this.ai[1] >= 120f)
													{
														this.ai[0] = 0f;
														this.ai[1] = 0f;
														this.ai[3] += 1f;
														this.velocity = Vector2.Zero;
														this.netUpdate = true;
													}
												}
												else if (this.ai[0] == 7f)
												{
													this.localAI[2] = 11f;
													Vector2 vec11 = Vector2.Normalize(player11.Center - center30);
													if (vec11.HasNaNs())
													{
														vec11 = new Vector2((float)this.direction, 0f);
													}
													if (this.ai[1] >= 4f && flag173 && (int)(this.ai[1] - 4f) % num1781 == 0)
													{
														int num1824 = (int)(this.ai[1] - 4f) / num1781;
														if (num1824 == 2)
														{
															List<int> list8 = new List<int>();
															for (int num1825 = 0; num1825 < 200; num1825++)
															{
																if (Main.npc[num1825].active && Main.npc[num1825].type == 440 && Main.npc[num1825].ai[3] == (float)this.whoAmI)
																{
																	list8.Add(num1825);
																}
															}
															foreach (int current6 in list8)
															{
																NPC nPC18 = Main.npc[current6];
																Vector2 center36 = nPC18.Center;
																int num1826 = Math.Sign(player11.Center.X - center36.X);
																if (num1826 != 0)
																{
																	nPC18.direction = (nPC18.spriteDirection = num1826);
																}
																if (Main.netMode != 1)
																{
																	vec11 = Vector2.Normalize(player11.Center - center36 + player11.velocity * 20f);
																	if (vec11.HasNaNs())
																	{
																		vec11 = new Vector2((float)this.direction, 0f);
																	}
																	Vector2 vector265 = center36 + new Vector2((float)(this.direction * 30), 12f);
																	int num1827 = 0;
																	while ((float)num1827 < 5f)
																	{
																		Vector2 spinninpoint5 = vec11 * (6f + (float)Main.rand.NextDouble() * 4f);
																		spinninpoint5 = spinninpoint5.RotatedByRandom(1.2566370964050293);
																		Projectile.NewProjectile(vector265.X, vector265.Y, spinninpoint5.X, spinninpoint5.Y, 468, 18, 0f, Main.myPlayer, 0f, 0f);
																		num1827++;
																	}
																}
															}
														}
														int num1828 = Math.Sign(player11.Center.X - center30.X);
														if (num1828 != 0)
														{
															this.direction = (this.spriteDirection = num1828);
														}
														if (Main.netMode != 1)
														{
															vec11 = Vector2.Normalize(player11.Center - center30 + player11.velocity * 20f);
															if (vec11.HasNaNs())
															{
																vec11 = new Vector2((float)this.direction, 0f);
															}
															Vector2 vector266 = base.Center + new Vector2((float)(this.direction * 30), 12f);
															float scaleFactor24 = 8f;
															float num1829 = 0.251327425f;
															int num1830 = 0;
															while ((float)num1830 < 5f)
															{
																Vector2 vector267 = vec11 * scaleFactor24;
																vector267 = vector267.RotatedBy((double)(num1829 * (float)num1830 - (1.2566371f - num1829) / 2f), default(Vector2));
																float ai4 = (Main.rand.NextFloat() - 0.5f) * 0.3f * 6.28318548f / 60f;
																int num1831 = NPC.NewNPC((int)vector266.X, (int)vector266.Y + 7, 522, 0, 0f, ai4, vector267.X, vector267.Y, 255);
																Main.npc[num1831].velocity = vector267;
																num1830++;
															}
														}
													}
													this.ai[1] += 1f;
													if (this.ai[1] >= (float)(4 + num1781 * num1782))
													{
														this.ai[0] = 0f;
														this.ai[1] = 0f;
														this.ai[3] += 1f;
														this.velocity = Vector2.Zero;
														this.netUpdate = true;
													}
												}
												else if (this.ai[0] == 8f)
												{
													this.localAI[2] = 13f;
													if (this.ai[1] >= 4f && flag173 && (int)(this.ai[1] - 4f) % num1783 == 0)
													{
														List<int> list9 = new List<int>();
														for (int num1832 = 0; num1832 < 200; num1832++)
														{
															if (Main.npc[num1832].active && Main.npc[num1832].type == 440 && Main.npc[num1832].ai[3] == (float)this.whoAmI)
															{
																list9.Add(num1832);
															}
														}
														int num1833 = list9.Count + 1;
														if (num1833 > 3)
														{
															num1833 = 3;
														}
														int num1834 = Math.Sign(player11.Center.X - center30.X);
														if (num1834 != 0)
														{
															this.direction = (this.spriteDirection = num1834);
														}
														if (Main.netMode != 1)
														{
															for (int num1835 = 0; num1835 < num1833; num1835++)
															{
																Point point11 = base.Center.ToTileCoordinates();
																Point point12 = Main.player[this.target].Center.ToTileCoordinates();
																Vector2 vector268 = Main.player[this.target].Center - base.Center;
																int num1836 = 20;
																int num1837 = 3;
																int num1838 = 7;
																int num1839 = 2;
																int num1840 = 0;
																bool flag178 = false;
																if (vector268.Length() > 2000f)
																{
																	flag178 = true;
																}
																while (!flag178 && num1840 < 100)
																{
																	num1840++;
																	int num1841 = Main.rand.Next(point12.X - num1836, point12.X + num1836 + 1);
																	int num1842 = Main.rand.Next(point12.Y - num1836, point12.Y + num1836 + 1);
																	if ((num1842 < point12.Y - num1838 || num1842 > point12.Y + num1838 || num1841 < point12.X - num1838 || num1841 > point12.X + num1838) && (num1842 < point11.Y - num1837 || num1842 > point11.Y + num1837 || num1841 < point11.X - num1837 || num1841 > point11.X + num1837) && !Main.tile[num1841, num1842].nactive())
																	{
																		bool flag179 = true;
																		if (flag179 && Collision.SolidTiles(num1841 - num1839, num1841 + num1839, num1842 - num1839, num1842 + num1839))
																		{
																			flag179 = false;
																		}
																		if (flag179)
																		{
																			NPC.NewNPC(num1841 * 16 + 8, num1842 * 16 + 8, 523, 0, (float)this.whoAmI, 0f, 0f, 0f, 255);
																			break;
																		}
																	}
																}
															}
														}
													}
													this.ai[1] += 1f;
													if (this.ai[1] >= (float)(4 + num1783 * num1784))
													{
														this.ai[0] = 0f;
														this.ai[1] = 0f;
														this.ai[3] += 1f;
														this.velocity = Vector2.Zero;
														this.netUpdate = true;
													}
												}
												if (!flag173)
												{
													this.ai[3] = num1788;
												}
												this.dontTakeDamage = flag174;
												this.chaseable = !flag175;
												return;
											}
											if (this.aiStyle == 85)
											{
												this.noTileCollide = false;
												if (this.ai[0] == 0f)
												{
													this.TargetClosest(true);
													if (Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
													{
														this.ai[0] = 1f;
													}
													else
													{
														Vector2 value66 = Main.player[this.target].Center - base.Center;
														value66.Y -= (float)(Main.player[this.target].height / 4);
														float num1843 = value66.Length();
														if (num1843 > 800f)
														{
															this.ai[0] = 2f;
														}
														else
														{
															Vector2 center37 = base.Center;
															center37.X = Main.player[this.target].Center.X;
															Vector2 vector269 = center37 - base.Center;
															if (vector269.Length() > 8f && Collision.CanHit(base.Center, 1, 1, center37, 1, 1))
															{
																this.ai[0] = 3f;
																this.ai[1] = center37.X;
																this.ai[2] = center37.Y;
																Vector2 center38 = base.Center;
																center38.Y = Main.player[this.target].Center.Y;
																if (vector269.Length() > 8f && Collision.CanHit(base.Center, 1, 1, center38, 1, 1) && Collision.CanHit(center38, 1, 1, Main.player[this.target].position, 1, 1))
																{
																	this.ai[0] = 3f;
																	this.ai[1] = center38.X;
																	this.ai[2] = center38.Y;
																}
															}
															else
															{
																center37 = base.Center;
																center37.Y = Main.player[this.target].Center.Y;
																if ((center37 - base.Center).Length() > 8f && Collision.CanHit(base.Center, 1, 1, center37, 1, 1))
																{
																	this.ai[0] = 3f;
																	this.ai[1] = center37.X;
																	this.ai[2] = center37.Y;
																}
															}
															if (this.ai[0] == 0f)
															{
																this.localAI[0] = 0f;
																value66.Normalize();
																value66 *= 0.5f;
																this.velocity += value66;
																this.ai[0] = 4f;
																this.ai[1] = 0f;
															}
														}
													}
												}
												else if (this.ai[0] == 1f)
												{
													this.rotation += (float)this.direction * 0.3f;
													Vector2 value67 = Main.player[this.target].Center - base.Center;
													if (this.type == 421)
													{
														value67 = Main.player[this.target].Top - base.Center;
													}
													float num1844 = value67.Length();
													float num1845 = 5.5f;
													num1845 += num1844 / 100f;
													int num1846 = 50;
													value67.Normalize();
													value67 *= num1845;
													this.velocity = (this.velocity * (float)(num1846 - 1) + value67) / (float)num1846;
													if (!Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
													{
														this.ai[0] = 0f;
														this.ai[1] = 0f;
													}
													if (this.type == 421 && num1844 < 40f && Main.player[this.target].active && !Main.player[this.target].dead)
													{
														bool flag180 = true;
														for (int num1847 = 0; num1847 < 200; num1847++)
														{
															NPC nPC19 = Main.npc[num1847];
															if (nPC19.active && nPC19.type == this.type && nPC19.ai[0] == 5f && nPC19.target == this.target)
															{
																flag180 = false;
																break;
															}
														}
														if (flag180)
														{
															base.Center = Main.player[this.target].Top;
															this.velocity = Vector2.Zero;
															this.ai[0] = 5f;
															this.ai[1] = 0f;
															this.netUpdate = true;
														}
													}
												}
												else if (this.ai[0] == 2f)
												{
													this.rotation = this.velocity.X * 0.1f;
													this.noTileCollide = true;
													Vector2 value68 = Main.player[this.target].Center - base.Center;
													float num1848 = value68.Length();
													float scaleFactor25 = 3f;
													int num1849 = 3;
													value68.Normalize();
													value68 *= scaleFactor25;
													this.velocity = (this.velocity * (float)(num1849 - 1) + value68) / (float)num1849;
													if (num1848 < 600f && !Collision.SolidCollision(this.position, this.width, this.height))
													{
														this.ai[0] = 0f;
													}
												}
												else if (this.ai[0] == 3f)
												{
													this.rotation = this.velocity.X * 0.1f;
													Vector2 value69 = new Vector2(this.ai[1], this.ai[2]);
													Vector2 value70 = value69 - base.Center;
													float num1850 = value70.Length();
													float num1851 = 2f;
													float num1852 = 3f;
													value70.Normalize();
													value70 *= num1851;
													this.velocity = (this.velocity * (num1852 - 1f) + value70) / num1852;
													if (this.collideX || this.collideY)
													{
														this.ai[0] = 4f;
														this.ai[1] = 0f;
													}
													if (num1850 < num1851 || num1850 > 800f || Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
													{
														this.ai[0] = 0f;
													}
												}
												else if (this.ai[0] == 4f)
												{
													this.rotation = this.velocity.X * 0.1f;
													if (this.collideX)
													{
														this.velocity.X = this.velocity.X * -0.8f;
													}
													if (this.collideY)
													{
														this.velocity.Y = this.velocity.Y * -0.8f;
													}
													Vector2 value71;
													if (this.velocity.X == 0f && this.velocity.Y == 0f)
													{
														value71 = Main.player[this.target].Center - base.Center;
														value71.Y -= (float)(Main.player[this.target].height / 4);
														value71.Normalize();
														this.velocity = value71 * 0.1f;
													}
													float scaleFactor26 = 2f;
													float num1853 = 20f;
													value71 = this.velocity;
													value71.Normalize();
													value71 *= scaleFactor26;
													this.velocity = (this.velocity * (num1853 - 1f) + value71) / num1853;
													this.ai[1] += 1f;
													if (this.ai[1] > 180f)
													{
														this.ai[0] = 0f;
														this.ai[1] = 0f;
													}
													if (Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
													{
														this.ai[0] = 0f;
													}
													this.localAI[0] += 1f;
													if (this.localAI[0] >= 5f && !Collision.SolidCollision(this.position - new Vector2(10f, 10f), this.width + 20, this.height + 20))
													{
														this.localAI[0] = 0f;
														Vector2 center39 = base.Center;
														center39.X = Main.player[this.target].Center.X;
														if (Collision.CanHit(base.Center, 1, 1, center39, 1, 1) && Collision.CanHit(base.Center, 1, 1, center39, 1, 1) && Collision.CanHit(Main.player[this.target].Center, 1, 1, center39, 1, 1))
														{
															this.ai[0] = 3f;
															this.ai[1] = center39.X;
															this.ai[2] = center39.Y;
														}
														else
														{
															center39 = base.Center;
															center39.Y = Main.player[this.target].Center.Y;
															if (Collision.CanHit(base.Center, 1, 1, center39, 1, 1) && Collision.CanHit(Main.player[this.target].Center, 1, 1, center39, 1, 1))
															{
																this.ai[0] = 3f;
																this.ai[1] = center39.X;
																this.ai[2] = center39.Y;
															}
														}
													}
												}
												else if (this.ai[0] == 5f)
												{
													Player player12 = Main.player[this.target];
													if (!player12.active || player12.dead)
													{
														this.ai[0] = 0f;
														this.ai[1] = 0f;
														this.netUpdate = true;
													}
													else
													{
														base.Center = ((player12.gravDir == 1f) ? player12.Top : player12.Bottom) + new Vector2((float)(player12.direction * 4), 0f);
														this.gfxOffY = player12.gfxOffY;
														this.velocity = Vector2.Zero;
														player12.AddBuff(163, 59, true);
													}
												}
												if (this.type == 405)
												{
													this.rotation = 0f;
													for (int num1854 = 0; num1854 < 200; num1854++)
													{
														if (num1854 != this.whoAmI && Main.npc[num1854].active && Main.npc[num1854].type == this.type && Math.Abs(this.position.X - Main.npc[num1854].position.X) + Math.Abs(this.position.Y - Main.npc[num1854].position.Y) < (float)this.width)
														{
															if (this.position.X < Main.npc[num1854].position.X)
															{
																this.velocity.X = this.velocity.X - 0.05f;
															}
															else
															{
																this.velocity.X = this.velocity.X + 0.05f;
															}
															if (this.position.Y < Main.npc[num1854].position.Y)
															{
																this.velocity.Y = this.velocity.Y - 0.05f;
															}
															else
															{
																this.velocity.Y = this.velocity.Y + 0.05f;
															}
														}
													}
													return;
												}
												if (this.type == 421)
												{
													this.hide = (this.ai[0] == 5f);
													this.rotation = this.velocity.X * 0.1f;
													for (int num1855 = 0; num1855 < 200; num1855++)
													{
														if (num1855 != this.whoAmI && Main.npc[num1855].active && Main.npc[num1855].type == this.type && Math.Abs(this.position.X - Main.npc[num1855].position.X) + Math.Abs(this.position.Y - Main.npc[num1855].position.Y) < (float)this.width)
														{
															if (this.position.X < Main.npc[num1855].position.X)
															{
																this.velocity.X = this.velocity.X - 0.05f;
															}
															else
															{
																this.velocity.X = this.velocity.X + 0.05f;
															}
															if (this.position.Y < Main.npc[num1855].position.Y)
															{
																this.velocity.Y = this.velocity.Y - 0.05f;
															}
															else
															{
																this.velocity.Y = this.velocity.Y + 0.05f;
															}
														}
													}
													return;
												}
											}
											else if (this.aiStyle == 86)
											{
												if (this.alpha > 0)
												{
													this.alpha -= 30;
													if (this.alpha < 0)
													{
														this.alpha = 0;
													}
												}
												this.noGravity = true;
												this.noTileCollide = true;
												this.knockBackResist = 0f;
												for (int num1856 = 0; num1856 < 200; num1856++)
												{
													if (num1856 != this.whoAmI && Main.npc[num1856].active && Main.npc[num1856].type == this.type)
													{
														Vector2 value72 = Main.npc[num1856].Center - base.Center;
														if (value72.Length() < 50f)
														{
															value72.Normalize();
															if (value72.X == 0f && value72.Y == 0f)
															{
																if (num1856 > this.whoAmI)
																{
																	value72.X = 1f;
																}
																else
																{
																	value72.X = -1f;
																}
															}
															value72 *= 0.4f;
															this.velocity -= value72;
															Main.npc[num1856].velocity += value72;
														}
													}
												}
												if (this.type == 472)
												{
													float num1857 = 120f;
													if (this.localAI[0] < num1857)
													{
														if (this.localAI[0] == 0f)
														{
															Main.PlaySound(2, (int)base.Center.X, (int)base.Center.Y, 8);
															this.TargetClosest(true);
															if (this.direction > 0)
															{
																this.velocity.X = this.velocity.X + 2f;
															}
															else
															{
																this.velocity.X = this.velocity.X - 2f;
															}
															for (int num1858 = 0; num1858 < 20; num1858++)
															{
																Vector2 vector270 = base.Center;
																vector270.Y -= 18f;
																Vector2 value73 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
																value73.Normalize();
																value73 *= (float)Main.rand.Next(0, 100) * 0.1f;
																vector270 += value73;
																value73.Normalize();
																value73 *= (float)Main.rand.Next(50, 90) * 0.2f;
																int num1859 = Dust.NewDust(vector270, 1, 1, 27, 0f, 0f, 0, default(Color), 1f);
																Main.dust[num1859].velocity = -value73 * 0.3f;
																Main.dust[num1859].alpha = 100;
																if (Main.rand.Next(2) == 0)
																{
																	Main.dust[num1859].noGravity = true;
																	Main.dust[num1859].scale += 0.3f;
																}
															}
														}
														this.localAI[0] += 1f;
														float num1860 = 1f - this.localAI[0] / num1857;
														float num1861 = num1860 * 20f;
														int num1862 = 0;
														while ((float)num1862 < num1861)
														{
															if (Main.rand.Next(5) == 0)
															{
																int num1863 = Dust.NewDust(this.position, this.width, this.height, 27, 0f, 0f, 0, default(Color), 1f);
																Main.dust[num1863].alpha = 100;
																Main.dust[num1863].velocity *= 0.3f;
																Main.dust[num1863].velocity += this.velocity * 0.75f;
																Main.dust[num1863].noGravity = true;
															}
															num1862++;
														}
													}
												}
												if (this.type == 521)
												{
													float num1864 = 120f;
													if (this.localAI[0] < num1864)
													{
														if (this.localAI[0] == 0f)
														{
															Main.PlaySound(2, (int)base.Center.X, (int)base.Center.Y, 8);
															this.TargetClosest(true);
															if (this.direction > 0)
															{
																this.velocity.X = this.velocity.X + 2f;
															}
															else
															{
																this.velocity.X = this.velocity.X - 2f;
															}
														}
														this.localAI[0] += 1f;
														int num1865 = 10;
														for (int num1866 = 0; num1866 < 2; num1866++)
														{
															int num1867 = Dust.NewDust(this.position - new Vector2((float)num1865), this.width + num1865 * 2, this.height + num1865 * 2, 228, 0f, 0f, 100, default(Color), 2f);
															Main.dust[num1867].noGravity = true;
															Main.dust[num1867].noLight = true;
														}
													}
												}
												if (this.ai[0] == 0f)
												{
													this.TargetClosest(true);
													this.ai[0] = 1f;
													this.ai[1] = (float)this.direction;
												}
												else if (this.ai[0] == 1f)
												{
													this.TargetClosest(true);
													float num1868 = 0.3f;
													float num1869 = 7f;
													float num1870 = 4f;
													float num1871 = 660f;
													float num1872 = 4f;
													if (this.type == 521)
													{
														num1868 = 0.7f;
														num1869 = 14f;
														num1871 = 500f;
														num1870 = 6f;
														num1872 = 3f;
													}
													this.velocity.X = this.velocity.X + this.ai[1] * num1868;
													if (this.velocity.X > num1869)
													{
														this.velocity.X = num1869;
													}
													if (this.velocity.X < -num1869)
													{
														this.velocity.X = -num1869;
													}
													float num1873 = Main.player[this.target].Center.Y - base.Center.Y;
													if (Math.Abs(num1873) > num1870)
													{
														num1872 = 15f;
													}
													if (num1873 > num1870)
													{
														num1873 = num1870;
													}
													else if (num1873 < -num1870)
													{
														num1873 = -num1870;
													}
													this.velocity.Y = (this.velocity.Y * (num1872 - 1f) + num1873) / num1872;
													if ((this.ai[1] > 0f && Main.player[this.target].Center.X - base.Center.X < -num1871) || (this.ai[1] < 0f && Main.player[this.target].Center.X - base.Center.X > num1871))
													{
														this.ai[0] = 2f;
														this.ai[1] = 0f;
														if (base.Center.Y + 20f > Main.player[this.target].Center.Y)
														{
															this.ai[1] = -1f;
														}
														else
														{
															this.ai[1] = 1f;
														}
													}
												}
												else if (this.ai[0] == 2f)
												{
													float num1874 = 0.4f;
													float scaleFactor27 = 0.95f;
													float num1875 = 5f;
													if (this.type == 521)
													{
														num1874 = 0.3f;
														num1875 = 7f;
														scaleFactor27 = 0.9f;
													}
													this.velocity.Y = this.velocity.Y + this.ai[1] * num1874;
													if (this.velocity.Length() > num1875)
													{
														this.velocity *= scaleFactor27;
													}
													if (this.velocity.X > -1f && this.velocity.X < 1f)
													{
														this.TargetClosest(true);
														this.ai[0] = 3f;
														this.ai[1] = (float)this.direction;
													}
												}
												else if (this.ai[0] == 3f)
												{
													float num1876 = 0.4f;
													float num1877 = 0.2f;
													float num1878 = 5f;
													float scaleFactor28 = 0.95f;
													if (this.type == 521)
													{
														num1876 = 0.6f;
														num1877 = 0.3f;
														num1878 = 7f;
														scaleFactor28 = 0.9f;
													}
													this.velocity.X = this.velocity.X + this.ai[1] * num1876;
													if (base.Center.Y > Main.player[this.target].Center.Y)
													{
														this.velocity.Y = this.velocity.Y - num1877;
													}
													else
													{
														this.velocity.Y = this.velocity.Y + num1877;
													}
													if (this.velocity.Length() > num1878)
													{
														this.velocity *= scaleFactor28;
													}
													if (this.velocity.Y > -1f && this.velocity.Y < 1f)
													{
														this.TargetClosest(true);
														this.ai[0] = 0f;
														this.ai[1] = (float)this.direction;
													}
												}
												if (this.type == 521)
												{
													int num1879 = 10;
													for (int num1880 = 0; num1880 < 1; num1880++)
													{
														int num1881 = Dust.NewDust(this.position - new Vector2((float)num1879), this.width + num1879 * 2, this.height + num1879 * 2, 228, 0f, 0f, 100, default(Color), 2f);
														Main.dust[num1881].noGravity = true;
														Main.dust[num1881].noLight = true;
													}
													return;
												}
											}
											else if (this.aiStyle == 87)
											{
												this.knockBackResist = 0.2f * Main.knockBackMultiplier;
												this.dontTakeDamage = false;
												this.noTileCollide = false;
												this.noGravity = false;
												this.reflectingProjectiles = false;
												if (this.ai[0] != 7f && Main.player[this.target].dead)
												{
													this.TargetClosest(true);
													if (Main.player[this.target].dead)
													{
														this.ai[0] = 7f;
														this.ai[1] = 0f;
														this.ai[2] = 0f;
														this.ai[3] = 0f;
													}
												}
												if (this.ai[0] == 0f)
												{
													this.TargetClosest(true);
													Vector2 vector271 = Main.player[this.target].Center - base.Center;
													if (this.velocity.X != 0f || this.velocity.Y > 100f || this.justHit || vector271.Length() < 80f)
													{
														this.ai[0] = 1f;
														this.ai[1] = 0f;
														return;
													}
												}
												else if (this.ai[0] == 1f)
												{
													this.ai[1] += 1f;
													if (this.ai[1] > 36f)
													{
														this.ai[0] = 2f;
														this.ai[1] = 0f;
														return;
													}
												}
												else if (this.ai[0] == 2f)
												{
													if ((Main.player[this.target].Center - base.Center).Length() > 600f)
													{
														this.ai[0] = 5f;
														this.ai[1] = 0f;
														this.ai[2] = 0f;
														this.ai[3] = 0f;
													}
													if (this.velocity.Y == 0f)
													{
														this.TargetClosest(true);
														this.velocity.X = this.velocity.X * 0.85f;
														this.ai[1] += 1f;
														float num1882 = 15f + 30f * ((float)this.life / (float)this.lifeMax);
														float num1883 = 3f + 4f * (1f - (float)this.life / (float)this.lifeMax);
														float num1884 = 4f;
														if (!Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
														{
															num1884 += 2f;
														}
														if (this.ai[1] > num1882)
														{
															this.ai[3] += 1f;
															if (this.ai[3] >= 3f)
															{
																this.ai[3] = 0f;
																num1884 *= 2f;
																num1883 /= 2f;
															}
															this.ai[1] = 0f;
															this.velocity.Y = this.velocity.Y - num1884;
															this.velocity.X = num1883 * (float)this.direction;
														}
													}
													else
													{
														this.knockBackResist = 0f;
														this.velocity.X = this.velocity.X * 0.99f;
														if (this.direction < 0 && this.velocity.X > -1f)
														{
															this.velocity.X = -1f;
														}
														if (this.direction > 0 && this.velocity.X < 1f)
														{
															this.velocity.X = 1f;
														}
													}
													this.ai[2] += 1f;
													if ((double)this.ai[2] > 210.0 && this.velocity.Y == 0f && Main.netMode != 1)
													{
														int num1885 = Main.rand.Next(3);
														if (num1885 == 0)
														{
															this.ai[0] = 3f;
														}
														else if (num1885 == 1)
														{
															this.ai[0] = 4f;
															this.noTileCollide = true;
															this.velocity.Y = -8f;
														}
														else if (num1885 == 2)
														{
															this.ai[0] = 6f;
														}
														else
														{
															this.ai[0] = 2f;
														}
														this.ai[1] = 0f;
														this.ai[2] = 0f;
														this.ai[3] = 0f;
														return;
													}
												}
												else if (this.ai[0] == 3f)
												{
													this.velocity.X = this.velocity.X * 0.85f;
													this.dontTakeDamage = true;
													this.ai[1] += 1f;
													if (this.ai[1] >= 180f)
													{
														this.ai[0] = 2f;
														this.ai[1] = 0f;
													}
													if (Main.expertMode)
													{
														this.ReflectProjectiles(base.Hitbox);
														this.reflectingProjectiles = true;
														return;
													}
												}
												else if (this.ai[0] == 4f)
												{
													this.noTileCollide = true;
													this.noGravity = true;
													this.knockBackResist = 0f;
													if (this.velocity.X < 0f)
													{
														this.direction = -1;
													}
													else
													{
														this.direction = 1;
													}
													this.spriteDirection = this.direction;
													this.TargetClosest(true);
													Vector2 center40 = Main.player[this.target].Center;
													center40.Y -= 350f;
													Vector2 vector272 = center40 - base.Center;
													if (this.ai[2] == 1f)
													{
														this.ai[1] += 1f;
														vector272 = Main.player[this.target].Center - base.Center;
														vector272.Normalize();
														vector272 *= 8f;
														this.velocity = (this.velocity * 4f + vector272) / 5f;
														if (this.ai[1] > 6f)
														{
															this.ai[1] = 0f;
															this.ai[0] = 4.1f;
															this.ai[2] = 0f;
															this.velocity = vector272;
															return;
														}
													}
													else
													{
														if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) < 40f && base.Center.Y < Main.player[this.target].Center.Y - 300f)
														{
															this.ai[1] = 0f;
															this.ai[2] = 1f;
															return;
														}
														vector272.Normalize();
														vector272 *= 12f;
														this.velocity = (this.velocity * 5f + vector272) / 6f;
														return;
													}
												}
												else if (this.ai[0] == 4.1f)
												{
													this.knockBackResist = 0f;
													if (this.ai[2] == 0f && Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1) && !Collision.SolidCollision(this.position, this.width, this.height))
													{
														this.ai[2] = 1f;
													}
													if (this.position.Y + (float)this.height >= Main.player[this.target].position.Y || this.velocity.Y <= 0f)
													{
														this.ai[1] += 1f;
														if (this.ai[1] > 10f)
														{
															this.ai[0] = 2f;
															this.ai[1] = 0f;
															this.ai[2] = 0f;
															this.ai[3] = 0f;
															if (Collision.SolidCollision(this.position, this.width, this.height))
															{
																this.ai[0] = 5f;
															}
														}
													}
													else if (this.ai[2] == 0f)
													{
														this.noTileCollide = true;
														this.noGravity = true;
														this.knockBackResist = 0f;
													}
													this.velocity.Y = this.velocity.Y + 0.2f;
													if (this.velocity.Y > 16f)
													{
														this.velocity.Y = 16f;
														return;
													}
												}
												else
												{
													if (this.ai[0] == 5f)
													{
														if (this.velocity.X > 0f)
														{
															this.direction = 1;
														}
														else
														{
															this.direction = -1;
														}
														this.spriteDirection = this.direction;
														this.noTileCollide = true;
														this.noGravity = true;
														this.knockBackResist = 0f;
														Vector2 value74 = Main.player[this.target].Center - base.Center;
														value74.Y -= 4f;
														if (value74.Length() < 200f && !Collision.SolidCollision(this.position, this.width, this.height))
														{
															this.ai[0] = 2f;
															this.ai[1] = 0f;
															this.ai[2] = 0f;
															this.ai[3] = 0f;
														}
														if (value74.Length() > 10f)
														{
															value74.Normalize();
															value74 *= 10f;
														}
														this.velocity = (this.velocity * 4f + value74) / 5f;
														return;
													}
													if (this.ai[0] == 6f)
													{
														this.knockBackResist = 0f;
														if (this.velocity.Y == 0f)
														{
															this.TargetClosest(true);
															this.velocity.X = this.velocity.X * 0.8f;
															this.ai[1] += 1f;
															if (this.ai[1] > 5f)
															{
																this.ai[1] = 0f;
																this.velocity.Y = this.velocity.Y - 4f;
																if (Main.player[this.target].position.Y + (float)Main.player[this.target].height < base.Center.Y)
																{
																	this.velocity.Y = this.velocity.Y - 1.25f;
																}
																if (Main.player[this.target].position.Y + (float)Main.player[this.target].height < base.Center.Y - 40f)
																{
																	this.velocity.Y = this.velocity.Y - 1.5f;
																}
																if (Main.player[this.target].position.Y + (float)Main.player[this.target].height < base.Center.Y - 80f)
																{
																	this.velocity.Y = this.velocity.Y - 1.75f;
																}
																if (Main.player[this.target].position.Y + (float)Main.player[this.target].height < base.Center.Y - 120f)
																{
																	this.velocity.Y = this.velocity.Y - 2f;
																}
																if (Main.player[this.target].position.Y + (float)Main.player[this.target].height < base.Center.Y - 160f)
																{
																	this.velocity.Y = this.velocity.Y - 2.25f;
																}
																if (Main.player[this.target].position.Y + (float)Main.player[this.target].height < base.Center.Y - 200f)
																{
																	this.velocity.Y = this.velocity.Y - 2.5f;
																}
																if (!Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
																{
																	this.velocity.Y = this.velocity.Y - 2f;
																}
																this.velocity.X = (float)(12 * this.direction);
																this.ai[2] += 1f;
															}
														}
														else
														{
															this.velocity.X = this.velocity.X * 0.98f;
															if (this.direction < 0 && this.velocity.X > -8f)
															{
																this.velocity.X = -8f;
															}
															if (this.direction > 0 && this.velocity.X < 8f)
															{
																this.velocity.X = 8f;
															}
														}
														if (this.ai[2] >= 3f && this.velocity.Y == 0f)
														{
															this.ai[0] = 2f;
															this.ai[1] = 0f;
															this.ai[2] = 0f;
															this.ai[3] = 0f;
															return;
														}
													}
													else if (this.ai[0] == 7f)
													{
														this.damage = 0;
														this.life = this.lifeMax;
														this.defense = 9999;
														this.noTileCollide = true;
														this.alpha += 7;
														if (this.alpha > 255)
														{
															this.alpha = 255;
														}
														this.velocity.X = this.velocity.X * 0.98f;
														return;
													}
												}
											}
											else if (this.aiStyle == 88)
											{
												int num1886 = 7;
												this.noTileCollide = false;
												this.noGravity = true;
												this.knockBackResist = 0.2f * Main.expertKnockBack;
												this.damage = this.defDamage;
												if (!Main.eclipse)
												{
													this.ai[0] = -1f;
												}
												else if (this.target < 0 || Main.player[this.target].dead || !Main.player[this.target].active)
												{
													this.TargetClosest(true);
													Vector2 vector273 = Main.player[this.target].Center - base.Center;
													if (Main.player[this.target].dead || vector273.Length() > 3000f)
													{
														this.ai[0] = -1f;
													}
												}
												else
												{
													Vector2 vector274 = Main.player[this.target].Center - base.Center;
													if (this.ai[0] > 1f && vector274.Length() > 1000f)
													{
														this.ai[0] = 1f;
													}
												}
												if (this.ai[0] == -1f)
												{
													Vector2 value75 = new Vector2(0f, -8f);
													this.velocity = (this.velocity * 9f + value75) / 10f;
													this.noTileCollide = true;
													this.dontTakeDamage = true;
													return;
												}
												if (this.ai[0] == 0f)
												{
													this.TargetClosest(true);
													if (base.Center.X < Main.player[this.target].Center.X - 2f)
													{
														this.direction = 1;
													}
													if (base.Center.X > Main.player[this.target].Center.X + 2f)
													{
														this.direction = -1;
													}
													this.spriteDirection = this.direction;
													this.rotation = (this.rotation * 9f + this.velocity.X * 0.1f) / 10f;
													if (this.collideX)
													{
														this.velocity.X = this.velocity.X * (-this.oldVelocity.X * 0.5f);
														if (this.velocity.X > 4f)
														{
															this.velocity.X = 4f;
														}
														if (this.velocity.X < -4f)
														{
															this.velocity.X = -4f;
														}
													}
													if (this.collideY)
													{
														this.velocity.Y = this.velocity.Y * (-this.oldVelocity.Y * 0.5f);
														if (this.velocity.Y > 4f)
														{
															this.velocity.Y = 4f;
														}
														if (this.velocity.Y < -4f)
														{
															this.velocity.Y = -4f;
														}
													}
													Vector2 value76 = Main.player[this.target].Center - base.Center;
													value76.Y -= 200f;
													if (value76.Length() > 800f)
													{
														this.ai[0] = 1f;
														this.ai[1] = 0f;
														this.ai[2] = 0f;
														this.ai[3] = 0f;
													}
													else if (value76.Length() > 80f)
													{
														float scaleFactor29 = 6f;
														float num1887 = 30f;
														value76.Normalize();
														value76 *= scaleFactor29;
														this.velocity = (this.velocity * (num1887 - 1f) + value76) / num1887;
													}
													else if (this.velocity.Length() > 2f)
													{
														this.velocity *= 0.95f;
													}
													else if (this.velocity.Length() < 1f)
													{
														this.velocity *= 1.05f;
													}
													this.ai[1] += 1f;
													if (this.justHit)
													{
														this.ai[1] += (float)Main.rand.Next(10, 30);
													}
													if (this.ai[1] >= 180f && Main.netMode != 1)
													{
														this.ai[1] = 0f;
														this.ai[2] = 0f;
														this.ai[3] = 0f;
														this.netUpdate = true;
														while (this.ai[0] == 0f)
														{
															int num1888 = Main.rand.Next(3);
															if (num1888 == 0 && Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
															{
																this.ai[0] = 2f;
															}
															else if (num1888 == 1)
															{
																this.ai[0] = 3f;
															}
															else if (num1888 == 2 && NPC.CountNPCS(478) + NPC.CountNPCS(479) < num1886)
															{
																this.ai[0] = 4f;
															}
														}
														return;
													}
												}
												else
												{
													if (this.ai[0] == 1f)
													{
														this.collideX = false;
														this.collideY = false;
														this.noTileCollide = true;
														this.knockBackResist = 0f;
														if (this.target < 0 || !Main.player[this.target].active || Main.player[this.target].dead)
														{
															this.TargetClosest(true);
														}
														if (this.velocity.X < 0f)
														{
															this.direction = -1;
														}
														else if (this.velocity.X > 0f)
														{
															this.direction = 1;
														}
														this.spriteDirection = this.direction;
														this.rotation = (this.rotation * 9f + this.velocity.X * 0.08f) / 10f;
														Vector2 value77 = Main.player[this.target].Center - base.Center;
														if (value77.Length() < 300f && !Collision.SolidCollision(this.position, this.width, this.height))
														{
															this.ai[0] = 0f;
															this.ai[1] = 0f;
															this.ai[2] = 0f;
															this.ai[3] = 0f;
														}
														float scaleFactor30 = 7f + value77.Length() / 100f;
														float num1889 = 25f;
														value77.Normalize();
														value77 *= scaleFactor30;
														this.velocity = (this.velocity * (num1889 - 1f) + value77) / num1889;
														return;
													}
													if (this.ai[0] == 2f)
													{
														this.damage = (int)((double)this.defDamage * 0.5);
														this.knockBackResist = 0f;
														if (this.target < 0 || !Main.player[this.target].active || Main.player[this.target].dead)
														{
															this.TargetClosest(true);
															this.ai[0] = 0f;
															this.ai[1] = 0f;
															this.ai[2] = 0f;
															this.ai[3] = 0f;
														}
														if (Main.player[this.target].Center.X - 10f < base.Center.X)
														{
															this.direction = -1;
														}
														else if (Main.player[this.target].Center.X + 10f > base.Center.X)
														{
															this.direction = 1;
														}
														this.spriteDirection = this.direction;
														this.rotation = (this.rotation * 4f + this.velocity.X * 0.1f) / 5f;
														if (this.collideX)
														{
															this.velocity.X = this.velocity.X * (-this.oldVelocity.X * 0.5f);
															if (this.velocity.X > 4f)
															{
																this.velocity.X = 4f;
															}
															if (this.velocity.X < -4f)
															{
																this.velocity.X = -4f;
															}
														}
														if (this.collideY)
														{
															this.velocity.Y = this.velocity.Y * (-this.oldVelocity.Y * 0.5f);
															if (this.velocity.Y > 4f)
															{
																this.velocity.Y = 4f;
															}
															if (this.velocity.Y < -4f)
															{
																this.velocity.Y = -4f;
															}
														}
														Vector2 value78 = Main.player[this.target].Center - base.Center;
														value78.Y -= 20f;
														this.ai[2] += 0.0222222228f;
														if (Main.expertMode)
														{
															this.ai[2] += 0.0166666675f;
														}
														float scaleFactor31 = 4f + this.ai[2] + value78.Length() / 120f;
														float num1890 = 20f;
														value78.Normalize();
														value78 *= scaleFactor31;
														this.velocity = (this.velocity * (num1890 - 1f) + value78) / num1890;
														this.ai[1] += 1f;
														if (this.ai[1] > 240f || !Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
														{
															this.ai[0] = 0f;
															this.ai[1] = 0f;
															this.ai[2] = 0f;
															this.ai[3] = 0f;
															return;
														}
													}
													else
													{
														if (this.ai[0] == 3f)
														{
															this.knockBackResist = 0f;
															this.noTileCollide = true;
															if (this.velocity.X < 0f)
															{
																this.direction = -1;
															}
															else
															{
																this.direction = 1;
															}
															this.spriteDirection = this.direction;
															this.rotation = (this.rotation * 4f + this.velocity.X * 0.07f) / 5f;
															Vector2 value79 = Main.player[this.target].Center - base.Center;
															value79.Y -= 12f;
															if (base.Center.X > Main.player[this.target].Center.X)
															{
																value79.X += 400f;
															}
															else
															{
																value79.X -= 400f;
															}
															if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) > 350f && Math.Abs(base.Center.Y - Main.player[this.target].Center.Y) < 20f)
															{
																this.ai[0] = 3.1f;
																this.ai[1] = 0f;
															}
															this.ai[1] += 0.0333333351f;
															float scaleFactor32 = 8f + this.ai[1];
															float num1891 = 4f;
															value79.Normalize();
															value79 *= scaleFactor32;
															this.velocity = (this.velocity * (num1891 - 1f) + value79) / num1891;
															return;
														}
														if (this.ai[0] == 3.1f)
														{
															this.knockBackResist = 0f;
															this.noTileCollide = true;
															this.rotation = (this.rotation * 4f + this.velocity.X * 0.07f) / 5f;
															Vector2 vector275 = Main.player[this.target].Center - base.Center;
															vector275.Y -= 12f;
															float scaleFactor33 = 16f;
															float num1892 = 8f;
															vector275.Normalize();
															vector275 *= scaleFactor33;
															this.velocity = (this.velocity * (num1892 - 1f) + vector275) / num1892;
															if (this.velocity.X < 0f)
															{
																this.direction = -1;
															}
															else
															{
																this.direction = 1;
															}
															this.spriteDirection = this.direction;
															this.ai[1] += 1f;
															if (this.ai[1] > 10f)
															{
																this.velocity = vector275;
																if (this.velocity.X < 0f)
																{
																	this.direction = -1;
																}
																else
																{
																	this.direction = 1;
																}
																this.ai[0] = 3.2f;
																this.ai[1] = 0f;
																this.ai[1] = (float)this.direction;
																return;
															}
														}
														else
														{
															if (this.ai[0] == 3.2f)
															{
																this.damage = (int)((double)this.defDamage * 1.3);
																this.collideX = false;
																this.collideY = false;
																this.knockBackResist = 0f;
																this.noTileCollide = true;
																this.ai[2] += 0.0333333351f;
																this.velocity.X = (16f + this.ai[2]) * this.ai[1];
																if ((this.ai[1] > 0f && base.Center.X > Main.player[this.target].Center.X + 260f) || (this.ai[1] < 0f && base.Center.X < Main.player[this.target].Center.X - 260f))
																{
																	if (!Collision.SolidCollision(this.position, this.width, this.height))
																	{
																		this.ai[0] = 0f;
																		this.ai[1] = 0f;
																		this.ai[2] = 0f;
																		this.ai[3] = 0f;
																	}
																	else if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) > 800f)
																	{
																		this.ai[0] = 1f;
																		this.ai[1] = 0f;
																		this.ai[2] = 0f;
																		this.ai[3] = 0f;
																	}
																}
																this.rotation = (this.rotation * 4f + this.velocity.X * 0.07f) / 5f;
																return;
															}
															if (this.ai[0] == 4f)
															{
																this.ai[0] = 0f;
																this.TargetClosest(true);
																if (Main.netMode != 1)
																{
																	this.ai[1] = -1f;
																	this.ai[2] = -1f;
																	for (int num1893 = 0; num1893 < 1000; num1893++)
																	{
																		int num1894 = (int)Main.player[this.target].Center.X / 16;
																		int num1895 = (int)Main.player[this.target].Center.Y / 16;
																		int num1896 = 30 + num1893 / 50;
																		int num1897 = 20 + num1893 / 75;
																		num1894 += Main.rand.Next(-num1896, num1896 + 1);
																		num1895 += Main.rand.Next(-num1897, num1897 + 1);
																		if (!WorldGen.SolidTile(num1894, num1895))
																		{
																			while (!WorldGen.SolidTile(num1894, num1895) && (double)num1895 < Main.worldSurface)
																			{
																				num1895++;
																			}
																			if ((new Vector2((float)(num1894 * 16 + 8), (float)(num1895 * 16 + 8)) - Main.player[this.target].Center).Length() < 600f)
																			{
																				this.ai[0] = 4.1f;
																				this.ai[1] = (float)num1894;
																				this.ai[2] = (float)num1895;
																				break;
																			}
																		}
																	}
																}
																this.netUpdate = true;
																return;
															}
															if (this.ai[0] == 4.1f)
															{
																if (this.velocity.X < -2f)
																{
																	this.direction = -1;
																}
																else if (this.velocity.X > 2f)
																{
																	this.direction = 1;
																}
																this.spriteDirection = this.direction;
																this.rotation = (this.rotation * 9f + this.velocity.X * 0.1f) / 10f;
																this.noTileCollide = true;
																int num1898 = (int)this.ai[1];
																int num1899 = (int)this.ai[2];
																float x3 = (float)(num1898 * 16 + 8);
																float y2 = (float)(num1899 * 16 - 20);
																Vector2 vector276 = new Vector2(x3, y2);
																vector276 -= base.Center;
																float num1900 = 6f + vector276.Length() / 150f;
																if (num1900 > 10f)
																{
																	num1900 = 10f;
																}
																float num1901 = 10f;
																if (vector276.Length() < 10f)
																{
																	this.ai[0] = 4.2f;
																}
																vector276.Normalize();
																vector276 *= num1900;
																this.velocity = (this.velocity * (num1901 - 1f) + vector276) / num1901;
																return;
															}
															if (this.ai[0] == 4.2f)
															{
																this.rotation = (this.rotation * 9f + this.velocity.X * 0.1f) / 10f;
																this.knockBackResist = 0f;
																this.noTileCollide = true;
																int num1902 = (int)this.ai[1];
																int num1903 = (int)this.ai[2];
																float x4 = (float)(num1902 * 16 + 8);
																float y3 = (float)(num1903 * 16 - 20);
																Vector2 vector277 = new Vector2(x4, y3);
																vector277 -= base.Center;
																float num1904 = 4f;
																float num1905 = 2f;
																if (Main.netMode != 1 && vector277.Length() < 4f)
																{
																	int num1906 = 70;
																	if (Main.expertMode)
																	{
																		num1906 = (int)((double)num1906 * 0.75);
																	}
																	this.ai[3] += 1f;
																	if (this.ai[3] == (float)num1906)
																	{
																		NPC.NewNPC(num1902 * 16 + 8, num1903 * 16, 478, this.whoAmI, 0f, 0f, 0f, 0f, 255);
																	}
																	else if (this.ai[3] == (float)(num1906 * 2))
																	{
																		this.ai[0] = 0f;
																		this.ai[1] = 0f;
																		this.ai[2] = 0f;
																		this.ai[3] = 0f;
																		if (NPC.CountNPCS(478) + NPC.CountNPCS(479) < num1886 && Main.rand.Next(3) != 0)
																		{
																			this.ai[0] = 4f;
																		}
																		else if (Collision.SolidCollision(this.position, this.width, this.height))
																		{
																			this.ai[0] = 1f;
																		}
																	}
																}
																if (vector277.Length() > num1904)
																{
																	vector277.Normalize();
																	vector277 *= num1904;
																}
																this.velocity = (this.velocity * (num1905 - 1f) + vector277) / num1905;
																return;
															}
														}
													}
												}
											}
											else if (this.aiStyle == 89)
											{
												if (this.velocity.Y == 0f)
												{
													this.velocity.X = this.velocity.X * 0.9f;
													this.rotation += this.velocity.X * 0.02f;
												}
												else
												{
													this.velocity.X = this.velocity.X * 0.99f;
													this.rotation += this.velocity.X * 0.04f;
												}
												int num1907 = 900;
												if (Main.expertMode)
												{
													num1907 = 600;
												}
												if (this.justHit)
												{
													this.ai[0] -= (float)Main.rand.Next(10, 21);
													if (!Main.expertMode)
													{
														this.ai[0] -= (float)Main.rand.Next(10, 21);
													}
												}
												this.ai[0] += 1f;
												if (this.ai[0] >= (float)num1907)
												{
													this.Transform(479);
												}
												if (Main.netMode != 1 && this.velocity.Y == 0f && (double)Math.Abs(this.velocity.X) < 0.2 && (double)this.ai[0] >= (double)num1907 * 0.75)
												{
													float num1908 = this.ai[0] - (float)num1907 * 0.75f;
													num1908 /= (float)num1907 * 0.25f;
													if ((float)Main.rand.Next(-10, 120) < num1908 * 100f)
													{
														this.velocity.Y = this.velocity.Y - (float)Main.rand.Next(20, 40) * 0.025f;
														this.velocity.X = this.velocity.X + (float)Main.rand.Next(-20, 20) * 0.025f;
														this.velocity *= 1f + num1908 * 2f;
														this.netUpdate = true;
														return;
													}
												}
											}
											else if (this.aiStyle == 90)
											{
												this.noTileCollide = false;
												this.knockBackResist = 0.4f * Main.knockBackMultiplier;
												this.noGravity = true;
												this.rotation = (this.rotation * 9f + this.velocity.X * 0.1f) / 10f;
												if (!Main.eclipse)
												{
													if (this.timeLeft > 5)
													{
														this.timeLeft = 5;
													}
													this.velocity.Y = this.velocity.Y - 0.2f;
													if (this.velocity.Y < -8f)
													{
														this.velocity.Y = -8f;
													}
													this.noTileCollide = true;
													return;
												}
												if (this.ai[0] == 0f || this.ai[0] == 1f)
												{
													for (int num1909 = 0; num1909 < 200; num1909++)
													{
														if (num1909 != this.whoAmI && Main.npc[num1909].active && Main.npc[num1909].type == this.type)
														{
															Vector2 value80 = Main.npc[num1909].Center - base.Center;
															if (value80.Length() < (float)(this.width + this.height))
															{
																value80.Normalize();
																value80 *= -0.1f;
																this.velocity += value80;
																Main.npc[num1909].velocity -= value80;
															}
														}
													}
												}
												if (this.target < 0 || Main.player[this.target].dead || !Main.player[this.target].active)
												{
													this.TargetClosest(true);
													Vector2 vector278 = Main.player[this.target].Center - base.Center;
													if (Main.player[this.target].dead || vector278.Length() > 3000f)
													{
														this.ai[0] = -1f;
													}
												}
												else
												{
													Vector2 vector279 = Main.player[this.target].Center - base.Center;
													if (this.ai[0] > 1f && vector279.Length() > 1000f)
													{
														this.ai[0] = 1f;
													}
												}
												if (this.ai[0] == -1f)
												{
													Vector2 value81 = new Vector2(0f, -8f);
													this.velocity = (this.velocity * 9f + value81) / 10f;
													this.noTileCollide = true;
													this.dontTakeDamage = true;
													return;
												}
												if (this.ai[0] == 0f)
												{
													this.TargetClosest(true);
													this.spriteDirection = this.direction;
													if (this.collideX)
													{
														this.velocity.X = this.velocity.X * (-this.oldVelocity.X * 0.5f);
														if (this.velocity.X > 4f)
														{
															this.velocity.X = 4f;
														}
														if (this.velocity.X < -4f)
														{
															this.velocity.X = -4f;
														}
													}
													if (this.collideY)
													{
														this.velocity.Y = this.velocity.Y * (-this.oldVelocity.Y * 0.5f);
														if (this.velocity.Y > 4f)
														{
															this.velocity.Y = 4f;
														}
														if (this.velocity.Y < -4f)
														{
															this.velocity.Y = -4f;
														}
													}
													Vector2 value82 = Main.player[this.target].Center - base.Center;
													if (value82.Length() > 800f)
													{
														this.ai[0] = 1f;
														this.ai[1] = 0f;
														this.ai[2] = 0f;
														this.ai[3] = 0f;
													}
													else if (value82.Length() > 200f)
													{
														float scaleFactor34 = 5.5f + value82.Length() / 100f + this.ai[1] / 15f;
														float num1910 = 40f;
														value82.Normalize();
														value82 *= scaleFactor34;
														this.velocity = (this.velocity * (num1910 - 1f) + value82) / num1910;
													}
													else if (this.velocity.Length() > 2f)
													{
														this.velocity *= 0.95f;
													}
													else if (this.velocity.Length() < 1f)
													{
														this.velocity *= 1.05f;
													}
													this.ai[1] += 1f;
													if (this.ai[1] >= 90f)
													{
														this.ai[1] = 0f;
														this.ai[0] = 2f;
														return;
													}
												}
												else
												{
													if (this.ai[0] == 1f)
													{
														this.collideX = false;
														this.collideY = false;
														this.noTileCollide = true;
														this.knockBackResist = 0f;
														if (this.target < 0 || !Main.player[this.target].active || Main.player[this.target].dead)
														{
															this.TargetClosest(true);
														}
														if (this.velocity.X < 0f)
														{
															this.direction = -1;
														}
														else if (this.velocity.X > 0f)
														{
															this.direction = 1;
														}
														this.spriteDirection = this.direction;
														this.rotation = (this.rotation * 9f + this.velocity.X * 0.08f) / 10f;
														Vector2 value83 = Main.player[this.target].Center - base.Center;
														if (value83.Length() < 300f && !Collision.SolidCollision(this.position, this.width, this.height))
														{
															this.ai[0] = 0f;
															this.ai[1] = 0f;
															this.ai[2] = 0f;
															this.ai[3] = 0f;
														}
														this.ai[2] += 0.0166666675f;
														float scaleFactor35 = 5.5f + this.ai[2] + value83.Length() / 150f;
														float num1911 = 35f;
														value83.Normalize();
														value83 *= scaleFactor35;
														this.velocity = (this.velocity * (num1911 - 1f) + value83) / num1911;
														return;
													}
													if (this.ai[0] == 2f)
													{
														if (this.velocity.X < 0f)
														{
															this.direction = -1;
														}
														else if (this.velocity.X > 0f)
														{
															this.direction = 1;
														}
														this.spriteDirection = this.direction;
														this.rotation = (this.rotation * 7f + this.velocity.X * 0.1f) / 8f;
														this.knockBackResist = 0f;
														this.noTileCollide = true;
														Vector2 vector280 = Main.player[this.target].Center - base.Center;
														vector280.Y -= 8f;
														float scaleFactor36 = 9f;
														float num1912 = 8f;
														vector280.Normalize();
														vector280 *= scaleFactor36;
														this.velocity = (this.velocity * (num1912 - 1f) + vector280) / num1912;
														if (this.velocity.X < 0f)
														{
															this.direction = -1;
														}
														else
														{
															this.direction = 1;
														}
														this.spriteDirection = this.direction;
														this.ai[1] += 1f;
														if (this.ai[1] > 10f)
														{
															this.velocity = vector280;
															if (this.velocity.X < 0f)
															{
																this.direction = -1;
															}
															else
															{
																this.direction = 1;
															}
															this.ai[0] = 2.1f;
															this.ai[1] = 0f;
															return;
														}
													}
													else if (this.ai[0] == 2.1f)
													{
														if (this.velocity.X < 0f)
														{
															this.direction = -1;
														}
														else if (this.velocity.X > 0f)
														{
															this.direction = 1;
														}
														this.spriteDirection = this.direction;
														this.velocity *= 1.01f;
														this.knockBackResist = 0f;
														this.noTileCollide = true;
														this.ai[1] += 1f;
														int num1913 = 45;
														if (this.ai[1] > (float)num1913)
														{
															if (!Collision.SolidCollision(this.position, this.width, this.height))
															{
																this.ai[0] = 0f;
																this.ai[1] = 0f;
																this.ai[2] = 0f;
																return;
															}
															if (this.ai[1] > (float)(num1913 * 2))
															{
																this.ai[0] = 1f;
																this.ai[1] = 0f;
																this.ai[2] = 0f;
																return;
															}
														}
													}
												}
											}
											else if (this.aiStyle == 91)
											{
												this.noGravity = true;
												this.noTileCollide = false;
												this.dontTakeDamage = false;
												if (this.justHit && Main.netMode != 1 && Main.expertMode && Main.rand.Next(6) == 0)
												{
													this.netUpdate = true;
													this.ai[0] = -1f;
													this.ai[1] = 0f;
												}
												if (this.ai[0] == -1f)
												{
													this.dontTakeDamage = true;
													this.noGravity = false;
													this.velocity.X = this.velocity.X * 0.98f;
													this.ai[1] += 1f;
													if (this.ai[1] >= 120f)
													{
														this.ai[0] = (this.ai[1] = (this.ai[2] = (this.ai[3] = 0f)));
														return;
													}
												}
												else if (this.ai[0] == 0f)
												{
													this.TargetClosest(true);
													if (Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
													{
														this.ai[0] = 1f;
														return;
													}
													Vector2 value84 = Main.player[this.target].Center - base.Center;
													value84.Y -= (float)(Main.player[this.target].height / 4);
													float num1914 = value84.Length();
													if (num1914 > 800f)
													{
														this.ai[0] = 2f;
														return;
													}
													Vector2 center41 = base.Center;
													center41.X = Main.player[this.target].Center.X;
													Vector2 vector281 = center41 - base.Center;
													if (vector281.Length() > 8f && Collision.CanHit(base.Center, 1, 1, center41, 1, 1))
													{
														this.ai[0] = 3f;
														this.ai[1] = center41.X;
														this.ai[2] = center41.Y;
														Vector2 center42 = base.Center;
														center42.Y = Main.player[this.target].Center.Y;
														if (vector281.Length() > 8f && Collision.CanHit(base.Center, 1, 1, center42, 1, 1) && Collision.CanHit(center42, 1, 1, Main.player[this.target].position, 1, 1))
														{
															this.ai[0] = 3f;
															this.ai[1] = center42.X;
															this.ai[2] = center42.Y;
														}
													}
													else
													{
														center41 = base.Center;
														center41.Y = Main.player[this.target].Center.Y;
														if ((center41 - base.Center).Length() > 8f && Collision.CanHit(base.Center, 1, 1, center41, 1, 1))
														{
															this.ai[0] = 3f;
															this.ai[1] = center41.X;
															this.ai[2] = center41.Y;
														}
													}
													if (this.ai[0] == 0f)
													{
														this.localAI[0] = 0f;
														value84.Normalize();
														value84 *= 0.5f;
														this.velocity += value84;
														this.ai[0] = 4f;
														this.ai[1] = 0f;
														return;
													}
												}
												else if (this.ai[0] == 1f)
												{
													Vector2 value85 = Main.player[this.target].Center - base.Center;
													float num1915 = value85.Length();
													float num1916 = 2f;
													num1916 += num1915 / 200f;
													int num1917 = 50;
													value85.Normalize();
													value85 *= num1916;
													this.velocity = (this.velocity * (float)(num1917 - 1) + value85) / (float)num1917;
													if (!Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
													{
														this.ai[0] = 0f;
														this.ai[1] = 0f;
														return;
													}
												}
												else if (this.ai[0] == 2f)
												{
													this.noTileCollide = true;
													Vector2 value86 = Main.player[this.target].Center - base.Center;
													float num1918 = value86.Length();
													float scaleFactor37 = 2f;
													int num1919 = 4;
													value86.Normalize();
													value86 *= scaleFactor37;
													this.velocity = (this.velocity * (float)(num1919 - 1) + value86) / (float)num1919;
													if (num1918 < 600f && !Collision.SolidCollision(this.position, this.width, this.height))
													{
														this.ai[0] = 0f;
														return;
													}
												}
												else if (this.ai[0] == 3f)
												{
													Vector2 value87 = new Vector2(this.ai[1], this.ai[2]);
													Vector2 value88 = value87 - base.Center;
													float num1920 = value88.Length();
													float num1921 = 1f;
													float num1922 = 3f;
													value88.Normalize();
													value88 *= num1921;
													this.velocity = (this.velocity * (num1922 - 1f) + value88) / num1922;
													if (this.collideX || this.collideY)
													{
														this.ai[0] = 4f;
														this.ai[1] = 0f;
													}
													if (num1920 < num1921 || num1920 > 800f || Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
													{
														this.ai[0] = 0f;
														return;
													}
												}
												else if (this.ai[0] == 4f)
												{
													if (this.collideX)
													{
														this.velocity.X = this.velocity.X * -0.8f;
													}
													if (this.collideY)
													{
														this.velocity.Y = this.velocity.Y * -0.8f;
													}
													Vector2 value89;
													if (this.velocity.X == 0f && this.velocity.Y == 0f)
													{
														value89 = Main.player[this.target].Center - base.Center;
														value89.Y -= (float)(Main.player[this.target].height / 4);
														value89.Normalize();
														this.velocity = value89 * 0.1f;
													}
													float scaleFactor38 = 1.5f;
													float num1923 = 20f;
													value89 = this.velocity;
													value89.Normalize();
													value89 *= scaleFactor38;
													this.velocity = (this.velocity * (num1923 - 1f) + value89) / num1923;
													this.ai[1] += 1f;
													if (this.ai[1] > 180f)
													{
														this.ai[0] = 0f;
														this.ai[1] = 0f;
													}
													if (Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
													{
														this.ai[0] = 0f;
													}
													this.localAI[0] += 1f;
													if (this.localAI[0] >= 5f && !Collision.SolidCollision(this.position - new Vector2(10f, 10f), this.width + 20, this.height + 20))
													{
														this.localAI[0] = 0f;
														Vector2 center43 = base.Center;
														center43.X = Main.player[this.target].Center.X;
														if (Collision.CanHit(base.Center, 1, 1, center43, 1, 1) && Collision.CanHit(base.Center, 1, 1, center43, 1, 1) && Collision.CanHit(Main.player[this.target].Center, 1, 1, center43, 1, 1))
														{
															this.ai[0] = 3f;
															this.ai[1] = center43.X;
															this.ai[2] = center43.Y;
															return;
														}
														center43 = base.Center;
														center43.Y = Main.player[this.target].Center.Y;
														if (Collision.CanHit(base.Center, 1, 1, center43, 1, 1) && Collision.CanHit(Main.player[this.target].Center, 1, 1, center43, 1, 1))
														{
															this.ai[0] = 3f;
															this.ai[1] = center43.X;
															this.ai[2] = center43.Y;
															return;
														}
													}
												}
											}
											else if (this.aiStyle == 92)
											{
												if (Main.rand.Next(20) == 0)
												{
													this.soundHit = Main.rand.Next(15, 18);
												}
												if (Main.netMode != 1)
												{
													bool flag181 = false;
													int num1924 = (int)this.ai[0];
													int num1925 = (int)this.ai[1];
													if (!flag181 && (!Main.tile[num1924, num1925].active() || Main.tile[num1924, num1925].type != 378))
													{
														flag181 = true;
													}
													if (!flag181 && (this.target == 255 || Main.player[this.target].dead || Vector2.Distance(base.Center, Main.player[this.target].Center) > 160000f))
													{
														this.TargetClosest(false);
														if (this.target == 255 || Main.player[this.target].dead || Vector2.Distance(base.Center, Main.player[this.target].Center) > 160000f)
														{
															flag181 = true;
														}
													}
													if (flag181)
													{
														this.life = 0;
														this.HitEffect(0, 10.0);
														this.active = false;
														int num1926 = TETrainingDummy.Find((int)this.ai[0], (int)this.ai[1]);
														if (num1926 != -1)
														{
															((TETrainingDummy)TileEntity.ByID[num1926]).Deactivate();
														}
														return;
													}
												}
											}
											else if (this.aiStyle == 93)
											{
												if (this.localAI[0] == 0f)
												{
													this.localAI[0] = 1f;
													for (int num1927 = 0; num1927 < 4; num1927++)
													{
														int num1928 = NPC.NewNPC((int)base.Center.X + num1927 * 40 - 150, (int)base.Center.Y, 492, this.whoAmI, 0f, 0f, 0f, 0f, 255);
														Main.npc[num1928].netUpdate = true;
														Main.npc[num1928].ai[0] = (float)this.whoAmI;
														Main.npc[num1928].ai[1] = (float)num1927;
														Main.npc[num1928].ai[3] = (float)(60 * num1927);
														Main.npc[num1928].TargetClosest(false);
														Main.npc[num1928].timeLeft = 600;
														this.ai[num1927] = (float)num1928;
													}
												}
												bool flag182 = true;
												for (int num1929 = 0; num1929 < 4; num1929++)
												{
													if (this.ai[num1929] >= 0f && (!Main.npc[(int)this.ai[num1929]].active || Main.npc[(int)this.ai[num1929]].type != 492))
													{
														this.ai[num1929] = -1f;
														this.netUpdate = true;
													}
													else if (this.ai[num1929] >= 0f)
													{
														flag182 = false;
													}
												}
												if (flag182)
												{
													this.life = 0;
													this.HitEffect(9999, 10.0);
													this.checkDead();
													return;
												}
												if (Main.netMode != 1 && Main.rand.Next(300) == 0)
												{
													Vector2 value90 = new Vector2((Main.rand.NextFloat() - 0.5f) * (float)(this.width - 70), (Main.rand.NextFloat() - 0.5f) * 20f - (float)(this.height / 2) - 20f).RotatedBy((double)this.rotation, default(Vector2));
													value90 += base.Center;
													int num1930 = NPC.NewNPC((int)value90.X, (int)value90.Y, Utils.SelectRandom<int>(Main.rand, new int[]
															{
																213,
																215,
																214,
																212
															}), 0, 0f, 0f, 0f, 0f, 255);
													Main.npc[num1930].velocity = new Vector2((Main.rand.NextFloat() - 0.5f) * 5f, -8.01f) + this.velocity;
													Main.npc[num1930].netUpdate = true;
													Main.npc[num1930].timeLeft = 600;
												}
												if ((this.localAI[3] += 1f) >= 64f)
												{
													this.localAI[3] = 0f;
												}
												this.TargetClosest(true);
												int num1931 = (int)base.Center.X / 16 + Math.Sign(this.velocity.X) * 10;
												int num1932 = (int)(this.position.Y + (float)this.height) / 16;
												int num1933 = 0;
												bool flag183 = Main.tile[num1931, num1932].nactive() && Main.tileSolid[(int)Main.tile[num1931, num1932].type] && !Main.tileSolidTop[(int)Main.tile[num1931, num1932].type];
												if (flag183)
												{
													num1933 = 1;
												}
												else
												{
													while (num1933 < 150 && num1932 + num1933 < Main.maxTilesY)
													{
														int num1934 = num1932 + num1933;
														bool flag184 = Main.tile[num1931, num1934].nactive() && Main.tileSolid[(int)Main.tile[num1931, num1934].type] && !Main.tileSolidTop[(int)Main.tile[num1931, num1934].type];
														if (flag184)
														{
															num1933--;
															break;
														}
														num1933++;
													}
												}
												float num1935 = (float)(num1933 * 16);
												if (num1935 < 350f)
												{
													float num1936 = num1935 - 350f;
													if (num1936 < -4f)
													{
														num1936 = -4f;
													}
													this.velocity.Y = MathHelper.Lerp(this.velocity.Y, num1936, 0.05f);
												}
												else if (num1935 > 450f)
												{
													float num1937 = num1935 - 350f;
													if (num1937 > 4f)
													{
														num1937 = 4f;
													}
													this.velocity.Y = MathHelper.Lerp(this.velocity.Y, num1937, 0.05f);
												}
												else
												{
													this.velocity.Y = this.velocity.Y * 0.95f;
												}
												float num1938 = Main.player[this.target].Center.X - base.Center.X;
												if (Math.Abs(num1938) >= 300f && (Math.Abs(this.velocity.X) < 6f || Math.Sign(this.velocity.X) != this.direction))
												{
													this.velocity.X = this.velocity.X + (float)this.direction * 0.06f;
												}
												this.rotation = this.velocity.X * 0.025f;
												this.spriteDirection = -Math.Sign(this.velocity.X);
												for (int num1939 = 0; num1939 < 2; num1939++)
												{
													if (Main.rand.Next(2) != 0)
													{
														Vector2 value91 = new Vector2((Main.rand.NextFloat() - 0.5f) * (float)(this.width - 70), (Main.rand.NextFloat() - 0.5f) * 20f + (float)(this.height / 2) + 10f).RotatedBy((double)this.rotation, default(Vector2));
														Dust dust16 = Main.dust[Dust.NewDust(base.Center, 0, 0, 228, 0f, 0f, 0, default(Color), 1f)];
														dust16.position = base.Center + value91;
														dust16.velocity = Vector2.Zero;
														dust16.noGravity = true;
														dust16.noLight = true;
														dust16.fadeIn = 1.5f;
														dust16.scale = 0.5f;
													}
												}
												return;
											}
											else if (this.aiStyle == 94)
											{
												int num75;
												if (this.ai[2] == 1f)
												{
													this.velocity = Vector2.UnitY * this.velocity.Length();
													if (this.velocity.Y < 0.25f)
													{
														this.velocity.Y = this.velocity.Y + 0.02f;
													}
													if (this.velocity.Y > 0.25f)
													{
														this.velocity.Y = this.velocity.Y - 0.02f;
													}
													this.dontTakeDamage = true;
													this.ai[1] += 1f;
													if (this.ai[1] > 120f)
													{
														this.Opacity = 1f - (this.ai[1] - 120f) / 60f;
													}
													int num1940 = 6;
													num75 = this.type;
													if (num75 <= 493)
													{
														if (num75 != 422)
														{
															if (num75 == 493)
															{
																num1940 = 135;
															}
														}
														else
														{
															num1940 = 229;
														}
													}
													else if (num75 != 507)
													{
														if (num75 == 517)
														{
															num1940 = 127;
														}
													}
													else
													{
														num1940 = 242;
													}
													if (Main.rand.Next(5) == 0 && this.ai[1] < 120f)
													{
														for (int num1941 = 0; num1941 < 3; num1941++)
														{
															Dust dust17 = Main.dust[Dust.NewDust(base.Left, this.width, this.height / 2, num1940, 0f, 0f, 0, default(Color), 1f)];
															dust17.position = base.Center + Vector2.UnitY.RotatedByRandom(4.1887903213500977) * new Vector2((float)this.width * 1.5f, (float)this.height * 1.1f) * 0.8f * (0.8f + Main.rand.NextFloat() * 0.2f);
															dust17.velocity.X = 0f;
															dust17.velocity.Y = -Math.Abs(dust17.velocity.Y - (float)num1941 + this.velocity.Y - 4f) * 3f;
															dust17.noGravity = true;
															dust17.fadeIn = 1f;
															dust17.scale = 1f + Main.rand.NextFloat() + (float)num1941 * 0.3f;
														}
													}
													if (this.ai[1] < 150f)
													{
														for (int num1942 = 0; num1942 < 3; num1942++)
														{
															if (Main.rand.Next(4) == 0)
															{
																Dust dust18 = Main.dust[Dust.NewDust(base.Top + new Vector2((float)(-(float)this.width) * (0.33f - 0.11f * (float)num1942), -20f), (int)((float)this.width * (0.66f - 0.22f * (float)num1942)), 20, num1940, 0f, 0f, 0, default(Color), 1f)];
																dust18.velocity.X = 0f;
																dust18.velocity.Y = -Math.Abs(dust18.velocity.Y - (float)num1942 + this.velocity.Y - 4f) * (1f + this.ai[1] / 180f * 0.5f);
																dust18.noGravity = true;
																dust18.fadeIn = 1f;
																dust18.scale = 1f + Main.rand.NextFloat() + (float)num1942 * 0.3f;
															}
														}
													}
													if (Main.rand.Next(5) == 0 && this.ai[1] < 150f)
													{
														for (int num1943 = 0; num1943 < 3; num1943++)
														{
															Vector2 position9 = base.Center + Vector2.UnitY.RotatedByRandom(4.1887903213500977) * new Vector2((float)this.width, (float)this.height) * 0.7f * Main.rand.NextFloat();
															float num1944 = 1f + Main.rand.NextFloat() * 2f + this.ai[1] / 180f * 4f;
															for (int num1945 = 0; num1945 < 6; num1945++)
															{
																Dust dust19 = Main.dust[Dust.NewDust(position9, 4, 4, num1940, 0f, 0f, 0, default(Color), 1f)];
																dust19.position = position9;
																Dust expr_66195_cp_0 = dust19;
																expr_66195_cp_0.velocity.X = expr_66195_cp_0.velocity.X * num1944;
																dust19.velocity.Y = -Math.Abs(dust19.velocity.Y) * num1944;
																dust19.noGravity = true;
																dust19.fadeIn = 1f;
																dust19.scale = 1.5f + Main.rand.NextFloat() + (float)num1945 * 0.13f;
															}
															Main.PlaySound(3, position9, Utils.SelectRandom<int>(Main.rand, new int[]
																	{
																		1,
																		18
																	}));
														}
													}
													if (Main.rand.Next(3) != 0 && this.ai[1] < 150f)
													{
														Dust dust20 = Main.dust[Dust.NewDust(base.Left, this.width, this.height / 2, 241, 0f, 0f, 0, default(Color), 1f)];
														dust20.position = base.Center + Vector2.UnitY.RotatedByRandom(4.1887903213500977) * new Vector2((float)(this.width / 2), (float)(this.height / 2)) * (0.8f + Main.rand.NextFloat() * 0.2f);
														dust20.velocity.X = 0f;
														dust20.velocity.Y = Math.Abs(dust20.velocity.Y) * 0.25f;
													}
													if (this.ai[1] % 60f == 1f)
													{
														Main.PlaySound(4, base.Center, 22);
													}
													if (this.ai[1] >= 180f)
													{
														this.life = 0;
														this.HitEffect(0, 1337.0);
														this.checkDead();
													}
													return;
												}
												if (this.ai[3] > 0f)
												{
													bool flag185 = this.dontTakeDamage;
													num75 = this.type;
													if (num75 <= 493)
													{
														if (num75 != 422)
														{
															if (num75 == 493)
															{
																flag185 = (NPC.ShieldStrengthTowerStardust != 0);
															}
														}
														else
														{
															flag185 = (NPC.ShieldStrengthTowerVortex != 0);
														}
													}
													else if (num75 != 507)
													{
														if (num75 == 517)
														{
															flag185 = (NPC.ShieldStrengthTowerSolar != 0);
														}
													}
													else
													{
														flag185 = (NPC.ShieldStrengthTowerNebula != 0);
													}
													if (flag185 != this.dontTakeDamage)
													{
														Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 58);
													}
													else if (this.ai[3] == 1f)
													{
														Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 3);
													}
													this.ai[3] += 1f;
													if (this.ai[3] > 120f)
													{
														this.ai[3] = 0f;
													}
												}
												num75 = this.type;
												if (num75 <= 493)
												{
													if (num75 != 422)
													{
														if (num75 == 493)
														{
															this.dontTakeDamage = (NPC.ShieldStrengthTowerStardust != 0);
														}
													}
													else
													{
														this.dontTakeDamage = (NPC.ShieldStrengthTowerVortex != 0);
													}
												}
												else if (num75 != 507)
												{
													if (num75 == 517)
													{
														this.dontTakeDamage = (NPC.ShieldStrengthTowerSolar != 0);
													}
												}
												else
												{
													this.dontTakeDamage = (NPC.ShieldStrengthTowerNebula != 0);
												}
												this.TargetClosest(false);
												if (Main.player[this.target].Distance(base.Center) > 2000f)
												{
													this.localAI[0] += 1f;
												}
												if (this.localAI[0] >= 60f && Main.netMode != 1)
												{
													this.localAI[0] = 0f;
													this.netUpdate = true;
													this.life = (int)MathHelper.Clamp((float)(this.life + 200), 0f, (float)this.lifeMax);
												}
												else
												{
													this.localAI[0] = 0f;
												}
												this.velocity = new Vector2(0f, (float)Math.Sin((double)(6.28318548f * this.ai[0] / 300f)) * 0.5f);
												if ((double)base.Bottom.Y > Main.worldSurface * 16.0 - 100.0)
												{
													this.position.Y = (float)Main.worldSurface * 16f - (float)this.height - 100f;
												}
												this.ai[0] += 1f;
												if (this.ai[0] >= 300f)
												{
													this.ai[0] = 0f;
													this.netUpdate = true;
												}
												if (this.type == 493)
												{
													if (Main.rand.Next(5) == 0)
													{
														Dust dust21 = Main.dust[Dust.NewDust(base.Left, this.width, this.height / 2, 241, 0f, 0f, 0, default(Color), 1f)];
														dust21.position = base.Center + Vector2.UnitY.RotatedByRandom(2.0943951606750488) * new Vector2((float)(this.width / 2), (float)(this.height / 2)) * (0.8f + Main.rand.NextFloat() * 0.2f);
														dust21.velocity.X = 0f;
														dust21.velocity.Y = Math.Abs(dust21.velocity.Y) * 0.25f;
													}
													for (int num1946 = 0; num1946 < 3; num1946++)
													{
														if (Main.rand.Next(5) == 0)
														{
															Dust dust22 = Main.dust[Dust.NewDust(base.Top + new Vector2((float)(-(float)this.width) * (0.33f - 0.11f * (float)num1946), -20f), (int)((float)this.width * (0.66f - 0.22f * (float)num1946)), 20, 135, 0f, 0f, 0, default(Color), 1f)];
															dust22.velocity.X = 0f;
															dust22.velocity.Y = -Math.Abs(dust22.velocity.Y - (float)num1946 + this.velocity.Y - 4f) * 1f;
															dust22.noGravity = true;
															dust22.fadeIn = 1f;
															dust22.scale = 1f + Main.rand.NextFloat() + (float)num1946 * 0.3f;
														}
													}
													if (this.ai[1] > 0f)
													{
														this.ai[1] -= 1f;
													}
													if (Main.netMode != 1 && this.ai[1] <= 0f && Main.player[this.target].active && !Main.player[this.target].dead && base.Distance(Main.player[this.target].Center) < 1080f && Main.player[this.target].position.Y - this.position.Y < 400f)
													{
														List<int> list10 = new List<int>();
														if (NPC.CountNPCS(405) + NPC.CountNPCS(406) < 2)
														{
															list10.Add(405);
														}
														if (NPC.CountNPCS(402) < 2)
														{
															list10.Add(402);
														}
														if (NPC.CountNPCS(407) < 1)
														{
															list10.Add(407);
														}
														if (list10.Count > 0)
														{
															int num1947 = Utils.SelectRandom<int>(Main.rand, list10.ToArray());
															this.ai[1] = (float)(30 * Main.rand.Next(5, 16));
															int num1948 = Main.rand.Next(3, 6);
															int num1949 = Main.rand.Next(0, 4);
															int num1950 = 0;
															List<Tuple<Vector2, int, int>> list11 = new List<Tuple<Vector2, int, int>>();
															List<Vector2> list12 = new List<Vector2>();
															list11.Add(Tuple.Create<Vector2, int, int>(base.Top - Vector2.UnitY * 120f, num1948, 0));
															int num1951 = 0;
															int num1952 = list11.Count;
															while (list11.Count > 0)
															{
																Vector2 item = list11[0].Item1;
																int num1953 = 1;
																int num1954 = 1;
																if (num1951 > 0 && num1949 > 0 && (Main.rand.Next(3) != 0 || num1951 == 1))
																{
																	num1954 = Main.rand.Next(Math.Max(1, list11[0].Item2));
																	num1953++;
																	num1949--;
																}
																for (int num1955 = 0; num1955 < num1953; num1955++)
																{
																	int num1956 = list11[0].Item3;
																	if (num1951 == 0)
																	{
																		num1956 = Utils.SelectRandom<int>(Main.rand, new int[]
																			{
																				-1,
																				1
																			});
																	}
																	else if (num1955 == 1)
																	{
																		num1956 *= -1;
																	}
																	float num1957 = ((num1951 % 2 == 0) ? 0f : 3.14159274f) + (0.5f - Main.rand.NextFloat()) * 0.7853982f + (float)num1956 * 0.7853982f * (float)(num1951 % 2 == 0).ToDirectionInt();
																	float scaleFactor39 = 100f + 50f * Main.rand.NextFloat();
																	int num1958 = list11[0].Item2;
																	if (num1955 != 0)
																	{
																		num1958 = num1954;
																	}
																	if (num1951 == 0)
																	{
																		num1957 = (0.5f - Main.rand.NextFloat()) * 0.7853982f;
																		scaleFactor39 = 100f + 100f * Main.rand.NextFloat();
																	}
																	Vector2 value92 = (-Vector2.UnitY).RotatedBy((double)num1957, default(Vector2)) * scaleFactor39;
																	if (num1958 - 1 < 0)
																	{
																		value92 = Vector2.Zero;
																	}
																	num1950 = Projectile.NewProjectile(item.X, item.Y, value92.X, value92.Y, 540, 0, 0f, Main.myPlayer, (float)(-(float)num1951) * 10f, 0.5f + Main.rand.NextFloat() * 0.5f);
																	list12.Add(item + value92);
																	if (num1951 < num1948 && list11[0].Item2 > 0)
																	{
																		list11.Add(Tuple.Create<Vector2, int, int>(item + value92, num1958 - 1, num1956));
																	}
																}
																list11.Remove(list11[0]);
																if (--num1952 == 0)
																{
																	num1952 = list11.Count;
																	num1951++;
																}
															}
															Main.projectile[num1950].localAI[0] = (float)num1947;
														}
														else
														{
															this.ai[1] = 30f;
														}
													}
												}
												if (this.type == 507)
												{
													if (Main.rand.Next(5) == 0)
													{
														Dust dust23 = Main.dust[Dust.NewDust(base.Left, this.width, this.height / 2, 241, 0f, 0f, 0, default(Color), 1f)];
														dust23.position = base.Center + Vector2.UnitY.RotatedByRandom(2.0943951606750488) * new Vector2((float)(this.width / 2), (float)(this.height / 2)) * (0.8f + Main.rand.NextFloat() * 0.2f);
														dust23.velocity.X = 0f;
														dust23.velocity.Y = Math.Abs(dust23.velocity.Y) * 0.25f;
													}
													for (int num1959 = 0; num1959 < 3; num1959++)
													{
														if (Main.rand.Next(5) == 0)
														{
															Dust dust24 = Main.dust[Dust.NewDust(base.Top + new Vector2((float)(-(float)this.width) * (0.33f - 0.11f * (float)num1959), -20f), (int)((float)this.width * (0.66f - 0.22f * (float)num1959)), 20, 242, 0f, 0f, 0, default(Color), 1f)];
															dust24.velocity.X = 0f;
															dust24.velocity.Y = -Math.Abs(dust24.velocity.Y - (float)num1959 + this.velocity.Y - 4f) * 1f;
															dust24.noGravity = true;
															dust24.fadeIn = 1f;
															dust24.color = Color.Black;
															dust24.scale = 1f + Main.rand.NextFloat() + (float)num1959 * 0.3f;
														}
													}
												}
												if (this.type == 422)
												{
													if (Main.rand.Next(5) == 0)
													{
														Dust dust25 = Main.dust[Dust.NewDust(base.Left, this.width, this.height / 2, 241, 0f, 0f, 0, default(Color), 1f)];
														dust25.position = base.Center + Vector2.UnitY.RotatedByRandom(2.0943951606750488) * new Vector2((float)(this.width / 2), (float)(this.height / 2)) * (0.8f + Main.rand.NextFloat() * 0.2f);
														dust25.velocity.X = 0f;
														dust25.velocity.Y = Math.Abs(dust25.velocity.Y) * 0.25f;
													}
													for (int num1960 = 0; num1960 < 3; num1960++)
													{
														if (Main.rand.Next(5) == 0)
														{
															Dust dust26 = Main.dust[Dust.NewDust(base.Top + new Vector2((float)(-(float)this.width) * (0.33f - 0.11f * (float)num1960), -20f), (int)((float)this.width * (0.66f - 0.22f * (float)num1960)), 20, 229, 0f, 0f, 0, default(Color), 1f)];
															dust26.velocity.X = 0f;
															dust26.velocity.Y = -Math.Abs(dust26.velocity.Y - (float)num1960 + this.velocity.Y - 4f) * 1f;
															dust26.noGravity = true;
															dust26.fadeIn = 1f;
															dust26.color = Color.Black;
															dust26.scale = 1f + Main.rand.NextFloat() + (float)num1960 * 0.3f;
														}
													}
													if (this.ai[1] > 0f)
													{
														this.ai[1] -= 1f;
													}
													if (Main.netMode != 1 && this.ai[1] <= 0f && Main.player[this.target].active && !Main.player[this.target].dead && base.Distance(Main.player[this.target].Center) < 3240f && !Collision.CanHitLine(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
													{
														this.ai[1] = (float)(60 + Main.rand.Next(120));
														Point point13 = Main.player[this.target].Top.ToTileCoordinates();
														bool flag186 = NPC.CountNPCS(427) + NPC.CountNPCS(426) < 14;
														int num1961 = 0;
														while (num1961 < 10 && !WorldGen.SolidTile(point13.X, point13.Y) && point13.Y > 10)
														{
															point13.Y--;
															num1961++;
														}
														if (flag186)
														{
															Projectile.NewProjectile((float)(point13.X * 16 + 8), (float)(point13.Y * 16 + 24), 0f, 0f, 579, 0, 0f, Main.myPlayer, 0f, 0f);
														}
														else
														{
															Projectile.NewProjectile((float)(point13.X * 16 + 8), (float)(point13.Y * 16 + 17), 0f, 0f, 578, 0, 1f, Main.myPlayer, 0f, 0f);
														}
													}
													if (Main.netMode != 1 && this.ai[1] <= 0f && Main.player[this.target].active && !Main.player[this.target].dead && base.Distance(Main.player[this.target].Center) < 1080f && Main.player[this.target].position.Y - this.position.Y < 400f)
													{
														bool flag187 = NPC.CountNPCS(427) + NPC.CountNPCS(426) * 3 + NPC.CountNPCS(428) < 20;
														if (flag187)
														{
															this.ai[1] = (float)(420 + Main.rand.Next(360));
															Point point14 = base.Center.ToTileCoordinates();
															Point point15 = Main.player[this.target].Center.ToTileCoordinates();
															Vector2 vector282 = Main.player[this.target].Center - base.Center;
															int num1962 = 20;
															int num1963 = 3;
															int num1964 = 8;
															int num1965 = 2;
															int num1966 = 0;
															bool flag188 = false;
															if (vector282.Length() > 2000f)
															{
																flag188 = true;
															}
															while (!flag188 && num1966 < 100)
															{
																num1966++;
																int num1967 = Main.rand.Next(point15.X - num1962, point15.X + num1962 + 1);
																int num1968 = Main.rand.Next(point15.Y - num1962, point15.Y + num1962 + 1);
																if ((num1968 < point15.Y - num1964 || num1968 > point15.Y + num1964 || num1967 < point15.X - num1964 || num1967 > point15.X + num1964) && (num1968 < point14.Y - num1963 || num1968 > point14.Y + num1963 || num1967 < point14.X - num1963 || num1967 > point14.X + num1963) && !Main.tile[num1967, num1968].nactive())
																{
																	bool flag189 = true;
																	if (flag189 && Main.tile[num1967, num1968].lava())
																	{
																		flag189 = false;
																	}
																	if (flag189 && Collision.SolidTiles(num1967 - num1965, num1967 + num1965, num1968 - num1965, num1968 + num1965))
																	{
																		flag189 = false;
																	}
																	if (flag189 && !Collision.CanHitLine(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
																	{
																		flag189 = false;
																	}
																	if (flag189)
																	{
																		Projectile.NewProjectile((float)(num1967 * 16 + 8), (float)(num1968 * 16 + 8), 0f, 0f, 579, 0, 0f, Main.myPlayer, 0f, 0f);
																		break;
																	}
																}
															}
														}
													}
												}
												if (this.type == 517)
												{
													if (Main.rand.Next(5) == 0)
													{
														Dust dust27 = Main.dust[Dust.NewDust(base.Left, this.width, this.height / 2, 241, 0f, 0f, 0, default(Color), 1f)];
														dust27.position = base.Center + Vector2.UnitY.RotatedByRandom(2.0943951606750488) * new Vector2((float)(this.width / 2), (float)(this.height / 2)) * (0.8f + Main.rand.NextFloat() * 0.2f);
														dust27.velocity.X = 0f;
														dust27.velocity.Y = Math.Abs(dust27.velocity.Y) * 0.25f;
													}
													for (int num1969 = 0; num1969 < 3; num1969++)
													{
														if (Main.rand.Next(5) == 0)
														{
															Dust dust28 = Main.dust[Dust.NewDust(base.Top + new Vector2((float)(-(float)this.width) * (0.33f - 0.11f * (float)num1969), -20f), (int)((float)this.width * (0.66f - 0.22f * (float)num1969)), 20, 6, 0f, 0f, 0, default(Color), 1f)];
															dust28.velocity.X = 0f;
															dust28.velocity.Y = -Math.Abs(dust28.velocity.Y - (float)num1969 + this.velocity.Y - 4f) * 1f;
															dust28.noGravity = true;
															dust28.fadeIn = 1f;
															dust28.scale = 1f + Main.rand.NextFloat() + (float)num1969 * 0.3f;
														}
													}
													if (this.ai[1] > 0f)
													{
														this.ai[1] -= 1f;
													}
													if (Main.netMode != 1 && this.ai[1] <= 0f && Main.player[this.target].active && !Main.player[this.target].dead && base.Distance(Main.player[this.target].Center) < 1080f && Main.player[this.target].position.Y - this.position.Y < 700f)
													{
														Vector2 vector283 = base.Top + new Vector2((float)(-(float)this.width) * 0.33f, -20f) + new Vector2((float)this.width * 0.66f, 20f) * Utils.RandomVector2(Main.rand, 0f, 1f);
														Vector2 velocity10 = -Vector2.UnitY.RotatedByRandom(0.78539818525314331) * (7f + Main.rand.NextFloat() * 5f);
														int num1970 = NPC.NewNPC((int)vector283.X, (int)vector283.Y, 519, this.whoAmI, 0f, 0f, 0f, 0f, 255);
														Main.npc[num1970].velocity = velocity10;
														Main.npc[num1970].netUpdate = true;
														this.ai[1] = 60f;
														return;
													}
												}
											}
											else if (this.aiStyle == 95)
											{
												float num1971 = 300f;
												if (this.velocity.Length() > 4f)
												{
													this.velocity *= 0.95f;
												}
												this.velocity *= 0.99f;
												this.ai[0] += 1f;
												this.scale = 1f + 0.3f * (this.ai[0] / num1971);
												if (this.ai[0] >= num1971)
												{
													if (Main.netMode != 1)
													{
														this.Transform(405);
													}
													return;
												}
												this.rotation += this.velocity.X * 0.1f;
												if (this.ai[0] > 20f)
												{
													Vector2 center44 = base.Center;
													int num1972 = (int)(this.ai[0] / (num1971 / 2f));
													for (int num1973 = 0; num1973 < num1972 + 1; num1973++)
													{
														if (Main.rand.Next(2) != 0)
														{
															int num1974 = 226;
															float num1975 = 0.4f;
															if (num1973 % 2 == 1)
															{
																num1974 = 226;
																num1975 = 0.65f;
															}
															Vector2 vector284 = center44 + ((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * (12f - (float)(num1972 * 2));
															int num1976 = Dust.NewDust(vector284 - Vector2.One * 12f, 24, 24, num1974, this.velocity.X / 2f, this.velocity.Y / 2f, 0, default(Color), 1f);
															Main.dust[num1976].position -= new Vector2(2f);
															Main.dust[num1976].velocity = Vector2.Normalize(center44 - vector284) * 1.5f * (10f - (float)num1972 * 2f) / 10f;
															Main.dust[num1976].noGravity = true;
															Main.dust[num1976].scale = num1975;
															Main.dust[num1976].customData = this;
														}
													}
													return;
												}
											}
											else if (this.aiStyle == 96)
											{
												float num1977 = 5f;
												float moveSpeed = 0.15f;
												this.TargetClosest(true);
												Vector2 desiredVelocity4 = Main.player[this.target].Center - base.Center + new Vector2(0f, -250f);
												float num1978 = desiredVelocity4.Length();
												if (num1978 < 20f)
												{
													desiredVelocity4 = this.velocity;
												}
												else if (num1978 < 40f)
												{
													desiredVelocity4.Normalize();
													desiredVelocity4 *= num1977 * 0.35f;
												}
												else if (num1978 < 80f)
												{
													desiredVelocity4.Normalize();
													desiredVelocity4 *= num1977 * 0.65f;
												}
												else
												{
													desiredVelocity4.Normalize();
													desiredVelocity4 *= num1977;
												}
												this.SimpleFlyMovement(desiredVelocity4, moveSpeed);
												this.rotation = this.velocity.X * 0.1f;
												if ((this.ai[0] += 1f) >= 70f)
												{
													this.ai[0] = 0f;
													if (Main.netMode != 1)
													{
														Vector2 vector285 = Vector2.Zero;
														while (Math.Abs(vector285.X) < 1.5f)
														{
															vector285 = Vector2.UnitY.RotatedByRandom(1.5707963705062866) * new Vector2(5f, 3f);
														}
														Projectile.NewProjectile(base.Center.X, base.Center.Y, vector285.X, vector285.Y, 539, 60, 0f, Main.myPlayer, 0f, (float)this.whoAmI);
														return;
													}
												}
											}
											else if (this.aiStyle == 97)
											{
												float num1979 = 7f;
												int num1980 = 480;
												if (this.localAI[2] < 180f)
												{
													this.localAI[2] += 1f;
													if (Main.netMode != 1 && this.localAI[2] % 60f == 0f)
													{
														Vector2 vector286 = Vector2.Zero;
														while (Math.Abs(vector286.X) < 1.5f)
														{
															vector286 = Vector2.UnitY.RotatedByRandom(1.5707963705062866) * new Vector2(4f, 2.5f);
														}
														Projectile.NewProjectile(base.Center.X, base.Center.Y, vector286.X, vector286.Y, 574, 0, 0f, Main.myPlayer, 0f, (float)this.whoAmI);
													}
												}
												if (this.localAI[1] == 1f)
												{
													this.localAI[1] = 0f;
													if (Main.rand.Next(4) == 0)
													{
														this.ai[0] = (float)num1980;
													}
												}
												this.TargetClosest(true);
												this.rotation = Math.Abs(this.velocity.X) * (float)this.direction * 0.1f;
												this.spriteDirection = -this.direction;
												Vector2 value93 = base.Center + new Vector2((float)(this.direction * 20), 6f);
												Vector2 vector287 = Main.player[this.target].Center - value93;
												bool flag190 = Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1);
												bool flag191 = false;
												if (vector287.Length() > 400f || !flag190)
												{
													Vector2 value94 = vector287;
													if (value94.Length() > num1979)
													{
														value94.Normalize();
														value94 *= num1979;
													}
													int num1981 = 30;
													this.velocity = (this.velocity * (float)(num1981 - 1) + value94) / (float)num1981;
												}
												else
												{
													this.velocity *= 0.98f;
													flag191 = true;
												}
												if (this.ai[2] != 0f && this.ai[3] != 0f)
												{
													Main.PlaySound(2, (int)base.Center.X, (int)base.Center.Y, 8);
													for (int num1982 = 0; num1982 < 20; num1982++)
													{
														int num1983 = Dust.NewDust(this.position, this.width, this.height, 242, 0f, 0f, 0, default(Color), 1f);
														Main.dust[num1983].velocity *= 3f;
														Main.dust[num1983].noGravity = true;
														Main.dust[num1983].scale = 2.5f;
													}
													base.Center = new Vector2(this.ai[2] * 16f, this.ai[3] * 16f);
													this.velocity = Vector2.Zero;
													this.ai[2] = 0f;
													this.ai[3] = 0f;
													Main.PlaySound(2, (int)base.Center.X, (int)base.Center.Y, 8);
													for (int num1984 = 0; num1984 < 20; num1984++)
													{
														int num1985 = Dust.NewDust(this.position, this.width, this.height, 242, 0f, 0f, 0, default(Color), 1f);
														Main.dust[num1985].velocity *= 3f;
														Main.dust[num1985].noGravity = true;
														Main.dust[num1985].scale = 2.5f;
													}
												}
												this.ai[0] += 1f;
												if (this.ai[0] >= (float)num1980 && Main.netMode != 1)
												{
													this.ai[0] = 0f;
													Point point16 = base.Center.ToTileCoordinates();
													Point point17 = Main.player[this.target].Center.ToTileCoordinates();
													int num1986 = 20;
													int num1987 = 3;
													int num1988 = 10;
													int num1989 = 1;
													int num1990 = 0;
													bool flag192 = false;
													if (vector287.Length() > 2000f)
													{
														flag192 = true;
													}
													while (!flag192 && num1990 < 100)
													{
														num1990++;
														int num1991 = Main.rand.Next(point17.X - num1986, point17.X + num1986 + 1);
														int num1992 = Main.rand.Next(point17.Y - num1986, point17.Y + num1986 + 1);
														if ((num1992 < point17.Y - num1988 || num1992 > point17.Y + num1988 || num1991 < point17.X - num1988 || num1991 > point17.X + num1988) && (num1992 < point16.Y - num1987 || num1992 > point16.Y + num1987 || num1991 < point16.X - num1987 || num1991 > point16.X + num1987) && !Main.tile[num1991, num1992].nactive())
														{
															bool flag193 = true;
															if (flag193 && Main.tile[num1991, num1992].lava())
															{
																flag193 = false;
															}
															if (flag193 && Collision.SolidTiles(num1991 - num1989, num1991 + num1989, num1992 - num1989, num1992 + num1989))
															{
																flag193 = false;
															}
															if (flag193)
															{
																this.ai[1] = 20f;
																this.ai[2] = (float)num1991;
																this.ai[3] = (float)num1992;
																break;
															}
														}
													}
													this.netUpdate = true;
												}
												if (flag191 && this.velocity.Length() < 2f && Main.netMode != 1)
												{
													this.localAI[0] += 1f;
													if (this.localAI[0] >= 13f)
													{
														return;
													}
												}
											}
											else if (this.aiStyle == 98)
											{
												this.noTileCollide = false;
												if (this.ai[0] == 0f)
												{
													this.TargetClosest(true);
													this.ai[0] = 1f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
													this.ai[3] = 0f;
												}
												bool flag194 = Collision.CanHit(base.Center, 1, 1, Main.player[this.target].position, 1, 1);
												bool flag195 = true;
												if (!flag194 || Main.player[this.target].dead)
												{
													flag195 = false;
												}
												else
												{
													int num1993 = (int)(Main.player[this.target].Center.X / 16f);
													int num1994 = (int)(Main.player[this.target].Center.Y / 16f);
													for (int num1995 = num1993 - 2; num1995 <= num1993 + 2; num1995++)
													{
														for (int num1996 = num1994; num1996 <= num1994 + 25; num1996++)
														{
															if (WorldGen.SolidTile2(num1995, num1996))
															{
																flag195 = false;
															}
														}
													}
												}
												if (this.ai[0] < 0f)
												{
													Vector2 vector288 = Main.player[this.target].Center - base.Center;
													float num1997 = vector288.Length();
													if (this.ai[0] == -1f)
													{
														vector288.Normalize();
														if (vector288.HasNaNs())
														{
															vector288 = new Vector2((float)this.direction, 0f);
														}
														float num1998 = 8f + num1997 / 100f;
														float num1999 = 12f;
														if (Main.player[this.target].velocity.Length() > num1999)
														{
															num1999 = Main.player[this.target].velocity.Length();
														}
														if (num1998 > num1999)
														{
															num1998 = num1999;
														}
														vector288 *= num1998;
														float num2000 = 10f;
														this.velocity = (this.velocity * (num2000 - 1f) + vector288) / num2000;
														for (int num2001 = 0; num2001 < 200; num2001++)
														{
															if (Main.npc[num2001].active && Main.npc[num2001].type == this.type && num2001 != this.whoAmI)
															{
																Vector2 value95 = Main.npc[num2001].Center - base.Center;
																if (value95.Length() < 40f)
																{
																	value95.Normalize();
																	value95 *= 1f;
																	this.velocity -= value95;
																}
															}
														}
														this.rotation += this.velocity.X * 0.03f;
														if ((double)this.rotation < -6.2831)
														{
															this.rotation += 6.2831f;
														}
														if ((double)this.rotation > 6.2831)
														{
															this.rotation -= 6.2831f;
														}
														if (this.velocity.X > 0f)
														{
															this.direction = 1;
														}
														else if (this.velocity.X < 0f)
														{
															this.direction = -1;
														}
														this.spriteDirection = this.direction;
													}
													this.ai[1] += 1f;
													if (this.ai[1] >= 60f && !flag195)
													{
														this.ai[0] = 0f;
													}
												}
												else if (this.ai[0] == 2f)
												{
													this.rotation *= 0.92f;
													if ((double)Math.Abs(this.rotation) < 0.02)
													{
														this.rotation = 0f;
													}
													int num2002 = 300;
													float num2003 = Math.Abs(base.Center.X - Main.player[this.target].Center.X);
													if (num2003 < (float)num2002 && Collision.CanHit(base.Center, 1, 1, Main.player[this.target].position, 1, 1))
													{
														this.velocity.X = this.velocity.X * 0.96f;
														this.velocity.Y = this.velocity.Y * 0.96f;
														this.ai[1] += 1f;
														if (this.ai[1] == 20f)
														{
															if (Main.netMode != 1)
															{
																NPC.NewNPC((int)base.Center.X, (int)base.Center.Y + 26, 516, 0, 0f, 0f, 0f, 0f, this.target);
															}
														}
														else if (this.ai[1] >= 30f)
														{
															this.ai[1] = 0f;
														}
														for (int num2004 = 0; num2004 < 200; num2004++)
														{
															if (Main.npc[num2004].active && Main.npc[num2004].type == this.type && num2004 != this.whoAmI)
															{
																Vector2 value96 = Main.npc[num2004].Center - base.Center;
																if (value96.Length() < 100f)
																{
																	value96.Normalize();
																	value96 *= 0.1f;
																	this.velocity -= value96;
																}
															}
														}
													}
													else
													{
														this.ai[0] = 0f;
													}
													if (Main.player[this.target].Center.X < base.Center.X)
													{
														this.direction = -1;
													}
													else if (Main.player[this.target].Center.X > base.Center.X)
													{
														this.direction = 1;
													}
													this.spriteDirection = this.direction;
												}
												if (this.ai[0] == 1f)
												{
													this.rotation *= 0.92f;
													if ((double)Math.Abs(this.rotation) < 0.02)
													{
														this.rotation = 0f;
													}
													if (flag195)
													{
														this.ai[0] = -1f;
														this.ai[1] = 0f;
														this.ai[2] = 0f;
														this.ai[3] = 0f;
													}
													int num2005 = 300;
													for (int num2006 = 0; num2006 < 200; num2006++)
													{
														if (Main.npc[num2006].active && Main.npc[num2006].type == this.type && num2006 != this.whoAmI)
														{
															Vector2 value97 = Main.npc[num2006].Center - base.Center;
															if (value97.Length() < 50f)
															{
																value97.Normalize();
																value97 *= 0.1f;
																this.velocity -= value97;
																this.velocity.X = this.velocity.X - value97.X * 1f;
															}
														}
													}
													int num2007 = 800;
													float num2008 = Math.Abs(base.Center.X - Main.player[this.target].Center.X);
													if (num2008 < (float)num2005 && flag194)
													{
														this.ai[0] = 2f;
														this.ai[1] = 0f;
													}
													else
													{
														if (this.collideX)
														{
															this.velocity.X = this.velocity.X * -0.5f;
															this.ai[1] = 60f;
															this.direction *= -1;
														}
														if (this.ai[1] > 0f)
														{
															this.ai[1] -= 1f;
														}
														else if (flag194)
														{
															if (base.Center.X > Main.player[this.target].Center.X)
															{
																this.direction = -1;
															}
															else
															{
																this.direction = 1;
															}
														}
														else if (num2008 > (float)num2007)
														{
															if (base.Center.X > Main.player[this.target].Center.X)
															{
																this.direction = -1;
															}
															else
															{
																this.direction = 1;
															}
														}
														float num2009 = 2f;
														float num2010 = 0.1f;
														if (this.velocity.X > num2009 || this.velocity.X < -num2009)
														{
															if (Math.Abs(this.velocity.X) < num2009 + num2010 * 2f)
															{
																if (this.velocity.X < 0f)
																{
																	this.velocity.X = -num2009;
																}
																else
																{
																	this.velocity.X = num2009;
																}
															}
															else
															{
																this.velocity.X = this.velocity.X * 0.99f;
															}
														}
														else
														{
															this.velocity.X = this.velocity.X + (float)this.direction * num2010;
														}
														this.spriteDirection = this.direction;
													}
													if (this.collideY)
													{
														this.ai[2] = 60f;
														this.directionY *= -1;
														this.velocity.Y = this.velocity.Y * -0.5f;
													}
													if (this.ai[2] > 0f)
													{
														this.ai[2] -= 1f;
													}
													else
													{
														int num2011 = (int)(base.Center.Y / 16f);
														int num2012 = (int)((base.Center.X - 8f) / 16f);
														int num2013 = 30;
														int num2014 = 15;
														int num2015 = 0;
														for (int num2016 = num2011; num2016 < num2011 + num2013; num2016++)
														{
															for (int num2017 = num2012; num2017 <= num2012 + 1; num2017++)
															{
																if (WorldGen.SolidTile(num2017, num2016) || Main.tile[num2017, num2016].liquid > 0)
																{
																	num2015 = num2016 - num2011;
																	break;
																}
															}
															if (num2015 != 0)
															{
																break;
															}
														}
														if (num2015 == 0)
														{
															this.directionY = 1;
														}
														else if (num2015 < num2014)
														{
															this.directionY = -1;
														}
													}
													float num2018 = 2f;
													float num2019 = 0.1f;
													if (this.velocity.Y <= num2018 && this.velocity.Y >= -num2018)
													{
														this.velocity.Y = this.velocity.Y + (float)this.directionY * num2019;
														return;
													}
													if (Math.Abs(this.velocity.Y) >= num2018 + num2019 * 2f)
													{
														this.velocity.Y = this.velocity.Y * 0.99f;
														return;
													}
													if (this.velocity.Y < 0f)
													{
														this.velocity.Y = -num2018;
														return;
													}
													this.velocity.Y = num2018;
													return;
												}
											}
											else if (this.aiStyle == 99)
											{
												if (this.velocity.Y == 0f && this.ai[0] == 0f)
												{
													this.ai[0] = 1f;
													this.ai[1] = 0f;
													this.netUpdate = true;
													return;
												}
												if (this.ai[0] == 1f)
												{
													this.velocity = Vector2.Zero;
													this.position = this.oldPosition;
													this.ai[1] += 1f;
													if (this.ai[1] >= 5f)
													{
														this.HitEffect(0, 9999.0);
														this.active = false;
													}
													return;
												}
												this.velocity.Y = this.velocity.Y + 0.2f;
												if (this.velocity.Y > 12f)
												{
													this.velocity.Y = 12f;
												}
												this.rotation = this.velocity.ToRotation() - 1.57079637f;
												if (this.type == 519)
												{
													if (this.localAI[0] == 0f)
													{
														this.localAI[0] = 1f;
														for (int num2020 = 0; num2020 < 13; num2020++)
														{
															int num2021 = Dust.NewDust(this.position, this.width, this.height, 6, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, default(Color), 2.5f);
															Main.dust[num2021].noGravity = true;
															Main.dust[num2021].fadeIn = 1f;
															Main.dust[num2021].velocity *= 4f;
															Main.dust[num2021].noLight = true;
														}
													}
													for (int num2022 = 0; num2022 < 3; num2022++)
													{
														if (Main.rand.Next(3) < 2)
														{
															int num2023 = Dust.NewDust(this.position, this.width, this.height, 6, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, default(Color), 2.5f);
															Main.dust[num2023].noGravity = true;
															Main.dust[num2023].velocity *= 0.2f;
															Main.dust[num2023].fadeIn = 1f;
															if (Main.rand.Next(6) == 0)
															{
																Main.dust[num2023].velocity *= 30f;
																Main.dust[num2023].noGravity = false;
																Main.dust[num2023].noLight = true;
															}
															else
															{
																Main.dust[num2023].velocity = base.DirectionFrom(Main.dust[num2023].position) * Main.dust[num2023].velocity.Length();
															}
														}
													}
													return;
												}
											}
											else if (this.aiStyle == 100)
											{
												if (this.velocity.Y == 0f && this.ai[0] >= 0f)
												{
													this.ai[0] = -1f;
													this.ai[1] = 0f;
													this.netUpdate = true;
													return;
												}
												if (this.ai[0] == -1f)
												{
													this.velocity = Vector2.Zero;
													this.position = this.oldPosition;
													this.ai[1] += 1f;
													if (this.ai[1] >= 5f)
													{
														this.HitEffect(0, 9999.0);
														this.active = false;
													}
													return;
												}
												this.rotation = this.velocity.ToRotation() - 1.57079637f;
												if (this.type == 522)
												{
													if (this.localAI[0] == 0f)
													{
														this.localAI[0] = 1f;
														this.velocity.X = this.ai[2];
														this.velocity.Y = this.ai[3];
														for (int num2024 = 0; num2024 < 13; num2024++)
														{
															int num2025 = Dust.NewDust(this.position, this.width, this.height, 261, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, default(Color), 2.5f);
															Main.dust[num2025].noGravity = true;
															Main.dust[num2025].fadeIn = 1f;
															Main.dust[num2025].velocity *= 4f;
															Main.dust[num2025].noLight = true;
														}
													}
													for (int num2026 = 0; num2026 < 2; num2026++)
													{
														if (Main.rand.Next(10 - (int)Math.Min(7f, this.velocity.Length())) < 1)
														{
															int num2027 = Dust.NewDust(this.position, this.width, this.height, 261, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, default(Color), 2.5f);
															Main.dust[num2027].noGravity = true;
															Main.dust[num2027].velocity *= 0.2f;
															Main.dust[num2027].fadeIn = 0.4f;
															if (Main.rand.Next(6) == 0)
															{
																Main.dust[num2027].velocity *= 5f;
																Main.dust[num2027].noLight = true;
															}
															else
															{
																Main.dust[num2027].velocity = base.DirectionFrom(Main.dust[num2027].position) * Main.dust[num2027].velocity.Length();
															}
														}
													}
													this.dontTakeDamage = (this.ai[0] >= 0f && this.ai[0] <= 20f);
													if (this.ai[0] >= 0f)
													{
														this.ai[0] += 1f;
														if (this.ai[0] > 60f)
														{
															this.velocity = this.velocity.RotatedBy((double)this.ai[1], default(Vector2));
														}
														if (this.ai[0] > 120f)
														{
															this.velocity *= 0.98f;
														}
														if (this.velocity.Length() < 0.2f)
														{
															this.velocity = Vector2.Zero;
															return;
														}
													}
												}
											}
											else if (this.aiStyle == 101)
											{
												float num2028 = 420f;
												float num2029 = 120f;
												int num2030 = 1;
												float value98 = 0f;
												float value99 = 1f;
												float num2031 = 4f;
												bool flag196 = this.ai[1] < 0f || !Main.npc[(int)this.ai[0]].active;
												if (Main.npc[(int)this.ai[0]].type == 439)
												{
													if (Main.npc[(int)this.ai[0]].life < Main.npc[(int)this.ai[0]].lifeMax / 2)
													{
														num2030 = 2;
													}
													if (Main.npc[(int)this.ai[0]].life < Main.npc[(int)this.ai[0]].lifeMax / 4)
													{
														num2030 = 3;
													}
												}
												else
												{
													flag196 = true;
												}
												this.ai[1] += (float)num2030;
												float num2032 = this.ai[1] / num2029;
												num2032 = MathHelper.Clamp(num2032, 0f, 1f);
												this.position = base.Center;
												this.scale = MathHelper.Lerp(value98, value99, num2032);
												base.Center = this.position;
												this.alpha = (int)(255f - num2032 * 255f);
												if (Main.rand.Next(6) == 0)
												{
													Vector2 spinningpoint11 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
													Dust dust29 = Main.dust[Dust.NewDust(base.Center - spinningpoint11 * 20f, 0, 0, 27, 0f, 0f, 0, default(Color), 1f)];
													dust29.noGravity = true;
													dust29.position = base.Center - spinningpoint11 * (float)Main.rand.Next(10, 21) * this.scale;
													dust29.velocity = spinningpoint11.RotatedBy(1.5707963705062866, default(Vector2)) * 4f;
													dust29.scale = 0.5f + Main.rand.NextFloat();
													dust29.fadeIn = 0.5f;
												}
												if (Main.rand.Next(6) == 0)
												{
													Vector2 spinningpoint12 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
													Dust dust30 = Main.dust[Dust.NewDust(base.Center - spinningpoint12 * 30f, 0, 0, 240, 0f, 0f, 0, default(Color), 1f)];
													dust30.noGravity = true;
													dust30.position = base.Center - spinningpoint12 * 20f * this.scale;
													dust30.velocity = spinningpoint12.RotatedBy(-1.5707963705062866, default(Vector2)) * 2f;
													dust30.scale = 0.5f + Main.rand.NextFloat();
													dust30.fadeIn = 0.5f;
												}
												if (Main.rand.Next(6) == 0)
												{
													Vector2 vector289 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
													Dust dust31 = Main.dust[Dust.NewDust(base.Center - vector289 * 30f, 0, 0, 240, 0f, 0f, 0, default(Color), 1f)];
													dust31.position = base.Center - vector289 * 20f * this.scale;
													dust31.velocity = Vector2.Zero;
													dust31.scale = 0.5f + Main.rand.NextFloat();
													dust31.fadeIn = 0.5f;
													dust31.noLight = true;
												}
												this.localAI[0] += 0.05235988f;
												this.localAI[1] = 0.25f + Vector2.UnitY.RotatedBy((double)(this.ai[1] * 6.28318548f / 60f), default(Vector2)).Y * 0.25f;
												if (this.ai[1] >= num2028)
												{
													flag196 = true;
													if (Main.netMode != 1)
													{
														for (int num2033 = 0; num2033 < 4; num2033++)
														{
															Vector2 vector290 = new Vector2(0f, -num2031).RotatedBy((double)(1.57079637f * (float)num2033), default(Vector2));
															Projectile.NewProjectile(base.Center.X, base.Center.Y, vector290.X, vector290.Y, 593, this.damage, 0f, Main.myPlayer, 0f, 0f);
														}
													}
												}
												if (flag196)
												{
													this.HitEffect(0, 9999.0);
													this.active = false;
													return;
												}
											}
											else if (this.aiStyle == 102)
											{
												bool flag197 = false;
												bool flag198 = false;
												bool flag199 = true;
												bool flag200 = false;
												int num2034 = 4;
												int num2035 = 3;
												int num2036 = 0;
												float num2037 = 0.2f;
												float num2038 = 2f;
												float num2039 = -0.2f;
												float num2040 = -4f;
												bool flag201 = true;
												float num2041 = 2f;
												float num2042 = 0.1f;
												float num2043 = 1f;
												float num2044 = 0.04f;
												bool flag202 = false;
												float scaleFactor40 = 0.96f;
												bool flag203 = true;
												if (this.type == 541)
												{
													flag201 = false;
													this.rotation = this.velocity.X * 0.04f;
													this.spriteDirection = ((this.direction > 0) ? 1 : -1);
													num2036 = 3;
													num2039 = -0.1f;
													num2037 = 0.1f;
													float num2045 = (float)this.life / (float)this.lifeMax;
													num2041 += (1f - num2045) * 2f;
													num2042 += (1f - num2045) * 0.02f;
													if (num2045 < 0.5f)
													{
														this.knockBackResist = 0f;
													}
													Vector2 vector291 = base.BottomLeft + new Vector2(0f, -12f);
													Vector2 bottomRight = base.BottomRight;
													Vector2 value100 = new Vector2((float)(-(float)this.spriteDirection * 10), -4f);
													Color color = new Color(222, 108, 48) * 0.7f;
													float num2046 = -0.3f + MathHelper.Max(this.velocity.Y * 2f, 0f);
													for (int num2047 = 0; num2047 < 2; num2047++)
													{
														if (Main.rand.Next(2) != 0)
														{
															Dust dust32 = Main.dust[Dust.NewDust(base.Bottom, 0, 0, 268, 0f, 0f, 0, default(Color), 1f)];
															dust32.position = new Vector2(MathHelper.Lerp(vector291.X, bottomRight.X, Main.rand.NextFloat()), MathHelper.Lerp(vector291.Y, bottomRight.Y, Main.rand.NextFloat())) + value100;
															if (num2047 == 1)
															{
																dust32.position = base.Bottom + Utils.RandomVector2(Main.rand, -6f, 6f);
															}
															dust32.color = color;
															dust32.scale = 0.8f;
															Dust expr_6A3C7_cp_0 = dust32;
															expr_6A3C7_cp_0.velocity.Y = expr_6A3C7_cp_0.velocity.Y + num2046;
															Dust expr_6A3E0_cp_0 = dust32;
															expr_6A3E0_cp_0.velocity.X = expr_6A3E0_cp_0.velocity.X + (float)this.spriteDirection * 0.2f;
														}
													}
													this.localAI[2] = 0f;
													if (this.ai[0] < 0f)
													{
														this.ai[0] = MathHelper.Min(this.ai[0] + 1f, 0f);
													}
													if (this.ai[0] > 0f)
													{
														flag203 = false;
														flag202 = true;
														this.ai[0] += 1f;
														if (this.ai[0] >= 135f)
														{
															this.ai[0] = -300f;
															this.netUpdate = true;
														}
														Vector2 _ = base.Center + Vector2.UnitX * (float)this.direction * 200f;
														Vector2 vector292 = base.Center + Vector2.UnitX * (float)this.direction * 50f - Vector2.UnitY * 6f;
														if (this.ai[0] == 54f && Main.netMode != 1)
														{
															List<Point> list13 = new List<Point>();
															Vector2 vec12 = Main.player[this.target].Center + new Vector2(Main.player[this.target].velocity.X * 30f, 0f);
															Point point18 = vec12.ToTileCoordinates();
															int num2048 = 0;
															while (num2048 < 1000 && list13.Count < 3)
															{
																bool flag204 = false;
																int num2049 = Main.rand.Next(point18.X - 30, point18.X + 30 + 1);
																foreach (Point current7 in list13)
																{
																	if (Math.Abs(current7.X - num2049) < 10)
																	{
																		flag204 = true;
																		break;
																	}
																}
																if (!flag204)
																{
																	int startY = point18.Y - 20;
																	int num2050;
																	int num2051;
																	Collision.ExpandVertically(num2049, startY, out num2050, out num2051, 1, 51);
																	if (StrayMethods.CanSpawnSandstormHostile(new Vector2((float)num2049, (float)(num2051 - 15)) * 16f, 15, 15))
																	{
																		list13.Add(new Point(num2049, num2051 - 15));
																	}
																}
																num2048++;
															}
															foreach (Point current8 in list13)
															{
																Projectile.NewProjectile((float)(current8.X * 16), (float)(current8.Y * 16), 0f, 0f, 658, 0, 0f, Main.myPlayer, 0f, 0f);
															}
														}
														new Vector2(0.9f, 2f);
														if (this.ai[0] < 114f && this.ai[0] > 0f)
														{
															List<Vector2> list14 = new List<Vector2>();
															for (int num2052 = 0; num2052 < 1000; num2052++)
															{
																Projectile projectile9 = Main.projectile[num2052];
																if (projectile9.active && projectile9.type == 658)
																{
																	list14.Add(projectile9.Center);
																}
															}
															Vector2 value101 = new Vector2(0f, 1500f);
															float num2053 = (this.ai[0] - 54f) / 30f;
															if (num2053 < 0.95f && num2053 >= 0f)
															{
																foreach (Vector2 current9 in list14)
																{
																	Vector2 value102 = Vector2.CatmullRom(vector292 + value101, vector292, current9, current9 + value101, num2053);
																	Vector2 value103 = Vector2.CatmullRom(vector292 + value101, vector292, current9, current9 + value101, num2053 + 0.05f);
																	float num2054 = num2053;
																	if (num2054 > 0.5f)
																	{
																		num2054 = 1f - num2054;
																	}
																	float num2055 = 2f;
																	if (Vector2.Distance(value102, value103) > 5f)
																	{
																		num2055 = 3f;
																	}
																	if (Vector2.Distance(value102, value103) > 10f)
																	{
																		num2055 = 4f;
																	}
																	for (float num2056 = 0f; num2056 < num2055; num2056 += 1f)
																	{
																		Dust dust33 = Main.dust[Dust.NewDust(vector292, 0, 0, 269, 0f, 0f, 0, default(Color), 1f)];
																		dust33.position = Vector2.Lerp(value102, value103, num2056 / num2055) + Utils.RandomVector2(Main.rand, -2f, 2f);
																		dust33.noLight = true;
																		dust33.scale = 0.3f + num2053;
																	}
																}
															}
														}
														float arg_6A9C0_0 = this.ai[0];
													}
													if (this.ai[0] == 0f)
													{
														this.ai[0] = 1f;
														this.netUpdate = true;
														flag202 = true;
													}
												}
												if (this.justHit)
												{
													this.localAI[2] = 0f;
												}
												if (!flag198)
												{
													if (this.localAI[2] >= 0f)
													{
														float num2057 = 16f;
														bool flag205 = false;
														bool flag206 = false;
														if (this.position.X > this.localAI[0] - num2057 && this.position.X < this.localAI[0] + num2057)
														{
															flag205 = true;
														}
														else if ((this.velocity.X < 0f && this.direction > 0) || (this.velocity.X > 0f && this.direction < 0))
														{
															flag205 = true;
															num2057 += 24f;
														}
														if (this.position.Y > this.localAI[1] - num2057 && this.position.Y < this.localAI[1] + num2057)
														{
															flag206 = true;
														}
														if (flag205 && flag206)
														{
															this.localAI[2] += 1f;
															if (this.localAI[2] >= 30f && num2057 == 16f)
															{
																flag197 = true;
															}
															if (this.localAI[2] >= 60f)
															{
																this.localAI[2] = -180f;
																this.direction *= -1;
																this.velocity.X = this.velocity.X * -1f;
																this.collideX = false;
															}
														}
														else
														{
															this.localAI[0] = this.position.X;
															this.localAI[1] = this.position.Y;
															this.localAI[2] = 0f;
														}
														if (flag203)
														{
															this.TargetClosest(true);
														}
													}
													else
													{
														this.localAI[2] += 1f;
														this.direction = ((Main.player[this.target].Center.X > base.Center.X) ? 1 : -1);
													}
												}
												int num2058 = (int)((this.position.X + (float)(this.width / 2)) / 16f) + this.direction * 2;
												int num2059 = (int)((this.position.Y + (float)this.height) / 16f);
												int num2060 = (int)base.Bottom.Y / 16;
												int num2061 = (int)base.Bottom.X / 16;
												if (flag202)
												{
													this.velocity *= scaleFactor40;
													return;
												}
												for (int num2062 = num2059; num2062 < num2059 + num2034; num2062++)
												{
													if (Main.tile[num2058, num2062] == null)
													{
														Main.tile[num2058, num2062] = new Tile();
													}
													if ((Main.tile[num2058, num2062].nactive() && Main.tileSolid[(int)Main.tile[num2058, num2062].type]) || Main.tile[num2058, num2062].liquid > 0)
													{
														if (num2062 <= num2059 + 1)
														{
															flag200 = true;
														}
														flag199 = false;
														break;
													}
												}
												for (int num2063 = num2060; num2063 < num2060 + num2036; num2063++)
												{
													if (Main.tile[num2061, num2063] == null)
													{
														Main.tile[num2061, num2063] = new Tile();
													}
													if ((Main.tile[num2061, num2063].nactive() && Main.tileSolid[(int)Main.tile[num2061, num2063].type]) || Main.tile[num2061, num2063].liquid > 0)
													{
														flag200 = true;
														flag199 = false;
														break;
													}
												}
												if (flag201)
												{
													for (int num2064 = num2059 - num2035; num2064 < num2059; num2064++)
													{
														if (Main.tile[num2058, num2064] == null)
														{
															Main.tile[num2058, num2064] = new Tile();
														}
														if ((Main.tile[num2058, num2064].nactive() && Main.tileSolid[(int)Main.tile[num2058, num2064].type]) || Main.tile[num2058, num2064].liquid > 0)
														{
															flag200 = false;
															flag197 = true;
															break;
														}
													}
												}
												if (flag197)
												{
													flag200 = false;
													flag199 = true;
												}
												if (flag199)
												{
													this.velocity.Y = this.velocity.Y + num2037;
													if (this.velocity.Y > num2038)
													{
														this.velocity.Y = num2038;
													}
												}
												else
												{
													if ((this.directionY < 0 && this.velocity.Y > 0f) || flag200)
													{
														this.velocity.Y = this.velocity.Y + num2039;
													}
													if (this.velocity.Y < num2040)
													{
														this.velocity.Y = num2040;
													}
												}
												if (this.collideX)
												{
													this.velocity.X = this.oldVelocity.X * -0.4f;
													if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 1f)
													{
														this.velocity.X = 1f;
													}
													if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -1f)
													{
														this.velocity.X = -1f;
													}
												}
												if (this.collideY)
												{
													this.velocity.Y = this.oldVelocity.Y * -0.25f;
													if (this.velocity.Y > 0f && this.velocity.Y < 1f)
													{
														this.velocity.Y = 1f;
													}
													if (this.velocity.Y < 0f && this.velocity.Y > -1f)
													{
														this.velocity.Y = -1f;
													}
												}
												if (this.direction == -1 && this.velocity.X > -num2041)
												{
													this.velocity.X = this.velocity.X - num2042;
													if (this.velocity.X > num2041)
													{
														this.velocity.X = this.velocity.X - num2042;
													}
													else if (this.velocity.X > 0f)
													{
														this.velocity.X = this.velocity.X + num2042 / 2f;
													}
													if (this.velocity.X < -num2041)
													{
														this.velocity.X = -num2041;
													}
												}
												else if (this.direction == 1 && this.velocity.X < num2041)
												{
													this.velocity.X = this.velocity.X + num2042;
													if (this.velocity.X < -num2041)
													{
														this.velocity.X = this.velocity.X + num2042;
													}
													else if (this.velocity.X < 0f)
													{
														this.velocity.X = this.velocity.X - num2042 / 2f;
													}
													if (this.velocity.X > num2041)
													{
														this.velocity.X = num2041;
													}
												}
												if (this.directionY == -1 && this.velocity.Y > -num2043)
												{
													this.velocity.Y = this.velocity.Y - num2044;
													if (this.velocity.Y > num2043)
													{
														this.velocity.Y = this.velocity.Y - num2044 * 1.25f;
													}
													else if (this.velocity.Y > 0f)
													{
														this.velocity.Y = this.velocity.Y + num2044 * 0.75f;
													}
													if (this.velocity.Y < -num2043)
													{
														this.velocity.Y = -num2041;
														return;
													}
												}
												else if (this.directionY == 1 && this.velocity.Y < num2043)
												{
													this.velocity.Y = this.velocity.Y + num2044;
													if (this.velocity.Y < -num2043)
													{
														this.velocity.Y = this.velocity.Y + num2044 * 1.25f;
													}
													else if (this.velocity.Y < 0f)
													{
														this.velocity.Y = this.velocity.Y - num2044 * 0.75f;
													}
													if (this.velocity.Y > num2043)
													{
														this.velocity.Y = num2043;
														return;
													}
												}
											}
											else if (this.aiStyle == 103)
											{
												if (this.direction == 0)
												{
													this.TargetClosest(true);
												}
												Point pt = base.Center.ToTileCoordinates();
												Tile tileSafely7 = Framing.GetTileSafely(pt);
												bool flag207 = tileSafely7.nactive() && (TileID.Sets.Conversion.Sand[(int)tileSafely7.type] || TileID.Sets.Conversion.Sandstone[(int)tileSafely7.type] || TileID.Sets.Conversion.HardenedSand[(int)tileSafely7.type]);
												flag207 |= this.wet;
												bool flag208 = false;
												this.TargetClosest(false);
												Vector2 vector293 = this.targetRect.Center.ToVector2();
												if (Main.player[this.target].velocity.Y > -0.1f && !Main.player[this.target].dead && base.Distance(vector293) > 150f)
												{
													flag208 = true;
												}
												if (this.localAI[0] == -1f && !flag207)
												{
													this.localAI[0] = 20f;
												}
												if (this.localAI[0] > 0f)
												{
													this.localAI[0] -= 1f;
												}
												if (flag207)
												{
													if (this.soundDelay == 0)
													{
														float num2065 = base.Distance(vector293) / 40f;
														if (num2065 < 10f)
														{
															num2065 = 10f;
														}
														if (num2065 > 20f)
														{
															num2065 = 20f;
														}
														this.soundDelay = (int)num2065;
														Main.PlaySound(15, base.Center, 4);
													}
													float arg_6B522_0 = this.ai[1];
													bool flag209 = false;
													pt = (base.Center + new Vector2(0f, 24f)).ToTileCoordinates();
													tileSafely7 = Framing.GetTileSafely(pt.X, pt.Y - 2);
													if (tileSafely7.nactive() && (TileID.Sets.Conversion.Sand[(int)tileSafely7.type] || TileID.Sets.Conversion.Sandstone[(int)tileSafely7.type] || TileID.Sets.Conversion.HardenedSand[(int)tileSafely7.type]))
													{
														flag209 = true;
													}
													this.ai[1] = (float)flag209.ToInt();
													if (this.ai[2] < 30f)
													{
														this.ai[2] += 1f;
													}
													if (flag208)
													{
														this.TargetClosest(true);
														this.velocity.X = this.velocity.X + (float)this.direction * 0.15f;
														this.velocity.Y = this.velocity.Y + (float)this.directionY * 0.15f;
														if (this.velocity.X > 5f)
														{
															this.velocity.X = 5f;
														}
														if (this.velocity.X < -5f)
														{
															this.velocity.X = -5f;
														}
														if (this.velocity.Y > 3f)
														{
															this.velocity.Y = 3f;
														}
														if (this.velocity.Y < -3f)
														{
															this.velocity.Y = -3f;
														}
														Vector2 vec13 = base.Center + this.velocity.SafeNormalize(Vector2.Zero) * base.Size.Length() / 2f + this.velocity;
														pt = vec13.ToTileCoordinates();
														tileSafely7 = Framing.GetTileSafely(pt);
														bool flag210 = tileSafely7.nactive() && (TileID.Sets.Conversion.Sand[(int)tileSafely7.type] || TileID.Sets.Conversion.Sandstone[(int)tileSafely7.type] || TileID.Sets.Conversion.HardenedSand[(int)tileSafely7.type]);
														if (!flag210 && this.wet)
														{
															flag210 = (tileSafely7.liquid > 0);
														}
														if (!flag210 && Math.Sign(this.velocity.X) == this.direction && base.Distance(vector293) < 400f && (this.ai[2] >= 30f || this.ai[2] < 0f))
														{
															if (this.localAI[0] == 0f)
															{
																Main.PlaySound(14, base.Center, 542);
																this.localAI[0] = -1f;
															}
															this.ai[2] = -30f;
															Vector2 vector294 = base.DirectionTo(vector293 + new Vector2(0f, -80f));
															this.velocity = vector294 * 12f;
														}
													}
													else
													{
														if (this.collideX)
														{
															this.velocity.X = this.velocity.X * -1f;
															this.direction *= -1;
															this.netUpdate = true;
														}
														if (this.collideY)
														{
															this.netUpdate = true;
															this.velocity.Y = this.velocity.Y * -1f;
															this.directionY = Math.Sign(this.velocity.Y);
															this.ai[0] = (float)this.directionY;
														}
														float num2066 = 6f;
														this.velocity.X = this.velocity.X + (float)this.direction * 0.1f;
														if (this.velocity.X < -num2066 || this.velocity.X > num2066)
														{
															this.velocity.X = this.velocity.X * 0.95f;
														}
														if (flag209)
														{
															this.ai[0] = -1f;
														}
														else
														{
															this.ai[0] = 1f;
														}
														float num2067 = 0.06f;
														float num2068 = 0.01f;
														if (this.ai[0] == -1f)
														{
															this.velocity.Y = this.velocity.Y - num2068;
															if (this.velocity.Y < -num2067)
															{
																this.ai[0] = 1f;
															}
														}
														else
														{
															this.velocity.Y = this.velocity.Y + num2068;
															if (this.velocity.Y > num2067)
															{
																this.ai[0] = -1f;
															}
														}
														if (this.velocity.Y > 0.4f || this.velocity.Y < -0.4f)
														{
															this.velocity.Y = this.velocity.Y * 0.95f;
														}
													}
												}
												else
												{
													if (this.velocity.Y == 0f)
													{
														if (flag208)
														{
															this.TargetClosest(true);
														}
														float num2069 = 1f;
														this.velocity.X = this.velocity.X + (float)this.direction * 0.1f;
														if (this.velocity.X < -num2069 || this.velocity.X > num2069)
														{
															this.velocity.X = this.velocity.X * 0.95f;
														}
													}
													this.velocity.Y = this.velocity.Y + 0.3f;
													if (this.velocity.Y > 10f)
													{
														this.velocity.Y = 10f;
													}
													this.ai[0] = 1f;
												}
												this.rotation = this.velocity.Y * (float)this.direction * 0.1f;
												if (this.rotation < -0.2f)
												{
													this.rotation = -0.2f;
												}
												if (this.rotation > 0.2f)
												{
													this.rotation = 0.2f;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}

		public void ReflectProjectiles(Rectangle myRect)
		{
			for (int i = 0; i < 1000; i++)
			{
				if (Main.projectile[i].active && Main.projectile[i].CanReflect())
				{
					Rectangle hitbox = Main.projectile[i].Hitbox;
					if (myRect.Intersects(hitbox))
					{
						this.ReflectProjectile(i);
					}
				}
			}
		}

		public void ReflectProjectile(int i)
		{
			Main.PlaySound(3, (int)Main.projectile[i].position.X, (int)Main.projectile[i].position.Y, this.soundHit);
			for (int j = 0; j < 3; j++)
			{
				int num = Dust.NewDust(Main.projectile[i].position, Main.projectile[i].width, Main.projectile[i].height, 31, 0f, 0f, 0, default(Color), 1f);
				Main.dust[num].velocity *= 0.3f;
			}
			Main.projectile[i].hostile = true;
			Main.projectile[i].friendly = false;
			Vector2 vector = Main.player[Main.projectile[i].owner].Center - Main.projectile[i].Center;
			vector.Normalize();
			vector *= Main.projectile[i].oldVelocity.Length();
			Main.projectile[i].velocity = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
			Main.projectile[i].velocity.Normalize();
			Main.projectile[i].velocity *= vector.Length();
			Main.projectile[i].velocity += vector * 20f;
			Main.projectile[i].velocity.Normalize();
			Main.projectile[i].velocity *= vector.Length();
			Main.projectile[i].damage /= 2;
			Main.projectile[i].penetrate = 1;
		}

		public int GetShootingFrame(float circleY)
		{
			int num = -4;
			if (circleY < -0.3f)
			{
				num = 1;
			}
			if (circleY < -0.1f)
			{
				num = 0;
			}
			if (circleY > 0.1f)
			{
				num = 2;
			}
			if (circleY > 0.3f)
			{
				num = 3;
			}
			if (this.type == 228 || this.type == 229 || this.type == 209 || this.type == 22 || this.type == 368)
			{
				if (num == -4)
				{
					num = 1;
				}
				if (circleY >= -0.1f)
				{
					num++;
				}
			}
			return num;
		}

		public Tuple<Vector2, float> GetSwingStats(int swingMax, int swingCurrent, int aimDir, int itemWidth, int itemHeight)
		{
			Vector2 zero = Vector2.Zero;
			if ((double)swingCurrent < (double)swingMax * 0.333)
			{
				float num = 10f;
				if (itemWidth > 32)
				{
					num = 14f;
				}
				if (itemWidth >= 52)
				{
					num = 24f;
				}
				if (itemWidth >= 64)
				{
					num = 28f;
				}
				if (itemWidth >= 92)
				{
					num = 38f;
				}
				zero.X = base.Center.X + ((float)itemWidth * 0.5f - num) * (float)aimDir;
				zero.Y = this.position.Y + 24f;
			}
			else if ((double)swingCurrent < (double)swingMax * 0.666)
			{
				float num2 = 10f;
				if (itemWidth > 32)
				{
					num2 = 18f;
				}
				if (itemWidth >= 52)
				{
					num2 = 24f;
				}
				if (itemWidth >= 64)
				{
					num2 = 28f;
				}
				if (itemWidth >= 92)
				{
					num2 = 38f;
				}
				zero.X = base.Center.X + ((float)itemWidth * 0.5f - num2) * (float)aimDir;
				num2 = 10f;
				if (itemHeight > 32)
				{
					num2 = 8f;
				}
				if (itemHeight > 52)
				{
					num2 = 12f;
				}
				if (itemHeight > 64)
				{
					num2 = 14f;
				}
				zero.Y = this.position.Y + num2;
			}
			else
			{
				float num3 = 6f;
				if (itemWidth > 32)
				{
					num3 = 14f;
				}
				if (itemWidth >= 48)
				{
					num3 = 18f;
				}
				if (itemWidth >= 52)
				{
					num3 = 24f;
				}
				if (itemWidth >= 64)
				{
					num3 = 28f;
				}
				if (itemWidth >= 92)
				{
					num3 = 38f;
				}
				zero.X = base.Center.X - ((float)itemWidth * 0.5f - num3) * (float)aimDir;
				num3 = 10f;
				if (itemHeight > 32)
				{
					num3 = 10f;
				}
				if (itemHeight > 52)
				{
					num3 = 12f;
				}
				if (itemHeight > 64)
				{
					num3 = 14f;
				}
				zero.Y = this.position.Y + num3;
			}
			float item = ((float)swingCurrent / (float)swingMax - 0.5f) * (float)(-(float)aimDir) * 3.5f - (float)aimDir * 0.3f;
			return Tuple.Create<Vector2, float>(zero, item);
		}

		public void TweakSwingStats(int swingMax, int swingCurrent, int aimDir, ref Rectangle itemRectangle)
		{
			if ((double)swingCurrent < (double)swingMax * 0.333)
			{
				if (aimDir == -1)
				{
					itemRectangle.X -= (int)((double)itemRectangle.Width * 1.4 - (double)itemRectangle.Width);
				}
				itemRectangle.Width = (int)((double)itemRectangle.Width * 1.4);
				itemRectangle.Y += (int)((double)itemRectangle.Height * 0.5);
				itemRectangle.Height = (int)((double)itemRectangle.Height * 1.1);
				return;
			}
			if ((double)swingCurrent < (double)swingMax * 0.666)
			{
				return;
			}
			if (aimDir == 1)
			{
				itemRectangle.X -= (int)((double)itemRectangle.Width * 1.2);
			}
			itemRectangle.Width *= 2;
			itemRectangle.Y -= (int)((double)itemRectangle.Height * 1.4 - (double)itemRectangle.Height);
			itemRectangle.Height = (int)((double)itemRectangle.Height * 1.4);
		}

		public bool UsesPartyHat()
		{
			return this.frame.Height > 0 && this.townNPC && BirthdayParty.PartyIsUp && this.type != 441 && this.type != 37 && NPCLoader.UsesPartyHat(this);
		}

		public PartyHatColor GetPartyHatColor()
		{
			if (!this.UsesPartyHat() || string.IsNullOrEmpty(this.displayName))
			{
				return PartyHatColor.None;
			}
			int num = this.displayName.Length + (int)this.displayName[0];
			int num2 = Main.moonPhase;
			if (Main.dayTime)
			{
				num2--;
			}
			num += this.whoAmI;
			num += num2 * (this.whoAmI % 2 == 0).ToDirectionInt();
			if (num < 0)
			{
				num += 5;
			}
			return (PartyHatColor)(num % 5);
		}

		public void FindFrame()
		{
			int num = 1;
			if (!Main.dedServ)
			{
				if (!Main.NPCLoaded[this.type] || Main.npcTexture[this.type] == null)
				{
					return;
				}
				num = Main.npcTexture[this.type].Height / Main.npcFrameCount[this.type];
			}
			NPCLoader.FindFrame(this, num);
		}

		public void VanillaFindFrame(int num)
		{
			int num2 = 0;
			if (this.aiAction == 0)
			{
				if (this.velocity.Y < 0f)
				{
					num2 = 2;
				}
				else if (this.velocity.Y > 0f)
				{
					num2 = 3;
				}
				else if (this.velocity.X != 0f)
				{
					num2 = 1;
				}
				else
				{
					num2 = 0;
				}
			}
			else if (this.aiAction == 1)
			{
				num2 = 4;
			}
			if (this.type == 338 || this.type == 339 || this.type == 340 || this.type == 17 || this.type == 18 || this.type == 19 || this.type == 20 || this.type == 22 || this.type == 142 || this.type == 353 || this.type == 178 || this.type == 38 || this.type == 26 || this.type == 27 || this.type == 28 || this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 21 || this.type == 44 || this.type == 54 || this.type == 37 || this.type == 73 || this.type == 77 || this.type == 78 || this.type == 79 || this.type == 80 || this.type == 104 || this.type == 107 || this.type == 108 || this.type == 120 || this.type == 124 || this.type == 140 || this.type == 159 || this.type == 160 || this.type == 167 || this.type == 181 || this.type == 185 || this.type == 196 || this.type == 197 || this.type == 198 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 207 || this.type == 208 || this.type == 209 || this.type == 212 || this.type == 213 || this.type == 227 || this.type == 228 || this.type == 229 || this.type == 287 || (this.type >= 310 && this.type <= 314) || (this.type >= 322 && this.type <= 324) || this.type == 326 || this.type == 368 || this.type == 369 || this.type == 453 || this.type == 460 || this.type == 462 || this.type == 463 || this.type == 489 || this.type == 441 || this.type == 534)
			{
				int num3 = (this.townNPC || this.type == 453) ? NPCID.Sets.ExtraFramesCount[this.type] : 0;
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					int num4 = Main.npcFrameCount[this.type] - NPCID.Sets.AttackFrameCount[this.type];
					if (this.ai[0] == 2f)
					{
						this.frameCounter += 1.0;
						if (this.frame.Y / num == num4 - 1 && this.frameCounter >= 5.0)
						{
							this.frame.Y = 0;
							this.frameCounter = 0.0;
						}
						else if (this.frame.Y / num == 0 && this.frameCounter >= 40.0)
						{
							this.frame.Y = num * (num4 - 1);
							this.frameCounter = 0.0;
						}
						else if (this.frame.Y != 0 && this.frame.Y != num * (num4 - 1))
						{
							this.frame.Y = 0;
							this.frameCounter = 0.0;
						}
					}
					else if (this.ai[0] == 11f)
					{
						this.frameCounter += 1.0;
						if (this.frame.Y / num == num4 - 1 && this.frameCounter >= 20.0)
						{
							if (this.frameCounter == 20.0)
							{
								int num5 = Main.rand.Next(4);
								for (int i = 0; i < 3 + num5; i++)
								{
									int num6 = Dust.NewDust(base.Center + Vector2.UnitX * (float)(-(float)this.direction) * 8f - Vector2.One * 5f + Vector2.UnitY * 8f, 3, 6, 216, (float)(-(float)this.direction), 1f, 0, default(Color), 1f);
									Main.dust[num6].velocity /= 2f;
									Main.dust[num6].scale = 0.8f;
								}
								if (Main.rand.Next(30) == 0)
								{
									int num7 = Gore.NewGore(base.Center + Vector2.UnitX * (float)(-(float)this.direction) * 8f, Vector2.Zero, Main.rand.Next(580, 583), 1f);
									Main.gore[num7].velocity /= 2f;
									Main.gore[num7].velocity.Y = Math.Abs(Main.gore[num7].velocity.Y);
									Main.gore[num7].velocity.X = -Math.Abs(Main.gore[num7].velocity.X) * (float)this.direction;
								}
							}
							if (this.frameCounter >= 40.0 && Main.rand.Next(20) == 0)
							{
								this.frame.Y = 0;
								this.frameCounter = 0.0;
							}
						}
						else if (this.frame.Y / num == 0 && this.frameCounter >= 20.0)
						{
							this.frame.Y = num * (num4 - 1);
							this.frameCounter = 0.0;
							if (Main.netMode != 1)
							{
								EmoteBubble.NewBubble(89, new WorldUIAnchor(this), 30);
							}
						}
						else if (this.frame.Y != 0 && this.frame.Y != num * (num4 - 1))
						{
							this.frame.Y = 0;
							this.frameCounter = 0.0;
						}
					}
					else if (this.ai[0] == 5f)
					{
						this.frame.Y = num * (num4 - 3);
						this.frameCounter = 0.0;
					}
					else if (this.ai[0] == 6f)
					{
						this.frameCounter += 1.0;
						int num8 = this.frame.Y / num;
						switch (num4 - num8)
						{
							case 1:
							case 2:
							case 4:
							case 5:
								break;
							case 3:
							default:
								if (num8 != 0)
								{
									this.frame.Y = 0;
									this.frameCounter = 0.0;
								}
								break;
						}
						int num9;
						if (this.frameCounter < 10.0)
						{
							num9 = 0;
						}
						else if (this.frameCounter < 16.0)
						{
							num9 = num4 - 5;
						}
						else if (this.frameCounter < 46.0)
						{
							num9 = num4 - 4;
						}
						else if (this.frameCounter < 60.0)
						{
							num9 = num4 - 5;
						}
						else if (this.frameCounter < 66.0)
						{
							num9 = 0;
						}
						else if (this.frameCounter < 72.0)
						{
							num9 = num4 - 5;
						}
						else if (this.frameCounter < 102.0)
						{
							num9 = num4 - 4;
						}
						else if (this.frameCounter < 108.0)
						{
							num9 = num4 - 5;
						}
						else if (this.frameCounter < 114.0)
						{
							num9 = 0;
						}
						else if (this.frameCounter < 120.0)
						{
							num9 = num4 - 5;
						}
						else if (this.frameCounter < 150.0)
						{
							num9 = num4 - 4;
						}
						else if (this.frameCounter < 156.0)
						{
							num9 = num4 - 5;
						}
						else if (this.frameCounter < 162.0)
						{
							num9 = 0;
						}
						else if (this.frameCounter < 168.0)
						{
							num9 = num4 - 5;
						}
						else if (this.frameCounter < 198.0)
						{
							num9 = num4 - 4;
						}
						else if (this.frameCounter < 204.0)
						{
							num9 = num4 - 5;
						}
						else if (this.frameCounter < 210.0)
						{
							num9 = 0;
						}
						else if (this.frameCounter < 216.0)
						{
							num9 = num4 - 5;
						}
						else if (this.frameCounter < 246.0)
						{
							num9 = num4 - 4;
						}
						else if (this.frameCounter < 252.0)
						{
							num9 = num4 - 5;
						}
						else if (this.frameCounter < 258.0)
						{
							num9 = 0;
						}
						else if (this.frameCounter < 264.0)
						{
							num9 = num4 - 5;
						}
						else if (this.frameCounter < 294.0)
						{
							num9 = num4 - 4;
						}
						else if (this.frameCounter < 300.0)
						{
							num9 = num4 - 5;
						}
						else
						{
							num9 = 0;
						}
						if (num9 == num4 - 4 && num8 == num4 - 5)
						{
							Vector2 position = base.Center + new Vector2((float)(10 * this.direction), -4f);
							for (int j = 0; j < 8; j++)
							{
								int num10 = Main.rand.Next(139, 143);
								int num11 = Dust.NewDust(position, 0, 0, num10, this.velocity.X + (float)this.direction, this.velocity.Y - 2.5f, 0, default(Color), 1.2f);
								Dust expr_C8E_cp_0 = Main.dust[num11];
								expr_C8E_cp_0.velocity.X = expr_C8E_cp_0.velocity.X + (float)this.direction * 1.5f;
								Main.dust[num11].position -= new Vector2(4f);
								Main.dust[num11].velocity *= 2f;
								Main.dust[num11].scale = 0.7f + Main.rand.NextFloat() * 0.3f;
							}
						}
						this.frame.Y = num * num9;
						if (this.frameCounter >= 300.0)
						{
							this.frameCounter = 0.0;
						}
					}
					else if (this.ai[0] == 7f)
					{
						this.frameCounter += 1.0;
						int num12 = this.frame.Y / num;
						switch (num4 - num12)
						{
							case 1:
							case 2:
							case 4:
							case 5:
								break;
							case 3:
							default:
								if (num12 != 0)
								{
									this.frame.Y = 0;
									this.frameCounter = 0.0;
								}
								break;
						}
						int num13 = 0;
						if (this.frameCounter < 16.0)
						{
							num13 = 0;
						}
						else if (this.frameCounter == 16.0 && Main.netMode != 1)
						{
							EmoteBubble.NewBubbleNPC(new WorldUIAnchor(this), 112, null);
						}
						else if (this.frameCounter < 128.0)
						{
							num13 = ((this.frameCounter % 16.0 < 8.0) ? (num4 - 2) : 0);
						}
						else if (this.frameCounter < 160.0)
						{
							num13 = 0;
						}
						else if (this.frameCounter == 160.0 && Main.netMode != 1)
						{
							EmoteBubble.NewBubbleNPC(new WorldUIAnchor(this), 60, null);
						}
						else if (this.frameCounter < 220.0)
						{
							num13 = ((this.frameCounter % 12.0 < 6.0) ? (num4 - 2) : 0);
						}
						else
						{
							num13 = 0;
						}
						this.frame.Y = num * num13;
						if (this.frameCounter >= 220.0)
						{
							this.frameCounter = 0.0;
						}
					}
					else if (this.ai[0] == 9f)
					{
						this.frameCounter += 1.0;
						int num14 = this.frame.Y / num;
						switch (num4 - num14)
						{
							case 1:
							case 2:
							case 4:
							case 5:
								break;
							case 3:
							default:
								if (num14 != 0)
								{
									this.frame.Y = 0;
									this.frameCounter = 0.0;
								}
								break;
						}
						int num15;
						if (this.frameCounter < 10.0)
						{
							num15 = 0;
						}
						else if (this.frameCounter < 16.0)
						{
							num15 = num4 - 5;
						}
						else
						{
							num15 = num4 - 4;
						}
						if (this.ai[1] < 16f)
						{
							num15 = num4 - 5;
						}
						if (this.ai[1] < 10f)
						{
							num15 = 0;
						}
						this.frame.Y = num * num15;
					}
					else if (this.ai[0] == 10f || this.ai[0] == 13f)
					{
						this.frameCounter += 1.0;
						int num16 = this.frame.Y / num;
						switch (num16 - num4)
						{
							case 0:
							case 1:
							case 2:
							case 3:
								break;
							default:
								if (num16 != 0)
								{
									this.frame.Y = 0;
									this.frameCounter = 0.0;
								}
								break;
						}
						int num17 = 10;
						int num18 = 6;
						int num19;
						if (this.frameCounter < (double)num17)
						{
							num19 = 0;
						}
						else if (this.frameCounter < (double)(num17 + num18))
						{
							num19 = num4;
						}
						else if (this.frameCounter < (double)(num17 + num18 * 2))
						{
							num19 = num4 + 1;
						}
						else if (this.frameCounter < (double)(num17 + num18 * 3))
						{
							num19 = num4 + 2;
						}
						else if (this.frameCounter < (double)(num17 + num18 * 4))
						{
							num19 = num4 + 3;
						}
						else
						{
							num19 = 0;
						}
						this.frame.Y = num * num19;
					}
					else if (this.ai[0] == 15f)
					{
						this.frameCounter += 1.0;
						int num20 = this.frame.Y / num;
						switch (num20 - num4)
						{
							case 0:
							case 1:
							case 2:
							case 3:
								break;
							default:
								if (num20 != 0)
								{
									this.frame.Y = 0;
									this.frameCounter = 0.0;
								}
								break;
						}
						float num21 = this.ai[1] / (float)NPCID.Sets.AttackTime[this.type];
						int num22;
						if (num21 > 0.65f)
						{
							num22 = num4;
						}
						else if (num21 > 0.5f)
						{
							num22 = num4 + 1;
						}
						else if (num21 > 0.35f)
						{
							num22 = num4 + 2;
						}
						else if (num21 > 0f)
						{
							num22 = num4 + 3;
						}
						else
						{
							num22 = 0;
						}
						this.frame.Y = num * num22;
					}
					else if (this.ai[0] == 12f)
					{
						this.frameCounter += 1.0;
						int num23 = this.frame.Y / num;
						switch (num23 - num4)
						{
							case 0:
							case 1:
							case 2:
							case 3:
							case 4:
								break;
							default:
								if (num23 != 0)
								{
									this.frame.Y = 0;
									this.frameCounter = 0.0;
								}
								break;
						}
						int num24 = num4 + this.GetShootingFrame(this.ai[2]);
						this.frame.Y = num * num24;
					}
					else if (this.ai[0] == 14f)
					{
						this.frameCounter += 1.0;
						int num25 = this.frame.Y / num;
						switch (num25 - num4)
						{
							case 0:
							case 1:
								break;
							default:
								if (num25 != 0)
								{
									this.frame.Y = 0;
									this.frameCounter = 0.0;
								}
								break;
						}
						int num26 = 12;
						int num27 = (this.frameCounter % (double)num26 * 2.0 < (double)num26) ? num4 : (num4 + 1);
						this.frame.Y = num * num27;
					}
					else if (this.ai[0] == 3f || this.ai[0] == 4f)
					{
						this.frameCounter += 1.0;
						int num28 = this.frame.Y / num;
						switch (num4 - num28)
						{
							case 1:
							case 2:
							case 4:
							case 5:
								break;
							case 3:
							default:
								if (num28 != 0)
								{
									this.frame.Y = 0;
									this.frameCounter = 0.0;
								}
								break;
						}
						bool flag = this.ai[0] == 3f;
						int num29 = 0;
						int num30 = 0;
						int num31 = -1;
						int num32 = -1;
						if (this.frameCounter < 10.0)
						{
							num29 = 0;
						}
						else if (this.frameCounter < 16.0)
						{
							num29 = num4 - 5;
						}
						else if (this.frameCounter < 46.0)
						{
							num29 = num4 - 4;
						}
						else if (this.frameCounter < 60.0)
						{
							num29 = num4 - 5;
						}
						else if (this.frameCounter < 216.0)
						{
							num29 = 0;
						}
						else if (this.frameCounter == 216.0 && Main.netMode != 1)
						{
							num31 = 70;
						}
						else if (this.frameCounter < 286.0)
						{
							num29 = ((this.frameCounter % 12.0 < 6.0) ? (num4 - 2) : 0);
						}
						else if (this.frameCounter < 320.0)
						{
							num29 = 0;
						}
						else if (this.frameCounter == 320.0 && Main.netMode != 1)
						{
							num31 = 100;
						}
						else if (this.frameCounter < 420.0)
						{
							num29 = ((this.frameCounter % 16.0 < 8.0) ? (num4 - 2) : 0);
						}
						else
						{
							num29 = 0;
						}
						if (this.frameCounter < 70.0)
						{
							num30 = 0;
						}
						else if (this.frameCounter == 70.0 && Main.netMode != 1)
						{
							num32 = 90;
						}
						else if (this.frameCounter < 160.0)
						{
							num30 = ((this.frameCounter % 16.0 < 8.0) ? (num4 - 2) : 0);
						}
						else if (this.frameCounter < 166.0)
						{
							num30 = num4 - 5;
						}
						else if (this.frameCounter < 186.0)
						{
							num30 = num4 - 4;
						}
						else if (this.frameCounter < 200.0)
						{
							num30 = num4 - 5;
						}
						else if (this.frameCounter < 320.0)
						{
							num30 = 0;
						}
						else if (this.frameCounter < 326.0)
						{
							num30 = num4 - 1;
						}
						else
						{
							num30 = 0;
						}
						if (flag)
						{
							if (num31 != -1)
							{
								EmoteBubble.NewBubbleNPC(new WorldUIAnchor(this), num31, new WorldUIAnchor(Main.npc[(int)this.ai[2]]));
							}
							if (num32 != -1)
							{
								EmoteBubble.NewBubbleNPC(new WorldUIAnchor(Main.npc[(int)this.ai[2]]), num32, new WorldUIAnchor(this));
							}
						}
						this.frame.Y = num * (flag ? num29 : num30);
						if (this.frameCounter >= 420.0)
						{
							this.frameCounter = 0.0;
						}
					}
					else if (this.ai[0] == 16f || this.ai[0] == 17f)
					{
						this.frameCounter += 1.0;
						int num33 = this.frame.Y / num;
						switch (num4 - num33)
						{
							case 1:
							case 2:
							case 4:
							case 5:
								break;
							case 3:
							default:
								if (num33 != 0)
								{
									this.frame.Y = 0;
									this.frameCounter = 0.0;
								}
								break;
						}
						bool flag2 = this.ai[0] == 16f;
						int num34 = 0;
						int num35 = -1;
						if (this.frameCounter < 10.0)
						{
							num34 = 0;
						}
						else if (this.frameCounter < 16.0)
						{
							num34 = num4 - 5;
						}
						else if (this.frameCounter < 22.0)
						{
							num34 = num4 - 4;
						}
						else if (this.frameCounter < 28.0)
						{
							num34 = num4 - 5;
						}
						else if (this.frameCounter < 34.0)
						{
							num34 = num4 - 4;
						}
						else if (this.frameCounter < 40.0)
						{
							num34 = num4 - 5;
						}
						else if (this.frameCounter == 40.0 && Main.netMode != 1)
						{
							num35 = 45;
						}
						else if (this.frameCounter < 70.0)
						{
							num34 = num4 - 4;
						}
						else if (this.frameCounter < 76.0)
						{
							num34 = num4 - 5;
						}
						else if (this.frameCounter < 82.0)
						{
							num34 = num4 - 4;
						}
						else if (this.frameCounter < 88.0)
						{
							num34 = num4 - 5;
						}
						else if (this.frameCounter < 94.0)
						{
							num34 = num4 - 4;
						}
						else if (this.frameCounter < 100.0)
						{
							num34 = num4 - 5;
						}
						else if (this.frameCounter == 100.0 && Main.netMode != 1)
						{
							num35 = 45;
						}
						else if (this.frameCounter < 130.0)
						{
							num34 = num4 - 4;
						}
						else if (this.frameCounter < 136.0)
						{
							num34 = num4 - 5;
						}
						else if (this.frameCounter < 142.0)
						{
							num34 = num4 - 4;
						}
						else if (this.frameCounter < 148.0)
						{
							num34 = num4 - 5;
						}
						else if (this.frameCounter < 154.0)
						{
							num34 = num4 - 4;
						}
						else if (this.frameCounter < 160.0)
						{
							num34 = num4 - 5;
						}
						else if (this.frameCounter == 160.0 && Main.netMode != 1)
						{
							num35 = 75;
						}
						else if (this.frameCounter < 220.0)
						{
							num34 = num4 - 4;
						}
						else if (this.frameCounter < 226.0)
						{
							num34 = num4 - 5;
						}
						else
						{
							num34 = 0;
						}
						if (flag2 && num35 != -1)
						{
							int num36 = (int)this.localAI[2];
							int num37 = (int)this.localAI[3];
							int num38 = (int)Main.npc[(int)this.ai[2]].localAI[3];
							int num39 = (int)Main.npc[(int)this.ai[2]].localAI[2];
							int num40 = 3 - num36 - num37;
							int num41 = 0;
							if (this.frameCounter == 40.0)
							{
								num41 = 1;
							}
							if (this.frameCounter == 100.0)
							{
								num41 = 2;
							}
							if (this.frameCounter == 160.0)
							{
								num41 = 3;
							}
							int num42 = 3 - num41;
							int num43 = -1;
							int num44 = 0;
							while (num43 < 0 && ++num44 < 100)
							{
								num43 = Main.rand.Next(2);
								if (num43 == 0 && num39 >= num37)
								{
									num43 = -1;
								}
								if (num43 == 1 && num38 >= num36)
								{
									num43 = -1;
								}
								if (num43 == -1 && num42 <= num40)
								{
									num43 = 2;
								}
							}
							if (num43 == 0)
							{
								Main.npc[(int)this.ai[2]].localAI[3] += 1f;
								num38++;
							}
							if (num43 == 1)
							{
								Main.npc[(int)this.ai[2]].localAI[2] += 1f;
								num39++;
							}
							int num45 = Utils.SelectRandom<int>(Main.rand, new int[]
								{
									38,
									37,
									36
								});
							int num46 = num45;
							if (num43 == 0)
							{
								switch (num45)
								{
									case 36:
										num46 = 38;
										break;
									case 37:
										num46 = 36;
										break;
									case 38:
										num46 = 37;
										break;
								}
							}
							else if (num43 == 1)
							{
								switch (num45)
								{
									case 36:
										num46 = 37;
										break;
									case 37:
										num46 = 38;
										break;
									case 38:
										num46 = 36;
										break;
								}
							}
							if (num42 == 0)
							{
								if (num38 >= 2)
								{
									num45 -= 3;
								}
								if (num39 >= 2)
								{
									num46 -= 3;
								}
							}
							EmoteBubble.NewBubble(num45, new WorldUIAnchor(this), num35);
							EmoteBubble.NewBubble(num46, new WorldUIAnchor(Main.npc[(int)this.ai[2]]), num35);
						}
						this.frame.Y = num * (flag2 ? num34 : num34);
						if (this.frameCounter >= 420.0)
						{
							this.frameCounter = 0.0;
						}
					}
					else if (this.velocity.X == 0f)
					{
						if (this.type == 140 || this.type == 287 || this.type == 489)
						{
							this.frame.Y = num;
							this.frameCounter = 0.0;
						}
						else
						{
							this.frame.Y = 0;
							this.frameCounter = 0.0;
						}
					}
					else
					{
						int num47 = 6;
						if (this.type == 534)
						{
							num47 = 12;
						}
						if (this.type == 489)
						{
							num47 = 8;
							this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
							this.frameCounter += 0.5;
						}
						else
						{
							this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
							this.frameCounter += 1.0;
						}
						if (this.type == 462)
						{
							num47 = 9;
						}
						if (this.frameCounter > (double)num47)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type] - num3)
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else if (this.type == 462)
				{
					this.frameCounter = 0.0;
					if (this.velocity.Y < 0f)
					{
						this.frame.Y = num;
					}
					else
					{
						this.frame.Y = num * 2;
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
					if (this.type == 489 || this.type == 21 || this.type == 31 || this.type == 294 || this.type == 326 || this.type == 295 || this.type == 296 || this.type == 44 || this.type == 77 || this.type == 78 || this.type == 79 || this.type == 80 || this.type == 120 || this.type == 140 || this.type == 159 || this.type == 167 || this.type == 197 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 287 || (this.type >= 322 && this.type <= 324))
					{
						this.frame.Y = 0;
					}
					if (this.type == 181)
					{
						this.frame.Y = num * 14;
					}
				}
			}
			if (this.type >= 494 && this.type <= 495)
			{
				if (this.ai[2] > 0f)
				{
					if (this.ai[2] < 7f)
					{
						this.frame.Y = num * 5;
					}
					else if (this.ai[2] < 14f)
					{
						this.frame.Y = num * 6;
					}
					else if (this.ai[2] < 20f)
					{
						this.frame.Y = num * 7;
					}
				}
				else
				{
					if (this.velocity.Y == 0f)
					{
						if (this.direction == 1)
						{
							this.spriteDirection = 1;
						}
						if (this.direction == -1)
						{
							this.spriteDirection = -1;
						}
					}
					if (this.velocity.Y != 0f || (this.direction == -1 && this.velocity.X > 0f) || (this.direction == 1 && this.velocity.X < 0f))
					{
						this.frameCounter = 0.0;
						if (this.velocity.Y < 0f)
						{
							this.frame.Y = num * 2;
						}
						else
						{
							this.frame.Y = num * 3;
						}
					}
					else if (this.velocity.X == 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = 0;
					}
					else
					{
						this.frameCounter += (double)Math.Abs(this.velocity.X);
						if (this.frameCounter < 8.0)
						{
							this.frame.Y = 0;
						}
						else if (this.frameCounter < 16.0)
						{
							this.frame.Y = num;
						}
						else if (this.frameCounter < 24.0)
						{
							this.frame.Y = num * 2;
						}
						else if (this.frameCounter < 32.0)
						{
							this.frame.Y = num * 3;
						}
						else if (this.frameCounter < 39.0)
						{
							this.frame.Y = num * 4;
						}
						else
						{
							this.frame.Y = num * 4;
							this.frameCounter = 0.0;
						}
					}
				}
			}
			if (this.type == 541)
			{
				if (this.ai[0] > 0f)
				{
					float num48 = this.ai[0];
					if (num48 < 6f)
					{
						this.frame.Y = num * 4;
					}
					else if (num48 < 105f)
					{
						this.frame.Y = num * (int)(num48 / 8f % 4f + 5f);
					}
					else if (num48 < 114f)
					{
						this.frame.Y = num * 9;
					}
					else if (num48 < 135f)
					{
						this.frame.Y = num * (int)((num48 - 99f - 15f) / 7f + 10f);
					}
					else
					{
						this.frame.Y = num;
					}
				}
				else
				{
					this.frameCounter = this.frameCounter + (double)(this.velocity.Length() * 0.1f) + 1.0;
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * 4)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type >= 498 && this.type <= 506)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						this.spriteDirection = this.direction;
						if (this.ai[1] < 12f)
						{
							this.frame.Y = num * 8;
						}
						else if (this.ai[1] < 34f)
						{
							this.frame.Y = num * 9;
						}
						else
						{
							this.frame.Y = num * 8;
						}
						this.frameCounter = 0.0;
					}
					else if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
						if (this.frameCounter > 4.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y > num * 7)
						{
							this.frame.Y = 0;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 10;
				}
			}
			else if (this.type >= 524 && this.type <= 527)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)Math.Abs(this.velocity.X);
						this.frameCounter += 1.0;
						if (this.frameCounter > 9.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frame.Y = num;
					this.frameCounter = 0.0;
				}
			}
			else if (this.type >= 528 && this.type <= 529)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)Math.Abs(this.velocity.X);
						this.frameCounter += 1.0;
						if (this.frameCounter > 9.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 1)
						{
							this.frame.Y = num;
						}
					}
				}
				else
				{
					this.frame.Y = num * (Main.npcFrameCount[this.type] - 1);
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 533)
			{
				if (this.velocity.Y == 0f && this.direction != 0)
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 48.0)
				{
					this.frameCounter = 0.0;
				}
				this.frame.Y = (int)(this.frameCounter / 6.0) * num;
				if (this.ai[1] > 0f)
				{
					this.frame.Y = this.frame.Y + num * 8;
				}
			}
			if (this.type >= 496 && this.type <= 497)
			{
				if (this.ai[0] == 0f)
				{
					this.rotation = 0f;
					if (this.velocity.Y == 0f)
					{
						this.spriteDirection = this.direction;
					}
					else if (this.velocity.Y < 0f)
					{
						this.frameCounter = 0.0;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1.1f);
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 3;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
				else if (this.ai[0] == 1f)
				{
					this.frameCounter = 0.0;
					if (this.ai[1] < 10f)
					{
						this.frame.Y = num * 4;
					}
					else if (this.ai[1] < 20f)
					{
						this.frame.Y = num * 5;
					}
					else
					{
						this.frame.Y = num * 6;
					}
				}
				else if (this.ai[0] == 5f)
				{
					this.frameCounter = 0.0;
					if (this.ai[1] < 10f)
					{
						this.frame.Y = num * 10;
					}
					else if (this.ai[1] < 20f)
					{
						this.frame.Y = num * 11;
					}
					else
					{
						this.frame.Y = num * 3;
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 7;
				}
			}
			else if (this.aiStyle == 39 && this.type != 417)
			{
				if (this.ai[0] == 0f)
				{
					this.rotation = 0f;
					if (this.velocity.Y == 0f)
					{
						this.spriteDirection = this.direction;
					}
					else if (this.velocity.Y < 0f)
					{
						this.frameCounter = 0.0;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1.1f);
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 3;
					}
					else if (this.frameCounter < 32.0)
					{
						this.frame.Y = num * 4;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
				else if (this.ai[0] == 1f)
				{
					this.frameCounter = 0.0;
					if (this.ai[1] < 10f)
					{
						this.frame.Y = num * 5;
					}
					else if (this.ai[1] < 20f)
					{
						this.frame.Y = num * 6;
					}
					else
					{
						this.frame.Y = num * 7;
					}
				}
				else if (this.ai[0] == 5f)
				{
					this.frameCounter = 0.0;
					if (this.ai[1] < 10f)
					{
						this.frame.Y = num * 7;
					}
					else if (this.ai[1] < 20f)
					{
						this.frame.Y = num * 6;
					}
					else
					{
						this.frame.Y = num * 5;
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 7;
				}
			}
			else if (this.type == 508 || this.type == 532)
			{
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = num;
				}
				else if (this.velocity.X == 0f)
				{
					this.frame.Y = 0;
				}
				else
				{
					if (this.direction < 0 && this.velocity.X < 0f)
					{
						this.spriteDirection = -1;
					}
					if (this.direction > 0 && this.velocity.X > 0f)
					{
						this.spriteDirection = 1;
					}
					if (this.frame.Y / num < 2)
					{
						this.frame.Y = num * 2;
					}
					this.frameCounter += (double)(1f + Math.Abs(this.velocity.X) / 2f);
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = num * 2;
					}
				}
			}
			else if (this.type == 509)
			{
				if ((this.velocity.X > 0f && this.direction > 0) || (this.velocity.X < 0f && this.direction < 0))
				{
					this.spriteDirection = this.direction;
				}
				if ((this.frameCounter += 1.0) >= 3.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 415)
			{
				if (this.ai[2] < 0f)
				{
					if (this.frame.Y / num != 8 && this.frame.Y / num != 9 && this.frame.Y / num != 0)
					{
						this.frameCounter = 0.0;
					}
					this.frameCounter += 1.0;
					int num49 = 0;
					int num50 = 18;
					int num51 = 4;
					if (this.frameCounter > (double)(num50 - num51 * 2))
					{
						num49 = 8 + (int)this.frameCounter / 4 % 2;
					}
					if (this.frameCounter > (double)(num50 + num51 * 6))
					{
						num49 = 0;
						this.frameCounter = 0.0;
					}
					this.frame.Y = num * num49;
				}
				else if (this.velocity.Y == 0f)
				{
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.frame.Y < num * 2)
					{
						this.frame.Y = num * 2;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 0.5f);
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 2)
					{
						this.frame.Y = num * 2;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
				}
			}
			if (this.type == 416)
			{
				int num52 = (int)this.ai[0];
				if (Main.npc[num52].active && Main.npc[num52].type == 415 && Main.npcTexture[415] != null)
				{
					this.frame.Y = Main.npc[num52].frame.Y / (Main.npcTexture[415].Height / Main.npcFrameCount[415]) * num;
				}
			}
			else if (this.type == 417)
			{
				if (this.ai[0] == 0f)
				{
					this.rotation = 0f;
					if (this.velocity.Y == 0f)
					{
						this.spriteDirection = this.direction;
					}
					else if (this.velocity.Y < 0f)
					{
						this.frameCounter = 0.0;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1.1f);
					this.frame.Y = (int)(this.frameCounter / 6.0) * num;
					if (this.frameCounter >= 48.0)
					{
						this.frameCounter = 0.0;
					}
				}
				else if (this.ai[0] == 1f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * (9 + (int)(this.ai[1] / 6f));
				}
				else if (this.ai[0] == 5f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * (13 - (int)(this.ai[1] / 6f));
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 14;
				}
			}
			else if (this.type == 518)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frame.Y = num;
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 419)
			{
				if (this.ai[2] < 0f)
				{
					int num53 = 1;
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.frame.Y / num >= 9)
					{
						this.frame.Y = num * 2;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num < 2)
					{
						this.frame.Y = num * 2;
						this.frameCounter = 0.0;
					}
					this.frameCounter += 1.0;
					if (this.frameCounter >= (double)(num53 * 4 + 6))
					{
						this.frameCounter = 8.0;
					}
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = num * (int)(2.0 + this.frameCounter / 3.0);
					}
					else
					{
						this.frame.Y = num * (int)(4.0 + (this.frameCounter - 6.0) / (double)num53);
					}
				}
				else if (this.velocity.Y == 0f)
				{
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 9;
						}
						if (this.frame.Y / num < 9)
						{
							this.frame.Y = num * 9;
						}
					}
				}
				else
				{
					this.frame.Y = num;
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 425)
			{
				if (this.direction != 0)
				{
					this.spriteDirection = -this.direction;
				}
				if (this.ai[2] == 1f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 3.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 12 || this.frame.Y < num * 10)
					{
						this.frame.Y = num * 10;
					}
				}
				else if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
				}
				else if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 9 || this.frame.Y < num * 2)
					{
						this.frame.Y = num * 2;
					}
				}
			}
			else if (this.type == 427)
			{
				if (this.direction != 0)
				{
					this.spriteDirection = this.direction;
				}
				if (this.velocity.Y != 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 2.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * 9 || this.frame.Y < num * 6)
					{
						this.frame.Y = num * 6;
					}
				}
				else if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 5 || this.frame.Y < num)
					{
						this.frame.Y = num;
					}
				}
			}
			else if (this.type == 426)
			{
				if (this.direction != 0)
				{
					this.spriteDirection = this.direction;
				}
				if (this.ai[1] >= 45f)
				{
					if (this.velocity.Y == 0f)
					{
						this.frame.Y = num * 8;
					}
					else
					{
						this.frameCounter += 1.0;
						if (this.frameCounter >= 2.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y >= num * 15 || this.frame.Y < num * 12)
						{
							this.frame.Y = num * 12;
						}
					}
				}
				else if (this.velocity.Y != 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 2.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * 12 || this.frame.Y < num * 9)
					{
						this.frame.Y = num * 9;
					}
				}
				else if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter >= 10.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 7 || this.frame.Y < num)
					{
						this.frame.Y = num;
					}
				}
			}
			else if (this.type == 429)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frame.Y = num;
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 428)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
						if ((this.frameCounter += 1.0) > 10.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 1)
						{
							this.frame.Y = 0;
						}
					}
				}
				else if (this.frame.Y / num != 4)
				{
					if (this.frameCounter > 0.0)
					{
						this.frameCounter = 0.0;
					}
					if ((this.frameCounter -= 1.0) < -10.0 || this.velocity.Y > 0.6f)
					{
						this.frame.Y = num * 4;
						this.frameCounter = 0.0;
					}
				}
			}
			else if (this.type == 423)
			{
				if (this.ai[2] == 1f)
				{
					int num54 = 2;
					if (this.ai[1] >= 30f && this.ai[1] < 45f)
					{
						num54 = 3;
					}
					this.frame.Y = num54 * num;
				}
				else if (this.velocity.Y != 0f)
				{
					this.frame.Y = num;
				}
				else if (this.velocity.X == 0f)
				{
					this.frame.Y = 0;
				}
				else
				{
					if (this.velocity.X != 0f)
					{
						this.spriteDirection = Math.Sign(-this.velocity.X);
					}
					if (this.frame.Y / num < 4)
					{
						this.frame.Y = num * 4;
					}
					this.frameCounter += (double)(1f + Math.Abs(this.velocity.X) / 2f);
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = num * 4;
					}
				}
			}
			else if (this.type == 421)
			{
				if (this.ai[0] == 5f)
				{
					this.frameCounter += 1.0;
				}
				if ((this.frameCounter += 1.0) >= 5.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 424)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction != 0)
					{
						this.spriteDirection = -this.direction;
					}
					if (this.ai[2] > 0f)
					{
						this.frame.Y = num * ((this.ai[1] > 90f) ? (Main.npcFrameCount[this.type] - 2) : (Main.npcFrameCount[this.type] - 1));
						this.frameCounter = 0.0;
					}
					else if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
					else
					{
						if (this.frame.Y < num * 2)
						{
							this.frame.Y = num * 2;
						}
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
						this.frameCounter += (double)(this.velocity.X * 1.3f);
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 2)
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
				}
			}
			else if (this.type == 420 && (this.frameCounter += 1.0) >= 5.0)
			{
				this.frameCounter = 0.0;
				this.frame.Y = this.frame.Y + num;
				if (this.frame.Y / num >= Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 411)
			{
				if (this.ai[1] >= 90f && this.ai[1] < 180f)
				{
					this.spriteDirection = -this.direction;
					this.frame.Y = num * (Main.npcFrameCount[this.type] - 1);
					this.frameCounter = 0.0;
				}
				else if (this.velocity.Y == 0f)
				{
					if (this.direction != 0)
					{
						this.spriteDirection = -this.direction;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 1)
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frame.Y = num;
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 409)
			{
				if (this.velocity.Y == 0f && this.ai[1] <= 30f && this.ai[1] > 0f)
				{
					this.frame.Y = num * (Main.npcFrameCount[this.type] - 1);
					this.frameCounter = 0.0;
				}
				else
				{
					if (this.velocity.Y == 0f)
					{
						this.spriteDirection = this.direction;
					}
					if ((this.frameCounter += 1.0) >= 6.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 2)
						{
							this.frame.Y = 0;
						}
					}
				}
			}
			else if (this.type == 410)
			{
				this.frameCounter += (double)Math.Abs(this.velocity.X);
				if (this.frameCounter >= 10.0)
				{
					this.frameCounter -= 10.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 407)
			{
				if ((this.frameCounter += 1.0) >= 6.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if ((this.type == 405 || this.type == 406) && (this.frameCounter += 1.0) >= 4.0)
			{
				this.frameCounter = 0.0;
				this.frame.Y = this.frame.Y + num;
				if (this.frame.Y / num >= Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 516)
			{
				if (this.localAI[1] == 0f)
				{
					this.localAI[1] = 1f;
					this.frame.Y = num * Main.rand.Next(3);
					this.frameCounter += (double)Main.rand.Next(3);
				}
				this.frameCounter += 1.0;
				if (this.frameCounter > 3.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y > num * 3)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 418)
			{
				if (this.ai[0] == 0f || this.ai[0] == 1f || this.ai[0] == -1f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 6.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y > num * 4)
					{
						this.frame.Y = 0;
					}
				}
				else if (this.ai[0] == 2f)
				{
					if (this.ai[1] < 10f)
					{
						this.frame.Y = num * 5;
					}
					else if (this.ai[1] < 20f)
					{
						this.frame.Y = num * 6;
					}
					else
					{
						this.frame.Y = num * 7;
					}
				}
				else if (this.ai[0] == -2f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 12.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y > num * 7)
					{
						this.frame.Y = num * 5;
					}
				}
			}
			if (this.type == 1 || this.type == 537 || this.type == 16 || this.type == 59 || this.type == 71 || this.type == 81 || this.type == 138 || this.type == 147 || this.type == 183 || this.type == 184 || this.type == 204 || this.type == 225 || this.type == 302 || this.type == 304 || (this.type >= 333 && this.type <= 336) || this.type == 535)
			{
				if (this.type == 302 || this.type == 304)
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += 1.0;
				if (num2 > 0)
				{
					this.frameCounter += 1.0;
				}
				if (num2 == 4)
				{
					this.frameCounter += 1.0;
				}
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 488)
			{
				int num55 = (int)this.localAI[1];
				if (Framing.GetTileSafely((int)this.ai[0], (int)this.ai[1]).frameX >= 36)
				{
					num55 *= -1;
				}
				if (this.localAI[0] > 24f)
				{
					this.localAI[0] = 24f;
				}
				if (this.localAI[0] > 0f)
				{
					this.localAI[0] -= 1f;
				}
				if (this.localAI[0] < 0f)
				{
					this.localAI[0] = 0f;
				}
				int num56 = (num55 == -1) ? 4 : 6;
				int num57 = (int)this.localAI[0] / num56;
				if (this.localAI[0] % (float)num56 != 0f)
				{
					num57++;
				}
				if (num57 != 0 && num55 == 1)
				{
					num57 += 5;
				}
				this.frame.Y = num57 * num;
			}
			if (this.type >= 430 && this.type <= 436)
			{
				if (this.ai[2] > 0f)
				{
					if (this.ai[2] < 5f)
					{
						this.frame.Y = num * 3;
					}
					else if (this.ai[2] < 10f)
					{
						this.frame.Y = num * 4;
					}
					else if (this.ai[2] < 15f)
					{
						this.frame.Y = num * 5;
					}
					else
					{
						this.frame.Y = num * 6;
					}
				}
				else
				{
					if (this.velocity.Y == 0f)
					{
						if (this.direction == 1)
						{
							this.spriteDirection = 1;
						}
						if (this.direction == -1)
						{
							this.spriteDirection = -1;
						}
					}
					if (this.velocity.Y != 0f || (this.direction == -1 && this.velocity.X > 0f) || (this.direction == 1 && this.velocity.X < 0f))
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 2;
					}
					else if (this.velocity.X == 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = 0;
					}
					else
					{
						this.frameCounter += (double)Math.Abs(this.velocity.X);
						if (this.frameCounter < 8.0)
						{
							this.frame.Y = 0;
						}
						else if (this.frameCounter < 16.0)
						{
							this.frame.Y = num;
						}
						else if (this.frameCounter < 24.0)
						{
							this.frame.Y = num * 2;
						}
						else if (this.frameCounter < 32.0)
						{
							this.frame.Y = num;
						}
						else
						{
							this.frameCounter = 0.0;
						}
					}
				}
			}
			if (this.type == 454)
			{
				int num58 = (int)(this.frameCounter / 2.0);
				this.frame.Y = num * num58;
			}
			if (this.type == 377 || this.type == 446)
			{
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = num;
				}
				else
				{
					this.frame.Y = 0;
				}
				this.spriteDirection = this.direction;
			}
			if (this.type == 378)
			{
				if (this.velocity.Y != 0f && this.frame.Y < num * 2)
				{
					this.frame.Y = this.frame.Y + num * 2;
				}
				if (this.velocity.Y == 0f && this.frame.Y > num * 2)
				{
					this.frame.Y = this.frame.Y - num * 2;
				}
				this.frameCounter += 1.0;
				int num59 = 6;
				if (this.frameCounter >= (double)num59)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.velocity.Y != 0f && this.frame.Y >= num * 4)
					{
						this.frame.Y = num * 2;
					}
					if (this.velocity.Y == 0f && this.frame.Y >= num * 2)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 376)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 30.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y >= num * 2)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 375)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 4.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y >= num * 4)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 374)
			{
				this.localAI[0] = -2f;
				if (this.velocity.Y == 0f)
				{
					this.rotation = 0f;
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frameCounter = 0.0;
							this.frame.Y = this.frame.Y + num;
							if (this.frame.Y >= num * 4)
							{
								this.frame.Y = num;
							}
						}
					}
				}
				else
				{
					this.rotation += (float)this.direction * 0.1f;
					this.frameCounter += 1.0;
					if (this.frameCounter > 3.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y >= num * 4)
						{
							this.frame.Y = num;
						}
					}
				}
			}
			if (this.type == 492)
			{
				this.frame.Y = num * (int)this.ai[2];
			}
			if (this.type == 473 || this.type == 474 || this.type == 475 || this.type == 476)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				if (this.ai[0] == 0f || this.ai[0] == 7f)
				{
					this.rotation = 0f;
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else if (this.ai[0] == 1f)
				{
					this.rotation = 0f;
					this.frameCounter = 0.0;
					int num60 = 6;
					if (this.ai[1] < (float)num60)
					{
						this.frame.Y = num;
					}
					else if (this.ai[1] < (float)(num60 * 2))
					{
						this.frame.Y = num * 2;
					}
					else if (this.ai[1] < (float)(num60 * 3))
					{
						this.frame.Y = num * 3;
					}
					else if (this.ai[1] < (float)(num60 * 4))
					{
						this.frame.Y = num * 4;
					}
					else if (this.ai[1] < (float)(num60 * 5))
					{
						this.frame.Y = num * 5;
					}
					else
					{
						this.frame.Y = num * 6;
					}
				}
				else if (this.ai[0] == 2f || this.ai[0] == 6f)
				{
					this.rotation = 0f;
					if (this.velocity.Y == 0f)
					{
						int num61 = 6;
						this.frameCounter += 1.0;
						if (this.frame.Y < num * 7)
						{
							this.frame.Y = num * 12;
						}
						if (this.frame.Y < num * 10)
						{
							if (this.frameCounter > 8.0)
							{
								this.frame.Y = this.frame.Y + num;
								this.frameCounter = 0.0;
								if (this.frame.Y == num * 10)
								{
									this.frameCounter = (double)(num61 * 2);
								}
							}
						}
						else if (this.frameCounter < (double)num61)
						{
							this.frame.Y = num * 12;
						}
						else if (this.frameCounter < (double)(num61 * 2))
						{
							this.frame.Y = num * 11;
						}
						else if (this.frameCounter < (double)(num61 * 3))
						{
							this.frame.Y = num * 10;
						}
						else
						{
							this.frame.Y = num * 11;
							if (this.frameCounter >= (double)(num61 * 4 - 1))
							{
								this.frameCounter = 0.0;
							}
						}
					}
					else
					{
						this.frame.Y = num * 13;
						this.frameCounter = 0.0;
					}
				}
				else if (this.ai[0] == 3f)
				{
					this.rotation = 0f;
					this.frameCounter += 1.0;
					if (this.frameCounter > 6.0)
					{
						this.frameCounter = 0.0;
						if (this.frame.Y > num * 7)
						{
							this.frame.Y = this.frame.Y - num;
						}
					}
				}
				else if (this.ai[0] == 4f || this.ai[0] == 5f)
				{
					if (this.ai[0] == 4f && this.ai[2] == 1f)
					{
						this.rotation = 0f;
					}
					this.frame.Y = num * 13;
					this.frameCounter = 0.0;
				}
				else if (this.ai[0] == 4.1f)
				{
					this.rotation = 0f;
					if (this.frame.Y > num * 6)
					{
						this.frameCounter = 0.0;
					}
					this.frameCounter += 1.0;
					int num62 = 4;
					if (this.frameCounter < (double)num62)
					{
						this.frame.Y = num * 6;
					}
					else if (this.frameCounter < (double)(num62 * 2))
					{
						this.frame.Y = num * 5;
					}
					else if (this.frameCounter < (double)(num62 * 3))
					{
						this.frame.Y = num * 4;
					}
					else if (this.frameCounter < (double)(num62 * 4))
					{
						this.frame.Y = num * 3;
					}
					else if (this.frameCounter < (double)(num62 * 5))
					{
						this.frame.Y = num * 4;
					}
					else
					{
						this.frame.Y = num * 5;
						if (this.frameCounter >= (double)(num62 * 6 - 1))
						{
							this.frameCounter = 0.0;
						}
					}
				}
			}
			if (this.type == 477)
			{
				this.frameCounter += (double)(this.velocity.Length() / 4f);
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
				}
				if (this.frame.Y / num > 5)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 479)
			{
				this.frameCounter += 1.0;
				int num63 = 4;
				if (this.frameCounter < (double)num63)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < (double)(num63 * 2))
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < (double)(num63 * 3))
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < (double)(num63 * 4 - 1))
				{
					this.frame.Y = num;
				}
				else
				{
					this.frameCounter = 0.0;
				}
			}
			if (this.type == 472)
			{
				if (this.velocity.X < 0f)
				{
					this.direction = -1;
				}
				else
				{
					this.direction = 1;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				this.rotation = (float)Math.Atan2((double)(this.velocity.Y * (float)this.direction), (double)(this.velocity.X * (float)this.direction));
				this.frameCounter += 1.0;
				if (this.frameCounter > 4.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y / num >= 6)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type >= 449 && this.type <= 452)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						this.spriteDirection = this.direction;
						int num64 = 0;
						if (this.ai[1] < 22f)
						{
							num64 = -14;
						}
						else if (this.ai[1] < 28f)
						{
							num64 = 3;
						}
						else if (this.ai[1] < 34f)
						{
							num64 = 2;
						}
						else if (this.ai[1] < 40f)
						{
							num64 = 1;
						}
						this.frame.Y = num * (15 + num64);
						this.frameCounter = 0.0;
					}
					else if (this.velocity.X == 0f)
					{
						this.frame.Y = num;
					}
					else
					{
						if (this.frame.Y < num * 2)
						{
							this.frame.Y = num * 2;
						}
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= 15)
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
			}
			if (this.type == 481)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						this.spriteDirection = this.direction;
						int num65 = 0;
						if (this.ai[1] < 22f)
						{
							num65 = -14;
						}
						else if (this.ai[1] < 28f)
						{
							num65 = 3;
						}
						else if (this.ai[1] < 34f)
						{
							num65 = 2;
						}
						else if (this.ai[1] < 40f)
						{
							num65 = 1;
						}
						this.frame.Y = num * (15 + num65);
						this.frameCounter = 0.0;
					}
					else if (this.velocity.X == 0f)
					{
						this.frame.Y = num;
					}
					else
					{
						if (this.frame.Y < num * 2)
						{
							this.frame.Y = num * 2;
						}
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= 15)
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
			}
			if (this.type == 468)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						this.spriteDirection = this.direction;
						int num66 = 0;
						if (this.ai[1] < 22f)
						{
							num66 = -15;
						}
						else if (this.ai[1] < 28f)
						{
							num66 = 3;
						}
						else if (this.ai[1] < 34f)
						{
							num66 = 2;
						}
						else if (this.ai[1] < 40f)
						{
							num66 = 1;
						}
						this.frame.Y = num * (15 + num66);
						this.frameCounter = 0.0;
					}
					else if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
					else
					{
						if (this.frame.Y < num * 2)
						{
							this.frame.Y = num * 2;
						}
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= 15)
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
				}
			}
			if (this.type == 379 || this.type == 380)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						this.spriteDirection = this.direction;
						this.frame.Y = num * ((int)this.ai[2] - 1 + 2);
						this.frameCounter = 0.0;
					}
					else if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
					else
					{
						if (this.frame.Y < num * 7)
						{
							this.frame.Y = num * 7;
						}
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 7;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
				}
			}
			if (this.type == 381 || this.type == 382 || this.type == 383 || this.type == 385 || this.type == 389)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
					if (this.frame.Y < num * 2)
					{
						this.frame.Y = num * 2;
					}
					if (this.type == 389 || this.type == 385)
					{
						this.frameCounter += (double)Math.Abs(this.velocity.X) * 1.2;
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
					}
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = num * 2;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
				}
			}
			if (this.type == 387)
			{
				if (this.ai[0] > 0f)
				{
					this.frameCounter += 1.0;
					if (this.ai[0] >= 20f)
					{
						this.frameCounter += 1.0;
					}
					if (this.ai[0] >= 40f)
					{
						this.frameCounter += 1.0;
					}
					if (this.frameCounter >= 10.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y >= num * 2)
						{
							this.frame.Y = 0;
						}
					}
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 15.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y >= num * 2)
						{
							this.frame.Y = 0;
						}
					}
				}
			}
			if (this.type == 386)
			{
				if (this.ai[2] > 0f)
				{
					int num67 = (int)this.ai[2] / 12;
					this.frame.Y = num * (9 + num67 % 2);
				}
				else if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
					if (this.frame.Y < num * 2)
					{
						this.frame.Y = num * 2;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= 9)
					{
						this.frame.Y = num * 2;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
				}
			}
			if (this.type == 388)
			{
				this.frameCounter += 1.0;
				int num68 = 6;
				if (this.frameCounter >= (double)num68)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y >= num * 2)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 391)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = -1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = 1;
					}
					if (this.frame.Y < num)
					{
						this.frame.Y = num;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 0.5f);
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = num;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
			}
			if (this.type == 390)
			{
				if (this.direction != 0)
				{
					this.spriteDirection = -this.direction;
				}
				if (this.ai[2] > 0f)
				{
					this.frame.Y = num * ((int)this.ai[2] - 1);
				}
				else
				{
					this.frame.Y = num * 2;
				}
			}
			if (this.type == 393)
			{
				Vector2 vector = this.ai[2].ToRotationVector2();
				int num69;
				if (vector.Y > Math.Abs(vector.X) * 2f)
				{
					num69 = 4;
				}
				else if (vector.Y > Math.Abs(vector.X) * 1.5f)
				{
					num69 = ((vector.X > 0f) ? 5 : 3);
				}
				else if (Math.Abs(vector.X) > vector.Y * 2f)
				{
					num69 = ((vector.X > 0f) ? 8 : 0);
				}
				else if (Math.Abs(vector.X) > vector.Y * 1.5f)
				{
					num69 = ((vector.X > 0f) ? 7 : 1);
				}
				else
				{
					num69 = ((vector.X > 0f) ? 6 : 2);
				}
				this.frame.Y = num * num69;
				float num70 = 280f;
				float num71 = 140f;
				bool flag3 = this.ai[3] >= num70 && this.ai[3] < num70 + num71;
				if (flag3 && (int)this.ai[3] % 6 <= 2)
				{
					this.frame.Y = this.frame.Y + num * 9;
				}
			}
			if (this.type == 394)
			{
				int num72 = (int)this.ai[3] - 300;
				if (num72 >= 120)
				{
					num72 -= 120;
					if (num72 >= 160)
					{
						this.frame.Y = num * (7 - (num72 - 160) / 5);
					}
					else if (num72 >= 20)
					{
						this.frame.Y = num * (num72 / 4 % 4);
					}
					else
					{
						this.frame.Y = num * (4 + num72 / 5);
					}
				}
				else
				{
					this.frame.Y = num * 4;
				}
			}
			if (this.type == 395)
			{
				float num73 = 20f;
				float num74 = 240f;
				bool flag4 = this.ai[3] >= num73 && this.ai[3] < num73 + num74;
				this.frameCounter += 1.0;
				if (this.frameCounter >= 66.0)
				{
					this.frameCounter = 0.0;
				}
				if (flag4)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 54.0 || this.frameCounter < 36.0)
					{
						this.frameCounter = 36.0;
					}
				}
				int num75 = (int)this.frameCounter % 66;
				num75 /= 6;
				this.frame.Y = num * num75;
			}
			if (this.type == 392)
			{
				float num76 = 20f;
				float num77 = 240f;
				bool flag5 = this.ai[3] >= num76 && this.ai[3] < num76 + num77;
				this.frameCounter += 1.0;
				if (flag5)
				{
					this.frameCounter += 1.0;
				}
				if (this.frameCounter >= 12.0)
				{
					this.frameCounter = 0.0;
				}
				int num78 = (int)this.frameCounter % 12;
				num78 /= 3;
				this.frame.Y = num * num78;
			}
			if (this.type == 399)
			{
				this.frameCounter = (this.frameCounter + 0.25) % 4.0 + (double)((this.ai[0] == 0f) ? 0 : 4);
				this.frame.Y = num * (int)this.frameCounter;
			}
			else if (this.type == 520)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
					if (this.frameCounter > 6.0)
					{
						if (Math.Abs(this.velocity.X) < 0.2f)
						{
							this.frame.Y = 0;
							this.frameCounter = 0.0;
						}
						else
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = num;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
				}
			}
			if (this.type == 398)
			{
				if (this.ai[0] <= 0f)
				{
					this.frame.Y = 0;
				}
				else
				{
					if (this.frame.Y == 0)
					{
						Gore.NewGore(this.position + new Vector2(-10f, -15f), this.velocity, 619, 1f);
						Gore.NewGore(this.position + new Vector2(10f, -15f), this.velocity, 620, 1f);
						Gore.NewGore(this.position + new Vector2(-10f, 15f), this.velocity, 621, 1f);
						Gore.NewGore(this.position + new Vector2(10f, 15f), this.velocity, 622, 1f);
						for (int k = 0; k < 50; k++)
						{
							this.frame.Y = num;
							Dust.NewDust(this.position, this.width, this.height, 209, 0f, 0f, 0, default(Color), 1f);
						}
					}
					this.frameCounter += 1.0;
					if (this.frameCounter >= 30.0)
					{
						this.frameCounter = 6.0;
					}
					int num79 = (int)this.frameCounter % 30;
					num79 /= 6;
					this.frame.Y = num * num79;
				}
			}
			if (this.type == 397)
			{
				int num80 = (int)this.frameCounter / 7;
				this.frame.Y = num * num80;
			}
			if (this.type == 400)
			{
				this.frameCounter += 1.0;
				if (this.ai[0] == 0f || this.ai[0] == 3f)
				{
					this.frameCounter += 1.0;
				}
				if (this.frameCounter >= 16.0)
				{
					this.frameCounter = 0.0;
				}
				int num81 = (int)this.frameCounter % 16;
				num81 /= 4;
				this.frame.Y = num * num81;
			}
			if (this.type == 437)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 20.0)
				{
					this.frameCounter = 0.0;
				}
				int num82 = (int)this.frameCounter % 20;
				num82 /= 5;
				this.frame.Y = num * num82;
			}
			if (this.type == 438)
			{
				this.frameCounter += 1.0;
				if (this.ai[1] == 1f)
				{
					this.frameCounter += 1.0;
				}
				if (this.frameCounter >= 49.0)
				{
					this.frameCounter = 0.0;
				}
				int num83 = (int)this.frameCounter % 49;
				num83 /= 7;
				if (num83 >= 4)
				{
					num83 = 6 - num83;
				}
				this.frame.Y = num * num83;
			}
			if (this.type == 439 || this.type == 440)
			{
				int num84 = (int)this.localAI[2];
				if (num84 == 0)
				{
					if (this.frameCounter >= 15.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = 0;
					}
					else if (this.frame.Y != 0)
					{
						this.frame.Y = ((int)this.frameCounter / 5 + 4) * num;
					}
				}
				else if (num84 == 10)
				{
					if (this.frameCounter >= 15.0)
					{
						this.frameCounter = 0.0;
					}
					this.frame.Y = ((int)this.frameCounter / 5 + 4) * num;
				}
				else if (num84 == 1)
				{
					if (this.frameCounter >= 15.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num;
					}
					else if (this.frame.Y != num)
					{
						this.frame.Y = ((int)this.frameCounter / 5 + 10) * num;
					}
				}
				else if (num84 == 11)
				{
					if (this.frameCounter >= 15.0)
					{
						this.frameCounter = 0.0;
					}
					this.frame.Y = ((int)this.frameCounter / 5 + 10) * num;
				}
				else if (num84 == 2)
				{
					if (this.frameCounter >= 15.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 2;
					}
					else if (this.frame.Y != num * 2)
					{
						this.frame.Y = ((int)this.frameCounter / 5 + 7) * num;
					}
				}
				else if (num84 == 12)
				{
					if (this.frameCounter >= 15.0)
					{
						this.frameCounter = 0.0;
					}
					this.frame.Y = ((int)this.frameCounter / 5 + 7) * num;
				}
				else if (num84 == 13)
				{
					if (this.frameCounter >= 15.0)
					{
						this.frameCounter = 0.0;
					}
					this.frame.Y = ((int)this.frameCounter / 5 + 13) * num;
				}
				this.frameCounter += 1.0;
			}
			if (this.type == 521)
			{
				if (this.velocity.X < 0f)
				{
					this.direction = -1;
				}
				else
				{
					this.direction = 1;
				}
				if (this.direction != 0)
				{
					this.spriteDirection = this.direction;
				}
				this.rotation = (float)Math.Atan2((double)(this.velocity.Y * (float)this.spriteDirection), (double)(this.velocity.X * (float)this.spriteDirection)) + this.velocity.X * 0.1f;
				if ((this.frameCounter += 1.0) >= 5.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 523 && (this.frameCounter += 1.0) >= 6.0)
			{
				this.frame.Y = this.frame.Y + num;
				this.frameCounter = 0.0;
				if (this.frame.Y / num >= Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 371 || this.type == 372 || this.type == 373)
			{
				this.frame.Y = num;
			}
			if (this.type == 370)
			{
				if (this.ai[0] == 0f || this.ai[0] == 5f)
				{
					int num85 = 5;
					if (this.ai[0] == 5f)
					{
						num85 = 4;
					}
					this.frameCounter += 1.0;
					if (this.frameCounter > (double)num85)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y >= num * 6)
					{
						this.frame.Y = 0;
					}
				}
				if (this.ai[0] == 1f || this.ai[0] == 6f)
				{
					if (this.ai[2] < 10f)
					{
						this.frame.Y = num * 6;
					}
					else
					{
						this.frame.Y = num * 7;
					}
				}
				if (this.ai[0] == 2f || this.ai[0] == 7f)
				{
					if (this.ai[2] < 10f)
					{
						this.frame.Y = num * 6;
					}
					else
					{
						this.frame.Y = num * 7;
					}
				}
				if (this.ai[0] == 3f || this.ai[0] == 8f || this.ai[0] == -1f)
				{
					int num86 = 90;
					if (this.ai[2] < (float)(num86 - 30) || this.ai[2] > (float)(num86 - 10))
					{
						this.frameCounter += 1.0;
						if (this.frameCounter > 5.0)
						{
							this.frameCounter = 0.0;
							this.frame.Y = this.frame.Y + num;
						}
						if (this.frame.Y >= num * 6)
						{
							this.frame.Y = 0;
						}
					}
					else
					{
						this.frame.Y = num * 6;
						if (this.ai[2] > (float)(num86 - 20) && this.ai[2] < (float)(num86 - 15))
						{
							this.frame.Y = num * 7;
						}
					}
				}
				if (this.ai[0] == 4f || this.ai[0] == 9f)
				{
					int num87 = 180;
					if (this.ai[2] < (float)(num87 - 60) || this.ai[2] > (float)(num87 - 20))
					{
						this.frameCounter += 1.0;
						if (this.frameCounter > 5.0)
						{
							this.frameCounter = 0.0;
							this.frame.Y = this.frame.Y + num;
						}
						if (this.frame.Y >= num * 6)
						{
							this.frame.Y = 0;
						}
					}
					else
					{
						this.frame.Y = num * 6;
						if (this.ai[2] > (float)(num87 - 50) && this.ai[2] < (float)(num87 - 25))
						{
							this.frame.Y = num * 7;
						}
					}
				}
			}
			if (this.type == 359 || this.type == 360)
			{
				if (this.velocity.Y > 1f)
				{
					this.frameCounter += 1.0;
					int num88 = 6;
					if (this.frameCounter < (double)num88)
					{
						this.frame.Y = num * 4;
					}
					else
					{
						this.frame.Y = num * 5;
						if (this.frameCounter >= (double)(num88 * 2 - 1))
						{
							this.frameCounter = 0.0;
						}
					}
				}
				else
				{
					this.frameCounter += 1.0;
					int num89 = 10;
					if (this.frameCounter < (double)num89)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < (double)(num89 * 2))
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < (double)(num89 * 3))
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < (double)(num89 * 4))
					{
						this.frame.Y = num * 3;
					}
					else if (this.frameCounter < (double)(num89 * 5))
					{
						this.frame.Y = num * 2;
					}
					else
					{
						this.frame.Y = num;
						if (this.frameCounter >= (double)(num89 * 6 - 1))
						{
							this.frameCounter = 0.0;
						}
					}
				}
			}
			if (this.type == 327)
			{
				if (this.ai[3] == 0f)
				{
					if (this.frame.Y > num * 5)
					{
						this.frameCounter += 1.0;
					}
					else if (this.frame.Y > 0)
					{
						this.frameCounter -= 1.0;
					}
				}
				else if (this.ai[3] == 1f)
				{
					if (this.frame.Y > num * 10)
					{
						this.frameCounter += 1.0;
					}
					else if (this.frame.Y > num * 4)
					{
						this.frameCounter -= 1.0;
					}
					else if (this.frame.Y < num * 4)
					{
						this.frameCounter += 1.0;
					}
				}
				else if (this.ai[3] == 2f)
				{
					if (this.frame.Y < num * 2)
					{
						this.frameCounter -= 1.0;
					}
					else if (this.frame.Y > num * 8)
					{
						this.frameCounter -= 1.0;
					}
					else if (this.frame.Y < num * 8)
					{
						this.frameCounter += 1.0;
					}
				}
				if (this.frameCounter > 6.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y > num * 11)
					{
						this.frame.Y = 0;
					}
				}
				if (this.frameCounter < 0.0)
				{
					this.frameCounter = 6.0;
					this.frame.Y = this.frame.Y - num;
					if (this.frame.Y < 0)
					{
						this.frame.Y = num * 11;
					}
				}
			}
			if (this.type == 347)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 1.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num * 3)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 346)
			{
				if (this.ai[0] == 1f)
				{
					this.spriteDirection = this.direction;
					this.frameCounter += 1.0;
					if (this.frameCounter > 2.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 8)
					{
						this.frame.Y = num * 6;
					}
					if (this.frame.Y < num * 6)
					{
						this.frame.Y = num * 6;
					}
				}
				else if (this.velocity.X == 0f)
				{
					this.frame.Y = this.frame.Y;
					this.frameCounter = 0.0;
				}
				else
				{
					this.spriteDirection = this.direction;
					this.frameCounter += 1.0;
					this.frameCounter += (double)(Math.Abs(this.velocity.X) / 2f);
					if (this.frameCounter > 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 5)
					{
						this.frame.Y = num;
					}
					if (this.frame.Y < num)
					{
						this.frame.Y = num;
					}
				}
			}
			if (this.type == 352)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 3.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num * 5)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 345)
			{
				if (this.ai[0] == 0f)
				{
					if (this.ai[3] >= 0f)
					{
						this.frame.Y = 0;
					}
					else if (this.velocity.X < 0f)
					{
						this.frame.Y = num;
					}
					else
					{
						this.frame.Y = num * 2;
					}
				}
				else if (this.ai[0] == 1f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 5.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y > num * 4)
					{
						this.frame.Y = num * 3;
					}
					if (this.frame.Y < num * 3)
					{
						this.frame.Y = num * 3;
					}
				}
				else if (this.ai[0] == 2f)
				{
					this.frame.Y = num * 5;
				}
			}
			if (this.type == 344)
			{
				if (this.velocity.X == 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 2.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y > num * 9)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 3.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y > num * 9)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 325)
			{
				if (this.velocity.X == 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y > num * 4)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y < num * 5)
					{
						this.frame.Y = num * 5;
					}
					if (this.frame.Y > num * 9)
					{
						this.frame.Y = num * 5;
					}
				}
			}
			if (this.type == 490)
			{
				this.rotation = this.velocity.X * 0.15f;
				this.frameCounter += 1.0;
				if (this.frameCounter > 6.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 266)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 6.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
				}
				if (this.ai[0] >= 0f)
				{
					if (this.frame.Y > num * 3)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					if (this.frame.Y < num * 4)
					{
						this.frame.Y = num * 4;
					}
					if (this.frame.Y > num * 7)
					{
						this.frame.Y = num * 4;
					}
				}
			}
			else if (this.type == 262)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 6.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
				}
				if (this.life > this.lifeMax / 2)
				{
					if (this.frame.Y > num * 3)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					if (this.frame.Y < num * 4)
					{
						this.frame.Y = num * 4;
					}
					if (this.frame.Y > num * 7)
					{
						this.frame.Y = num * 4;
					}
				}
			}
			else if (this.type >= 305 && this.type <= 309)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				if (this.velocity.Y < -3f)
				{
					this.frame.Y = num * 5;
				}
				else if (this.velocity.Y <= 0f)
				{
					this.frame.Y = 0;
				}
				else if (this.velocity.Y < 2f)
				{
					this.frame.Y = num * 3;
				}
				else
				{
					this.frame.Y = num;
				}
				this.rotation = this.velocity.X * 0.1f;
			}
			else if (this.type == 263)
			{
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					if (this.frame.Y > 0)
					{
						this.frameCounter += 1.0;
						if (this.frameCounter > 4.0)
						{
							this.frameCounter = 0.0;
							this.frame.Y = this.frame.Y - num;
						}
					}
				}
				else if (this.frame.Y < 2)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
				}
			}
			else if (this.type == 244)
			{
				this.frameCounter += 1.0;
				if (num2 > 0)
				{
					this.frameCounter += 1.0;
				}
				if (num2 == 4)
				{
					this.frameCounter += 1.0;
				}
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 289)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 2.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 3.0)
				{
					this.frame.Y = num;
				}
				else
				{
					this.frame.Y = num * 2;
					this.frameCounter = 0.0;
				}
				if (this.ai[3] == 1f)
				{
					this.frame.Y = this.frame.Y + num * 3;
				}
			}
			else if (this.type == 288)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 355 || this.type == 358)
			{
				this.spriteDirection = this.direction;
				this.frameCounter += 1.0;
				if (this.frameCounter < 4.0)
				{
					this.frame.Y = 0;
				}
				else
				{
					this.frame.Y = num;
					if (this.frameCounter >= 7.0)
					{
						this.frameCounter = 0.0;
					}
				}
				if (this.localAI[2] <= 0f)
				{
					this.frame.Y = this.frame.Y + num * 2;
				}
			}
			else if (this.type == 356 || this.type == 444)
			{
				int num90 = 7;
				this.rotation = this.velocity.X * 0.3f;
				this.spriteDirection = this.direction;
				this.frameCounter = this.frameCounter + 1.0 + (double)((Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) / 2f);
				if (this.frameCounter < (double)num90)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < (double)(num90 * 2))
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < (double)(num90 * 3))
				{
					this.frame.Y = num * 2;
				}
				else
				{
					this.frame.Y = num;
					if (this.frameCounter >= (double)(num90 * 4 - 1))
					{
						this.frameCounter = 0.0;
					}
				}
				if (this.type != 444)
				{
					this.frame.Y = this.frame.Y + (int)((float)(num * 3) * (this.ai[2] - 1f));
				}
			}
			else if (this.type == 357 || this.type == 448 || this.type == 484)
			{
				this.localAI[0] = -2f;
				if (this.velocity.Y == 0f)
				{
					this.rotation = 0f;
					if (this.velocity.X == 0f)
					{
						this.frame.Y = num;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += 1.0;
						if (this.frameCounter > 12.0)
						{
							this.frameCounter = 0.0;
							this.frame.Y = this.frame.Y + num;
							if (this.frame.Y > num)
							{
								this.frame.Y = 0;
							}
						}
					}
				}
				else
				{
					this.rotation += (float)this.direction * 0.1f;
					this.frame.Y = num;
				}
				int num91 = (int)base.Center.X / 16;
				int num92 = (int)this.position.Y / 16;
				if (WorldGen.InWorld(num91, num92, 0) && Main.tile[num91, num92] != null)
				{
					if (Main.tile[num91, num92].slope() == 0)
					{
						num92++;
					}
					if (Main.tile[num91, num92].slope() == 1)
					{
						this.rotation = 0.785f;
						this.localAI[0] = 0f;
					}
					else if (Main.tile[num91, num92].slope() == 2)
					{
						this.rotation = -0.785f;
						this.localAI[0] = 0f;
					}
				}
			}
			else if (this.type >= 485 && this.type <= 487)
			{
				this.spriteDirection = this.direction;
				this.localAI[0] = -2f;
				if (this.velocity.Y == 0f)
				{
					this.rotation = 0f;
					if (this.velocity.X == 0f)
					{
						this.frame.Y = num;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)Math.Abs(this.velocity.X * 5f);
						if (this.frameCounter > 10.0)
						{
							this.frameCounter = 0.0;
							this.frame.Y = this.frame.Y + num;
							if (this.frame.Y > num * 3)
							{
								this.frame.Y = 0;
							}
						}
					}
				}
				else
				{
					this.rotation += (float)this.direction * 0.1f;
					this.frame.Y = num;
				}
				int num93 = (int)base.Center.X / 16;
				int num94 = (int)this.position.Y / 16;
				if (Main.tile[num93, num94] != null)
				{
					if (Main.tile[num93, num94].slope() == 0)
					{
						num94++;
					}
					if (Main.tile[num93, num94].slope() == 1)
					{
						this.rotation = 0.785f;
						this.localAI[0] = 0f;
					}
					else if (Main.tile[num93, num94].slope() == 2)
					{
						this.rotation = -0.785f;
						this.localAI[0] = 0f;
					}
				}
			}
			else if (this.type == 250 || this.type == 264 || this.type == 268)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 245)
			{
				if (this.ai[0] == 0f)
				{
					if (this.ai[1] < -16f)
					{
						this.frame.Y = 0;
					}
					else if (this.ai[1] < -12f)
					{
						this.frame.Y = num;
					}
					else if (this.ai[1] < -8f)
					{
						this.frame.Y = num * 2;
					}
					else if (this.ai[1] < -4f)
					{
						this.frame.Y = num * 3;
					}
					else if (this.ai[1] < 0f)
					{
						this.frame.Y = num * 4;
					}
					else
					{
						this.frame.Y = 0;
					}
				}
				else if (this.ai[0] == 1f)
				{
					this.frame.Y = 1;
				}
			}
			else if (this.type == 246)
			{
				if (this.ai[0] == 0f)
				{
					if (this.localAI[0] == 1f)
					{
						this.frame.Y = num;
					}
					else
					{
						this.frame.Y = 0;
					}
				}
				else if (this.ai[0] == 1f)
				{
					if (this.localAI[0] == 1f)
					{
						this.frame.Y = num;
					}
					else
					{
						this.frame.Y = 0;
					}
					if (this.localAI[1] == -1f)
					{
						this.frame.Y = this.frame.Y + num * 4;
					}
					if (this.localAI[1] == 1f)
					{
						this.frame.Y = this.frame.Y + num * 2;
					}
				}
			}
			else if (this.type == 249)
			{
				if (this.localAI[0] == 1f)
				{
					this.frame.Y = num;
				}
				else
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 141)
			{
				this.spriteDirection = this.direction;
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = num * 2;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num)
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 243)
			{
				if (this.frameCounter < 0.0)
				{
					if (this.velocity.Y == 0f)
					{
						this.frameCounter += 1.0;
						if (this.frameCounter < -12.0)
						{
							if (this.frame.Y > num * 9)
							{
								this.frame.Y = num * 11;
							}
						}
						else if (this.frameCounter < -6.0)
						{
							if (this.frame.Y > num * 9)
							{
								this.frame.Y = num * 12;
							}
						}
						else if (this.frameCounter < 0.0)
						{
							this.frameCounter = 0.0;
							if (this.frame.Y > num * 9)
							{
								this.frame.Y = num * 11;
							}
						}
					}
					else
					{
						this.frameCounter = -18.0;
						if (this.velocity.Y < 0f)
						{
							this.frame.Y = num * 14;
						}
						else
						{
							this.frame.Y = num * 13;
						}
					}
				}
				else
				{
					this.spriteDirection = this.direction;
					this.frameCounter += (double)Math.Abs(this.velocity.X * 1.1f);
					if (this.frameCounter >= 6.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y > num * 9)
						{
							this.frame.Y = 0;
						}
					}
					if (this.velocity.Y < -2f || this.velocity.Y > 5f)
					{
						this.frameCounter = -18.0;
					}
				}
			}
			else if (this.type == 222)
			{
				this.frameCounter += 1.0;
				if (this.localAI[0] == 1f)
				{
					if (this.frameCounter > 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * 4)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					if (this.frameCounter > 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y < num * 4)
					{
						this.frame.Y = num * 4;
					}
					if (this.frame.Y >= num * 12)
					{
						this.frame.Y = num * 4;
					}
				}
			}
			else if (this.type == 164 || this.type == 239 || this.type == 530)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					if (this.velocity.Y < 0f)
					{
						this.frame.Y = num * 4;
					}
					else
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.spriteDirection = this.direction;
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1.1f);
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 3;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
			}
			else if (this.type == 236)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				else
				{
					this.frame.Y = 0;
				}
				this.frameCounter += (double)Math.Abs(this.velocity.X);
				if (this.frameCounter > 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num || this.velocity.Y != 0f)
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 165 || this.type == 237 || this.type == 238 || this.type == 240 || this.type == 531)
			{
				float num95 = 0.5f;
				if (this.type == 531)
				{
					num95 = 0.4f;
				}
				this.frameCounter += (double)((Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) * num95);
				if (this.frameCounter < 6.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 18.0)
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < 24.0)
				{
					this.frame.Y = num * 3;
				}
				else
				{
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 195)
			{
				if (this.ai[0] < 3f)
				{
					this.frame.Y = 0;
				}
				else if (this.ai[0] < 6f)
				{
					this.frame.Y = num;
				}
				else if (this.ai[0] < 9f)
				{
					this.frame.Y = num * 2;
				}
				else if (this.ai[0] < 12f)
				{
					this.frame.Y = num * 3;
				}
				else if (this.ai[0] < 15f)
				{
					this.frame.Y = num * 4;
				}
				else
				{
					this.frame.Y = num * 5;
				}
			}
			else if (this.type == 174)
			{
				if (this.velocity.Y == 0f)
				{
					this.frame.Y = 0;
				}
				else if ((double)this.velocity.Y < -1.5)
				{
					this.frame.Y = num;
				}
				else if ((double)this.velocity.Y > 1.5)
				{
					this.frame.Y = num * 3;
				}
				else
				{
					this.frame.Y = num * 2;
				}
			}
			else if (this.type == 177)
			{
				if (this.velocity.Y == 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 10.0)
					{
						this.frameCounter = 30.0;
						this.frame.Y = 0;
					}
					else
					{
						this.frame.Y = num;
					}
				}
				else if (this.velocity.Y < 0f)
				{
					this.frame.Y = num * 2;
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 2;
				}
			}
			else if (this.type == 163)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = -12.0;
					if (this.velocity.Y < 0f)
					{
						this.frame.Y = num * 5;
					}
					else
					{
						this.frame.Y = num * 6;
					}
				}
				else
				{
					this.spriteDirection = this.direction;
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1.1f);
					if (this.frameCounter < -6.0)
					{
						this.frame.Y = num * 6;
					}
					else if (this.frameCounter < 0.0)
					{
						this.frame.Y = num * 7;
					}
					else if (this.frameCounter < 6.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 3;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
			}
			else if (this.type == 143)
			{
				if (this.velocity.Y > 0f)
				{
					this.frameCounter += 1.0;
				}
				else if (this.velocity.Y < 0f)
				{
					this.frameCounter -= 1.0;
				}
				if (this.frameCounter < 6.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < 18.0)
				{
					this.frame.Y = num * 3;
				}
				if (this.frameCounter < 0.0)
				{
					this.frameCounter = 0.0;
				}
				if (this.frameCounter > 17.0)
				{
					this.frameCounter = 17.0;
				}
			}
			else if (this.type == 144)
			{
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					this.localAI[3] += 1f;
					if (this.localAI[3] < 6f)
					{
						this.frame.Y = 0;
					}
					else if (this.localAI[3] < 12f)
					{
						this.frame.Y = num;
					}
					if (this.localAI[3] >= 11f)
					{
						this.localAI[3] = 0f;
					}
				}
				else
				{
					if (this.velocity.Y > 0f)
					{
						this.frameCounter += 1.0;
					}
					else if (this.velocity.Y < 0f)
					{
						this.frameCounter -= 1.0;
					}
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num * 3;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 4;
					}
					if (this.frameCounter < 0.0)
					{
						this.frameCounter = 0.0;
					}
					if (this.frameCounter > 17.0)
					{
						this.frameCounter = 17.0;
					}
				}
			}
			else if (this.type == 145)
			{
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					if (this.ai[2] < 4f)
					{
						this.frame.Y = 0;
					}
					else if (this.ai[2] < 8f)
					{
						this.frame.Y = num;
					}
					else if (this.ai[2] < 12f)
					{
						this.frame.Y = num * 2;
					}
					else if (this.ai[2] < 16f)
					{
						this.frame.Y = num * 3;
					}
				}
				else
				{
					if (this.velocity.Y > 0f)
					{
						this.frameCounter += 1.0;
					}
					else if (this.velocity.Y < 0f)
					{
						this.frameCounter -= 1.0;
					}
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = num * 4;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num * 5;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 6;
					}
					if (this.frameCounter < 0.0)
					{
						this.frameCounter = 0.0;
					}
					if (this.frameCounter > 17.0)
					{
						this.frameCounter = 17.0;
					}
				}
			}
			else if (this.type == 50)
			{
				if (this.velocity.Y != 0f)
				{
					if (this.frame.Y < num * 4)
					{
						this.frame.Y = num * 4;
						this.frameCounter = 0.0;
					}
					if ((this.frameCounter += 1.0) >= 4.0)
					{
						this.frame.Y = num * 5;
					}
				}
				else
				{
					if (this.frame.Y >= num * 5)
					{
						this.frame.Y = num * 4;
						this.frameCounter = 0.0;
					}
					this.frameCounter += 1.0;
					if (num2 > 0)
					{
						this.frameCounter += 1.0;
					}
					if (num2 == 4)
					{
						this.frameCounter += 1.0;
					}
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
						if (this.frame.Y >= num * 4)
						{
							this.frame.Y = 0;
						}
					}
				}
			}
			else if (this.type == 170 || this.type == 171 || this.type == 180)
			{
				this.spriteDirection = this.direction;
				this.frameCounter += 1.0;
				if (this.frameCounter >= 4.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * 14)
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 135)
			{
				if (this.ai[2] == 0f)
				{
					this.frame.Y = 0;
				}
				else
				{
					this.frame.Y = num;
				}
			}
			else if (this.type == 85 || this.type == 341)
			{
				if (this.ai[0] == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else
				{
					int num96 = 3;
					if (this.velocity.Y == 0f)
					{
						this.frameCounter -= 1.0;
					}
					else
					{
						this.frameCounter += 1.0;
					}
					if (this.frameCounter < 0.0)
					{
						this.frameCounter = 0.0;
					}
					if (this.frameCounter > (double)(num96 * 4))
					{
						this.frameCounter = (double)(num96 * 4);
					}
					if (this.frameCounter < (double)num96)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < (double)(num96 * 2))
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < (double)(num96 * 3))
					{
						this.frame.Y = num * 3;
					}
					else if (this.frameCounter < (double)(num96 * 4))
					{
						this.frame.Y = num * 4;
					}
					else if (this.frameCounter < (double)(num96 * 5))
					{
						this.frame.Y = num * 5;
					}
					else if (this.frameCounter < (double)(num96 * 6))
					{
						this.frame.Y = num * 4;
					}
					else if (this.frameCounter < (double)(num96 * 7))
					{
						this.frame.Y = num * 3;
					}
					else
					{
						this.frame.Y = num * 2;
						if (this.frameCounter >= (double)(num96 * 8))
						{
							this.frameCounter = (double)num96;
						}
					}
				}
				if (this.ai[3] == 2f)
				{
					this.frame.Y = this.frame.Y + num * 6;
				}
				else if (this.ai[3] == 3f)
				{
					this.frame.Y = this.frame.Y + num * 12;
				}
				else if (this.ai[3] == 4f)
				{
					this.frame.Y = this.frame.Y + num * 18;
				}
			}
			else if (this.type == 113 || this.type == 114)
			{
				if (this.ai[2] == 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 12.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.frame.Y = 0;
					this.frameCounter = -60.0;
				}
			}
			else if (this.type == 61)
			{
				this.spriteDirection = this.direction;
				this.rotation = this.velocity.X * 0.1f;
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					this.frame.Y = 0;
					this.frameCounter = 0.0;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter < 4.0)
					{
						this.frame.Y = num;
					}
					else
					{
						this.frame.Y = num * 2;
						if (this.frameCounter >= 7.0)
						{
							this.frameCounter = 0.0;
						}
					}
				}
			}
			else if (this.type == 252 || this.type == 301)
			{
				if (this.type == 301)
				{
					if (this.velocity.Y == 0f)
					{
						this.spriteDirection = -this.direction;
					}
					else
					{
						if ((double)this.velocity.X > 0.5)
						{
							this.spriteDirection = -1;
						}
						if ((double)this.velocity.X < -0.5)
						{
							this.spriteDirection = 1;
						}
					}
				}
				else
				{
					if ((double)this.velocity.X > 0.5)
					{
						this.spriteDirection = 1;
					}
					if ((double)this.velocity.X < -0.5)
					{
						this.spriteDirection = -1;
					}
				}
				this.rotation = this.velocity.X * 0.1f;
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					this.frame.Y = 0;
					this.frameCounter = 0.0;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y > num * 4 || this.frame.Y == 0)
					{
						this.frame.Y = num;
					}
				}
			}
			else if (this.type == 122)
			{
				this.spriteDirection = this.direction;
				this.rotation = this.velocity.X * 0.05f;
				if (this.ai[3] > 0f)
				{
					int num97 = (int)(this.ai[3] / 8f);
					this.frameCounter = 0.0;
					this.frame.Y = (num97 + 3) * num;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * 3)
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 74 || this.type == 297 || this.type == 298 || this.type == 442)
			{
				this.spriteDirection = this.direction;
				this.rotation = this.velocity.X * 0.1f;
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					this.frame.Y = num * 4;
					this.frameCounter = 0.0;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 362 || this.type == 364)
			{
				this.spriteDirection = this.direction;
				if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * 10)
					{
						this.frame.Y = num * 3;
					}
					if (this.frame.Y < num * 3)
					{
						this.frame.Y = num * 3;
					}
				}
			}
			else if (this.type == 363 || this.type == 365)
			{
				this.spriteDirection = this.direction;
				if (this.wet)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 2)
					{
						this.frame.Y = num;
					}
					if (this.frame.Y < num)
					{
						this.frame.Y = num;
					}
					this.rotation = 0f;
				}
				else if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					this.frame.Y = num;
					this.frameCounter = 0.0;
					this.rotation = 0f;
				}
				else
				{
					this.rotation = this.velocity.X * 0.1f;
					this.frameCounter += 1.0;
					if (this.frameCounter >= 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * Main.npcFrameCount[this.type])
					{
						this.frame.Y = num * 11;
					}
					if (this.frame.Y < num * 11)
					{
						this.frame.Y = num * 11;
					}
				}
			}
			else if (this.type == 62 || this.type == 66)
			{
				this.spriteDirection = this.direction;
				this.rotation = this.velocity.X * 0.1f;
				this.frameCounter += 1.0;
				if (this.frameCounter < 6.0)
				{
					this.frame.Y = 0;
				}
				else
				{
					this.frame.Y = num;
					if (this.frameCounter >= 11.0)
					{
						this.frameCounter = 0.0;
					}
				}
			}
			else if (this.type == 156)
			{
				this.spriteDirection = this.direction;
				this.rotation = this.velocity.X * 0.1f;
				this.frameCounter += 1.0;
				if (this.frameCounter >= 20.0)
				{
					this.frameCounter = 0.0;
				}
				int num98 = (int)this.frameCounter / 4;
				this.frame.Y = num98 * num;
			}
			else if (this.type == 63 || this.type == 64 || this.type == 103 || this.type == 242 || this.type == 256)
			{
				if ((this.type == 63 || this.type == 64 || this.type == 103 || this.type == 242) && this.ai[1] == 1f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y > num * 6)
					{
						this.frame.Y = num * 4;
					}
					if (this.frame.Y < num * 4)
					{
						this.frame.Y = num * 4;
					}
					return;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter < 6.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 18.0)
				{
					this.frame.Y = num * 2;
				}
				else
				{
					this.frame.Y = num * 3;
					if (this.frameCounter >= 23.0)
					{
						this.frameCounter = 0.0;
					}
				}
			}
			else if (this.type == 221)
			{
				if (this.localAI[2] == 1f)
				{
					if (this.localAI[0] == 1f)
					{
						this.frame.Y = 0;
						this.localAI[0] = 0f;
					}
					this.frameCounter += 1.0;
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * Main.npcFrameCount[this.type])
					{
						this.frame.Y = num * Main.npcFrameCount[this.type] - num;
					}
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 13.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 2 || this.type == 23 || this.type == 121 || this.type == 169 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194 || this.type == 317 || this.type == 318)
			{
				if (this.type == 2 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194 || this.type == 317 || this.type == 318)
				{
					if (this.velocity.X > 0f)
					{
						this.spriteDirection = 1;
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
					}
					if (this.velocity.X < 0f)
					{
						this.spriteDirection = -1;
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 3.14f;
					}
				}
				else if (this.type == 2 || this.type == 121)
				{
					if (this.velocity.X > 0f)
					{
						this.spriteDirection = 1;
					}
					if (this.velocity.X < 0f)
					{
						this.spriteDirection = -1;
					}
					this.rotation = this.velocity.X * 0.1f;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 133)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 3.14f;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = num;
				}
				else
				{
					this.frame.Y = 0;
				}
				if (this.frameCounter >= 16.0)
				{
					this.frame.Y = 0;
					this.frameCounter = 0.0;
				}
				if ((double)this.life < (double)this.lifeMax * 0.5)
				{
					this.frame.Y = this.frame.Y + num * 2;
				}
			}
			else if (this.type == 116)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 3.14f;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 5.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 75)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
				}
				else
				{
					this.spriteDirection = -1;
				}
				this.rotation = this.velocity.X * 0.1f;
				this.frameCounter += 1.0;
				if (this.frameCounter >= 4.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 157)
			{
				this.spriteDirection = this.direction;
				this.frameCounter += 1.0;
				if (!this.wet)
				{
					this.frameCounter += 1.0;
				}
				int num99 = 5;
				if (this.frameCounter < (double)num99)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < (double)(num99 * 2))
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < (double)(num99 * 3))
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < (double)(num99 * 4))
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < (double)(num99 * 5))
				{
					this.frame.Y = num * 3;
				}
				else if (this.frameCounter < (double)(num99 * 6))
				{
					this.frame.Y = num * 4;
				}
				else if (this.frameCounter < (double)(num99 * 7))
				{
					this.frame.Y = num * 5;
				}
				else if (this.frameCounter < (double)(num99 * 8))
				{
					this.frame.Y = num * 4;
				}
				else
				{
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 55 || this.type == 57 || this.type == 58 || this.type == 102 || this.type == 241 || this.type == 465)
			{
				this.spriteDirection = this.direction;
				this.frameCounter += 1.0;
				if (this.wet)
				{
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 3;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
				else if (this.frameCounter < 6.0)
				{
					this.frame.Y = num * 4;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num * 5;
				}
				else
				{
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 69)
			{
				if (this.ai[0] < 190f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 6.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 1)
						{
							this.frame.Y = 0;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * (Main.npcFrameCount[this.type] - 1);
				}
			}
			else if (this.type == 155)
			{
				if (this.velocity.Y > 0f)
				{
					this.frame.Y = num * 4;
					this.frameCounter = 0.0;
				}
				else if (this.velocity.Y < 0f)
				{
					this.frame.Y = num * 6;
					this.frameCounter = 0.0;
				}
				else
				{
					this.spriteDirection = this.direction;
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 0.4f);
					if ((this.direction > 0 && this.velocity.X < 0f) || (this.direction < 0 && this.velocity.X > 0f))
					{
						this.frameCounter = 0.0;
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 8.0)
					{
						this.frame.Y = num * 3;
					}
					else if (this.frameCounter < 16.0)
					{
						this.frame.Y = num * 6;
					}
					else if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 4;
					}
					else if (this.frameCounter < 32.0)
					{
						this.frame.Y = num * 5;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
			}
			else if (this.type == 329)
			{
				if (this.velocity.Y > 0f)
				{
					this.frame.Y = num * 3;
					this.frameCounter = 0.0;
				}
				else if (this.velocity.Y < 0f)
				{
					this.frame.Y = num * 2;
					this.frameCounter = 0.0;
				}
				else
				{
					this.spriteDirection = this.direction;
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 0.4f);
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y < num * 2)
						{
							this.frame.Y = num * 2;
						}
						if (this.frame.Y > num * 9)
						{
							this.frame.Y = num * 2;
						}
					}
				}
			}
			else if (this.type == 86)
			{
				if (this.velocity.Y == 0f || this.wet)
				{
					if (this.velocity.X < -2f)
					{
						this.spriteDirection = -1;
					}
					else if (this.velocity.X > 2f)
					{
						this.spriteDirection = 1;
					}
					else
					{
						this.spriteDirection = this.direction;
					}
				}
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = num * 15;
					this.frameCounter = 0.0;
				}
				else if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else if (Math.Abs(this.velocity.X) < 3f)
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter >= 6.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num >= 9)
						{
							this.frame.Y = num;
						}
						if (this.frame.Y / num <= 0)
						{
							this.frame.Y = num;
						}
					}
				}
				else
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter >= 10.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num >= 15)
						{
							this.frame.Y = num * 9;
						}
						if (this.frame.Y / num <= 8)
						{
							this.frame.Y = num * 9;
						}
					}
				}
			}
			else if (this.type == 315)
			{
				if (this.velocity.Y == 0f || this.wet)
				{
					if (this.velocity.X < -1f)
					{
						this.spriteDirection = -1;
					}
					else if (this.velocity.X > 1f)
					{
						this.spriteDirection = 1;
					}
					else
					{
						this.spriteDirection = this.direction;
					}
				}
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = 0;
					this.frameCounter = 0.0;
				}
				else
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter >= 8.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num > 10)
						{
							this.frame.Y = num;
						}
					}
				}
			}
			else if (this.type == 127)
			{
				if (this.ai[1] == 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 12.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num >= 2)
						{
							this.frame.Y = 0;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 2;
				}
			}
			else if (this.type == 129)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 2.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 130)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 8.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 67 || this.type == 217 || this.type == 218 || this.type == 219)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 220)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 10.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 109)
			{
				if (this.velocity.Y == 0f && ((this.velocity.X <= 0f && this.direction < 0) || (this.velocity.X >= 0f && this.direction > 0)))
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += (double)Math.Abs(this.velocity.X);
				if (this.frameCounter >= 7.0)
				{
					this.frameCounter -= 7.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 83 || this.type == 84 || this.type == 179)
			{
				if (this.ai[0] == 2f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = 0;
						}
					}
				}
			}
			else if (this.type == 72)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 3.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 65)
			{
				this.spriteDirection = this.direction;
				this.frameCounter += 1.0;
				if (this.wet && this.type == 65)
				{
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 3;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
			}
			else if (this.type >= 542 && this.type <= 545)
			{
				this.spriteDirection = this.direction;
				this.frameCounter += 1.0;
				if (this.frameCounter >= 16.0)
				{
					this.frameCounter = 0.0;
				}
				this.frame.Y = num * (int)(this.frameCounter / 4.0);
			}
			else if (this.type == 224)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
					this.rotation = this.velocity.Y * 0.2f;
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
					this.rotation = -this.velocity.Y * 0.2f;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * 4)
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 150 || this.type == 151 || this.type == 152 || this.type == 158 || this.type == 226)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
				}
				this.rotation = this.velocity.X * 0.1f;
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * 4)
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 48 || this.type == 49 || this.type == 51 || this.type == 60 || this.type == 82 || this.type == 93 || this.type == 137 || this.type == 182 || this.type == 210 || this.type == 211 || this.type == 253 || this.type == 316)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
				}
				this.rotation = this.velocity.X * 0.1f;
				if (this.type == 210 || this.type == 211)
				{
					this.frameCounter += 1.0;
					this.rotation = this.velocity.X * 0.2f;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 330)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
				}
				this.rotation = this.velocity.X * 0.15f;
				this.frameCounter += 1.0;
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 42 || (this.type >= 231 && this.type <= 235))
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 2.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 4.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 6.0)
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < 8.0)
				{
					this.frame.Y = num;
				}
				else
				{
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 205)
			{
				this.frameCounter += 0.5;
				if (this.frameCounter < 2.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 4.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 6.0)
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < 8.0)
				{
					this.frame.Y = num;
				}
				else
				{
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 176)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 4.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num)
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 43 || this.type == 56 || this.type == 175)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 6.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 18.0)
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < 24.0)
				{
					this.frame.Y = num;
				}
				if (this.frameCounter == 23.0)
				{
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 115)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 3.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 6.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < 15.0)
				{
					this.frame.Y = num;
				}
				if (this.frameCounter == 15.0)
				{
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 101)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 6.0)
				{
					this.frame.Y = this.frame.Y + num * 2;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num * 2)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 199)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.frame.Y < num * 3)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 6.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						return;
					}
				}
				else if (this.velocity.Y == 0f)
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter > 12.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y > num * 7)
						{
							this.frame.Y = num * 3;
							return;
						}
					}
				}
			}
			else if (this.type == 467)
			{
				if (this.ai[0] == 1f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						if (this.frame.Y < num * 6)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
							return;
						}
					}
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						if (this.frame.Y > num * 3)
						{
							this.frame.Y = num * 3;
						}
						if (this.frame.Y > 0)
						{
							this.frame.Y = this.frame.Y - num;
							this.frameCounter = 0.0;
							return;
						}
					}
				}
			}
			else if (this.type == 480)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 8;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.ai[2] < 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 3.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= Main.npcFrameCount[this.type] * num)
					{
						this.frame.Y = num * 21;
						return;
					}
					if (this.frame.Y < num * 21)
					{
						this.frame.Y = num * 21;
						return;
					}
				}
				else if (this.velocity.X == 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num > 7)
					{
						this.frame.Y = 0;
						return;
					}
				}
				else
				{
					this.frameCounter += (double)(1f + Math.Abs(this.velocity.X));
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 4)
					{
						this.frame.Y = num * 10;
						return;
					}
					if (this.frame.Y / num < 10)
					{
						this.frame.Y = num * 10;
						return;
					}
				}
			}
			else if (this.type == 483)
			{
				if (this.ai[0] == -1f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 21)
					{
						this.frame.Y = num * 21;
					}
					else if (this.frame.Y < num * 13)
					{
						this.frame.Y = num * 13;
					}
					this.rotation += this.velocity.X * 0.2f;
					return;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter > 4.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num * 11)
				{
					this.frame.Y = 0;
				}
				this.rotation = this.velocity.X * 0.1f;
				return;
			}
			else if (this.type == 482)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.ai[2] < 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 3.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= Main.npcFrameCount[this.type] * num)
					{
						this.frame.Y = num * 11;
						return;
					}
					if (this.frame.Y < num * 11)
					{
						this.frame.Y = num * 11;
						return;
					}
				}
				else
				{
					if (this.velocity.X == 0f)
					{
						this.frameCounter += 1.0;
						this.frame.Y = 0;
						return;
					}
					this.frameCounter += (double)(0.2f + Math.Abs(this.velocity.X));
					if (this.frameCounter > 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 10)
					{
						this.frame.Y = num * 2;
						return;
					}
					if (this.frame.Y / num < 2)
					{
						this.frame.Y = num * 2;
						return;
					}
				}
			}
			else if (this.type == 461)
			{
				if (this.wet)
				{
					if (this.velocity.X < 0f)
					{
						this.direction = -1;
					}
					if (this.velocity.X > 0f)
					{
						this.direction = 1;
					}
					if (this.spriteDirection != this.direction)
					{
						this.rotation *= -1f;
						this.spriteDirection = this.direction;
					}
					float num100 = (float)Math.Atan2((double)(this.velocity.Y * (float)this.direction), (double)(this.velocity.X * (float)this.direction));
					if ((double)Math.Abs(this.rotation - num100) >= 3.14)
					{
						if (num100 < this.rotation)
						{
							this.rotation -= 6.28f;
						}
						else
						{
							this.rotation += 6.28f;
						}
					}
					this.rotation = (this.rotation * 4f + num100) / 5f;
					this.frameCounter += (double)Math.Abs(this.velocity.Length());
					this.frameCounter += 1.0;
					if (this.frameCounter > 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num > 20)
					{
						this.frame.Y = num * 16;
						return;
					}
					if (this.frame.Y / num < 16)
					{
						this.frame.Y = num * 19;
						return;
					}
				}
				else
				{
					if ((double)this.rotation > 3.14)
					{
						this.rotation -= 6.28f;
					}
					if ((double)this.rotation > -0.01 && (double)this.rotation < 0.01)
					{
						this.rotation = 0f;
					}
					else
					{
						this.rotation *= 0.9f;
					}
					if (this.velocity.Y != 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num;
						return;
					}
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
						return;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
					this.frameCounter += 1.0;
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num > 15)
					{
						this.frame.Y = num * 2;
						return;
					}
				}
			}
			else if (this.type == 466)
			{
				if (this.ai[2] <= 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] == 0f)
					{
						this.frame.Y = 0;
						return;
					}
					if (this.ai[2] < -8f)
					{
						this.frame.Y = num;
						return;
					}
					this.frame.Y = num * 2;
					return;
				}
				else
				{
					if (this.velocity.Y != 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 3;
						return;
					}
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = num * 2;
						this.frameCounter = 0.0;
						return;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
					this.frameCounter += 1.0;
					if (this.frameCounter > 7.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num > 17)
					{
						this.frame.Y = num * 4;
					}
					if (this.frame.Y / num < 4)
					{
						this.frame.Y = num * 4;
						return;
					}
				}
			}
			else if (this.type == 471)
			{
				bool flag6 = false;
				if (this.ai[3] < 0f)
				{
					flag6 = true;
				}
				if (flag6)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.Length()) * 0.5f);
					this.frameCounter += 1.0;
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = num * 17;
						return;
					}
					if (this.frameCounter < 12.0)
					{
						this.frame.Y = num * 18;
						return;
					}
					if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 19;
						return;
					}
					if (this.frameCounter < 23.0)
					{
						this.frame.Y = num * 18;
						return;
					}
					this.frame.Y = num * 18;
					this.frameCounter = 0.0;
					return;
				}
				else
				{
					if (this.ai[3] == 1f)
					{
						this.frame.Y = num * 16;
						this.frameCounter = 0.0;
						return;
					}
					if (this.velocity.Y != 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num;
						return;
					}
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
						return;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
					this.frameCounter += 1.0;
					if (this.frameCounter > 7.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num > 15)
					{
						this.frame.Y = num * 2;
					}
					if (this.frame.Y / num < 2)
					{
						this.frame.Y = num * 2;
						return;
					}
				}
			}
			else if (this.type == 166)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 6;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.velocity.X == 0f)
				{
					this.frameCounter += 2.0;
					if (this.frameCounter > 7.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num > 5)
					{
						this.frame.Y = 0;
						return;
					}
				}
				else
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					this.frameCounter += 1.0;
					if (this.frameCounter > 9.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num > 12)
					{
						this.frame.Y = num * 7;
					}
					if (this.frame.Y / num < 7)
					{
						this.frame.Y = num * 7;
						return;
					}
				}
			}
			else if (this.type == 469)
			{
				if (this.ai[2] == 1f)
				{
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
					if (this.velocity.X < 0f)
					{
						this.direction = -1;
					}
					if (this.velocity.X > 0f)
					{
						this.direction = 1;
					}
					this.spriteDirection = this.direction;
					this.frameCounter += (double)Math.Abs(this.velocity.Length());
					if (this.frameCounter > 11.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num > 5)
					{
						this.frame.Y = num * 2;
					}
					if (this.frame.Y / num < 2)
					{
						this.frame.Y = num * 2;
						return;
					}
				}
				else
				{
					this.rotation = 0f;
					if (this.velocity.Y != 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num;
						return;
					}
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = 0;
						return;
					}
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					this.frameCounter += 1.0;
					if (this.frameCounter > 9.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num > 11)
					{
						this.frame.Y = num * 6;
					}
					if (this.frame.Y / num < 6)
					{
						this.frame.Y = num * 6;
						return;
					}
				}
			}
			else if (this.type == 351)
			{
				if (this.velocity.Y != 0f)
				{
					if (this.velocity.Y < 0f)
					{
						this.frame.Y = num;
					}
					else
					{
						this.frame.Y = num;
					}
					this.frameCounter = 0.0;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.velocity.X == 0f)
				{
					this.frame.Y = 0;
					this.frameCounter = 0.0;
					return;
				}
				this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
				this.frameCounter += 1.0;
				if (this.frameCounter > 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y / num >= Main.npcFrameCount[this.type])
				{
					this.frame.Y = num * 2;
					return;
				}
			}
			else if (this.type == 343)
			{
				if (this.velocity.Y != 0f)
				{
					if (this.velocity.Y < 0f)
					{
						this.frame.Y = 0;
					}
					else
					{
						this.frame.Y = num;
					}
					this.frameCounter = 0.0;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.velocity.X == 0f)
				{
					this.frame.Y = num * 2;
					this.frameCounter = 0.0;
					return;
				}
				this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
				this.frameCounter += 1.0;
				if (this.frameCounter > 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y / num >= Main.npcFrameCount[this.type])
				{
					this.frame.Y = num * 2;
					return;
				}
			}
			else if (this.type >= 269 && this.type <= 280)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.velocity.X == 0f)
				{
					if (this.type == 140)
					{
						this.frame.Y = num;
						this.frameCounter = 0.0;
						return;
					}
					this.frame.Y = 0;
					this.frameCounter = 0.0;
					return;
				}
				else
				{
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
					this.frameCounter += 1.0;
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = num * 2;
						return;
					}
				}
			}
			else if (this.type == 230)
			{
				if (this.velocity.Y == 0f)
				{
					this.rotation = 0f;
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
						return;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
					this.frameCounter += 1.0;
					if (this.frameCounter > 10.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
						return;
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
					if (this.velocity.Y > 4f)
					{
						this.rotation -= this.velocity.Y * 0.01f;
						return;
					}
				}
			}
			else if (this.type == 290)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.ai[2] > 0f)
				{
					if (this.ai[1] < 10f)
					{
						this.frame.Y = num * 11;
						return;
					}
					if (this.ai[1] < 20f)
					{
						this.frame.Y = num * 10;
						return;
					}
					this.frame.Y = num * 9;
					return;
				}
				else
				{
					if (this.velocity.X == 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = 0;
						return;
					}
					if (this.frame.Y < num * 2)
					{
						this.frame.Y = num * 2;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 8)
					{
						this.frame.Y = num * 2;
						return;
					}
				}
			}
			else if (this.type == 110 || this.type == 214 || this.type == 215 || this.type == 216 || this.type == 291 || this.type == 292 || this.type == 293)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.ai[2] > 0f)
				{
					this.spriteDirection = this.direction;
					this.frame.Y = num * (int)this.ai[2];
					this.frameCounter = 0.0;
					return;
				}
				if (this.frame.Y < num * 6)
				{
					this.frame.Y = num * 6;
				}
				this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
				this.frameCounter += (double)this.velocity.X;
				if (this.frameCounter > 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y / num >= Main.npcFrameCount[this.type])
				{
					this.frame.Y = num * 6;
					return;
				}
			}
			else if (this.type == 206)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.ai[2] > 0f)
				{
					this.spriteDirection = this.direction;
					this.frame.Y = num * (int)this.ai[2];
					this.frameCounter = 0.0;
					return;
				}
				if (this.frame.Y < num * 6)
				{
					this.frame.Y = num * 6;
				}
				this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
				this.frameCounter += (double)this.velocity.X;
				if (this.frameCounter > 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y / num >= Main.npcFrameCount[this.type])
				{
					this.frame.Y = num * 6;
					return;
				}
			}
			else if (this.type == 350)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 5;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.ai[2] > 0f)
				{
					this.spriteDirection = this.direction;
					this.frame.Y = num * ((int)this.ai[2] - 1);
					this.frameCounter = 0.0;
					return;
				}
				if (this.frame.Y < num * 7)
				{
					this.frame.Y = num * 7;
				}
				this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
				this.frameCounter += (double)(this.velocity.X * 1.3f);
				if (this.frameCounter > 4.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y / num >= Main.npcFrameCount[this.type])
				{
					this.frame.Y = num * 7;
					return;
				}
			}
			else if (this.type == 111)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 6;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.ai[2] > 0f)
				{
					this.spriteDirection = this.direction;
					this.frame.Y = num * ((int)this.ai[2] - 1);
					this.frameCounter = 0.0;
					return;
				}
				if (this.frame.Y < num * 7)
				{
					this.frame.Y = num * 7;
				}
				this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
				this.frameCounter += (double)(this.velocity.X * 1.3f);
				if (this.frameCounter > 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y / num >= Main.npcFrameCount[this.type])
				{
					this.frame.Y = num * 7;
					return;
				}
			}
			else if (this.type == 257)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.velocity.Y != 0f || (this.direction == -1 && this.velocity.X > 0f) || (this.direction == 1 && this.velocity.X < 0f))
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 4;
					return;
				}
				if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
					return;
				}
				this.frameCounter += (double)Math.Abs(this.velocity.X);
				if (this.frameCounter < 8.0)
				{
					this.frame.Y = 0;
					return;
				}
				if (this.frameCounter < 16.0)
				{
					this.frame.Y = num;
					return;
				}
				if (this.frameCounter < 24.0)
				{
					this.frame.Y = num * 2;
					return;
				}
				if (this.frameCounter < 32.0)
				{
					this.frame.Y = num * 3;
					return;
				}
				this.frameCounter = 0.0;
				return;
			}
			else if (this.type == 258)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.velocity.Y != 0f || (this.direction == -1 && this.velocity.X > 0f) || (this.direction == 1 && this.velocity.X < 0f))
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 1.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 5 || this.frame.Y < num * 3)
					{
						this.frame.Y = num * 3;
						return;
					}
				}
				else
				{
					if (this.velocity.X == 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = 0;
						return;
					}
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter < 8.0)
					{
						this.frame.Y = 0;
						return;
					}
					if (this.frameCounter < 16.0)
					{
						this.frame.Y = num;
						return;
					}
					if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 2;
						return;
					}
					this.frameCounter = 0.0;
					return;
				}
			}
			else if (this.type == 348)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 8;
					return;
				}
				if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
					return;
				}
				this.frameCounter += (double)Math.Abs(this.velocity.X);
				this.frameCounter += 1.0;
				if (this.frameCounter > 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num * 7)
				{
					this.frame.Y = num;
					return;
				}
			}
			else if (this.type == 349)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 3.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num * 7)
				{
					this.frame.Y = 0;
					return;
				}
			}
			else if (this.type == 3 || this.type == 342 || this.type == 331 || this.type == 332 || this.type == 52 || this.type == 53 || this.type == 536 || this.type == 132 || this.type == 161 || this.type == 162 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 200 || this.type == 223 || this.type == 251 || this.type == 254 || this.type == 255 || (this.type >= 319 && this.type <= 321))
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.velocity.Y != 0f || (this.direction == -1 && this.velocity.X > 0f) || (this.direction == 1 && this.velocity.X < 0f))
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 2;
					return;
				}
				if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
					return;
				}
				this.frameCounter += (double)Math.Abs(this.velocity.X);
				if (this.frameCounter < 8.0)
				{
					this.frame.Y = 0;
					return;
				}
				if (this.frameCounter < 16.0)
				{
					this.frame.Y = num;
					return;
				}
				if (this.frameCounter < 24.0)
				{
					this.frame.Y = num * 2;
					return;
				}
				if (this.frameCounter < 32.0)
				{
					this.frame.Y = num;
					return;
				}
				this.frameCounter = 0.0;
				return;
			}
			else if (this.type == 148 || this.type == 149 || this.type == 168 || this.type == 470)
			{
				int num101 = 0;
				if (this.localAI[0] == 2f)
				{
					num101 = 3;
				}
				if (this.localAI[0] == 3f)
				{
					num101 = 6;
				}
				if (this.localAI[0] == 4f)
				{
					num101 = 9;
				}
				num101 *= num;
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = num101;
						this.frameCounter = 0.0;
						return;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = num101;
						return;
					}
					if (this.frameCounter < 12.0)
					{
						this.frame.Y = num + num101;
						return;
					}
					if (this.frameCounter < 15.0)
					{
						this.frame.Y = num * 2 + num101;
						return;
					}
					this.frameCounter = 0.0;
					this.frame.Y = num * 2 + num101;
					return;
				}
				else
				{
					if (this.velocity.Y < 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 2 + num101;
						return;
					}
					if (this.velocity.Y > 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 2 + num101;
						return;
					}
				}
			}
			else if (this.type == 299 || this.type == 538 || this.type == 539)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
						return;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 0.5f);
					this.frameCounter += 1.0;
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 1)
					{
						this.frame.Y = num;
						return;
					}
				}
				else
				{
					if (this.velocity.Y < 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 2;
						return;
					}
					if (this.velocity.Y > 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 4;
						return;
					}
				}
			}
			else if (this.type == 300 || this.type == 447)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frameCounter += 1.0;
						if (this.frameCounter > 8.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num > 1)
						{
							this.frame.Y = 0;
							return;
						}
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 0.5f);
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 2;
							return;
						}
					}
				}
				else
				{
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 0.5f);
					this.frameCounter += 1.0;
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = num * 2;
						return;
					}
				}
			}
			else if (this.type == 361 || this.type == 445)
			{
				this.spriteDirection = this.direction;
				if (this.velocity.Y == 0f)
				{
					if (this.velocity.X == 0f)
					{
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frameCounter = 0.0;
							this.frame.Y = this.frame.Y + num;
						}
						if (this.frame.Y > num * 5)
						{
							this.frame.Y = 0;
							return;
						}
					}
					else
					{
						this.frameCounter += 1.0;
						int num102 = 6;
						if (this.frameCounter < (double)num102)
						{
							this.frame.Y = 0;
							return;
						}
						if (this.frameCounter < (double)(num102 * 2))
						{
							this.frame.Y = num * 6;
							return;
						}
						if (this.frameCounter < (double)(num102 * 3))
						{
							this.frame.Y = num * 8;
							return;
						}
						this.frame.Y = num * 9;
						if (this.frameCounter >= (double)(num102 * 4 - 1))
						{
							this.frameCounter = 0.0;
							return;
						}
					}
				}
				else
				{
					if (this.velocity.Y > 0f)
					{
						this.frame.Y = num * 9;
						return;
					}
					this.frame.Y = num * 8;
					return;
				}
			}
			else if (this.type == 366 || this.type == 367)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.velocity.X == 0f)
				{
					this.frame.Y = 0;
					this.frameCounter = 0.0;
					return;
				}
				this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
				this.frameCounter += 1.0;
				if (this.frameCounter > 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y / num >= Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
					return;
				}
			}
			else if (this.type == 46 || this.type == 47 || this.type == 303 || this.type == 337 || this.type == 443 || this.type == 464 || this.type == 540)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
						return;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
					this.frameCounter += 1.0;
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
						return;
					}
				}
				else
				{
					if (this.velocity.Y < 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 4;
						return;
					}
					if (this.velocity.Y > 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 6;
						return;
					}
				}
			}
			else if (this.type == 4 || this.type == 125 || this.type == 126)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 7.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 14.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 21.0)
				{
					this.frame.Y = num * 2;
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				if (this.ai[0] > 1f)
				{
					this.frame.Y = this.frame.Y + num * 3;
					return;
				}
			}
			else if (this.type == 5)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
					return;
				}
			}
			else if (this.type == 94)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 6.0)
				{
					this.frame.Y = 0;
					return;
				}
				if (this.frameCounter < 12.0)
				{
					this.frame.Y = num;
					return;
				}
				if (this.frameCounter < 18.0)
				{
					this.frame.Y = num * 2;
					return;
				}
				this.frame.Y = num;
				if (this.frameCounter >= 23.0)
				{
					this.frameCounter = 0.0;
					return;
				}
			}
			else if (this.type == 6 || this.type == 173)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
					return;
				}
			}
			else if (this.type == 24)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.ai[1] > 0f)
				{
					if (this.frame.Y < 4)
					{
						this.frameCounter = 0.0;
					}
					this.frameCounter += 1.0;
					if (this.frameCounter <= 4.0)
					{
						this.frame.Y = num * 4;
						return;
					}
					if (this.frameCounter <= 8.0)
					{
						this.frame.Y = num * 5;
						return;
					}
					if (this.frameCounter <= 12.0)
					{
						this.frame.Y = num * 6;
						return;
					}
					if (this.frameCounter <= 16.0)
					{
						this.frame.Y = num * 7;
						return;
					}
					if (this.frameCounter <= 20.0)
					{
						this.frame.Y = num * 8;
						return;
					}
					this.frame.Y = num * 9;
					this.frameCounter = 100.0;
					return;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter <= 4.0)
					{
						this.frame.Y = 0;
						return;
					}
					if (this.frameCounter <= 8.0)
					{
						this.frame.Y = num;
						return;
					}
					if (this.frameCounter <= 12.0)
					{
						this.frame.Y = num * 2;
						return;
					}
					this.frame.Y = num * 3;
					if (this.frameCounter >= 16.0)
					{
						this.frameCounter = 0.0;
						return;
					}
				}
			}
			else if (this.type == 29 || this.type == 32 || this.type == 45 || this.type == 172 || (this.type >= 281 && this.type <= 286))
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				this.frame.Y = 0;
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = this.frame.Y + num;
					return;
				}
				if (this.ai[1] > 0f)
				{
					this.frame.Y = this.frame.Y + num * 2;
					return;
				}
			}
			else if (this.type == 34)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 4.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
		}

		public void SimpleFlyMovement(Vector2 desiredVelocity, float moveSpeed)
		{
			if (this.velocity.X < desiredVelocity.X)
			{
				this.velocity.X = this.velocity.X + moveSpeed;
				if (this.velocity.X < 0f && desiredVelocity.X > 0f)
				{
					this.velocity.X = this.velocity.X + moveSpeed;
				}
			}
			else if (this.velocity.X > desiredVelocity.X)
			{
				this.velocity.X = this.velocity.X - moveSpeed;
				if (this.velocity.X > 0f && desiredVelocity.X < 0f)
				{
					this.velocity.X = this.velocity.X - moveSpeed;
				}
			}
			if (this.velocity.Y < desiredVelocity.Y)
			{
				this.velocity.Y = this.velocity.Y + moveSpeed;
				if (this.velocity.Y < 0f && desiredVelocity.Y > 0f)
				{
					this.velocity.Y = this.velocity.Y + moveSpeed;
					return;
				}
			}
			else if (this.velocity.Y > desiredVelocity.Y)
			{
				this.velocity.Y = this.velocity.Y - moveSpeed;
				if (this.velocity.Y > 0f && desiredVelocity.Y < 0f)
				{
					this.velocity.Y = this.velocity.Y - moveSpeed;
				}
			}
		}

		public void HealEffect(int healAmount, bool broadcast = true)
		{
			int num = CombatText.NewText(new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height), CombatText.HealLife, string.Concat(healAmount), false, false);
			if (broadcast && Main.netMode == 2 && num != 100)
			{
				CombatText combatText = Main.combatText[num];
				NetMessage.SendData(81, -1, -1, combatText.text, (int)combatText.color.PackedValue, combatText.position.X, combatText.position.Y, 0f, 0, 0, 0);
			}
		}

		public static void HealEffect(Rectangle r, int healAmount, bool broadcast = true)
		{
			int num = CombatText.NewText(r, CombatText.HealLife, string.Concat(healAmount), false, false);
			if (broadcast && Main.netMode == 2 && num != 100)
			{
				CombatText combatText = Main.combatText[num];
				NetMessage.SendData(81, -1, -1, combatText.text, (int)combatText.color.PackedValue, combatText.position.X, combatText.position.Y, 0f, 0, 0, 0);
			}
		}

		public int FindClosestPlayer()
		{
			float num;
			return this.FindClosestPlayer(out num);
		}

		public int FindClosestPlayer(out float distanceToPlayer)
		{
			Vector2 center = base.Center;
			float num = 3.40282347E+38f;
			int num2 = -1;
			for (int i = 0; i < 255; i++)
			{
				Player player = Main.player[i];
				if (player.active && !player.dead && !player.ghost)
				{
					float num3 = Vector2.DistanceSquared(center, player.Center);
					if (num3 < num)
					{
						num = num3;
						num2 = i;
					}
				}
			}
			if (num2 < 0)
			{
				for (int j = 0; j < 255; j++)
				{
					Player player = Main.player[j];
					if (player.active)
					{
						float num4 = Vector2.DistanceSquared(center, player.Center);
						if (num4 < num)
						{
							num = num4;
							num2 = j;
						}
					}
				}
			}
			distanceToPlayer = (float)Math.Sqrt((double)num);
			return num2;
		}

		public void BigMimicSpawnSmoke()
		{
			if (Main.netMode == 2)
			{
				NetMessage.SendData(51, -1, -1, "", this.whoAmI, 4f, 0f, 0f, 0, 0, 0);
				return;
			}
			for (int i = 0; i < 20; i++)
			{
				int num = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 50, default(Color), 1.5f);
				Main.dust[num].velocity *= 2f;
				Main.dust[num].noGravity = true;
			}
			for (int j = 0; j < 3; j++)
			{
				for (int k = 0; k < 2; k++)
				{
					int num2 = Gore.NewGore(new Vector2(this.position.X + (float)(this.width * j) * 0.45f - 20f, this.position.Y + (float)(this.height * k) * 0.5f + 10f), new Vector2(0f, 0f), 99, 1.1f);
					Main.gore[num2].velocity *= 0.3f;
				}
			}
		}

		public static bool BigMimicSummonCheck(int x, int y)
		{
			if (Main.netMode == 1 || !Main.hardMode)
			{
				return false;
			}
			int num = Chest.FindChest(x, y);
			if (num < 0)
			{
				return false;
			}
			int num2 = 0;
			int num3 = 0;
			int num4 = 0;
			for (int i = 0; i < 40; i++)
			{
				ushort num5 = Main.tile[Main.chest[num].x, Main.chest[num].y].type;
				int num6 = (int)(Main.tile[Main.chest[num].x, Main.chest[num].y].frameX / 36);
				if (num5 == 21 && (num6 < 5 || num6 > 6) && Main.chest[num].item[i] != null && Main.chest[num].item[i].type > 0)
				{
					if (Main.chest[num].item[i].type == 3092)
					{
						num2 += Main.chest[num].item[i].stack;
					}
					else if (Main.chest[num].item[i].type == 3091)
					{
						num3 += Main.chest[num].item[i].stack;
					}
					else
					{
						num4++;
					}
				}
			}
			if (num4 == 0 && num2 + num3 == 1)
			{
				if (num2 != 1)
				{
				}
				if (TileLoader.IsChest(Main.tile[x, y].type))
				{
					if (Main.tile[x, y].frameX % 36 != 0)
					{
						x--;
					}
					if (Main.tile[x, y].frameY % 36 != 0)
					{
						y--;
					}
					int number = Chest.FindChest(x, y);
					for (int j = x; j <= x + 1; j++)
					{
						for (int k = y; k <= y + 1; k++)
						{
							if (Main.tile[j, k].type == 21)
							{
								Main.tile[j, k].active(false);
							}
						}
					}
					for (int l = 0; l < 40; l++)
					{
						Main.chest[num].item[l] = new Item();
					}
					Chest.DestroyChest(x, y);
					NetMessage.SendData(34, -1, -1, "", 1, (float)x, (float)y, 0f, number, 0, 0);
					NetMessage.SendTileSquare(-1, x, y, 3);
				}
				int num7 = 475;
				if (num3 == 1)
				{
					if (WorldGen.crimson)
					{
						num7 = 474;
					}
					else
					{
						num7 = 473;
					}
				}
				int num8 = NPC.NewNPC(x * 16 + 16, y * 16 + 32, num7, 0, 0f, 0f, 0f, 0f, 255);
				Main.npc[num8].whoAmI = num8;
				NetMessage.SendData(23, -1, -1, "", num8, 0f, 0f, 0f, 0, 0, 0);
				Main.npc[num8].BigMimicSpawnSmoke();
			}
			return false;
		}

		public void TargetClosest(bool faceTarget = true)
		{
			float num = 0f;
			float num2 = 0f;
			bool flag = false;
			int num3 = -1;
			for (int i = 0; i < 255; i++)
			{
				if (Main.player[i].active && !Main.player[i].dead && !Main.player[i].ghost)
				{
					float num4 = Math.Abs(Main.player[i].position.X + (float)(Main.player[i].width / 2) - this.position.X + (float)(this.width / 2)) + Math.Abs(Main.player[i].position.Y + (float)(Main.player[i].height / 2) - this.position.Y + (float)(this.height / 2));
					num4 -= (float)Main.player[i].aggro;
					if (Main.player[i].npcTypeNoAggro[this.type] && this.direction != 0)
					{
						num4 += 1000f;
					}
					if (!flag || num4 < num)
					{
						flag = true;
						num3 = -1;
						num2 = Math.Abs(Main.player[i].position.X + (float)(Main.player[i].width / 2) - this.position.X + (float)(this.width / 2)) + Math.Abs(Main.player[i].position.Y + (float)(Main.player[i].height / 2) - this.position.Y + (float)(this.height / 2));
						num = num4;
						this.target = i;
					}
					if (Main.player[i].tankPet >= 0 && !Main.player[i].npcTypeNoAggro[this.type])
					{
						int tankPet = Main.player[i].tankPet;
						float num5 = Math.Abs(Main.projectile[tankPet].position.X + (float)(Main.projectile[tankPet].width / 2) - this.position.X + (float)(this.width / 2)) + Math.Abs(Main.projectile[tankPet].position.Y + (float)(Main.projectile[tankPet].height / 2) - this.position.Y + (float)(this.height / 2));
						num5 -= 200f;
						if (num5 < num && num5 < 200f && Collision.CanHit(base.Center, 1, 1, Main.projectile[tankPet].Center, 1, 1))
						{
							num3 = tankPet;
						}
					}
				}
			}
			if (num3 >= 0)
			{
				int num6 = num3;
				this.targetRect = new Rectangle((int)Main.projectile[num6].position.X, (int)Main.projectile[num6].position.Y, Main.projectile[num6].width, Main.projectile[num6].height);
				this.direction = 1;
				if ((float)(this.targetRect.X + this.targetRect.Width / 2) < this.position.X + (float)(this.width / 2))
				{
					this.direction = -1;
				}
				this.directionY = 1;
				if ((float)(this.targetRect.Y + this.targetRect.Height / 2) < this.position.Y + (float)(this.height / 2))
				{
					this.directionY = -1;
				}
			}
			else
			{
				if (this.target < 0 || this.target >= 255)
				{
					this.target = 0;
				}
				this.targetRect = new Rectangle((int)Main.player[this.target].position.X, (int)Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height);
				if (Main.player[this.target].dead)
				{
					faceTarget = false;
				}
				if (Main.player[this.target].npcTypeNoAggro[this.type] && this.direction != 0)
				{
					faceTarget = false;
				}
				if (faceTarget)
				{
					float num7 = num2 - (float)Main.player[this.target].aggro;
					float num8 = (float)((Main.player[this.target].height + Main.player[this.target].width + this.height + this.width) / 4 + 750 + 50);
					if (Main.player[this.target].itemAnimation != 0 || Main.player[this.target].aggro >= 0 || num7 <= num8 || this.oldTarget < 0 || this.oldTarget > 254)
					{
						this.direction = 1;
						if ((float)(this.targetRect.X + this.targetRect.Width / 2) < this.position.X + (float)(this.width / 2))
						{
							this.direction = -1;
						}
						this.directionY = 1;
						if ((float)(this.targetRect.Y + this.targetRect.Height / 2) < this.position.Y + (float)(this.height / 2))
						{
							this.directionY = -1;
						}
					}
				}
			}
			if (this.confused)
			{
				this.direction *= -1;
			}
			if ((this.direction != this.oldDirection || this.directionY != this.oldDirectionY || this.target != this.oldTarget) && !this.collideX && !this.collideY)
			{
				this.netUpdate = true;
			}
		}

		public void CheckActive()
		{
			if (this.active)
			{
				int num = this.type;
				if (num <= 267)
				{
					if (num <= 119)
					{
						if (num <= 41)
						{
							switch (num)
							{
								case 8:
								case 9:
								case 11:
								case 12:
								case 14:
								case 15:
									break;
								case 10:
								case 13:
									goto IL_203;
								default:
									switch (num)
									{
										case 40:
										case 41:
											break;
										default:
											goto IL_203;
									}
									break;
							}
						}
						else
						{
							switch (num)
							{
								case 88:
								case 89:
								case 90:
								case 91:
								case 92:
								case 96:
								case 97:
								case 99:
								case 100:
									break;
								case 93:
								case 94:
								case 95:
								case 98:
									goto IL_203;
								default:
									switch (num)
									{
										case 113:
										case 114:
										case 115:
										case 118:
										case 119:
											break;
										case 116:
										case 117:
											goto IL_203;
										default:
											goto IL_203;
									}
									break;
							}
						}
					}
					else if (num <= 249)
					{
						switch (num)
						{
							case 134:
							case 135:
							case 136:
								break;
							case 137:
							case 138:
								goto IL_203;
							case 139:
								if (NPC.npcsFoundForCheckActive[134])
								{
									return;
								}
								goto IL_203;
							default:
								switch (num)
								{
									case 246:
									case 247:
									case 248:
									case 249:
										break;
									default:
										goto IL_203;
								}
								break;
						}
					}
					else if (num != 263 && num != 267)
					{
						goto IL_203;
					}
				}
				else if (num <= 422)
				{
					if (num <= 380)
					{
						if (num != 328)
						{
							switch (num)
							{
								case 379:
								case 380:
									break;
								default:
									goto IL_203;
							}
						}
					}
					else
					{
						switch (num)
						{
							case 396:
							case 397:
							case 398:
							case 400:
								break;
							case 399:
								goto IL_203;
							default:
								if (num != 422)
								{
									goto IL_203;
								}
								break;
						}
					}
				}
				else if (num <= 488)
				{
					switch (num)
					{
						case 437:
						case 438:
						case 439:
						case 440:
							break;
						default:
							if (num != 488)
							{
								goto IL_203;
							}
							break;
					}
				}
				else if (num != 493 && num != 507 && num != 517)
				{
					goto IL_203;
				}
				return;
				IL_203:
				if (!NPCLoader.CheckActive(this))
				{
					return;
				}
				if (this.townNPC)
				{
					Rectangle rectangle = new Rectangle((int)(this.position.X + (float)(this.width / 2) - (float)NPC.townRangeX), (int)(this.position.Y + (float)(this.height / 2) - (float)NPC.townRangeY), NPC.townRangeX * 2, NPC.townRangeY * 2);
					for (int i = 0; i < 255; i++)
					{
						if (Main.player[i].active && rectangle.Intersects(new Rectangle((int)Main.player[i].position.X, (int)Main.player[i].position.Y, Main.player[i].width, Main.player[i].height)))
						{
							Main.player[i].townNPCs += this.npcSlots;
						}
					}
					return;
				}
				bool flag = false;
				Rectangle rectangle2 = new Rectangle((int)(this.position.X + (float)(this.width / 2) - (float)NPC.activeRangeX), (int)(this.position.Y + (float)(this.height / 2) - (float)NPC.activeRangeY), NPC.activeRangeX * 2, NPC.activeRangeY * 2);
				Rectangle rectangle3 = new Rectangle((int)((double)(this.position.X + (float)(this.width / 2)) - (double)NPC.sWidth * 0.5 - (double)this.width), (int)((double)(this.position.Y + (float)(this.height / 2)) - (double)NPC.sHeight * 0.5 - (double)this.height), NPC.sWidth + this.width * 2, NPC.sHeight + this.height * 2);
				for (int j = 0; j < 255; j++)
				{
					if (Main.player[j].active)
					{
						if (rectangle2.Intersects(new Rectangle((int)Main.player[j].position.X, (int)Main.player[j].position.Y, Main.player[j].width, Main.player[j].height)))
						{
							flag = true;
							if (this.type != 25 && this.type != 30 && this.type != 33 && this.releaseOwner == 255 && this.lifeMax > 0)
							{
								if (Main.slimeRain && Main.slimeRainNPC[this.type])
								{
									Main.player[j].activeNPCs += this.npcSlots * Main.slimeRainNPCSlots;
								}
								else
								{
									Main.player[j].activeNPCs += this.npcSlots;
								}
							}
						}
						if (rectangle3.Intersects(new Rectangle((int)Main.player[j].position.X, (int)Main.player[j].position.Y, Main.player[j].width, Main.player[j].height)))
						{
							this.timeLeft = NPC.activeTime;
						}
						if (this.boss)
						{
							flag = true;
						}
						int num2 = this.type;
						if (num2 <= 39)
						{
							if (num2 <= 10)
							{
								if (num2 != 7 && num2 != 10)
								{
									goto IL_5F5;
								}
							}
							else if (num2 != 13)
							{
								switch (num2)
								{
									case 35:
									case 36:
									case 39:
										break;
									case 37:
									case 38:
										goto IL_5F5;
									default:
										goto IL_5F5;
								}
							}
						}
						else if (num2 <= 131)
						{
							if (num2 != 87)
							{
								switch (num2)
								{
									case 127:
									case 128:
									case 129:
									case 130:
									case 131:
										break;
									default:
										goto IL_5F5;
								}
							}
						}
						else
						{
							switch (num2)
							{
								case 392:
								case 393:
								case 394:
									break;
								default:
									if (num2 == 399)
									{
										if (this.ai[0] == 2f || this.ai[0] == 1f)
										{
											this.timeLeft = NPC.activeTime;
										}
										flag = true;
										goto IL_5F5;
									}
									switch (num2)
									{
										case 491:
										case 492:
											break;
										default:
											goto IL_5F5;
									}
									break;
							}
						}
						flag = true;
					}
					IL_5F5:
					;
				}
				this.timeLeft--;
				if (this.timeLeft <= 0)
				{
					flag = false;
				}
				if (!flag && Main.netMode != 1)
				{
					NPC.noSpawnCycle = true;
					this.active = false;
					if (Main.netMode == 2)
					{
						this.netSkip = -1;
						this.life = 0;
						NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
					}
					if (this.aiStyle == 6)
					{
						for (int k = (int)this.ai[0]; k > 0; k = (int)Main.npc[k].ai[0])
						{
							if (Main.npc[k].active)
							{
								Main.npc[k].active = false;
								if (Main.netMode == 2)
								{
									Main.npc[k].life = 0;
									Main.npc[k].netSkip = -1;
									NetMessage.SendData(23, -1, -1, "", k, 0f, 0f, 0f, 0, 0, 0);
								}
							}
						}
					}
				}
			}
		}

		public void checkDead()
		{
			if (!this.active)
			{
				return;
			}
			if (this.realLife >= 0 && this.realLife != this.whoAmI)
			{
				return;
			}
			if (this.life <= 0)
			{
				if (this.type == 397 || this.type == 396)
				{
					if (this.ai[0] != -2f)
					{
						this.ai[0] = -2f;
						this.life = this.lifeMax;
						this.netUpdate = true;
						this.dontTakeDamage = true;
						if (Main.netMode != 1)
						{
							int num = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 400, 0, 0f, 0f, 0f, 0f, 255);
							Main.npc[num].ai[3] = this.ai[3];
							Main.npc[num].netUpdate = true;
						}
					}
					return;
				}
				if (this.type == 398 && this.ai[0] != 2f)
				{
					this.ai[0] = 2f;
					this.life = this.lifeMax;
					this.netUpdate = true;
					this.dontTakeDamage = true;
					return;
				}
				if ((this.type == 517 || this.type == 422 || this.type == 507 || this.type == 493) && this.ai[2] != 1f)
				{
					this.ai[2] = 1f;
					this.ai[1] = 0f;
					this.life = this.lifeMax;
					this.dontTakeDamage = true;
					this.netUpdate = true;
					return;
				}
				if (!NPCLoader.CheckDead(this))
				{
					return;
				}
				NPC.noSpawnCycle = true;
				if (this.townNPC && this.type != 37 && this.type != 453)
				{
					string name = this.name;
					if (this.displayName != "")
					{
						name = this.displayName;
					}
					if (Main.netMode == 0)
					{
						if (this.type == 369)
						{
							Main.NewText(name + Lang.misc[36], 255, 25, 25, false);
						}
						else
						{
							Main.NewText(name + Lang.misc[19], 255, 25, 25, false);
						}
					}
					else if (Main.netMode == 2)
					{
						if (this.type == 369)
						{
							NetMessage.SendData(25, -1, -1, name + Lang.misc[36], 255, 255f, 25f, 25f, 0, 0, 0);
						}
						else
						{
							NetMessage.SendData(25, -1, -1, name + Lang.misc[19], 255, 255f, 25f, 25f, 0, 0, 0);
						}
					}
				}
				if (Main.netMode != 1 && !Main.dayTime && this.type == 54 && !NPC.AnyNPCs(35))
				{
					for (int i = 0; i < 255; i++)
					{
						if (Main.player[i].active && !Main.player[i].dead && Main.player[i].killClothier)
						{
							NPC.SpawnSkeletron();
							break;
						}
					}
				}
				if (this.townNPC && Main.netMode != 1 && this.homeless && WorldGen.spawnNPC == this.type)
				{
					WorldGen.spawnNPC = 0;
				}
				if (this.soundKilled > 0)
				{
					Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, this.soundKilled);
				}
				if (this.type == 13 || this.type == 14 || this.type == 15)
				{
					bool flag = true;
					for (int j = 0; j < 200; j++)
					{
						if (j != this.whoAmI && Main.npc[j].active && (Main.npc[j].type == 13 || Main.npc[j].type == 14 || Main.npc[j].type == 15))
						{
							flag = false;
							break;
						}
					}
					if (flag)
					{
						this.boss = true;
						this.NPCLoot();
					}
					else
					{
						this.NPCLoot();
					}
				}
				else if (this.type == 134)
				{
					Vector2 position = this.position;
					Vector2 center = Main.player[this.target].Center;
					float num2 = 1E+08f;
					Vector2 position2 = this.position;
					for (int k = 0; k < 200; k++)
					{
						if (Main.npc[k].active && (Main.npc[k].type == 134 || Main.npc[k].type == 135 || Main.npc[k].type == 136))
						{
							float num3 = Math.Abs(Main.npc[k].Center.X - center.X) + Math.Abs(Main.npc[k].Center.Y - center.Y);
							if (num3 < num2)
							{
								num2 = num3;
								position2 = Main.npc[k].position;
							}
						}
					}
					this.position = position2;
					this.NPCLoot();
					this.position = position;
				}
				else
				{
					this.NPCLoot();
				}
				this.active = false;
				if (Main.snowMoon)
				{
					string text = "";
					int[] array = new int[]
					{
						0,
						25,
						15,
						10,
						30,
						100,
						160,
						180,
						200,
						250,
						300,
						375,
						450,
						525,
						675,
						850,
						1025,
						1325,
						1550,
						2000,
						0
					};
					int num4 = array[NPC.waveCount];
					switch (NPC.waveCount)
					{
						case 1:
							text = "Wave 2: Zombie Elf and Elf Archer";
							break;
						case 2:
							text = "Wave 3: Zombie Elf, Elf Archer, Gingerbread Man, and Nutcracker";
							break;
						case 3:
							text = "Wave 4: Everscream, Zombie Elf, Elf Archer, and Gingerbread Man";
							break;
						case 4:
							text = "Wave 5: Everscream, Zombie Elf, Elf Archer, and Nutcracker";
							break;
						case 5:
							text = "Wave 6: Everscream, Elf Archer, Nutcracker, and Elf Copter";
							break;
						case 6:
							text = "Wave 7: Santa-NK1, Gingerbread Man, Elf Archer, and Zombie Elf";
							break;
						case 7:
							text = "Wave 8: Santa-NK1, Elf Copter, Elf Archer, Nutcracker, and Krampus";
							break;
						case 8:
							text = "Wave 9: Santa-NK1, Everscream, Nutcracker, Elf Copter, and Gingerbread Man";
							break;
						case 9:
							text = "Wave 10: Santa-NK1, Everscream, Krampus, Zombie Elf, and Elf Helicopter";
							break;
						case 10:
							text = "Wave 11: Ice Queen, Flocko, Zombie Elf, and Gingerbread Man";
							break;
						case 11:
							text = "Wave 12: Ice Queen, Everscream, Gingerbread Man, Yeti, and Zombie Elf";
							break;
						case 12:
							text = "Wave 13: Ice Queen, Santa-NK1, Gingerbread Man, Flocko, Yeti, and Elf Helicopter";
							break;
						case 13:
							text = "Wave 14: Ice Queen, Santa-NK1, Everscream, Yeti, and Krampus";
							break;
						case 14:
							text = "Wave 15: Ice Queen, Santa-NK1, Everscream, Yeti, and Elf Copter";
							break;
						case 15:
							text = "Wave 16: Ice Queen, Santa-NK1, Everscream, Yeti and Flocko";
							break;
						case 16:
							text = "Wave 17: Ice Queen, Santa-NK1, Everscream, Yeti, Krampus, Elf Copter";
							break;
						case 17:
							text = "Wave 18: Ice Queen, Santa-NK1, Everscream, Yeti, Nutcracker, Krampus";
							break;
						case 18:
							text = "Wave 19: Ice Queen, Santa-NK1, Everscream, Yeti";
							break;
						case 19:
							text = "Final Wave: Ice Queen, Santa-NK1, and Everscream";
							break;
					}
					float num5 = 0f;
					switch (this.type)
					{
						case 338:
						case 339:
						case 340:
							num5 = 1f;
							break;
						case 341:
							num5 = 20f;
							break;
						case 342:
							num5 = 2f;
							break;
						case 343:
							num5 = 18f;
							break;
						case 344:
							num5 = 50f;
							break;
						case 345:
							num5 = 150f;
							break;
						case 346:
							num5 = 100f;
							break;
						case 347:
							num5 = 8f;
							break;
						case 348:
						case 349:
							num5 = 4f;
							break;
						case 350:
							num5 = 3f;
							break;
					}
					if (Main.expertMode)
					{
						num5 *= 2f;
					}
					float num6 = NPC.waveKills;
					NPC.waveKills += num5;
					if (NPC.waveKills >= (float)num4 && num4 != 0)
					{
						NPC.waveKills = 0f;
						NPC.waveCount++;
						num4 = array[NPC.waveCount];
						if (text != "")
						{
							if (Main.netMode == 0)
							{
								Main.NewText(text, 175, 75, 255, false);
							}
							else if (Main.netMode == 2)
							{
								NetMessage.SendData(25, -1, -1, text, 255, 175f, 75f, 255f, 0, 0, 0);
							}
							if (NPC.waveCount == 15)
							{
								AchievementsHelper.NotifyProgressionEvent(14);
							}
						}
					}
					if (NPC.waveKills != num6 && num5 != 0f)
					{
						if (Main.netMode != 1)
						{
							Main.ReportInvasionProgress((int)NPC.waveKills, num4, 1, NPC.waveCount);
						}
						if (Main.netMode == 2)
						{
							NetMessage.SendData(78, -1, -1, "", Main.invasionProgress, (float)Main.invasionProgressMax, 1f, (float)NPC.waveCount, 0, 0, 0);
						}
					}
				}
				if (Main.pumpkinMoon)
				{
					string text2 = "";
					int[] array2 = new int[]
					{
						0,
						25,
						40,
						50,
						80,
						100,
						160,
						180,
						200,
						250,
						300,
						375,
						450,
						525,
						675,
						0
					};
					int num7 = array2[NPC.waveCount];
					switch (NPC.waveCount)
					{
						case 1:
							text2 = "Wave 2: " + Main.npcName[305] + " and " + Main.npcName[326];
							break;
						case 2:
							text2 = string.Concat(new string[]
								{
									"Wave 3: ",
									Main.npcName[305],
									", ",
									Main.npcName[326],
									", and ",
									Main.npcName[329]
								});
							break;
						case 3:
							text2 = string.Concat(new string[]
								{
									"Wave 4: ",
									Main.npcName[305],
									", ",
									Main.npcName[326],
									", ",
									Main.npcName[329],
									", and ",
									Main.npcName[325]
								});
							break;
						case 4:
							text2 = string.Concat(new string[]
								{
									"Wave 5: ",
									Main.npcName[305],
									", ",
									Main.npcName[326],
									", ",
									Main.npcName[329],
									", ",
									Main.npcName[330],
									", and ",
									Main.npcName[325]
								});
							break;
						case 5:
							text2 = string.Concat(new string[]
								{
									"Wave 6: ",
									Main.npcName[326],
									", ",
									Main.npcName[329],
									", ",
									Main.npcName[330],
									", and ",
									Main.npcName[325]
								});
							break;
						case 6:
							text2 = string.Concat(new string[]
								{
									"Wave 7: ",
									Main.npcName[305],
									", ",
									Main.npcName[329],
									", ",
									Main.npcName[330],
									", and ",
									Main.npcName[327]
								});
							break;
						case 7:
							text2 = string.Concat(new string[]
								{
									"Wave 8: ",
									Main.npcName[326],
									", ",
									Main.npcName[329],
									", ",
									Main.npcName[330],
									", and ",
									Main.npcName[327]
								});
							break;
						case 8:
							text2 = string.Concat(new string[]
								{
									"Wave 9: ",
									Main.npcName[305],
									", ",
									Main.npcName[315],
									", ",
									Main.npcName[325],
									", and ",
									Main.npcName[327]
								});
							break;
						case 9:
							text2 = string.Concat(new string[]
								{
									"Wave 10: ",
									Main.npcName[326],
									", ",
									Main.npcName[329],
									", ",
									Main.npcName[330],
									", ",
									Main.npcName[315],
									", ",
									Main.npcName[325],
									", and ",
									Main.npcName[327]
								});
							break;
						case 10:
							text2 = string.Concat(new string[]
								{
									"Wave 11: ",
									Main.npcName[305],
									", ",
									Main.npcName[326],
									", ",
									Main.npcName[329],
									", ",
									Main.npcName[330],
									", ",
									Main.npcName[315],
									", ",
									Main.npcName[325],
									", and ",
									Main.npcName[327]
								});
							break;
						case 11:
							text2 = string.Concat(new string[]
								{
									"Wave 12: ",
									Main.npcName[326],
									", ",
									Main.npcName[329],
									", ",
									Main.npcName[330],
									", ",
									Main.npcName[315],
									", ",
									Main.npcName[325],
									", and ",
									Main.npcName[327]
								});
							break;
						case 12:
							text2 = string.Concat(new string[]
								{
									"Wave 13: ",
									Main.npcName[329],
									", ",
									Main.npcName[330],
									", ",
									Main.npcName[315],
									", ",
									Main.npcName[325],
									", and ",
									Main.npcName[327]
								});
							break;
						case 13:
							text2 = string.Concat(new string[]
								{
									"Wave 14: ",
									Main.npcName[315],
									", ",
									Main.npcName[325],
									", and ",
									Main.npcName[327]
								});
							break;
						case 14:
							text2 = "Final Wave: " + Main.npcName[325] + ", and " + Main.npcName[327];
							break;
					}
					float num8 = 0f;
					switch (this.type)
					{
						case 305:
						case 306:
						case 307:
						case 308:
						case 309:
						case 310:
						case 311:
						case 312:
						case 313:
						case 314:
							num8 = 1f;
							break;
						case 315:
							num8 = 25f;
							break;
						case 325:
							num8 = 75f;
							break;
						case 326:
							num8 = 2f;
							break;
						case 327:
							num8 = 150f;
							break;
						case 329:
							num8 = 4f;
							break;
						case 330:
							num8 = 8f;
							break;
					}
					if (Main.expertMode)
					{
						num8 *= 2f;
					}
					float num9 = NPC.waveKills;
					NPC.waveKills += num8;
					if (NPC.waveKills >= (float)num7 && num7 != 0)
					{
						NPC.waveKills = 0f;
						NPC.waveCount++;
						num7 = array2[NPC.waveCount];
						if (text2 != "")
						{
							if (Main.netMode == 0)
							{
								Main.NewText(text2, 175, 75, 255, false);
							}
							else if (Main.netMode == 2)
							{
								NetMessage.SendData(25, -1, -1, text2, 255, 175f, 75f, 255f, 0, 0, 0);
							}
							if (NPC.waveCount == 15)
							{
								AchievementsHelper.NotifyProgressionEvent(15);
							}
						}
					}
					if (NPC.waveKills != num9 && num8 != 0f)
					{
						if (Main.netMode != 1)
						{
							Main.ReportInvasionProgress((int)NPC.waveKills, num7, 2, NPC.waveCount);
						}
						if (Main.netMode == 2)
						{
							NetMessage.SendData(78, -1, -1, "", Main.invasionProgress, (float)Main.invasionProgressMax, 2f, (float)NPC.waveCount, 0, 0, 0);
						}
					}
				}
				int num10 = 0;
				int num11 = this.type;
				if (num11 > 145)
				{
					if (num11 <= 395)
					{
						switch (num11)
						{
							case 212:
							case 213:
							case 214:
							case 215:
							case 216:
								break;
							default:
								switch (num11)
								{
									case 381:
									case 382:
									case 383:
									case 385:
									case 386:
									case 388:
									case 389:
									case 390:
									case 391:
									case 395:
										num10 = 4;
										goto IL_122B;
									case 384:
									case 387:
									case 392:
									case 393:
									case 394:
										goto IL_122B;
									default:
										goto IL_122B;
								}
								break;
						}
					}
					else
					{
						if (num11 == 471)
						{
							goto IL_1219;
						}
						if (num11 != 491)
						{
							goto IL_122B;
						}
					}
					num10 = 3;
					goto IL_122B;
				}
				switch (num11)
				{
					case 26:
					case 27:
					case 28:
					case 29:
						break;
					default:
						if (num11 != 111)
						{
							switch (num11)
							{
								case 143:
								case 144:
								case 145:
									num10 = 2;
									goto IL_122B;
								default:
									goto IL_122B;
							}
						}
						break;
				}
				IL_1219:
				num10 = 1;
				IL_122B:
				if (num10 != 0 && num10 == Main.invasionType)
				{
					int num12 = 1;
					int num13 = this.type;
					if (num13 <= 395)
					{
						if (num13 != 216)
						{
							if (num13 == 395)
							{
								num12 = 10;
							}
						}
						else
						{
							num12 = 5;
						}
					}
					else if (num13 != 471)
					{
						if (num13 == 491)
						{
							num12 = 10;
						}
					}
					else
					{
						num12 = 10;
					}
					Main.invasionSize -= num12;
					if (Main.invasionSize < 0)
					{
						Main.invasionSize = 0;
					}
					if (Main.netMode != 1)
					{
						Main.ReportInvasionProgress(Main.invasionSizeStart - Main.invasionSize, Main.invasionSizeStart, num10 + 2, 0);
					}
					if (Main.netMode == 2)
					{
						NetMessage.SendData(78, -1, -1, "", Main.invasionProgress, (float)Main.invasionProgressMax, (float)Main.invasionProgressIcon, 0f, 0, 0, 0);
					}
				}
			}
		}

		public static void ResetKillCount()
		{
			for (int i = 0; i < NPC.killCount.Length; i++)
			{
				NPC.killCount[i] = 0;
			}
		}

		public bool AnyInteractions()
		{
			if (Main.netMode == 0)
			{
				if (this.playerInteraction[Main.myPlayer])
				{
					return true;
				}
			}
			else
			{
				for (int i = 0; i < 255; i++)
				{
					if (this.playerInteraction[i])
					{
						return true;
					}
				}
			}
			return false;
		}

		public void NPCLoot()
		{
			if (Main.netMode == 1)
			{
				return;
			}
			bool flag = NPC.downedMechBoss1 && NPC.downedMechBoss2 && NPC.downedMechBoss3;
			int num = this.type;
			switch (num)
			{
				case 13:
				case 14:
				case 15:
					if (this.boss)
					{
						AchievementsHelper.NotifyNPCKilled(this);
					}
					break;
				default:
					switch (num)
					{
						case 125:
						case 126:
							{
								int num2 = (this.type == 126) ? 125 : 126;
								if (!NPC.AnyNPCs(num2))
								{
									AchievementsHelper.NotifyNPCKilled(this);
									AchievementsHelper.CheckMechaMayhem(this.type);
									goto IL_C1;
								}
								goto IL_C1;
							}
						case 127:
							break;
						default:
							if (num != 134)
							{
								AchievementsHelper.NotifyNPCKilled(this);
								goto IL_C1;
							}
							break;
					}
					AchievementsHelper.CheckMechaMayhem(this.type);
					AchievementsHelper.NotifyNPCKilled(this);
					break;
			}
			IL_C1:
			int num3 = Item.NPCtoBanner(this.BannerID());
			if (num3 > 0 && !NPCID.Sets.ExcludedFromDeathTally[this.type])
			{
				bool flag2;
				if (this.realLife >= 0)
				{
					flag2 = Main.npc[this.realLife].AnyInteractions();
				}
				else
				{
					flag2 = this.AnyInteractions();
				}
				if (flag2)
				{
					NPC.killCount[num3]++;
					if (Main.netMode == 2)
					{
						NetMessage.SendData(83, -1, -1, "", num3, 0f, 0f, 0f, 0, 0, 0);
					}
					int num4 = 50;
					if (NPC.killCount[num3] % num4 == 0 && num3 > 0)
					{
						int l = Item.BannerToNPC(num3);
						NPC nPC = new NPC();
						nPC.netDefaults(l);
						int num5 = this.lastInteraction;
						if (!Main.player[num5].active || Main.player[num5].dead)
						{
							num5 = this.FindClosestPlayer();
						}
						string text = string.Concat(new object[]
							{
								"The ",
								NPC.killCount[num3],
								"th ",
								Lang.npcName(l, false),
								" has been defeated!"
							});
						if (num5 >= 0 && num5 < 255)
						{
							text = string.Concat(new object[]
								{
									Main.player[num5].name,
									" has defeated the ",
									NPC.killCount[num3],
									"th ",
									Lang.npcName(l, false),
									"!"
								});
						}
						if (Main.netMode == 0)
						{
							Main.NewText(text, 250, 250, 0, false);
						}
						else if (Main.netMode == 2)
						{
							NetMessage.SendData(25, -1, -1, text, 255, 250f, 250f, 0f, 0, 0, 0);
						}
						int num6 = 1615 + num3 - 1;
						if (num3 >= 252)
						{
							num6 = 3789 + num3 - 252;
						}
						else if (num3 == 251)
						{
							num6 = 3780;
						}
						else if (num3 >= 249)
						{
							num6 = 3593 + num3 - 249;
						}
						else if (num3 >= 186)
						{
							num6 = 3390 + num3 - 186;
						}
						else if (num3 >= 88)
						{
							num6 = 2897 + num3 - 88;
						}
						if (num3 >= NPCID.Count)
						{
							num6 = NPCLoader.GetNPC(num3).bannerItem;
						}
						Vector2 position = this.position;
						if (num5 >= 0 && num5 < 255)
						{
							position = Main.player[num5].position;
						}
						Item.NewItem((int)position.X, (int)position.Y, this.width, this.height, num6, 1, false, 0, false, false);
					}
				}
			}
			if (this.type == 23 && Main.hardMode)
			{
				return;
			}
			if (this.SpawnedFromStatue && NPCID.Sets.NoEarlymodeLootWhenSpawnedFromStatue[this.type] && !Main.hardMode)
			{
				return;
			}
			if (this.SpawnedFromStatue && NPCID.Sets.StatueSpawnedDropRarity[this.type] != -1f && (Main.rand.NextFloat() >= NPCID.Sets.StatueSpawnedDropRarity[this.type] || !this.AnyInteractions()))
			{
				return;
			}
			if (!NPCLoader.PreNPCLoot(this))
			{
				return;
			}
			if ((this.type == 170 || this.type == 180 || this.type == 171) && Main.rand.Next(3) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3532, 1, false, 0, false, false);
			}
			num = this.type;
			if (num <= 122)
			{
				if (num <= 80)
				{
					if (num != 75 && num != 80)
					{
						goto IL_529;
					}
				}
				else
				{
					switch (num)
					{
						case 84:
						case 86:
							break;
						case 85:
							goto IL_529;
						default:
							switch (num)
							{
								case 120:
								case 122:
									break;
								case 121:
									goto IL_529;
								default:
									goto IL_529;
							}
							break;
					}
				}
			}
			else if (num <= 171)
			{
				switch (num)
				{
					case 137:
					case 138:
						break;
					default:
						if (num != 171)
						{
							goto IL_529;
						}
						break;
				}
			}
			else if (num != 244 && num != 475)
			{
				goto IL_529;
			}
			int maxValue = Main.expertMode ? 150 : 200;
			if (Main.rand.Next(maxValue) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3260, 1, false, 0, false, false);
			}
			IL_529:
			if (Main.slimeRain && Main.slimeRainNPC[this.type] && !NPC.AnyNPCs(50))
			{
				int num7 = 150;
				if (NPC.downedSlimeKing)
				{
					num7 /= 2;
				}
				Main.slimeRainKillCount++;
				if (Main.slimeRainKillCount >= num7)
				{
					int plr = this.FindClosestPlayer();
					NPC.SpawnOnPlayer(plr, 50);
					Main.slimeRainKillCount = -num7 / 2;
				}
			}
			if (!Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneDungeon)
			{
				bool flag3 = false;
				if (Main.expertMode && Main.rand.Next(5) == 0)
				{
					flag3 = true;
				}
				else if (Main.rand.Next(5) == 0)
				{
					flag3 = true;
				}
				if (this.boss)
				{
					flag3 = false;
				}
				switch (this.type)
				{
					case 13:
					case 14:
					case 15:
						flag3 = false;
						break;
				}
				if (Main.hardMode && this.lifeMax > 1 && this.damage > 0 && !this.friendly && (double)this.position.Y > Main.rockLayer * 16.0 && flag3 && this.type != 121 && this.value > 0f)
				{
					if (Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneCorrupt || Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneCrimson)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 521, 1, false, 0, false, false);
					}
					if (Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneHoly)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 520, 1, false, 0, false, false);
					}
				}
			}
			if (this.type == 1 && this.ai[1] > 0f)
			{
				int num8 = (int)this.ai[1];
				if (num8 > 0)
				{
					int num9 = 1;
					if (num8 == 8)
					{
						num9 = Main.rand.Next(5, 11);
					}
					else if (num8 == 166)
					{
						num9 = Main.rand.Next(2, 7);
					}
					else if (num8 == 965)
					{
						num9 = Main.rand.Next(20, 46);
					}
					else if ((num8 >= 11 && num8 <= 14) || (num8 >= 699 && num8 <= 702))
					{
						num9 = Main.rand.Next(3, 9);
						if (Main.rand.Next(2) == 0)
						{
							num9 += 5;
						}
					}
					else if (num8 == 71)
					{
						num9 = Main.rand.Next(50, 100);
					}
					else if (num8 == 72)
					{
						num9 = Main.rand.Next(20, 100);
					}
					else if (num8 == 73)
					{
						num9 = Main.rand.Next(1, 3);
					}
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num8, num9, false, 0, false, false);
				}
			}
			if (this.type == 22 && this.displayName == "Andrew")
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 867, 1, false, 0, false, false);
			}
			if (this.type == 353 && Main.rand.Next(8) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3352, 1, false, 0, false, false);
			}
			if (this.type == 441 && Main.rand.Next(8) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3351, 1, false, 0, false, false);
			}
			if (this.type == 227 && Main.rand.Next(10) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3350, 1, false, 0, false, false);
			}
			if (this.type == 208 && Main.rand.Next(4) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3548, Main.rand.Next(30, 61), false, 0, false, false);
			}
			if (this.type == 207 && Main.rand.Next(8) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3349, 1, false, 0, false, false);
			}
			if (Main.hardMode && this.value > 0f)
			{
				if (!NPC.downedMechBoss1 && Main.rand.Next(2500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 556, 1, false, 0, false, false);
				}
				else if (!NPC.downedMechBoss2 && Main.rand.Next(2500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 544, 1, false, 0, false, false);
				}
				else if (!NPC.downedMechBoss3 && Main.rand.Next(2500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 557, 1, false, 0, false, false);
				}
			}
			if (Main.halloween && this.value > 0f && this.value < 500f && this.damage < 40 && this.defense < 20)
			{
				if (Main.rand.Next(2000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1825, 1, false, 0, false, false);
				}
				else if (Main.rand.Next(2000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1827, 1, false, 0, false, false);
				}
			}
			if (Main.hardMode && this.value > 0f)
			{
				if (Main.rand.Next(2500) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneJungle)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1533, 1, false, 0, false, false);
				}
				if (Main.rand.Next(2500) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneCorrupt)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1534, 1, false, 0, false, false);
				}
				if (Main.rand.Next(2500) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneCrimson)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1535, 1, false, 0, false, false);
				}
				if (Main.rand.Next(2500) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneHoly)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1536, 1, false, 0, false, false);
				}
				if (Main.rand.Next(2500) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneSnow)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1537, 1, false, 0, false, false);
				}
			}
			if (this.type == 68)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1169, 1, false, 0, false, false);
			}
			if (Main.snowMoon)
			{
				int num10 = NPC.waveCount;
				if (Main.expertMode)
				{
					num10 += 7;
				}
				int num11 = (int)((double)(30 - num10) / 2.5);
				if (Main.expertMode)
				{
					num11 -= 2;
				}
				if (num11 < 1)
				{
					num11 = 1;
				}
				if (this.type == 344)
				{
					NPC.downedChristmasTree = true;
				}
				if (this.type == 345)
				{
					NPC.downedChristmasIceQueen = true;
				}
				if (this.type == 346)
				{
					NPC.downedChristmasSantank = true;
				}
				if ((this.type == 344 || this.type == 345 || this.type == 346) && Main.rand.Next(num11) == 0 && num10 >= 15)
				{
					int num12 = 4;
					if (num10 == 16)
					{
						num12 = 4;
					}
					if (num10 == 17)
					{
						num12 = 3;
					}
					if (num10 == 18)
					{
						num12 = 3;
					}
					if (num10 == 19)
					{
						num12 = 2;
					}
					if (num10 >= 20)
					{
						num12 = 2;
					}
					if (Main.expertMode && Main.rand.Next(3) == 0)
					{
						num12--;
					}
					if (Main.rand.Next(num12) == 0)
					{
						if (this.type == 344)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1962, 1, false, 0, false, false);
						}
						if (this.type == 345)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1960, 1, false, 0, false, false);
						}
						if (this.type == 346)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1961, 1, false, 0, false, false);
						}
					}
				}
				if (Main.rand.Next(num11) == 0)
				{
					if (this.type == 344)
					{
						int num13 = Main.rand.Next(3);
						if (Main.rand.Next(15) == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1871, 1, false, -1, false, false);
						}
						else
						{
							if (num13 == 0)
							{
								Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1916, 1, false, 0, false, false);
							}
							if (num13 == 1)
							{
								Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1928, 1, false, -1, false, false);
							}
							if (num13 == 2)
							{
								Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1930, 1, false, -1, false, false);
							}
						}
					}
					if (this.type == 346)
					{
						int num14 = Main.rand.Next(2);
						if (num14 == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1910, 1, false, -1, false, false);
						}
						if (num14 == 1)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1929, 1, false, -1, false, false);
						}
					}
					if (this.type == 345)
					{
						if (NPC.waveCount >= 15 && Main.rand.Next(30) == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1914, 1, false, 0, false, false);
						}
						else if (Main.rand.Next(15) == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1959, 1, false, 0, false, false);
						}
						else
						{
							int num15 = Main.rand.Next(3);
							if (num15 == 0)
							{
								Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1931, 1, false, -1, false, false);
							}
							if (num15 == 1)
							{
								Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1946, 1, false, -1, false, false);
							}
							if (num15 == 2)
							{
								Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1947, 1, false, -1, false, false);
							}
						}
					}
				}
			}
			if (this.type == 341)
			{
				int num16 = Main.rand.Next(5, 11);
				for (int i = 0; i < num16; i++)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false, false);
				}
				if (Main.xMas)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1869, 1, false, 0, false, false);
				}
			}
			if (this.type >= 338 && this.type <= 340 && Main.rand.Next(5) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false, false);
			}
			if (this.type >= 338 && this.type <= 340 && Main.rand.Next(200) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1943 + Main.rand.Next(3), 1, false, 0, false, false);
			}
			if (this.type == 342 && Main.rand.Next(3) != 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false, false);
			}
			if (Main.pumpkinMoon)
			{
				if (this.type == 325)
				{
					NPC.downedHalloweenTree = true;
				}
				if (this.type == 327)
				{
					NPC.downedHalloweenKing = true;
				}
				int num17 = NPC.waveCount;
				if (Main.expertMode)
				{
					num17 += 6;
				}
				int num18 = (int)((double)(17 - num17) / 1.25);
				if (Main.expertMode)
				{
					num18--;
				}
				if (num18 < 1)
				{
					num18 = 1;
				}
				if (num17 >= 15)
				{
					if (this.type == 325)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1855, 1, false, 0, false, false);
					}
					if (this.type == 327)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1856, 1, false, 0, false, false);
					}
				}
				if (Main.rand.Next(num18) == 0)
				{
					if (this.type == 315 && Main.rand.Next(20) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1857, 1, false, 0, false, false);
					}
					if (this.type >= 305 && this.type <= 314 && Main.rand.Next(10) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Main.rand.Next(1788, 1791), 1, false, 0, false, false);
					}
					if (this.type == 325)
					{
						int num19 = Main.rand.Next(5);
						if (num19 == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1829, 1, false, 0, false, false);
						}
						if (num19 == 1)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1831, 1, false, 0, false, false);
						}
						if (num19 == 2)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1835, 1, false, -1, false, false);
						}
						if (num19 == 2)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1836, Main.rand.Next(30, 61), false, 0, false, false);
						}
						if (num19 == 3)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1837, 1, false, 0, false, false);
						}
						if (num19 == 4)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1845, 1, false, -1, false, false);
						}
					}
					if (this.type == 327)
					{
						int num20 = Main.rand.Next(7);
						if (num20 == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1782, 1, false, -1, false, false);
						}
						if (num20 == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1783, Main.rand.Next(50, 101), false, 0, false, false);
						}
						if (num20 == 1)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1784, 1, false, -1, false, false);
						}
						if (num20 == 1)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1785, Main.rand.Next(25, 51), false, 0, false, false);
						}
						if (num20 == 2)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1811, 1, false, 0, false, false);
						}
						if (num20 == 3)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1826, 1, false, -1, false, false);
						}
						if (num20 == 4)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1801, 1, false, -1, false, false);
						}
						if (num20 == 5)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1802, 1, false, -1, false, false);
						}
						if (num20 == 6)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1798, 1, false, 0, false, false);
						}
					}
				}
			}
			if (this.type == 325)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1729, Main.rand.Next(30, 51), false, 0, false, false);
			}
			if (this.type == 326)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1729, Main.rand.Next(1, 5), false, 0, false, false);
			}
			if (this.type >= 305 && this.type <= 314 && Main.rand.Next(4) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false, false);
			}
			if (this.type == 326 && Main.rand.Next(6) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false, false);
			}
			if (this.type == 329 && Main.rand.Next(4) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false, false);
			}
			if (this.type == 330 && Main.rand.Next(4) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false, false);
			}
			if (this.type == 315)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false, false);
			}
			if (Main.halloween && this.lifeMax > 1 && this.damage > 0 && !this.friendly && this.type != 121 && this.type != 23 && this.value > 0f && Main.rand.Next(80) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1774, 1, false, 0, false, false);
			}
			if (Main.xMas && this.lifeMax > 1 && this.damage > 0 && !this.friendly && this.type != 121 && this.value > 0f && Main.rand.Next(13) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1869, 1, false, 0, false, false);
			}
			if (this.lifeMax > 5 && this.value > 0f && !this.friendly && Main.hardMode && this.position.Y / 16f > (float)(Main.maxTilesY - 200) && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2701, Main.rand.Next(20, 51), false, 0, false, false);
			}
			if (this.type == 325 || this.type == 327 || this.type == 344 || this.type == 345 || this.type == 346)
			{
				int num21 = Main.rand.Next(6) + 6;
				for (int j = 0; j < num21; j++)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false, false);
				}
			}
			if (this.type == 156 && Main.rand.Next(75) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1518, 1, false, 0, false, false);
			}
			if (this.type == 243 && Main.rand.Next(3) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1519, 1, false, 0, false, false);
			}
			if (this.type >= 269 && this.type <= 280 && Main.rand.Next(450) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1517, 1, false, 0, false, false);
			}
			if ((this.type == 158 || this.type == 159) && Main.rand.Next(40) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1520, 1, false, 0, false, false);
			}
			if (this.type == 176 && Main.rand.Next(150) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1521, 1, false, 0, false, false);
			}
			if (this.type == 48 && Main.rand.Next(200) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1516, 1, false, 0, false, false);
			}
			if (this.type == 205 && Main.rand.Next(2) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1611, 1, false, 0, false, false);
			}
			if (this.type == 483 || this.type == 482)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3086, Main.rand.Next(5, 11), false, -1, false, false);
			}
			if (!Main.hardMode && Main.rand.Next(100) == 0 && this.target >= 0 && this.lifeMax > 5 && !this.friendly && Main.rand.Next(4) == 0 && this.position.Y / 16f > (float)(Main.maxTilesY - 350) && NPC.downedBoss3)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3282, 1, false, -1, false, false);
			}
			if (Main.hardMode && Main.player[this.target].ZoneSnow && Main.rand.Next(300) == 0 && this.target >= 0 && this.lifeMax > 5 && !this.friendly && this.value > 0f)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3289, 1, false, -1, false, false);
			}
			else if (Main.hardMode && Main.rand.Next(200) == 0 && this.target >= 0 && this.lifeMax > 5 && !this.friendly && this.value > 0f)
			{
				if (Main.player[this.target].ZoneJungle && NPC.downedMechBossAny)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3286, 1, false, -1, false, false);
				}
				else if (Main.player[this.target].ZoneDungeon && NPC.downedPlantBoss && Main.rand.Next(2) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3291, 1, false, -1, false, false);
				}
				else if ((double)(this.position.Y / 16f) > (Main.rockLayer + (double)Main.maxTilesY) / 2.0 && !Main.player[this.target].ZoneDungeon && Main.rand.Next(2) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3290, 1, false, -1, false, false);
				}
			}
			int num22 = 1;
			if (Main.expertMode && Main.rand.Next(2) == 0)
			{
				num22 = 2;
			}
			for (int k = 0; k < num22; k++)
			{
				if (this.type == 461 && Main.rand.Next(50) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 497, 1, false, -1, false, false);
				}
				if ((this.type == 159 || this.type == 158) && Main.rand.Next(35) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 900, 1, false, -1, false, false);
				}
				if (this.type == 251 && Main.rand.Next(15) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1311, 1, false, -1, false, false);
				}
				if (NPC.downedMechBoss1 && NPC.downedMechBoss2 && NPC.downedMechBoss3)
				{
					if (this.type == 477)
					{
						if (Main.rand.Next(20) == 0 && NPC.downedPlantBoss)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2770, 1, false, -1, false, false);
							k++;
						}
						if (Main.rand.Next(4) == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1570, 1, false, -1, false, false);
							k++;
						}
						else if (Main.rand.Next(3) == 0 && NPC.downedPlantBoss)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3292, 1, false, -1, false, false);
							k++;
						}
					}
					if (this.type == 253 && Main.rand.Next(40) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1327, 1, false, -1, false, false);
					}
				}
				if (NPC.downedPlantBoss)
				{
					if (this.type == 460 && Main.rand.Next(40) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3098, 1, false, -1, false, false);
					}
					if (this.type == 468 && Main.rand.Next(40) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3105, 1, false, -1, false, false);
					}
					if (this.type == 466 && Main.rand.Next(40) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3106, 1, false, -1, false, false);
					}
					if (this.type == 467 && Main.rand.Next(40) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3249, 1, false, -1, false, false);
					}
					if (this.type == 463 && Main.rand.Next(25) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3107, 1, false, -1, false, false);
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3108, Main.rand.Next(100, 201), false, -1, false, false);
					}
				}
			}
			if (Main.bloodMoon && Main.hardMode && Main.rand.Next(1000) == 0 && this.value > 0f)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1314, 1, false, -1, false, false);
			}
			if (this.type == 77 && Main.rand.Next(150) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 723, 1, false, -1, false, false);
			}
			if (Main.rand.Next(100) == 0 || (Main.expertMode && Main.rand.Next(100) == 0))
			{
				int num23 = -1;
				int num24 = -1;
				num = this.type;
				if (num <= 141)
				{
					if (num <= 94)
					{
						if (num == 34)
						{
							goto IL_2B28;
						}
						if (num == 42)
						{
							goto IL_2AF8;
						}
						switch (num)
						{
							case 75:
								if (Main.rand.Next(2) == 0)
								{
									num23 = 889;
								}
								else
								{
									num23 = 890;
								}
								if (Main.rand.Next(100) != 0)
								{
									goto IL_2BD6;
								}
								if (num23 == 889)
								{
									num24 = 890;
									goto IL_2BD6;
								}
								num24 = 889;
								goto IL_2BD6;
							case 76:
							case 85:
							case 86:
							case 87:
							case 88:
							case 89:
							case 90:
							case 91:
							case 92:
								goto IL_2BD6;
							case 77:
								goto IL_2AEC;
							case 78:
							case 82:
								num23 = 889;
								goto IL_2BD6;
							case 79:
								if (Main.rand.Next(2) == 0)
								{
									num23 = 888;
								}
								else
								{
									num23 = 890;
								}
								if (Main.rand.Next(100) != 0)
								{
									goto IL_2BD6;
								}
								if (num23 == 888)
								{
									num24 = 890;
									goto IL_2BD6;
								}
								num24 = 888;
								goto IL_2BD6;
							case 80:
							case 93:
								break;
							case 81:
								num23 = 888;
								goto IL_2BD6;
							case 83:
							case 84:
								goto IL_2B28;
							case 94:
								goto IL_2B34;
							default:
								goto IL_2BD6;
						}
					}
					else
					{
						switch (num)
						{
							case 102:
							case 104:
								goto IL_2AE0;
							case 103:
								num23 = 890;
								goto IL_2BD6;
							default:
								if (num != 109)
								{
									if (num != 141)
									{
										goto IL_2BD6;
									}
									goto IL_2AF8;
								}
								break;
						}
					}
					num23 = 893;
					goto IL_2BD6;
				}
				if (num <= 182)
				{
					if (num == 176)
					{
						goto IL_2AF8;
					}
					if (num == 179)
					{
						goto IL_2B28;
					}
					if (num != 182)
					{
						goto IL_2BD6;
					}
					goto IL_2B34;
				}
				else
				{
					switch (num)
					{
						case 231:
						case 232:
						case 233:
						case 234:
						case 235:
							goto IL_2AF8;
						default:
							switch (num)
							{
								case 269:
								case 270:
								case 271:
								case 272:
									break;
								case 273:
								case 274:
								case 275:
								case 276:
									goto IL_2AEC;
								default:
									if (num == 480)
									{
										num23 = 3781;
										goto IL_2BD6;
									}
									goto IL_2BD6;
							}
							break;
					}
				}
				IL_2AE0:
				num23 = 885;
				goto IL_2BD6;
				IL_2AEC:
				num23 = 886;
				goto IL_2BD6;
				IL_2AF8:
				num23 = 887;
				goto IL_2BD6;
				IL_2B28:
				num23 = 891;
				goto IL_2BD6;
				IL_2B34:
				num23 = 892;
				IL_2BD6:
				if (num23 != -1)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num23, 1, false, -1, false, false);
				}
				if (num24 != -1)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num24, 1, false, -1, false, false);
				}
			}
			int num25 = 1;
			if (Main.expertMode && Main.rand.Next(2) == 0)
			{
				num25 = 2;
			}
			for (int m = 0; m < num25; m++)
			{
				if (this.type == 290)
				{
					if (Main.rand.Next(15) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1513, 1, false, -1, false, false);
					}
					else if (Main.rand.Next(10) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 938, 1, false, -1, false, false);
					}
				}
				if (this.type == 287 && Main.rand.Next(6) == 0)
				{
					if (Main.rand.Next(2) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 963, 1, false, -1, false, false);
					}
					else
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 977, 1, false, -1, false, false);
					}
				}
				if (this.type == 291)
				{
					if (Main.rand.Next(12) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1300, 1, false, -1, false, false);
					}
					else if (Main.rand.Next(12) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1254, 1, false, -1, false, false);
					}
				}
				if (this.type == 292)
				{
					if (Main.rand.Next(12) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1514, 1, false, -1, false, false);
					}
					else if (Main.rand.Next(12) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 679, 1, false, -1, false, false);
					}
				}
				if (this.type == 293 && Main.rand.Next(18) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 759, 1, false, -1, false, false);
				}
				if ((this.type == 281 || this.type == 282) && Main.rand.Next(20) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1446, 1, false, -1, false, false);
				}
				if ((this.type == 283 || this.type == 284) && Main.rand.Next(20) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1444, 1, false, -1, false, false);
				}
				if ((this.type == 285 || this.type == 286) && Main.rand.Next(20) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1445, 1, false, -1, false, false);
				}
				if (this.type >= 269 && this.type <= 280)
				{
					if (Main.rand.Next(400) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1183, 1, false, -1, false, false);
					}
					else if (Main.rand.Next(300) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1266, 1, false, -1, false, false);
					}
					else if (Main.rand.Next(200) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 671, 1, false, -1, false, false);
					}
				}
			}
			if (this.lifeMax > 100 && this.type != 288 && this.value > 0f && this.target >= 0 && Main.hardMode && NPC.downedPlantBoss && Main.player[this.target].ZoneDungeon)
			{
				int maxValue2 = 13;
				if (Main.expertMode)
				{
					maxValue2 = 9;
				}
				if (Main.rand.Next(maxValue2) == 0 && Main.wallDungeon[(int)Main.tile[(int)base.Center.X / 16, (int)base.Center.Y / 16].wall])
				{
					NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 288, 0, 0f, 0f, 0f, 0f, 255);
				}
			}
			if (this.type == 288)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1508, Main.rand.Next(1, 3), false, -1, false, false);
			}
			if (this.type == 156 && Main.rand.Next(30) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 683, 1, false, -1, false, false);
			}
			if ((this.type == 195 || this.type == 196) && (Main.expertMode || Main.rand.Next(2) == 0))
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3102, 1, false, -1, false, false);
			}
			if (this.type == 245)
			{
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else
				{
					if (Main.rand.Next(7) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2110, 1, false, -1, false, false);
					}
					int num26 = Main.rand.Next(8);
					if (num26 == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1258, 1, false, -1, false, false);
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1261, Main.rand.Next(60, 100), false, 0, false, false);
					}
					else if (num26 == 1)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1122, 1, false, -1, false, false);
					}
					else if (num26 == 2)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 899, 1, false, -1, false, false);
					}
					else if (num26 == 3)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1248, 1, false, -1, false, false);
					}
					else if (num26 == 4)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1294, 1, false, -1, false, false);
					}
					else if (num26 == 5)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1295, 1, false, -1, false, false);
					}
					else if (num26 == 6)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1296, 1, false, -1, false, false);
					}
					else if (num26 == 7)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1297, 1, false, -1, false, false);
					}
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2218, Main.rand.Next(4, 9), false, -1, false, false);
				}
				NPC.downedGolemBoss = true;
			}
			if (this.type == 471 && (Main.expertMode || Main.rand.Next(2) == 0))
			{
				if (Main.rand.Next(3) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3052, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(2) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3053, 1, false, -1, false, false);
				}
				else
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3054, 1, false, -1, false, false);
				}
			}
			if (this.type == 268)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1332, Main.rand.Next(2, 6), false, 0, false, false);
			}
			if (this.type == 370)
			{
				NPC.downedFishron = true;
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else
				{
					if (Main.rand.Next(7) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2588, 1, false, -1, false, false);
					}
					if (Main.rand.Next(15) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2609, 1, false, -1, false, false);
					}
					int num27 = Main.rand.Next(5);
					if (num27 == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2611, 1, false, -1, false, false);
					}
					else if (num27 == 1)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2624, 1, false, -1, false, false);
					}
					else if (num27 == 2)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2622, 1, false, -1, false, false);
					}
					else if (num27 == 3)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2621, 1, false, -1, false, false);
					}
					else if (num27 == 4)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2623, 1, false, -1, false, false);
					}
				}
			}
			if (this.type == 109 && !NPC.downedClown)
			{
				NPC.downedClown = true;
				if (Main.netMode == 2)
				{
					NetMessage.SendData(7, -1, -1, "", 0, 0f, 0f, 0f, 0, 0, 0);
				}
			}
			if (this.type == 153 && Main.rand.Next(17) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1328, 1, false, -1, false, false);
			}
			if (this.type == 120 && Main.rand.Next(500) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1326, 1, false, -1, false, false);
			}
			if (this.type == 49 && Main.rand.Next(250) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1325, 1, false, -1, false, false);
			}
			if (this.type == 185 && Main.rand.Next(150) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 951, 1, false, -1, false, false);
			}
			if (this.type == 44 && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1320, 1, false, -1, false, false);
			}
			if (this.type == 44 && Main.rand.Next(20) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 88, 1, false, -1, false, false);
			}
			if (this.type == 110 && Main.rand.Next(80) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1321, 1, false, -1, false, false);
			}
			if (this.type == 60 && Main.rand.Next(150) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1322, 1, false, -1, false, false);
			}
			if (this.type == 151 && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1322, 1, false, -1, false, false);
			}
			if (this.type == 24 && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1323, 1, false, -1, false, false);
			}
			if (this.type == 109 && Main.rand.Next(30) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1324, Main.rand.Next(1, 5), false, -1, false, false);
			}
			if (this.type == 163 || this.type == 238)
			{
				if (Main.rand.Next(40) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1308, 1, false, -1, false, false);
				}
				if (Main.expertMode)
				{
					if (Main.rand.Next(3) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2607, Main.rand.Next(2, 4), false, 0, false, false);
					}
					else if (Main.rand.Next(2) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2607, Main.rand.Next(1, 4), false, 0, false, false);
					}
					else
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2607, 1, false, 0, false, false);
					}
				}
				else if (Main.rand.Next(4) != 0)
				{
					if (Main.rand.Next(3) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2607, Main.rand.Next(1, 4), false, 0, false, false);
					}
					else if (Main.rand.Next(2) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2607, Main.rand.Next(1, 3), false, 0, false, false);
					}
					else
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2607, 1, false, 0, false, false);
					}
				}
			}
			if (Main.hardMode && (this.type == 197 || this.type == 206 || this.type == 169 || this.type == 154) && Main.rand.Next(180) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1306, 1, false, -1, false, false);
			}
			if (this.type == 244)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(1, 6), false, 0, false, false);
				if (Main.rand.Next(2) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(1, 6), false, 0, false, false);
				}
				if (Main.rand.Next(2) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(1, 6), false, 0, false, false);
				}
				if (Main.rand.Next(2) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(1, 6), false, 0, false, false);
				}
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 662, Main.rand.Next(30, 60), false, 0, false, false);
			}
			if (this.type == 250 && Main.rand.Next(15) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1244, 1, false, -1, false, false);
			}
			if (this.type == 172)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 754, 1, false, -1, false, false);
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 755, 1, false, -1, false, false);
			}
			if (this.type == 110 && Main.rand.Next(200) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 682, 1, false, -1, false, false);
			}
			if (this.type == 154 && Main.rand.Next(100) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1253, 1, false, -1, false, false);
			}
			if ((this.type == 169 || this.type == 206) && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 726, 1, false, -1, false, false);
			}
			if (this.type == 243)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2161, 1, false, -1, false, false);
			}
			if (this.type == 480 && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3269, 1, false, -1, false, false);
			}
			if (this.type == 198 || this.type == 199 || this.type == 226)
			{
				if (Main.rand.Next(1000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1172, 1, false, -1, false, false);
				}
				if (Main.rand.Next(50) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1293, 1, false, -1, false, false);
				}
				if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2766, Main.rand.Next(1, 3), false, -1, false, false);
				}
			}
			if (this.type == 78 || this.type == 79 || this.type == 80)
			{
				if (Main.rand.Next(75) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 870, 1, false, -1, false, false);
				}
				if (Main.rand.Next(75) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 871, 1, false, -1, false, false);
				}
				if (Main.rand.Next(75) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 872, 1, false, -1, false, false);
				}
			}
			if (this.type == 473)
			{
				int num28 = Main.rand.Next(5);
				if (num28 == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3008, 1, false, -1, false, false);
				}
				else if (num28 == 1)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3014, 1, false, -1, false, false);
				}
				else if (num28 == 2)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3012, 1, false, -1, false, false);
				}
				else if (num28 == 3)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3015, 1, false, -1, false, false);
				}
				else if (num28 == 4)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3023, 1, false, -1, false, false);
				}
			}
			else if (this.type == 474)
			{
				int num29 = Main.rand.Next(5);
				if (num29 == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3006, 1, false, -1, false, false);
				}
				else if (num29 == 1)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3007, 1, false, -1, false, false);
				}
				else if (num29 == 2)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3013, 1, false, -1, false, false);
				}
				else if (num29 == 3)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3016, 1, false, -1, false, false);
				}
				else if (num29 == 4)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3020, 1, false, -1, false, false);
				}
			}
			else if (this.type == 475)
			{
				int num30 = Main.rand.Next(4);
				if (num30 == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3029, 1, false, -1, false, false);
				}
				else if (num30 == 1)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3030, 1, false, -1, false, false);
				}
				else if (num30 == 2)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3051, 1, false, -1, false, false);
				}
				else if (num30 == 3)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3022, 1, false, -1, false, false);
				}
			}
			else
			{
				int arg_48A0_0 = this.type;
			}
			if (this.type == 473 || this.type == 474 || this.type == 475 || this.type == 476)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 499, Main.rand.Next(5, 11), false, -1, false, false);
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 500, Main.rand.Next(5, 16), false, -1, false, false);
			}
			if (this.type == 85 && this.value > 0f)
			{
				if (this.ai[3] == 4f)
				{
					if (Main.rand.Next(20) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1312, 1, false, -1, false, false);
					}
					else
					{
						int num31 = Main.rand.Next(3);
						if (num31 == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 676, 1, false, -1, false, false);
						}
						else if (num31 == 1)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 725, 1, false, -1, false, false);
						}
						else if (num31 == 2)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1264, 1, false, -1, false, false);
						}
					}
				}
				else
				{
					int num32 = Main.rand.Next(6);
					if (num32 == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 437, 1, false, -1, false, false);
					}
					else if (num32 == 1)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 517, 1, false, -1, false, false);
					}
					else if (num32 == 2)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 535, 1, false, -1, false, false);
					}
					else if (num32 == 3)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 536, 1, false, -1, false, false);
					}
					else if (num32 == 4)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 532, 1, false, -1, false, false);
					}
					else
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 554, 1, false, -1, false, false);
					}
				}
			}
			if (this.type == 87)
			{
				if (Main.expertMode)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 575, Main.rand.Next(5, 11) * 2, false, 0, false, false);
				}
				else
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 575, Main.rand.Next(5, 11), false, 0, false, false);
				}
			}
			if (this.type >= 212 && this.type <= 215)
			{
				if (Main.rand.Next(8000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 905, 1, false, -1, false, false);
				}
				if (Main.rand.Next(4000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 855, 1, false, -1, false, false);
				}
				if (Main.rand.Next(2000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 854, 1, false, -1, false, false);
				}
				if (Main.rand.Next(2000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2584, 1, false, -1, false, false);
				}
				if (Main.rand.Next(1000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3033, 1, false, -1, false, false);
				}
				if (Main.rand.Next(200) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 672, 1, false, -1, false, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1277, 1, false, 0, false, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1278, 1, false, 0, false, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1279, 1, false, 0, false, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1280, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1704, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1705, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1710, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1716, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1720, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2379, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2389, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2405, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2843, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2663, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2238, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2133, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2137, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2143, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2147, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2151, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2155, 1, false, 0, false, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3263, 1, false, 0, false, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3264, 1, false, 0, false, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3265, 1, false, 0, false, false);
				}
			}
			else if (this.type == 216)
			{
				if (Main.rand.Next(2000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 905, 1, false, -1, false, false);
				}
				if (Main.rand.Next(1000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 855, 1, false, -1, false, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 854, 1, false, -1, false, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2584, 1, false, -1, false, false);
				}
				if (Main.rand.Next(250) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3033, 1, false, -1, false, false);
				}
				if (Main.rand.Next(50) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 672, 1, false, -1, false, false);
				}
			}
			else if (this.type == 491)
			{
				if (Main.rand.Next(400) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 905, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(200) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 855, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(100) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 854, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(100) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2584, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(50) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3033, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(10) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 672, 1, false, -1, false, false);
				}
			}
			if ((this.type == 161 || this.type == 431) && Main.rand.Next(50) == 0)
			{
				int num33 = Main.rand.Next(3);
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 803 + num33, 1, false, 0, false, false);
			}
			if (this.type == 217)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1115, 1, false, -1, false, false);
			}
			if (this.type == 218)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1116, 1, false, -1, false, false);
			}
			if (this.type == 219)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1117, 1, false, -1, false, false);
			}
			if (this.type == 220)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1118, 1, false, -1, false, false);
			}
			if (this.type == 221)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1119, 1, false, -1, false, false);
			}
			if (this.type == 167 && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 879, 1, false, -1, false, false);
			}
			if (this.type == 143 || this.type == 144 || this.type == 145)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 593, Main.rand.Next(5, 11), false, 0, false, false);
			}
			if (this.type == 79)
			{
				if (Main.rand.Next(10) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 527, 1, false, 0, false, false);
				}
			}
			else if (this.type == 80 && Main.rand.Next(10) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 528, 1, false, 0, false, false);
			}
			if (this.type == 524 && Main.rand.Next(10) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3794, Main.rand.Next(1, 4), false, 0, false, false);
			}
			if (this.type == 525)
			{
				if (Main.rand.Next(10) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3794, 1, false, 0, false, false);
				}
				if (Main.rand.Next(3) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 522, Main.rand.Next(1, 4), false, 0, false, false);
				}
				if (Main.rand.Next(15) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 527, 1, false, 0, false, false);
				}
			}
			if (this.type == 526)
			{
				if (Main.rand.Next(10) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3794, 1, false, 0, false, false);
				}
				if (Main.rand.Next(3) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1332, Main.rand.Next(1, 4), false, 0, false, false);
				}
				if (Main.rand.Next(15) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 527, 1, false, 0, false, false);
				}
			}
			if (this.type == 527)
			{
				if (Main.rand.Next(10) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3794, 1, false, 0, false, false);
				}
				if (Main.rand.Next(15) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 528, 1, false, 0, false, false);
				}
			}
			if (this.type == 532)
			{
				if (Main.rand.Next(3) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3380, 1, false, 0, false, false);
				}
				if (Main.rand.Next(50) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3771, 1, false, 0, false, false);
				}
			}
			if (this.type == 528)
			{
				if (Main.rand.Next(25) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2802, 1, false, 0, false, false);
				}
				if (Main.rand.Next(60) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3784 + Main.rand.Next(3), 1, false, 0, false, false);
				}
			}
			else if (this.type == 529)
			{
				if (Main.rand.Next(25) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2801, 1, false, 0, false, false);
				}
				if (Main.rand.Next(40) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3784 + Main.rand.Next(3), 1, false, 0, false, false);
				}
			}
			if ((this.type == 49 || this.type == 51 || this.type == 150 || this.type == 93) && Main.rand.Next(100) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 18, 1, false, -1, false, false);
			}
			if ((this.type == 16 || this.type == 185 || this.type == 167 || this.type == 197) && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 393, 1, false, -1, false, false);
			}
			if (this.type == 58 && Main.rand.Next(75) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 393, 1, false, -1, false, false);
			}
			if (this.type >= 494 && this.type <= 506)
			{
				if (Main.rand.Next(80) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 18, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(80) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 393, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(25) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3285, 1, false, -1, false, false);
				}
			}
			if (this.type == 21 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 322 || this.type == 323 || this.type == 324 || (this.type >= 449 && this.type <= 452))
			{
				if (Main.rand.Next(100) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 954, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(200) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 955, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(200) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1166, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1274, 1, false, -1, false, false);
				}
			}
			else if (this.type == 6)
			{
				if (Main.rand.Next(175) == 0)
				{
					int num34 = Main.rand.Next(3);
					if (num34 == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 956, 1, false, -1, false, false);
					}
					else if (num34 == 1)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 957, 1, false, -1, false, false);
					}
					else
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 958, 1, false, -1, false, false);
					}
				}
			}
			else if (this.type == 42 || this.type == 43 || (this.type >= 231 && this.type <= 235))
			{
				if (Main.rand.Next(100) == 0)
				{
					int num35 = Main.rand.Next(3);
					if (num35 == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 960, 1, false, -1, false, false);
					}
					else if (num35 == 1)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 961, 1, false, -1, false, false);
					}
					else
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 962, 1, false, -1, false, false);
					}
				}
			}
			else if (this.type == 31 || this.type == 32 || this.type == 294 || this.type == 295 || this.type == 296)
			{
				if (Main.rand.Next(450) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 959, 1, false, -1, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1307, 1, false, -1, false, false);
				}
			}
			if ((this.type == 174 || this.type == 179 || this.type == 182 || this.type == 183) && Main.rand.Next(200) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 996, 1, false, 0, false, false);
			}
			if (this.type == 101 || this.type == 98)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 522, Main.rand.Next(2, 6), false, 0, false, false);
			}
			if (this.type == 86)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 526, 1, false, 0, false, false);
				if (Main.rand.Next(100) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 856, 1, false, 0, false, false);
				}
			}
			if (this.type == 186 || this.type == 432)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 40, Main.rand.Next(1, 10), false, 0, false, false);
			}
			if (this.type == 225)
			{
				if (Main.rand.Next(45) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1243, 1, false, 0, false, false);
				}
				else
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(2, 7), false, 0, false, false);
				}
			}
			if (this.type == 537)
			{
				int num36 = Main.rand.Next(1, 3);
				if (Main.expertMode)
				{
					if (this.netID == -7)
					{
						num36++;
					}
					if (this.netID == -8 || this.netID == -9)
					{
						num36 += Main.rand.Next(2);
					}
				}
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, num36, false, 0, false, false);
				int num37 = 8000;
				if (Main.expertMode)
				{
					num37 = (int)((double)num37 * 0.7);
				}
				if (Main.rand.Next(num37) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1309, 1, false, -1, false, false);
				}
			}
			if (this.type >= 333 && this.type <= 336 && Main.rand.Next(20) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1906, 1, false, 0, false, false);
			}
			if (this.netID == -4)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3111, Main.rand.Next(25, 51), false, 0, false, false);
				int num38 = 100;
				if (Main.expertMode)
				{
					num38 = (int)((double)num38 * 0.7);
				}
				if (Main.rand.Next(num38) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1309, 1, false, -1, false, false);
				}
			}
			else if (this.type == 1 || this.type == 16 || this.type == 138 || this.type == 141 || this.type == 147 || this.type == 184 || this.type == 187 || this.type == 204 || this.type == 302 || (this.type >= 333 && this.type <= 336) || this.type == 535)
			{
				int num39 = Main.rand.Next(1, 3);
				if (Main.expertMode)
				{
					if (this.netID == -7)
					{
						num39++;
					}
					if (this.netID == -8 || this.netID == -9)
					{
						num39 += Main.rand.Next(2);
					}
				}
				int num40 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, num39, false, 0, false, false);
				if (this.netID <= 1 && this.netID != -1 && this.netID != -2 && this.netID != -5 && this.netID != -6)
				{
					Main.item[num40].color = this.color;
					NetMessage.SendData(88, -1, -1, "", num40, 1f, 0f, 0f, 0, 0, 0);
				}
				int num41 = 10000;
				if (Main.expertMode)
				{
					num41 = (int)((double)num41 * 0.7);
				}
				if (Main.rand.Next(num41) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1309, 1, false, -1, false, false);
				}
			}
			if (this.type == 75)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 501, Main.rand.Next(1, 4), false, 0, false, false);
			}
			if (this.type == 81 || this.type == 183)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(2, 5), false, 0, false, false);
			}
			if (this.type == 122)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(5, 11), false, 0, false, false);
			}
			if (this.type == 71)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 327, 1, false, 0, false, false);
			}
			if (this.type == 2 || this.type == 317 || this.type == 318 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194 || this.type == 133)
			{
				if (Main.rand.Next(3) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 38, 1, false, 0, false, false);
				}
				else if (Main.rand.Next(100) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 236, 1, false, 0, false, false);
				}
			}
			if (this.type == 104 && Main.rand.Next(60) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 485, 1, false, -1, false, false);
			}
			if (this.type == 58)
			{
				if (Main.rand.Next(250) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 263, 1, false, 0, false, false);
				}
				else if (Main.rand.Next(30) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 118, 1, false, 0, false, false);
				}
			}
			if (this.type == 102 && Main.rand.Next(250) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 263, 1, false, 0, false, false);
			}
			if (this.type == 3 || this.type == 331 || this.type == 332 || this.type == 132 || this.type == 161 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 200 || this.type == 223 || this.type == 319 || this.type == 320 || this.type == 321 || (this.type >= 430 && this.type <= 436))
			{
				if (Main.rand.Next(50) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 216, 1, false, -1, false, false);
				}
				if (Main.rand.Next(250) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1304, 1, false, -1, false, false);
				}
			}
			if ((this.type == 489 || this.type == 490) && (Main.expertMode || Main.rand.Next(2) == 0))
			{
				if (Main.rand.Next(75) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3212, 1, false, -1, false, false);
				}
				if (Main.rand.Next(100) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3213, 1, false, -1, false, false);
				}
			}
			if (this.type == 223 && Main.rand.Next(20) == 0)
			{
				if (Main.rand.Next(2) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1135, 1, false, -1, false, false);
				}
				else
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1136, 1, false, -1, false, false);
				}
			}
			if (this.type == 66)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 267, 1, false, 0, false, false);
			}
			if ((this.type == 62 || this.type == 66) && Main.rand.Next(35) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 272, 1, false, -1, false, false);
			}
			if (this.value > 0f && Main.hardMode && (double)(this.position.Y / 16f) < Main.worldSurface + 10.0 && (base.Center.X / 16f < 380f || base.Center.X / 16f > (float)(Main.maxTilesX - 380)) && Main.rand.Next(100) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1315, 1, false, 0, false, false);
			}
			if (this.type == 52)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 251, 1, false, 0, false, false);
			}
			if (this.type == 53)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 239, 1, false, 0, false, false);
			}
			if (this.type == 536)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3478, 1, false, 0, false, false);
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3479, 1, false, 0, false, false);
			}
			if (this.type == 54)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 260, 1, false, 0, false, false);
			}
			if (this.type == 368)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2222, 1, false, 0, false, false);
			}
			if ((this.type == 69 || this.type == 509 || this.type == 508) && Main.rand.Next(3) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 323, Main.rand.Next(1, 3), false, 0, false, false);
			}
			if (this.type == 508 && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3772, 1, false, 0, false, false);
			}
			if (this.type == 73)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 362, Main.rand.Next(1, 3), false, 0, false, false);
			}
			if ((this.type == 483 || this.type == 482) && Main.rand.Next(30) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3109, 1, false, 0, false, false);
			}
			if ((this.type == 6 || this.type == 94) && Main.rand.Next(3) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 68, 1, false, 0, false, false);
			}
			if ((this.type == 181 || this.type == 173 || this.type == 239 || this.type == 182 || this.type == 240) && Main.rand.Next(3) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1330, 1, false, 0, false, false);
			}
			if (this.type == 7 || this.type == 8 || this.type == 9)
			{
				if (Main.rand.Next(3) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 68, Main.rand.Next(1, 3), false, 0, false, false);
				}
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 69, Main.rand.Next(3, 9), false, 0, false, false);
			}
			if ((this.type == 10 || this.type == 11 || this.type == 12 || this.type == 95 || this.type == 96 || this.type == 97) && (Main.rand.Next(50) == 0 || (Main.expertMode && Main.rand.Next(50) == 0)))
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 215, 1, false, 0, false, false);
			}
			if ((this.type == 47 || this.type == 464) && Main.rand.Next(75) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 243, 1, false, 0, false, false);
			}
			if ((this.type == 168 || this.type == 470) && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, (int)Utils.SelectRandom<short>(Main.rand, new short[]
						{
							3757,
							3758,
							3759
						}), 1, false, 0, false, false);
			}
			if (this.type == 533)
			{
				if (Main.rand.Next(40) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3795, 1, false, 0, false, false);
				}
				else if (Main.rand.Next(30) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3770, 1, false, 0, false, false);
				}
			}
			if (this.type == 4)
			{
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else
				{
					if (Main.rand.Next(7) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2112, 1, false, -1, false, false);
					}
					if (Main.rand.Next(40) == 0 || (Main.expertMode && Main.rand.Next(20) == 0))
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1299, 1, false, 0, false, false);
					}
					if (Main.expertMode)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3097, 1, false, -1, false, false);
					}
					int num42 = 1;
					if (Main.expertMode)
					{
						num42 = 2;
					}
					for (int n = 0; n < num42; n++)
					{
						if (WorldGen.crimson)
						{
							int stack = Main.rand.Next(20) + 10;
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, stack, false, 0, false, false);
							stack = Main.rand.Next(20) + 10;
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, stack, false, 0, false, false);
							stack = Main.rand.Next(20) + 10;
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, stack, false, 0, false, false);
							stack = Main.rand.Next(3) + 1;
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2171, stack, false, 0, false, false);
						}
						else
						{
							int stack2 = Main.rand.Next(30) + 20;
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 47, stack2, false, 0, false, false);
							stack2 = Main.rand.Next(20) + 10;
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, stack2, false, 0, false, false);
							stack2 = Main.rand.Next(20) + 10;
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, stack2, false, 0, false, false);
							stack2 = Main.rand.Next(20) + 10;
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, stack2, false, 0, false, false);
							stack2 = Main.rand.Next(3) + 1;
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 59, stack2, false, 0, false, false);
						}
					}
				}
			}
			if (this.type == 266)
			{
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else
				{
					int stack3 = Main.rand.Next(20, 46);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, stack3, false, 0, false, false);
					stack3 = Main.rand.Next(20, 46);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, stack3, false, 0, false, false);
					if (Main.expertMode)
					{
						stack3 = Main.rand.Next(30, 51);
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, stack3, false, 0, false, false);
						stack3 = Main.rand.Next(30, 51);
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, stack3, false, 0, false, false);
					}
					if (Main.rand.Next(7) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2104, 1, false, -1, false, false);
					}
					if (Main.rand.Next(20) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3060, 1, false, 0, false, false);
					}
					if (Main.expertMode)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3223, 1, false, 0, false, false);
					}
				}
			}
			if (this.type == 267 && NPC.AnyNPCs(266))
			{
				int num43 = Main.rand.Next(2, 6);
				if (Main.rand.Next(3) != 0)
				{
					if (Main.expertMode)
					{
						num43 += Main.rand.Next(2, 6);
					}
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1329, num43, false, 0, false, false);
				}
				if (Main.rand.Next(3) != 0)
				{
					num43 = Main.rand.Next(5, 13);
					if (Main.expertMode)
					{
						num43 += Main.rand.Next(6, 14);
					}
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, num43, false, 0, false, false);
				}
				if (Main.rand.Next(2) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].statLife < Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].statLifeMax2)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false, false);
				}
			}
			if (this.type == 13 || this.type == 14 || this.type == 15)
			{
				int num44 = Main.rand.Next(1, 3);
				if (Main.rand.Next(2) == 0)
				{
					if (Main.expertMode)
					{
						num44++;
					}
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 86, num44, false, 0, false, false);
				}
				if (Main.rand.Next(2) == 0)
				{
					num44 = Main.rand.Next(2, 6);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, num44, false, 0, false, false);
				}
				if (this.boss)
				{
					if (Main.expertMode)
					{
						this.DropBossBags();
					}
					else
					{
						num44 = Main.rand.Next(10, 30);
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, num44, false, 0, false, false);
						num44 = Main.rand.Next(10, 31);
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, num44, false, 0, false, false);
						if (Main.expertMode)
						{
							num44 = Main.rand.Next(10, 30);
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, num44, false, 0, false, false);
							num44 = Main.rand.Next(10, 31);
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, num44, false, 0, false, false);
						}
						if (Main.expertMode)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3224, 1, false, 0, false, false);
						}
						if (Main.rand.Next(20) == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 994, 1, false, 0, false, false);
						}
						if (Main.rand.Next(7) == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2111, 1, false, -1, false, false);
						}
					}
				}
				if (Main.rand.Next(4) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].statLife < Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].statLifeMax2)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false, false);
				}
			}
			if (this.type == 222)
			{
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else
				{
					if (Main.rand.Next(7) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2108, 1, false, -1, false, false);
					}
					int num45 = Main.rand.Next(3);
					if (num45 == 0)
					{
						num45 = 1121;
					}
					else if (num45 == 1)
					{
						num45 = 1123;
					}
					else if (num45 == 2)
					{
						num45 = 2888;
					}
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num45, 1, false, -1, false, false);
					if (Main.expertMode)
					{
						int num46 = Main.rand.Next(3);
						if (num46 == 0)
						{
							num46 = 1121;
						}
						else if (num46 == 1)
						{
							num46 = 1123;
						}
						else if (num46 == 2)
						{
							num46 = 2888;
						}
						while (num46 == num45)
						{
							num46 = Main.rand.Next(3);
							if (num46 == 0)
							{
								num46 = 1121;
							}
							else if (num46 == 1)
							{
								num46 = 1123;
							}
							else if (num46 == 2)
							{
								num46 = 2888;
							}
						}
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num46, 1, false, -1, false, false);
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1132, 1, false, -1, false, false);
					}
					else if (Main.rand.Next(3) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1132, 1, false, -1, false, false);
					}
					if ((Main.expertMode && Main.rand.Next(15) == 0) || Main.rand.Next(15) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1170, 1, false, 0, false, false);
					}
					if ((Main.expertMode && Main.rand.Next(20) == 0) || Main.rand.Next(20) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2502, 1, false, 0, false, false);
					}
					if (Main.expertMode)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1129, 1, false, 0, false, false);
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Main.rand.Next(842, 845), 1, false, 0, false, false);
					}
					else if (Main.rand.Next(3) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1129, 1, false, 0, false, false);
					}
					else if (Main.rand.Next(2) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Main.rand.Next(842, 845), 1, false, 0, false, false);
					}
					if (Main.rand.Next(4) != 0 || Main.expertMode)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1130, Main.rand.Next(10, 30), false, 0, false, false);
						if (Main.expertMode)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1130, Main.rand.Next(10, 30), false, 0, false, false);
						}
					}
					if (Main.expertMode)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2431, Main.rand.Next(44, 67), false, 0, false, false);
					}
					else
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2431, Main.rand.Next(16, 27), false, 0, false, false);
					}
				}
				NPC.downedQueenBee = true;
				if (Main.netMode == 2)
				{
					NetMessage.SendData(7, -1, -1, "", 0, 0f, 0f, 0f, 0, 0, 0);
				}
			}
			if (this.type == 35)
			{
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1281, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1273, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1313, 1, false, -1, false, false);
				}
			}
			if (this.type == 113)
			{
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else
				{
					if (Main.rand.Next(7) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2105, 1, false, -1, false, false);
					}
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 367, 1, false, -1, false, false);
					if (Main.expertMode)
					{
						int num47 = Main.rand.Next(4);
						if (num47 == 3)
						{
							num47 = 2998;
						}
						else
						{
							num47 = 489 + num47;
						}
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num47, 1, false, -1, false, false);
						int num48 = Main.rand.Next(3);
						if (num48 == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 514, 1, false, -1, false, false);
						}
						else if (num48 == 1)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 426, 1, false, -1, false, false);
						}
						else if (num48 == 2)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 434, 1, false, -1, false, false);
						}
					}
					else if (Main.rand.Next(2) == 0)
					{
						int num49 = Main.rand.Next(4);
						if (num49 == 3)
						{
							num49 = 2998;
						}
						else
						{
							num49 = 489 + num49;
						}
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num49, 1, false, -1, false, false);
					}
					else
					{
						int num50 = Main.rand.Next(3);
						if (num50 == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 514, 1, false, -1, false, false);
						}
						else if (num50 == 1)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 426, 1, false, -1, false, false);
						}
						else if (num50 == 2)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 434, 1, false, -1, false, false);
						}
					}
				}
				if (Main.netMode != 1)
				{
					int num51 = (int)(this.position.X + (float)(this.width / 2)) / 16;
					int num52 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
					int num53 = this.width / 2 / 16 + 1;
					for (int num54 = num51 - num53; num54 <= num51 + num53; num54++)
					{
						for (int num55 = num52 - num53; num55 <= num52 + num53; num55++)
						{
							if ((num54 == num51 - num53 || num54 == num51 + num53 || num55 == num52 - num53 || num55 == num52 + num53) && !Main.tile[num54, num55].active())
							{
								Main.tile[num54, num55].type = (WorldGen.crimson ? (ushort)347 : (ushort)140);
								Main.tile[num54, num55].active(true);
							}
							Main.tile[num54, num55].lava(false);
							Main.tile[num54, num55].liquid = 0;
							if (Main.netMode == 2)
							{
								NetMessage.SendTileSquare(-1, num54, num55, 1);
							}
							else
							{
								WorldGen.SquareTileFrame(num54, num55, true);
							}
						}
					}
				}
			}
			if (this.type == 439)
			{
				NPC.downedAncientCultist = true;
				if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3372, 1, false, -1, false, false);
				}
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3549, 1, false, -1, false, false);
				WorldGen.TriggerLunarApocalypse();
			}
			if (this.type == 398)
			{
				NPC.downedMoonlord = true;
				NPC.LunarApocalypseIsUp = false;
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else
				{
					if (Main.rand.Next(7) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3373, 1, false, -1, false, false);
					}
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3384, 1, false, -1, false, false);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3460, Main.rand.Next(70, 91), false, -1, false, false);
					int num56 = Utils.SelectRandom<int>(Main.rand, new int[]
						{
							3063,
							3389,
							3065,
							1553,
							3546,
							3541,
							3570,
							3571,
							3569
						});
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num56, 1, false, -1, false, false);
				}
			}
			num = this.type;
			if (num <= 493)
			{
				switch (num)
				{
					case 402:
					case 405:
					case 407:
					case 409:
					case 411:
						if ((this.type != 406 || Main.rand.Next(3) == 0) && NPC.ShieldStrengthTowerStardust > 0)
						{
							Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 629, 0, 0f, Main.myPlayer, (float)NPC.FindFirstNPC(493), 0f);
							goto IL_950C;
						}
						goto IL_950C;
					case 403:
					case 404:
					case 406:
					case 408:
					case 410:
					case 428:
						goto IL_950C;
					case 412:
					case 413:
					case 414:
					case 415:
					case 416:
					case 417:
					case 418:
					case 419:
						break;
					case 420:
					case 421:
					case 423:
					case 424:
						if (NPC.ShieldStrengthTowerNebula > 0)
						{
							Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 629, 0, 0f, Main.myPlayer, (float)NPC.FindFirstNPC(507), 0f);
							goto IL_950C;
						}
						goto IL_950C;
					case 422:
						{
							int num57 = Main.rand.Next(25, 41) / 2;
							if (Main.expertMode)
							{
								num57 = (int)((float)num57 * 1.5f);
							}
							for (int num58 = 0; num58 < num57; num58++)
							{
								Item.NewItem((int)this.position.X + Main.rand.Next(this.width), (int)this.position.Y + Main.rand.Next(this.height), 2, 2, 3456, Main.rand.Next(1, 4), false, 0, false, false);
							}
							NPC.downedTowerVortex = true;
							NPC.TowerActiveVortex = false;
							WorldGen.UpdateLunarApocalypse();
							WorldGen.MessageLunarApocalypse();
							goto IL_950C;
						}
					case 425:
					case 426:
					case 427:
					case 429:
						if (NPC.ShieldStrengthTowerVortex > 0)
						{
							Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 629, 0, 0f, Main.myPlayer, (float)NPC.FindFirstNPC(422), 0f);
							goto IL_950C;
						}
						goto IL_950C;
					default:
						{
							if (num != 493)
							{
								goto IL_950C;
							}
							int num59 = Main.rand.Next(25, 41) / 2;
							if (Main.expertMode)
							{
								num59 = (int)((float)num59 * 1.5f);
							}
							for (int num60 = 0; num60 < num59; num60++)
							{
								Item.NewItem((int)this.position.X + Main.rand.Next(this.width), (int)this.position.Y + Main.rand.Next(this.height), 2, 2, 3459, Main.rand.Next(1, 4), false, 0, false, false);
							}
							NPC.downedTowerStardust = true;
							NPC.TowerActiveStardust = false;
							WorldGen.UpdateLunarApocalypse();
							WorldGen.MessageLunarApocalypse();
							goto IL_950C;
						}
				}
			}
			else
			{
				if (num == 507)
				{
					int num61 = Main.rand.Next(25, 41) / 2;
					if (Main.expertMode)
					{
						num61 = (int)((float)num61 * 1.5f);
					}
					for (int num62 = 0; num62 < num61; num62++)
					{
						Item.NewItem((int)this.position.X + Main.rand.Next(this.width), (int)this.position.Y + Main.rand.Next(this.height), 2, 2, 3457, Main.rand.Next(1, 4), false, 0, false, false);
					}
					NPC.downedTowerNebula = true;
					NPC.TowerActiveNebula = false;
					WorldGen.UpdateLunarApocalypse();
					WorldGen.MessageLunarApocalypse();
					goto IL_950C;
				}
				switch (num)
				{
					case 517:
						{
							int num63 = Main.rand.Next(25, 41) / 2;
							if (Main.expertMode)
							{
								num63 = (int)((float)num63 * 1.5f);
							}
							for (int num64 = 0; num64 < num63; num64++)
							{
								Item.NewItem((int)this.position.X + Main.rand.Next(this.width), (int)this.position.Y + Main.rand.Next(this.height), 2, 2, 3458, Main.rand.Next(1, 4), false, 0, false, false);
							}
							NPC.downedTowerSolar = true;
							NPC.TowerActiveSolar = false;
							WorldGen.UpdateLunarApocalypse();
							WorldGen.MessageLunarApocalypse();
							goto IL_950C;
						}
					case 518:
						break;
					default:
						goto IL_950C;
				}
			}
			if (NPC.ShieldStrengthTowerSolar > 0)
			{
				Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 629, 0, 0f, Main.myPlayer, (float)NPC.FindFirstNPC(517), 0f);
			}
			IL_950C:
			num = this.type;
			switch (num)
			{
				case 381:
				case 382:
				case 383:
				case 385:
				case 386:
				case 389:
				case 390:
					break;
				case 384:
				case 387:
				case 388:
					goto IL_959F;
				default:
					if (num != 520)
					{
						goto IL_959F;
					}
					break;
			}
			if (Main.rand.Next(8) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2860, Main.rand.Next(8, 21), false, 0, false, false);
			}
			IL_959F:
			num = this.type;
			if (num == 383 || num == 386 || num == 389)
			{
				if (Main.rand.Next(200) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2806, 1, false, 0, false, false);
				}
				if (Main.rand.Next(200) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2807, 1, false, 0, false, false);
				}
				if (Main.rand.Next(200) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2808, 1, false, 0, false, false);
				}
			}
			num = this.type;
			switch (num)
			{
				case 381:
				case 382:
				case 385:
					break;
				case 383:
				case 384:
					goto IL_9798;
				default:
					if (num != 390)
					{
						goto IL_9798;
					}
					break;
			}
			if (Main.rand.Next(200) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2803, 1, false, 0, false, false);
			}
			if (Main.rand.Next(200) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2804, 1, false, 0, false, false);
			}
			if (Main.rand.Next(200) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2805, 1, false, 0, false, false);
			}
			IL_9798:
			if (this.type == 395)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Utils.SelectRandom<int>(Main.rand, new int[]
						{
							2797,
							2749,
							2795,
							2798,
							2796,
							2882,
							2880,
							2769,
							2800
						}), 1, false, 0, false, false);
			}
			if (this.type == 390 && Main.rand.Next(100) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2771, 1, false, 0, false, false);
			}
			if ((this.type == 116 || this.type == 117 || this.type == 118 || this.type == 119) && (!Main.expertMode || Main.rand.Next(5) == 0))
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false, false);
			}
			if (this.type == 139 && Main.rand.Next(2) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false, false);
			}
			if (this.type == 63 || this.type == 64 || this.type == 103)
			{
				if (Main.rand.Next(100) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1303, 1, false, -1, false, false);
				}
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 282, Main.rand.Next(1, 5), false, 0, false, false);
			}
			if (this.type == 481 && Main.rand.Next(2) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3094, Main.rand.Next(40, 81), false, 0, false, false);
			}
			if (this.type == 481 && Main.rand.Next(20) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3187 + Main.rand.Next(3), 1, false, 0, false, false);
			}
			if (this.type == 21 || this.type == 44 || this.type == 167 || this.type == 201 || this.type == 202 || this.type == 481 || this.type == 203 || this.type == 322 || this.type == 323 || this.type == 324 || (this.type >= 449 && this.type <= 452))
			{
				if (Main.rand.Next(25) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 118, 1, false, 0, false, false);
				}
				else if (this.type == 44)
				{
					if (Main.rand.Next(20) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Main.rand.Next(410, 412), 1, false, 0, false, false);
					}
					else
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 166, Main.rand.Next(1, 4), false, 0, false, false);
					}
				}
			}
			if (this.type == 45)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 238, 1, false, 0, false, false);
			}
			if (this.type == 50)
			{
				if (Main.slimeRain)
				{
					Main.StopSlimeRain(true);
					AchievementsHelper.NotifyProgressionEvent(16);
				}
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else
				{
					if (Main.rand.Next(4) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2430, 1, false, 0, false, false);
					}
					if (Main.rand.Next(7) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2493, 1, false, -1, false, false);
					}
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Main.rand.Next(256, 259), 1, false, 0, false, false);
					Main.rand.Next(2);
					if (Main.rand.Next(3) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2585, 1, false, 0, false, false);
					}
					else
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2610, 1, false, 0, false, false);
					}
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 998, 1, false, 0, false, false);
				}
				NPC.downedSlimeKing = true;
				if (Main.netMode == 2)
				{
					NetMessage.SendData(7, -1, -1, "", 0, 0f, 0f, 0f, 0, 0, 0);
				}
			}
			if (this.type == 23 && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 116, 1, false, 0, false, false);
			}
			if (this.type == 24 && Main.rand.Next(250) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 244, 1, false, 0, false, false);
			}
			if (this.type == 31 || this.type == 32 || this.type == 34)
			{
				if (Main.rand.Next(250) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 932, 1, false, 0, false, false);
				}
				else if (Main.rand.Next(100) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3095, 1, false, 0, false, false);
				}
				else if (Main.rand.Next(65) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 327, 1, false, 0, false, false);
				}
				else if (!Main.expertMode)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 154, Main.rand.Next(1, 4), false, 0, false, false);
				}
				if (Main.expertMode)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 154, Main.rand.Next(2, 7), false, 0, false, false);
				}
			}
			if (this.type == 26 || this.type == 27 || this.type == 28 || this.type == 29 || this.type == 111)
			{
				if (Main.rand.Next(200) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 160, 1, false, 0, false, false);
				}
				else if (Main.rand.Next(2) == 0)
				{
					int stack4 = Main.rand.Next(1, 6);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 161, stack4, false, 0, false, false);
				}
			}
			if (this.type == 175 && Main.rand.Next(100) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1265, 1, false, -1, false, false);
			}
			if ((this.type == 42 || (this.type >= 231 && this.type <= 235)) && (Main.expertMode || Main.rand.Next(3) != 0))
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 209, 1, false, 0, false, false);
			}
			if (this.type == 204 && (Main.expertMode || Main.rand.Next(2) == 0))
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 209, 1, false, 0, false, false);
			}
			if (this.type == 43 && (Main.expertMode || Main.rand.Next(2) == 0))
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 210, 1, false, 0, false, false);
			}
			if (this.type == 65)
			{
				if (Main.rand.Next(50) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 268, 1, false, 0, false, false);
				}
				else
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 319, 1, false, 0, false, false);
				}
			}
			if (this.type == 48 && Main.rand.Next(2) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 320, 1, false, 0, false, false);
			}
			if (this.type == 541)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3783, 1, false, 0, false, false);
			}
			if (this.type == 542 && Main.rand.Next(8) == 0)
			{
				int num65 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 319, 1, false, 0, false, false);
				Main.item[num65].color = new Color(189, 148, 96, 255);
				NetMessage.SendData(88, -1, -1, "", num65, 1f, 0f, 0f, 0, 0, 0);
			}
			if (this.type == 543 || this.type == 544)
			{
				if (Main.rand.Next(25) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 527, 1, false, 0, false, false);
				}
				if (Main.rand.Next(8) == 0)
				{
					int num66 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 319, 1, false, 0, false, false);
					if (this.type == 544)
					{
						Main.item[num66].color = new Color(145, 27, 40, 255);
					}
					else
					{
						Main.item[num66].color = new Color(112, 85, 89, 255);
					}
					NetMessage.SendData(88, -1, -1, "", num66, 1f, 0f, 0f, 0, 0, 0);
				}
			}
			if (this.type == 545)
			{
				if (Main.rand.Next(25) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 528, 1, false, 0, false, false);
				}
				if (Main.rand.Next(8) == 0)
				{
					int num67 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 319, 1, false, 0, false, false);
					Main.item[num67].color = new Color(158, 113, 164, 255);
					NetMessage.SendData(88, -1, -1, "", num67, 1f, 0f, 0f, 0, 0, 0);
				}
			}
			if (this.type == 125 || this.type == 126)
			{
				int num68 = 125;
				if (this.type == 125)
				{
					num68 = 126;
				}
				if (!NPC.AnyNPCs(num68))
				{
					if (Main.expertMode)
					{
						this.DropBossBags();
					}
					else
					{
						if (Main.rand.Next(7) == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2106, 1, false, -1, false, false);
						}
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 549, Main.rand.Next(25, 41), false, 0, false, false);
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1225, Main.rand.Next(15, 31), false, 0, false, false);
					}
				}
				else
				{
					this.value = 0f;
					this.boss = false;
				}
			}
			else if (Main.expertMode)
			{
				if (this.type == 127 || this.type == 134)
				{
					this.DropBossBags();
				}
			}
			else if (this.type == 127)
			{
				if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2107, 1, false, -1, false, false);
				}
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 547, Main.rand.Next(25, 41), false, 0, false, false);
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1225, Main.rand.Next(15, 31), false, 0, false, false);
			}
			else if (this.type == 134)
			{
				if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2113, 1, false, -1, false, false);
				}
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 548, Main.rand.Next(25, 41), false, 0, false, false);
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1225, Main.rand.Next(15, 31), false, 0, false, false);
			}
			if (this.type == 262)
			{
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else
				{
					if (Main.rand.Next(7) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2109, 1, false, -1, false, false);
					}
					if (Main.expertMode)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1141, Main.rand.Next(2, 4), false, -1, false, false);
					}
					else
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1141, 1, false, -1, false, false);
					}
					if (Main.rand.Next(20) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1182, 1, false, -1, false, false);
					}
					if (Main.rand.Next(50) == 0 || (Main.expertMode && Main.rand.Next(50) == 0))
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1305, 1, false, -1, false, false);
					}
					if (Main.rand.Next(4) == 0 || Main.expertMode)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1157, 1, false, -1, false, false);
					}
					if (Main.rand.Next(10) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3021, 1, false, -1, false, false);
					}
					int num69 = 1;
					if (Main.expertMode)
					{
						num69 = 2;
					}
					int num70 = 0;
					for (int num71 = 0; num71 < num69; num71++)
					{
						int num72 = Main.rand.Next(7);
						if (!NPC.downedPlantBoss)
						{
							num72 = 0;
						}
						if (num71 == 0)
						{
							num70 = num72;
						}
						else
						{
							while (num70 == num72)
							{
								num72 = Main.rand.Next(7);
							}
						}
						if (num72 == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 758, 1, false, -1, false, false);
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 771, Main.rand.Next(50, 150), false, 0, false, false);
						}
						else if (num72 == 1)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1255, 1, false, -1, false, false);
						}
						else if (num72 == 2)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 788, 1, false, -1, false, false);
						}
						else if (num72 == 3)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1178, 1, false, -1, false, false);
						}
						else if (num72 == 4)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1259, 1, false, -1, false, false);
						}
						else if (num72 == 5)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1155, 1, false, -1, false, false);
						}
						else if (num72 == 6)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3018, 1, false, -1, false, false);
						}
					}
				}
				bool flag4 = NPC.downedPlantBoss;
				NPC.downedPlantBoss = true;
				if (!flag4)
				{
					if (Main.netMode == 0)
					{
						Main.NewText(Lang.misc[33], 50, 255, 130, false);
					}
					else if (Main.netMode == 2)
					{
						NetMessage.SendData(25, -1, -1, Lang.misc[33], 255, 50f, 255f, 130f, 0, 0, 0);
					}
				}
			}
			if ((this.boss || this.type == 125 || this.type == 126 || this.type == 491) && Main.rand.Next(10) == 0)
			{
				if (this.type == 4)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1360, 1, false, 0, false, false);
				}
				if (this.type == 13 || this.type == 14 || this.type == 15)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1361, 1, false, 0, false, false);
				}
				if (this.type == 266)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1362, 1, false, 0, false, false);
				}
				if (this.type == 35)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1363, 1, false, 0, false, false);
				}
				if (this.type == 222)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1364, 1, false, 0, false, false);
				}
				if (this.type == 113)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1365, 1, false, 0, false, false);
				}
				if (this.type == 134)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1366, 1, false, 0, false, false);
				}
				if (this.type == 127)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1367, 1, false, 0, false, false);
				}
				if (this.type == 125)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1368, 1, false, 0, false, false);
				}
				if (this.type == 126)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1369, 1, false, 0, false, false);
				}
				if (this.type == 262)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1370, 1, false, 0, false, false);
				}
				if (this.type == 245)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1371, 1, false, 0, false, false);
				}
				if (this.type == 50)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2489, 1, false, 0, false, false);
				}
				if (this.type == 370)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2589, 1, false, 0, false, false);
				}
				if (this.type == 439)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3357, 1, false, 0, false, false);
				}
				if (this.type == 491)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3359, 1, false, 0, false, false);
				}
				if (this.type == 395)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3358, 1, false, 0, false, false);
				}
				if (this.type == 398)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3595, 1, false, 0, false, false);
				}
			}
			if (this.boss)
			{
				if (this.type == 4)
				{
					NPC.downedBoss1 = true;
				}
				else if (this.type == 13 || this.type == 14 || this.type == 15)
				{
					NPC.downedBoss2 = true;
					this.name = "Eater of Worlds";
				}
				else if (this.type == 266)
				{
					NPC.downedBoss2 = true;
					this.name = "Brain of Cthulu";
				}
				else if (this.type == 35)
				{
					NPC.downedBoss3 = true;
					this.name = "Skeletron";
				}
				else
				{
					this.name = this.displayName;
				}
				if (this.type == 127)
				{
					NPC.downedMechBoss3 = true;
					NPC.downedMechBossAny = true;
				}
				if (this.type == 134)
				{
					NPC.downedMechBoss1 = true;
					NPC.downedMechBossAny = true;
				}
				string name = this.name;
				if (this.displayName != "")
				{
					name = this.displayName;
				}
				int stack5 = Main.rand.Next(5, 16);
				int num73 = 28;
				if (this.type == 113)
				{
					num73 = 188;
				}
				else if (this.type == 222)
				{
					num73 = 1134;
				}
				else if (this.type > 113 && this.type < 222)
				{
					num73 = 499;
				}
				else if (this.type == 245 || this.type == 262)
				{
					num73 = 499;
				}
				else if (this.type == 370)
				{
					num73 = 499;
				}
				else if (this.type == 395)
				{
					num73 = 499;
				}
				else if (this.type == 439)
				{
					num73 = 499;
				}
				else if (this.type == 398)
				{
					num73 = 499;
				}
				NPCLoader.BossLoot(this, ref name, ref num73);
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num73, stack5, false, 0, false, false);
				int num74 = Main.rand.Next(5) + 5;
				for (int num75 = 0; num75 < num74; num75++)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false, false);
				}
				if (this.type == 125 || this.type == 126)
				{
					NPC.downedMechBoss2 = true;
					NPC.downedMechBossAny = true;
					if (Main.netMode == 0)
					{
						Main.NewText("The Twins " + Lang.misc[50], 175, 75, 255, false);
					}
					else if (Main.netMode == 2)
					{
						NetMessage.SendData(25, -1, -1, "The Twins " + Lang.misc[50], 255, 175f, 75f, 255f, 0, 0, 0);
					}
				}
				else if (this.type == 398)
				{
					if (Main.netMode == 0)
					{
						Main.NewText("Moon Lord " + Lang.misc[17], 175, 75, 255, false);
					}
					else if (Main.netMode == 2)
					{
						NetMessage.SendData(25, -1, -1, "Moon Lord " + Lang.misc[17], 255, 175f, 75f, 255f, 0, 0, 0);
					}
				}
				else if (Main.netMode == 0)
				{
					Main.NewText(name + " " + Lang.misc[17], 175, 75, 255, false);
				}
				else if (Main.netMode == 2)
				{
					NetMessage.SendData(25, -1, -1, name + " " + Lang.misc[17], 255, 175f, 75f, 255f, 0, 0, 0);
				}
				if (this.type == 113 && Main.netMode != 1)
				{
					bool hardMode = Main.hardMode;
					WorldGen.StartHardmode();
					if (NPC.downedMechBoss1 && NPC.downedMechBoss2 && NPC.downedMechBoss3 && !hardMode)
					{
						if (Main.netMode == 0)
						{
							Main.NewText(Lang.misc[32], 50, 255, 130, false);
						}
						else if (Main.netMode == 2)
						{
							NetMessage.SendData(25, -1, -1, Lang.misc[32], 255, 50f, 255f, 130f, 0, 0, 0);
						}
					}
				}
				if (Main.netMode == 2)
				{
					NetMessage.SendData(7, -1, -1, "", 0, 0f, 0f, 0f, 0, 0, 0);
				}
			}
			if (!flag && NPC.downedMechBoss1 && NPC.downedMechBoss2 && NPC.downedMechBoss3 && Main.hardMode)
			{
				if (Main.netMode == 0)
				{
					Main.NewText(Lang.misc[32], 50, 255, 130, false);
				}
				else if (Main.netMode == 2)
				{
					NetMessage.SendData(25, -1, -1, Lang.misc[32], 255, 50f, 255f, 130f, 0, 0, 0);
				}
			}
			NPCLoader.NPCLoot(this);
			if (this.type != 16 && this.type != 81 && this.type != 121 && Main.rand.Next(6) == 0 && this.lifeMax > 1 && this.damage > 0)
			{
				int num76 = (int)Player.FindClosest(this.position, this.width, this.height);
				if (Main.rand.Next(2) == 0 && Main.player[num76].statMana < Main.player[num76].statManaMax2)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 184, 1, false, 0, false, false);
				}
				else if (Main.rand.Next(2) == 0 && Main.player[num76].statLife < Main.player[num76].statLifeMax2)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false, false);
				}
			}
			if (this.type != 16 && this.type != 81 && this.type != 121 && Main.rand.Next(2) == 0 && this.lifeMax > 1 && this.damage > 0)
			{
				int num77 = (int)Player.FindClosest(this.position, this.width, this.height);
				if (Main.player[num77].statMana < Main.player[num77].statManaMax2)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 184, 1, false, 0, false, false);
				}
			}
			float num78 = this.value;
			if (this.midas)
			{
				num78 *= 1f + (float)Main.rand.Next(10, 50) * 0.01f;
			}
			num78 *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
			if (Main.rand.Next(5) == 0)
			{
				num78 *= 1f + (float)Main.rand.Next(5, 11) * 0.01f;
			}
			if (Main.rand.Next(10) == 0)
			{
				num78 *= 1f + (float)Main.rand.Next(10, 21) * 0.01f;
			}
			if (Main.rand.Next(15) == 0)
			{
				num78 *= 1f + (float)Main.rand.Next(15, 31) * 0.01f;
			}
			if (Main.rand.Next(20) == 0)
			{
				num78 *= 1f + (float)Main.rand.Next(20, 41) * 0.01f;
			}
			num78 += this.extraValue;
			while ((int)num78 > 0)
			{
				if (num78 > 1000000f)
				{
					int num79 = (int)(num78 / 1000000f);
					if (num79 > 50 && Main.rand.Next(5) == 0)
					{
						num79 /= Main.rand.Next(3) + 1;
					}
					if (Main.rand.Next(5) == 0)
					{
						num79 /= Main.rand.Next(3) + 1;
					}
					num78 -= (float)(1000000 * num79);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 74, num79, false, 0, false, false);
				}
				else if (num78 > 10000f)
				{
					int num80 = (int)(num78 / 10000f);
					if (num80 > 50 && Main.rand.Next(5) == 0)
					{
						num80 /= Main.rand.Next(3) + 1;
					}
					if (Main.rand.Next(5) == 0)
					{
						num80 /= Main.rand.Next(3) + 1;
					}
					num78 -= (float)(10000 * num80);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 73, num80, false, 0, false, false);
				}
				else if (num78 > 100f)
				{
					int num81 = (int)(num78 / 100f);
					if (num81 > 50 && Main.rand.Next(5) == 0)
					{
						num81 /= Main.rand.Next(3) + 1;
					}
					if (Main.rand.Next(5) == 0)
					{
						num81 /= Main.rand.Next(3) + 1;
					}
					num78 -= (float)(100 * num81);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 72, num81, false, 0, false, false);
				}
				else
				{
					int num82 = (int)num78;
					if (num82 > 50 && Main.rand.Next(5) == 0)
					{
						num82 /= Main.rand.Next(3) + 1;
					}
					if (Main.rand.Next(5) == 0)
					{
						num82 /= Main.rand.Next(4) + 1;
					}
					if (num82 < 1)
					{
						num82 = 1;
					}
					num78 -= (float)num82;
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 71, num82, false, 0, false, false);
				}
			}
		}

		public static void CatchNPC(int i, int who = -1)
		{
			if (!Main.npc[i].active)
			{
				return;
			}
			if (Main.netMode == 1)
			{
				Main.npc[i].active = false;
				NetMessage.SendData(70, -1, -1, "", i, (float)who, 0f, 0f, 0, 0, 0);
				return;
			}
			if (Main.npc[i].catchItem > 0)
			{
				if (Main.npc[i].SpawnedFromStatue)
				{
					Vector2 position = Main.npc[i].Center - new Vector2(20f);
					Utils.PoofOfSmoke(position);
					Main.npc[i].active = false;
					NetMessage.SendData(23, -1, -1, "", i, 0f, 0f, 0f, 0, 0, 0);
					NetMessage.SendData(106, -1, -1, "", (int)position.X, position.Y, 0f, 0f, 0, 0, 0);
					return;
				}
				Item item = new Item();
				item.SetDefaults((int)Main.npc[i].catchItem, false);
				Item.NewItem((int)Main.player[who].Center.X, (int)Main.player[who].Center.Y, 0, 0, (int)Main.npc[i].catchItem, 1, false, 0, true, false);
				Main.npc[i].active = false;
				NetMessage.SendData(23, -1, -1, "", i, 0f, 0f, 0f, 0, 0, 0);
			}
		}

		public void DropBossBags()
		{
			int num = -1;
			if (this.type == 50)
			{
				num = 3318;
			}
			if (this.type == 4)
			{
				num = 3319;
			}
			if (this.type >= 13 && this.type <= 15)
			{
				num = 3320;
			}
			if (this.type == 266)
			{
				num = 3321;
			}
			if (this.type == 222)
			{
				num = 3322;
			}
			if (this.type == 35)
			{
				num = 3323;
			}
			if (this.type == 113)
			{
				num = 3324;
			}
			if (this.type == 134)
			{
				num = 3325;
			}
			if (this.type == 125 || this.type == 126)
			{
				num = 3326;
			}
			if (this.type == 127)
			{
				num = 3327;
			}
			if (this.type == 262)
			{
				num = 3328;
			}
			if (this.type == 245)
			{
				num = 3329;
			}
			if (this.type == 370)
			{
				num = 3330;
			}
			if (this.type == 439)
			{
				num = 3331;
			}
			if (this.type == 398)
			{
				num = 3332;
			}
			NPCLoader.BossBag(this, ref num);
			if (num > 0)
			{
				if (Main.netMode == 2)
				{
					int num2 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num, 1, true, 0, false, false);
					Main.itemLockoutTime[num2] = 54000;
					for (int i = 0; i < 255; i++)
					{
						if (this.playerInteraction[i] && Main.player[i].active)
						{
							NetMessage.SendData(90, i, -1, "", num2, 0f, 0f, 0f, 0, 0, 0);
						}
					}
					Main.item[num2].active = false;
				}
				else if (Main.netMode == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num, 1, false, 0, false, false);
				}
				this.value = 0f;
			}
		}

		public void PlayerInteraction(int player)
		{
			bool flag;
			if (this.realLife >= 0)
			{
				flag = Main.npc[this.realLife].playerInteraction[player];
			}
			else
			{
				flag = this.playerInteraction[player];
			}
			if (flag)
			{
				return;
			}
			if (this.type == 13 || this.type == 14 || this.type == 15)
			{
				for (int i = 0; i < 200; i++)
				{
					if (i != this.whoAmI && Main.npc[i].active && (Main.npc[i].type == 13 || Main.npc[i].type == 14 || Main.npc[i].type == 15))
					{
						Main.npc[i].ApplyInteraction(player);
					}
				}
			}
			if (this.type == 134 || this.type == 135 || this.type == 136)
			{
				for (int j = 0; j < 200; j++)
				{
					if (j != this.whoAmI && Main.npc[j].active && (Main.npc[j].type == 134 || Main.npc[j].type == 135 || Main.npc[j].type == 136))
					{
						Main.npc[j].ApplyInteraction(player);
					}
				}
			}
			if (this.type == 35 || this.type == 36)
			{
				for (int k = 0; k < 200; k++)
				{
					if (k != this.whoAmI && Main.npc[k].active && (Main.npc[k].type == 35 || Main.npc[k].type == 36))
					{
						Main.npc[k].ApplyInteraction(player);
					}
				}
			}
			if (this.type == 113 || this.type == 114)
			{
				for (int l = 0; l < 200; l++)
				{
					if (l != this.whoAmI && Main.npc[l].active && (Main.npc[l].type == 113 || Main.npc[l].type == 114))
					{
						Main.npc[l].ApplyInteraction(player);
					}
				}
			}
			if (this.type >= 127 && this.type <= 131)
			{
				for (int m = 0; m < 200; m++)
				{
					if (m != this.whoAmI && Main.npc[m].active && Main.npc[m].type >= 127 && Main.npc[m].type <= 131)
					{
						Main.npc[m].ApplyInteraction(player);
					}
				}
			}
			if (this.type >= 245 && this.type <= 249)
			{
				for (int n = 0; n < 200; n++)
				{
					if (n != this.whoAmI && Main.npc[n].active && Main.npc[n].type >= 245 && Main.npc[n].type <= 249)
					{
						Main.npc[n].ApplyInteraction(player);
					}
				}
			}
			if ((this.type == 396 || this.type == 397) && Main.npc[(int)this.ai[3]].active && Main.npc[(int)this.ai[3]].type == 398)
			{
				Main.npc[(int)this.ai[3]].ApplyInteraction(player);
			}
			if ((this.type == 393 || this.type == 394) && Main.npc[(int)this.ai[0]].active && Main.npc[(int)this.ai[0]].type == 395)
			{
				Main.npc[(int)this.ai[0]].ApplyInteraction(player);
			}
			if (this.type == 492 && Main.npc[(int)this.ai[0]].active && Main.npc[(int)this.ai[0]].type == 491)
			{
				Main.npc[(int)this.ai[0]].ApplyInteraction(player);
			}
			this.ApplyInteraction(player);
		}

		public void ApplyInteraction(int player)
		{
			if (this.realLife >= 0)
			{
				Main.npc[this.realLife].playerInteraction[player] = true;
			}
			else
			{
				this.playerInteraction[player] = true;
			}
			if (player < 255)
			{
				if (this.realLife >= 0)
				{
					Main.npc[this.realLife].lastInteraction = player;
					return;
				}
				this.lastInteraction = player;
			}
		}

		public static bool CanReleaseNPCs(int who)
		{
			float num = 0.7f;
			if (Main.netMode != 1)
			{
				num += 0.05f;
			}
			int num2 = 0;
			int num3 = 0;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active)
				{
					num3++;
					if ((int)Main.npc[i].releaseOwner == who)
					{
						num2++;
					}
				}
			}
			int num4 = 0;
			for (int j = 0; j < 255; j++)
			{
				if (Main.player[j].active)
				{
					num4++;
				}
			}
			int num5 = (int)(200f * num / (float)num4);
			return (float)num3 < 200f * num && num2 < num5;
		}

		public static void ReleaseNPC(int x, int y, int Type, int Style, int who)
		{
			if (Main.netMode == 1)
			{
				NetMessage.SendData(71, -1, -1, "", x, (float)y, (float)Type, (float)Style, 0, 0, 0);
				return;
			}
			if (Type >= 0 && Type < 547 && Main.npcCatchable[Type] && NPC.CanReleaseNPCs(who))
			{
				if (Type == 148)
				{
					int num = Type + Main.rand.Next(2);
					int num2 = NPC.NewNPC(x, y, num, 0, 0f, 0f, 0f, 0f, 255);
					Main.npc[num2].releaseOwner = (short)who;
					return;
				}
				int num3 = NPC.NewNPC(x, y, Type, 0, 0f, 0f, 0f, 0f, 255);
				if (Type == 356)
				{
					Main.npc[num3].ai[2] = (float)Style;
				}
				Main.npc[num3].releaseOwner = (short)who;
			}
		}

		public static void SlimeRainSpawns(int plr)
		{
			float num = 15f;
			Player player = Main.player[plr];
			if ((double)player.position.Y > Main.worldSurface * 16.0 + (double)(Main.maxScreenH / 2))
			{
				return;
			}
			if (player.activeNPCs > num)
			{
				return;
			}
			float num2 = player.activeNPCs / num;
			int num3 = 45 + (int)(450f * num2);
			if (Main.expertMode)
			{
				num3 = (int)((double)num3 * 0.85);
			}
			if (Main.rand.Next(num3) != 0)
			{
				return;
			}
			int num4 = (int)(player.Center.X - (float)Main.maxScreenW);
			int maxValue = num4 + Main.maxScreenW * 2;
			int minValue = (int)((double)player.Center.Y - (double)Main.maxScreenH * 1.5);
			int maxValue2 = (int)((double)player.Center.Y - (double)Main.maxScreenH * 0.75);
			int num5 = Main.rand.Next(num4, maxValue);
			int num6 = Main.rand.Next(minValue, maxValue2);
			num5 /= 16;
			num6 /= 16;
			if (num5 < 10 || num5 > Main.maxTilesX + 10)
			{
				return;
			}
			if ((double)num6 < Main.worldSurface * 0.3 || (double)num6 > Main.worldSurface)
			{
				return;
			}
			if (Collision.SolidTiles(num5 - 3, num5 + 3, num6 - 5, num6 + 2))
			{
				return;
			}
			if (Main.wallHouse[(int)Main.tile[num5, num6].wall])
			{
				return;
			}
			int num7 = NPC.NewNPC(num5 * 16 + 8, num6 * 16, 1, 0, 0f, 0f, 0f, 0f, 255);
			if (Main.rand.Next(200) == 0)
			{
				Main.npc[num7].netDefaults(-4);
				return;
			}
			if (Main.expertMode)
			{
				if (Main.rand.Next(7) == 0)
				{
					Main.npc[num7].netDefaults(-7);
					return;
				}
				if (Main.rand.Next(3) == 0)
				{
					Main.npc[num7].netDefaults(-3);
					return;
				}
			}
			else
			{
				if (Main.rand.Next(10) == 0)
				{
					Main.npc[num7].netDefaults(-7);
					return;
				}
				if (Main.rand.Next(5) < 2)
				{
					Main.npc[num7].netDefaults(-3);
				}
			}
		}

		public static bool Spawning_SandstoneCheck(int x, int y)
		{
			if (!WorldGen.InWorld(x, y, 10))
			{
				return false;
			}
			int num = 0;
			for (int i = 0; i < 8; i++)
			{
				Tile tile = Main.tile[x, y + i];
				if (!tile.active() || !TileID.Sets.Conversion.Sand[(int)tile.type])
				{
					break;
				}
				num++;
				for (int j = 1; j <= 4; j++)
				{
					tile = Main.tile[x + j, y + i];
					if (!tile.active() || !TileID.Sets.Conversion.Sand[(int)tile.type])
					{
						break;
					}
					num++;
				}
				for (int k = 1; k <= 4; k++)
				{
					tile = Main.tile[x - k, y + i];
					if (!tile.active() || !TileID.Sets.Conversion.Sand[(int)tile.type])
					{
						break;
					}
					num++;
				}
			}
			return num >= 40;
		}

		public static void SpawnNPC()
		{
			if (NPC.noSpawnCycle)
			{
				NPC.noSpawnCycle = false;
				return;
			}
			bool flag = false;
			int num = 0;
			int num2 = 0;
			int num3 = 0;
			int num4 = 0;
			for (int i = 0; i < 255; i++)
			{
				if (Main.player[i].active)
				{
					num4++;
				}
			}
			for (int j = 0; j < 255; j++)
			{
				if (Main.player[j].active && !Main.player[j].dead)
				{
					if (Main.slimeRain)
					{
						NPC.SlimeRainSpawns(j);
					}
					bool flag2 = false;
					bool flag3 = false;
					bool flag4 = false;
					bool flag5 = false;
					bool flag6 = false;
					bool flag7 = false;
					bool flag8 = false;
					bool flag9 = false;
					bool flag10 = false;
					bool flag11 = false;
					bool flag12 = NPC.downedPlantBoss && Main.hardMode; //patch file: flag12
					if (Main.player[j].active && Main.invasionType > 0 && Main.invasionDelay == 0 && Main.invasionSize > 0 && (double)Main.player[j].position.Y < Main.worldSurface * 16.0 + (double)NPC.sHeight)
					{
						int num5 = 3000;
						if ((double)Main.player[j].position.X > Main.invasionX * 16.0 - (double)num5 && (double)Main.player[j].position.X < Main.invasionX * 16.0 + (double)num5)
						{
							//patch file: flag4
							flag4 = true;
						}
						else if (Main.invasionX >= (double)(Main.maxTilesX / 2 - 5) && Main.invasionX <= (double)(Main.maxTilesX / 2 + 5))
						{
							int k = 0;
							while (k < 200)
							{
								if (Main.npc[k].townNPC && Math.Abs(Main.player[j].position.X - Main.npc[k].Center.X) < (float)num5)
								{
									if (Main.rand.Next(3) == 0)
									{
										flag4 = true;
										break;
									}
									break;
								}
								else
								{
									k++;
								}
							}
						}
					}
					if (Main.player[j].ZoneTowerSolar || Main.player[j].ZoneTowerNebula || Main.player[j].ZoneTowerVortex || Main.player[j].ZoneTowerStardust)
					{
						flag4 = true;
					}
					bool flag13 = false;
					NPC.spawnRate = NPC.defaultSpawnRate;
					NPC.maxSpawns = NPC.defaultMaxSpawns;
					if (Main.hardMode)
					{
						NPC.spawnRate = (int)((double)NPC.defaultSpawnRate * 0.9);
						NPC.maxSpawns = NPC.defaultMaxSpawns + 1;
					}
					if (Main.player[j].position.Y > (float)((Main.maxTilesY - 200) * 16))
					{
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 2f);
					}
					else if ((double)Main.player[j].position.Y > Main.rockLayer * 16.0 + (double)NPC.sHeight)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.4);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.9f);
					}
					else if ((double)Main.player[j].position.Y > Main.worldSurface * 16.0 + (double)NPC.sHeight)
					{
						if (Main.hardMode)
						{
							NPC.spawnRate = (int)((double)NPC.spawnRate * 0.45);
							NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.8f);
						}
						else
						{
							NPC.spawnRate = (int)((double)NPC.spawnRate * 0.5);
							NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.7f);
						}
					}
					else if (!Main.dayTime)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.6);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.3f);
						if (Main.bloodMoon)
						{
							NPC.spawnRate = (int)((double)NPC.spawnRate * 0.3);
							NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.8f);
						}
						if ((Main.pumpkinMoon || Main.snowMoon) && (double)Main.player[j].position.Y < Main.worldSurface * 16.0)
						{
							NPC.spawnRate = (int)((double)NPC.spawnRate * 0.2);
							NPC.maxSpawns *= 2;
						}
					}
					else if (Main.dayTime && Main.eclipse)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.2);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.9f);
					}
					if (Main.player[j].ZoneSnow && (double)(Main.player[j].position.Y / 16f) < Main.worldSurface)
					{
						NPC.maxSpawns = (int)((float)NPC.maxSpawns + (float)NPC.maxSpawns * Main.cloudAlpha);
						NPC.spawnRate = (int)((float)NPC.spawnRate * (1f - Main.cloudAlpha + 1f) / 2f);
					}
					if (Main.player[j].ZoneDungeon)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.4);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.7f);
					}
					else if (Main.player[j].ZoneSandstorm)
					{
						NPC.spawnRate = (int)((float)NPC.spawnRate * (Main.hardMode ? 0.4f : 0.9f));
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * (Main.hardMode ? 1.5f : 1.2f));
					}
					else if (Main.player[j].ZoneUndergroundDesert)
					{
						NPC.spawnRate = (int)((float)NPC.spawnRate * (Main.hardMode ? 0.2f : 0.3f));
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 2f);
					}
					else if (Main.player[j].ZoneJungle)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.4);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.5f);
					}
					else if (Main.player[j].ZoneCorrupt || Main.player[j].ZoneCrimson)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.65);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.3f);
					}
					else if (Main.player[j].ZoneMeteor)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.4);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.1f);
					}
					if (Main.player[j].ZoneHoly && (double)Main.player[j].position.Y > Main.rockLayer * 16.0 + (double)NPC.sHeight)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.65);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.3f);
					}
					if (Main.wof >= 0 && Main.player[j].position.Y > (float)((Main.maxTilesY - 200) * 16))
					{
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 0.3f);
						NPC.spawnRate *= 3;
					}
					if ((double)Main.player[j].activeNPCs < (double)NPC.maxSpawns * 0.2)
					{
						NPC.spawnRate = (int)((float)NPC.spawnRate * 0.6f);
					}
					else if ((double)Main.player[j].activeNPCs < (double)NPC.maxSpawns * 0.4)
					{
						NPC.spawnRate = (int)((float)NPC.spawnRate * 0.7f);
					}
					else if ((double)Main.player[j].activeNPCs < (double)NPC.maxSpawns * 0.6)
					{
						NPC.spawnRate = (int)((float)NPC.spawnRate * 0.8f);
					}
					else if ((double)Main.player[j].activeNPCs < (double)NPC.maxSpawns * 0.8)
					{
						NPC.spawnRate = (int)((float)NPC.spawnRate * 0.9f);
					}
					if ((double)(Main.player[j].position.Y / 16f) > (Main.worldSurface + Main.rockLayer) / 2.0 || Main.player[j].ZoneCorrupt || Main.player[j].ZoneCrimson)
					{
						if ((double)Main.player[j].activeNPCs < (double)NPC.maxSpawns * 0.2)
						{
							NPC.spawnRate = (int)((float)NPC.spawnRate * 0.7f);
						}
						else if ((double)Main.player[j].activeNPCs < (double)NPC.maxSpawns * 0.4)
						{
							NPC.spawnRate = (int)((float)NPC.spawnRate * 0.9f);
						}
					}
					if (Main.player[j].calmed)
					{
						NPC.spawnRate = (int)((float)NPC.spawnRate * 1.3f);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 0.7f);
					}
					if (Main.player[j].sunflower)
					{
						NPC.spawnRate = (int)((float)NPC.spawnRate * 1.2f);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 0.8f);
					}
					if (Main.player[j].enemySpawns)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.5);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 2f);
					}
					if (Main.player[j].ZoneWaterCandle || Main.player[j].inventory[Main.player[j].selectedItem].type == 148)
					{
						if (!Main.player[j].ZonePeaceCandle && Main.player[j].inventory[Main.player[j].selectedItem].type != 3117)
						{
							NPC.spawnRate = (int)((double)NPC.spawnRate * 0.75);
							NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.5f);
						}
					}
					else if (Main.player[j].ZonePeaceCandle || Main.player[j].inventory[Main.player[j].selectedItem].type == 3117)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 1.3);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 0.7f);
					}
					if (Main.player[j].ZoneWaterCandle && (double)(Main.player[j].position.Y / 16f) < Main.worldSurface * 0.34999999403953552)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.5);
					}
					if ((double)NPC.spawnRate < (double)NPC.defaultSpawnRate * 0.1)
					{
						NPC.spawnRate = (int)((double)NPC.defaultSpawnRate * 0.1);
					}
					if (NPC.maxSpawns > NPC.defaultMaxSpawns * 3)
					{
						NPC.maxSpawns = NPC.defaultMaxSpawns * 3;
					}
					if ((Main.pumpkinMoon || Main.snowMoon) && (double)Main.player[j].position.Y < Main.worldSurface * 16.0)
					{
						NPC.maxSpawns = (int)((double)NPC.defaultMaxSpawns * (2.0 + 0.3 * (double)num4));
						NPC.spawnRate = 20;
					}
					if (flag4)
					{
						NPC.maxSpawns = (int)((double)NPC.defaultMaxSpawns * (2.0 + 0.3 * (double)num4));
						NPC.spawnRate = 20;
					}
					if (Main.player[j].ZoneDungeon && !NPC.downedBoss3)
					{
						NPC.spawnRate = 10;
					}
					if (!flag4 && ((!Main.bloodMoon && !Main.pumpkinMoon && !Main.snowMoon) || Main.dayTime) && (!Main.eclipse || !Main.dayTime) && !Main.player[j].ZoneDungeon && !Main.player[j].ZoneCorrupt && !Main.player[j].ZoneCrimson && !Main.player[j].ZoneMeteor)
					{
						if (Main.player[j].Center.Y / 16f > (float)(Main.maxTilesY - 200))
						{
							if (Main.player[j].townNPCs == 1f)
							{
								if (Main.rand.Next(2) == 0)
								{
									flag3 = true;
								}
								if (Main.rand.Next(10) == 0)
								{
									flag10 = true;
									NPC.maxSpawns = (int)((double)((float)NPC.maxSpawns) * 0.5);
								}
								else
								{
									NPC.spawnRate = (int)((double)((float)NPC.spawnRate) * 1.25);
								}
							}
							else if (Main.player[j].townNPCs == 2f)
							{
								if (Main.rand.Next(4) != 0)
								{
									flag3 = true;
								}
								if (Main.rand.Next(5) == 0)
								{
									flag10 = true;
									NPC.maxSpawns = (int)((double)((float)NPC.maxSpawns) * 0.5);
								}
								else
								{
									NPC.spawnRate = (int)((double)((float)NPC.spawnRate) * 1.5);
								}
							}
							else if (Main.player[j].townNPCs >= 3f)
							{
								if (Main.rand.Next(10) != 0)
								{
									flag3 = true;
								}
								if (Main.rand.Next(3) == 0)
								{
									flag10 = true;
									NPC.maxSpawns = (int)((double)((float)NPC.maxSpawns) * 0.5);
								}
								else
								{
									NPC.spawnRate = (int)((float)NPC.spawnRate * 2f);
								}
							}
						}
						else if (Main.player[j].townNPCs == 1f)
						{
							flag3 = true;
							if (Main.rand.Next(3) == 1)
							{
								flag10 = true;
								NPC.maxSpawns = (int)((double)((float)NPC.maxSpawns) * 0.6);
							}
							else
							{
								NPC.spawnRate = (int)((float)NPC.spawnRate * 2f);
							}
						}
						else if (Main.player[j].townNPCs == 2f)
						{
							flag3 = true;
							if (Main.rand.Next(3) != 0)
							{
								flag10 = true;
								NPC.maxSpawns = (int)((double)((float)NPC.maxSpawns) * 0.6);
							}
							else
							{
								NPC.spawnRate = (int)((float)NPC.spawnRate * 3f);
							}
						}
						else if (Main.player[j].townNPCs >= 3f)
						{
							flag3 = true;
							//patch file: flag3, flag10
							if (!Main.expertMode || Main.rand.Next(30) != 0)
							{
								flag10 = true;
							}
							NPC.maxSpawns = (int)((double)((float)NPC.maxSpawns) * 0.6);
						}
					}
					NPCLoader.EditSpawnRate(Main.player[j], ref NPC.spawnRate, ref NPC.maxSpawns);
					int num6 = (int)(Main.player[j].position.X + (float)(Main.player[j].width / 2)) / 16;
					int num7 = (int)(Main.player[j].position.Y + (float)(Main.player[j].height / 2)) / 16;
					if (Main.wallHouse[(int)Main.tile[num6, num7].wall])
					{
						flag3 = true;
					}
					if (Main.tile[num6, num7].wall == 87)
					{
						//patch file: flag2
						flag2 = true;
					}
					bool flag14 = false;
					if (Main.player[j].active && !Main.player[j].dead && Main.player[j].activeNPCs < (float)NPC.maxSpawns && Main.rand.Next(NPC.spawnRate) == 0)
					{
						NPC.spawnRangeX = (int)((double)(NPC.sWidth / 16) * 0.7);
						NPC.spawnRangeY = (int)((double)(NPC.sHeight / 16) * 0.7);
						NPC.safeRangeX = (int)((double)(NPC.sWidth / 16) * 0.52);
						NPC.safeRangeY = (int)((double)(NPC.sHeight / 16) * 0.52);
						if (Main.player[j].inventory[Main.player[j].selectedItem].type == 1254 || Main.player[j].inventory[Main.player[j].selectedItem].type == 1299 || Main.player[j].scope)
						{
							float num8 = 1.5f;
							if (Main.player[j].inventory[Main.player[j].selectedItem].type == 1254 && Main.player[j].scope)
							{
								num8 = 1.25f;
							}
							else if (Main.player[j].inventory[Main.player[j].selectedItem].type == 1254)
							{
								num8 = 1.5f;
							}
							else if (Main.player[j].inventory[Main.player[j].selectedItem].type == 1299)
							{
								num8 = 1.5f;
							}
							else if (Main.player[j].scope)
							{
								num8 = 2f;
							}
							NPC.spawnRangeX += (int)((double)(NPC.sWidth / 16) * 0.5 / (double)num8);
							NPC.spawnRangeY += (int)((double)(NPC.sHeight / 16) * 0.5 / (double)num8);
							NPC.safeRangeX += (int)((double)(NPC.sWidth / 16) * 0.5 / (double)num8);
							NPC.safeRangeY += (int)((double)(NPC.sHeight / 16) * 0.5 / (double)num8);
						}
						NPCLoader.EditSpawnRange(Main.player[j], ref NPC.spawnRangeX, ref NPC.spawnRangeY,
							ref NPC.safeRangeX, ref NPC.safeRangeY);
						int num9 = (int)(Main.player[j].position.X / 16f) - NPC.spawnRangeX;
						int num10 = (int)(Main.player[j].position.X / 16f) + NPC.spawnRangeX;
						int num11 = (int)(Main.player[j].position.Y / 16f) - NPC.spawnRangeY;
						int num12 = (int)(Main.player[j].position.Y / 16f) + NPC.spawnRangeY;
						int num13 = (int)(Main.player[j].position.X / 16f) - NPC.safeRangeX;
						int num14 = (int)(Main.player[j].position.X / 16f) + NPC.safeRangeX;
						int num15 = (int)(Main.player[j].position.Y / 16f) - NPC.safeRangeY;
						int num16 = (int)(Main.player[j].position.Y / 16f) + NPC.safeRangeY;
						if (num9 < 0)
						{
							num9 = 0;
						}
						if (num10 > Main.maxTilesX)
						{
							num10 = Main.maxTilesX;
						}
						if (num11 < 0)
						{
							num11 = 0;
						}
						if (num12 > Main.maxTilesY)
						{
							num12 = Main.maxTilesY;
						}
						int l = 0;
						while (l < 50)
						{
							int num17 = Main.rand.Next(num9, num10);
							int num18 = Main.rand.Next(num11, num12);
							if (Main.tile[num17, num18].nactive() && Main.tileSolid[(int)Main.tile[num17, num18].type])
							{
								goto IL_1504;
							}
							if (!Main.wallHouse[(int)Main.tile[num17, num18].wall])
							{
								if (!flag4 && (double)num18 < Main.worldSurface * 0.34999999403953552 && !flag10 && ((double)num17 < (double)Main.maxTilesX * 0.45 || (double)num17 > (double)Main.maxTilesX * 0.55 || Main.hardMode))
								{
									num3 = (int)Main.tile[num17, num18].type;
									num = num17;
									num2 = num18;
									flag13 = true;
									flag = true;
								}
								else if (!flag4 && (double)num18 < Main.worldSurface * 0.44999998807907104 && !flag10 && Main.hardMode && Main.rand.Next(10) == 0)
								{
									num3 = (int)Main.tile[num17, num18].type;
									num = num17;
									num2 = num18;
									flag13 = true;
									flag = true;
								}
								else
								{
									int m = num18;
									while (m < Main.maxTilesY)
									{
										if (Main.tile[num17, m].nactive() && Main.tileSolid[(int)Main.tile[num17, m].type])
										{
											if (num17 < num13 || num17 > num14 || m < num15 || m > num16)
											{
												num3 = (int)Main.tile[num17, m].type;
												num = num17;
												num2 = m;
												flag13 = true;
												break;
											}
											break;
										}
										else
										{
											m++;
										}
									}
								}
								if (!flag13)
								{
									goto IL_1504;
								}
								int num19 = num - NPC.spawnSpaceX / 2;
								int num20 = num + NPC.spawnSpaceX / 2;
								int num21 = num2 - NPC.spawnSpaceY;
								int num22 = num2;
								if (num19 < 0)
								{
									flag13 = false;
								}
								if (num20 > Main.maxTilesX)
								{
									flag13 = false;
								}
								if (num21 < 0)
								{
									flag13 = false;
								}
								if (num22 > Main.maxTilesY)
								{
									flag13 = false;
								}
								if (flag13)
								{
									for (int n = num19; n < num20; n++)
									{
										for (int num23 = num21; num23 < num22; num23++)
										{
											if (Main.tile[n, num23].nactive() && Main.tileSolid[(int)Main.tile[n, num23].type])
											{
												flag13 = false;
												break;
											}
											if (Main.tile[n, num23].lava())
											{
												flag13 = false;
												break;
											}
										}
									}
								}
								if (num >= num13 && num <= num14)
								{
									//patch file(?): flag14
									flag14 = true;
									goto IL_1504;
								}
								goto IL_1504;
							}
							IL_150A:
							l++;
							continue;
							IL_1504:
							if (!flag13 && !flag13)
							{
								goto IL_150A;
							}
							break;
						}
					}
					if (flag13)
					{
						Rectangle rectangle = new Rectangle(num * 16, num2 * 16, 16, 16);
						for (int num24 = 0; num24 < 255; num24++)
						{
							if (Main.player[num24].active)
							{
								Rectangle rectangle2 = new Rectangle((int)(Main.player[num24].position.X + (float)(Main.player[num24].width / 2) - (float)(NPC.sWidth / 2) - (float)NPC.safeRangeX), (int)(Main.player[num24].position.Y + (float)(Main.player[num24].height / 2) - (float)(NPC.sHeight / 2) - (float)NPC.safeRangeY), NPC.sWidth + NPC.safeRangeX * 2, NPC.sHeight + NPC.safeRangeY * 2);
								if (rectangle.Intersects(rectangle2))
								{
									flag13 = false;
								}
							}
						}
					}
					NPCSpawnInfo spawnInfo = new NPCSpawnInfo();
					if (flag13)
					{
						if (Main.player[j].ZoneDungeon && (!Main.tileDungeon[(int)Main.tile[num, num2].type] || Main.tile[num, num2 - 1].wall == 0))
						{
							flag13 = false;
						}
						if (Main.tile[num, num2 - 1].liquid > 0 && Main.tile[num, num2 - 2].liquid > 0 && !Main.tile[num, num2 - 1].lava())
						{
							//patch file: flag6
							if (Main.tile[num, num2 - 1].honey())
							{
								flag6 = true;
							}
							//patch file: flag5
							else
							{
								flag5 = true;
							}
						}
						int num25 = (int)Main.player[j].Center.X / 16;
						int num26 = (int)(Main.player[j].Bottom.Y + 8f) / 16;
						spawnInfo.playerFloorX = num25;
						spawnInfo.playerFloorY = num26;
						if (Main.tile[num, num2].type == 367)
						{
							flag8 = true;
						}
						else if (Main.tile[num, num2].type == 368)
						{
							//patch file: flag7
							flag7 = true;
						}
						else if (Main.tile[num25, num26].type == 367)
						{
							flag8 = true;
						}
						else if (Main.tile[num25, num26].type == 368)
						{
							flag7 = true;
						}
						else
						{
							int num27 = Main.rand.Next(20, 31);
							int num28 = Main.rand.Next(1, 4);
							if (num - num27 < 0)
							{
								num27 = num;
							}
							if (num2 - num27 < 0)
							{
								num27 = num2;
							}
							if (num + num27 >= Main.maxTilesX)
							{
								num27 = Main.maxTilesX - num - 1;
							}
							if (num2 + num27 >= Main.maxTilesY)
							{
								num27 = Main.maxTilesY - num2 - 1;
							}
							for (int num29 = num - num27; num29 <= num + num27; num29 += num28)
							{
								int num30 = Main.rand.Next(1, 4);
								for (int num31 = num2 - num27; num31 <= num2 + num27; num31 += num30)
								{
									if (Main.tile[num29, num31].type == 367)
									{
										flag8 = true;
									}
									if (Main.tile[num29, num31].type == 368)
									{
										flag7 = true;
									}
								}
							}
							num27 = Main.rand.Next(30, 61);
							num28 = Main.rand.Next(3, 7);
							if (num25 - num27 < 0)
							{
								num27 = num25;
							}
							if (num26 - num27 < 0)
							{
								num27 = num26;
							}
							if (num25 + num27 >= Main.maxTilesX)
							{
								num27 = Main.maxTilesX - num25 - 2;
							}
							if (num26 + num27 >= Main.maxTilesY)
							{
								num27 = Main.maxTilesY - num26 - 2;
							}
							for (int num32 = num25 - num27; num32 <= num25 + num27; num32 += num28)
							{
								int num33 = Main.rand.Next(3, 7);
								for (int num34 = num26 - num27; num34 <= num26 + num27; num34 += num33)
								{
									if (Main.tile[num32, num34].type == 367)
									{
										flag8 = true;
									}
									if (Main.tile[num32, num34].type == 368)
									{
										flag7 = true;
									}
								}
							}
						}
					}
					if (flag6)
					{
						flag13 = false;
					}
					if (flag13)
					{
						if ((double)num2 > Main.rockLayer && num2 < Main.maxTilesY - 200 && !Main.player[j].ZoneDungeon && !flag4)
						{
							if (Main.rand.Next(3) == 0)
							{
								int num35 = Main.rand.Next(5, 15);
								if (num - num35 >= 0 && num + num35 < Main.maxTilesX)
								{
									for (int num36 = num - num35; num36 < num + num35; num36++)
									{
										for (int num37 = num2 - num35; num37 < num2 + num35; num37++)
										{
											if (Main.tile[num36, num37].wall == 62)
											{
												//patch file: flag9
												flag9 = true;
											}
										}
									}
								}
							}
							else
							{
								int num38 = (int)Main.player[j].position.X / 16;
								int num39 = (int)Main.player[j].position.Y / 16;
								if (Main.tile[num38, num39].wall == 62)
								{
									flag9 = true;
								}
							}
						}
						if ((double)num2 < Main.rockLayer && num2 > 200 && !Main.player[j].ZoneDungeon && !flag4)
						{
							if (Main.rand.Next(3) == 0)
							{
								int num40 = Main.rand.Next(5, 15);
								if (num - num40 >= 0 && num + num40 < Main.maxTilesX)
								{
									for (int num41 = num - num40; num41 < num + num40; num41++)
									{
										for (int num42 = num2 - num40; num42 < num2 + num40; num42++)
										{
											if (WallID.Sets.Conversion.Sandstone[(int)Main.tile[num41, num42].wall] || WallID.Sets.Conversion.HardenedSand[(int)Main.tile[num41, num42].wall])
											{
												//patch file: flag11
												flag11 = true;
											}
										}
									}
								}
							}
							else
							{
								int num43 = (int)Main.player[j].position.X / 16;
								int num44 = (int)Main.player[j].position.Y / 16;
								if (WallID.Sets.Conversion.Sandstone[(int)Main.tile[num43, num44].wall] || WallID.Sets.Conversion.HardenedSand[(int)Main.tile[num43, num44].wall])
								{
									flag11 = true;
								}
							}
						}
						spawnInfo.spawnTileX = num;
						spawnInfo.spawnTileY = num2;
						spawnInfo.player = Main.player[j];
						spawnInfo.sky = flag;
						spawnInfo.lihzahrd = flag2;
						spawnInfo.playerSafe = flag3;
						spawnInfo.invasion = flag4;
						spawnInfo.water = flag5;
						spawnInfo.granite = flag7;
						spawnInfo.marble = flag8;
						spawnInfo.spiderCave = flag9;
						spawnInfo.playerInTown = flag10;
						spawnInfo.desertCave = flag11;
						spawnInfo.planteraDefeated = flag12;
						spawnInfo.safeRangeX = flag14;
						int num45 = (int)Main.tile[num, num2].type;
						int num46 = 200;
						int? spawnChoice = NPCLoader.ChooseSpawn(spawnInfo);
						if (!spawnChoice.HasValue)
						{
							return;
						}
						int spawn = spawnChoice.Value;
						if (spawn != 0)
						{
							goto endVanillaSpawn;
						}
						if (Main.player[j].ZoneTowerNebula)
						{
							bool flag15 = true;
							int num47 = 0;
							while (flag15)
							{
								num47 = Utils.SelectRandom<int>(Main.rand, new int[]
									{
										424,
										424,
										424,
										423,
										423,
										423,
										421,
										421,
										421,
										421,
										421,
										420
									});
								flag15 = false;
								if (num47 == 424 && NPC.CountNPCS(num47) >= 2)
								{
									flag15 = true;
								}
								if (num47 == 423 && NPC.CountNPCS(num47) >= 3)
								{
									flag15 = true;
								}
								if (num47 == 420 && NPC.CountNPCS(num47) >= 2)
								{
									flag15 = true;
								}
							}
							if (num47 != 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, num47, 1, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.player[j].ZoneTowerVortex)
						{
							bool flag16 = true;
							int num48 = 0;
							while (flag16)
							{
								num48 = Utils.SelectRandom<int>(Main.rand, new int[]
									{
										429,
										429,
										429,
										429,
										427,
										427,
										425,
										425,
										426
									});
								flag16 = false;
								if (num48 == 425 && NPC.CountNPCS(num48) >= 3)
								{
									flag16 = true;
								}
								if (num48 == 426 && NPC.CountNPCS(num48) >= 3)
								{
									flag16 = true;
								}
								if (num48 == 429 && NPC.CountNPCS(num48) >= 4)
								{
									flag16 = true;
								}
							}
							if (num48 != 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, num48, 1, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.player[j].ZoneTowerStardust)
						{
							int num49 = Utils.SelectRandom<int>(Main.rand, new int[]
								{
									411,
									411,
									411,
									409,
									409,
									407,
									402,
									405
								});
							if (num49 != 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, num49, 1, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.player[j].ZoneTowerSolar)
						{
							bool flag17 = true;
							int num50 = 0;
							while (flag17)
							{
								num50 = Utils.SelectRandom<int>(Main.rand, new int[]
									{
										518,
										419,
										418,
										412,
										417,
										416,
										415
									});
								flag17 = false;
								if (num50 == 415 && NPC.CountNPCS(num50) >= 2)
								{
									flag17 = true;
								}
								if (num50 == 416 && NPC.CountNPCS(num50) >= 1)
								{
									flag17 = true;
								}
								if (num50 == 518 && NPC.CountNPCS(num50) >= 2)
								{
									flag17 = true;
								}
								if (num50 == 412 && NPC.CountNPCS(num50) >= 1)
								{
									flag17 = true;
								}
							}
							if (num50 != 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, num50, 1, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (flag)
						{
							int maxValue = 8;
							int maxValue2 = 30;
							bool flag18 = (float)Math.Abs(num - Main.maxTilesX / 2) / (float)(Main.maxTilesX / 2) > 0.33f && (Main.wallLight[(int)Main.tile[num6, num7].wall] || Main.tile[num6, num7].wall == 73);
							if (flag18)
							{
								bool flag19 = NPC.AnyDanger();
								if (flag19)
								{
									flag18 = false;
								}
							}
							if (Main.player[j].ZoneWaterCandle)
							{
								maxValue = 3;
								maxValue2 = 10;
							}
							if (flag4 && Main.invasionType == 4)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 388, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag18 && Main.hardMode && NPC.downedGolemBoss && ((!NPC.downedMartians && Main.rand.Next(maxValue) == 0) || Main.rand.Next(maxValue2) == 0) && !NPC.AnyNPCs(399))
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 399, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag18 && Main.hardMode && NPC.downedGolemBoss && ((!NPC.downedMartians && Main.rand.Next(maxValue) == 0) || Main.rand.Next(maxValue2) == 0) && !NPC.AnyNPCs(399) && (Main.player[j].inventory[Main.player[j].selectedItem].type == 148 || Main.player[j].ZoneWaterCandle))
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 399, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && !NPC.AnyNPCs(87) && !flag3 && Main.rand.Next(10) == 0)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 87, 1, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && !NPC.AnyNPCs(87) && !flag3 && Main.rand.Next(10) == 0 && (Main.player[j].inventory[Main.player[j].selectedItem].type == 148 || Main.player[j].ZoneWaterCandle))
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 87, 1, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 48, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (flag4)
						{
							if (Main.invasionType == 1)
							{
								if (Main.hardMode && !NPC.AnyNPCs(471) && Main.rand.Next(30) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 471, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(9) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 29, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(5) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 26, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 111, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 27, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 28, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (Main.invasionType == 2)
							{
								if (Main.rand.Next(7) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 145, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 143, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 144, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (Main.invasionType == 3)
							{
								if (Main.invasionSize < Main.invasionSizeStart / 2 && Main.rand.Next(20) == 0 && !NPC.AnyNPCs(491) && !Collision.SolidTiles(num - 20, num + 20, num2 - 40, num2 - 10))
								{
									NPC.NewNPC(num * 16 + 8, (num2 - 10) * 16, 491, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(30) == 0 && !NPC.AnyNPCs(216))
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 216, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(11) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 215, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(9) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 252, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(7) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 214, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 213, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 212, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (Main.invasionType == 4)
							{
								int num51 = 0;
								int num52 = Main.rand.Next(7);
								if (Main.invasionSize <= 100 && Main.rand.Next(10) == 0 && !NPC.AnyNPCs(395))
								{
									num51 = 395;
								}
								else if (num52 >= 6)
								{
									if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(395))
									{
										num51 = 395;
									}
									else
									{
										int num53 = Main.rand.Next(2);
										if (num53 == 0)
										{
											num51 = 390;
										}
										if (num53 == 1)
										{
											num51 = 386;
										}
									}
								}
								else if (num52 >= 4)
								{
									int num54 = Main.rand.Next(5);
									if (num54 < 2)
									{
										num51 = 382;
									}
									else if (num54 < 4)
									{
										num51 = 381;
									}
									else
									{
										num51 = 388;
									}
								}
								else
								{
									int num55 = Main.rand.Next(4);
									if (num55 == 3)
									{
										if (!NPC.AnyNPCs(520))
										{
											num51 = 520;
										}
										else
										{
											num55 = Main.rand.Next(3);
										}
									}
									if (num55 == 0)
									{
										num51 = 385;
									}
									if (num55 == 1)
									{
										num51 = 389;
									}
									if (num55 == 2)
									{
										num51 = 383;
									}
								}
								if (num51 != 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, num51, 1, 0f, 0f, 0f, 0f, 255);
								}
							}
						}
						else if (Main.tile[num, num2].wall == 62 || flag9)
						{
							if (Main.tile[num, num2].wall == 62 && Main.rand.Next(8) == 0 && !flag5 && (double)num2 >= Main.rockLayer && num2 < Main.maxTilesY - 210 && !NPC.savedStylist && !NPC.AnyNPCs(354))
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 354, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 163, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 164, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if ((WallID.Sets.Conversion.HardenedSand[(int)Main.tile[num, num2].wall] || WallID.Sets.Conversion.Sandstone[(int)Main.tile[num, num2].wall] || flag11) && WorldGen.checkUnderground(num, num2))
						{
							if (Main.hardMode && Main.rand.Next(33) == 0 && !flag3)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 510, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(22) == 0 && !flag3)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 513, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && Main.rand.Next(5) != 0)
							{
								List<int> list = new List<int>();
								if (Main.player[j].ZoneCorrupt)
								{
									list.Add(525);
									list.Add(525);
								}
								if (Main.player[j].ZoneCrimson)
								{
									list.Add(526);
									list.Add(526);
								}
								if (Main.player[j].ZoneHoly)
								{
									list.Add(527);
									list.Add(527);
								}
								if (list.Count == 0)
								{
									list.Add(524);
									list.Add(524);
								}
								if (Main.player[j].ZoneCorrupt || Main.player[j].ZoneCrimson)
								{
									list.Add(533);
									list.Add(529);
								}
								else
								{
									list.Add(530);
									list.Add(528);
								}
								list.Add(532);
								int num56 = Utils.SelectRandom<int>(Main.rand, list.ToArray());
								NPC.NewNPC(num * 16 + 8, num2 * 16, num56, 0, 0f, 0f, 0f, 0f, 255);
								list.Clear();
							}
							else
							{
								int num57 = Utils.SelectRandom<int>(Main.rand, new int[]
									{
										69,
										508,
										508,
										508,
										509
									});
								NPC.NewNPC(num * 16 + 8, num2 * 16, num57, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.hardMode && flag5 && Main.player[j].ZoneJungle && Main.rand.Next(3) != 0)
						{
							NPC.NewNPC(num * 16 + 8, num2 * 16, 157, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && flag5 && Main.player[j].ZoneCrimson && Main.rand.Next(3) != 0)
						{
							NPC.NewNPC(num * 16 + 8, num2 * 16, 242, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && flag5 && Main.player[j].ZoneCrimson && Main.rand.Next(3) != 0)
						{
							NPC.NewNPC(num * 16 + 8, num2 * 16, 241, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (flag5 && (num < 250 || num > Main.maxTilesX - 250) && Main.tileSand[num45] && (double)num2 < Main.rockLayer)
						{
							bool flag20 = false;
							if (!NPC.savedAngler && !NPC.AnyNPCs(376))
							{
								int num58 = -1;
								for (int num59 = num2 - 1; num59 > num2 - 50; num59--)
								{
									if (Main.tile[num, num59].liquid == 0 && !WorldGen.SolidTile(num, num59) && !WorldGen.SolidTile(num, num59 + 1) && !WorldGen.SolidTile(num, num59 + 2))
									{
										num58 = num59 + 2;
										break;
									}
								}
								if (num58 > num2)
								{
									num58 = num2;
								}
								if (num58 > 0 && !flag14)
								{
									NPC.NewNPC(num * 16 + 8, num58 * 16, 376, 0, 0f, 0f, 0f, 0f, 255);
									flag20 = true;
								}
							}
							if (!flag20)
							{
								if (Main.rand.Next(60) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 220, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(25) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 221, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(8) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 65, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 67, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 64, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
						}
						else if (!flag5 && !NPC.savedAngler && !NPC.AnyNPCs(376) && (num < 340 || num > Main.maxTilesX - 340) && Main.tileSand[num45] && (double)num2 < Main.worldSurface)
						{
							NPC.NewNPC(num * 16 + 8, num2 * 16, 376, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (flag5 && (((double)num2 > Main.rockLayer && Main.rand.Next(2) == 0) || num45 == 60))
						{
							if (Main.hardMode && Main.rand.Next(3) > 0)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 102, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 58, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (flag5 && (double)num2 > Main.worldSurface && Main.rand.Next(3) == 0)
						{
							if (Main.hardMode)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 103, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 63, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (flag5 && Main.rand.Next(4) == 0)
						{
							if (Main.player[j].ZoneCorrupt)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 57, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if ((double)num2 < Main.worldSurface && num2 > 50 && Main.rand.Next(3) != 0 && Main.dayTime)
							{
								int num60 = -1;
								for (int num61 = num2 - 1; num61 > num2 - 50; num61--)
								{
									if (Main.tile[num, num61].liquid == 0 && !WorldGen.SolidTile(num, num61) && !WorldGen.SolidTile(num, num61 + 1) && !WorldGen.SolidTile(num, num61 + 2))
									{
										num60 = num61 + 2;
										break;
									}
								}
								if (num60 > num2)
								{
									num60 = num2;
								}
								if (num60 > 0 && !flag14)
								{
									if (Main.rand.Next(2) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num60 * 16, 362, 0, 0f, 0f, 0f, 0f, 255);
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num60 * 16, 364, 0, 0f, 0f, 0f, 0f, 255);
									}
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 55, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 55, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (NPC.downedGoblins && Main.rand.Next(20) == 0 && !flag5 && (double)num2 >= Main.rockLayer && num2 < Main.maxTilesY - 210 && !NPC.savedGoblin && !NPC.AnyNPCs(105))
						{
							NPC.NewNPC(num * 16 + 8, num2 * 16, 105, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && Main.rand.Next(20) == 0 && !flag5 && (double)num2 >= Main.rockLayer && num2 < Main.maxTilesY - 210 && !NPC.savedWizard && !NPC.AnyNPCs(106))
						{
							NPC.NewNPC(num * 16 + 8, num2 * 16, 106, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (flag10)
						{
							if (flag5)
							{
								if ((double)num2 < Main.worldSurface && num2 > 50 && Main.rand.Next(3) != 0 && Main.dayTime)
								{
									int num62 = -1;
									for (int num63 = num2 - 1; num63 > num2 - 50; num63--)
									{
										if (Main.tile[num, num63].liquid == 0 && !WorldGen.SolidTile(num, num63) && !WorldGen.SolidTile(num, num63 + 1) && !WorldGen.SolidTile(num, num63 + 2))
										{
											num62 = num63 + 2;
											break;
										}
									}
									if (num62 > num2)
									{
										num62 = num2;
									}
									if (num62 > 0 && !flag14)
									{
										if (Main.rand.Next(2) == 0)
										{
											NPC.NewNPC(num * 16 + 8, num62 * 16, 362, 0, 0f, 0f, 0f, 0f, 255);
										}
										else
										{
											NPC.NewNPC(num * 16 + 8, num62 * 16, 364, 0, 0f, 0f, 0f, 0f, 255);
										}
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 55, 0, 0f, 0f, 0f, 0f, 255);
									}
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 55, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (num45 == 147 || num45 == 161)
							{
								if (Main.rand.Next(2) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 148, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 149, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (num45 == 60)
							{
								if (Main.rand.Next(NPC.goldCritterChance) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 445, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 361, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else
							{
								if (num45 != 2 && num45 != 109 && (double)num2 <= Main.worldSurface)
								{
									return;
								}
								if (Main.raining)
								{
									if (Main.rand.Next(NPC.goldCritterChance) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 448, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (Main.rand.Next(3) != 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 357, 0, 0f, 0f, 0f, 0f, 255);
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 230, 0, 0f, 0f, 0f, 0f, 255);
									}
								}
								else if (!Main.dayTime && Main.rand.Next(NPC.fireFlyFriendly) == 0 && (double)num2 <= Main.worldSurface)
								{
									int num64 = 355;
									if (num45 == 109)
									{
										num64 = 358;
									}
									NPC.NewNPC(num * 16 + 8, num2 * 16, num64, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
									{
										NPC.NewNPC(num * 16 + 8 - 16, num2 * 16, num64, 0, 0f, 0f, 0f, 0f, 255);
									}
									if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
									{
										NPC.NewNPC(num * 16 + 8 + 16, num2 * 16, num64, 0, 0f, 0f, 0f, 0f, 255);
									}
									if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16 - 16, num64, 0, 0f, 0f, 0f, 0f, 255);
									}
									if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16 + 16, num64, 0, 0f, 0f, 0f, 0f, 255);
									}
								}
								else if (Main.dayTime && Main.time < 18000.0 && Main.rand.Next(3) != 0 && (double)num2 <= Main.worldSurface)
								{
									int num65 = Main.rand.Next(4);
									if (Main.rand.Next(NPC.goldCritterChance) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 442, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (num65 == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 297, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (num65 == 1)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 298, 0, 0f, 0f, 0f, 0f, 255);
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 74, 0, 0f, 0f, 0f, 0f, 255);
									}
								}
								else if (Main.dayTime && Main.rand.Next(NPC.butterflyChance) == 0 && (double)num2 <= Main.worldSurface)
								{
									if (Main.rand.Next(NPC.goldCritterChance) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 444, 0, 0f, 0f, 0f, 0f, 255);
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 356, 0, 0f, 0f, 0f, 0f, 255);
									}
									if (Main.rand.Next(4) == 0)
									{
										NPC.NewNPC(num * 16 + 8 - 16, num2 * 16, 356, 0, 0f, 0f, 0f, 0f, 255);
									}
									if (Main.rand.Next(4) == 0)
									{
										NPC.NewNPC(num * 16 + 8 + 16, num2 * 16, 356, 0, 0f, 0f, 0f, 0f, 255);
									}
								}
								else if (Main.rand.Next(2) == 0 && (double)num2 <= Main.worldSurface)
								{
									int num66 = Main.rand.Next(4);
									if (Main.rand.Next(NPC.goldCritterChance) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 442, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (num66 == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 297, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (num66 == 1)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 298, 0, 0f, 0f, 0f, 0f, 255);
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 74, 0, 0f, 0f, 0f, 0f, 255);
									}
								}
								else if (num45 == 53)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(366, 368), 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(NPC.goldCritterChance) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 443, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(NPC.goldCritterChance) == 0 && (double)num2 <= Main.worldSurface)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 539, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.halloween && Main.rand.Next(3) != 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 303, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.xMas && Main.rand.Next(3) != 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 337, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (BirthdayParty.PartyIsUp && Main.rand.Next(3) != 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 540, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0 && (double)num2 <= Main.worldSurface)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, (int)Utils.SelectRandom<short>(Main.rand, new short[]
											{
												299,
												538
											}), 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 46, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
						}
						else if (Main.player[j].ZoneDungeon)
						{
							int num67 = 0;
							if (Main.tile[num, num2].wall == 94 || Main.tile[num, num2].wall == 96 || Main.tile[num, num2].wall == 98)
							{
								num67 = 1;
							}
							if (Main.tile[num, num2].wall == 95 || Main.tile[num, num2].wall == 97 || Main.tile[num, num2].wall == 99)
							{
								num67 = 2;
							}
							if (Main.rand.Next(7) == 0)
							{
								num67 = Main.rand.Next(3);
							}
							if (!NPC.downedBoss3)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 68, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (!NPC.savedMech && Main.rand.Next(5) == 0 && !flag5 && !NPC.AnyNPCs(123) && (double)num2 > Main.rockLayer)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 123, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag12 && Main.rand.Next(30) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 287, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag12 && num67 == 0 && Main.rand.Next(15) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 293, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag12 && num67 == 1 && Main.rand.Next(15) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 291, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag12 && num67 == 2 && Main.rand.Next(15) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 292, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag12 && !NPC.AnyNPCs(290) && num67 == 0 && Main.rand.Next(35) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 290, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag12 && (num67 == 1 || num67 == 2) && Main.rand.Next(30) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 289, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag12 && Main.rand.Next(20) == 0)
							{
								int num68 = 281;
								if (num67 == 0)
								{
									num68 += 2;
								}
								if (num67 == 2)
								{
									num68 += 4;
								}
								num68 += Main.rand.Next(2);
								if (!NPC.AnyNPCs(num68))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, num68, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (flag12 && Main.rand.Next(3) != 0)
							{
								int num69 = 269;
								if (num67 == 0)
								{
									num69 += 4;
								}
								if (num67 == 2)
								{
									num69 += 8;
								}
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, num69 + Main.rand.Next(4), 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(37) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 71, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (num67 == 1 && Main.rand.Next(4) == 0 && !NPC.NearSpikeBall(num, num2))
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 70, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (num67 == 2 && Main.rand.Next(15) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 72, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (num67 == 0 && Main.rand.Next(9) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 34, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(7) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 32, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								int num70 = Main.rand.Next(5);
								if (num70 == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 294, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num70 == 1)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 295, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num70 == 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 296, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 31, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num46].SetDefaults("Big Boned");
									}
									else if (Main.rand.Next(5) == 0)
									{
										Main.npc[num46].SetDefaults("Short Bones");
									}
								}
							}
						}
						else if (Main.player[j].ZoneMeteor)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 23, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if ((double)num2 <= Main.worldSurface && !Main.dayTime && Main.snowMoon)
						{
							if (Main.rand.Next(30) == 0 && NPC.CountNPCS(341) < 4)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 341, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (NPC.waveCount >= 20)
							{
								int num71 = Main.rand.Next(3);
								if (num71 == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 345, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num71 == 1)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount >= 19)
							{
								if (Main.rand.Next(10) == 0 && NPC.CountNPCS(345) < 4)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 345, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(346) < 5)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(344) < 7)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 343, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount >= 18)
							{
								if (Main.rand.Next(10) == 0 && NPC.CountNPCS(345) < 3)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 345, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(346) < 4)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(344) < 6)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 348, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 351, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 343, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount >= 17)
							{
								if (Main.rand.Next(10) == 0 && NPC.CountNPCS(345) < 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 345, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(346) < 3)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(344) < 5)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(4) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 347, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 351, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 343, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount >= 16)
							{
								if (Main.rand.Next(10) == 0 && NPC.CountNPCS(345) < 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 345, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(346) < 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(344) < 4)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 352, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 343, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount >= 15)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(345))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 345, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(346) < 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(344) < 3)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 347, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 343, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 14)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(345))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 345, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(346))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(344))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 343, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 13)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(345))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 345, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(346))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 352, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(6) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 343, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 342, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 347, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 12)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(345))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 345, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(344))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(8) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 343, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 342, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(338, 341), 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 11)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(345))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 345, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(6) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 352, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 342, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(338, 341), 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 10)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(346))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(344) < 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(6) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 351, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 348, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 347, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(338, 341), 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 9)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(346))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(344))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 348, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 347, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 342, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 8)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(346))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(8) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 351, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 348, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 347, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 350, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 7)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(346))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 342, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(4) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 350, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(338, 341), 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 6)
							{
								if (Main.rand.Next(10) == 0 && NPC.CountNPCS(344) < 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(4) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 347, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 348, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 350, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 5)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(344))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(4) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 350, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(8) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 348, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(338, 341), 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 4)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(344))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(4) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 350, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 342, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(338, 341), 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 3)
							{
								if (Main.rand.Next(8) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 348, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(4) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 350, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 342, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(338, 341), 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 2)
							{
								if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 350, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(338, 341), 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (Main.rand.Next(3) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 342, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(338, 341), 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if ((double)num2 <= Main.worldSurface && !Main.dayTime && Main.pumpkinMoon)
						{
							if (NPC.waveCount >= 15)
							{
								if (Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 14)
							{
								if (Main.rand.Next(5) == 0 && NPC.CountNPCS(327) < 3)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(5) == 0 && NPC.CountNPCS(325) < 3)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 315, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 13)
							{
								if (Main.rand.Next(7) == 0 && NPC.CountNPCS(327) < 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0, 0f, 0f, 0f, 0f, 255);
								}
								if (Main.rand.Next(5) == 0 && NPC.CountNPCS(325) < 3)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(5) == 0 && NPC.CountNPCS(315) < 3)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 315, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 12)
							{
								if (Main.rand.Next(7) == 0 && NPC.CountNPCS(327) < 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0, 0f, 0f, 0f, 0f, 255);
								}
								if (Main.rand.Next(7) == 0 && NPC.CountNPCS(325) < 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(7) == 0 && NPC.CountNPCS(315) < 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 315, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(7) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(5) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 11)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(327))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0, 0f, 0f, 0f, 0f, 255);
								}
								if (Main.rand.Next(7) == 0 && NPC.CountNPCS(325) < 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(315))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 315, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(7) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 10)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(327))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(325))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(315))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 315, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(8) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(5) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 9)
							{
								if (Main.rand.Next(8) == 0 && !NPC.AnyNPCs(327))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(8) == 0 && !NPC.AnyNPCs(325))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(315))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 315, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 8)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(327))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(5) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 7)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(327))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(8) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(5) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 6)
							{
								if (Main.rand.Next(7) == 0 && NPC.CountNPCS(325) < 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(6) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 5)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(325))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(8) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(5) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 4)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(325))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 3)
							{
								if (Main.rand.Next(6) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 2)
							{
								if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if ((double)num2 <= Main.worldSurface && Main.dayTime && Main.eclipse)
						{
							bool flag21 = false;
							if (NPC.downedMechBoss1 && NPC.downedMechBoss2 && NPC.downedMechBoss3)
							{
								flag21 = true;
							}
							if (flag21 && Main.rand.Next(80) == 0 && !NPC.AnyNPCs(477))
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 477, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(50) == 0 && !NPC.AnyNPCs(251))
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 251, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (NPC.downedPlantBoss && Main.rand.Next(5) == 0 && !NPC.AnyNPCs(466))
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 466, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (NPC.downedPlantBoss && Main.rand.Next(20) == 0 && !NPC.AnyNPCs(463))
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 463, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (NPC.downedPlantBoss && Main.rand.Next(20) == 0 && NPC.CountNPCS(467) < 2)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 467, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(15) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 159, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag21 && Main.rand.Next(13) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 253, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(8) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 469, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (NPC.downedPlantBoss && Main.rand.Next(7) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 468, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (NPC.downedPlantBoss && Main.rand.Next(5) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 460, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(4) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 162, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(3) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 461, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(2) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 462, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 166, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.hardMode && num3 == 70 && flag5)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 256, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (num3 == 70 && (double)num2 <= Main.worldSurface && Main.rand.Next(3) != 0)
						{
							if ((!Main.hardMode && Main.rand.Next(6) == 0) || Main.rand.Next(12) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 360, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(3) == 0)
							{
								if (Main.rand.Next(4) == 0)
								{
									if (Main.hardMode && Main.rand.Next(3) != 0)
									{
										num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 260, 0, 0f, 0f, 0f, 0f, 255);
										Main.npc[num46].ai[0] = (float)num;
										Main.npc[num46].ai[1] = (float)num2;
										Main.npc[num46].netUpdate = true;
									}
									else
									{
										num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 259, 0, 0f, 0f, 0f, 0f, 255);
										Main.npc[num46].ai[0] = (float)num;
										Main.npc[num46].ai[1] = (float)num2;
										Main.npc[num46].netUpdate = true;
									}
								}
								else if (Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 257, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 258, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (Main.rand.Next(2) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 254, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 255, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (num3 == 70 && Main.hardMode && (double)num2 >= Main.worldSurface && Main.rand.Next(3) != 0)
						{
							if (Main.hardMode && Main.rand.Next(5) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 374, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if ((!Main.hardMode && Main.rand.Next(4) == 0) || Main.rand.Next(8) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 360, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(4) == 0)
							{
								if (Main.hardMode && Main.rand.Next(3) != 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 260, 0, 0f, 0f, 0f, 0f, 255);
									Main.npc[num46].ai[0] = (float)num;
									Main.npc[num46].ai[1] = (float)num2;
									Main.npc[num46].netUpdate = true;
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 259, 0, 0f, 0f, 0f, 0f, 255);
									Main.npc[num46].ai[0] = (float)num;
									Main.npc[num46].ai[1] = (float)num2;
									Main.npc[num46].netUpdate = true;
								}
							}
							else if (Main.rand.Next(2) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 257, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 258, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.player[j].ZoneCorrupt && Main.rand.Next(65) == 0 && !flag3)
						{
							if (Main.hardMode && Main.rand.Next(4) != 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 98, 1, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 7, 1, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.hardMode && (double)num2 > Main.worldSurface && Main.rand.Next(75) == 0)
						{
							if (Main.rand.Next(2) == 0 && Main.player[j].ZoneCorrupt && !NPC.AnyNPCs(473))
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 473, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(2) == 0 && Main.player[j].ZoneCrimson && !NPC.AnyNPCs(474))
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 474, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(2) == 0 && Main.player[j].ZoneHoly && !NPC.AnyNPCs(475))
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 475, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 85, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.hardMode && Main.tile[num, num2 - 1].wall == 2 && Main.rand.Next(20) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 85, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && (double)num2 <= Main.worldSurface && !Main.dayTime && (Main.rand.Next(20) == 0 || (Main.rand.Next(5) == 0 && Main.moonPhase == 4)))
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 82, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && Main.halloween && (double)num2 <= Main.worldSurface && !Main.dayTime && Main.rand.Next(10) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 304, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (num45 == 60 && Main.rand.Next(500) == 0 && !Main.dayTime)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 52, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (num45 == 60 && (double)num2 > Main.worldSurface && Main.rand.Next(60) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 219, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if ((double)num2 > Main.worldSurface && num2 < Main.maxTilesY - 210 && !Main.player[j].ZoneSnow && !Main.player[j].ZoneCrimson && !Main.player[j].ZoneCorrupt && !Main.player[j].ZoneJungle && !Main.player[j].ZoneHoly && Main.rand.Next(8) == 0)
						{
							if (Main.rand.Next(NPC.goldCritterChance) == 0)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 448, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 357, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if ((double)num2 > Main.worldSurface && num2 < Main.maxTilesY - 210 && !Main.player[j].ZoneSnow && !Main.player[j].ZoneCrimson && !Main.player[j].ZoneCorrupt && !Main.player[j].ZoneJungle && !Main.player[j].ZoneHoly && Main.rand.Next(13) == 0)
						{
							if (Main.rand.Next(NPC.goldCritterChance) == 0)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 447, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 300, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if ((double)num2 > Main.worldSurface && (double)num2 < (Main.rockLayer + (double)Main.maxTilesY) / 2.0 && !Main.player[j].ZoneSnow && !Main.player[j].ZoneCrimson && !Main.player[j].ZoneCorrupt && !Main.player[j].ZoneHoly && Main.rand.Next(13) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 359, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if ((double)num2 < Main.worldSurface && Main.player[j].ZoneJungle && Main.rand.Next(9) == 0)
						{
							if (Main.rand.Next(NPC.goldCritterChance) == 0)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 445, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 361, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (num45 == 60 && Main.hardMode && Main.rand.Next(3) != 0)
						{
							if ((double)num2 < Main.worldSurface && !Main.dayTime && Main.rand.Next(3) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 152, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if ((double)num2 < Main.worldSurface && Main.dayTime && Main.rand.Next(4) != 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 177, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if ((double)num2 > Main.worldSurface && Main.rand.Next(100) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 205, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if ((double)num2 > Main.worldSurface && Main.rand.Next(5) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 236, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if ((double)num2 > Main.worldSurface && Main.rand.Next(4) != 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 176, 0, 0f, 0f, 0f, 0f, 255);
								if (Main.rand.Next(10) == 0)
								{
									Main.npc[num46].SetDefaults("Tiny Moss Hornet");
								}
								if (Main.rand.Next(10) == 0)
								{
									Main.npc[num46].SetDefaults("Little Moss Hornet");
								}
								if (Main.rand.Next(10) == 0)
								{
									Main.npc[num46].SetDefaults("Big Moss Hornet");
								}
								if (Main.rand.Next(10) == 0)
								{
									Main.npc[num46].SetDefaults("Giant Moss Hornet");
								}
							}
							else if (Main.rand.Next(3) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 175, 0, 0f, 0f, 0f, 0f, 255);
								Main.npc[num46].ai[0] = (float)num;
								Main.npc[num46].ai[1] = (float)num2;
								Main.npc[num46].netUpdate = true;
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 153, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (num45 == 226 && flag2)
						{
							if (Main.rand.Next(3) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 226, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 198, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (num45 == 60 && (double)num2 > (Main.worldSurface + Main.rockLayer) / 2.0)
						{
							if (Main.rand.Next(4) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 204, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(4) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 43, 0, 0f, 0f, 0f, 0f, 255);
								Main.npc[num46].ai[0] = (float)num;
								Main.npc[num46].ai[1] = (float)num2;
								Main.npc[num46].netUpdate = true;
							}
							else
							{
								int num72 = Main.rand.Next(8);
								if (num72 == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 231, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num46].SetDefaults("Little Hornet Fatty");
									}
									else if (Main.rand.Next(4) == 0)
									{
										Main.npc[num46].SetDefaults("Big Hornet Fatty");
									}
								}
								else if (num72 == 1)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 232, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num46].SetDefaults("Little Hornet Honey");
									}
									else if (Main.rand.Next(4) == 0)
									{
										Main.npc[num46].SetDefaults("Big Hornet Honey");
									}
								}
								else if (num72 == 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 233, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num46].SetDefaults("Little Hornet Leafy");
									}
									else if (Main.rand.Next(4) == 0)
									{
										Main.npc[num46].SetDefaults("Big Hornet Leafy");
									}
								}
								else if (num72 == 3)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 234, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num46].SetDefaults("Little Hornet Spikey");
									}
									else if (Main.rand.Next(4) == 0)
									{
										Main.npc[num46].SetDefaults("Big Hornet Spikey");
									}
								}
								else if (num72 == 4)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 235, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num46].SetDefaults("Little Hornet Stingy");
									}
									else if (Main.rand.Next(4) == 0)
									{
										Main.npc[num46].SetDefaults("Big Hornet Stingy");
									}
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 42, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num46].SetDefaults("Little Stinger");
									}
									else if (Main.rand.Next(4) == 0)
									{
										Main.npc[num46].SetDefaults("Big Stinger");
									}
								}
							}
						}
						else if (num45 == 60 && Main.rand.Next(4) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 51, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (num45 == 60 && Main.rand.Next(8) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 56, 0, 0f, 0f, 0f, 0f, 255);
							Main.npc[num46].ai[0] = (float)num;
							Main.npc[num46].ai[1] = (float)num2;
							Main.npc[num46].netUpdate = true;
						}
						else if (Sandstorm.Happening && Main.player[j].ZoneSandstorm && TileID.Sets.Conversion.Sand[num45] && NPC.Spawning_SandstoneCheck(num, num2))
						{
							if (!NPC.downedBoss1 && !Main.hardMode)
							{
								if (Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 546, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 508, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 61, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 69, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (Main.hardMode && Main.rand.Next(20) == 0 && !NPC.AnyNPCs(541))
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 541, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && !flag3 && Main.rand.Next(3) == 0 && NPC.CountNPCS(510) < 4)
							{
								num46 = NPC.NewNPC(num * 16 + 8, (num2 + 10) * 16, 510, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && !flag3 && Main.rand.Next(2) == 0)
							{
								int num73 = 542;
								if (TileID.Sets.Corrupt[num45])
								{
									num73 = 543;
								}
								if (TileID.Sets.Crimson[num45])
								{
									num73 = 544;
								}
								if (TileID.Sets.Hallow[num45])
								{
									num73 = 545;
								}
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, num73, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && num45 == 53 && Main.rand.Next(3) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 78, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && (num45 == 112 || num45 == 234) && Main.rand.Next(3) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 79, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && num45 == 116 && Main.rand.Next(3) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 80, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(2) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 546, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(2) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 508, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 509, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.hardMode && num45 == 53 && Main.rand.Next(3) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 78, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && (num45 == 112 || num45 == 234) && Main.rand.Next(2) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 79, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && num45 == 116 && Main.rand.Next(2) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 80, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && !flag5 && (double)num2 < Main.rockLayer && (num45 == 116 || num45 == 117 || num45 == 109 || num45 == 164))
						{
							if (!Main.dayTime && Main.rand.Next(2) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 122, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(10) == 0 || (Main.player[j].ZoneWaterCandle && Main.rand.Next(10) == 0))
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 86, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 75, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (!flag3 && Main.hardMode && Main.rand.Next(50) == 0 && !flag5 && (double)num2 >= Main.rockLayer && (num45 == 116 || num45 == 117 || num45 == 109 || num45 == 164))
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 84, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if ((num45 == 204 && Main.player[j].ZoneCrimson) || num45 == 199 || num45 == 200 || num45 == 203 || num45 == 234)
						{
							if (Main.hardMode && (double)num2 >= Main.rockLayer && Main.rand.Next(5) == 0 && !flag3)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 182, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && (double)num2 >= Main.rockLayer && Main.rand.Next(2) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 268, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && Main.rand.Next(3) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 183, 0, 0f, 0f, 0f, 0f, 255);
								if (Main.rand.Next(3) == 0)
								{
									Main.npc[num46].SetDefaults("Little Crimslime");
								}
								else if (Main.rand.Next(3) == 0)
								{
									Main.npc[num46].SetDefaults("Big Crimslime");
								}
							}
							else if (Main.hardMode && (double)num2 >= Main.rockLayer && Main.rand.Next(40) == 0 && !flag3)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 179, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && (Main.rand.Next(2) == 0 || (double)num2 > Main.worldSurface))
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 174, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if ((Main.tile[num, num2].wall > 0 && Main.rand.Next(4) != 0) || Main.rand.Next(8) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 239, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(2) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 181, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 173, 0, 0f, 0f, 0f, 0f, 255);
								if (Main.rand.Next(3) == 0)
								{
									Main.npc[num46].SetDefaults("Little Crimera");
								}
								else if (Main.rand.Next(3) == 0)
								{
									Main.npc[num46].SetDefaults("Big Crimera");
								}
							}
						}
						else if ((num45 == 22 && Main.player[j].ZoneCorrupt) || num45 == 23 || num45 == 25 || num45 == 112 || num45 == 163)
						{
							if (Main.hardMode && (double)num2 >= Main.rockLayer && Main.rand.Next(3) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 101, 0, 0f, 0f, 0f, 0f, 255);
								Main.npc[num46].ai[0] = (float)num;
								Main.npc[num46].ai[1] = (float)num2;
								Main.npc[num46].netUpdate = true;
							}
							else if (Main.hardMode && Main.rand.Next(3) == 0)
							{
								if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 121, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 81, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (Main.hardMode && (double)num2 >= Main.rockLayer && Main.rand.Next(40) == 0 && !flag3)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 83, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && (Main.rand.Next(2) == 0 || (double)num2 > Main.rockLayer))
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 94, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 6, 0, 0f, 0f, 0f, 0f, 255);
								if (Main.rand.Next(3) == 0)
								{
									Main.npc[num46].SetDefaults("Little Eater");
								}
								else if (Main.rand.Next(3) == 0)
								{
									Main.npc[num46].SetDefaults("Big Eater");
								}
							}
						}
						else if ((double)num2 <= Main.worldSurface)
						{
							bool flag22 = (float)Math.Abs(num - Main.maxTilesX / 2) / (float)(Main.maxTilesX / 2) > 0.33f;
							if (flag22)
							{
								bool flag23 = NPC.AnyDanger();
								if (flag23)
								{
									flag22 = false;
								}
							}
							if (Main.player[j].ZoneSnow && Main.hardMode && Main.cloudAlpha > 0f && !NPC.AnyNPCs(243) && Main.rand.Next(20) == 0)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 243, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.player[j].ZoneHoly && Main.hardMode && Main.cloudAlpha > 0f && !NPC.AnyNPCs(244) && Main.rand.Next(20) == 0)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 244, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (!Main.player[j].ZoneSnow && Main.hardMode && Main.cloudAlpha > 0f && NPC.CountNPCS(250) < 2 && Main.rand.Next(10) == 0)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 250, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag22 && Main.hardMode && NPC.downedGolemBoss && ((!NPC.downedMartians && Main.rand.Next(100) == 0) || Main.rand.Next(400) == 0) && !NPC.AnyNPCs(399))
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 399, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.dayTime)
							{
								int num74 = Math.Abs(num - Main.spawnTileX);
								if (num74 < Main.maxTilesX / 3 && Main.rand.Next(15) == 0 && (num45 == 2 || num45 == 109 || num45 == 147 || num45 == 161))
								{
									if (num45 == 147 || num45 == 161)
									{
										if (Main.rand.Next(2) == 0)
										{
											NPC.NewNPC(num * 16 + 8, num2 * 16, 148, 0, 0f, 0f, 0f, 0f, 255);
										}
										else
										{
											NPC.NewNPC(num * 16 + 8, num2 * 16, 149, 0, 0f, 0f, 0f, 0f, 255);
										}
									}
									else if (Main.dayTime && Main.rand.Next(NPC.butterflyChance) == 0 && (double)num2 <= Main.worldSurface)
									{
										if (Main.rand.Next(NPC.goldCritterChance) == 0)
										{
											NPC.NewNPC(num * 16 + 8, num2 * 16, 444, 0, 0f, 0f, 0f, 0f, 255);
										}
										else
										{
											NPC.NewNPC(num * 16 + 8, num2 * 16, 356, 0, 0f, 0f, 0f, 0f, 255);
										}
										if (Main.rand.Next(4) == 0)
										{
											NPC.NewNPC(num * 16 + 8 - 16, num2 * 16, 356, 0, 0f, 0f, 0f, 0f, 255);
										}
										if (Main.rand.Next(4) == 0)
										{
											NPC.NewNPC(num * 16 + 8 + 16, num2 * 16, 356, 0, 0f, 0f, 0f, 0f, 255);
										}
									}
									else if (Main.rand.Next(NPC.goldCritterChance) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 443, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (Main.rand.Next(NPC.goldCritterChance) == 0 && (double)num2 <= Main.worldSurface)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 539, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (Main.halloween && Main.rand.Next(3) != 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 303, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (Main.xMas && Main.rand.Next(3) != 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 337, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (BirthdayParty.PartyIsUp && Main.rand.Next(3) != 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 540, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (Main.rand.Next(3) == 0 && (double)num2 <= Main.worldSurface)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, (int)Utils.SelectRandom<short>(Main.rand, new short[]
												{
													299,
													538
												}), 0, 0f, 0f, 0f, 0f, 255);
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 46, 0, 0f, 0f, 0f, 0f, 255);
									}
								}
								else if (num74 < Main.maxTilesX / 3 && Main.rand.Next(15) == 0 && num45 == 53)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(366, 368), 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num74 < Main.maxTilesX / 3 && Main.dayTime && Main.time < 18000.0 && (num45 == 2 || num45 == 109) && Main.rand.Next(4) == 0 && (double)num2 <= Main.worldSurface && NPC.CountNPCS(74) + NPC.CountNPCS(297) + NPC.CountNPCS(298) < 6)
								{
									int num75 = Main.rand.Next(4);
									if (Main.rand.Next(NPC.goldCritterChance) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 442, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (num75 == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 297, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (num75 == 1)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 298, 0, 0f, 0f, 0f, 0f, 255);
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 74, 0, 0f, 0f, 0f, 0f, 255);
									}
								}
								else if (num74 < Main.maxTilesX / 3 && Main.rand.Next(15) == 0 && (num45 == 2 || num45 == 109 || num45 == 147))
								{
									int num76 = Main.rand.Next(4);
									if (Main.rand.Next(NPC.goldCritterChance) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 442, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (num76 == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 297, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (num76 == 1)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 298, 0, 0f, 0f, 0f, 0f, 255);
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 74, 0, 0f, 0f, 0f, 0f, 255);
									}
								}
								else if (num74 > Main.maxTilesX / 3 && num45 == 2 && Main.rand.Next(300) == 0 && !NPC.AnyNPCs(50))
								{
									NPC.SpawnOnPlayer(j, 50);
								}
								else if (num45 == 53 && Main.rand.Next(5) == 0 && NPC.Spawning_SandstoneCheck(num, num2) && !flag5)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 69, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num45 == 53 && Main.rand.Next(3) == 0 && !flag5)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 537, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num45 == 53 && !flag5)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 61, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num74 > Main.maxTilesX / 3 && (Main.rand.Next(15) == 0 || (!NPC.downedGoblins && WorldGen.shadowOrbSmashed && Main.rand.Next(7) == 0)))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 73, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.raining && Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 224, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.raining && Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 225, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 1, 0, 0f, 0f, 0f, 0f, 255);
									if (num45 == 60)
									{
										Main.npc[num46].SetDefaults("Jungle Slime");
									}
									else if (num45 == 161 || num45 == 147)
									{
										Main.npc[num46].SetDefaults("Ice Slime");
									}
									else if (Main.halloween && Main.rand.Next(3) != 0)
									{
										Main.npc[num46].SetDefaults(302, -1f);
									}
									else if (Main.xMas && Main.rand.Next(3) != 0)
									{
										Main.npc[num46].SetDefaults(Main.rand.Next(333, 337), -1f);
									}
									else if (Main.rand.Next(3) == 0 || (num74 < 200 && !Main.expertMode))
									{
										Main.npc[num46].SetDefaults("Green Slime");
									}
									else if (Main.rand.Next(10) == 0 && (num74 > 400 || Main.expertMode))
									{
										Main.npc[num46].SetDefaults("Purple Slime");
									}
								}
							}
							else if ((num3 == 2 || num3 == 109) && Main.rand.Next(NPC.fireFlyChance) == 0 && (double)num2 <= Main.worldSurface)
							{
								int num77 = 355;
								if (num45 == 109)
								{
									num77 = 358;
								}
								NPC.NewNPC(num * 16 + 8, num2 * 16, num77, 0, 0f, 0f, 0f, 0f, 255);
								if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
								{
									NPC.NewNPC(num * 16 + 8 - 16, num2 * 16, num77, 0, 0f, 0f, 0f, 0f, 255);
								}
								if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
								{
									NPC.NewNPC(num * 16 + 8 + 16, num2 * 16, num77, 0, 0f, 0f, 0f, 0f, 255);
								}
								if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16 - 16, num77, 0, 0f, 0f, 0f, 0f, 255);
								}
								if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16 + 16, num77, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (Main.rand.Next(10) == 0 && Main.halloween)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 301, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(6) == 0 || (Main.moonPhase == 4 && Main.rand.Next(2) == 0))
							{
								if (Main.hardMode && Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 133, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.halloween && Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(317, 319), 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 2, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num46].SetDefaults("Demon Eye 2");
									}
								}
								else
								{
									int num78 = Main.rand.Next(5);
									if (num78 == 0)
									{
										num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 190, 0, 0f, 0f, 0f, 0f, 255);
										if (Main.rand.Next(3) == 0)
										{
											Main.npc[num46].SetDefaults("Cataract Eye 2");
										}
									}
									else if (num78 == 1)
									{
										num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 191, 0, 0f, 0f, 0f, 0f, 255);
										if (Main.rand.Next(3) == 0)
										{
											Main.npc[num46].SetDefaults("Sleepy Eye 2");
										}
									}
									else if (num78 == 2)
									{
										num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 192, 0, 0f, 0f, 0f, 0f, 255);
										if (Main.rand.Next(3) == 0)
										{
											Main.npc[num46].SetDefaults("Dialated Eye 2");
										}
									}
									else if (num78 == 3)
									{
										num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 193, 0, 0f, 0f, 0f, 0f, 255);
										if (Main.rand.Next(3) == 0)
										{
											Main.npc[num46].SetDefaults("Green Eye 2");
										}
									}
									else if (num78 == 4)
									{
										num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 194, 0, 0f, 0f, 0f, 0f, 255);
										if (Main.rand.Next(3) == 0)
										{
											Main.npc[num46].SetDefaults("Purple Eye 2");
										}
									}
								}
							}
							else if (Main.hardMode && Main.rand.Next(50) == 0 && Main.bloodMoon && !NPC.AnyNPCs(109))
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 109, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(250) == 0 && Main.bloodMoon)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 53, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(250) == 0 && Main.bloodMoon)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 536, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.moonPhase == 0 && Main.hardMode && Main.rand.Next(3) != 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 104, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && Main.rand.Next(3) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 140, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.bloodMoon && Main.rand.Next(5) < 2)
							{
								if (Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 489, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 490, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (num3 == 147 || num3 == 161 || num3 == 163 || num3 == 164 || num3 == 162)
							{
								if (Main.hardMode && Main.rand.Next(4) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 169, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.hardMode && Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 155, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.expertMode && Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 431, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 161, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (Main.raining && Main.rand.Next(2) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 223, 0, 0f, 0f, 0f, 0f, 255);
								if (Main.rand.Next(3) == 0)
								{
									if (Main.rand.Next(2) == 0)
									{
										Main.npc[num46].SetDefaults("Small Rain Zombie");
									}
									else
									{
										Main.npc[num46].SetDefaults("Big Rain Zombie");
									}
								}
							}
							else
							{
								int num79 = Main.rand.Next(7);
								if (Main.halloween && Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(319, 322), 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.xMas && Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(331, 333), 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num79 == 0 && Main.expertMode && Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 430, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num79 == 2 && Main.expertMode && Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 432, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num79 == 3 && Main.expertMode && Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 433, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num79 == 4 && Main.expertMode && Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 434, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num79 == 5 && Main.expertMode && Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 435, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num79 == 6 && Main.expertMode && Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 436, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num79 == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 3, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num46].SetDefaults("Small Zombie");
										}
										else
										{
											Main.npc[num46].SetDefaults("Big Zombie");
										}
									}
								}
								else if (num79 == 1)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 132, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num46].SetDefaults("Small Bald Zombie");
										}
										else
										{
											Main.npc[num46].SetDefaults("Big Bald Zombie");
										}
									}
								}
								else if (num79 == 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 186, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num46].SetDefaults("Small Pincushion Zombie");
										}
										else
										{
											Main.npc[num46].SetDefaults("Big Pincushion Zombie");
										}
									}
								}
								else if (num79 == 3)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 187, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num46].SetDefaults("Small Slimed Zombie");
										}
										else
										{
											Main.npc[num46].SetDefaults("Big Slimed Zombie");
										}
									}
								}
								else if (num79 == 4)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 188, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num46].SetDefaults("Small Swamp Zombie");
										}
										else
										{
											Main.npc[num46].SetDefaults("Big Swamp Zombie");
										}
									}
								}
								else if (num79 == 5)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 189, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num46].SetDefaults("Small Twiggy Zombie");
										}
										else
										{
											Main.npc[num46].SetDefaults("Big Twiggy Zombie");
										}
									}
								}
								else if (num79 == 6)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 200, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num46].SetDefaults("Small Female Zombie");
										}
										else
										{
											Main.npc[num46].SetDefaults("Big Female Zombie");
										}
									}
								}
							}
						}
						else if ((double)num2 <= Main.rockLayer)
						{
							if (!flag3 && Main.rand.Next(50) == 0 && !Main.player[j].ZoneSnow)
							{
								if (Main.hardMode)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 95, 1, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.player[j].ZoneSnow)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 185, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 10, 1, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (Main.hardMode && Main.rand.Next(3) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 140, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && Main.rand.Next(4) != 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 141, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (num45 == 147 || num45 == 161 || Main.player[j].ZoneSnow)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 147, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 1, 0, 0f, 0f, 0f, 0f, 255);
								if (Main.rand.Next(5) == 0)
								{
									Main.npc[num46].SetDefaults("Yellow Slime");
								}
								else if (Main.rand.Next(2) == 0)
								{
									Main.npc[num46].SetDefaults("Blue Slime");
								}
								else
								{
									Main.npc[num46].SetDefaults("Red Slime");
								}
							}
						}
						else if (num2 > Main.maxTilesY - 190)
						{
							if (Main.hardMode && !NPC.savedTaxCollector && Main.rand.Next(20) == 0 && !NPC.AnyNPCs(534))
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 534, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(40) == 0 && !NPC.AnyNPCs(39))
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 39, 1, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(14) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 24, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(7) == 0)
							{
								if (Main.rand.Next(7) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 66, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.hardMode && NPC.downedMechBossAny && Main.rand.Next(5) != 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 156, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 62, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (Main.rand.Next(3) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 59, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && NPC.downedMechBossAny && Main.rand.Next(5) != 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 151, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 60, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.rand.Next(60) == 0)
						{
							if (Main.player[j].ZoneSnow)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 218, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 217, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if ((num45 == 116 || num45 == 117 || num45 == 164) && Main.hardMode && !flag3 && Main.rand.Next(8) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 120, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if ((num3 == 147 || num3 == 161 || num3 == 162 || num3 == 163 || num3 == 164) && !flag3 && Main.hardMode && Main.player[j].ZoneCorrupt && Main.rand.Next(30) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 170, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if ((num3 == 147 || num3 == 161 || num3 == 162 || num3 == 163 || num3 == 164) && !flag3 && Main.hardMode && Main.player[j].ZoneHoly && Main.rand.Next(30) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 171, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if ((num3 == 147 || num3 == 161 || num3 == 162 || num3 == 163 || num3 == 164) && !flag3 && Main.hardMode && Main.player[j].ZoneCrimson && Main.rand.Next(30) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 180, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && Main.player[j].ZoneSnow && Main.rand.Next(10) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 154, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (!flag3 && Main.rand.Next(100) == 0 && !Main.player[j].ZoneHoly)
						{
							if (Main.hardMode)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 95, 1, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.player[j].ZoneSnow)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 185, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 10, 1, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.player[j].ZoneSnow && Main.rand.Next(20) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 185, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (!Main.hardMode && Main.rand.Next(10) == 0)
						{
							if (Main.player[j].ZoneSnow)
							{
								Main.npc[num46].SetDefaults(184, -1f);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 16, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (!Main.hardMode && Main.rand.Next(4) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 1, 0, 0f, 0f, 0f, 0f, 255);
							if (Main.player[j].ZoneJungle)
							{
								Main.npc[num46].SetDefaults("Jungle Slime");
							}
							else if (Main.player[j].ZoneSnow)
							{
								Main.npc[num46].SetDefaults(184, -1f);
							}
							else
							{
								Main.npc[num46].SetDefaults("Black Slime");
							}
						}
						else if (Main.rand.Next(2) == 0)
						{
							if (Main.rand.Next(35) == 0 && NPC.CountNPCS(453) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 453, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if ((!Main.hardMode && Main.rand.Next(80) == 0) || Main.rand.Next(200) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 195, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && (double)num2 > (Main.rockLayer + (double)Main.maxTilesY) / 2.0 && Main.rand.Next(300) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 172, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if ((double)num2 > (Main.rockLayer + (double)Main.maxTilesY) / 2.0 && (Main.rand.Next(200) == 0 || (Main.rand.Next(50) == 0 && Main.player[j].armor[1].type >= 1282 && Main.player[j].armor[1].type <= 1287 && Main.player[j].armor[0].type != 238)))
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 45, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag8 && Main.rand.Next(5) != 0)
							{
								if (Main.rand.Next(6) != 0 && !NPC.AnyNPCs(480) && Main.hardMode)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 480, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 481, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (flag7 && Main.rand.Next(5) != 0)
							{
								if (Main.rand.Next(6) != 0 && !NPC.AnyNPCs(483))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 483, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 482, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (Main.hardMode && Main.rand.Next(10) != 0)
							{
								if (Main.rand.Next(2) == 0)
								{
									if (Main.player[j].ZoneSnow)
									{
										num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 197, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (Main.halloween && Main.rand.Next(5) == 0)
									{
										num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 316, 0, 0f, 0f, 0f, 0f, 255);
									}
									else
									{
										num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 77, 0, 0f, 0f, 0f, 0f, 255);
										if ((double)num2 > (Main.rockLayer + (double)Main.maxTilesY) / 2.0 && Main.rand.Next(5) == 0)
										{
											Main.npc[num46].SetDefaults("Heavy Skeleton");
										}
									}
								}
								else if (Main.player[j].ZoneSnow)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 206, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 110, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (Main.rand.Next(20) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 44, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (num3 == 147 || num3 == 161 || num3 == 162)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 167, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.player[j].ZoneSnow)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 185, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(3) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, NPC.cavernMonsterType[Main.rand.Next(2), Main.rand.Next(3)], 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.halloween && Main.rand.Next(2) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(322, 325), 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.expertMode && Main.rand.Next(3) == 0)
							{
								int num80 = Main.rand.Next(4);
								if (num80 == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 449, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num80 == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 450, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num80 == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 451, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 452, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else
							{
								int num81 = Main.rand.Next(4);
								if (num81 == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 21, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num46].SetDefaults("Big Skeleton");
										}
										else
										{
											Main.npc[num46].SetDefaults("Small Skeleton");
										}
									}
								}
								else if (num81 == 1)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 201, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num46].SetDefaults("Big Headache Skeleton");
										}
										else
										{
											Main.npc[num46].SetDefaults("Small Headache Skeleton");
										}
									}
								}
								else if (num81 == 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 202, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num46].SetDefaults("Big Misassembled Skeleton");
										}
										else
										{
											Main.npc[num46].SetDefaults("Small Misassembled Skeleton");
										}
									}
								}
								else if (num81 == 3)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 203, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num46].SetDefaults("Big Pantless Skeleton");
										}
										else
										{
											Main.npc[num46].SetDefaults("Small Pantless Skeleton");
										}
									}
								}
							}
						}
						else if (Main.hardMode && (Main.player[j].ZoneHoly & Main.rand.Next(2) == 0))
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 138, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.player[j].ZoneJungle)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 51, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && Main.player[j].ZoneHoly)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 137, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && Main.rand.Next(6) > 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 93, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (num3 == 147 || num3 == 161 || num3 == 162)
						{
							if (Main.hardMode)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 169, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 150, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 49, 0, 0f, 0f, 0f, 0f, 255);
						}
						endVanillaSpawn: //this ugly code is just to minimize the diff file
						if (spawn != 0)
						{
							num46 = NPCLoader.SpawnNPC(spawn, num, num2);
						}
						if (Main.npc[num46].type == 1 && Main.rand.Next(180) == 0)
						{
							Main.npc[num46].SetDefaults("Pinky");
						}
						if (Main.netMode == 2 && num46 < 200)
						{
							NetMessage.SendData(23, -1, -1, "", num46, 0f, 0f, 0f, 0, 0, 0);
							return;
						}
						break;
					}
				}
			}
		}

		public static bool AnyDanger()
		{
			bool flag = false;
			if (NPC.MoonLordCountdown > 0)
			{
				flag = true;
			}
			if (Main.invasionType > 0)
			{
				flag = true;
			}
			if (!flag)
			{
				for (int i = 0; i < 200; i++)
				{
					if (Main.npc[i].active && (Main.npc[i].boss || NPCID.Sets.TechnicallyABoss[Main.npc[i].type]))
					{
						flag = true;
					}
				}
			}
			return flag;
		}

		public static bool AnyoneNearCultists()
		{
			int num = NPC.FindFirstNPC(437);
			if (num == -1)
			{
				return false;
			}
			Rectangle rectangle = Utils.CenteredRectangle(Main.npc[num].Center, new Vector2(2500f, 1500f));
			Rectangle r = new Rectangle(0, 0, 2500, 1500);
			Vector2 vector = r.Size() / 2f;
			for (int i = 0; i < 255; i++)
			{
				if (Main.player[i].active)
				{
					r.X = (int)Main.player[i].Center.X - (int)vector.X;
					r.Y = (int)Main.player[i].Center.Y - (int)vector.Y;
					if (rectangle.Intersects(r))
					{
						return true;
					}
				}
			}
			return false;
		}

		public static void SpawnWOF(Vector2 pos)
		{
			if (pos.Y / 16f < (float)(Main.maxTilesY - 205))
			{
				return;
			}
			if (Main.wof >= 0)
			{
				return;
			}
			if (Main.netMode == 1)
			{
				return;
			}
			Player.FindClosest(pos, 16, 16);
			int num = 1;
			if (pos.X / 16f > (float)(Main.maxTilesX / 2))
			{
				num = -1;
			}
			bool flag = false;
			int num2 = (int)pos.X;
			while (!flag)
			{
				flag = true;
				for (int i = 0; i < 255; i++)
				{
					if (Main.player[i].active && Main.player[i].position.X > (float)(num2 - 1200) && Main.player[i].position.X < (float)(num2 + 1200))
					{
						num2 -= num * 16;
						flag = false;
					}
				}
				if (num2 / 16 < 20 || num2 / 16 > Main.maxTilesX - 20)
				{
					flag = true;
				}
			}
			int num3 = (int)pos.Y;
			int num4 = num2 / 16;
			int num5 = num3 / 16;
			int num6 = 0;
			try
			{
				while (WorldGen.SolidTile(num4, num5 - num6) || Main.tile[num4, num5 - num6].liquid >= 100)
				{
					if (!WorldGen.SolidTile(num4, num5 + num6) && Main.tile[num4, num5 + num6].liquid < 100)
					{
						num5 += num6;
						goto IL_162;
					}
					num6++;
				}
				num5 -= num6;
			}
			catch
			{
			}
			IL_162:
			if (num5 < Main.maxTilesY - 180)
			{
				num5 = Main.maxTilesY - 180;
			}
			num3 = num5 * 16;
			int num7 = NPC.NewNPC(num2, num3, 113, 0, 0f, 0f, 0f, 0f, 255);
			if (Main.npc[num7].displayName == "")
			{
				Main.npc[num7].displayName = Main.npc[num7].name;
			}
			if (Main.netMode == 0)
			{
				Main.NewText(Main.npc[num7].displayName + " " + Lang.misc[16], 175, 75, 255, false);
				return;
			}
			if (Main.netMode == 2)
			{
				NetMessage.SendData(25, -1, -1, Main.npc[num7].displayName + " " + Lang.misc[16], 255, 175f, 75f, 255f, 0, 0, 0);
			}
		}

		public static void SpawnSkeletron()
		{
			bool flag = true;
			bool flag2 = false;
			Vector2 vector = Vector2.Zero;
			int num = 0;
			int num2 = 0;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == 35)
				{
					flag = false;
					break;
				}
			}
			for (int j = 0; j < 200; j++)
			{
				if (Main.npc[j].active)
				{
					if (Main.npc[j].type == 37)
					{
						flag2 = true;
						Main.npc[j].ai[3] = 1f;
						vector = Main.npc[j].position;
						num = Main.npc[j].width;
						num2 = Main.npc[j].height;
						if (Main.netMode == 2)
						{
							NetMessage.SendData(23, -1, -1, "", j, 0f, 0f, 0f, 0, 0, 0);
						}
					}
					else if (Main.npc[j].type == 54)
					{
						flag2 = true;
						vector = Main.npc[j].position;
						num = Main.npc[j].width;
						num2 = Main.npc[j].height;
					}
				}
			}
			if (flag && flag2)
			{
				int num3 = NPC.NewNPC((int)vector.X + num / 2, (int)vector.Y + num2 / 2, 35, 0, 0f, 0f, 0f, 0f, 255);
				Main.npc[num3].netUpdate = true;
				string str = "Skeletron";
				if (Main.netMode == 0)
				{
					Main.NewText(str + " " + Lang.misc[16], 175, 75, 255, false);
					return;
				}
				if (Main.netMode == 2)
				{
					NetMessage.SendData(25, -1, -1, str + " " + Lang.misc[16], 255, 175f, 75f, 255f, 0, 0, 0);
				}
			}
		}

		public static void SpawnOnPlayer(int plr, int Type)
		{
			if (Main.netMode == 1)
			{
				return;
			}
			if (Type == 262 && NPC.AnyNPCs(262))
			{
				return;
			}
			if (Type == 245)
			{
				if (NPC.AnyNPCs(245))
				{
					return;
				}
				try
				{
					int num = (int)Main.player[plr].Center.X / 16;
					int num2 = (int)Main.player[plr].Center.Y / 16;
					int num3 = 0;
					int num4 = 0;
					for (int i = num - 20; i < num + 20; i++)
					{
						for (int j = num2 - 20; j < num2 + 20; j++)
						{
							if (Main.tile[i, j].active() && Main.tile[i, j].type == 237 && Main.tile[i, j].frameX == 18 && Main.tile[i, j].frameY == 0)
							{
								num3 = i;
								num4 = j;
							}
						}
					}
					if (num3 > 0 && num4 > 0)
					{
						int num5 = num4 - 15;
						int num6 = num4 - 15;
						for (int k = num4; k > num4 - 100; k--)
						{
							if (WorldGen.SolidTile(num3, k))
							{
								num5 = k;
								break;
							}
						}
						for (int l = num4; l < num4 + 100; l++)
						{
							if (WorldGen.SolidTile(num3, l))
							{
								num6 = l;
								break;
							}
						}
						num4 = (num5 + num5 + num6) / 3;
						int num7 = NPC.NewNPC(num3 * 16 + 8, num4 * 16, 245, 100, 0f, 0f, 0f, 0f, 255);
						Main.npc[num7].target = plr;
						string name = Main.npc[num7].name;
						if (Main.netMode == 0)
						{
							Main.NewText(name + " " + Lang.misc[16], 175, 75, 255, false);
						}
						else if (Main.netMode == 2)
						{
							NetMessage.SendData(25, -1, -1, name + " " + Lang.misc[16], 255, 175f, 75f, 255f, 0, 0, 0);
						}
					}
				}
				catch
				{
				}
				return;
			}
			else if (Type == 370)
			{
				Player player = Main.player[plr];
				if (!player.active || player.dead)
				{
					return;
				}
				int m = 0;
				while (m < 1000)
				{
					Projectile projectile = Main.projectile[m];
					if (projectile.active && projectile.bobber && projectile.owner == plr)
					{
						int num8 = NPC.NewNPC((int)projectile.Center.X, (int)projectile.Center.Y + 100, 370, 0, 0f, 0f, 0f, 0f, 255);
						string name2 = Main.npc[num8].name;
						if (Main.netMode == 0)
						{
							Main.NewText(name2 + " " + Lang.misc[16], 175, 75, 255, false);
							return;
						}
						if (Main.netMode == 2)
						{
							NetMessage.SendData(25, -1, -1, name2 + " " + Lang.misc[16], 255, 175f, 75f, 255f, 0, 0, 0);
							return;
						}
						break;
					}
					else
					{
						m++;
					}
				}
				return;
			}
			else
			{
				if (Type != 398)
				{
					bool flag = false;
					int num9 = 0;
					int num10 = 0;
					int num11 = (int)(Main.player[plr].position.X / 16f) - NPC.spawnRangeX * 2;
					int num12 = (int)(Main.player[plr].position.X / 16f) + NPC.spawnRangeX * 2;
					int num13 = (int)(Main.player[plr].position.Y / 16f) - NPC.spawnRangeY * 2;
					int num14 = (int)(Main.player[plr].position.Y / 16f) + NPC.spawnRangeY * 2;
					int num15 = (int)(Main.player[plr].position.X / 16f) - NPC.safeRangeX;
					int num16 = (int)(Main.player[plr].position.X / 16f) + NPC.safeRangeX;
					int num17 = (int)(Main.player[plr].position.Y / 16f) - NPC.safeRangeY;
					int num18 = (int)(Main.player[plr].position.Y / 16f) + NPC.safeRangeY;
					if (num11 < 0)
					{
						num11 = 0;
					}
					if (num12 > Main.maxTilesX)
					{
						num12 = Main.maxTilesX;
					}
					if (num13 < 0)
					{
						num13 = 0;
					}
					if (num14 > Main.maxTilesY)
					{
						num14 = Main.maxTilesY;
					}
					for (int n = 0; n < 1000; n++)
					{
						int num19 = 0;
						while (num19 < 100)
						{
							int num20 = Main.rand.Next(num11, num12);
							int num21 = Main.rand.Next(num13, num14);
							if (Main.tile[num20, num21].nactive() && Main.tileSolid[(int)Main.tile[num20, num21].type])
							{
								goto IL_7E8;
							}
							if ((!Main.wallHouse[(int)Main.tile[num20, num21].wall] || n >= 999) && (Type != 50 || n >= 500 || Main.tile[num21, num21].wall <= 0))
							{
								int num22 = num21;
								while (num22 < Main.maxTilesY)
								{
									if (Main.tile[num20, num22].nactive() && Main.tileSolid[(int)Main.tile[num20, num22].type])
									{
										if (num20 < num15 || num20 > num16 || num22 < num17 || num22 > num18 || n == 999)
										{
											ushort arg_66F_0 = Main.tile[num20, num22].type;
											num9 = num20;
											num10 = num22;
											flag = true;
											break;
										}
										break;
									}
									else
									{
										num22++;
									}
								}
								if (flag && Type == 50 && n < 900)
								{
									int num23 = 20;
									if (!Collision.CanHit(new Vector2((float)num9, (float)(num10 - 1)) * 16f, 16, 16, new Vector2((float)num9, (float)(num10 - 1 - num23)) * 16f, 16, 16) || !Collision.CanHit(new Vector2((float)num9, (float)(num10 - 1 - num23)) * 16f, 16, 16, Main.player[plr].Center, 0, 0))
									{
										num9 = 0;
										num10 = 0;
										flag = false;
									}
								}
								if (!flag || n >= 999)
								{
									goto IL_7E8;
								}
								int num24 = num9 - NPC.spawnSpaceX / 2;
								int num25 = num9 + NPC.spawnSpaceX / 2;
								int num26 = num10 - NPC.spawnSpaceY;
								int num27 = num10;
								if (num24 < 0)
								{
									flag = false;
								}
								if (num25 > Main.maxTilesX)
								{
									flag = false;
								}
								if (num26 < 0)
								{
									flag = false;
								}
								if (num27 > Main.maxTilesY)
								{
									flag = false;
								}
								if (flag)
								{
									for (int num28 = num24; num28 < num25; num28++)
									{
										for (int num29 = num26; num29 < num27; num29++)
										{
											if (Main.tile[num28, num29].nactive() && Main.tileSolid[(int)Main.tile[num28, num29].type])
											{
												flag = false;
												break;
											}
										}
									}
									goto IL_7E8;
								}
								goto IL_7E8;
							}
							IL_7F0:
							num19++;
							continue;
							IL_7E8:
							if (!flag && !flag)
							{
								goto IL_7F0;
							}
							break;
						}
						if (flag && n < 999)
						{
							Rectangle rectangle = new Rectangle(num9 * 16, num10 * 16, 16, 16);
							for (int num30 = 0; num30 < 255; num30++)
							{
								if (Main.player[num30].active)
								{
									Rectangle rectangle2 = new Rectangle((int)(Main.player[num30].position.X + (float)(Main.player[num30].width / 2) - (float)(NPC.sWidth / 2) - (float)NPC.safeRangeX), (int)(Main.player[num30].position.Y + (float)(Main.player[num30].height / 2) - (float)(NPC.sHeight / 2) - (float)NPC.safeRangeY), NPC.sWidth + NPC.safeRangeX * 2, NPC.sHeight + NPC.safeRangeY * 2);
									if (rectangle.Intersects(rectangle2))
									{
										flag = false;
									}
								}
							}
						}
						if (flag)
						{
							break;
						}
					}
					if (flag)
					{
						int num31 = NPC.NewNPC(num9 * 16 + 8, num10 * 16, Type, 1, 0f, 0f, 0f, 0f, 255);
						if (num31 == 200)
						{
							return;
						}
						Main.npc[num31].target = plr;
						Main.npc[num31].timeLeft *= 20;
						string name3 = Main.npc[num31].name;
						if (Main.npc[num31].displayName != "")
						{
							name3 = Main.npc[num31].displayName;
						}
						if (Main.netMode == 2 && num31 < 200)
						{
							NetMessage.SendData(23, -1, -1, "", num31, 0f, 0f, 0f, 0, 0, 0);
						}
						if (Type == 134 || Type == 127 || Type == 126 || Type == 125)
						{
							AchievementsHelper.CheckMechaMayhem(-1);
						}
						if (Type == 125)
						{
							if (Main.netMode == 0)
							{
								Main.NewText(Lang.misc[48], 175, 75, 255, false);
								return;
							}
							if (Main.netMode == 2)
							{
								NetMessage.SendData(25, -1, -1, Lang.misc[48], 255, 175f, 75f, 255f, 0, 0, 0);
								return;
							}
						}
						else if (Type != 82 && Type != 126 && Type != 50 && Type != 398)
						{
							if (Main.netMode == 0)
							{
								Main.NewText(name3 + " " + Lang.misc[16], 175, 75, 255, false);
								return;
							}
							if (Main.netMode == 2)
							{
								NetMessage.SendData(25, -1, -1, name3 + " " + Lang.misc[16], 255, 175f, 75f, 255f, 0, 0, 0);
							}
						}
					}
					return;
				}
				if (NPC.AnyNPCs(Type))
				{
					return;
				}
				Player player2 = Main.player[plr];
				NPC.NewNPC((int)player2.Center.X, (int)player2.Center.Y - 150, Type, 0, 0f, 0f, 0f, 0f, 255);
				if (Main.netMode == 0)
				{
					Main.NewText("Moon Lord " + Lang.misc[16], 175, 75, 255, false);
					return;
				}
				if (Main.netMode == 2)
				{
					NetMessage.SendData(25, -1, -1, "Moon Lord " + Lang.misc[16], 255, 175f, 75f, 255f, 0, 0, 0);
				}
				return;
			}
		}

		public static int NewNPC(int X, int Y, int Type, int Start = 0, float ai0 = 0f, float ai1 = 0f, float ai2 = 0f, float ai3 = 0f, int Target = 255)
		{
			int num = -1;
			if (Type == 222)
			{
				for (int i = 199; i >= 0; i--)
				{
					if (!Main.npc[i].active)
					{
						num = i;
						break;
					}
				}
			}
			else
			{
				for (int j = Start; j < 200; j++)
				{
					if (!Main.npc[j].active)
					{
						num = j;
						break;
					}
				}
			}
			if (num >= 0)
			{
				Main.npc[num] = new NPC();
				Main.npc[num].SetDefaults(Type, -1f);
				if (NPC.TypeToNum(Type) != -1 || Type == 453)
				{
					Main.npc[num].displayName = NPC.getNewNPCName(Type);
				}
				Main.npc[num].position.X = (float)(X - Main.npc[num].width / 2);
				Main.npc[num].position.Y = (float)(Y - Main.npc[num].height);
				Main.npc[num].active = true;
				Main.npc[num].timeLeft = (int)((double)NPC.activeTime * 1.25);
				Main.npc[num].wet = Collision.WetCollision(Main.npc[num].position, Main.npc[num].width, Main.npc[num].height);
				Main.npc[num].ai[0] = ai0;
				Main.npc[num].ai[1] = ai1;
				Main.npc[num].ai[2] = ai2;
				Main.npc[num].ai[3] = ai3;
				Main.npc[num].target = Target;
				if (Type == 50)
				{
					if (Main.netMode == 0)
					{
						Main.NewText(Main.npc[num].name + " " + Lang.misc[16], 175, 75, 255, false);
					}
					else if (Main.netMode == 2)
					{
						NetMessage.SendData(25, -1, -1, Main.npc[num].name + " " + Lang.misc[16], 255, 175f, 75f, 255f, 0, 0, 0);
					}
				}
				return num;
			}
			return 200;
		}

		public void TransformVisuals(int oldType, int newType)
		{
			if ((oldType == 158 && newType == 159) || (oldType == 159 && newType == 158))
			{
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
				int num = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), this.velocity, 99, this.scale);
				Main.gore[num].velocity *= 0.3f;
				num = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), this.velocity, 99, this.scale);
				Main.gore[num].velocity *= 0.3f;
				num = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 10f), this.velocity, 99, this.scale);
				Main.gore[num].velocity *= 0.3f;
			}
			else if (oldType == 478 && newType == 479)
			{
				for (int i = 0; i < 30; i++)
				{
					int num2 = Dust.NewDust(this.position, this.width, this.height, 238, 0f, -2f, 0, default(Color), 1f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num2].noGravity = true;
					}
				}
				Gore.NewGore(this.position, this.velocity, 684, this.scale);
				Gore.NewGore(this.position, this.velocity, 685, this.scale);
				Gore.NewGore(this.position, this.velocity, 686, this.scale);
				Gore.NewGore(this.position, this.velocity, 684 + Main.rand.Next(3), this.scale);
			}
			else if (oldType == 406 && newType == 405)
			{
				float num3 = (float)Main.rand.Next(10, 21);
				float num4 = 6.28318548f * Main.rand.NextFloat();
				Vector2 value = new Vector2(22f, 22f);
				for (float num5 = 0f; num5 < num3; num5 += 1f)
				{
					Dust dust = Main.dust[Dust.NewDust(base.Center, 0, 0, 229, 0f, 0f, 0, default(Color), 1f)];
					Vector2 vector = Vector2.UnitY.RotatedBy((double)(num5 * 6.28318548f / num3 + num4), default(Vector2));
					dust.position = base.Center + vector * value / 2f;
					dust.velocity = vector;
					dust.noGravity = true;
					dust.scale = 0.6f + Main.rand.NextFloat() * 1.8f;
					dust.velocity *= dust.scale;
					dust.fadeIn = Main.rand.NextFloat() * 2f;
				}
			}
			if (oldType == 428 && newType == 427)
			{
				for (int j = 0; j < 20; j++)
				{
					int num6 = Utils.SelectRandom<int>(Main.rand, new int[]
						{
							229,
							240
						});
					Dust dust2 = Main.dust[Dust.NewDust(this.position, this.width, this.height, num6, 0f, 0f, 0, default(Color), 1f)];
					dust2.noGravity = true;
					dust2.scale = 0.6f + Main.rand.NextFloat() * 1.8f;
					dust2.fadeIn = 0.25f;
					dust2.velocity *= dust2.scale / 2f;
				}
			}
			if (oldType == 427 && newType == 426)
			{
				for (int k = 0; k < 30; k++)
				{
					int num7 = Utils.SelectRandom<int>(Main.rand, new int[]
						{
							229,
							240,
							240
						});
					Dust dust3 = Main.dust[Dust.NewDust(this.position, this.width, this.height, num7, 0f, 0f, 0, default(Color), 1f)];
					dust3.noGravity = true;
					dust3.scale = 0.6f + Main.rand.NextFloat() * 1.8f;
					dust3.fadeIn = 0.25f;
					dust3.velocity *= dust3.scale * 0.75f;
				}
			}
		}

		public void Teleport(Vector2 newPos, int Style = 0, int extraInfo = 0)
		{
			int extraInfo2 = 0;
			if (Style == 4)
			{
				extraInfo2 = this.lastPortalColorIndex;
			}
			float dustCountMult = (this.teleportTime > 0f) ? 0.3f : 1f;
			Main.TeleportEffect(this.getRect(), Style, extraInfo2, dustCountMult);
			this.position = newPos;
			if (Style == 4)
			{
				this.lastPortalColorIndex = extraInfo;
				extraInfo2 = this.lastPortalColorIndex;
			}
			Main.TeleportEffect(this.getRect(), Style, extraInfo2, dustCountMult);
			this.teleportTime = 1f;
			this.teleportStyle = Style;
			if (Main.netMode == 2 && Style != 4)
			{
				NetMessage.SendData(65, -1, -1, "", 1, (float)this.whoAmI, newPos.X, newPos.Y, Style, 0, 0);
			}
		}

		public void Transform(int newType)
		{
			if (Main.netMode != 1)
			{
				bool flag = false;
				if (this.value == 0f)
				{
					flag = true;
				}
				int[] array = new int[5];
				int[] array2 = new int[5];
				for (int i = 0; i < 5; i++)
				{
					array[i] = this.buffType[i];
					array2[i] = this.buffTime[i];
				}
				int arg_52_0 = this.height;
				int oldType = this.type;
				int num = this.life;
				int num2 = this.lifeMax;
				Vector2 velocity = this.velocity;
				this.position.Y = this.position.Y + (float)this.height;
				int num3 = this.spriteDirection;
				bool spawnedFromStatue = this.SpawnedFromStatue;
				this.SetDefaults(newType, -1f);
				this.SpawnedFromStatue = spawnedFromStatue;
				this.spriteDirection = num3;
				this.TargetClosest(true);
				this.velocity = velocity;
				this.position.Y = this.position.Y - (float)this.height;
				if (flag)
				{
					this.value = 0f;
				}
				if (this.lifeMax == num2)
				{
					this.life = num;
				}
				if (newType == 107 || newType == 108)
				{
					this.homeTileX = (int)(this.position.X + (float)(this.width / 2)) / 16;
					this.homeTileY = (int)(this.position.Y + (float)this.height) / 16;
					this.homeless = true;
				}
				for (int j = 0; j < 5; j++)
				{
					this.buffType[j] = array[j];
					this.buffTime[j] = array2[j];
				}
				if (Main.netMode == 2)
				{
					this.netUpdate = true;
					NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
					NetMessage.SendData(54, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
				}
				this.TransformVisuals(oldType, newType);
				if (NPC.TypeToNum(this.type) != -1)
				{
					Main.npc[this.whoAmI].displayName = NPC.getNewNPCName(this.type);
				}
				this.npcNameLookup = 0;
				if (this.townNPC)
				{
					this.homeless = true;
				}
				this.altTexture = 0;
			}
		}

		public int checkArmorPenetration(int armorPenetration)
		{
			if (armorPenetration <= 0)
			{
				return 0;
			}
			if (armorPenetration > this.defense && this.defense >= 0)
			{
				return this.defense / 2;
			}
			return armorPenetration / 2;
		}

		public double StrikeNPCNoInteraction(int Damage, float knockBack, int hitDirection, bool crit = false, bool noEffect = false, bool fromNet = false)
		{
			if (Main.netMode == 0)
			{
				NPC.ignorePlayerInteractions++;
			}
			return this.StrikeNPC(Damage, knockBack, hitDirection, crit, noEffect, fromNet);
		}

		public double StrikeNPC(int Damage, float knockBack, int hitDirection, bool crit = false, bool noEffect = false, bool fromNet = false)
		{
			bool flag = Main.netMode == 0;
			if (flag && NPC.ignorePlayerInteractions > 0)
			{
				NPC.ignorePlayerInteractions--;
				flag = false;
			}
			if (!this.active || this.life <= 0)
			{
				return 0.0;
			}
			double num = (double)Damage;
			int num2 = this.defense;
			if (this.ichor)
			{
				num2 -= 20;
			}
			if (num2 < 0)
			{
				num2 = 0;
			}
			if (NPCLoader.StrikeNPC(this, ref num, num2, ref knockBack, hitDirection, ref crit))
			{
				num = Main.CalculateDamage((int)num, num2);
				if (crit)
				{
					num *= 2.0;
				}
				if (this.takenDamageMultiplier > 1f)
				{
					num *= (double)this.takenDamageMultiplier;
				}
			}
			if ((this.takenDamageMultiplier > 1f || Damage != 9999) && this.lifeMax > 1)
			{
				if (this.friendly)
				{
					Color color = crit ? CombatText.DamagedFriendlyCrit : CombatText.DamagedFriendly;
					CombatText.NewText(new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height), color, string.Concat((int)num), crit, false);
				}
				else
				{
					Color color2 = crit ? CombatText.DamagedHostileCrit : CombatText.DamagedHostile;
					if (fromNet)
					{
						color2 = (crit ? CombatText.OthersDamagedHostileCrit : CombatText.OthersDamagedHostile);
					}
					CombatText.NewText(new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height), color2, string.Concat((int)num), crit, false);
				}
			}
			if (num >= 1.0)
			{
				if (flag)
				{
					this.PlayerInteraction(Main.myPlayer);
				}
				this.justHit = true;
				if (this.townNPC)
				{
					bool flag2 = this.aiStyle == 7 && (this.ai[0] == 3f || this.ai[0] == 4f || this.ai[0] == 16f || this.ai[0] == 17f);
					if (flag2)
					{
						NPC nPC = Main.npc[(int)this.ai[2]];
						if (nPC.active)
						{
							nPC.ai[0] = 1f;
							nPC.ai[1] = (float)(300 + Main.rand.Next(300));
							nPC.ai[2] = 0f;
							nPC.localAI[3] = 0f;
							nPC.direction = hitDirection;
							nPC.netUpdate = true;
						}
					}
					this.ai[0] = 1f;
					this.ai[1] = (float)(300 + Main.rand.Next(300));
					this.ai[2] = 0f;
					this.localAI[3] = 0f;
					this.direction = hitDirection;
					this.netUpdate = true;
				}
				if (this.aiStyle == 8 && Main.netMode != 1)
				{
					if (this.type == 172)
					{
						this.ai[0] = 450f;
					}
					else if (this.type == 283 || this.type == 284)
					{
						if (Main.rand.Next(2) == 0)
						{
							this.ai[0] = 390f;
							this.netUpdate = true;
						}
					}
					else if (this.type == 533)
					{
						if (Main.rand.Next(3) != 0)
						{
							this.ai[0] = 181f;
							this.netUpdate = true;
						}
					}
					else
					{
						this.ai[0] = 400f;
					}
					this.TargetClosest(true);
				}
				if (this.aiStyle == 97 && Main.netMode != 1)
				{
					this.localAI[1] = 1f;
					this.TargetClosest(true);
				}
				if (this.type == 371)
				{
					num = 0.0;
					this.ai[0] = 1f;
					this.ai[1] = 4f;
					this.dontTakeDamage = true;
				}
				if (this.type == 346 && (double)this.life >= (double)this.lifeMax * 0.5 && (double)this.life - num < (double)this.lifeMax * 0.5)
				{
					Gore.NewGore(this.position, this.velocity, 517, 1f);
				}
				if (this.type == 184)
				{
					this.localAI[0] = 60f;
				}
				if (this.type == 535)
				{
					this.localAI[0] = 60f;
				}
				if (this.type == 185)
				{
					this.localAI[0] = 1f;
				}
				if (!this.immortal)
				{
					if (this.realLife >= 0)
					{
						Main.npc[this.realLife].life -= (int)num;
						this.life = Main.npc[this.realLife].life;
						this.lifeMax = Main.npc[this.realLife].lifeMax;
					}
					else
					{
						this.life -= (int)num;
					}
				}
				if (knockBack > 0f && this.knockBackResist > 0f)
				{
					float num3 = knockBack * this.knockBackResist;
					if (num3 > 8f)
					{
						float num4 = num3 - 8f;
						num4 *= 0.9f;
						num3 = 8f + num4;
					}
					if (num3 > 10f)
					{
						float num5 = num3 - 10f;
						num5 *= 0.8f;
						num3 = 10f + num5;
					}
					if (num3 > 12f)
					{
						float num6 = num3 - 12f;
						num6 *= 0.7f;
						num3 = 12f + num6;
					}
					if (num3 > 14f)
					{
						float num7 = num3 - 14f;
						num7 *= 0.6f;
						num3 = 14f + num7;
					}
					if (num3 > 16f)
					{
						num3 = 16f;
					}
					if (crit)
					{
						num3 *= 1.4f;
					}
					int num8 = (int)num * 10;
					if (Main.expertMode)
					{
						num8 = (int)num * 15;
					}
					if (num8 > this.lifeMax)
					{
						if (hitDirection < 0 && this.velocity.X > -num3)
						{
							if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X - num3;
							}
							this.velocity.X = this.velocity.X - num3;
							if (this.velocity.X < -num3)
							{
								this.velocity.X = -num3;
							}
						}
						else if (hitDirection > 0 && this.velocity.X < num3)
						{
							if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X + num3;
							}
							this.velocity.X = this.velocity.X + num3;
							if (this.velocity.X > num3)
							{
								this.velocity.X = num3;
							}
						}
						if (this.type == 185)
						{
							num3 *= 1.5f;
						}
						if (!this.noGravity)
						{
							num3 *= -0.75f;
						}
						else
						{
							num3 *= -0.5f;
						}
						if (this.velocity.Y > num3)
						{
							this.velocity.Y = this.velocity.Y + num3;
							if (this.velocity.Y < num3)
							{
								this.velocity.Y = num3;
							}
						}
					}
					else
					{
						if (!this.noGravity)
						{
							this.velocity.Y = -num3 * 0.75f * this.knockBackResist;
						}
						else
						{
							this.velocity.Y = -num3 * 0.5f * this.knockBackResist;
						}
						this.velocity.X = num3 * (float)hitDirection * this.knockBackResist;
					}
				}
				if ((this.type == 113 || this.type == 114) && this.life <= 0)
				{
					for (int i = 0; i < 200; i++)
					{
						if (Main.npc[i].active && (Main.npc[i].type == 113 || Main.npc[i].type == 114))
						{
							Main.npc[i].HitEffect(hitDirection, num);
						}
					}
				}
				else
				{
					this.HitEffect(hitDirection, num);
				}
				if (this.soundHit > 0)
				{
					Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, this.soundHit);
				}
				if (this.realLife >= 0)
				{
					Main.npc[this.realLife].checkDead();
				}
				else
				{
					this.checkDead();
				}
				return num;
			}
			return 0.0;
		}

		public void HitEffect(int hitDirection = 0, double dmg = 10.0)
		{
			NPCLoader.HitEffect(this, hitDirection, dmg);
		}

		public void VanillaHitEffect(int hitDirection = 0, double dmg = 10.0)
		{
			if (!this.active)
			{
				return;
			}
			if (this.townNPC && this.life <= 0 && this.UsesPartyHat())
			{
				bool flag = true;
				int num = this.type;
				if (num <= 178)
				{
					if (num <= 38)
					{
						switch (num)
						{
							case 17:
								Gore.NewGore(this.position, this.velocity, 929, 1f);
								goto IL_27E;
							case 18:
								Gore.NewGore(this.position, this.velocity, 930, 1f);
								goto IL_27E;
							default:
								if (num == 38)
								{
									Gore.NewGore(this.position, this.velocity, 927, 1f);
									goto IL_27E;
								}
								break;
						}
					}
					else
					{
						if (num == 108)
						{
							Gore.NewGore(this.position, this.velocity, 938, 1f);
							goto IL_27E;
						}
						if (num == 142)
						{
							Gore.NewGore(this.position, this.velocity, 933, 1f);
							goto IL_27E;
						}
						if (num == 178)
						{
							Gore.NewGore(this.position, this.velocity, 935, 1f);
							goto IL_27E;
						}
					}
				}
				else if (num <= 229)
				{
					if (num == 207)
					{
						Gore.NewGore(this.position, this.velocity, 928, 1f);
						goto IL_27E;
					}
					switch (num)
					{
						case 227:
							Gore.NewGore(this.position, this.velocity, 931, 1f);
							goto IL_27E;
						case 229:
							Gore.NewGore(this.position, this.velocity, 932, 1f);
							goto IL_27E;
					}
				}
				else
				{
					if (num == 353)
					{
						Gore.NewGore(this.position, this.velocity, 936, 1f);
						goto IL_27E;
					}
					if (num == 368)
					{
						Gore.NewGore(this.position, this.velocity, 937, 1f);
						goto IL_27E;
					}
					if (num == 453)
					{
						Gore.NewGore(this.position, this.velocity, 934, 1f);
						goto IL_27E;
					}
				}
				flag = false;
				IL_27E:
				if (flag)
				{
					int num2 = 926;
					switch (this.GetPartyHatColor())
					{
						case PartyHatColor.Pink:
							num2 = 939;
							break;
						case PartyHatColor.Cyan:
							num2 = 940;
							break;
						case PartyHatColor.Purple:
							num2 = 941;
							break;
						case PartyHatColor.White:
							num2 = 942;
							break;
					}
					Gore.NewGore(this.position, this.velocity, num2, 1f);
				}
			}
			if (this.daybreak && this.life <= 0)
			{
				Rectangle hitbox = base.Hitbox;
				for (int i = 0; i < 20; i++)
				{
					int num3 = Utils.SelectRandom<int>(Main.rand, new int[]
						{
							6,
							259,
							158
						});
					int num4 = Dust.NewDust(hitbox.TopLeft(), this.width, this.height, num3, 0f, -2.5f, 0, default(Color), 1f);
					Main.dust[num4].alpha = 200;
					Main.dust[num4].velocity *= 1.4f;
					Main.dust[num4].scale += Main.rand.NextFloat();
				}
				if (Main.netMode != 1)
				{
					for (int j = 0; j < 200; j++)
					{
						NPC nPC = Main.npc[j];
						if (nPC.active && !nPC.buffImmune[189] && base.Distance(nPC.Center) < 100f && !nPC.dontTakeDamage && nPC.lifeMax > 5 && !nPC.friendly && !nPC.townNPC)
						{
							nPC.AddBuff(189, 300, false);
						}
					}
				}
			}
			else if (this.type == 541)
			{
				Color color = new Color(222, 108, 48) * 0.7f;
				if (this.life > 0)
				{
					int num5 = 0;
					while ((double)num5 < dmg / (double)this.lifeMax * 200.0)
					{
						Dust dust = Main.dust[Dust.NewDust(this.position, this.width, this.height, 268, 0f, 0f, 0, default(Color), 1f)];
						dust.color = color;
						dust.noGravity = true;
						dust.scale = 1.5f;
						dust.fadeIn = 0.7f;
						dust.velocity *= 3f;
						dust = Main.dust[Dust.NewDust(this.position, this.width, this.height, 268, 0f, 0f, 0, default(Color), 1f)];
						dust.color = color;
						dust.noGravity = true;
						dust.scale = 1.5f;
						dust.fadeIn = 0.7f;
						dust.velocity *= 3f;
						num5++;
					}
				}
				else
				{
					for (int k = 0; k < 30; k++)
					{
						Dust dust2 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 268, 0f, 0f, 0, default(Color), 1f)];
						dust2.color = color;
						dust2.noGravity = true;
						dust2.scale = 1.5f;
						dust2.fadeIn = 0.7f;
						dust2.velocity *= 3f;
						dust2 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 268, 0f, 0f, 0, default(Color), 1f)];
						dust2.color = color;
						dust2.noGravity = true;
						dust2.scale = 1.5f;
						dust2.fadeIn = 0.7f;
						dust2.velocity *= 3f;
					}
					Gore.NewGore(this.position, this.velocity, 960, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 961, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 963, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 40f), this.velocity, 962, this.scale);
				}
			}
			else if (this.type == 546)
			{
				Color color2 = new Color(150, 108, 78) * 0.7f;
				if (this.life > 0)
				{
					int num6 = 0;
					while ((double)num6 < dmg / (double)this.lifeMax * 50.0)
					{
						Dust dust3 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 268, 0f, 0f, 0, default(Color), 1f)];
						dust3.color = color2;
						dust3.noGravity = true;
						dust3.scale = 1.5f;
						dust3.fadeIn = 0.7f;
						dust3.velocity *= 3f;
						dust3 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 268, 0f, 0f, 0, default(Color), 1f)];
						dust3.color = color2;
						dust3.noGravity = true;
						dust3.scale = 1.5f;
						dust3.fadeIn = 0.7f;
						dust3.velocity *= 3f;
						num6++;
					}
				}
				else
				{
					for (int l = 0; l < 20; l++)
					{
						Dust dust4 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 268, 0f, 0f, 0, default(Color), 1f)];
						dust4.color = color2;
						dust4.noGravity = true;
						dust4.scale = 1.5f;
						dust4.fadeIn = 0.7f;
						dust4.velocity *= 3f;
						dust4 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 268, 0f, 0f, 0, default(Color), 1f)];
						dust4.color = color2;
						dust4.noGravity = true;
						dust4.scale = 1.5f;
						dust4.fadeIn = 0.7f;
						dust4.velocity *= 3f;
					}
					for (int m = 0; m < 20; m++)
					{
						int num7 = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 50, default(Color), 1.5f);
						Main.dust[num7].velocity *= 2f;
						Main.dust[num7].noGravity = true;
					}
					Gore.NewGore(this.position, this.velocity, 964, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 965, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 966, this.scale);
				}
			}
			if (this.type == 378)
			{
				if (this.life > 0)
				{
					int num8 = 0;
					while ((double)num8 < dmg / (double)this.lifeMax * 50.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 7, 0f, 0f, 0, default(Color), 1f);
						num8++;
					}
				}
				else
				{
					for (int n = 0; n < 20; n++)
					{
						Dust.NewDust(this.position, this.width, this.height, 7, 0f, 0f, 0, default(Color), 1f);
					}
				}
			}
			if (this.type == 437 && dmg == 9999.0)
			{
				for (int num9 = 0; num9 < 6; num9++)
				{
					Gore.NewGore(base.Center - new Vector2(10f), Vector2.UnitY.RotatedByRandom(6.2831854820251465) * 5f, 728 + num9, 1f);
				}
			}
			if (this.type == 398 && dmg == 1337.0)
			{
				MoonlordDeathDrama.ThrowPieces(base.Center, Main.rand.Next(100));
			}
			if (this.type == 488)
			{
				this.localAI[0] = (float)((int)dmg);
				if (this.localAI[0] < 20f)
				{
					this.localAI[0] = 20f;
				}
				if (this.localAI[0] > 120f)
				{
					this.localAI[0] = 120f;
				}
				this.localAI[1] = (float)hitDirection;
			}
			else if (this.type >= 513 && this.type <= 515)
			{
				if (this.life > 0)
				{
					int num10 = 0;
					while ((double)num10 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 250, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
						num10++;
					}
				}
				else
				{
					for (int num11 = 0; num11 < 50; num11++)
					{
						Dust.NewDust(this.position, this.width, this.height, 250, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
					}
					int num12 = Gore.NewGore(this.position, this.velocity, this.type - 513 + 822, 1f);
					Main.gore[num12].alpha = this.alpha;
				}
			}
			else if (this.type >= 510 && this.type <= 512)
			{
				if (this.life > 0)
				{
					int num13 = 0;
					while ((double)num13 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 250, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
						num13++;
					}
				}
				else
				{
					for (int num14 = 0; num14 < 50; num14++)
					{
						Dust.NewDust(this.position, this.width, this.height, 250, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
					}
					int num15 = Gore.NewGore(this.position, this.velocity, this.type - 510 + 819, 1f);
					Main.gore[num15].alpha = this.alpha;
				}
			}
			else if (this.type == 518 || this.type == 416)
			{
				if (this.life > 0)
				{
					int num16 = 0;
					while ((double)num16 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust dust5 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f)];
							dust5.noGravity = true;
							dust5.scale = 1.5f;
							dust5.fadeIn = 1f;
							dust5.velocity *= 3f;
						}
						num16++;
					}
				}
				else
				{
					for (int num17 = 0; num17 < 20; num17++)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(3) == 0)
						{
							Dust dust6 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f)];
							dust6.noGravity = true;
							dust6.scale = 1.5f;
							dust6.fadeIn = 1f;
							dust6.velocity *= 3f;
						}
					}
					Gore.NewGore(this.position, this.velocity, 844, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 845, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 847, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 835, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 836, this.scale);
				}
			}
			else if (this.type == 419)
			{
				if (this.life > 0)
				{
					int num18 = 0;
					while ((double)num18 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust dust7 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f)];
							dust7.noGravity = true;
							dust7.scale = 1.5f;
							dust7.fadeIn = 1f;
							dust7.velocity *= 3f;
						}
						num18++;
					}
				}
				else
				{
					for (int num19 = 0; num19 < 20; num19++)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(3) == 0)
						{
							Dust dust8 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f)];
							dust8.noGravity = true;
							dust8.scale = 1.5f;
							dust8.fadeIn = 1f;
							dust8.velocity *= 3f;
						}
					}
					Gore.NewGore(this.position, this.velocity, 844, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 845, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 846, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 846, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 847, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 847, this.scale);
				}
			}
			else if (this.type == 412 || this.type == 413 || this.type == 414)
			{
				if (this.life > 0)
				{
					int num20 = 0;
					while ((double)num20 < dmg / (double)this.lifeMax * 50.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						num20++;
					}
				}
				else
				{
					for (int num21 = 0; num21 < 6; num21++)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					for (int num22 = 0; num22 < 2; num22++)
					{
						Dust.NewDust(this.position, this.width, this.height, 6, 2.5f * (float)hitDirection, -2.5f, 100, Color.Transparent, 2f);
					}
					Gore.NewGore(this.position, this.velocity, this.type - 412 + 828, 1f);
				}
			}
			else if (this.type == 415)
			{
				if (this.life > 0)
				{
					int num23 = 0;
					while ((double)num23 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust dust9 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f)];
							dust9.noGravity = true;
							dust9.scale = 1.5f;
							dust9.fadeIn = 1f;
							dust9.velocity *= 3f;
						}
						num23++;
					}
				}
				else
				{
					for (int num24 = 0; num24 < 40; num24++)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						Dust dust10 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f)];
						dust10.noGravity = true;
						dust10.scale = 1.5f;
						dust10.fadeIn = 1f;
						dust10.velocity *= 3f;
					}
					Gore.NewGore(base.Center, this.velocity * 0.8f, 831, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.8f, 832, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 833, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 834, 1f);
				}
			}
			else if (this.type == 417)
			{
				if (this.life > 0)
				{
					int num25 = 0;
					while ((double)num25 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust dust11 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f)];
							dust11.noGravity = true;
							dust11.scale = 1.5f;
							dust11.fadeIn = 1f;
							dust11.velocity *= 3f;
						}
						num25++;
					}
				}
				else
				{
					for (int num26 = 0; num26 < 30; num26++)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(2) == 0)
						{
							Dust dust12 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f)];
							dust12.noGravity = true;
							dust12.scale = 1.5f;
							dust12.fadeIn = 1f;
							dust12.velocity *= 3f;
						}
					}
					Gore.NewGore(this.position, this.velocity, 837, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 838, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 838, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 838, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 839, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 839, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 38f), this.velocity, 840, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 38f), this.velocity, 840, this.scale);
				}
			}
			else if (this.type == 418)
			{
				if (this.life > 0)
				{
					int num27 = 0;
					while ((double)num27 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(2) == 0)
						{
							Dust dust13 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f)];
							dust13.noGravity = true;
							dust13.scale = 1.5f;
							dust13.fadeIn = 1f;
							dust13.velocity *= 3f;
						}
						num27++;
					}
				}
				else
				{
					for (int num28 = 0; num28 < 20; num28++)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						Dust dust14 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f)];
						dust14.noGravity = true;
						dust14.scale = 1.5f;
						dust14.fadeIn = 1f;
						dust14.velocity *= 3f;
					}
					Gore.NewGore(base.Center, this.velocity * 0.8f, 841, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.8f, 842, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.8f, 842, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 843, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 843, 1f);
				}
			}
			if (this.type == 516)
			{
				for (int num29 = 0; num29 < 20; num29++)
				{
					int num30 = Dust.NewDust(this.position, this.width, this.height, 6, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					Main.dust[num30].velocity *= 3f;
					Main.dust[num30].scale += Main.rand.NextFloat();
					if (Main.rand.Next(2) == 0)
					{
						num30 = Dust.NewDust(this.position, this.width, this.height, 259, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						Main.dust[num30].noGravity = true;
					}
				}
			}
			if (this.type == 519)
			{
				Rectangle hitbox2 = base.Hitbox;
				for (int num31 = 0; num31 < this.oldPos.Length; num31 += 3)
				{
					hitbox2.X = (int)this.oldPos[num31].X;
					hitbox2.Y = (int)this.oldPos[num31].Y;
					for (int num32 = 0; num32 < 5; num32++)
					{
						int num33 = Utils.SelectRandom<int>(Main.rand, new int[]
							{
								6,
								259,
								158
							});
						int num34 = Dust.NewDust(hitbox2.TopLeft(), this.width, this.height, num33, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						Main.dust[num34].alpha = 200;
						Main.dust[num34].velocity *= 2.4f;
						Main.dust[num34].scale += Main.rand.NextFloat();
					}
				}
			}
			if (this.type == 522)
			{
				Vector2 spinningpoint = new Vector2(0f, -3f).RotatedByRandom(3.1415927410125732);
				float num35 = 24f;
				Vector2 value = new Vector2(1.05f, 1f);
				for (float num36 = 0f; num36 < num35; num36 += 1f)
				{
					int num37 = Dust.NewDust(base.Center, 0, 0, 66, 0f, 0f, 0, Color.Transparent, 1f);
					Main.dust[num37].position = base.Center;
					Main.dust[num37].velocity = spinningpoint.RotatedBy((double)(6.28318548f * num36 / num35), default(Vector2)) * value * (0.8f + Main.rand.NextFloat() * 0.4f) * 2f;
					Main.dust[num37].color = Color.SkyBlue;
					Main.dust[num37].noGravity = true;
					Main.dust[num37].scale += 0.5f + Main.rand.NextFloat();
				}
			}
			else if (this.type == 426)
			{
				if (this.life > 0)
				{
					int num38 = 0;
					while ((double)num38 < dmg / (double)this.lifeMax * 50.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust dust15 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
							dust15.noGravity = true;
							dust15.scale = 1.5f;
							dust15.fadeIn = 1f;
							dust15.velocity *= 3f;
						}
						num38++;
					}
				}
				else
				{
					for (int num39 = 0; num39 < 20; num39++)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
					}
					for (int num40 = 0; num40 < 30; num40++)
					{
						int num41 = Utils.SelectRandom<int>(Main.rand, new int[]
							{
								229,
								240,
								161
							});
						Dust dust16 = Main.dust[Dust.NewDust(this.position, this.width, this.height, num41, 0f, 0f, 0, default(Color), 1f)];
						dust16.noGravity = true;
						dust16.scale = 1.25f + Main.rand.NextFloat();
						dust16.fadeIn = 0.25f;
						dust16.velocity *= 2f;
						dust16.noLight = true;
					}
					Gore.NewGore(base.Top, this.velocity * 0.7f, 799, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.8f, 800, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 801, 1f);
					if (Main.netMode != 1)
					{
						for (int num42 = 0; num42 < 3; num42++)
						{
							int num43 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 428, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num43].velocity = -Vector2.UnitY.RotatedByRandom(6.2831854820251465) * (float)Main.rand.Next(3, 6) - Vector2.UnitY * 2f;
							Main.npc[num43].netUpdate = true;
						}
					}
				}
			}
			else if (this.type == 427)
			{
				if (this.life > 0)
				{
					int num44 = 0;
					while ((double)num44 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(2) == 0)
						{
							Dust dust17 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
							dust17.noGravity = true;
							dust17.scale = 1.5f;
							dust17.fadeIn = 1f;
							dust17.velocity *= 3f;
						}
						num44++;
					}
				}
				else
				{
					for (int num45 = 0; num45 < 10; num45++)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
					}
					for (int num46 = 0; num46 < 20; num46++)
					{
						int num47 = Utils.SelectRandom<int>(Main.rand, new int[]
							{
								229,
								229,
								240
							});
						Dust dust18 = Main.dust[Dust.NewDust(this.position, this.width, this.height, num47, 0f, 0f, 0, default(Color), 1f)];
						dust18.noGravity = true;
						dust18.scale = 1.25f + Main.rand.NextFloat();
						dust18.fadeIn = 0.25f;
						dust18.velocity *= 3f;
						dust18.noLight = true;
					}
					Gore.NewGore(base.Center, this.velocity * 0.8f, 802, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 803, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 804, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.8f, 805, 1f);
				}
			}
			else if (this.type == 429)
			{
				if (this.life > 0)
				{
					int num48 = 0;
					while ((double)num48 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust dust19 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
							dust19.noGravity = true;
							dust19.scale = 1.5f;
							dust19.fadeIn = 1f;
							dust19.velocity *= 3f;
						}
						num48++;
					}
				}
				else
				{
					for (int num49 = 0; num49 < 20; num49++)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(3) == 0)
						{
							Dust dust20 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
							dust20.noGravity = true;
							dust20.scale = 1.5f;
							dust20.fadeIn = 1f;
							dust20.velocity *= 3f;
						}
					}
					Gore.NewGore(this.position, this.velocity, 808, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 809, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 809, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 810, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 810, this.scale);
					if (Main.netMode != 1)
					{
						Point point = base.Center.ToTileCoordinates();
						Point point2 = Main.player[this.target].Center.ToTileCoordinates();
						Vector2 vector = Main.player[this.target].Center - base.Center;
						int num50 = 20;
						int num51 = 3;
						int num52 = 7;
						int num53 = 2;
						int num54 = 0;
						bool flag2 = false;
						if (vector.Length() > 2000f)
						{
							flag2 = true;
						}
						while (!flag2)
						{
							if (num54 >= 100)
							{
								break;
							}
							num54++;
							int num55 = Main.rand.Next(point2.X - num50, point2.X + num50 + 1);
							int num56 = Main.rand.Next(point2.Y - num50, point2.Y - Math.Abs(num55 - point2.X) + 1);
							if ((num56 < point2.Y - num52 || num56 > point2.Y + num52 || num55 < point2.X - num52 || num55 > point2.X + num52) && (num56 < point.Y - num51 || num56 > point.Y + num51 || num55 < point.X - num51 || num55 > point.X + num51) && !Main.tile[num55, num56].nactive())
							{
								bool flag3 = true;
								if (flag3 && Main.tile[num55, num56].lava())
								{
									flag3 = false;
								}
								if (flag3 && Collision.SolidTiles(num55 - num53, num55 + num53, num56 - num53, num56 + num53))
								{
									flag3 = false;
								}
								if (flag3 && !Collision.CanHitLine(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
								{
									flag3 = false;
								}
								if (flag3)
								{
									Projectile.NewProjectile((float)(num55 * 16 + 8), (float)(num56 * 16 + 8), 0f, 0f, 578, 0, 1f, Main.myPlayer, 0f, 0f);
									break;
								}
							}
						}
					}
				}
			}
			else if (this.type == 425)
			{
				if (this.life > 0)
				{
					int num57 = 0;
					while ((double)num57 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust dust21 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
							dust21.noGravity = true;
							dust21.scale = 1.5f;
							dust21.fadeIn = 1f;
							dust21.velocity *= 3f;
						}
						num57++;
					}
				}
				else
				{
					for (int num58 = 0; num58 < 20; num58++)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(3) == 0)
						{
							Dust dust22 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
							dust22.noGravity = true;
							dust22.scale = 1.5f;
							dust22.fadeIn = 1f;
							dust22.velocity *= 3f;
						}
					}
					Gore.NewGore(this.position, this.velocity, 796, this.scale);
					Gore.NewGore(base.Center, this.velocity, 797, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 798, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 809, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 809, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 810, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 810, this.scale);
				}
			}
			else if (this.type == 428)
			{
				if (this.life > 0)
				{
					int num59 = 0;
					while ((double)num59 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						num59++;
					}
				}
				else
				{
					for (int num60 = 0; num60 < 10; num60++)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(2) == 0)
						{
							Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f);
						}
						else
						{
							Dust.NewDust(this.position, this.width, this.height, 240, 0f, 0f, 0, default(Color), 1f);
						}
					}
					Gore.NewGore(this.position, this.velocity * 0.8f, 806, 1f);
					Gore.NewGore(this.position, this.velocity * 0.8f, 807, 1f);
				}
			}
			else if (this.type == 424)
			{
				if (this.life > 0)
				{
					int num61 = 0;
					while ((double)num61 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 249, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust dust23 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 242, 0f, 0f, 0, default(Color), 1f)];
							dust23.noGravity = true;
							dust23.scale = 1.5f;
							dust23.fadeIn = 1f;
							dust23.velocity *= 3f;
						}
						num61++;
					}
				}
				else
				{
					for (int num62 = 0; num62 < 20; num62++)
					{
						Dust.NewDust(this.position, this.width, this.height, 249, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(3) == 0)
						{
							Dust dust24 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 242, 0f, 0f, 0, default(Color), 1f)];
							dust24.noGravity = true;
							dust24.scale = 1.5f;
							dust24.fadeIn = 1f;
							dust24.velocity *= 3f;
						}
					}
					Gore.NewGore(this.position, this.velocity, 793, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 794, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 794, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 795, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 795, this.scale);
				}
			}
			else if (this.type == 423)
			{
				if (this.life > 0)
				{
					int num63 = 0;
					while ((double)num63 < dmg / (double)this.lifeMax * 50.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 249, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust dust25 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 242, 0f, 0f, 0, default(Color), 1f)];
							dust25.noGravity = true;
							dust25.scale = 1.5f;
							dust25.fadeIn = 1f;
							dust25.velocity *= 3f;
						}
						num63++;
					}
				}
				else
				{
					for (int num64 = 0; num64 < 20; num64++)
					{
						Dust.NewDust(this.position, this.width, this.height, 249, (float)hitDirection, -1f, 0, default(Color), 1f);
						Dust dust26 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 242, 0f, 0f, 0, default(Color), 1f)];
						dust26.noGravity = true;
						dust26.scale = 1.5f;
						dust26.fadeIn = 1f;
						dust26.velocity *= 3f;
					}
					Gore.NewGore(base.Center, this.velocity * 0.8f, 790, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.8f, 791, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 792, 1f);
				}
			}
			else if (this.type == 421)
			{
				if (this.life > 0)
				{
					int num65 = 0;
					while ((double)num65 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 249, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(2) == 0)
						{
							Dust dust27 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 242, 0f, 0f, 0, default(Color), 1f)];
							dust27.noGravity = true;
							dust27.scale = 1.5f;
							dust27.fadeIn = 1f;
							dust27.velocity *= 3f;
						}
						num65++;
					}
				}
				else
				{
					for (int num66 = 0; num66 < 10; num66++)
					{
						Dust.NewDust(this.position, this.width, this.height, 249, (float)hitDirection, -1f, 0, default(Color), 1f);
						Dust dust28 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 242, 0f, 0f, 0, default(Color), 1f)];
						dust28.noGravity = true;
						dust28.scale = 1.5f;
						dust28.fadeIn = 1f;
						dust28.velocity *= 3f;
					}
					Gore.NewGore(base.Center, this.velocity * 0.8f, 785, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.8f, 786, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 787, 1f);
				}
			}
			else if (this.type == 420)
			{
				if (this.life > 0)
				{
					int num67 = 0;
					while ((double)num67 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 249, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(2) == 0)
						{
							Dust dust29 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 242, 0f, 0f, 0, default(Color), 1f)];
							dust29.noGravity = true;
							dust29.scale = 1.5f;
							dust29.fadeIn = 1f;
							dust29.velocity *= 3f;
						}
						num67++;
					}
				}
				else
				{
					for (int num68 = 0; num68 < 10; num68++)
					{
						Dust.NewDust(this.position, this.width, this.height, 249, (float)hitDirection, -1f, 0, default(Color), 1f);
						Dust dust30 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 242, 0f, 0f, 0, default(Color), 1f)];
						dust30.noGravity = true;
						dust30.scale = 1.5f;
						dust30.fadeIn = 1f;
						dust30.velocity *= 3f;
					}
					Gore.NewGore(base.Center, this.velocity * 0.8f, 782, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.8f, 783, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 784, 1f);
				}
			}
			else if (this.type == 406 || this.type == 405)
			{
				if (this.life > 0)
				{
					int num69 = 0;
					while ((double)num69 < 10.0 + dmg / 10.0)
					{
						int num70 = this.width / 4;
						Vector2 _ = ((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * (float)Main.rand.Next(24, 41) / 8f;
						int num71 = Dust.NewDust(base.Center - Vector2.One * (float)num70, num70 * 2, num70 * 2, 229, 0f, 0f, 0, default(Color), 1f);
						Dust dust31 = Main.dust[num71];
						Vector2 vector2 = Vector2.Normalize(dust31.position - base.Center);
						dust31.position = base.Center + vector2 * (float)num70 * this.scale - new Vector2(4f);
						if (num69 < 30)
						{
							dust31.velocity = vector2 * dust31.velocity.Length() * 2f;
						}
						else
						{
							dust31.velocity = 2f * vector2 * (float)Main.rand.Next(45, 91) / 10f;
						}
						dust31.noGravity = true;
						dust31.scale = 0.7f + Main.rand.NextFloat();
						num69++;
					}
				}
				else
				{
					for (int num72 = 0; num72 < 60; num72++)
					{
						int num73 = this.width / 4;
						Vector2 _ = ((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * (float)Main.rand.Next(24, 41) / 8f;
						int num74 = Dust.NewDust(base.Center - Vector2.One * (float)num73, num73 * 2, num73 * 2, 229, 0f, 0f, 0, default(Color), 1f);
						Dust dust32 = Main.dust[num74];
						Vector2 vector3 = Vector2.Normalize(dust32.position - base.Center);
						dust32.position = base.Center + vector3 * (float)num73 * this.scale - new Vector2(4f);
						if (num72 < 30)
						{
							dust32.velocity = vector3 * dust32.velocity.Length() * 2f;
						}
						else
						{
							dust32.velocity = 2f * vector3 * (float)Main.rand.Next(45, 91) / 10f;
						}
						dust32.noGravity = true;
						dust32.scale = 0.7f;
					}
					if (this.type == 405)
					{
						int num75 = NPC.CountNPCS(406) + NPC.CountNPCS(405);
						int num76 = 4;
						if (num75 >= 4)
						{
							num76 = 3;
						}
						if (num75 >= 7)
						{
							num76 = 2;
						}
						if (num75 >= 10)
						{
							num76 = 1;
						}
						for (int num77 = 0; num77 < num76; num77++)
						{
							Vector2 velocity = Vector2.UnitY.RotatedByRandom(6.2831854820251465) * (3f + Main.rand.NextFloat() * 4f);
							int num78 = NPC.NewNPC((int)base.Center.X, (int)base.Bottom.Y, 406, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num78].velocity = velocity;
						}
					}
				}
			}
			else if (this.type == 409)
			{
				if (this.life > 0)
				{
					int num79 = 0;
					while ((double)num79 < dmg / (double)this.lifeMax * 50.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 17, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust dust33 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
							dust33.noGravity = true;
						}
						num79++;
					}
				}
				else
				{
					for (int num80 = 0; num80 < 20; num80++)
					{
						Dust.NewDust(this.position, this.width, this.height, 17, (float)hitDirection, -1f, 0, default(Color), 1f);
						Dust dust34 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
						dust34.noGravity = true;
						dust34.velocity *= 3f;
					}
					Gore.NewGore(base.Center, this.velocity * 0.8f, 775, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.8f, 776, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 777, 1f);
				}
			}
			else if (this.type == 410)
			{
				if (this.life > 0)
				{
					int num81 = 0;
					while ((double)num81 < dmg / (double)this.lifeMax * 10.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 17, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust dust35 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
							dust35.noGravity = true;
						}
						num81++;
					}
				}
				else
				{
					for (int num82 = 0; num82 < 5; num82++)
					{
						Dust.NewDust(this.position, this.width, this.height, 17, (float)hitDirection, -1f, 0, default(Color), 1f);
						Dust dust36 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
						dust36.noGravity = true;
						dust36.velocity *= 3f;
					}
				}
			}
			else if (this.type == 407)
			{
				if (this.life > 0)
				{
					int num83 = 0;
					while ((double)num83 < dmg / (double)this.lifeMax * 50.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 17, (float)hitDirection, -1f, 0, Color.Transparent, 0.75f);
						if (Main.rand.Next(2) == 0)
						{
							Dust dust37 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
							dust37.noGravity = true;
						}
						num83++;
					}
				}
				else
				{
					for (int num84 = 0; num84 < 20; num84++)
					{
						if (Main.rand.Next(3) != 0)
						{
							Dust.NewDust(this.position, this.width, this.height, 17, (float)hitDirection, -1f, 0, default(Color), 1f);
						}
						Dust dust38 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
						dust38.noGravity = true;
						dust38.velocity *= 3f;
					}
					Gore.NewGore(base.Top, this.velocity * 0.8f, 778, 1f);
					Gore.NewGore(base.Top, this.velocity * 0.8f, 779, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 780, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 781, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 780, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 781, 1f);
				}
			}
			else if (this.type == 402)
			{
				if (this.life > 0)
				{
					int num85 = 0;
					while ((double)num85 < dmg / (double)this.lifeMax * 3.0)
					{
						if (Main.rand.Next(3) == 0)
						{
							Dust.NewDust(this.position, this.width, this.height, 17, (float)hitDirection, -1f, 0, Color.Transparent, 0.75f);
						}
						if (Main.rand.Next(2) == 0)
						{
							Dust dust39 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
							dust39.noGravity = true;
						}
						for (int num86 = 0; num86 < this.oldPos.Length; num86++)
						{
							if (Main.rand.Next(4) == 0)
							{
								if (this.oldPos[num86] == Vector2.Zero)
								{
									break;
								}
								if (Main.rand.Next(3) == 0)
								{
									Dust.NewDust(this.oldPos[num86], this.width, this.height, 17, (float)hitDirection, -1f, 0, Color.Transparent, 0.75f);
								}
								if (Main.rand.Next(2) == 0)
								{
									Dust dust40 = Main.dust[Dust.NewDust(this.oldPos[num86], this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
									dust40.noGravity = true;
								}
							}
						}
						num85++;
					}
				}
				else
				{
					for (int num87 = 0; num87 < 5; num87++)
					{
						if (Main.rand.Next(3) == 0)
						{
							Dust.NewDust(this.position, this.width, this.height, 17, (float)hitDirection, -1f, 0, default(Color), 1f);
						}
						Dust dust41 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
						dust41.noGravity = true;
						dust41.velocity *= 3f;
					}
					for (int num88 = 0; num88 < this.oldPos.Length; num88++)
					{
						if (Main.rand.Next(4) == 0)
						{
							if (this.oldPos[num88] == Vector2.Zero)
							{
								break;
							}
							for (int num89 = 0; num89 < 2; num89++)
							{
								if (Main.rand.Next(3) == 0)
								{
									Dust.NewDust(this.oldPos[num88], this.width, this.height, 17, (float)hitDirection, -1f, 0, default(Color), 1f);
								}
								Dust dust42 = Main.dust[Dust.NewDust(this.oldPos[num88], this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
								dust42.noGravity = true;
								dust42.velocity *= 3f;
							}
						}
					}
				}
			}
			else if (this.type == 411)
			{
				if (this.life > 0)
				{
					int num90 = 0;
					while ((double)num90 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 17, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust dust43 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
							dust43.noGravity = true;
						}
						num90++;
					}
				}
				else
				{
					for (int num91 = 0; num91 < 20; num91++)
					{
						Dust.NewDust(this.position, this.width, this.height, 17, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(2) == 0)
						{
							Dust dust44 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
							dust44.noGravity = true;
						}
					}
					Gore.NewGore(this.position, this.velocity, 772, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 773, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 773, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 774, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 774, this.scale);
				}
			}
			else if (this.type == 491)
			{
				if (this.life <= 0)
				{
					Vector2 value2 = base.Center - new Vector2(60f);
					Vector2 vector4 = new Vector2((float)((this.spriteDirection == 1) ? -1 : 1), 0f).RotatedBy((double)this.rotation, default(Vector2));
					Gore.NewGore(value2 + vector4 * (float)(this.width / 2), this.velocity, 858, this.scale);
					Gore.NewGore(value2 + vector4 * (float)(this.width / 3), this.velocity, 857, this.scale);
					for (int num92 = -1; num92 < 2; num92++)
					{
						Gore.NewGore(value2 + vector4 * ((float)this.width * (0.45f + (float)num92 * 0.1f)), this.velocity, 859, this.scale);
						Gore.NewGore(value2 + vector4 * ((float)this.width * (0.4f + (float)num92 * 0.1f)), this.velocity, 859, this.scale);
						Gore.NewGore(value2 + vector4 * ((float)this.width * (0.35f + (float)num92 * 0.1f)), this.velocity, 859, this.scale);
					}
					for (int num93 = -1; num93 < 2; num93++)
					{
						Gore.NewGore(value2 + vector4 * ((float)this.width * 0.35f) - new Vector2(0f, 200f) + Utils.RandomVector2(Main.rand, -40f, 40f), this.velocity, Utils.SelectRandom<int>(Main.rand, new int[]
								{
									860,
									892,
									893
								}), this.scale);
						Gore.NewGore(value2 + vector4 * ((float)this.width * 0.15f) - new Vector2(0f, 200f) + Utils.RandomVector2(Main.rand, -40f, 40f), this.velocity, Utils.SelectRandom<int>(Main.rand, new int[]
								{
									860,
									892,
									893
								}), this.scale);
						Gore.NewGore(value2 + vector4 * ((float)this.width * -0.35f) - new Vector2(0f, 200f) + Utils.RandomVector2(Main.rand, -40f, 40f), this.velocity, Utils.SelectRandom<int>(Main.rand, new int[]
								{
									860,
									892,
									893
								}), this.scale);
						Gore.NewGore(value2 + vector4 * ((float)this.width * -0.15f) - new Vector2(0f, 300f) + Utils.RandomVector2(Main.rand, -40f, 40f), this.velocity, Utils.SelectRandom<int>(Main.rand, new int[]
								{
									860,
									892,
									893
								}), this.scale);
						Gore.NewGore(value2 + vector4 * ((float)this.width * -0.15f) - new Vector2(0f, 300f) + Utils.RandomVector2(Main.rand, -40f, 40f), this.velocity, Utils.SelectRandom<int>(Main.rand, new int[]
								{
									860,
									892,
									893
								}), this.scale);
					}
					for (int num94 = 0; num94 < 2; num94++)
					{
						Gore.NewGore(value2 + vector4 * ((float)this.width * 0.15f) - new Vector2(0f, (float)(160 + 60 * num94)), this.velocity, 855, this.scale);
						Gore.NewGore(value2 + vector4 * ((float)this.width * -0.15f) - new Vector2(0f, (float)(160 + 60 * num94)), this.velocity, 855, this.scale);
					}
					for (int num95 = -1; num95 < 2; num95++)
					{
						Gore.NewGore(value2 + vector4 * ((float)this.width * (0.25f + (float)num95 * 0.1f)) - new Vector2(0f, (float)(20 + 40 * num95)), this.velocity, 854, this.scale);
						Gore.NewGore(value2 + vector4 * ((float)this.width * (-0.45f + (float)num95 * 0.1f)) - new Vector2(0f, (float)(20 + 40 * num95)), this.velocity, 853, this.scale);
						Gore.NewGore(value2 + vector4 * ((float)this.width * (0.05f + (float)num95 * 0.1f)) - new Vector2(0f, (float)(20 + 40 * num95)), this.velocity, 856, this.scale);
					}
					for (int num96 = 0; num96 < 30; num96++)
					{
						int num97 = Main.rand.Next(861, 863);
						int num98 = Gore.NewGore(base.Center - new Vector2(60f), Vector2.Zero, num97, 1f);
						Main.gore[num98].alpha = 100;
						Main.gore[num98].velocity = Vector2.Transform(new Vector2(4f, 0f), Matrix.CreateRotationZ((float)(Main.rand.NextDouble() * 6.2831854820251465)));
						Main.gore[num98].position = new Vector2(this.position.X - 20f + ((float)this.width + 40f) * Main.rand.NextFloat(), this.position.Y - 240f + (float)(this.height + 240 - 20) * Main.rand.NextFloat());
					}
					for (int num99 = 0; num99 < 120; num99++)
					{
						int num100 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
						Main.dust[num100].noGravity = true;
						Main.dust[num100].velocity *= 5f;
						num100 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num100].velocity *= 4f;
						Main.dust[num100].noGravity = true;
					}
					if (Main.netMode != 1)
					{
						for (int num101 = 0; num101 < 4; num101++)
						{
							float num102 = (float)(num101 < 2).ToDirectionInt() * (0.3926991f + 0.7853982f * Main.rand.NextFloat());
							Vector2 vector5 = new Vector2(0f, -Main.rand.NextFloat() * 0.5f - 0.5f).RotatedBy((double)num102, default(Vector2)) * 6f;
							Projectile.NewProjectile(base.Center.X, base.Center.Y, vector5.X, vector5.Y, 594, 0, 0f, Main.myPlayer, 0f, 0f);
						}
					}
				}
			}
			else if (this.type == 492)
			{
				if (this.life <= 0)
				{
					for (int num103 = 0; num103 < 7; num103++)
					{
						int num104 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num104].velocity *= 1.4f;
					}
					for (int num105 = 0; num105 < 10; num105++)
					{
						int num106 = Main.rand.Next(61, 64);
						int num107 = Gore.NewGore(this.position, Vector2.Zero, num106, 1f);
						Main.gore[num107].alpha = 100;
						Main.gore[num107].velocity = Vector2.Transform(new Vector2(1f, 0f), Matrix.CreateRotationZ((float)(Main.rand.NextDouble() * 6.2831854820251465)));
					}
				}
			}
			else if (this.type >= 524 && this.type <= 527)
			{
				int num108 = 0;
				int num109 = 5;
				int num110 = 863;
				if (this.type == 525)
				{
					num108 = 75;
					num110 = 867;
				}
				else if (this.type == 526)
				{
					num108 = 170;
					num110 = 871;
				}
				else if (this.type == 527)
				{
					num108 = 67;
					num110 = 879;
				}
				if (this.life > 0)
				{
					int num111 = 0;
					while ((double)num111 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, num109, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(4) == 0 && num108 > 0)
						{
							Dust dust45 = Main.dust[Dust.NewDust(this.position, this.width, this.height, num108, 0f, 0f, 0, default(Color), 1f)];
							dust45.noGravity = true;
							dust45.scale = 1.5f;
							dust45.fadeIn = 1f;
							dust45.velocity *= 3f;
						}
						num111++;
					}
				}
				else
				{
					for (int num112 = 0; num112 < 20; num112++)
					{
						Dust.NewDust(this.position, this.width, this.height, num109, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(3) == 0 && num108 > 0)
						{
							Dust dust46 = Main.dust[Dust.NewDust(this.position, this.width, this.height, num108, 0f, 0f, 0, default(Color), 1f)];
							dust46.noGravity = true;
							dust46.scale = 1.5f;
							dust46.fadeIn = 1f;
							dust46.velocity *= 3f;
						}
					}
					Gore.NewGore(this.position, this.velocity, num110, this.scale);
					Gore.NewGore(this.position, this.velocity, num110 + 1, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, num110 + 2, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, num110 + 2, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, num110 + 3, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, num110 + 3, this.scale);
				}
			}
			else if (this.type >= 528 && this.type <= 529)
			{
				int num113 = 5;
				int num114 = 875;
				if (this.type == 529)
				{
					num114 = 876;
				}
				if (this.life > 0)
				{
					int num115 = 0;
					while ((double)num115 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, num113, (float)hitDirection, -1f, 0, default(Color), 1f);
						num115++;
					}
				}
				else
				{
					for (int num116 = 0; num116 < 20; num116++)
					{
						Dust.NewDust(this.position, this.width, this.height, num113, (float)hitDirection, -1f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, num114, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 877, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 877, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 878, this.scale);
				}
			}
			else if (this.type == 530 || this.type == 531)
			{
				if (this.life > 0)
				{
					int num117 = 0;
					while ((double)num117 < dmg / (double)this.lifeMax * 30.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 250, (float)hitDirection, -1f, 100, default(Color), 1f);
						num117++;
					}
				}
				else
				{
					for (int num118 = 0; num118 < 20; num118++)
					{
						Dust.NewDust(this.position, this.width, this.height, 250, 2.5f * (float)hitDirection, -2.5f, 100, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 883, 1f);
					Gore.NewGore(this.position, this.velocity, 884, 1f);
					Gore.NewGore(this.position, this.velocity, 885, 1f);
					Gore.NewGore(this.position, this.velocity, 886, 1f);
					Gore.NewGore(this.position, this.velocity, 887, 1f);
				}
			}
			else if (this.type == 532)
			{
				if (this.life > 0)
				{
					int num119 = 0;
					while ((double)num119 < dmg / (double)this.lifeMax * 50.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 100, default(Color), 1f);
						num119++;
					}
				}
				else
				{
					for (int num120 = 0; num120 < 50; num120++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 100, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 888, 1f);
					Gore.NewGore(this.position, this.velocity, 889, 1f);
					Gore.NewGore(this.position, this.velocity, 890, 1f);
					Gore.NewGore(this.position, this.velocity, 891, 1f);
				}
			}
			else if (this.type == 533)
			{
				if (this.life > 0)
				{
					int num121 = 0;
					while ((double)num121 < dmg / (double)this.lifeMax * 50.0)
					{
						int num122 = Dust.NewDust(this.position, this.width, this.height, 27, 0f, 0f, 50, default(Color), 1.5f);
						Main.dust[num122].velocity *= 2f;
						Main.dust[num122].noGravity = true;
						num121++;
					}
				}
				else
				{
					for (int num123 = 0; num123 < 40; num123++)
					{
						int num124 = Dust.NewDust(this.position, this.width, this.height, 27, 0f, 0f, 50, default(Color), 1.5f);
						Main.dust[num124].velocity *= 2f;
						Main.dust[num124].noGravity = true;
						Main.dust[num124].fadeIn = 1f;
					}
				}
			}
			else if (this.type == 460)
			{
				if (this.life > 0)
				{
					int num125 = 0;
					while ((double)num125 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num125++;
					}
				}
				else
				{
					for (int num126 = 0; num126 < 50; num126++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 643, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 645, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 644, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 646, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 646, this.scale);
				}
			}
			else if (this.type == 477)
			{
				if (this.life > 0)
				{
					int num127 = 0;
					while ((double)num127 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 237, (float)hitDirection, -1f, 0, default(Color), 1f);
						num127++;
					}
				}
				else
				{
					for (int num128 = 0; num128 < 50; num128++)
					{
						Dust.NewDust(this.position, this.width, this.height, 237, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 687, this.scale);
					Gore.NewGore(this.position, this.velocity, 688, this.scale);
					Gore.NewGore(this.position, this.velocity, 689, this.scale);
					Gore.NewGore(this.position, this.velocity, 690, this.scale);
					Gore.NewGore(this.position, this.velocity, 691, this.scale);
				}
			}
			else if (this.type == 479)
			{
				if (this.life > 0)
				{
					int num129 = 0;
					while ((double)num129 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 237, (float)hitDirection, -1f, 0, default(Color), 1f);
						num129++;
					}
				}
				else
				{
					for (int num130 = 0; num130 < 50; num130++)
					{
						Dust.NewDust(this.position, this.width, this.height, 237, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 681, this.scale);
					Gore.NewGore(this.position, this.velocity, 682, this.scale);
					Gore.NewGore(this.position, this.velocity, 683, this.scale);
				}
			}
			else if (this.type == 478)
			{
				if (this.life > 0)
				{
					for (int num131 = 0; num131 < 10; num131++)
					{
						int num132 = Dust.NewDust(this.position, this.width, this.height, 238, (float)hitDirection, -1f, 0, default(Color), 1f);
						Main.dust[num132].noGravity = true;
					}
				}
				else
				{
					for (int num133 = 0; num133 < 50; num133++)
					{
						Dust.NewDust(this.position, this.width, this.height, 237 + Main.rand.Next(2), 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 684, this.scale);
					Gore.NewGore(this.position, this.velocity, 685, this.scale);
					Gore.NewGore(this.position, this.velocity, 686, this.scale);
					Gore.NewGore(this.position, this.velocity, 684 + Main.rand.Next(3), this.scale);
				}
			}
			else if (this.type == 466)
			{
				if (this.life > 0)
				{
					int num134 = 0;
					while ((double)num134 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num134++;
					}
				}
				else
				{
					for (int num135 = 0; num135 < 50; num135++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 656, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 657, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 659, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 658, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 658, this.scale);
				}
			}
			else if (this.type == 468)
			{
				if (this.life > 0)
				{
					int num136 = 0;
					while ((double)num136 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num136++;
					}
				}
				else
				{
					for (int num137 = 0; num137 < 50; num137++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 662, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 663, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 663, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 664, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 664, this.scale);
				}
			}
			else if (this.type == 469)
			{
				if (this.life > 0)
				{
					int num138 = 0;
					while ((double)num138 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num138++;
					}
				}
				else
				{
					for (int num139 = 0; num139 < 50; num139++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 665, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 666, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 666, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 667, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 667, this.scale);
				}
			}
			else if (this.type == 463)
			{
				if (this.life > 0)
				{
					int num140 = 0;
					while ((double)num140 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num140++;
					}
				}
				else
				{
					for (int num141 = 0; num141 < 50; num141++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 653, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 654, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 654, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 655, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 655, this.scale);
				}
			}
			else if (this.type == 461)
			{
				if (this.life > 0)
				{
					int num142 = 0;
					while ((double)num142 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num142++;
					}
				}
				else
				{
					for (int num143 = 0; num143 < 50; num143++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 647, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 648, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 648, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 649, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 649, this.scale);
				}
			}
			else if (this.type == 462)
			{
				if (this.life > 0)
				{
					int num144 = 0;
					while ((double)num144 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num144++;
					}
				}
				else
				{
					for (int num145 = 0; num145 < 50; num145++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 650, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 651, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 651, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 652, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 652, this.scale);
				}
			}
			else if (this.type == 379 || this.type == 438)
			{
				if (this.life > 0)
				{
					int num146 = 0;
					while ((double)num146 < dmg / (double)(this.lifeMax * 50))
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num146++;
					}
				}
				else
				{
					for (int num147 = 0; num147 < 30; num147++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 900, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 901, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 901, this.scale);
				}
			}
			else if (this.type == 439)
			{
				if (this.life > 0)
				{
					int num148 = 0;
					while ((double)num148 < dmg / (double)this.lifeMax * 100.0)
					{
						int num149 = Dust.NewDust(this.position, this.width, this.height, 5, 0f, 0f, 0, default(Color), 1.5f);
						Main.dust[num149].velocity *= 1.5f;
						Main.dust[num149].noGravity = true;
						num148++;
					}
				}
				else
				{
					for (int num150 = 0; num150 < 30; num150++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					for (int num151 = 0; num151 < 10; num151++)
					{
						int num152 = Dust.NewDust(this.position, this.width, this.height, 16, 0f, 0f, 0, default(Color), 1.5f);
						Main.dust[num152].velocity *= 2f;
						Main.dust[num152].noGravity = true;
					}
					int num153 = Main.rand.Next(1, 4);
					for (int num154 = 0; num154 < num153; num154++)
					{
						int num155 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), Main.rand.Next(11, 14), this.scale);
						Main.gore[num155].velocity *= 0.8f;
					}
					Gore.NewGore(this.position, this.velocity, 902, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 10f), this.velocity, 903, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 901, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 901, this.scale);
				}
			}
			else if (this.type == 440)
			{
				if (this.life <= 0)
				{
					for (int num156 = 0; num156 < 10; num156++)
					{
						int num157 = Dust.NewDust(this.position, this.width, this.height, 16, 0f, 0f, 0, default(Color), 1.5f);
						Main.dust[num157].velocity *= 2f;
						Main.dust[num157].noGravity = true;
					}
					int num158 = Main.rand.Next(1, 4);
					for (int num159 = 0; num159 < num158; num159++)
					{
						int num160 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), Main.rand.Next(11, 14), this.scale);
						Main.gore[num160].velocity *= 0.8f;
					}
				}
			}
			else if (this.type >= 454 && this.type <= 459)
			{
				if (this.life > 0)
				{
					int num161 = 0;
					while ((double)num161 < dmg / (double)this.lifeMax * 50.0)
					{
						int num162 = Dust.NewDust(this.position, this.width, this.height, 16, 0f, 0f, 0, default(Color), 1.5f);
						Main.dust[num162].velocity *= 1.5f;
						Main.dust[num162].noGravity = true;
						num161++;
					}
				}
				else
				{
					for (int num163 = 0; num163 < 10; num163++)
					{
						int num164 = Dust.NewDust(this.position, this.width, this.height, 16, 0f, 0f, 0, default(Color), 1.5f);
						Main.dust[num164].velocity *= 2f;
						Main.dust[num164].noGravity = true;
					}
					int num165 = Main.rand.Next(1, 4);
					for (int num166 = 0; num166 < num165; num166++)
					{
						int num167 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), Main.rand.Next(11, 14), this.scale);
						Main.gore[num167].velocity *= 0.8f;
					}
				}
			}
			if (this.type == 372 || this.type == 373)
			{
				if (this.life > 0)
				{
					int num168 = 0;
					while ((double)num168 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num168++;
					}
				}
				else
				{
					for (int num169 = 0; num169 < 75; num169++)
					{
						int num170 = Dust.NewDust(base.Center - Vector2.One * 25f, 50, 50, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						Main.dust[num170].velocity /= 2f;
					}
					Gore.NewGore(base.Center, this.velocity * 0.8f, 583, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.8f, 577, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 578, 1f);
					Gore.NewGore(base.Center, this.velocity, 579, 1f);
				}
			}
			if (this.type == 371)
			{
				Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 3);
				if (this.life <= 0)
				{
					Vector2 arg_7814_0 = base.Center;
					for (int num171 = 0; num171 < 60; num171++)
					{
						int num172 = 25;
						Vector2 _ = ((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * (float)Main.rand.Next(24, 41) / 8f;
						int num173 = Dust.NewDust(base.Center - Vector2.One * (float)num172, num172 * 2, num172 * 2, 212, 0f, 0f, 0, default(Color), 1f);
						Dust dust47 = Main.dust[num173];
						Vector2 vector6 = Vector2.Normalize(dust47.position - base.Center);
						dust47.position = base.Center + vector6 * 25f * this.scale;
						if (num171 < 30)
						{
							dust47.velocity = vector6 * dust47.velocity.Length();
						}
						else
						{
							dust47.velocity = vector6 * (float)Main.rand.Next(45, 91) / 10f;
						}
						dust47.color = Main.hslToRgb((float)(0.40000000596046448 + Main.rand.NextDouble() * 0.20000000298023224), 0.9f, 0.5f);
						dust47.color = Color.Lerp(dust47.color, Color.White, 0.3f);
						dust47.noGravity = true;
						dust47.scale = 0.7f;
					}
				}
			}
			if (this.type == 370)
			{
				if (this.life > 0)
				{
					int num174 = 0;
					while ((double)num174 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num174++;
					}
				}
				else
				{
					for (int num175 = 0; num175 < 150; num175++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					Gore.NewGore(base.Center - Vector2.UnitX * 20f * (float)this.direction, this.velocity, 576, this.scale);
					Gore.NewGore(base.Center - Vector2.UnitY * 30f, this.velocity, 574, this.scale);
					Gore.NewGore(base.Center, this.velocity, 575, this.scale);
					Gore.NewGore(base.Center + Vector2.UnitX * 20f * (float)this.direction, this.velocity, 573, this.scale);
					Gore.NewGore(base.Center - Vector2.UnitY * 30f, this.velocity, 574, this.scale);
					Gore.NewGore(base.Center, this.velocity, 575, this.scale);
				}
			}
			else if (this.type == 381)
			{
				if (this.life > 0)
				{
					int num176 = 0;
					while ((double)num176 < dmg / (double)(this.lifeMax * 50))
					{
						Dust.NewDust(this.position, this.width, this.height, 227, (float)hitDirection, -1f, 0, default(Color), 1f);
						num176++;
					}
				}
				else
				{
					for (int num177 = 0; num177 < 30; num177++)
					{
						Dust.NewDust(this.position, this.width, this.height, 227, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 587, this.scale);
					Gore.NewGore(this.position, this.velocity, 590, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 588, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 589, this.scale);
				}
			}
			else if (this.type == 382 || this.type == 390)
			{
				if (this.life > 0)
				{
					int num178 = 0;
					while ((double)num178 < dmg / (double)(this.lifeMax * 50))
					{
						Dust.NewDust(this.position, this.width, this.height, 227, (float)hitDirection, -1f, 0, default(Color), 1f);
						num178++;
					}
				}
				else
				{
					for (int num179 = 0; num179 < 30; num179++)
					{
						Dust.NewDust(this.position, this.width, this.height, 227, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 591, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 592, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 593, this.scale);
				}
			}
			else if (this.type == 383)
			{
				if (this.life > 0)
				{
					int num180 = 0;
					while ((double)num180 < dmg / (double)(this.lifeMax * 50))
					{
						Dust.NewDust(this.position, this.width, this.height, 227, (float)hitDirection, -1f, 0, default(Color), 1f);
						num180++;
					}
				}
				else
				{
					for (int num181 = 0; num181 < 30; num181++)
					{
						Dust.NewDust(this.position, this.width, this.height, 227, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 594, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 595, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 596, this.scale);
				}
			}
			else if (this.type == 384)
			{
				if (this.life > 0)
				{
					int num182 = 0;
					while ((double)num182 < dmg / (double)this.lifeMax * 50.0)
					{
						int num183 = Dust.NewDust(this.position, this.width, this.height, 226, (float)(-1 * hitDirection), -1f, 0, default(Color), 1f);
						Main.dust[num183].position = Vector2.Lerp(Main.dust[num183].position, base.Center, 0.25f);
						Main.dust[num183].scale = 0.5f;
						num182++;
					}
				}
				else
				{
					for (int num184 = 0; num184 < 70; num184++)
					{
						int num185 = Dust.NewDust(this.position, this.width, this.height, 226, -2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						Main.dust[num185].scale = 0.5f;
					}
				}
			}
			else if (this.type == 385)
			{
				if (this.life > 0)
				{
					int num186 = 0;
					while ((double)num186 < dmg / (double)(this.lifeMax * 50))
					{
						Dust.NewDust(this.position, this.width, this.height, 227, (float)hitDirection, -1f, 0, default(Color), 1f);
						num186++;
					}
				}
				else
				{
					for (int num187 = 0; num187 < 30; num187++)
					{
						Dust.NewDust(this.position, this.width, this.height, 227, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 597, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 598, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 599, this.scale);
				}
			}
			else if (this.type == 386)
			{
				if (this.life > 0)
				{
					int num188 = 0;
					while ((double)num188 < dmg / (double)(this.lifeMax * 50))
					{
						Dust.NewDust(this.position, this.width, this.height, 227, (float)hitDirection, -1f, 0, default(Color), 1f);
						num188++;
					}
				}
				else
				{
					for (int num189 = 0; num189 < 30; num189++)
					{
						Dust.NewDust(this.position, this.width, this.height, 227, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 600, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 601, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 602, this.scale);
				}
			}
			if (this.type == 387)
			{
				if (this.life > 0)
				{
					int num190 = 0;
					while ((double)num190 < dmg / (double)this.lifeMax * 20.0)
					{
						int num191 = Dust.NewDust(this.position, this.width, this.height, 226, (float)(-1 * hitDirection), -1f, 0, default(Color), 1f);
						Main.dust[num191].position = Vector2.Lerp(Main.dust[num191].position, base.Center, 0.25f);
						Main.dust[num191].scale = 0.5f;
						num190++;
					}
				}
				else
				{
					for (int num192 = 0; num192 < 30; num192++)
					{
						int num193 = Dust.NewDust(this.position, this.width, this.height, 226, -1.5f * (float)hitDirection, -1.5f, 0, default(Color), 1f);
						Main.dust[num193].scale = 0.5f;
					}
					Gore.NewGore(this.position, this.velocity, 603, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 603, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 604, this.scale);
				}
			}
			if (this.type == 520)
			{
				if (this.life > 0)
				{
					int num194 = 0;
					while ((double)num194 < dmg / (double)this.lifeMax * 20.0)
					{
						int num195 = Dust.NewDust(this.position, this.width, this.height, 226, (float)(-1 * hitDirection), -1f, 0, default(Color), 1f);
						Main.dust[num195].position = Vector2.Lerp(Main.dust[num195].position, base.Center, 0.25f);
						Main.dust[num195].scale = 0.5f;
						num194++;
					}
				}
				else
				{
					for (int num196 = 0; num196 < 30; num196++)
					{
						int num197 = Dust.NewDust(this.position, this.width, this.height, 226, -1.5f * (float)hitDirection, -1.5f, 0, default(Color), 1f);
						Main.dust[num197].scale = 0.5f;
					}
					Gore.NewGore(this.position, this.velocity, 851, this.scale);
					Gore.NewGore(this.position, this.velocity, 852, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 80f), this.velocity, 848, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 80f), this.velocity, 849, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 80f), this.velocity, 850, this.scale);
				}
			}
			else if (this.type == 389)
			{
				if (this.life > 0)
				{
					int num198 = 0;
					while ((double)num198 < dmg / (double)(this.lifeMax * 50))
					{
						Dust.NewDust(this.position, this.width, this.height, 227, (float)hitDirection, -1f, 0, default(Color), 1f);
						num198++;
					}
				}
				else
				{
					for (int num199 = 0; num199 < 30; num199++)
					{
						Dust.NewDust(this.position, this.width, this.height, 227, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 904, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 905, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 906, this.scale);
				}
			}
			else if (this.type == 388)
			{
				if (this.life > 0)
				{
					int num200 = 0;
					while ((double)num200 < dmg / (double)(this.lifeMax * 50))
					{
						int num201 = Dust.NewDust(this.position, this.width, this.height, 226, (float)(-1 * hitDirection), -1f, 0, default(Color), 1f);
						Main.dust[num201].position = Vector2.Lerp(Main.dust[num201].position, base.Center, 0.25f);
						Main.dust[num201].scale = 0.5f;
						num200++;
					}
				}
				else
				{
					for (int num202 = 0; num202 < 10; num202++)
					{
						int num203 = Dust.NewDust(this.position, this.width, this.height, 226, -2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						Main.dust[num203].scale = 0.5f;
					}
					Vector2 velocity2 = this.velocity;
					if (this.ai[0] == 3f)
					{
						velocity2 = this.rotation.ToRotationVector2();
						if (this.spriteDirection == 1)
						{
							velocity2.X *= -1f;
						}
						velocity2 *= 5f;
					}
					Gore.NewGore(base.Center - new Vector2(10f, 10f), velocity2, 605, this.scale);
					Gore.NewGore(base.Center - new Vector2(10f, 10f), velocity2, 606, this.scale);
				}
			}
			else if (this.type == 399)
			{
				if (this.life > 0)
				{
					int num204 = 0;
					while ((double)num204 < dmg / (double)(this.lifeMax * 50))
					{
						int num205 = Dust.NewDust(this.position, this.width, this.height, 226, (float)(-1 * hitDirection), -1f, 0, default(Color), 1f);
						Main.dust[num205].position = Vector2.Lerp(Main.dust[num205].position, base.Center, 0.25f);
						Main.dust[num205].scale = 0.5f;
						num204++;
					}
				}
				else
				{
					for (int num206 = 0; num206 < 10; num206++)
					{
						int num207 = Dust.NewDust(this.position, this.width, this.height, 226, -2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						Main.dust[num207].scale = 0.5f;
					}
					Vector2 velocity3 = this.velocity;
					if (this.ai[0] == 3f)
					{
						velocity3 = this.rotation.ToRotationVector2();
						if (this.spriteDirection == 1)
						{
							velocity3.X *= -1f;
						}
						velocity3 *= 5f;
					}
					Gore.NewGore(base.Center - new Vector2(10f, 10f), velocity3, 898, this.scale);
					Gore.NewGore(base.Center - new Vector2(10f, 10f), velocity3, 899, this.scale);
				}
			}
			else if (this.type == 391)
			{
				if (this.life > 0)
				{
					int num208 = 0;
					while ((double)num208 < dmg / (double)(this.lifeMax * 50))
					{
						Dust.NewDust(this.position, this.width, this.height, 227, (float)hitDirection, -1f, 0, default(Color), 1f);
						num208++;
					}
				}
				else
				{
					for (int num209 = 0; num209 < 30; num209++)
					{
						Dust.NewDust(this.position, this.width, this.height, 227, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position + Vector2.UnitX * (float)this.width / 2f, this.velocity, 607, this.scale);
					Gore.NewGore(this.position + Vector2.UnitX * (float)this.width / 2f, this.velocity, 608, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 609, this.scale);
				}
			}
			if (this.type == 392 || this.type == 394 || this.type == 393 || this.type == 395)
			{
				if (this.life > 0)
				{
					int num210 = 0;
					while ((double)num210 < dmg / (double)this.lifeMax * 20.0)
					{
						int num211 = Dust.NewDust(this.position, this.width, this.height, 228, (float)(-1 * hitDirection), -1f, 0, default(Color), 1f);
						Main.dust[num211].position = Vector2.Lerp(Main.dust[num211].position, base.Center, 0.25f);
						Main.dust[num211].scale = 0.5f;
						num210++;
					}
				}
				else
				{
					for (int num212 = 0; num212 < 30; num212++)
					{
						int num213 = Dust.NewDust(this.position, this.width, this.height, 228, -1.5f * (float)hitDirection, -1.5f, 0, default(Color), 1f);
						Main.dust[num213].scale = 0.5f;
					}
					Vector2 center = base.Center;
					if (this.type == 395)
					{
						Gore.NewGore(center + new Vector2(-20f, -10f), this.velocity, 610, this.scale);
						Gore.NewGore(center + new Vector2(20f, -10f), this.velocity, 611, this.scale);
						Gore.NewGore(center + new Vector2(-50f, 0f), this.velocity, 612, this.scale);
						Gore.NewGore(center + new Vector2(50f, 0f), this.velocity, 613, this.scale);
						Gore.NewGore(center + new Vector2(-60f, 10f), this.velocity, 614, this.scale);
						Gore.NewGore(center + new Vector2(0f, 30f), this.velocity, 615, this.scale);
					}
					if (this.type == 393)
					{
						Gore.NewGore(center, this.velocity, 616, this.scale);
					}
					if (this.type == 394)
					{
						Gore.NewGore(center, this.velocity, 617, this.scale);
					}
				}
			}
			else if (this.type == 482 || this.type == 483)
			{
				if (this.life > 0)
				{
					int num214 = 0;
					while ((double)num214 < dmg / (double)(this.lifeMax * 50))
					{
						Dust.NewDust(this.position, this.width, this.height, 240, (float)hitDirection, -1f, 0, default(Color), 1f);
						num214++;
					}
				}
				else
				{
					for (int num215 = 0; num215 < 30; num215++)
					{
						Dust.NewDust(this.position, this.width, this.height, 240, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					if (this.type == 482)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 718, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 10f), this.velocity, 719, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 720, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 40f), this.velocity, 721, this.scale);
					}
				}
			}
			if ((this.type >= 442 && this.type <= 448) || this.type == 539)
			{
				if (this.life > 0)
				{
					for (int num216 = 0; num216 < 10; num216++)
					{
						Dust.NewDust(this.position, this.width, this.height, Main.rand.Next(232, 234), (float)hitDirection, -1f, 0, default(Color), 1f);
					}
				}
				else
				{
					for (int num217 = 0; num217 < 20; num217++)
					{
						Dust.NewDust(this.position, this.width, this.height, Main.rand.Next(232, 234), (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
				}
			}
			if (this.type == 333 || this.type == 334 || this.type == 335 || this.type == 336)
			{
				Color white = Color.White;
				if (this.type == 333)
				{
					white = new Color(73, 147, 221, 200);
				}
				if (this.type == 334)
				{
					white = new Color(24, 146, 79, 200);
				}
				if (this.type == 335)
				{
					white = new Color(194, 46, 50, 200);
				}
				if (this.type == 336)
				{
					white = new Color(228, 200, 1, 200);
				}
				if (this.life > 0)
				{
					int num218 = 0;
					while ((double)num218 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, 150, white, 1f);
						num218++;
					}
				}
				else
				{
					for (int num219 = 0; num219 < 50; num219++)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, 150, white, 1f);
					}
				}
			}
			if (this.type == 537)
			{
				if (this.life > 0)
				{
					int num220 = 0;
					while ((double)num220 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 32, (float)hitDirection, -1f, 0, default(Color), 1f);
						num220++;
					}
				}
				else
				{
					for (int num221 = 0; num221 < 50; num221++)
					{
						Dust.NewDust(this.position, this.width, this.height, 32, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
				}
			}
			if (this.type == 1 || this.type == 16 || this.type == 71 || this.type == 244 || this.type == 535)
			{
				if (this.life > 0)
				{
					int num222 = 0;
					while ((double)num222 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, this.alpha, this.color, 1f);
						num222++;
					}
				}
				else
				{
					for (int num223 = 0; num223 < 50; num223++)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, this.alpha, this.color, 1f);
					}
					if (Main.netMode != 1 && this.type == 16)
					{
						int num224 = Main.rand.Next(2) + 2;
						for (int num225 = 0; num225 < num224; num225++)
						{
							int num226 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), 1, 0, 0f, 0f, 0f, 0f, 255);
							Main.npc[num226].SetDefaults("Baby Slime");
							Main.npc[num226].velocity.X = this.velocity.X * 2f;
							Main.npc[num226].velocity.Y = this.velocity.Y;
							NPC expr_9825_cp_0 = Main.npc[num226];
							expr_9825_cp_0.velocity.X = expr_9825_cp_0.velocity.X + ((float)Main.rand.Next(-20, 20) * 0.1f + (float)(num225 * this.direction) * 0.3f);
							NPC expr_9868_cp_0 = Main.npc[num226];
							expr_9868_cp_0.velocity.Y = expr_9868_cp_0.velocity.Y - ((float)Main.rand.Next(0, 10) * 0.1f + (float)num225);
							Main.npc[num226].ai[0] = (float)(-1000 * Main.rand.Next(3));
							if (Main.netMode == 2 && num226 < 200)
							{
								NetMessage.SendData(23, -1, -1, "", num226, 0f, 0f, 0f, 0, 0, 0);
							}
						}
					}
				}
			}
			if (this.type == 352)
			{
				if (this.life > 0)
				{
					int num227 = 0;
					while ((double)num227 < dmg / (double)this.lifeMax * 100.0)
					{
						int num228 = Dust.NewDust(this.position, this.width, this.height, 67, (float)hitDirection, -1f, 0, default(Color), 1f);
						Main.dust[num228].noGravity = true;
						num227++;
					}
				}
				else
				{
					for (int num229 = 0; num229 < 60; num229++)
					{
						int num230 = Dust.NewDust(this.position, this.width, this.height, 67, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						Main.dust[num230].noGravity = true;
					}
				}
			}
			if (this.type >= 305 && this.type <= 314)
			{
				if (this.life > 0)
				{
					int num231 = 0;
					while ((double)num231 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 194, (float)hitDirection, -1f, 0, default(Color), 1.1f);
						num231++;
					}
				}
				else
				{
					for (int num232 = 0; num232 < 60; num232++)
					{
						Dust.NewDust(this.position, this.width, this.height, 194, (float)(2 * hitDirection), -2f, 0, default(Color), 1.1f);
					}
					Gore.NewGore(this.position, this.velocity, 441, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 442, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 443, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 444, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 445, this.scale);
				}
			}
			if (this.type == 327)
			{
				if (this.life > 0)
				{
					int num233 = 0;
					while ((double)num233 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 189, (float)hitDirection, -1f, 0, default(Color), 1.1f);
						num233++;
					}
				}
				else
				{
					for (int num234 = 0; num234 < 60; num234++)
					{
						Dust.NewDust(this.position, this.width, this.height, 189, (float)(2 * hitDirection), -2f, 0, default(Color), 1.1f);
					}
					for (int num235 = 476; num235 <= 484; num235++)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, num235, this.scale);
					}
				}
			}
			if (this.type == 325)
			{
				if (this.life > 0)
				{
					int num236 = 0;
					while ((double)num236 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 191, (float)hitDirection, -1f, 0, default(Color), 1.1f);
						num236++;
					}
				}
				else
				{
					for (int num237 = 0; num237 < 60; num237++)
					{
						Dust.NewDust(this.position, this.width, this.height, 191, (float)(2 * hitDirection), -2f, 0, default(Color), 1.1f);
					}
					for (int num238 = 469; num238 <= 475; num238++)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, num238, this.scale);
					}
				}
			}
			if (this.type == 345 && this.life <= 0)
			{
				Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, 513, this.scale);
				Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, 514, this.scale);
				Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, 514, this.scale);
				Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, 515, this.scale);
				Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, 516, this.scale);
			}
			if (this.type == 344)
			{
				if (this.life > 0)
				{
					int num239 = 0;
					while ((double)num239 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 196, (float)hitDirection, -1f, 0, default(Color), 1f);
						num239++;
					}
				}
				else
				{
					for (int num240 = 0; num240 < 60; num240++)
					{
						Dust.NewDust(this.position, this.width, this.height, 196, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					for (int num241 = 508; num241 <= 512; num241++)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, num241, this.scale);
					}
					for (int num242 = 509; num242 <= 512; num242++)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, num242, this.scale);
					}
				}
			}
			if (this.type == 326)
			{
				if (this.life > 0)
				{
					int num243 = 0;
					while ((double)num243 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 191, (float)hitDirection, -1f, 0, default(Color), 1.1f);
						num243++;
					}
				}
				else
				{
					for (int num244 = 0; num244 < 60; num244++)
					{
						Dust.NewDust(this.position, this.width, this.height, 191, (float)(2 * hitDirection), -2f, 0, default(Color), 1.1f);
					}
				}
			}
			if (this.type == 304)
			{
				if (this.life > 0)
				{
					int num245 = 0;
					while ((double)num245 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 189, (float)hitDirection, -1f, 0, default(Color), 1.3f);
						num245++;
					}
				}
				else
				{
					for (int num246 = 0; num246 < 60; num246++)
					{
						Dust.NewDust(this.position, this.width, this.height, 189, (float)(2 * hitDirection), -2f, 0, default(Color), 1.3f);
					}
				}
			}
			if (this.type == 302)
			{
				if (this.life > 0)
				{
					int num247 = 0;
					while ((double)num247 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 192, (float)hitDirection, -1f, 100, new Color(100, 100, 100, 100), 1f);
						num247++;
					}
				}
				else
				{
					for (int num248 = 0; num248 < 50; num248++)
					{
						Dust.NewDust(this.position, this.width, this.height, 192, (float)(2 * hitDirection), -2f, 100, new Color(100, 100, 100, 100), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 440, this.scale);
				}
			}
			if (this.type >= 245 && this.type <= 249)
			{
				if (this.life > 0)
				{
					int num249 = 0;
					while ((double)num249 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 148, (float)hitDirection, -1f, 0, default(Color), 1f);
						num249++;
					}
				}
				else if (this.type == 246)
				{
					if (Main.netMode != 1)
					{
						NPC.NewNPC((int)base.Center.X, (int)this.position.Y + this.height, 249, this.whoAmI, 0f, 0f, 0f, 0f, 255);
					}
				}
				else
				{
					for (int num250 = 0; num250 < 50; num250++)
					{
						Dust.NewDust(this.position, this.width, this.height, 148, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					if (this.type == 245)
					{
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 368, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 370, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 368, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 370, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 368, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 370, this.scale);
						Gore.NewGore(this.position, this.velocity, 360, this.scale);
						Gore.NewGore(this.position, this.velocity, 361, this.scale);
						Gore.NewGore(this.position, this.velocity, 362, this.scale);
						Gore.NewGore(this.position, this.velocity, 363, this.scale);
						Gore.NewGore(this.position, this.velocity, 364, this.scale);
						Gore.NewGore(this.position, this.velocity, 367, this.scale);
						Gore.NewGore(this.position, this.velocity, 366, this.scale);
					}
					else if (this.type == 249)
					{
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 368, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 370, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 368, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 370, this.scale);
						Gore.NewGore(this.position, this.velocity, 365, this.scale);
						Gore.NewGore(this.position, this.velocity, 363, this.scale);
						Gore.NewGore(this.position, this.velocity, 362, this.scale);
					}
					else
					{
						Gore.NewGore(this.position, this.velocity, 369, this.scale);
						Gore.NewGore(this.position, this.velocity, 371, this.scale);
						Gore.NewGore(this.position, this.velocity, 370, this.scale);
					}
				}
			}
			if (this.type == 288 && this.life <= 0)
			{
				for (int num251 = 0; num251 < 50; num251++)
				{
					int num252 = Dust.NewDust(this.position, this.width, this.height, 180, this.velocity.X, this.velocity.Y, 0, default(Color), 1f);
					Main.dust[num252].velocity *= 2f;
					Main.dust[num252].noGravity = true;
					Main.dust[num252].scale = 1.4f;
				}
			}
			if (this.type == 204)
			{
				if (this.life > 0)
				{
					int num253 = 0;
					while ((double)num253 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, 100, new Color(149, 208, 104), 1f);
						num253++;
					}
				}
				else
				{
					for (int num254 = 0; num254 < 50; num254++)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, 100, new Color(149, 208, 104), 1f);
					}
				}
			}
			if (this.type == 225)
			{
				if (this.life > 0)
				{
					int num255 = 0;
					while ((double)num255 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, 100, new Color(0, 80, 255, 100), 1f);
						num255++;
					}
				}
				else
				{
					for (int num256 = 0; num256 < 50; num256++)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, 100, new Color(0, 80, 255, 100), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 314, this.scale);
				}
			}
			if (this.type == 243)
			{
				if (this.life > 0)
				{
					int num257 = 0;
					while ((double)num257 < dmg / (double)this.lifeMax * 150.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 161, (float)hitDirection, -1f, 0, default(Color), 1f);
						num257++;
					}
				}
				else
				{
					for (int num258 = 0; num258 < 200; num258++)
					{
						Dust.NewDust(this.position, this.width, this.height, 161, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 359, this.scale);
				}
			}
			if ((this.type == 210 || this.type == 211) && this.life <= 0)
			{
				for (int num259 = 0; num259 < 6; num259++)
				{
					int num260 = Dust.NewDust(this.position, this.width, this.height, 150, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num260].noGravity = true;
						Main.dust[num260].scale = 1.5f;
					}
					else
					{
						Main.dust[num260].scale = 0.8f;
					}
				}
			}
			if ((this.type == 355 || this.type == 358) && this.life <= 0)
			{
				for (int num261 = 0; num261 < 6; num261++)
				{
					int num262 = Dust.NewDust(this.position, this.width, this.height, 198, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num262].noGravity = true;
						Main.dust[num262].scale = 1.5f * this.scale;
					}
					else
					{
						Main.dust[num262].scale = 0.8f * this.scale;
					}
				}
			}
			if (this.type == 356 && this.life <= 0)
			{
				for (int num263 = 0; num263 < 6; num263++)
				{
					int num264 = Dust.NewDust(this.position, this.width, this.height, 199, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num264].noGravity = true;
						Main.dust[num264].scale = 1.5f * this.scale;
					}
					else
					{
						Main.dust[num264].scale = 0.8f * this.scale;
					}
				}
			}
			if (this.type >= 484 && this.type <= 487 && this.life <= 0)
			{
				for (int num265 = 0; num265 < 6; num265++)
				{
					int num266 = Dust.NewDust(this.position, this.width, this.height, 248 + this.type - 484, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num266].noGravity = true;
						Main.dust[num266].scale = 1.2f * this.scale;
					}
					else
					{
						Main.dust[num266].scale = 0.7f * this.scale;
					}
				}
			}
			if (this.type == 357 && this.life <= 0)
			{
				for (int num267 = 0; num267 < 6; num267++)
				{
					int num268 = Dust.NewDust(this.position, this.width, this.height, 200, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num268].noGravity = true;
						Main.dust[num268].scale = 1.2f * this.scale;
					}
					else
					{
						Main.dust[num268].scale = 0.7f * this.scale;
					}
				}
			}
			if (this.type == 377 && this.life <= 0)
			{
				for (int num269 = 0; num269 < 6; num269++)
				{
					int num270 = Dust.NewDust(this.position, this.width, this.height, 40, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num270].noGravity = true;
						Main.dust[num270].scale = 1.2f * this.scale;
					}
					else
					{
						Main.dust[num270].scale = 0.7f * this.scale;
					}
				}
			}
			if (this.type == 374 || this.type == 375)
			{
				for (int num271 = 0; num271 < 6; num271++)
				{
					int num272 = Dust.NewDust(this.position, this.width, this.height, 165, 0f, 0f, 50, default(Color), 1.5f);
					Main.dust[num272].velocity *= 2f;
					Main.dust[num272].noGravity = true;
				}
			}
			if (this.type == 359)
			{
				if (this.life <= 0)
				{
					for (int num273 = 0; num273 < 6; num273++)
					{
						int num274 = Dust.NewDust(this.position, this.width, this.height, 201, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num274].noGravity = true;
							Main.dust[num274].scale = 1.2f * this.scale;
						}
						else
						{
							Main.dust[num274].scale = 0.7f * this.scale;
						}
					}
				}
				Gore.NewGore(this.position, this.velocity, 547, this.scale);
				Gore.NewGore(this.position, this.velocity, 548, this.scale);
			}
			if (this.type == 360)
			{
				if (this.life <= 0)
				{
					for (int num275 = 0; num275 < 6; num275++)
					{
						int num276 = Dust.NewDust(this.position, this.width, this.height, 202, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num276].noGravity = true;
							Main.dust[num276].scale = 1.2f * this.scale;
						}
						else
						{
							Main.dust[num276].scale = 0.7f * this.scale;
						}
					}
				}
				Gore.NewGore(this.position, this.velocity, 549, this.scale);
				Gore.NewGore(this.position, this.velocity, 550, this.scale);
			}
			if (this.type == 154)
			{
				if (this.life > 0)
				{
					int num277 = 0;
					while ((double)num277 < dmg / (double)this.lifeMax * 50.0)
					{
						int num278 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 67, this.velocity.X, this.velocity.Y, 90, default(Color), 1.5f);
						Main.dust[num278].noGravity = true;
						Main.dust[num278].velocity *= 0.2f;
						num277++;
					}
				}
				else
				{
					for (int num279 = 0; num279 < 50; num279++)
					{
						int num280 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 67, this.velocity.X, this.velocity.Y, 90, default(Color), 1.5f);
						Main.dust[num280].noGravity = true;
						Main.dust[num280].velocity *= 0.2f;
					}
					Gore.NewGore(this.position, this.velocity, 180, this.scale);
				}
			}
			if (this.type == 147 || this.type == 184)
			{
				if (this.life > 0)
				{
					int num281 = 0;
					while ((double)num281 < dmg / (double)this.lifeMax * 50.0)
					{
						int num282 = Dust.NewDust(this.position, this.width, this.height, 76, (float)hitDirection, -1f, 0, default(Color), 1f);
						Main.dust[num282].noGravity = true;
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, 100, new Color(97, 200, 255, 100), 1f);
						num281++;
					}
				}
				else
				{
					for (int num283 = 0; num283 < 30; num283++)
					{
						int num284 = Dust.NewDust(this.position, this.width, this.height, 76, (float)hitDirection, -2f, 0, default(Color), 1f);
						Main.dust[num284].noGravity = true;
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -2f, 100, new Color(97, 200, 255, 100), 1f);
					}
				}
			}
			if (this.type == 143 || this.type == 144 || this.type == 145)
			{
				if (this.life > 0)
				{
					int num285 = 0;
					while ((double)num285 < dmg / (double)this.lifeMax * 100.0)
					{
						int num286 = Dust.NewDust(this.position, this.width, this.height, 76, (float)hitDirection, -1f, 0, default(Color), 1f);
						Main.dust[num286].noGravity = true;
						num285++;
					}
				}
				else
				{
					for (int num287 = 0; num287 < 50; num287++)
					{
						int num288 = Dust.NewDust(this.position, this.width, this.height, 76, (float)hitDirection, -1f, 0, default(Color), 1f);
						Main.dust[num288].noGravity = true;
						Main.dust[num288].scale *= 1.2f;
					}
				}
			}
			if (this.type == 141)
			{
				if (this.life > 0)
				{
					int num289 = 0;
					while ((double)num289 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, this.alpha, new Color(210, 230, 140), 1f);
						num289++;
					}
				}
				else
				{
					for (int num290 = 0; num290 < 50; num290++)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, this.alpha, new Color(210, 230, 140), 1f);
					}
				}
			}
			if (this.type == 112)
			{
				for (int num291 = 0; num291 < 20; num291++)
				{
					int num292 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 18, 0f, 0f, 100, default(Color), 2f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num292].scale *= 0.6f;
					}
					else
					{
						Main.dust[num292].velocity *= 1.4f;
						Main.dust[num292].noGravity = true;
					}
				}
			}
			if (this.type == 183)
			{
				if (this.life > 0)
				{
					int num293 = 0;
					while ((double)num293 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 136, 0f, 0f, this.alpha, this.color, 1f);
						num293++;
					}
				}
				else
				{
					for (int num294 = 0; num294 < 50; num294++)
					{
						int num295 = Dust.NewDust(this.position, this.width, this.height, 136, (float)hitDirection, 0f, this.alpha, this.color, 1f);
						Main.dust[num295].velocity *= 2f;
					}
				}
			}
			if (this.type == 81 || this.type == 121)
			{
				if (this.life > 0)
				{
					int num296 = 0;
					while ((double)num296 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 14, 0f, 0f, this.alpha, this.color, 1f);
						num296++;
					}
				}
				else
				{
					for (int num297 = 0; num297 < 50; num297++)
					{
						int num298 = Dust.NewDust(this.position, this.width, this.height, 14, (float)hitDirection, 0f, this.alpha, this.color, 1f);
						Main.dust[num298].velocity *= 2f;
					}
					if (Main.netMode != 1)
					{
						if (this.type == 121)
						{
							int num299 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), 81, 0, 0f, 0f, 0f, 0f, 255);
							Main.npc[num299].SetDefaults("Slimer2");
							Main.npc[num299].velocity.X = this.velocity.X;
							Main.npc[num299].velocity.Y = this.velocity.Y;
							Gore.NewGore(this.position, this.velocity, 94, this.scale);
							if (Main.netMode == 2 && num299 < 200)
							{
								NetMessage.SendData(23, -1, -1, "", num299, 0f, 0f, 0f, 0, 0, 0);
							}
						}
						else if (this.scale >= 1f)
						{
							int num300 = Main.rand.Next(2) + 2;
							for (int num301 = 0; num301 < num300; num301++)
							{
								int num302 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), 1, 0, 0f, 0f, 0f, 0f, 255);
								Main.npc[num302].SetDefaults("Slimeling");
								Main.npc[num302].velocity.X = this.velocity.X * 3f;
								Main.npc[num302].velocity.Y = this.velocity.Y;
								NPC expr_BEC4_cp_0 = Main.npc[num302];
								expr_BEC4_cp_0.velocity.X = expr_BEC4_cp_0.velocity.X + ((float)Main.rand.Next(-10, 10) * 0.1f + (float)(num301 * this.direction) * 0.3f);
								NPC expr_BF07_cp_0 = Main.npc[num302];
								expr_BF07_cp_0.velocity.Y = expr_BF07_cp_0.velocity.Y - ((float)Main.rand.Next(0, 10) * 0.1f + (float)num301);
								Main.npc[num302].ai[1] = (float)num301;
								if (Main.netMode == 2 && num302 < 200)
								{
									NetMessage.SendData(23, -1, -1, "", num302, 0f, 0f, 0f, 0, 0, 0);
								}
							}
						}
					}
				}
			}
			if (this.type == 120 || this.type == 137 || this.type == 138)
			{
				if (this.life > 0)
				{
					int num303 = 0;
					while ((double)num303 < dmg / (double)this.lifeMax * 50.0)
					{
						int num304 = Dust.NewDust(this.position, this.width, this.height, 71, 0f, 0f, 200, default(Color), 1f);
						Main.dust[num304].velocity *= 1.5f;
						num303++;
					}
				}
				else
				{
					for (int num305 = 0; num305 < 50; num305++)
					{
						int num306 = Dust.NewDust(this.position, this.width, this.height, 71, (float)hitDirection, 0f, 200, default(Color), 1f);
						Main.dust[num306].velocity *= 1.5f;
					}
				}
			}
			if (this.type == 122)
			{
				if (this.life > 0)
				{
					int num307 = 0;
					while ((double)num307 < dmg / (double)this.lifeMax * 50.0)
					{
						int num308 = Dust.NewDust(this.position, this.width, this.height, 72, 0f, 0f, 200, default(Color), 1f);
						Main.dust[num308].velocity *= 1.5f;
						num307++;
					}
				}
				else
				{
					for (int num309 = 0; num309 < 50; num309++)
					{
						int num310 = Dust.NewDust(this.position, this.width, this.height, 72, (float)hitDirection, 0f, 200, default(Color), 1f);
						Main.dust[num310].velocity *= 1.5f;
					}
				}
			}
			if (this.type == 75)
			{
				if (this.life > 0)
				{
					int num311 = 0;
					while ((double)num311 < dmg / (double)this.lifeMax * 50.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 55, 0f, 0f, 200, this.color, 1f);
						num311++;
					}
				}
				else
				{
					for (int num312 = 0; num312 < 50; num312++)
					{
						int num313 = Dust.NewDust(this.position, this.width, this.height, 55, (float)hitDirection, 0f, 200, this.color, 1f);
						Main.dust[num313].velocity *= 2f;
					}
				}
			}
			if (this.type != 63 && this.type != 64 && this.type != 103)
			{
				if (this.type == 59 || this.type == 60 || this.type == 151)
				{
					if (this.life > 0)
					{
						int num314 = 0;
						while ((double)num314 < dmg / (double)this.lifeMax * 80.0)
						{
							int num315 = Dust.NewDust(this.position, this.width, this.height, 6, (float)(hitDirection * 2), -1f, this.alpha, default(Color), 1.5f);
							if (Main.rand.Next(8) != 0)
							{
								Main.dust[num315].noGravity = true;
							}
							num314++;
						}
						return;
					}
					for (int num316 = 0; num316 < 40; num316++)
					{
						int num317 = Dust.NewDust(this.position, this.width, this.height, 6, (float)(hitDirection * 2), -1f, this.alpha, default(Color), 1.5f);
						if (Main.rand.Next(8) != 0)
						{
							Main.dust[num317].noGravity = true;
						}
					}
					if (!Main.expertMode || this.type != 59 || Main.netMode == 1)
					{
						return;
					}
					try
					{
						int num318 = (int)(base.Center.X / 16f);
						int num319 = (int)(base.Center.Y / 16f);
						if (!WorldGen.SolidTile(num318, num319) && Main.tile[num318, num319].liquid == 0)
						{
							Main.tile[num318, num319].liquid = (byte)Main.rand.Next(50, 150);
							Main.tile[num318, num319].lava(true);
							Main.tile[num318, num319].honey(false);
							WorldGen.SquareTileFrame(num318, num319, true);
						}
						return;
					}
					catch
					{
						return;
					}
				}
				if (this.type == 50)
				{
					if (this.life > 0)
					{
						int num320 = 0;
						while ((double)num320 < dmg / (double)this.lifeMax * 300.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, 175, new Color(0, 80, 255, 100), 1f);
							num320++;
						}
						return;
					}
					for (int num321 = 0; num321 < 200; num321++)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, 175, new Color(0, 80, 255, 100), 1f);
					}
					Gore.NewGore(base.Center + new Vector2(-40f, (float)(-(float)this.height / 2)), this.velocity, 734, 1f);
					if (Main.netMode != 1)
					{
						int num322 = Main.rand.Next(4) + 4;
						for (int num323 = 0; num323 < num322; num323++)
						{
							int x = (int)(this.position.X + (float)Main.rand.Next(this.width - 32));
							int y = (int)(this.position.Y + (float)Main.rand.Next(this.height - 32));
							int num324 = NPC.NewNPC(x, y, 1, 0, 0f, 0f, 0f, 0f, 255);
							Main.npc[num324].SetDefaults(1, -1f);
							Main.npc[num324].velocity.X = (float)Main.rand.Next(-15, 16) * 0.1f;
							Main.npc[num324].velocity.Y = (float)Main.rand.Next(-30, 1) * 0.1f;
							Main.npc[num324].ai[0] = (float)(-1000 * Main.rand.Next(3));
							Main.npc[num324].ai[1] = 0f;
							if (Main.netMode == 2 && num324 < 200)
							{
								NetMessage.SendData(23, -1, -1, "", num324, 0f, 0f, 0f, 0, 0, 0);
							}
						}
						return;
					}
				}
				else if (this.type == 153)
				{
					if (this.life > 0)
					{
						int num325 = 0;
						while ((double)num325 < dmg / (double)this.lifeMax * 30.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num325++;
						}
						return;
					}
					for (int num326 = 0; num326 < 15; num326++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 177, 1f);
					Gore.NewGore(this.position, this.velocity, 178, 1f);
					Gore.NewGore(this.position, this.velocity, 179, 1f);
					Gore.NewGore(this.position, this.velocity, 179, 1f);
					return;
				}
				else if (this.type == 177)
				{
					if (this.life > 0)
					{
						int num327 = 0;
						while ((double)num327 < dmg / (double)this.lifeMax * 30.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num327++;
						}
						return;
					}
					for (int num328 = 0; num328 < 15; num328++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 234, 1f);
					Gore.NewGore(this.position, this.velocity, 235, 1f);
					Gore.NewGore(this.position, this.velocity, 236, 1f);
					Gore.NewGore(this.position, this.velocity, 236, 1f);
					return;
				}
				else if (this.type >= 494 && this.type <= 495)
				{
					if (this.life > 0)
					{
						int num329 = 0;
						while ((double)num329 < dmg / (double)this.lifeMax * 30.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num329++;
						}
						return;
					}
					for (int num330 = 0; num330 < 15; num330++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					int num331 = (this.type - 494) * 2;
					Gore.NewGore(this.position, this.velocity, 736 + num331, 1f);
					Gore.NewGore(this.position, this.velocity, 735 + num331, 1f);
					return;
				}
				else if (this.type >= 496 && this.type <= 497)
				{
					if (this.life > 0)
					{
						int num332 = 0;
						while ((double)num332 < dmg / (double)this.lifeMax * 30.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num332++;
						}
						return;
					}
					for (int num333 = 0; num333 < 15; num333++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					int num334 = this.type - 496;
					Gore.NewGore(this.position, this.velocity, 739 + num334, 1f);
					return;
				}
				else if (this.type >= 498 && this.type <= 506)
				{
					if (this.life > 0)
					{
						int num335 = 0;
						while ((double)num335 < dmg / (double)this.lifeMax * 30.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num335++;
						}
						return;
					}
					for (int num336 = 0; num336 < 15; num336++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					int num337 = this.type - 498;
					Gore.NewGore(this.position, this.velocity, 750 + num337, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 16f), this.velocity, 741 + num337, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 18f), this.velocity, 759 + num337, 1f);
					return;
				}
				else if (this.type == 49 || this.type == 51 || this.type == 93 || this.type == 150 || this.type == 152 || this.type == 226)
				{
					if (this.life > 0)
					{
						int num338 = 0;
						while ((double)num338 < dmg / (double)this.lifeMax * 30.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num338++;
						}
						return;
					}
					for (int num339 = 0; num339 < 15; num339++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					if (this.type == 51)
					{
						Gore.NewGore(this.position, this.velocity, 83, 1f);
						return;
					}
					if (this.type == 93)
					{
						Gore.NewGore(this.position, this.velocity, 107, 1f);
						return;
					}
					if (this.type == 150)
					{
						Gore.NewGore(this.position, this.velocity, 164, 1f);
						Gore.NewGore(this.position, this.velocity, 165, 1f);
						return;
					}
					if (this.type == 152)
					{
						Gore.NewGore(this.position, this.velocity, 175, 1f);
						Gore.NewGore(this.position, this.velocity, 176, 1f);
						Gore.NewGore(this.position, this.velocity, 176, 1f);
						return;
					}
					if (this.type == 226)
					{
						Gore.NewGore(this.position, this.velocity, 317, 1f);
						Gore.NewGore(this.position, this.velocity, 318, 1f);
						Gore.NewGore(this.position, this.velocity, 318, 1f);
						Gore.NewGore(this.position, this.velocity, 319, 1f);
						return;
					}
					Gore.NewGore(this.position, this.velocity, 82, 1f);
					return;
				}
				else if (this.type == 46 || this.type == 55 || this.type == 67 || this.type == 74 || this.type == 102 || this.type == 224 || this.type == 230 || this.type == 297 || this.type == 298 || this.type == 299 || this.type == 300 || this.type == 303 || this.type == 337 || this.type == 538 || this.type == 540)
				{
					if (this.life > 0)
					{
						int num340 = 0;
						while ((double)num340 < dmg / (double)this.lifeMax * 20.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num340++;
						}
						return;
					}
					for (int num341 = 0; num341 < 10; num341++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					if (this.type == 46 || this.type == 303 || this.type == 337 || this.type == 540)
					{
						Gore.NewGore(this.position, this.velocity, 76, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 77, 1f);
						if (this.type == 303)
						{
							for (int num342 = 0; num342 < 10; num342++)
							{
								Dust.NewDust(this.position, this.width, this.height, 193, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
							}
						}
						if (this.type == 540)
						{
							Gore.NewGore(this.position, this.velocity, 926, 1f);
							return;
						}
					}
					else
					{
						if (this.type == 67)
						{
							Gore.NewGore(this.position, this.velocity, 95, 1f);
							Gore.NewGore(this.position, this.velocity, 95, 1f);
							Gore.NewGore(this.position, this.velocity, 96, 1f);
							return;
						}
						if (this.type == 55 || this.type == 230)
						{
							Gore.NewGore(this.position, this.velocity, 553, 1f);
							Gore.NewGore(this.position, this.velocity, 554, 1f);
							return;
						}
						if (this.type == 74)
						{
							Gore.NewGore(this.position, this.velocity, 100, 1f);
							return;
						}
						if (this.type == 297)
						{
							Gore.NewGore(this.position, this.velocity, 431, 1f);
							return;
						}
						if (this.type == 298)
						{
							Gore.NewGore(this.position, this.velocity, 432, 1f);
							return;
						}
						if (this.type == 299)
						{
							Gore.NewGore(this.position, this.velocity, 433, 1f);
							return;
						}
						if (this.type == 538)
						{
							Gore.NewGore(this.position, this.velocity, 897, 1f);
							return;
						}
						if (this.type == 300)
						{
							Gore.NewGore(this.position, this.velocity, 434, 1f);
							return;
						}
						if (this.type == 102)
						{
							Gore.NewGore(this.position, this.velocity, 116, 1f);
							return;
						}
						if (this.type == 224)
						{
							Gore.NewGore(this.position, this.velocity, 312, 1f);
							Gore.NewGore(this.position, this.velocity, 313, 1f);
							return;
						}
					}
				}
				else if (this.type == 148 || this.type == 149 || this.type == 168 || this.type == 470)
				{
					if (this.life > 0)
					{
						int num343 = 0;
						while ((double)num343 < dmg / (double)this.lifeMax * 20.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num343++;
						}
						return;
					}
					for (int num344 = 0; num344 < 10; num344++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					if (this.type == 148)
					{
						Gore.NewGore(this.position, this.velocity, 160, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 161, 1f);
						return;
					}
					if (this.type == 149)
					{
						Gore.NewGore(this.position, this.velocity, 162, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 163, 1f);
						return;
					}
					if (this.type == 168)
					{
						Gore.NewGore(this.position, this.velocity, 215, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 216, 1f);
						return;
					}
					if (this.type == 470)
					{
						Gore.NewGore(this.position, this.velocity, 673, 1f);
						Gore.NewGore(this.position, this.velocity, 672, 1f);
						Gore.NewGore(this.position, this.velocity, 674, 1f);
						return;
					}
				}
				else if (this.type == 361)
				{
					if (this.life > 0)
					{
						int num345 = 0;
						while ((double)num345 < dmg / (double)this.lifeMax * 20.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num345++;
						}
						return;
					}
					for (int num346 = 0; num346 < 10; num346++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 551, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 552, 1f);
					return;
				}
				else if (this.type == 366 || this.type == 367)
				{
					if (this.life > 0)
					{
						int num347 = 0;
						while ((double)num347 < dmg / (double)this.lifeMax * 20.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 203, (float)hitDirection, -1f, 0, default(Color), 1f);
							num347++;
						}
						return;
					}
					for (int num348 = 0; num348 < 10; num348++)
					{
						Dust.NewDust(this.position, this.width, this.height, 203, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					if (this.type == 366)
					{
						Gore.NewGore(this.position, this.velocity, 561, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 562, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 563, 1f);
						return;
					}
					Gore.NewGore(this.position, this.velocity, 564, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 565, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 566, 1f);
					return;
				}
				else if (this.type >= 362 && this.type <= 365)
				{
					if (this.life > 0)
					{
						int num349 = 0;
						while ((double)num349 < dmg / (double)this.lifeMax * 20.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num349++;
						}
						return;
					}
					for (int num350 = 0; num350 < 10; num350++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					if (this.type == 362 || this.type == 363)
					{
						Gore.NewGore(this.position, this.velocity, 555, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 556, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 557, 1f);
						return;
					}
					Gore.NewGore(this.position, this.velocity, 558, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 559, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 560, 1f);
					return;
				}
				else if (this.type == 348 || this.type == 349)
				{
					if (this.life > 0)
					{
						int num351 = 0;
						while ((double)num351 < dmg / (double)this.lifeMax * 20.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num351++;
						}
						return;
					}
					for (int num352 = 0; num352 < 10; num352++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 528, 1f);
					Gore.NewGore(this.position, this.velocity, 529, 1f);
					Gore.NewGore(this.position, this.velocity, 530, 1f);
					Gore.NewGore(this.position, this.velocity, 531, 1f);
					Gore.NewGore(this.position, this.velocity, 532, 1f);
					return;
				}
				else if (this.type == 351)
				{
					if (this.life > 0)
					{
						int num353 = 0;
						while ((double)num353 < dmg / (double)this.lifeMax * 20.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num353++;
						}
						return;
					}
					for (int num354 = 0; num354 < 10; num354++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 538, 1f);
					Gore.NewGore(this.position, this.velocity, 539, 1f);
					Gore.NewGore(this.position, this.velocity, 540, 1f);
					Gore.NewGore(this.position, this.velocity, 541, 1f);
					Gore.NewGore(this.position, this.velocity, 542, 1f);
					return;
				}
				else if (this.type == 350)
				{
					if (this.life > 0)
					{
						int num355 = 0;
						while ((double)num355 < dmg / (double)this.lifeMax * 20.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num355++;
						}
						return;
					}
					for (int num356 = 0; num356 < 10; num356++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 533, 1f);
					Gore.NewGore(this.position, this.velocity, 534, 1f);
					Gore.NewGore(this.position, this.velocity, 535, 1f);
					Gore.NewGore(this.position, this.velocity, 536, 1f);
					return;
				}
				else if (this.type == 47 || this.type == 57 || this.type == 58 || this.type == 464 || this.type == 465)
				{
					if (this.life > 0)
					{
						int num357 = 0;
						while ((double)num357 < dmg / (double)this.lifeMax * 20.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num357++;
						}
						return;
					}
					for (int num358 = 0; num358 < 10; num358++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					if (this.type == 57)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 84, 1f);
						return;
					}
					if (this.type == 58)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 85, 1f);
						return;
					}
					if (this.type == 464)
					{
						Gore.NewGore(this.position, this.velocity, 668, 1f);
						Gore.NewGore(this.position, this.velocity, 669, 1f);
						return;
					}
					if (this.type == 465)
					{
						Gore.NewGore(this.position, this.velocity, 670, 1f);
						Gore.NewGore(this.position, this.velocity, 671, 1f);
						return;
					}
					Gore.NewGore(this.position, this.velocity, 78, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 79, 1f);
					return;
				}
				else if (this.type == 173 || this.type == 174 || this.type == 181 || this.type == 182 || this.type == 268)
				{
					if (this.life > 0)
					{
						int num359 = 0;
						while ((double)num359 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, this.alpha, default(Color), 1f);
							num359++;
						}
						return;
					}
					for (int num360 = 0; num360 < 50; num360++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, this.alpha, default(Color), 1f);
					}
					if (this.type == 173)
					{
						Gore.NewGore(this.position, this.velocity, 223, 1f);
						Gore.NewGore(this.position, this.velocity, 224, 1f);
						return;
					}
					if (this.type == 174)
					{
						Gore.NewGore(this.position, this.velocity, 225, 1f);
						Gore.NewGore(this.position, this.velocity, 226, 1f);
						return;
					}
					if (this.type == 181)
					{
						Gore.NewGore(this.position, this.velocity, 237, 1f);
						return;
					}
					if (this.type == 182)
					{
						Gore.NewGore(this.position, this.velocity, 238, 1f);
						Gore.NewGore(this.position, this.velocity, 239, 1f);
						return;
					}
					if (this.type == 268)
					{
						Gore.NewGore(this.position, this.velocity, 403, 1f);
						Gore.NewGore(this.position, this.velocity, 404, 1f);
						Gore.NewGore(this.position, this.velocity, 405, 1f);
						return;
					}
				}
				else if (this.type == 2 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194 || this.type == 317 || this.type == 318)
				{
					if (this.life > 0)
					{
						int num361 = 0;
						while ((double)num361 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num361++;
						}
						return;
					}
					for (int num362 = 0; num362 < 50; num362++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					if (this.type == 190)
					{
						Gore.NewGore(this.position, this.velocity, 249, this.scale);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 2, this.scale);
						return;
					}
					if (this.type == 191)
					{
						Gore.NewGore(this.position, this.velocity, 248, this.scale);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 2, this.scale);
						return;
					}
					if (this.type == 192)
					{
						Gore.NewGore(this.position, this.velocity, 247, this.scale);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 2, this.scale);
						return;
					}
					if (this.type == 193)
					{
						Gore.NewGore(this.position, this.velocity, 252, this.scale);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 253, this.scale);
						return;
					}
					if (this.type == 194)
					{
						Gore.NewGore(this.position, this.velocity, 250, this.scale);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 251, this.scale);
						return;
					}
					if (this.type == 317)
					{
						Gore.NewGore(this.position, this.velocity, 447, this.scale);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 448, this.scale);
						return;
					}
					if (this.type == 318)
					{
						Gore.NewGore(this.position, this.velocity, 449, this.scale);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 450, this.scale);
						return;
					}
					Gore.NewGore(this.position, this.velocity, 1, this.scale);
					Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 2, this.scale);
					return;
				}
				else if (this.type == 157)
				{
					if (this.life > 0)
					{
						int num363 = 0;
						while ((double)num363 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num363++;
						}
						return;
					}
					for (int num364 = 0; num364 < 50; num364++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 186, 1f);
					Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 187, 1f);
					return;
				}
				else if (this.type == 133)
				{
					if (this.life <= 0)
					{
						for (int num365 = 0; num365 < 50; num365++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 155, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 14f), this.velocity, 155, 1f);
						return;
					}
					int num366 = 0;
					while ((double)num366 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num366++;
					}
					if ((float)this.life < (float)this.lifeMax * 0.5f && this.localAI[0] == 0f)
					{
						this.localAI[0] = 1f;
						Gore.NewGore(this.position, this.velocity, 1, 1f);
						return;
					}
				}
				else if (this.type == 69 || this.type == 509 || this.type == 508)
				{
					if (this.life > 0)
					{
						int num367 = 0;
						while ((double)num367 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 250, (float)hitDirection, -1f, 0, default(Color), 1f);
							num367++;
						}
						return;
					}
					for (int num368 = 0; num368 < 50; num368++)
					{
						Dust.NewDust(this.position, this.width, this.height, 250, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					if (this.type == 69)
					{
						Gore.NewGore(this.position, this.velocity, 97, 1f);
						Gore.NewGore(this.position, this.velocity, 98, 1f);
						return;
					}
					if (this.type == 508)
					{
						Gore.NewGore(this.position, this.velocity, 811, 1f);
						Gore.NewGore(this.position, this.velocity, 812, 1f);
						Gore.NewGore(this.position, this.velocity, 813, 1f);
						Gore.NewGore(this.position, this.velocity, 814, 1f);
						return;
					}
					if (this.type == 509)
					{
						Gore.NewGore(this.position, this.velocity, 815, 1f);
						Gore.NewGore(this.position, this.velocity, 816, 1f);
						Gore.NewGore(this.position, this.velocity, 817, 1f);
						Gore.NewGore(this.position, this.velocity, 818, 1f);
						Gore.NewGore(this.position, this.velocity, 818, 1f);
						return;
					}
				}
				else if (this.type == 61)
				{
					if (this.life > 0)
					{
						int num369 = 0;
						while ((double)num369 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num369++;
						}
						return;
					}
					for (int num370 = 0; num370 < 50; num370++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 86, 1f);
					Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 87, 1f);
					Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 88, 1f);
					return;
				}
				else if (this.type == 301)
				{
					if (this.life > 0)
					{
						int num371 = 0;
						while ((double)num371 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num371++;
						}
						return;
					}
					for (int num372 = 0; num372 < 50; num372++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 438, 1f);
					Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 439, 1f);
					return;
				}
				else if (this.type == 252)
				{
					if (this.life > 0)
					{
						int num373 = 0;
						while ((double)num373 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num373++;
						}
						return;
					}
					for (int num374 = 0; num374 < 50; num374++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 373, 1f);
					Gore.NewGore(this.position, this.velocity, 374, 1f);
					return;
				}
				else if (this.type == 489)
				{
					if (this.life > 0)
					{
						int num375 = 0;
						while ((double)num375 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num375++;
						}
						return;
					}
					for (int num376 = 0; num376 < 50; num376++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 722, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 723, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 723, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 724, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 724, this.scale);
					return;
				}
				else if (this.type == 534)
				{
					if (this.life > 0)
					{
						int num377 = 0;
						while ((double)num377 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num377++;
						}
						return;
					}
					for (int num378 = 0; num378 < 50; num378++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 894, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 895, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 895, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 896, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 896, this.scale);
					return;
				}
				else if (this.type == 490)
				{
					if (this.life > 0)
					{
						int num379 = 0;
						while ((double)num379 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num379++;
						}
						return;
					}
					for (int num380 = 0; num380 < 50; num380++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 725, this.scale);
					Gore.NewGore(this.position, this.velocity, 726, this.scale);
					Gore.NewGore(this.position, this.velocity, 727, this.scale);
					Gore.NewGore(this.position, this.velocity, 725 + Main.rand.Next(3), this.scale);
					Gore.NewGore(this.position, this.velocity, 725 + Main.rand.Next(3), this.scale);
					return;
				}
				else if (this.type == 65 || (this.type >= 542 && this.type <= 545))
				{
					if (this.life > 0)
					{
						int num381 = 0;
						while ((double)num381 < dmg / (double)this.lifeMax * 150.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num381++;
						}
						return;
					}
					for (int num382 = 0; num382 < 75; num382++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					if (this.type == 65)
					{
						Gore.NewGore(this.position, this.velocity * 0.8f, 89, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 90, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 91, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 92, 1f);
					}
					if (this.type == 542)
					{
						Gore.NewGore(this.position, this.velocity * 0.8f, 944, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 945, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 946, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 947, 1f);
					}
					if (this.type == 543)
					{
						Gore.NewGore(this.position, this.velocity * 0.8f, 948, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 949, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 950, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 951, 1f);
					}
					if (this.type == 544)
					{
						Gore.NewGore(this.position, this.velocity * 0.8f, 952, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 953, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 954, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 955, 1f);
					}
					if (this.type == 545)
					{
						Gore.NewGore(this.position, this.velocity * 0.8f, 956, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 957, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 958, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 959, 1f);
						return;
					}
				}
				else if (this.type == 195 || this.type == 196)
				{
					if (this.life > 0)
					{
						int num383 = 0;
						while ((double)num383 < dmg / (double)this.lifeMax * 150.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num383++;
						}
						return;
					}
					for (int num384 = 0; num384 < 75; num384++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 254, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 255, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 255, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 256, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 256, this.scale);
					return;
				}
				else if (this.type == 198 || this.type == 199)
				{
					if (this.life > 0)
					{
						int num385 = 0;
						while ((double)num385 < dmg / (double)this.lifeMax * 150.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num385++;
						}
						return;
					}
					for (int num386 = 0; num386 < 75; num386++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 258, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 259, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 259, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 260, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 260, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 261, this.scale);
					return;
				}
				else if (this.type == 206)
				{
					if (this.life > 0)
					{
						int num387 = 0;
						while ((double)num387 < dmg / (double)this.lifeMax * 150.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 137, (float)hitDirection, -1f, 0, default(Color), 1f);
							num387++;
						}
						return;
					}
					for (int num388 = 0; num388 < 75; num388++)
					{
						Dust.NewDust(this.position, this.width, this.height, 137, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 273, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 274, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 274, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 275, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 275, this.scale);
					return;
				}
				else if (this.type == 342)
				{
					if (this.life > 0)
					{
						int num389 = 0;
						while ((double)num389 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 0, (float)hitDirection, -1f, 0, default(Color), 1f);
							num389++;
						}
						return;
					}
					for (int num390 = 0; num390 < 50; num390++)
					{
						Dust.NewDust(this.position, this.width, this.height, 0, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 500, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 501, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 501, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 502, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 502, this.scale);
					return;
				}
				else if (this.type >= 338 && this.type <= 340)
				{
					if (this.life > 0)
					{
						int num391 = 0;
						while ((double)num391 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num391++;
						}
						return;
					}
					for (int num392 = 0; num392 < 50; num392++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					if (this.type == 338)
					{
						Gore.NewGore(this.position, this.velocity, 494, this.scale);
					}
					if (this.type == 339)
					{
						Gore.NewGore(this.position, this.velocity, 495, this.scale);
					}
					if (this.type == 340)
					{
						Gore.NewGore(this.position, this.velocity, 496, this.scale);
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 497, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 498, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 499, this.scale);
					return;
				}
				else if (this.type == 343)
				{
					if (this.life > 0)
					{
						int num393 = 0;
						while ((double)num393 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num393++;
						}
						return;
					}
					for (int num394 = 0; num394 < 50; num394++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 503, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 504, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 505, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 506, this.scale);
					return;
				}
				else if ((this.type >= 430 && this.type <= 436) || this.type == 3 || this.type == 52 || this.type == 53 || this.type == 536 || this.type == 104 || this.type == 109 || this.type == 331 || this.type == 332 || this.type == 132 || this.type == 161 || this.type == 162 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 200 || this.type == 223 || this.type == 251 || this.type == 319 || this.type == 320 || this.type == 321)
				{
					if (this.life > 0)
					{
						int num395 = 0;
						while ((double)num395 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num395++;
						}
						if (this.type == 186 && Main.rand.Next(5) == 0)
						{
							Gore.NewGore(this.position, this.velocity, 242, 1f);
						}
						if (this.type == 187)
						{
							int num396 = 0;
							while ((double)num396 < dmg / (double)this.lifeMax * 200.0)
							{
								Dust.NewDust(this.position, this.width, 24, 4, (float)hitDirection, -1f, 125, new Color(0, 80, 255, 100), 1f);
								num396++;
							}
							return;
						}
					}
					else
					{
						for (int num397 = 0; num397 < 50; num397++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						if (this.type == 187 || this.type == 433)
						{
							for (int num398 = 0; num398 < 25; num398++)
							{
								Dust.NewDust(this.position, this.width, 24, 4, (float)hitDirection, -1f, 125, new Color(0, 80, 255, 100), 1f);
							}
						}
						if (this.type == 104)
						{
							Gore.NewGore(this.position, this.velocity, 117, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 118, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 118, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 119, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 119, this.scale);
							return;
						}
						if (this.type == 331)
						{
							Gore.NewGore(this.position, this.velocity, 488, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 489, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 489, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 490, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 490, this.scale);
							return;
						}
						if (this.type == 332)
						{
							Gore.NewGore(this.position, this.velocity, 491, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 492, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 492, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 493, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 493, this.scale);
							return;
						}
						if (this.type == 109)
						{
							Gore.NewGore(this.position, this.velocity, 121, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 122, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 122, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 123, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 123, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 46f), this.velocity, 120, this.scale);
							return;
						}
						if (this.type == 161 || this.type == 431)
						{
							Gore.NewGore(this.position, this.velocity, 191, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 192, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 192, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 193, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 193, this.scale);
							return;
						}
						if (this.type == 162)
						{
							Gore.NewGore(this.position, this.velocity, 194, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 195, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 195, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 196, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 196, this.scale);
							return;
						}
						if (this.type == 188 || this.type == 434)
						{
							Gore.NewGore(this.position, this.velocity, 243, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 244, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 244, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 245, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 245, this.scale);
							return;
						}
						if (this.type == 200 || this.type == 436)
						{
							Gore.NewGore(this.position, this.velocity, 262, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 263, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 263, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 264, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 264, this.scale);
							return;
						}
						if (this.type == 319)
						{
							Gore.NewGore(this.position, this.velocity, 451, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 453, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 453, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 452, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 452, this.scale);
							return;
						}
						if (this.type == 320)
						{
							Gore.NewGore(this.position, this.velocity, 454, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 455, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 456, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 456, this.scale);
							return;
						}
						if (this.type == 321)
						{
							Gore.NewGore(this.position, this.velocity, 457, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 458, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 458, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 459, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 459, this.scale);
							return;
						}
						if (this.type == 223)
						{
							Gore.NewGore(this.position, this.velocity, 309, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 310, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 310, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 311, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 311, this.scale);
							return;
						}
						if (this.type == 132)
						{
							Gore.NewGore(this.position, this.velocity, 154, 1f);
						}
						else if (this.type == 186 || this.type == 432)
						{
							Gore.NewGore(this.position, this.velocity, 241, 1f);
						}
						else if (this.type == 189 || this.type == 435)
						{
							Gore.NewGore(this.position, this.velocity, 246, 1f);
						}
						else if (this.type == 251)
						{
							Gore.NewGore(this.position, this.velocity, 372, 1f);
						}
						else if (this.type != 187 && this.type != 433)
						{
							Gore.NewGore(this.position, this.velocity, 3, 1f);
						}
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 4, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 4, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 5, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 5, 1f);
						if (this.type == 186 || this.type == 432)
						{
							Gore.NewGore(this.position, this.velocity, 242, 1f);
						}
						if ((this.type == 186 || this.type == 432) && Main.rand.Next(2) == 0)
						{
							Gore.NewGore(this.position, this.velocity, 242, 1f);
							return;
						}
					}
				}
				else if (this.type == 83 || this.type == 84 || this.type == 179)
				{
					if (this.life > 0)
					{
						int num399 = 0;
						while ((double)num399 < dmg / (double)this.lifeMax * 50.0)
						{
							int num400 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
							Main.dust[num400].noGravity = true;
							num399++;
						}
						return;
					}
					for (int num401 = 0; num401 < 20; num401++)
					{
						int num402 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
						Main.dust[num402].velocity *= 2f;
						Main.dust[num402].noGravity = true;
					}
					int num403 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)Main.rand.Next(-2, 3), (float)Main.rand.Next(-2, 3)), 61, this.scale);
					Main.gore[num403].velocity *= 0.5f;
					num403 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)Main.rand.Next(-2, 3), (float)Main.rand.Next(-2, 3)), 61, this.scale);
					Main.gore[num403].velocity *= 0.5f;
					num403 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)Main.rand.Next(-2, 3), (float)Main.rand.Next(-2, 3)), 61, this.scale);
					Main.gore[num403].velocity *= 0.5f;
					return;
				}
				else if (this.type == 262 || this.type == 263 || this.type == 264)
				{
					if (this.life > 0)
					{
						int num404 = 0;
						while ((double)num404 < dmg / (double)this.lifeMax * 100.0)
						{
							if (this.type == 262 && this.life > this.lifeMax / 2 && Main.rand.Next(3) != 0)
							{
								Dust.NewDust(this.position, this.width, this.height, 166, (float)hitDirection, -1f, 0, default(Color), 1f);
							}
							else if (this.type == 265 && Main.rand.Next(3) != 0)
							{
								Dust.NewDust(this.position, this.width, this.height, 166, (float)hitDirection, -1f, 0, default(Color), 1f);
							}
							else
							{
								Dust.NewDust(this.position, this.width, this.height, 167, (float)hitDirection, -1f, 0, default(Color), 1f);
							}
							num404++;
						}
						return;
					}
					for (int num405 = 0; num405 < 150; num405++)
					{
						if (this.type == 265 && Main.rand.Next(3) != 0)
						{
							Dust.NewDust(this.position, this.width, this.height, 166, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						else
						{
							Dust.NewDust(this.position, this.width, this.height, 167, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
					}
					if (this.type == 262)
					{
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 381, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 382, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 383, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 384, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 385, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 386, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 386, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 387, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 387, this.scale);
					}
					if (this.type == 263)
					{
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 390, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 391, this.scale);
					}
					if (this.type == 264)
					{
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 388, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 389, this.scale);
						return;
					}
				}
				else if (this.type == 265)
				{
					if (this.life < 0)
					{
						for (int num406 = 0; num406 < 15; num406++)
						{
							if (Main.rand.Next(3) != 0)
							{
								Dust.NewDust(this.position, this.width, this.height, 166, (float)hitDirection, -1f, 0, default(Color), 1f);
							}
							else
							{
								Dust.NewDust(this.position, this.width, this.height, 167, (float)hitDirection, -1f, 0, default(Color), 1f);
							}
						}
						return;
					}
				}
				else if (this.type == 266)
				{
					if (this.life > 0)
					{
						int num407 = 0;
						while ((double)num407 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num407++;
						}
						return;
					}
					for (int num408 = 0; num408 < 150; num408++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 396, 1f);
					Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 397, 1f);
					Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 398, 1f);
					Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 399, 1f);
					Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 400, 1f);
					Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 401, 1f);
					return;
				}
				else if (this.type == 267)
				{
					if (this.life > 0)
					{
						int num409 = 0;
						while ((double)num409 < dmg / (double)this.lifeMax * 50.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num409++;
						}
						return;
					}
					for (int num410 = 0; num410 < 20; num410++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 402, 1f);
					return;
				}
				else if (this.type == 4 || this.type == 126 || this.type == 125)
				{
					if (this.life > 0)
					{
						int num411 = 0;
						while ((double)num411 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num411++;
						}
						return;
					}
					for (int num412 = 0; num412 < 150; num412++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					for (int num413 = 0; num413 < 2; num413++)
					{
						Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 2, 1f);
						Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 7, 1f);
						Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 9, 1f);
						if (this.type == 4)
						{
							Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 10, 1f);
							Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
						}
						else if (this.type == 125)
						{
							Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 146, 1f);
						}
						else if (this.type == 126)
						{
							Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 145, 1f);
						}
					}
					if (this.type == 125 || this.type == 126)
					{
						for (int num414 = 0; num414 < 10; num414++)
						{
							int num415 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num415].velocity *= 1.4f;
						}
						for (int num416 = 0; num416 < 5; num416++)
						{
							int num417 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
							Main.dust[num417].noGravity = true;
							Main.dust[num417].velocity *= 5f;
							num417 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num417].velocity *= 3f;
						}
						int num418 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num418].velocity *= 0.4f;
						Gore expr_12BE2_cp_0 = Main.gore[num418];
						expr_12BE2_cp_0.velocity.X = expr_12BE2_cp_0.velocity.X + 1f;
						Gore expr_12C02_cp_0 = Main.gore[num418];
						expr_12C02_cp_0.velocity.Y = expr_12C02_cp_0.velocity.Y + 1f;
						num418 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num418].velocity *= 0.4f;
						Gore expr_12C86_cp_0 = Main.gore[num418];
						expr_12C86_cp_0.velocity.X = expr_12C86_cp_0.velocity.X - 1f;
						Gore expr_12CA6_cp_0 = Main.gore[num418];
						expr_12CA6_cp_0.velocity.Y = expr_12CA6_cp_0.velocity.Y + 1f;
						num418 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num418].velocity *= 0.4f;
						Gore expr_12D2A_cp_0 = Main.gore[num418];
						expr_12D2A_cp_0.velocity.X = expr_12D2A_cp_0.velocity.X + 1f;
						Gore expr_12D4A_cp_0 = Main.gore[num418];
						expr_12D4A_cp_0.velocity.Y = expr_12D4A_cp_0.velocity.Y - 1f;
						num418 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num418].velocity *= 0.4f;
						Gore expr_12DCE_cp_0 = Main.gore[num418];
						expr_12DCE_cp_0.velocity.X = expr_12DCE_cp_0.velocity.X - 1f;
						Gore expr_12DEE_cp_0 = Main.gore[num418];
						expr_12DEE_cp_0.velocity.Y = expr_12DEE_cp_0.velocity.Y - 1f;
						return;
					}
				}
				else if (this.type == 5)
				{
					if (this.life > 0)
					{
						int num419 = 0;
						while ((double)num419 < dmg / (double)this.lifeMax * 50.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num419++;
						}
						return;
					}
					for (int num420 = 0; num420 < 20; num420++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 6, 1f);
					Gore.NewGore(this.position, this.velocity, 7, 1f);
					return;
				}
				else if (this.type == 113 || this.type == 114)
				{
					if (this.life > 0)
					{
						for (int num421 = 0; num421 < 20; num421++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						}
						return;
					}
					for (int num422 = 0; num422 < 50; num422++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -1f, 0, default(Color), 1f);
					}
					if (this.type == 114)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 137, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2)), this.velocity, 139, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2), this.position.Y), this.velocity, 139, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2), this.position.Y + (float)(this.height / 2)), this.velocity, 137, this.scale);
						return;
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 137, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2)), this.velocity, 138, this.scale);
					Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2), this.position.Y), this.velocity, 138, this.scale);
					Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2), this.position.Y + (float)(this.height / 2)), this.velocity, 137, this.scale);
					if (Main.player[Main.myPlayer].position.Y / 16f > (float)(Main.maxTilesY - 250))
					{
						int num423 = (int)Main.screenPosition.Y;
						int num424 = num423 + Main.screenWidth;
						int num425 = (int)this.position.X;
						if (this.direction > 0)
						{
							num425 -= 80;
						}
						int num426 = num425 + 140;
						int num427 = num425;
						for (int num428 = num423; num428 < num424; num428 += 50)
						{
							while (num427 < num426)
							{
								for (int num429 = 0; num429 < 5; num429++)
								{
									Dust.NewDust(new Vector2((float)num427, (float)num428), 32, 32, 5, (float)Main.rand.Next(-60, 61) * 0.1f, (float)Main.rand.Next(-60, 61) * 0.1f, 0, default(Color), 1f);
								}
								Vector2 velocity4 = new Vector2((float)Main.rand.Next(-80, 81) * 0.1f, (float)Main.rand.Next(-60, 21) * 0.1f);
								Gore.NewGore(new Vector2((float)num427, (float)num428), velocity4, Main.rand.Next(140, 143), 1f);
								num427 += 46;
							}
							num427 = num425;
						}
						return;
					}
				}
				else if (this.type == 115 || this.type == 116)
				{
					if (this.life > 0)
					{
						for (int num430 = 0; num430 < 5; num430++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						}
						return;
					}
					if (this.type == 115 && Main.netMode != 1)
					{
						NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), 116, 0, 0f, 0f, 0f, 0f, 255);
						for (int num431 = 0; num431 < 10; num431++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						}
						return;
					}
					for (int num432 = 0; num432 < 20; num432++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 132, this.scale);
					Gore.NewGore(this.position, this.velocity, 133, this.scale);
					return;
				}
				else if (this.type >= 117 && this.type <= 119)
				{
					if (this.life > 0)
					{
						for (int num433 = 0; num433 < 5; num433++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						}
						return;
					}
					for (int num434 = 0; num434 < 10; num434++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 134 + this.type - 117, this.scale);
					return;
				}
				else if (this.type == 217 || this.type == 218 || this.type == 219)
				{
					if (this.life > 0)
					{
						int num435 = 0;
						while ((double)num435 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
							num435++;
						}
						return;
					}
					for (int num436 = 0; num436 < 50; num436++)
					{
						Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
					}
					if (this.type == 217)
					{
						Gore.NewGore(this.position, this.velocity, 292, this.scale);
						Gore.NewGore(this.position, this.velocity, 293, this.scale);
					}
					if (this.type == 218)
					{
						Gore.NewGore(this.position, this.velocity, 295, this.scale);
						Gore.NewGore(this.position, this.velocity, 296, this.scale);
					}
					if (this.type == 219)
					{
						Gore.NewGore(this.position, this.velocity, 294, this.scale);
						return;
					}
				}
				else if (this.type == 222)
				{
					if (this.life > 0)
					{
						int num437 = 0;
						while ((double)num437 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
							num437++;
						}
						return;
					}
					for (int num438 = 0; num438 < 50; num438++)
					{
						Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y - 35f), this.velocity, 303, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y - 45f), this.velocity, 304, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 305, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 306, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 10f), this.velocity, 307, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), this.velocity, 308, this.scale);
					return;
				}
				else if (this.type == 6 || this.type == 94 || this.type == 166)
				{
					if (this.life > 0)
					{
						int num439 = 0;
						while ((double)num439 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
							num439++;
						}
						return;
					}
					for (int num440 = 0; num440 < 50; num440++)
					{
						Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
					}
					int num441;
					if (this.type == 94)
					{
						num441 = Gore.NewGore(this.position, this.velocity, 108, this.scale);
						num441 = Gore.NewGore(this.position, this.velocity, 108, this.scale);
						num441 = Gore.NewGore(this.position, this.velocity, 109, this.scale);
						num441 = Gore.NewGore(this.position, this.velocity, 110, this.scale);
						return;
					}
					if (this.type == 166)
					{
						num441 = Gore.NewGore(this.position, this.velocity, 209, this.scale);
						num441 = Gore.NewGore(this.position, this.velocity, 210, this.scale);
						num441 = Gore.NewGore(this.position, this.velocity, 211, this.scale);
						return;
					}
					num441 = Gore.NewGore(this.position, this.velocity, 14, this.scale);
					Main.gore[num441].alpha = this.alpha;
					num441 = Gore.NewGore(this.position, this.velocity, 15, this.scale);
					Main.gore[num441].alpha = this.alpha;
					return;
				}
				else if (this.type == 101)
				{
					if (this.life > 0)
					{
						int num442 = 0;
						while ((double)num442 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
							num442++;
						}
						return;
					}
					for (int num443 = 0; num443 < 50; num443++)
					{
						Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
					}
					Gore.NewGore(this.position, this.velocity, 110, this.scale);
					Gore.NewGore(this.position, this.velocity, 114, this.scale);
					Gore.NewGore(this.position, this.velocity, 114, this.scale);
					Gore.NewGore(this.position, this.velocity, 115, this.scale);
					return;
				}
				else if (this.type == 7 || this.type == 8 || this.type == 9)
				{
					if (this.life > 0)
					{
						int num444 = 0;
						while ((double)num444 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
							num444++;
						}
						return;
					}
					for (int num445 = 0; num445 < 50; num445++)
					{
						Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
					}
					int num446 = Gore.NewGore(this.position, this.velocity, this.type - 7 + 18, 1f);
					Main.gore[num446].alpha = this.alpha;
					return;
				}
				else if (this.type == 98 || this.type == 99 || this.type == 100)
				{
					if (this.life > 0)
					{
						int num447 = 0;
						while ((double)num447 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
							num447++;
						}
						return;
					}
					for (int num448 = 0; num448 < 50; num448++)
					{
						Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
					}
					int num449 = Gore.NewGore(this.position, this.velocity, 110, 1f);
					Main.gore[num449].alpha = this.alpha;
					return;
				}
				else if (this.type == 10 || this.type == 11 || this.type == 12)
				{
					if (this.life > 0)
					{
						int num450 = 0;
						while ((double)num450 < dmg / (double)this.lifeMax * 50.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num450++;
						}
						return;
					}
					for (int num451 = 0; num451 < 10; num451++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, this.type - 7 + 18, 1f);
					return;
				}
				else if (this.type == 95 || this.type == 96 || this.type == 97)
				{
					if (this.life > 0)
					{
						int num452 = 0;
						while ((double)num452 < dmg / (double)this.lifeMax * 50.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num452++;
						}
						return;
					}
					for (int num453 = 0; num453 < 10; num453++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, this.type - 95 + 111, 1f);
					return;
				}
				else if (this.type == 13 || this.type == 14 || this.type == 15)
				{
					if (this.life > 0)
					{
						int num454 = 0;
						while ((double)num454 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
							num454++;
						}
						return;
					}
					for (int num455 = 0; num455 < 50; num455++)
					{
						Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
					}
					if (this.type == 13)
					{
						Gore.NewGore(this.position, this.velocity, 24, 1f);
						Gore.NewGore(this.position, this.velocity, 25, 1f);
						return;
					}
					if (this.type == 14)
					{
						Gore.NewGore(this.position, this.velocity, 26, 1f);
						Gore.NewGore(this.position, this.velocity, 27, 1f);
						return;
					}
					Gore.NewGore(this.position, this.velocity, 28, 1f);
					Gore.NewGore(this.position, this.velocity, 29, 1f);
					return;
				}
				else if (this.type == 17)
				{
					if (this.life > 0)
					{
						int num456 = 0;
						while ((double)num456 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num456++;
						}
						return;
					}
					for (int num457 = 0; num457 < 50; num457++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					if (this.altTexture == 0)
					{
						Gore.NewGore(this.position, this.velocity, 30, 1f);
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 31, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 31, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 32, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 32, 1f);
					return;
				}
				else if (this.type == 441)
				{
					if (this.life > 0)
					{
						int num458 = 0;
						while ((double)num458 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num458++;
						}
						return;
					}
					for (int num459 = 0; num459 < 50; num459++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 768, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 769, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 770, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 771, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 771, 1f);
					return;
				}
				else if (this.type == 86)
				{
					if (this.life > 0)
					{
						int num460 = 0;
						while ((double)num460 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num460++;
						}
						return;
					}
					for (int num461 = 0; num461 < 50; num461++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 101, 1f);
					Gore.NewGore(this.position, this.velocity, 102, 1f);
					Gore.NewGore(this.position, this.velocity, 103, 1f);
					Gore.NewGore(this.position, this.velocity, 103, 1f);
					Gore.NewGore(this.position, this.velocity, 104, 1f);
					Gore.NewGore(this.position, this.velocity, 104, 1f);
					Gore.NewGore(this.position, this.velocity, 105, 1f);
					return;
				}
				else if (this.type == 155)
				{
					if (this.life > 0)
					{
						int num462 = 0;
						while ((double)num462 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num462++;
						}
						return;
					}
					for (int num463 = 0; num463 < 50; num463++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 181, 1f);
					Gore.NewGore(this.position, this.velocity, 182, 1f);
					Gore.NewGore(this.position, this.velocity, 183, 1f);
					Gore.NewGore(this.position, this.velocity, 183, 1f);
					return;
				}
				else if (this.type == 329)
				{
					if (this.life > 0)
					{
						int num464 = 0;
						while ((double)num464 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num464++;
						}
						return;
					}
					for (int num465 = 0; num465 < 50; num465++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 485, 1f);
					Gore.NewGore(this.position, this.velocity, 486, 1f);
					Gore.NewGore(this.position, this.velocity, 487, 1f);
					return;
				}
				else if (this.type == 163 || this.type == 238)
				{
					if (this.life > 0)
					{
						int num466 = 0;
						while ((double)num466 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, 0, default(Color), 1f);
							num466++;
						}
						return;
					}
					for (int num467 = 0; num467 < 50; num467++)
					{
						Dust.NewDust(this.position, this.width, this.height, 18, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 205, 1f);
					Gore.NewGore(this.position, this.velocity, 206, 1f);
					Gore.NewGore(this.position, this.velocity, 206, 1f);
					Gore.NewGore(this.position, this.velocity, 206, 1f);
					Gore.NewGore(this.position, this.velocity, 206, 1f);
					return;
				}
				else if (this.type == 164 || this.type == 165)
				{
					if (this.life > 0)
					{
						int num468 = 0;
						while ((double)num468 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, 0, default(Color), 1f);
							num468++;
						}
						return;
					}
					for (int num469 = 0; num469 < 50; num469++)
					{
						Dust.NewDust(this.position, this.width, this.height, 18, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 207, 1f);
					Gore.NewGore(this.position, this.velocity, 208, 1f);
					Gore.NewGore(this.position, this.velocity, 208, 1f);
					Gore.NewGore(this.position, this.velocity, 208, 1f);
					Gore.NewGore(this.position, this.velocity, 208, 1f);
					return;
				}
				else if (this.type == 239 || this.type == 240)
				{
					if (this.life > 0)
					{
						int num470 = 0;
						while ((double)num470 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num470++;
						}
						return;
					}
					for (int num471 = 0; num471 < 50; num471++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 351, 1f);
					Gore.NewGore(this.position, this.velocity, 352, 1f);
					Gore.NewGore(this.position, this.velocity, 352, 1f);
					Gore.NewGore(this.position, this.velocity, 353, 1f);
					Gore.NewGore(this.position, this.velocity, 353, 1f);
					return;
				}
				else if (this.type == 236 || this.type == 237)
				{
					if (this.life > 0)
					{
						int num472 = 0;
						while ((double)num472 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, 0, default(Color), 1f);
							num472++;
						}
						return;
					}
					for (int num473 = 0; num473 < 50; num473++)
					{
						Dust.NewDust(this.position, this.width, this.height, 18, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 332, 1f);
					Gore.NewGore(this.position, this.velocity, 333, 1f);
					Gore.NewGore(this.position, this.velocity, 334, 1f);
					Gore.NewGore(this.position, this.velocity, 335, 1f);
					Gore.NewGore(this.position, this.velocity, 335, 1f);
					return;
				}
				else if (this.type == 241)
				{
					if (this.life > 0)
					{
						int num474 = 0;
						while ((double)num474 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num474++;
						}
						return;
					}
					for (int num475 = 0; num475 < 50; num475++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 354, 1f);
					Gore.NewGore(this.position, this.velocity, 355, 1f);
					return;
				}
				else if (this.type == 242)
				{
					if (this.life > 0)
					{
						int num476 = 0;
						while ((double)num476 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num476++;
						}
						return;
					}
					for (int num477 = 0; num477 < 50; num477++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 356, 1f);
					Gore.NewGore(this.position, this.velocity, 357, 1f);
					Gore.NewGore(this.position, this.velocity, 357, 1f);
					Gore.NewGore(this.position, this.velocity, 358, 1f);
					Gore.NewGore(this.position, this.velocity, 358, 1f);
					return;
				}
				else if (this.type >= 105 && this.type <= 108)
				{
					if (this.life > 0)
					{
						int num478 = 0;
						while ((double)num478 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num478++;
						}
						return;
					}
					for (int num479 = 0; num479 < 50; num479++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					if (this.type == 105 || this.type == 107)
					{
						Gore.NewGore(this.position, this.velocity, 124, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 125, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 125, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 126, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 126, 1f);
						return;
					}
					if (this.altTexture == 0 || this.type == 106)
					{
						Gore.NewGore(this.position, this.velocity, 127, 1f);
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 128, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 128, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 129, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 129, 1f);
					return;
				}
				else if (this.type == 123 || this.type == 124)
				{
					if (this.life > 0)
					{
						int num480 = 0;
						while ((double)num480 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num480++;
						}
						return;
					}
					for (int num481 = 0; num481 < 50; num481++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 151, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 152, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 152, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 153, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 153, 1f);
					return;
				}
				else if (this.type == 22)
				{
					if (this.life > 0)
					{
						int num482 = 0;
						while ((double)num482 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num482++;
						}
						return;
					}
					for (int num483 = 0; num483 < 50; num483++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 73, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 74, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 74, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 75, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 75, 1f);
					return;
				}
				else if (this.type == 368)
				{
					if (this.life > 0)
					{
						int num484 = 0;
						while ((double)num484 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num484++;
						}
						return;
					}
					for (int num485 = 0; num485 < 50; num485++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					if (this.altTexture == 0)
					{
						Gore.NewGore(this.position, this.velocity, 567, 1f);
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 568, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 568, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 569, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 569, 1f);
					return;
				}
				else if (this.type == 369 || this.type == 376)
				{
					if (this.life > 0)
					{
						return;
					}
					for (int num486 = 0; num486 < 25; num486++)
					{
						int num487 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 2f);
						Main.dust[num487].velocity *= 1.4f;
						Main.dust[num487].noLight = true;
						Main.dust[num487].noGravity = true;
					}
					int num488 = Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num488].scale = 1f;
					Gore expr_15B3C_cp_0 = Main.gore[num488];
					expr_15B3C_cp_0.velocity.X = expr_15B3C_cp_0.velocity.X + 1f;
					Gore expr_15B5C_cp_0 = Main.gore[num488];
					expr_15B5C_cp_0.velocity.Y = expr_15B5C_cp_0.velocity.Y + 1f;
					num488 = Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num488].scale = 1f;
					Gore expr_15BF5_cp_0 = Main.gore[num488];
					expr_15BF5_cp_0.velocity.X = expr_15BF5_cp_0.velocity.X - 1f;
					Gore expr_15C15_cp_0 = Main.gore[num488];
					expr_15C15_cp_0.velocity.Y = expr_15C15_cp_0.velocity.Y + 1f;
					num488 = Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num488].scale = 1f;
					Gore expr_15CAE_cp_0 = Main.gore[num488];
					expr_15CAE_cp_0.velocity.X = expr_15CAE_cp_0.velocity.X + 1f;
					Gore expr_15CCE_cp_0 = Main.gore[num488];
					expr_15CCE_cp_0.velocity.Y = expr_15CCE_cp_0.velocity.Y - 1f;
					num488 = Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num488].scale = 1f;
					Gore expr_15D67_cp_0 = Main.gore[num488];
					expr_15D67_cp_0.velocity.X = expr_15D67_cp_0.velocity.X - 1f;
					Gore expr_15D87_cp_0 = Main.gore[num488];
					expr_15D87_cp_0.velocity.Y = expr_15D87_cp_0.velocity.Y - 1f;
					return;
				}
				else if (this.type == 227)
				{
					if (this.life > 0)
					{
						int num489 = 0;
						while ((double)num489 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num489++;
						}
						return;
					}
					for (int num490 = 0; num490 < 50; num490++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					if (this.altTexture == 0)
					{
						Gore.NewGore(this.position, this.velocity, 320, 1f);
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 321, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 322, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 323, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 323, 1f);
					return;
				}
				else if (this.type == 228)
				{
					if (this.life > 0)
					{
						int num491 = 0;
						while ((double)num491 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num491++;
						}
						return;
					}
					for (int num492 = 0; num492 < 50; num492++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 324, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 325, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 326, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 327, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 327, 1f);
					return;
				}
				else if (this.type == 229)
				{
					if (this.life > 0)
					{
						int num493 = 0;
						while ((double)num493 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num493++;
						}
						return;
					}
					for (int num494 = 0; num494 < 50; num494++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					if (this.altTexture == 0)
					{
						Gore.NewGore(this.position, this.velocity, 328, 1f);
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 329, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 329, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 330, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 330, 1f);
					return;
				}
				else if (this.type == 142)
				{
					if (this.life > 0)
					{
						int num495 = 0;
						while ((double)num495 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num495++;
						}
						return;
					}
					for (int num496 = 0; num496 < 50; num496++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					if (this.altTexture == 0)
					{
						Gore.NewGore(this.position, this.velocity, 157, 1f);
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 158, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 158, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 159, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 159, 1f);
					return;
				}
				else if (this.type == 178)
				{
					if (this.life > 0)
					{
						int num497 = 0;
						while ((double)num497 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num497++;
						}
						return;
					}
					for (int num498 = 0; num498 < 50; num498++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					if (this.altTexture == 0)
					{
						Gore.NewGore(this.position, this.velocity, 231, 1f);
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 232, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 232, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 233, 1f);
					return;
				}
				else if (this.type == 353 || this.type == 354)
				{
					if (this.life > 0)
					{
						int num499 = 0;
						while ((double)num499 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num499++;
						}
						return;
					}
					for (int num500 = 0; num500 < 50; num500++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					if (this.altTexture == 0)
					{
						Gore.NewGore(this.position, this.velocity, 544, 1f);
					}
					Gore.NewGore(this.position, this.velocity, 543, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 546, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 546, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 545, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 545, 1f);
					return;
				}
				else if (this.type == 37 || this.type == 54)
				{
					if (this.life > 0)
					{
						int num501 = 0;
						while ((double)num501 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num501++;
						}
						return;
					}
					for (int num502 = 0; num502 < 50; num502++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 58, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 59, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 59, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 60, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 60, 1f);
					return;
				}
				else if (this.type == 441)
				{
					if (this.life > 0)
					{
						int num503 = 0;
						while ((double)num503 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num503++;
						}
						return;
					}
					for (int num504 = 0; num504 < 50; num504++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 768, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 769, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 770, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 771, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 771, 1f);
					return;
				}
				else if (this.type == 160)
				{
					if (this.life > 0)
					{
						int num505 = 0;
						while ((double)num505 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 26, (float)hitDirection, -1f, 0, default(Color), 1f);
							num505++;
						}
						return;
					}
					for (int num506 = 0; num506 < 50; num506++)
					{
						Dust.NewDust(this.position, this.width, this.height, 26, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 188, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 189, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 189, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 190, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 190, 1f);
					return;
				}
				else if (this.type == 18)
				{
					if (this.life > 0)
					{
						int num507 = 0;
						while ((double)num507 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num507++;
						}
						return;
					}
					for (int num508 = 0; num508 < 50; num508++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					if (this.altTexture == 0)
					{
						Gore.NewGore(this.position, this.velocity, 33, 1f);
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 34, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 34, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 35, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 35, 1f);
					return;
				}
				else if (this.type == 19)
				{
					if (this.life > 0)
					{
						int num509 = 0;
						while ((double)num509 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num509++;
						}
						return;
					}
					for (int num510 = 0; num510 < 50; num510++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 36, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 37, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 37, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 38, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 38, 1f);
					return;
				}
				else if (this.type == 38)
				{
					if (this.life > 0)
					{
						int num511 = 0;
						while ((double)num511 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num511++;
						}
						return;
					}
					for (int num512 = 0; num512 < 50; num512++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					if (this.altTexture == 0)
					{
						Gore.NewGore(this.position, this.velocity, 64, 1f);
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 65, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 65, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 66, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 66, 1f);
					return;
				}
				else if (this.type == 20)
				{
					if (this.life > 0)
					{
						int num513 = 0;
						while ((double)num513 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num513++;
						}
						return;
					}
					for (int num514 = 0; num514 < 50; num514++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 39, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 40, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 40, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 41, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 41, 1f);
					return;
				}
				else if (this.type == 207)
				{
					if (this.life > 0)
					{
						int num515 = 0;
						while ((double)num515 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num515++;
						}
						return;
					}
					for (int num516 = 0; num516 < 50; num516++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					if (this.altTexture == 0)
					{
						Gore.NewGore(this.position, this.velocity, 283, 1f);
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 284, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 284, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 285, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 285, 1f);
					return;
				}
				else if (this.type == 208)
				{
					if (this.life > 0)
					{
						int num517 = 0;
						while ((double)num517 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num517++;
						}
						return;
					}
					for (int num518 = 0; num518 < 50; num518++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 286, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 287, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 287, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 288, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 288, 1f);
					return;
				}
				else if (this.type == 209)
				{
					if (this.life > 0)
					{
						int num519 = 0;
						while ((double)num519 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num519++;
						}
						return;
					}
					for (int num520 = 0; num520 < 50; num520++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 289, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 290, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 290, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 291, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 291, 1f);
					return;
				}
				else if (this.type >= 212 && this.type <= 216)
				{
					if (this.life > 0)
					{
						int num521 = 0;
						while ((double)num521 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num521++;
						}
						return;
					}
					for (int num522 = 0; num522 < 50; num522++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					if (this.type == 212)
					{
						Gore.NewGore(this.position, this.velocity, 336, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 337, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 337, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 338, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 338, 1f);
						return;
					}
					if (this.type == 213)
					{
						Gore.NewGore(this.position, this.velocity, 339, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 340, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 340, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 341, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 341, 1f);
						return;
					}
					if (this.type == 214)
					{
						Gore.NewGore(this.position, this.velocity, 342, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 343, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 343, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 344, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 344, 1f);
						return;
					}
					if (this.type == 215)
					{
						Gore.NewGore(this.position, this.velocity, 345, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 346, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 346, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 347, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 347, 1f);
						return;
					}
					if (this.type == 216)
					{
						Gore.NewGore(this.position, this.velocity, 348, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 349, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 349, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 350, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 350, 1f);
						return;
					}
				}
				else if (this.type == 220 || this.type == 221)
				{
					if (this.life > 0)
					{
						int num523 = 0;
						while ((double)num523 < dmg / (double)this.lifeMax * 50.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 151, (float)hitDirection, -1f, 0, default(Color), 0.7f);
							num523++;
						}
						return;
					}
					for (int num524 = 0; num524 < 20; num524++)
					{
						Dust.NewDust(this.position, this.width, this.height, 151, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 0.7f);
					}
					if (this.type == 221)
					{
						Gore.NewGore(this.position, this.velocity, 298, this.scale);
						Gore.NewGore(this.position, this.velocity, 299, this.scale);
						return;
					}
					Gore.NewGore(this.position, this.velocity, 297, this.scale);
					return;
				}
				else if (this.type == 21 || this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 32 || this.type == 44 || this.type == 45 || this.type == 77 || this.type == 110 || this.type == 167 || this.type == 197 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 287 || this.type == 291 || this.type == 292 || this.type == 293 || (this.type >= 322 && this.type <= 324) || this.type == 481 || (this.type >= 449 && this.type <= 452))
				{
					if (this.life > 0)
					{
						int num525 = 0;
						while ((double)num525 < dmg / (double)this.lifeMax * 50.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 26, (float)hitDirection, -1f, 0, default(Color), 1f);
							num525++;
						}
						return;
					}
					for (int num526 = 0; num526 < 20; num526++)
					{
						Dust.NewDust(this.position, this.width, this.height, 26, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					if (this.type == 167)
					{
						Gore.NewGore(this.position, this.velocity, 213, this.scale);
						Gore.NewGore(this.position, this.velocity, 214, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 212, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 212, this.scale);
						return;
					}
					if (this.type == 197)
					{
						Gore.NewGore(this.position, this.velocity, 257, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 212, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 212, this.scale);
						return;
					}
					if (this.type == 481)
					{
						Gore.NewGore(this.position, this.velocity, 695, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 696, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 696, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 697, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 697, this.scale);
						return;
					}
					if (this.type == 201 || this.type == 450)
					{
						Gore.NewGore(this.position, this.velocity, 265, this.scale);
						Gore.NewGore(this.position, this.velocity, 267, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
						return;
					}
					if (this.type == 202 || this.type == 451)
					{
						Gore.NewGore(this.position, this.velocity, 268, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
						return;
					}
					if (this.type == 203 || this.type == 452)
					{
						Gore.NewGore(this.position, this.velocity, 269, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 266, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 266, this.scale);
						return;
					}
					if (this.type == 322)
					{
						Gore.NewGore(this.position, this.velocity, 460, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 461, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 462, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 461, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 462, this.scale);
						return;
					}
					if (this.type == 323)
					{
						Gore.NewGore(this.position, this.velocity, 463, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 465, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 464, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 464, this.scale);
						return;
					}
					if (this.type == 324)
					{
						Gore.NewGore(this.position, this.velocity, 466, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 467, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 467, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 468, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 468, this.scale);
						return;
					}
					Gore.NewGore(this.position, this.velocity, 42, this.scale);
					if (this.type == 77)
					{
						Gore.NewGore(this.position, this.velocity, 106, this.scale);
					}
					if (this.type == 110)
					{
						Gore.NewGore(this.position, this.velocity, 130, this.scale);
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
					if (this.type == 110)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 131, this.scale);
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
					return;
				}
				else if (this.type == 453)
				{
					if (this.life > 0)
					{
						int num527 = 0;
						while ((double)num527 < dmg / (double)this.lifeMax * 50.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 26, (float)hitDirection, -1f, 0, default(Color), 1f);
							num527++;
						}
						return;
					}
					for (int num528 = 0; num528 < 20; num528++)
					{
						Dust.NewDust(this.position, this.width, this.height, 26, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					if (this.altTexture == 0)
					{
						Gore.NewGore(this.position, this.velocity, 638, this.scale);
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 639, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 640, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 641, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 642, this.scale);
					return;
				}
				else if ((this.type >= 269 && this.type <= 276) || (this.type >= 281 && this.type <= 286))
				{
					if (this.life > 0)
					{
						int num529 = 0;
						while ((double)num529 < dmg / (double)this.lifeMax * 50.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 26, (float)hitDirection, -1f, 0, default(Color), 1f);
							num529++;
						}
						return;
					}
					for (int num530 = 0; num530 < 20; num530++)
					{
						Dust.NewDust(this.position, this.width, this.height, 26, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 42, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
					if (this.type == 269)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 406, this.scale);
					}
					if (this.type == 270)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 407, this.scale);
					}
					if (this.type == 271 || this.type == 272)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 408, this.scale);
					}
					if (this.type == 274)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 409, this.scale);
					}
					if (this.type == 276)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 410, this.scale);
						return;
					}
				}
				else if (this.type >= 277 && this.type <= 280)
				{
					if (this.life > 0)
					{
						int num531 = 0;
						while ((double)num531 < dmg / (double)this.lifeMax * 100.0)
						{
							int num532 = Dust.NewDust(this.position, this.width, this.height, 174, (float)hitDirection, -1f, 0, default(Color), 1f);
							Main.dust[num532].scale = 1.1f;
							Main.dust[num532].noGravity = true;
							num531++;
						}
						return;
					}
					for (int num533 = 0; num533 < 75; num533++)
					{
						int num534 = Dust.NewDust(this.position, this.width, this.height, 174, 1.5f * (float)hitDirection, -0.5f, 0, default(Color), 1f);
						Main.dust[num534].velocity *= 2f;
						Main.dust[num534].scale = 1.4f;
						Main.dust[num534].noGravity = true;
					}
					return;
				}
				else if (this.type == 341)
				{
					int num535 = 196;
					if (this.life > 0)
					{
						int num536 = 0;
						while ((double)num536 < dmg / (double)this.lifeMax * 50.0)
						{
							Dust.NewDust(this.position, this.width, this.height, num535, 0f, 0f, 0, default(Color), 1f);
							num536++;
						}
						return;
					}
					for (int num537 = 0; num537 < 20; num537++)
					{
						Dust.NewDust(this.position, this.width, this.height, num535, 0f, 0f, 0, default(Color), 1f);
					}
					int num538 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 61, this.scale);
					Main.gore[num538].velocity *= 0.3f;
					num538 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), 62, this.scale);
					Main.gore[num538].velocity *= 0.3f;
					num538 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 10f), new Vector2((float)hitDirection, 0f), 63, this.scale);
					Main.gore[num538].velocity *= 0.3f;
					return;
				}
				else if (this.type == 85)
				{
					int num539 = 7;
					if (this.ai[3] == 2f)
					{
						num539 = 10;
					}
					if (this.ai[3] == 3f)
					{
						num539 = 37;
					}
					if (this.life > 0)
					{
						int num540 = 0;
						while ((double)num540 < dmg / (double)this.lifeMax * 50.0)
						{
							Dust.NewDust(this.position, this.width, this.height, num539, 0f, 0f, 0, default(Color), 1f);
							num540++;
						}
						return;
					}
					for (int num541 = 0; num541 < 20; num541++)
					{
						Dust.NewDust(this.position, this.width, this.height, num539, 0f, 0f, 0, default(Color), 1f);
					}
					int num542 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 61, this.scale);
					Main.gore[num542].velocity *= 0.3f;
					num542 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), 62, this.scale);
					Main.gore[num542].velocity *= 0.3f;
					num542 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 10f), new Vector2((float)hitDirection, 0f), 63, this.scale);
					Main.gore[num542].velocity *= 0.3f;
					return;
				}
				else if (this.type == 473 || this.type == 474 || this.type == 475 || this.type == 476)
				{
					int num543 = 31;
					if (this.life > 0)
					{
						int num544 = 0;
						while ((double)num544 < dmg / (double)this.lifeMax * 50.0)
						{
							Dust.NewDust(this.position, this.width, this.height, num543, 0f, 0f, 0, default(Color), 1f);
							num544++;
						}
						return;
					}
					for (int num545 = 0; num545 < 20; num545++)
					{
						Dust.NewDust(this.position, this.width, this.height, num543, 0f, 0f, 0, default(Color), 1f);
					}
					int num546 = Gore.NewGore(base.Center, new Vector2((float)hitDirection, 0f), 61, this.scale);
					Main.gore[num546].velocity *= 0.3f;
					num546 = Gore.NewGore(base.Center, new Vector2((float)hitDirection, 0f), 62, this.scale);
					Main.gore[num546].velocity *= 0.3f;
					num546 = Gore.NewGore(base.Center, new Vector2((float)hitDirection, 0f), 63, this.scale);
					Main.gore[num546].velocity *= 0.3f;
					return;
				}
				else if (this.type == 169)
				{
					if (this.life > 0)
					{
						int num547 = 0;
						while ((double)num547 < dmg / (double)this.lifeMax * 50.0)
						{
							int num548 = Dust.NewDust(this.position, this.width, this.height, 92, 0f, 0f, 0, default(Color), 1.5f);
							Main.dust[num548].velocity *= 1.5f;
							Main.dust[num548].noGravity = true;
							num547++;
						}
						return;
					}
					for (int num549 = 0; num549 < 100; num549++)
					{
						int num550 = Dust.NewDust(this.position, this.width, this.height, 92, 0f, 0f, 0, default(Color), 1.5f);
						Main.dust[num550].scale = 1.5f;
						Main.dust[num550].velocity *= 2f;
						Main.dust[num550].noGravity = true;
					}
					return;
				}
				else if (this.type == 170 || this.type == 180)
				{
					if (this.life > 0)
					{
						int num551 = 0;
						while ((double)num551 < dmg / (double)this.lifeMax * 50.0)
						{
							int num552 = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 0, default(Color), 1.5f);
							Main.dust[num552].velocity *= 1.5f;
							Main.dust[num552].noGravity = true;
							num551++;
						}
						return;
					}
					for (int num553 = 0; num553 < 10; num553++)
					{
						int num554 = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 0, default(Color), 1.5f);
						Main.dust[num554].velocity *= 2f;
						Main.dust[num554].noGravity = true;
					}
					for (int num555 = 0; num555 < 4; num555++)
					{
						int num556 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), 99, this.scale);
						Main.gore[num556].velocity *= 0.3f;
					}
					return;
				}
				else if (this.type == 171)
				{
					if (this.life > 0)
					{
						int num557 = 0;
						while ((double)num557 < dmg / (double)this.lifeMax * 50.0)
						{
							int num558 = Dust.NewDust(this.position, this.width, this.height, 16, 0f, 0f, 0, default(Color), 1.5f);
							Main.dust[num558].velocity *= 1.5f;
							Main.dust[num558].noGravity = true;
							num557++;
						}
						return;
					}
					for (int num559 = 0; num559 < 10; num559++)
					{
						int num560 = Dust.NewDust(this.position, this.width, this.height, 16, 0f, 0f, 0, default(Color), 1.5f);
						Main.dust[num560].velocity *= 2f;
						Main.dust[num560].noGravity = true;
					}
					for (int num561 = 0; num561 < 4; num561++)
					{
						int num562 = 11 + num561;
						if (num562 > 13)
						{
							num562 = Main.rand.Next(11, 14);
						}
						int num563 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), num562, this.scale);
						Main.gore[num563].velocity *= 0.3f;
					}
					return;
				}
				else if (this.type == 290)
				{
					if (this.life <= 0)
					{
						for (int num564 = 0; num564 < 10; num564++)
						{
							int num565 = Dust.NewDust(this.position, this.width, this.height, 16, 0f, 0f, 0, default(Color), 1.5f);
							Main.dust[num565].velocity *= 2f;
							Main.dust[num565].noGravity = true;
						}
						int num566 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(11, 14), this.scale);
						Main.gore[num566].velocity *= 0.5f;
						num566 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), default(Vector2), Main.rand.Next(11, 14), this.scale);
						Main.gore[num566].velocity *= 0.5f;
						num566 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + 40f), default(Vector2), Main.rand.Next(11, 14), this.scale);
						Main.gore[num566].velocity *= 0.5f;
						return;
					}
				}
				else if (this.type >= 87 && this.type <= 92)
				{
					if (this.life > 0)
					{
						int num567 = 0;
						while ((double)num567 < dmg / (double)this.lifeMax * 50.0)
						{
							int num568 = Dust.NewDust(this.position, this.width, this.height, 16, 0f, 0f, 0, default(Color), 1.5f);
							Main.dust[num568].velocity *= 1.5f;
							Main.dust[num568].noGravity = true;
							num567++;
						}
						return;
					}
					for (int num569 = 0; num569 < 10; num569++)
					{
						int num570 = Dust.NewDust(this.position, this.width, this.height, 16, 0f, 0f, 0, default(Color), 1.5f);
						Main.dust[num570].velocity *= 2f;
						Main.dust[num570].noGravity = true;
					}
					int num571 = Main.rand.Next(1, 4);
					for (int num572 = 0; num572 < num571; num572++)
					{
						int num573 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), Main.rand.Next(11, 14), this.scale);
						Main.gore[num573].velocity *= 0.8f;
					}
					return;
				}
				else if (this.type == 78 || this.type == 79 || this.type == 80)
				{
					if (this.life > 0)
					{
						int num574 = 0;
						while ((double)num574 < dmg / (double)this.lifeMax * 50.0)
						{
							int num575 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
							Main.dust[num575].velocity *= 2f;
							Main.dust[num575].noGravity = true;
							num574++;
						}
						return;
					}
					for (int num576 = 0; num576 < 20; num576++)
					{
						int num577 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
						Main.dust[num577].velocity *= 2f;
						Main.dust[num577].noGravity = true;
					}
					int num578 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 61, this.scale);
					Main.gore[num578].velocity *= 0.3f;
					num578 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), 62, this.scale);
					Main.gore[num578].velocity *= 0.3f;
					num578 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 10f), new Vector2((float)hitDirection, 0f), 63, this.scale);
					Main.gore[num578].velocity *= 0.3f;
					return;
				}
				else if (this.type == 82 || this.type == 158 || this.type == 159 || this.type == 250 || this.type == 253)
				{
					if (this.life > 0)
					{
						int num579 = 0;
						while ((double)num579 < dmg / (double)this.lifeMax * 50.0)
						{
							int num580 = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 50, default(Color), 1.5f);
							Main.dust[num580].velocity *= 2f;
							Main.dust[num580].noGravity = true;
							num579++;
						}
						return;
					}
					for (int num581 = 0; num581 < 20; num581++)
					{
						int num582 = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 50, default(Color), 1.5f);
						Main.dust[num582].velocity *= 2f;
						Main.dust[num582].noGravity = true;
					}
					int num583 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 99, this.scale);
					Main.gore[num583].velocity *= 0.3f;
					num583 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 15f), new Vector2((float)hitDirection, 0f), 99, this.scale);
					Main.gore[num583].velocity *= 0.3f;
					num583 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 20f), new Vector2((float)hitDirection, 0f), 99, this.scale);
					Main.gore[num583].velocity *= 0.3f;
					return;
				}
				else if (this.type == 316 || this.type == 330)
				{
					if (this.life > 0)
					{
						int num584 = 0;
						while ((double)num584 < dmg / (double)this.lifeMax * 100.0)
						{
							int num585 = Dust.NewDust(this.position, this.width, this.height, 192, (float)hitDirection, -1f, 100, new Color(100, 100, 100, 100), 1f);
							Main.dust[num585].noGravity = true;
							num584++;
						}
						return;
					}
					for (int num586 = 0; num586 < 50; num586++)
					{
						int num587 = Dust.NewDust(this.position, this.width, this.height, 192, (float)(2 * hitDirection), -2f, 100, new Color(100, 100, 100, 100), 1f);
						Main.dust[num587].noGravity = true;
					}
					return;
				}
				else if (this.type == 315)
				{
					if (this.life > 0)
					{
						int num588 = 0;
						while ((double)num588 < dmg / (double)this.lifeMax * 50.0)
						{
							int num589 = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 50, default(Color), 1.5f);
							Main.dust[num589].velocity *= 2f;
							Main.dust[num589].noGravity = true;
							num588++;
						}
						return;
					}
					for (int num590 = 0; num590 < 20; num590++)
					{
						int num591 = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 50, default(Color), 1.5f);
						Main.dust[num591].velocity *= 2f;
						Main.dust[num591].noGravity = true;
					}
					int num592 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 99, this.scale);
					Main.gore[num592].velocity *= 0.3f;
					num592 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 15f), new Vector2((float)hitDirection, 0f), 99, this.scale);
					Main.gore[num592].velocity *= 0.3f;
					num592 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 20f), new Vector2((float)hitDirection, 0f), 99, this.scale);
					Main.gore[num592].velocity *= 0.3f;
					num592 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2((float)hitDirection, 0f), 446, this.scale);
					Main.gore[num592].velocity *= 0.1f;
					return;
				}
				else if (this.type == 254 || this.type == 255 || this.type == 256 || this.type == 257 || this.type == 258 || this.type == 259 || this.type == 260 || this.type == 261)
				{
					if (this.life > 0)
					{
						int num593 = 0;
						while ((double)num593 < dmg / (double)this.lifeMax * 50.0)
						{
							int num594 = Dust.NewDust(this.position, this.width, this.height, 165, 0f, 0f, 50, default(Color), 1.5f);
							Main.dust[num594].velocity *= 2f;
							Main.dust[num594].noGravity = true;
							num593++;
						}
						return;
					}
					for (int num595 = 0; num595 < 20; num595++)
					{
						int num596 = Dust.NewDust(this.position, this.width, this.height, 165, 0f, 0f, 50, default(Color), 1.5f);
						Main.dust[num596].velocity *= 2f;
						Main.dust[num596].noGravity = true;
					}
					if (this.type != 261)
					{
						int num597 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 375, this.scale);
						Main.gore[num597].velocity *= 0.3f;
						num597 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 15f), new Vector2((float)hitDirection, 0f), 376, this.scale);
						Main.gore[num597].velocity *= 0.3f;
						num597 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 20f), new Vector2((float)hitDirection, 0f), 377, this.scale);
						Main.gore[num597].velocity *= 0.3f;
						return;
					}
				}
				else if (this.type == 140)
				{
					if (this.life <= 0)
					{
						for (int num598 = 0; num598 < 20; num598++)
						{
							int num599 = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 50, default(Color), 1.5f);
							Main.dust[num599].velocity *= 2f;
							Main.dust[num599].noGravity = true;
						}
						int num600 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 99, this.scale);
						Main.gore[num600].velocity *= 0.3f;
						num600 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 15f), new Vector2((float)hitDirection, 0f), 99, this.scale);
						Main.gore[num600].velocity *= 0.3f;
						num600 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 20f), new Vector2((float)hitDirection, 0f), 99, this.scale);
						Main.gore[num600].velocity *= 0.3f;
						return;
					}
				}
				else if (this.type == 39 || this.type == 40 || this.type == 41)
				{
					if (this.life > 0)
					{
						int num601 = 0;
						while ((double)num601 < dmg / (double)this.lifeMax * 50.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 26, (float)hitDirection, -1f, 0, default(Color), 1f);
							num601++;
						}
						return;
					}
					for (int num602 = 0; num602 < 20; num602++)
					{
						Dust.NewDust(this.position, this.width, this.height, 26, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, this.type - 39 + 67, 1f);
					return;
				}
				else if (this.type == 34)
				{
					if (this.life > 0)
					{
						int num603 = 0;
						while ((double)num603 < dmg / (double)this.lifeMax * 30.0)
						{
							int num604 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 15, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1.8f);
							Main.dust[num604].noLight = true;
							Main.dust[num604].noGravity = true;
							Main.dust[num604].velocity *= 1.3f;
							num604 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 26, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 0, default(Color), 0.9f);
							Main.dust[num604].noLight = true;
							Main.dust[num604].velocity *= 1.3f;
							num603++;
						}
						return;
					}
					for (int num605 = 0; num605 < 15; num605++)
					{
						int num606 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 15, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1.8f);
						Main.dust[num606].noLight = true;
						Main.dust[num606].noGravity = true;
						Main.dust[num606].velocity *= 1.3f;
						num606 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 26, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 0, default(Color), 0.9f);
						Main.dust[num606].noLight = true;
						Main.dust[num606].velocity *= 1.3f;
					}
					return;
				}
				else if (this.type == 289)
				{
					if (this.life > 0)
					{
						int num607 = 0;
						while ((double)num607 < dmg / (double)this.lifeMax * 30.0)
						{
							int num608 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 181, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1.8f);
							Main.dust[num608].noLight = true;
							Main.dust[num608].noGravity = true;
							Main.dust[num608].velocity *= 1.3f;
							num607++;
						}
						return;
					}
					for (int num609 = 0; num609 < 50; num609++)
					{
						int num610 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 181, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1.8f);
						Main.dust[num610].noLight = true;
						Main.dust[num610].noGravity = true;
						Main.dust[num610].velocity *= 1.3f;
					}
					return;
				}
				else if (this.type == 35 || this.type == 36)
				{
					if (this.life > 0)
					{
						int num611 = 0;
						while ((double)num611 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 26, (float)hitDirection, -1f, 0, default(Color), 1f);
							num611++;
						}
						return;
					}
					for (int num612 = 0; num612 < 150; num612++)
					{
						Dust.NewDust(this.position, this.width, this.height, 26, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					}
					if (this.type == 35)
					{
						Gore.NewGore(this.position, this.velocity, 54, 1f);
						Gore.NewGore(this.position, this.velocity, 55, 1f);
						return;
					}
					Gore.NewGore(this.position, this.velocity, 56, 1f);
					Gore.NewGore(this.position, this.velocity, 57, 1f);
					Gore.NewGore(this.position, this.velocity, 57, 1f);
					Gore.NewGore(this.position, this.velocity, 57, 1f);
					return;
				}
				else if (this.type == 139)
				{
					if (this.life <= 0)
					{
						for (int num613 = 0; num613 < 10; num613++)
						{
							int num614 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num614].velocity *= 1.4f;
						}
						for (int num615 = 0; num615 < 5; num615++)
						{
							int num616 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
							Main.dust[num616].noGravity = true;
							Main.dust[num616].velocity *= 5f;
							num616 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num616].velocity *= 3f;
						}
						int num617 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num617].velocity *= 0.4f;
						Gore expr_1BA27_cp_0 = Main.gore[num617];
						expr_1BA27_cp_0.velocity.X = expr_1BA27_cp_0.velocity.X + 1f;
						Gore expr_1BA47_cp_0 = Main.gore[num617];
						expr_1BA47_cp_0.velocity.Y = expr_1BA47_cp_0.velocity.Y + 1f;
						num617 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num617].velocity *= 0.4f;
						Gore expr_1BACB_cp_0 = Main.gore[num617];
						expr_1BACB_cp_0.velocity.X = expr_1BACB_cp_0.velocity.X - 1f;
						Gore expr_1BAEB_cp_0 = Main.gore[num617];
						expr_1BAEB_cp_0.velocity.Y = expr_1BAEB_cp_0.velocity.Y + 1f;
						num617 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num617].velocity *= 0.4f;
						Gore expr_1BB6F_cp_0 = Main.gore[num617];
						expr_1BB6F_cp_0.velocity.X = expr_1BB6F_cp_0.velocity.X + 1f;
						Gore expr_1BB8F_cp_0 = Main.gore[num617];
						expr_1BB8F_cp_0.velocity.Y = expr_1BB8F_cp_0.velocity.Y - 1f;
						num617 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num617].velocity *= 0.4f;
						Gore expr_1BC13_cp_0 = Main.gore[num617];
						expr_1BC13_cp_0.velocity.X = expr_1BC13_cp_0.velocity.X - 1f;
						Gore expr_1BC33_cp_0 = Main.gore[num617];
						expr_1BC33_cp_0.velocity.Y = expr_1BC33_cp_0.velocity.Y - 1f;
						return;
					}
				}
				else if (this.type == 467)
				{
					if (this.life <= 0)
					{
						for (int num618 = 0; num618 < 7; num618++)
						{
							int num619 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num619].velocity *= 1.4f;
						}
						for (int num620 = 0; num620 < 3; num620++)
						{
							int num621 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
							Main.dust[num621].noGravity = true;
							Main.dust[num621].velocity *= 5f;
							num621 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num621].velocity *= 3f;
						}
						Gore.NewGore(this.position, this.velocity, 660, 1f);
						Gore.NewGore(this.position, this.velocity, 660, 1f);
						return;
					}
				}
				else if (this.type >= 134 && this.type <= 136)
				{
					if (this.type == 135 && this.life > 0 && Main.netMode != 1 && this.ai[2] == 0f && Main.rand.Next(25) == 0)
					{
						this.ai[2] = 1f;
						int num622 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), 139, 0, 0f, 0f, 0f, 0f, 255);
						if (Main.netMode == 2 && num622 < 200)
						{
							NetMessage.SendData(23, -1, -1, "", num622, 0f, 0f, 0f, 0, 0, 0);
						}
						this.netUpdate = true;
					}
					if (this.life <= 0)
					{
						Gore.NewGore(this.position, this.velocity, 156, 1f);
						if (Main.rand.Next(2) == 0)
						{
							for (int num623 = 0; num623 < 10; num623++)
							{
								int num624 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
								Main.dust[num624].velocity *= 1.4f;
							}
							for (int num625 = 0; num625 < 5; num625++)
							{
								int num626 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
								Main.dust[num626].noGravity = true;
								Main.dust[num626].velocity *= 5f;
								num626 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
								Main.dust[num626].velocity *= 3f;
							}
							int num627 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num627].velocity *= 0.4f;
							Gore expr_1C17B_cp_0 = Main.gore[num627];
							expr_1C17B_cp_0.velocity.X = expr_1C17B_cp_0.velocity.X + 1f;
							Gore expr_1C19B_cp_0 = Main.gore[num627];
							expr_1C19B_cp_0.velocity.Y = expr_1C19B_cp_0.velocity.Y + 1f;
							num627 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num627].velocity *= 0.4f;
							Gore expr_1C21F_cp_0 = Main.gore[num627];
							expr_1C21F_cp_0.velocity.X = expr_1C21F_cp_0.velocity.X - 1f;
							Gore expr_1C23F_cp_0 = Main.gore[num627];
							expr_1C23F_cp_0.velocity.Y = expr_1C23F_cp_0.velocity.Y + 1f;
							num627 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num627].velocity *= 0.4f;
							Gore expr_1C2C3_cp_0 = Main.gore[num627];
							expr_1C2C3_cp_0.velocity.X = expr_1C2C3_cp_0.velocity.X + 1f;
							Gore expr_1C2E3_cp_0 = Main.gore[num627];
							expr_1C2E3_cp_0.velocity.Y = expr_1C2E3_cp_0.velocity.Y - 1f;
							num627 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num627].velocity *= 0.4f;
							Gore expr_1C367_cp_0 = Main.gore[num627];
							expr_1C367_cp_0.velocity.X = expr_1C367_cp_0.velocity.X - 1f;
							Gore expr_1C387_cp_0 = Main.gore[num627];
							expr_1C387_cp_0.velocity.Y = expr_1C387_cp_0.velocity.Y - 1f;
							return;
						}
					}
				}
				else if (this.type == 347)
				{
					if (this.life <= 0)
					{
						Gore.NewGore(this.position, this.velocity, 524, 1f);
						Gore.NewGore(this.position, this.velocity, 525, 1f);
						Gore.NewGore(this.position, this.velocity, 526, 1f);
						Gore.NewGore(this.position, this.velocity, 527, 1f);
						for (int num628 = 0; num628 < 7; num628++)
						{
							int num629 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num629].velocity *= 1.4f;
						}
						for (int num630 = 0; num630 < 4; num630++)
						{
							int num631 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
							Main.dust[num631].noGravity = true;
							Main.dust[num631].velocity *= 5f;
							num631 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num631].velocity *= 3f;
						}
						int num632 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num632].velocity *= 0.4f;
						Gore expr_1C62F_cp_0 = Main.gore[num632];
						expr_1C62F_cp_0.velocity.X = expr_1C62F_cp_0.velocity.X + 1f;
						Gore expr_1C64F_cp_0 = Main.gore[num632];
						expr_1C64F_cp_0.velocity.Y = expr_1C64F_cp_0.velocity.Y + 1f;
						num632 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num632].velocity *= 0.4f;
						Gore expr_1C6D3_cp_0 = Main.gore[num632];
						expr_1C6D3_cp_0.velocity.X = expr_1C6D3_cp_0.velocity.X - 1f;
						Gore expr_1C6F3_cp_0 = Main.gore[num632];
						expr_1C6F3_cp_0.velocity.Y = expr_1C6F3_cp_0.velocity.Y - 1f;
						return;
					}
				}
				else if (this.type == 346)
				{
					if (this.life <= 0)
					{
						Gore.NewGore(this.position, this.velocity, 518, 1f);
						Gore.NewGore(this.position, this.velocity, 519, 1f);
						Gore.NewGore(this.position, this.velocity, 520, 1f);
						Gore.NewGore(this.position, this.velocity, 521, 1f);
						Gore.NewGore(this.position, this.velocity, 522, 1f);
						Gore.NewGore(this.position, this.velocity, 523, 1f);
						for (int num633 = 0; num633 < 10; num633++)
						{
							int num634 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num634].velocity *= 1.4f;
						}
						for (int num635 = 0; num635 < 5; num635++)
						{
							int num636 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
							Main.dust[num636].noGravity = true;
							Main.dust[num636].velocity *= 5f;
							num636 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num636].velocity *= 3f;
						}
						int num637 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num637].velocity *= 0.4f;
						Gore expr_1C9D4_cp_0 = Main.gore[num637];
						expr_1C9D4_cp_0.velocity.X = expr_1C9D4_cp_0.velocity.X + 1f;
						Gore expr_1C9F4_cp_0 = Main.gore[num637];
						expr_1C9F4_cp_0.velocity.Y = expr_1C9F4_cp_0.velocity.Y + 1f;
						num637 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num637].velocity *= 0.4f;
						Gore expr_1CA78_cp_0 = Main.gore[num637];
						expr_1CA78_cp_0.velocity.X = expr_1CA78_cp_0.velocity.X - 1f;
						Gore expr_1CA98_cp_0 = Main.gore[num637];
						expr_1CA98_cp_0.velocity.Y = expr_1CA98_cp_0.velocity.Y + 1f;
						num637 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num637].velocity *= 0.4f;
						Gore expr_1CB1C_cp_0 = Main.gore[num637];
						expr_1CB1C_cp_0.velocity.X = expr_1CB1C_cp_0.velocity.X + 1f;
						Gore expr_1CB3C_cp_0 = Main.gore[num637];
						expr_1CB3C_cp_0.velocity.Y = expr_1CB3C_cp_0.velocity.Y - 1f;
						num637 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num637].velocity *= 0.4f;
						Gore expr_1CBC0_cp_0 = Main.gore[num637];
						expr_1CBC0_cp_0.velocity.X = expr_1CBC0_cp_0.velocity.X - 1f;
						Gore expr_1CBE0_cp_0 = Main.gore[num637];
						expr_1CBE0_cp_0.velocity.Y = expr_1CBE0_cp_0.velocity.Y - 1f;
						return;
					}
				}
				else if (this.type == 127)
				{
					if (this.life <= 0)
					{
						Gore.NewGore(this.position, this.velocity, 149, 1f);
						Gore.NewGore(this.position, this.velocity, 150, 1f);
						for (int num638 = 0; num638 < 10; num638++)
						{
							int num639 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num639].velocity *= 1.4f;
						}
						for (int num640 = 0; num640 < 5; num640++)
						{
							int num641 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
							Main.dust[num641].noGravity = true;
							Main.dust[num641].velocity *= 5f;
							num641 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num641].velocity *= 3f;
						}
						int num642 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num642].velocity *= 0.4f;
						Gore expr_1CE4E_cp_0 = Main.gore[num642];
						expr_1CE4E_cp_0.velocity.X = expr_1CE4E_cp_0.velocity.X + 1f;
						Gore expr_1CE6E_cp_0 = Main.gore[num642];
						expr_1CE6E_cp_0.velocity.Y = expr_1CE6E_cp_0.velocity.Y + 1f;
						num642 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num642].velocity *= 0.4f;
						Gore expr_1CEF2_cp_0 = Main.gore[num642];
						expr_1CEF2_cp_0.velocity.X = expr_1CEF2_cp_0.velocity.X - 1f;
						Gore expr_1CF12_cp_0 = Main.gore[num642];
						expr_1CF12_cp_0.velocity.Y = expr_1CF12_cp_0.velocity.Y + 1f;
						num642 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num642].velocity *= 0.4f;
						Gore expr_1CF96_cp_0 = Main.gore[num642];
						expr_1CF96_cp_0.velocity.X = expr_1CF96_cp_0.velocity.X + 1f;
						Gore expr_1CFB6_cp_0 = Main.gore[num642];
						expr_1CFB6_cp_0.velocity.Y = expr_1CFB6_cp_0.velocity.Y - 1f;
						num642 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num642].velocity *= 0.4f;
						Gore expr_1D03A_cp_0 = Main.gore[num642];
						expr_1D03A_cp_0.velocity.X = expr_1D03A_cp_0.velocity.X - 1f;
						Gore expr_1D05A_cp_0 = Main.gore[num642];
						expr_1D05A_cp_0.velocity.Y = expr_1D05A_cp_0.velocity.Y - 1f;
						return;
					}
				}
				else if (this.type >= 128 && this.type <= 131)
				{
					if (this.life <= 0)
					{
						Gore.NewGore(this.position, this.velocity, 147, 1f);
						Gore.NewGore(this.position, this.velocity, 148, 1f);
						for (int num643 = 0; num643 < 10; num643++)
						{
							int num644 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num644].velocity *= 1.4f;
						}
						for (int num645 = 0; num645 < 5; num645++)
						{
							int num646 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
							Main.dust[num646].noGravity = true;
							Main.dust[num646].velocity *= 5f;
							num646 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num646].velocity *= 3f;
						}
						int num647 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num647].velocity *= 0.4f;
						Gore expr_1D2DB_cp_0 = Main.gore[num647];
						expr_1D2DB_cp_0.velocity.X = expr_1D2DB_cp_0.velocity.X + 1f;
						Gore expr_1D2FB_cp_0 = Main.gore[num647];
						expr_1D2FB_cp_0.velocity.Y = expr_1D2FB_cp_0.velocity.Y + 1f;
						num647 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num647].velocity *= 0.4f;
						Gore expr_1D37F_cp_0 = Main.gore[num647];
						expr_1D37F_cp_0.velocity.X = expr_1D37F_cp_0.velocity.X - 1f;
						Gore expr_1D39F_cp_0 = Main.gore[num647];
						expr_1D39F_cp_0.velocity.Y = expr_1D39F_cp_0.velocity.Y + 1f;
						num647 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num647].velocity *= 0.4f;
						Gore expr_1D423_cp_0 = Main.gore[num647];
						expr_1D423_cp_0.velocity.X = expr_1D423_cp_0.velocity.X + 1f;
						Gore expr_1D443_cp_0 = Main.gore[num647];
						expr_1D443_cp_0.velocity.Y = expr_1D443_cp_0.velocity.Y - 1f;
						num647 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num647].velocity *= 0.4f;
						Gore expr_1D4C7_cp_0 = Main.gore[num647];
						expr_1D4C7_cp_0.velocity.X = expr_1D4C7_cp_0.velocity.X - 1f;
						Gore expr_1D4E7_cp_0 = Main.gore[num647];
						expr_1D4E7_cp_0.velocity.Y = expr_1D4E7_cp_0.velocity.Y - 1f;
						return;
					}
				}
				else if (this.type == 23)
				{
					if (this.life > 0)
					{
						int num648 = 0;
						while ((double)num648 < dmg / (double)this.lifeMax * 100.0)
						{
							int num649 = 25;
							if (Main.rand.Next(2) == 0)
							{
								num649 = 6;
							}
							Dust.NewDust(this.position, this.width, this.height, num649, (float)hitDirection, -1f, 0, default(Color), 1f);
							int num650 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2f);
							Main.dust[num650].noGravity = true;
							num648++;
						}
						return;
					}
					for (int num651 = 0; num651 < 50; num651++)
					{
						int num652 = 25;
						if (Main.rand.Next(2) == 0)
						{
							num652 = 6;
						}
						Dust.NewDust(this.position, this.width, this.height, num652, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					for (int num653 = 0; num653 < 50; num653++)
					{
						int num654 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2.5f);
						Main.dust[num654].velocity *= 6f;
						Main.dust[num654].noGravity = true;
					}
					return;
				}
				else if (this.type == 24)
				{
					if (this.life > 0)
					{
						int num655 = 0;
						while ((double)num655 < dmg / (double)this.lifeMax * 100.0)
						{
							int num656 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X, this.velocity.Y, 100, default(Color), 2.5f);
							Main.dust[num656].noGravity = true;
							num655++;
						}
						return;
					}
					for (int num657 = 0; num657 < 50; num657++)
					{
						int num658 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X, this.velocity.Y, 100, default(Color), 2.5f);
						Main.dust[num658].noGravity = true;
						Main.dust[num658].velocity *= 2f;
					}
					Gore.NewGore(this.position, this.velocity, 45, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 46, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 46, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 47, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 47, 1f);
					return;
				}
				else
				{
					if (this.type == 25)
					{
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
						for (int num659 = 0; num659 < 20; num659++)
						{
							int num660 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 2f);
							Main.dust[num660].noGravity = true;
							Main.dust[num660].velocity *= 2f;
							num660 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1f);
							Main.dust[num660].velocity *= 2f;
						}
						return;
					}
					if (this.type == 33)
					{
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
						for (int num661 = 0; num661 < 20; num661++)
						{
							int num662 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 172, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1.2f);
							Main.dust[num662].noGravity = true;
							Main.dust[num662].velocity *= 2f;
							num662 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 172, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 0.6f);
							Main.dust[num662].velocity *= 2f;
						}
						return;
					}
					if (this.type == 26 || this.type == 27 || this.type == 28 || this.type == 29 || this.type == 73 || this.type == 111)
					{
						if (this.life > 0)
						{
							int num663 = 0;
							while ((double)num663 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num663++;
							}
							return;
						}
						for (int num664 = 0; num664 < 50; num664++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						int num665 = 48;
						int num666 = 49;
						int num667 = 50;
						if (this.type == 111)
						{
							num665 = 623;
							num666 = 624;
							num667 = 625;
						}
						else if (this.type == 26)
						{
							num665 = 626;
							num666 = 627;
							num667 = 628;
						}
						else if (this.type == 73)
						{
							num665 = 629;
							num666 = 630;
							num667 = 631;
						}
						else if (this.type == 27)
						{
							num665 = 632;
							num666 = 633;
							num667 = 634;
						}
						else if (this.type == 28)
						{
							num665 = 635;
							num666 = 636;
							num667 = 637;
						}
						Gore.NewGore(this.position, this.velocity, num665, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, num666, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, num666, this.scale);
						if (this.type == 111)
						{
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 131, this.scale);
						}
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, num667, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, num667, this.scale);
						return;
					}
					else if (this.type == 471)
					{
						if (this.life > 0)
						{
							int num668 = 0;
							while ((double)num668 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num668++;
							}
							return;
						}
						for (int num669 = 0; num669 < 50; num669++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 675, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 676, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 677, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 678, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 678, this.scale);
						return;
					}
					else if (this.type == 472)
					{
						if (this.life > 0)
						{
							int num670 = 0;
							while ((double)num670 < dmg / (double)this.lifeMax * 100.0)
							{
								int num671 = Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								if (Main.rand.Next(3) != 0)
								{
									Main.dust[num671].noGravity = true;
								}
								Main.dust[num671].alpha = 100;
								num670++;
							}
							return;
						}
						for (int num672 = 0; num672 < 50; num672++)
						{
							int num673 = Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
							if (Main.rand.Next(3) != 0)
							{
								Main.dust[num673].noGravity = true;
							}
							Main.dust[num673].alpha = 100;
						}
						Gore.NewGore(this.position, this.velocity, 679, this.scale);
						Gore.NewGore(this.position, this.velocity, 680, this.scale);
						return;
					}
					else if (this.type == 480)
					{
						if (this.life > 0)
						{
							int num674 = 0;
							while ((double)num674 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num674++;
							}
							return;
						}
						for (int num675 = 0; num675 < 50; num675++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 692, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 693, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 693, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 694, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 694, this.scale);
						return;
					}
					else if (this.type == 185)
					{
						if (this.life > 0)
						{
							int num676 = 0;
							while ((double)num676 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num676++;
							}
							return;
						}
						for (int num677 = 0; num677 < 50; num677++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 240, this.scale);
						return;
					}
					else
					{
						if (this.type == 30)
						{
							Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
							for (int num678 = 0; num678 < 20; num678++)
							{
								int num679 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 2f);
								Main.dust[num679].noGravity = true;
								Main.dust[num679].velocity *= 2f;
								num679 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1f);
								Main.dust[num679].velocity *= 2f;
							}
							return;
						}
						if (this.type == 42 || this.type == 176 || this.type == 205 || (this.type >= 231 && this.type <= 235))
						{
							if (this.life > 0)
							{
								int num680 = 0;
								while ((double)num680 < dmg / (double)this.lifeMax * 100.0)
								{
									Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
									num680++;
								}
								return;
							}
							for (int num681 = 0; num681 < 50; num681++)
							{
								Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
							}
							if (this.type == 205)
							{
								Gore.NewGore(this.position, this.velocity, 270, this.scale);
								Gore.NewGore(this.position, this.velocity, 271, this.scale);
								Gore.NewGore(this.position, this.velocity, 271, this.scale);
								Gore.NewGore(this.position, this.velocity, 272, this.scale);
								return;
							}
							if (this.type == 176)
							{
								Gore.NewGore(this.position, this.velocity, 229, this.scale);
								Gore.NewGore(this.position, this.velocity, 230, this.scale);
								return;
							}
							Gore.NewGore(this.position, this.velocity, 70, this.scale);
							Gore.NewGore(this.position, this.velocity, 71, this.scale);
							return;
						}
						else if (this.type == 43 || this.type == 56)
						{
							if (this.life > 0)
							{
								int num682 = 0;
								while ((double)num682 < dmg / (double)this.lifeMax * 100.0)
								{
									Dust.NewDust(this.position, this.width, this.height, 40, (float)hitDirection, -1f, this.alpha, this.color, 1.2f);
									num682++;
								}
								return;
							}
							for (int num683 = 0; num683 < 50; num683++)
							{
								Dust.NewDust(this.position, this.width, this.height, 40, (float)hitDirection, -2f, this.alpha, this.color, 1.2f);
							}
							Gore.NewGore(this.position, this.velocity, 72, 1f);
							Gore.NewGore(this.position, this.velocity, 72, 1f);
							return;
						}
						else if (this.type == 175)
						{
							if (this.life > 0)
							{
								int num684 = 0;
								while ((double)num684 < dmg / (double)this.lifeMax * 100.0)
								{
									Dust.NewDust(this.position, this.width, this.height, 40, (float)hitDirection, -1f, this.alpha, this.color, 1.2f);
									num684++;
								}
								return;
							}
							for (int num685 = 0; num685 < 50; num685++)
							{
								Dust.NewDust(this.position, this.width, this.height, 40, (float)hitDirection, -2f, this.alpha, this.color, 1.2f);
							}
							Gore.NewGore(this.position, this.velocity, 227, 1f);
							Gore.NewGore(this.position, this.velocity, 228, 1f);
							return;
						}
						else if (this.type == 48)
						{
							if (this.life > 0)
							{
								int num686 = 0;
								while ((double)num686 < dmg / (double)this.lifeMax * 100.0)
								{
									Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
									num686++;
								}
								return;
							}
							for (int num687 = 0; num687 < 50; num687++)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
							}
							Gore.NewGore(this.position, this.velocity, 80, 1f);
							Gore.NewGore(this.position, this.velocity, 81, 1f);
							return;
						}
						else if (this.type == 62 || this.type == 66)
						{
							if (this.life > 0)
							{
								int num688 = 0;
								while ((double)num688 < dmg / (double)this.lifeMax * 100.0)
								{
									Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
									num688++;
								}
								return;
							}
							for (int num689 = 0; num689 < 50; num689++)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
							}
							Gore.NewGore(this.position, this.velocity, 93, 1f);
							Gore.NewGore(this.position, this.velocity, 94, 1f);
							Gore.NewGore(this.position, this.velocity, 94, 1f);
							return;
						}
						else if (this.type == 156)
						{
							if (this.life > 0)
							{
								int num690 = 0;
								while ((double)num690 < dmg / (double)this.lifeMax * 100.0)
								{
									Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
									num690++;
								}
								return;
							}
							for (int num691 = 0; num691 < 50; num691++)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
							}
							Gore.NewGore(this.position, this.velocity, 184, 1f);
							Gore.NewGore(this.position, this.velocity, 185, 1f);
							Gore.NewGore(this.position, this.velocity, 185, 1f);
						}
					}
				}
				return;
			}
			Color newColor = new Color(50, 120, 255, 100);
			if (this.type == 64)
			{
				newColor = new Color(225, 70, 140, 100);
			}
			if (this.type == 103)
			{
				newColor = new Color(70, 225, 140, 100);
			}
			if (this.life > 0)
			{
				int num692 = 0;
				while ((double)num692 < dmg / (double)this.lifeMax * 50.0)
				{
					Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, 0, newColor, 1f);
					num692++;
				}
				return;
			}
			for (int num693 = 0; num693 < 25; num693++)
			{
				Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, 0, newColor, 1f);
			}
		}

		public static int CountNPCS(int Type)
		{
			int num = 0;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == Type)
				{
					num++;
				}
			}
			return num;
		}

		public static bool AnyNPCs(int Type)
		{
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == Type)
				{
					return true;
				}
			}
			return false;
		}

		public static int FindFirstNPC(int Type)
		{
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == Type)
				{
					return i;
				}
			}
			return -1;
		}

		public static bool NearSpikeBall(int x, int y)
		{
			Rectangle rectangle = new Rectangle(x * 16 - 300, y * 16 - 300, 600, 600);
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].aiStyle == 20)
				{
					Rectangle rectangle2 = new Rectangle((int)Main.npc[i].ai[1], (int)Main.npc[i].ai[2], 20, 20);
					if (rectangle.Intersects(rectangle2))
					{
						return true;
					}
				}
			}
			return false;
		}

		public int HasBuff(int type)
		{
			if (this.buffImmune[type])
			{
				return -1;
			}
			for (int i = 0; i < 5; i++)
			{
				if (this.buffTime[i] >= 1 && this.buffType[i] == type)
				{
					return i;
				}
			}
			return -1;
		}

		public void AddBuff(int type, int time, bool quiet = false)
		{
			if (this.buffImmune[type])
			{
				return;
			}
			if (!quiet)
			{
				if (Main.netMode == 1)
				{
					NetMessage.SendData(53, -1, -1, "", this.whoAmI, (float)type, (float)time, 0f, 0, 0, 0);
				}
				else if (Main.netMode == 2)
				{
					NetMessage.SendData(54, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
				}
			}
			int num = -1;
			for (int i = 0; i < 5; i++)
			{
				if (this.buffType[i] == type)
				{
					if (BuffLoader.ReApply(type, this, time, i))
					{
					}
					else if (this.buffTime[i] < time)
					{
						this.buffTime[i] = time;
					}
					return;
				}
			}
			while (num == -1)
			{
				int num2 = -1;
				for (int j = 0; j < 5; j++)
				{
					if (!Main.debuff[this.buffType[j]])
					{
						num2 = j;
						break;
					}
				}
				if (num2 == -1)
				{
					return;
				}
				for (int k = num2; k < 5; k++)
				{
					if (this.buffType[k] == 0)
					{
						num = k;
						break;
					}
				}
				if (num == -1)
				{
					this.DelBuff(num2);
				}
			}
			this.buffType[num] = type;
			this.buffTime[num] = time;
		}

		public void DelBuff(int b)
		{
			this.buffTime[b] = 0;
			this.buffType[b] = 0;
			for (int i = 0; i < 4; i++)
			{
				if (this.buffTime[i] == 0 || this.buffType[i] == 0)
				{
					for (int j = i + 1; j < 5; j++)
					{
						this.buffTime[j - 1] = this.buffTime[j];
						this.buffType[j - 1] = this.buffType[j];
						this.buffTime[j] = 0;
						this.buffType[j] = 0;
					}
				}
			}
			if (Main.netMode == 2)
			{
				NetMessage.SendData(54, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
			}
		}

		public Rectangle getRect()
		{
			return new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
		}

		public bool CanBeChasedBy(object attacker = null, bool ignoreDontTakeDamage = false)
		{
			return this.active && this.chaseable && this.lifeMax > 5 && (!this.dontTakeDamage || ignoreDontTakeDamage) && !this.friendly && !this.immortal;
		}

		public void moneyPing(Vector2 pos)
		{
			Main.PlaySound(38, pos, 1);
			int num = 244;
			if (this.extraValue >= 1000000f)
			{
				num = 247;
			}
			else if (this.extraValue >= 10000f)
			{
				num = 246;
			}
			else if (this.extraValue >= 100f)
			{
				num = 245;
			}
			for (int i = 0; i < 20; i++)
			{
				int num2 = Dust.NewDust(pos - new Vector2(1f, 2f), 10, 14, num, 0f, 0f, 254, default(Color), 0.25f);
				Main.dust[num2].velocity *= 0.2f;
			}
		}

		public void IdleSounds()
		{
			if ((this.type == 239 || this.type == 240) && Main.rand.Next(900) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(24, 26));
				return;
			}
			if ((this.type == 62 || this.type == 156) && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(26, 30));
				return;
			}
			if (this.type == 177 && Main.rand.Next(600) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(30, 32));
				return;
			}
			if (this.type == 226 && Main.rand.Next(800) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 32);
				return;
			}
			if (this.type == 153 && Main.rand.Next(1000) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 33);
				return;
			}
			if (this.wet && (this.type == 63 || this.type == 64 || this.type == 103) && Main.rand.Next(1000) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(34, 36));
				return;
			}
			if ((this.type == 198 || this.type == 199) && Main.rand.Next(1000) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(36, 38));
				return;
			}
			if ((this.type == 170 || this.type == 180 || this.type == 171) && Main.rand.Next(600) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(38, 41));
				return;
			}
			if (this.type == 250 && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(41, 44));
				return;
			}
			if (this.type == 508 && Main.rand.Next(800) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 44);
				return;
			}
			if (this.type == 509 && Main.rand.Next(800) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(44, 47));
				return;
			}
			if (this.type == 494 && Main.rand.Next(600) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 47);
				return;
			}
			if (this.type == 467 && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(48, 50));
				return;
			}
			if (this.type == 468 && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(50, 53));
				return;
			}
			if (this.type == 288 && Main.rand.Next(400) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(53, 55));
				return;
			}
			if ((this.type == 524 || this.type == 525 || this.type == 526 || this.type == 527) && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(55, 57));
				return;
			}
			if ((this.type == 496 || this.type == 497) && Main.rand.Next(600) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(57, 59));
				return;
			}
			if (this.type == 389 && Main.rand.Next(800) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(59, 61));
				return;
			}
			if (this.type == 471 && Main.rand.Next(600) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(61, 63));
				return;
			}
			if (this.type == 482 && Main.rand.Next(600) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(63, 66));
				return;
			}
			if (this.type == 388 && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(66, 69));
				return;
			}
			if (this.type == 520 && Main.rand.Next(800) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(69, 73));
				return;
			}
			if (this.type == 477 && Main.rand.Next(600) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 73);
				return;
			}
			if (this.type == 258 && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(74, 78));
				return;
			}
			if (this.type == 252 && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 78);
				return;
			}
			if (this.type == 469 && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(79, 81));
				return;
			}
			if ((this.type == 253 || this.type == 82) && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(81, 84));
				return;
			}
			if (this.type >= 498 && this.type <= 506 && Main.rand.Next(600) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(84, 86));
				return;
			}
			if (this.type == 391 && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(86, 87));
			}
		}

		private void UpdateAltTexture()
		{
			if (this.townNPC)
			{
				int num = this.altTexture;
				if (BirthdayParty.PartyIsUp)
				{
					this.altTexture = 1;
				}
				else
				{
					this.altTexture = 0;
				}
				if (this.type == 441 || this.type == 453)
				{
					this.altTexture = 0;
				}
				if (num == 0 && this.altTexture == 1)
				{
					for (int i = 0; i < 20; i++)
					{
						Dust.NewDust(this.position, this.width, this.height / 4, 139 + Main.rand.Next(4), 0f, -2f, 0, default(Color), 1f);
					}
				}
				if (num == 1 && this.altTexture == 0)
				{
					for (int j = 0; j < 4; j++)
					{
						Utils.PoofOfSmoke(this.position);
					}
				}
			}
		}

		public void UpdateNPC(int i)
		{
			this.whoAmI = i;
			if (this.active)
			{
				this.UpdateAltTexture();
				if (this.type == 368)
				{
					NPC.travelNPC = true;
				}
				if ((this.type >= 442 && this.type <= 448) || this.type == 539)
				{
					Color color = Lighting.GetColor((int)base.Center.X / 16, (int)base.Center.Y / 16);
					if (color.R > 20 || color.B > 20 || color.G > 20)
					{
						int num = (int)color.R;
						if ((int)color.G > num)
						{
							num = (int)color.G;
						}
						if ((int)color.B > num)
						{
							num = (int)color.B;
						}
						num /= 30;
						if (Main.rand.Next(300) < num)
						{
							int num2 = Dust.NewDust(this.position, this.width, this.height, 43, 0f, 0f, 254, new Color(255, 255, 0), 0.5f);
							Main.dust[num2].velocity *= 0f;
						}
					}
				}
				if ((this.type >= 254 && this.type <= 261) || this.type == 160)
				{
					float num3 = (float)Main.rand.Next(28, 42) * 0.005f;
					num3 += (float)(270 - (int)Main.mouseTextColor) / 500f;
					float num4 = 0.1f;
					float num5 = 0.3f + num3 / 2f;
					float num6 = 0.6f + num3;
					float num7 = 0.35f;
					num4 *= num7;
					num5 *= num7;
					num6 *= num7;
					Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, num4, num5, num6);
				}
				if (this.type == 209)
				{
					float num8 = (float)Main.rand.Next(28, 42) * 0.005f;
					num8 += (float)(270 - (int)Main.mouseTextColor) / 500f;
					float num9 = 0.1f;
					float num10 = 0.3f + num8 / 2f;
					float num11 = 0.4f + num8 / 2f;
					float num12 = 0.35f;
					num9 *= num12;
					num10 *= num12;
					num11 *= num12;
					Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, num9, num10, num11);
					if (this.ai[0] == 12f)
					{
						Lighting.AddLight(base.Top, 0.3f, 0.1f, 0.1f);
					}
				}
				if (this.type == 44)
				{
					Lighting.AddLight((int)(this.position.X + (float)(this.width / 2)) / 16, (int)(this.position.Y + 4f) / 16, 0.9f, 0.75f, 0.5f);
				}
				if (this.teleportTime > 0f)
				{
					if (this.teleportStyle == 0)
					{
						if ((float)Main.rand.Next(100) <= 100f * this.teleportTime * 2f)
						{
							int num13 = Dust.NewDust(new Vector2((float)this.getRect().X, (float)this.getRect().Y), this.getRect().Width, this.getRect().Height, 159, 0f, 0f, 0, default(Color), 1f);
							Main.dust[num13].scale = this.teleportTime * 1.5f;
							Main.dust[num13].noGravity = true;
							Main.dust[num13].velocity *= 1.1f;
						}
					}
					else if (this.teleportStyle == 4)
					{
						this.teleportTime -= 0.02f;
						if ((float)Main.rand.Next(100) <= 100f * this.teleportTime)
						{
							Dust dust = Main.dust[Dust.NewDust(this.position, this.width, this.height, 263, 0f, 0f, 0, default(Color), 1f)];
							dust.color = PortalHelper.GetPortalColor(this.lastPortalColorIndex);
							dust.noLight = true;
							dust.noGravity = true;
							dust.scale = 1.2f;
							dust.fadeIn = 0.4f;
						}
					}
					this.teleportTime -= 0.005f;
				}
				if (Main.netMode != 2)
				{
					if (this.type >= 362 && this.type <= 365)
					{
						if (Main.dayTime && Main.rand.Next(200) == 0)
						{
							Main.PlaySound(30, (int)this.position.X, (int)this.position.Y, 1);
						}
					}
					else if (this.type == 361 || this.type == 445)
					{
						if ((double)Math.Abs(this.velocity.X) < 0.5 && (!Main.dayTime || (double)this.position.Y > Main.worldSurface * 16.0) && Main.rand.Next(200) == 0)
						{
							Main.PlaySound(31, (int)this.position.X, (int)this.position.Y, 1);
						}
					}
					else if (this.type == 74 || this.type == 297 || this.type == 298 || this.type == 442)
					{
						if (Main.dayTime && Main.time < 18000.0 && Main.rand.Next(400) == 0)
						{
							if (this.type == 74)
							{
								if (Main.rand.Next(3) != 0)
								{
									Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 14);
								}
								else
								{
									Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 18);
								}
							}
							if (this.type == 297)
							{
								Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 16);
							}
							if (this.type == 298)
							{
								if (Main.rand.Next(3) != 0)
								{
									Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 17);
								}
								else
								{
									Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 19);
								}
							}
							if (this.type == 442)
							{
								int num14 = Main.rand.Next(5);
								if (num14 == 0)
								{
									Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 16);
								}
								else if (num14 == 1)
								{
									Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 17);
								}
								else if (num14 == 2)
								{
									Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 19);
								}
								else if (num14 == 3)
								{
									Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 14);
								}
								else
								{
									Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 18);
								}
							}
						}
					}
					else if ((this.type == 300 || this.type == 447) && Main.rand.Next(1800) == 0)
					{
						Main.PlaySound(33, (int)this.position.X, (int)this.position.Y, 1);
					}
				}
				if (Main.netMode == 1 && (this.townNPC || this.type == 453) && this.type != 37 && this.npcNameLookup == 0)
				{
					this.npcNameLookup = 1;
					int number = -1;
					for (int j = 0; j < 200; j++)
					{
						if (Main.npc[j] == this)
						{
							number = j;
							break;
						}
					}
					NetMessage.SendData(56, -1, -1, "", number, 0f, 0f, 0f, 0, 0, 0);
				}
				if (this.displayName == "" && Main.netMode != 1)
				{
					this.displayName = this.name;
				}
				if (Main.netMode == 1)
				{
					bool flag = false;
					int num15 = (int)(this.position.X + (float)(this.width / 2)) / 16;
					int num16 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
					try
					{
						if (num15 >= 4 && num15 <= Main.maxTilesX - 4 && num16 >= 4 && num16 <= Main.maxTilesY - 4)
						{
							if (Main.tile[num15, num16] == null)
							{
								flag = true;
							}
							else if (Main.tile[num15 - 3, num16] == null)
							{
								flag = true;
							}
							else if (Main.tile[num15 + 3, num16] == null)
							{
								flag = true;
							}
							else if (Main.tile[num15, num16 - 3] == null)
							{
								flag = true;
							}
							else if (Main.tile[num15, num16 + 3] == null)
							{
								flag = true;
							}
						}
					}
					catch
					{
						flag = true;
					}
					if (flag)
					{
						return;
					}
				}
				this.lifeRegen = 0;
				this.soulDrain = false;
				this.poisoned = false;
				this.venom = false;
				this.shadowFlame = false;
				this.onFire = false;
				this.midas = false;
				this.ichor = false;
				this.onFrostBurn = false;
				this.onFire2 = false;
				this.confused = false;
				this.loveStruck = false;
				this.dryadWard = false;
				this.stinky = false;
				this.dripping = false;
				this.drippingSlime = false;
				this.daybreak = false;
				this.javelined = false;
				this.celled = false;
				this.dryadBane = false;
				NPCLoader.ResetEffects(this);
				for (int k = 0; k < 5; k++)
				{
					if (this.buffType[k] > 0 && this.buffTime[k] > 0)
					{
						this.buffTime[k]--;
						if (this.buffType[k] == 20)
						{
							this.poisoned = true;
						}
						if (this.buffType[k] == 70)
						{
							this.venom = true;
						}
						if (this.buffType[k] == 24)
						{
							this.onFire = true;
						}
						if (this.buffType[k] == 72)
						{
							this.midas = true;
						}
						if (this.buffType[k] == 69)
						{
							this.ichor = true;
						}
						if (this.buffType[k] == 31)
						{
							this.confused = true;
						}
						if (this.buffType[k] == 39)
						{
							this.onFire2 = true;
						}
						if (this.buffType[k] == 44)
						{
							this.onFrostBurn = true;
						}
						if (this.buffType[k] == 103)
						{
							this.dripping = true;
						}
						if (this.buffType[k] == 137)
						{
							this.drippingSlime = true;
						}
						if (this.buffType[k] == 119)
						{
							this.loveStruck = true;
						}
						if (this.buffType[k] == 120)
						{
							this.stinky = true;
						}
						if (this.buffType[k] == 151)
						{
							this.soulDrain = true;
						}
						if (this.buffType[k] == 153)
						{
							this.shadowFlame = true;
						}
						if (this.buffType[k] == 165)
						{
							this.dryadWard = true;
						}
						if (this.buffType[k] == 169)
						{
							this.javelined = true;
						}
						if (this.buffType[k] == 183)
						{
							this.celled = true;
						}
						if (this.buffType[k] == 186)
						{
							this.dryadBane = true;
						}
						if (this.buffType[k] == 189)
						{
							this.daybreak = true;
						}
						BuffLoader.Update(this.buffType[k], this, ref k);
					}
				}
				if (this.soulDrain)
				{
					int num17 = 1100;
					for (int l = 0; l < 255; l++)
					{
						if (Main.player[l].active && !Main.player[l].dead && (base.Center - Main.player[l].position).Length() < (float)num17 && Main.player[l].inventory[Main.player[l].selectedItem].type == 3006 && Main.player[l].itemAnimation > 0)
						{
							if (l == Main.myPlayer)
							{
								Main.player[l].soulDrain++;
							}
							if (Main.rand.Next(3) != 0)
							{
								Vector2 vector = base.Center;
								vector.X += (float)Main.rand.Next(-100, 100) * 0.05f;
								vector.Y += (float)Main.rand.Next(-100, 100) * 0.05f;
								vector += this.velocity;
								int num18 = Dust.NewDust(vector, 1, 1, 235, 0f, 0f, 0, default(Color), 1f);
								Main.dust[num18].velocity *= 0f;
								Main.dust[num18].scale = (float)Main.rand.Next(70, 85) * 0.01f;
								Main.dust[num18].fadeIn = (float)(l + 1);
							}
						}
					}
				}
				if (Main.netMode != 1)
				{
					for (int m = 0; m < 5; m++)
					{
						if (this.buffType[m] > 0 && this.buffTime[m] <= 0)
						{
							this.DelBuff(m);
							if (Main.netMode == 2)
							{
								NetMessage.SendData(54, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
							}
						}
					}
				}
				if (!this.dontTakeDamage)
				{
					int num19 = -1;
					if (this.poisoned)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						this.lifeRegen -= 4;
					}
					if (this.onFire)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						this.lifeRegen -= 8;
					}
					if (this.onFrostBurn)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						this.lifeRegen -= 16;
						if (num19 < 2)
						{
							num19 = 2;
						}
					}
					if (this.onFire2)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						this.lifeRegen -= 12;
					}
					if (this.venom)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						this.lifeRegen -= 12;
						if (num19 < 2)
						{
							num19 = 2;
						}
					}
					if (this.shadowFlame)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						this.lifeRegen -= 30;
						if (num19 < 5)
						{
							num19 = 5;
						}
					}
					if (this.javelined)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						int num20 = 0;
						int num21 = 1;
						for (int n = 0; n < 1000; n++)
						{
							if (Main.projectile[n].active && Main.projectile[n].type == 598 && Main.projectile[n].ai[0] == 1f && Main.projectile[n].ai[1] == (float)this.whoAmI)
							{
								num20++;
							}
						}
						this.lifeRegen -= num20 * 2 * 3;
						if (num19 < num20 * 3 / num21)
						{
							num19 = num20 * 3 / num21;
						}
					}
					if (this.daybreak)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						int num22 = 0;
						int num23 = 4;
						for (int num24 = 0; num24 < 1000; num24++)
						{
							if (Main.projectile[num24].active && Main.projectile[num24].type == 636 && Main.projectile[num24].ai[0] == 1f && Main.projectile[num24].ai[1] == (float)this.whoAmI)
							{
								num22++;
							}
						}
						if (num22 == 0)
						{
							num22 = 1;
						}
						this.lifeRegen -= num22 * 2 * 100;
						if (num19 < num22 * 100 / num23)
						{
							num19 = num22 * 100 / num23;
						}
					}
					if (this.celled)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						int num25 = 0;
						for (int num26 = 0; num26 < 1000; num26++)
						{
							if (Main.projectile[num26].active && Main.projectile[num26].type == 614 && Main.projectile[num26].ai[0] == 1f && Main.projectile[num26].ai[1] == (float)this.whoAmI)
							{
								num25++;
							}
						}
						this.lifeRegen -= num25 * 2 * 20;
						if (num19 < num25 * 20)
						{
							num19 = num25 * 20 / 2;
						}
					}
					if (this.dryadBane)
					{
						int num27 = 4;
						float num28 = 1f;
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						if (NPC.downedBoss1)
						{
							num28 += 0.1f;
						}
						if (NPC.downedBoss2)
						{
							num28 += 0.1f;
						}
						if (NPC.downedBoss3)
						{
							num28 += 0.1f;
						}
						if (NPC.downedQueenBee)
						{
							num28 += 0.1f;
						}
						if (Main.hardMode)
						{
							num28 += 0.4f;
						}
						if (NPC.downedMechBoss1)
						{
							num28 += 0.15f;
						}
						if (NPC.downedMechBoss2)
						{
							num28 += 0.15f;
						}
						if (NPC.downedMechBoss3)
						{
							num28 += 0.15f;
						}
						if (NPC.downedPlantBoss)
						{
							num28 += 0.15f;
						}
						if (NPC.downedGolemBoss)
						{
							num28 += 0.15f;
						}
						if (NPC.downedAncientCultist)
						{
							num28 += 0.15f;
						}
						if (Main.expertMode)
						{
							num28 *= Main.expertNPCDamage;
						}
						num27 = (int)((float)num27 * num28);
						this.lifeRegen -= 2 * num27;
						if (num19 < num27)
						{
							num19 = num27 / 3;
						}
					}
					if (this.soulDrain && this.realLife == -1)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						this.lifeRegen -= 50;
						if (num19 < 5)
						{
							num19 = 5;
						}
					}
					NPCLoader.UpdateLifeRegen(this, ref num19);
					if (this.lifeRegen <= -240 && num19 < 2)
					{
						num19 = 2;
					}
					this.lifeRegenCount += this.lifeRegen;
					while (this.lifeRegenCount >= 120)
					{
						this.lifeRegenCount -= 120;
						if (!this.immortal)
						{
							if (this.life < this.lifeMax)
							{
								this.life++;
							}
							if (this.life > this.lifeMax)
							{
								this.life = this.lifeMax;
							}
						}
					}
					if (num19 > 0)
					{
						while (this.lifeRegenCount <= -120 * num19)
						{
							this.lifeRegenCount += 120 * num19;
							int whoAmI = this.whoAmI;
							if (this.realLife >= 0)
							{
								whoAmI = this.realLife;
							}
							if (!Main.npc[whoAmI].immortal)
							{
								Main.npc[whoAmI].life -= num19;
							}
							CombatText.NewText(new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height), CombatText.LifeRegenNegative, string.Concat(num19), false, true);
							if (Main.npc[whoAmI].life <= 0 && !Main.npc[whoAmI].immortal)
							{
								Main.npc[whoAmI].life = 1;
								if (Main.netMode != 1)
								{
									Main.npc[whoAmI].StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
									if (Main.netMode == 2)
									{
										NetMessage.SendData(28, -1, -1, "", whoAmI, 9999f, 0f, 0f, 0, 0, 0);
									}
								}
							}
						}
					}
					else
					{
						while (this.lifeRegenCount <= -120)
						{
							this.lifeRegenCount += 120;
							int whoAmI2 = this.whoAmI;
							if (this.realLife >= 0)
							{
								whoAmI2 = this.realLife;
							}
							if (!Main.npc[whoAmI2].immortal)
							{
								Main.npc[whoAmI2].life--;
							}
							CombatText.NewText(new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height), CombatText.LifeRegenNegative, string.Concat(1), false, true);
							if (Main.npc[whoAmI2].life <= 0 && !Main.npc[whoAmI2].immortal)
							{
								Main.npc[whoAmI2].life = 1;
								if (Main.netMode != 1)
								{
									Main.npc[whoAmI2].StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
									if (Main.netMode == 2)
									{
										NetMessage.SendData(28, -1, -1, "", whoAmI2, 9999f, 0f, 0f, 0, 0, 0);
									}
								}
							}
						}
					}
				}
				if (Main.netMode != 1 && Main.bloodMoon)
				{
					bool flag2 = false;
					if (this.value == 0f)
					{
						flag2 = true;
					}
					if (this.type == 46 || this.type == 303 || this.type == 337 || this.type == 443 || this.type == 540)
					{
						if (WorldGen.crimson)
						{
							this.Transform(464);
						}
						else
						{
							this.Transform(47);
						}
					}
					else if (this.type == 55 || this.type == 230)
					{
						if (WorldGen.crimson)
						{
							this.Transform(465);
						}
						else
						{
							this.Transform(57);
						}
					}
					else if (this.type == 148 || this.type == 149)
					{
						if (WorldGen.crimson)
						{
							this.Transform(470);
						}
						else
						{
							this.Transform(168);
						}
					}
					if (flag2)
					{
						this.value = 0f;
					}
				}
				float num29 = 10f;
				NPC.gravity = 0.3f;
				if (this.type == 258)
				{
					NPC.gravity = 0.1f;
					if (this.velocity.Y > 3f)
					{
						this.velocity.Y = 3f;
					}
				}
				else if (this.type == 425 && this.ai[2] == 1f)
				{
					NPC.gravity = 0.1f;
					if (this.velocity.Y > 2f)
					{
						this.velocity.Y = 2f;
					}
				}
				else if (this.type == 427 && this.ai[2] == 1f)
				{
					NPC.gravity = 0.1f;
					if (this.velocity.Y > 4f)
					{
						this.velocity.Y = 4f;
					}
				}
				else if (this.type == 426)
				{
					NPC.gravity = 0.1f;
					if (this.velocity.Y > 3f)
					{
						this.velocity.Y = 3f;
					}
				}
				else if (this.type == 541)
				{
					NPC.gravity = 0f;
				}
				float num30 = (float)(Main.maxTilesX / 4200);
				num30 *= num30;
				float num31 = (float)((double)(this.position.Y / 16f - (60f + 10f * num30)) / (Main.worldSurface / 6.0));
				if ((double)num31 < 0.25)
				{
					num31 = 0.25f;
				}
				if (num31 > 1f)
				{
					num31 = 1f;
				}
				NPC.gravity *= num31;
				if (this.wet)
				{
					if (this.honeyWet)
					{
						NPC.gravity = 0.1f;
						num29 = 4f;
					}
					else
					{
						NPC.gravity = 0.2f;
						num29 = 7f;
					}
				}
				if (this.soundDelay > 0)
				{
					this.soundDelay--;
				}
				if (this.life <= 0)
				{
					this.active = false;
				}
				this.oldTarget = this.target;
				this.oldDirection = this.direction;
				this.oldDirectionY = this.directionY;
				float num32 = 1f + Math.Abs(this.velocity.X) / 3f;
				if (this.gfxOffY > 0f)
				{
					this.gfxOffY -= num32 * this.stepSpeed;
					if (this.gfxOffY < 0f)
					{
						this.gfxOffY = 0f;
					}
				}
				else if (this.gfxOffY < 0f)
				{
					this.gfxOffY += num32 * this.stepSpeed;
					if (this.gfxOffY > 0f)
					{
						this.gfxOffY = 0f;
					}
				}
				if (this.gfxOffY > 16f)
				{
					this.gfxOffY = 16f;
				}
				if (this.gfxOffY < -16f)
				{
					this.gfxOffY = -16f;
				}
				this.TryPortalJumping();
				this.IdleSounds();
				this.AI();
				if (Main.netMode != 2 && this.extraValue > 0f)
				{
					int num33 = 244;
					float num34 = 30f;
					if (this.extraValue >= 1000000f)
					{
						num33 = 247;
						num34 *= 0.25f;
					}
					else if (this.extraValue >= 10000f)
					{
						num33 = 246;
						num34 *= 0.5f;
					}
					else if (this.extraValue >= 100f)
					{
						num33 = 245;
						num34 *= 0.75f;
					}
					if (Main.rand.Next((int)num34) == 0)
					{
						int num35 = Dust.NewDust(this.position, this.width, this.height, num33, 0f, 0f, 254, default(Color), 0.25f);
						Main.dust[num35].velocity *= 0.1f;
					}
				}
				for (int num36 = 0; num36 < 256; num36++)
				{
					if (this.immune[num36] > 0)
					{
						this.immune[num36]--;
					}
				}
				if (!this.noGravity && !this.noTileCollide)
				{
					int num37 = (int)(this.position.X + (float)(this.width / 2)) / 16;
					int num38 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
					if (WorldGen.InWorld(num37, num38, 0) && Main.tile[num37, num38] == null)
					{
						NPC.gravity = 0f;
						this.velocity.X = 0f;
						this.velocity.Y = 0f;
					}
				}
				if (!this.noGravity)
				{
					this.velocity.Y = this.velocity.Y + NPC.gravity;
					if (this.velocity.Y > num29)
					{
						this.velocity.Y = num29;
					}
				}
				if ((double)this.velocity.X < 0.005 && (double)this.velocity.X > -0.005)
				{
					this.velocity.X = 0f;
				}
				if ((Main.netMode != 1 && this.type != 37 && (this.friendly || this.type == 46 || this.type == 55 || this.type == 74 || this.type == 148 || this.type == 149 || this.type == 230 || this.type == 297 || this.type == 298 || this.type == 299 || this.type == 303 || this.type == 355 || this.type == 356 || this.type == 358 || this.type == 359 || this.type == 360 || this.type == 361 || this.type == 362 || this.type == 363 || this.type == 364 || this.type == 365 || this.type == 366 || this.type == 367 || this.type == 377 || this.type == 357 || this.type == 374 || (this.type >= 442 && this.type <= 448 && this.type != 447))) || this.type == 538 || this.type == 539 || this.type == 337 || this.type == 540 || (this.type >= 484 && this.type <= 487))
				{
					if (this.townNPC)
					{
						this.CheckDrowning();
					}
					if (this.life < this.lifeMax)
					{
						this.friendlyRegen++;
						if (this.dryadWard)
						{
							this.friendlyRegen += 10;
						}
						if (this.friendlyRegen > 180)
						{
							this.friendlyRegen = 0;
							this.life++;
							this.netUpdate = true;
						}
					}
					if (this.immune[255] == 0)
					{
						Rectangle rectangle = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
						for (int num39 = 0; num39 < 200; num39++)
						{
							if (Main.npc[num39].active && !Main.npc[num39].friendly && Main.npc[num39].damage > 0)
							{
								Rectangle rectangle2 = new Rectangle((int)Main.npc[num39].position.X, (int)Main.npc[num39].position.Y, Main.npc[num39].width, Main.npc[num39].height);
								bool? modCanHit = NPCLoader.CanHitNPC(Main.npc[num39], this);
								if (modCanHit.HasValue && !modCanHit.Value)
								{
									continue;
								}
								if (rectangle.Intersects(rectangle2) && ((modCanHit.HasValue && modCanHit.Value) || this.type != 453 || !NPCID.Sets.Skeletons.Contains(Main.npc[num39].netID)))
								{
									int num40 = Main.npc[num39].damage;
									float num41 = 6;
									int num42 = 1;
									if (Main.npc[num39].position.X + (float)(Main.npc[num39].width / 2) > this.position.X + (float)(this.width / 2))
									{
										num42 = -1;
									}
									bool crit = false;
									NPCLoader.ModifyHitNPC(Main.npc[num39], this, ref num40, ref num41, ref crit);
									double num43 = Main.npc[i].StrikeNPCNoInteraction(num40, (float)num41, num42, crit, false, false);
									if (Main.netMode != 0)
									{
										NetMessage.SendData(28, -1, -1, "", i, (float)num40, (float)num41, (float)num42, crit ? 1 : 0, 0, 0);
									}
									this.netUpdate = true;
									this.immune[255] = 30;
									NPCLoader.OnHitNPC(Main.npc[num39], this, (int)num43, num41, crit);
									if (this.dryadWard)
									{
										num40 = (int)num43 / 3;
										num41 = 6;
										num42 *= -1;
										Main.npc[num39].StrikeNPCNoInteraction(num40, (float)num41, num42, false, false, false);
										if (Main.netMode != 0)
										{
											NetMessage.SendData(28, -1, -1, "", num39, (float)num40, (float)num41, (float)num42, 0, 0, 0);
										}
										Main.npc[num39].netUpdate = true;
										Main.npc[num39].immune[255] = 30;
									}
								}
							}
						}
					}
				}
				if (!this.noTileCollide)
				{
					this.UpdateCollision();
				}
				else
				{
					this.oldPosition = this.position;
					this.oldDirection = this.direction;
					this.position += this.velocity;
					if (this.onFire && this.boss && Main.netMode != 1)
					{
						bool flag3 = Collision.WetCollision(this.position, this.width, this.height);
						if (flag3)
						{
							for (int num44 = 0; num44 < 5; num44++)
							{
								if (this.buffType[num44] == 24)
								{
									this.DelBuff(num44);
								}
							}
						}
					}
				}
				if (Main.netMode != 1 && !this.noTileCollide && this.lifeMax > 1 && Collision.SwitchTiles(this.position, this.width, this.height, this.oldPosition, 2) && (this.type == 46 || this.type == 148 || this.type == 149 || this.type == 303 || this.type == 361 || this.type == 362 || this.type == 364 || this.type == 366 || this.type == 367 || (this.type >= 442 && this.type <= 448)))
				{
					this.ai[0] = 1f;
					this.ai[1] = 400f;
					this.ai[2] = 0f;
				}
				this.FindFrame();
				if (this.type == 439 || this.type == 440)
				{
					if (this.localAI[3] <= 0f)
					{
						this.localAI[3] = 2f;
						for (int num45 = this.oldPos.Length - 1; num45 > 0; num45--)
						{
							this.oldPos[num45] = this.oldPos[num45 - 1];
						}
						this.oldPos[0] = this.position;
					}
					this.localAI[3] -= 1f;
				}
				if (this.type == 370 || this.type == 372 || this.type == 373 || this.type == 396 || this.type == 400 || this.type == 401)
				{
					for (int num46 = this.oldPos.Length - 1; num46 > 0; num46--)
					{
						this.oldPos[num46] = this.oldPos[num46 - 1];
					}
					this.oldPos[0] = this.position;
				}
				if (this.aiStyle == 87)
				{
					if ((int)this.ai[0] == 4 || this.ai[0] == 5f || this.ai[0] == 6f)
					{
						for (int num47 = this.oldPos.Length - 1; num47 > 0; num47--)
						{
							this.oldPos[num47] = this.oldPos[num47 - 1];
							this.oldRot[num47] = this.oldRot[num47 - 1];
						}
						this.oldPos[0] = this.position;
						this.oldRot[0] = this.rotation;
					}
					else
					{
						for (int num48 = this.oldPos.Length - 1; num48 >= 0; num48--)
						{
							this.oldPos[num48] = this.position;
							this.oldRot[num48] = this.rotation;
						}
					}
				}
				if (this.type == 4 || this.type == 471 || this.type == 477 || this.type == 479)
				{
					for (int num49 = this.oldPos.Length - 1; num49 > 0; num49--)
					{
						this.oldPos[num49] = this.oldPos[num49 - 1];
						this.oldRot[num49] = this.oldRot[num49 - 1];
					}
					this.oldPos[0] = this.position;
					this.oldRot[0] = this.rotation;
				}
				if (this.type == 120 || this.type == 137 || this.type == 138)
				{
					for (int num50 = this.oldPos.Length - 1; num50 > 0; num50--)
					{
						this.oldPos[num50] = this.oldPos[num50 - 1];
						Lighting.AddLight((int)this.position.X / 16, (int)this.position.Y / 16, 0.3f, 0f, 0.2f);
					}
					this.oldPos[0] = this.position;
				}
				else if (this.type == 94)
				{
					for (int num51 = this.oldPos.Length - 1; num51 > 0; num51--)
					{
						this.oldPos[num51] = this.oldPos[num51 - 1];
					}
					this.oldPos[0] = this.position;
				}
				else if (this.type == 125 || this.type == 126 || this.type == 127 || this.type == 128 || this.type == 129 || this.type == 130 || this.type == 131 || this.type == 139 || this.type == 140 || this.type == 407 || this.type == 420 || this.type == 425 || this.type == 427 || this.type == 426 || this.type == 509 || this.type == 516 || (this.type >= 542 && this.type <= 545))
				{
					for (int num52 = this.oldPos.Length - 1; num52 > 0; num52--)
					{
						this.oldPos[num52] = this.oldPos[num52 - 1];
					}
					this.oldPos[0] = this.position;
				}
				else if (this.type == 402 || this.type == 417 || this.type == 419 || this.type == 418 || this.type == 519 || this.type == 521 || this.type == 522 || this.type == 546)
				{
					for (int num53 = this.oldPos.Length - 1; num53 > 0; num53--)
					{
						this.oldPos[num53] = this.oldPos[num53 - 1];
						this.oldRot[num53] = this.oldRot[num53 - 1];
					}
					this.oldPos[0] = this.position;
					this.oldRot[0] = this.rotation;
				}
				if (!this.active)
				{
					this.netUpdate = true;
				}
				if (Main.netMode == 2)
				{
					if (Main.npcStreamSpeed > 0 && !this.townNPC && Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) > 1f)
					{
						this.netStream += 1;
						if ((int)this.netStream > Main.npcStreamSpeed)
						{
							for (int num54 = 0; num54 < 255; num54++)
							{
								if (Main.player[num54].active)
								{
									float num55 = Math.Abs(base.Center.X - Main.player[num54].Center.X) + Math.Abs(base.Center.Y - Main.player[num54].Center.Y);
									if (num55 < 250f)
									{
										byte[] expr_294E_cp_0 = this.streamPlayer;
										int expr_294E_cp_1 = num54;
										expr_294E_cp_0[expr_294E_cp_1] -= 8;
									}
									else if (num55 < 500f)
									{
										byte[] expr_2974_cp_0 = this.streamPlayer;
										int expr_2974_cp_1 = num54;
										expr_2974_cp_0[expr_2974_cp_1] -= 4;
									}
									else if (num55 < 1000f)
									{
										byte[] expr_299A_cp_0 = this.streamPlayer;
										int expr_299A_cp_1 = num54;
										expr_299A_cp_0[expr_299A_cp_1] -= 2;
									}
									else if (num55 < 1500f)
									{
										byte[] expr_29C0_cp_0 = this.streamPlayer;
										int expr_29C0_cp_1 = num54;
										expr_29C0_cp_0[expr_29C0_cp_1] -= 1;
									}
									if (this.streamPlayer[num54] <= 0)
									{
										this.streamPlayer[num54] = 8;
										NetMessage.SendData(23, num54, -1, "", i, 0f, 0f, 0f, 0, 0, 0);
									}
								}
							}
						}
					}
					if (this.townNPC)
					{
						this.netSpam = 0;
					}
					if (this.netUpdate2)
					{
						this.netUpdate = true;
					}
					if (!this.active)
					{
						this.netSpam = 0;
					}
					if (this.netUpdate)
					{
						if (this.boss)
						{
							Vector2 _ = this.oldPosition - this.position;
							if (this.netSpam <= 15)
							{
								this.netSpam += 5;
								NetMessage.SendData(23, -1, -1, "", i, 0f, 0f, 0f, 0, 0, 0);
								this.netUpdate2 = false;
							}
							else
							{
								this.netUpdate2 = true;
							}
						}
						else if (this.netSpam <= 90)
						{
							this.netSpam += 30;
							NetMessage.SendData(23, -1, -1, "", i, 0f, 0f, 0f, 0, 0, 0);
							this.netUpdate2 = false;
						}
						else
						{
							this.netUpdate2 = true;
						}
					}
					if (this.netSpam > 0)
					{
						this.netSpam--;
					}
					if (this.active && this.townNPC && NPC.TypeToNum(this.type) != -1)
					{
						if (this.homeless != this.oldHomeless || this.homeTileX != this.oldHomeTileX || this.homeTileY != this.oldHomeTileY)
						{
							int num56 = 0;
							if (this.homeless)
							{
								num56 = 1;
							}
							NetMessage.SendData(60, -1, -1, "", i, (float)Main.npc[i].homeTileX, (float)Main.npc[i].homeTileY, (float)num56, 0, 0, 0);
						}
						this.oldHomeless = this.homeless;
						this.oldHomeTileX = this.homeTileX;
						this.oldHomeTileY = this.homeTileY;
					}
				}
				this.CheckActive();
				this.netUpdate = false;
				this.justHit = false;
			}
		}

		private void UpdateCollision()
		{
			this.Collision_WalkDownSlopes();
			bool lava = this.Collision_LavaCollision();
			lava = this.Collision_WaterCollision(lava);
			if (!this.wet)
			{
				this.lavaWet = false;
				this.honeyWet = false;
			}
			if (this.wetCount > 0)
			{
				this.wetCount -= 1;
			}
			bool fall = this.Collision_DecideFallThroughPlatforms();
			this.oldVelocity = this.velocity;
			this.collideX = false;
			this.collideY = false;
			this.FishTransformationDuringRain();
			Vector2 cPosition;
			int cWidth;
			int cHeight;
			this.GetTileCollisionParameters(out cPosition, out cWidth, out cHeight);
			Vector2 velocity = this.velocity;
			this.ApplyTileCollision(fall, cPosition, cWidth, cHeight);
			if (this.wet)
			{
				if (this.honeyWet)
				{
					this.Collision_MoveWhileWet(velocity, 0.25f);
				}
				else
				{
					this.Collision_MoveWhileWet(velocity, 0.5f);
				}
			}
			else
			{
				this.Collision_MoveWhileDry();
			}
			if (this.aiStyle == 67)
			{
				this.Collision_MoveSnailOnSlopes();
				return;
			}
			if (this.type != 72 && this.type != 247 && this.type != 248 && (this.type < 542 || this.type > 545))
			{
				this.Collision_MoveSlopesAndStairFall(fall);
				if (this.townNPC)
				{
					Collision.StepConveyorBelt(this, 1f);
				}
			}
		}

		private void Collision_MoveWhileDry()
		{
			if (Collision.up)
			{
				this.velocity.Y = 0.01f;
			}
			if (this.oldVelocity.X != this.velocity.X)
			{
				this.collideX = true;
			}
			if (this.oldVelocity.Y != this.velocity.Y)
			{
				this.collideY = true;
			}
			this.oldPosition = this.position;
			this.oldDirection = this.direction;
			this.position += this.velocity;
		}

		private void ApplyTileCollision(bool fall, Vector2 cPosition, int cWidth, int cHeight)
		{
			if (this.type == 72)
			{
				this.Collision_MoveBlazingWheel();
				return;
			}
			if (this.type >= 542 && this.type <= 545)
			{
				this.Collision_MoveSandshark(fall, cPosition, cWidth, cHeight);
				return;
			}
			if (this.type == 405 || this.type == 406)
			{
				this.Collision_MoveStardustCell(fall, cPosition, cWidth, cHeight);
				return;
			}
			if (this.type == 417)
			{
				this.Collision_MoveSolarSroller(fall, cPosition, cWidth, cHeight);
				return;
			}
			this.Collision_MoveNormal(fall, cPosition, cWidth, cHeight);
		}

		private void Collision_MoveSlopesAndStairFall(bool fall)
		{
			if (fall)
			{
				this.stairFall = true;
			}
			if (this.aiStyle == 7)
			{
				int num = (int)base.Center.X / 16;
				int num2 = (int)this.position.Y / 16;
				if (WorldGen.InWorld(num, num2, 0))
				{
					int num3 = 16;
					bool flag = false;
					if (Main.tile[num, num2] != null && Main.tile[num, num2].active() && Main.tileSolid[(int)Main.tile[num, num2].type])
					{
						flag = true;
					}
					if (!Main.dayTime || Main.eclipse)
					{
						flag = true;
					}
					else
					{
						int num4 = (int)(this.position.Y + (float)this.height) / 16;
						if (this.homeTileY - num4 > num3)
						{
							flag = true;
						}
					}
					if (flag)
					{
						if ((this.position.Y + (float)this.height - 8f) / 16f < (float)this.homeTileY)
						{
							this.stairFall = true;
						}
						else
						{
							this.stairFall = false;
						}
					}
				}
			}
			Vector4 vector = Collision.SlopeCollision(this.position, this.velocity, this.width, this.height, NPC.gravity, this.stairFall);
			if (Collision.stairFall)
			{
				this.stairFall = true;
			}
			else if (!fall)
			{
				this.stairFall = false;
			}
			if (Collision.stair && Math.Abs(vector.Y - this.position.Y) > 8f)
			{
				this.gfxOffY -= vector.Y - this.position.Y;
				this.stepSpeed = 2f;
			}
			this.position.X = vector.X;
			this.position.Y = vector.Y;
			this.velocity.X = vector.Z;
			this.velocity.Y = vector.W;
		}

		private void Collision_MoveSnailOnSlopes()
		{
			Vector4 vector = Collision.SlopeCollision(this.position, this.velocity, this.width, this.height, NPC.gravity, false);
			if (this.position.X != vector.X || this.position.Y != vector.Y)
			{
				if (this.ai[2] == 0f && this.velocity.Y > 0f && ((this.direction < 0 && this.rotation == 1.57f && this.spriteDirection == 1) || (this.direction > 0 && this.rotation == 4.71f && this.spriteDirection == -1)))
				{
					this.direction *= -this.direction;
				}
				this.ai[2] = 2f;
				this.directionY = 1;
				this.rotation = 0f;
			}
			this.position.X = vector.X;
			this.position.Y = vector.Y;
			this.velocity.X = vector.Z;
			this.velocity.Y = vector.W;
		}

		private void Collision_MoveNormal(bool fall, Vector2 cPosition, int cWidth, int cHeight)
		{
			this.velocity = Collision.TileCollision(cPosition, this.velocity, cWidth, cHeight, fall, fall, 1);
		}

		private void Collision_MoveSandshark(bool fall, Vector2 cPosition, int cWidth, int cHeight)
		{
			this.velocity = Collision.AdvancedTileCollision(TileID.Sets.ForAdvancedCollision.ForSandshark, cPosition, this.velocity, cWidth, cHeight, fall, fall, 1);
		}

		private void Collision_MoveSolarSroller(bool fall, Vector2 cPosition, int cWidth, int cHeight)
		{
			this.velocity = Collision.TileCollision(cPosition, this.velocity, cWidth, cHeight, fall, fall, 1);
			if (this.ai[0] == 6f && this.velocity != this.oldVelocity)
			{
				this.ai[2] -= 1f;
				this.ai[3] = 1f;
				if (this.ai[2] > 0f)
				{
					if (this.velocity.X != 0f && this.velocity.X != this.oldVelocity.X)
					{
						this.velocity.X = -this.oldVelocity.X * 0.9f;
						this.direction *= -1;
					}
					if (this.velocity.Y != 0f && this.velocity.Y != this.oldVelocity.Y)
					{
						this.velocity.Y = -this.oldVelocity.Y * 0.9f;
					}
				}
			}
		}

		private void Collision_MoveStardustCell(bool fall, Vector2 cPosition, int cWidth, int cHeight)
		{
			this.velocity = Collision.TileCollision(cPosition, this.velocity, cWidth, cHeight, fall, fall, 1);
			if (this.velocity != this.oldVelocity)
			{
				if (this.velocity.X != 0f && this.velocity.X != this.oldVelocity.X)
				{
					this.velocity.X = -this.oldVelocity.X * 0.8f;
				}
				if (this.velocity.Y != 0f && this.velocity.Y != this.oldVelocity.Y)
				{
					this.velocity.Y = -this.oldVelocity.Y * 0.8f;
				}
			}
		}

		private void Collision_MoveBlazingWheel()
		{
			Vector2 position = new Vector2(this.position.X + (float)(this.width / 2), this.position.Y + (float)(this.height / 2));
			int num = 12;
			int num2 = 12;
			position.X -= (float)(num / 2);
			position.Y -= (float)(num2 / 2);
			this.velocity = Collision.noSlopeCollision(position, this.velocity, num, num2, true, true);
		}

		private void Collision_MoveWaterOrLavaOld(bool fall, Vector2 cPosition, int cWidth, int cHeight)
		{
			Vector2 velocity = this.velocity;
			this.velocity = Collision.TileCollision(cPosition, this.velocity, cWidth, cHeight, fall, fall, 1);
			if (Collision.up)
			{
				this.velocity.Y = 0.01f;
			}
			Vector2 value = this.velocity * 0.5f;
			if (this.velocity.X != velocity.X)
			{
				value.X = this.velocity.X;
				this.collideX = true;
			}
			if (this.velocity.Y != velocity.Y)
			{
				value.Y = this.velocity.Y;
				this.collideY = true;
			}
			this.oldPosition = this.position;
			this.oldDirection = this.direction;
			this.position += value;
		}

		private void Collision_MoveHoneyOld(bool fall, Vector2 cPosition, int cWidth, int cHeight)
		{
			Vector2 velocity = this.velocity;
			this.velocity = Collision.TileCollision(cPosition, this.velocity, cWidth, cHeight, fall, fall, 1);
			if (Collision.up)
			{
				this.velocity.Y = 0.01f;
			}
			Vector2 value = this.velocity * 0.25f;
			if (this.velocity.X != velocity.X)
			{
				value.X = this.velocity.X;
				this.collideX = true;
			}
			if (this.velocity.Y != velocity.Y)
			{
				value.Y = this.velocity.Y;
				this.collideY = true;
			}
			this.oldPosition = this.position;
			this.oldDirection = this.direction;
			this.position += value;
		}

		private void Collision_MoveWhileWet(Vector2 oldDryVelocity, float Slowdown = 0.5f)
		{
			if (Collision.up)
			{
				this.velocity.Y = 0.01f;
			}
			Vector2 value = this.velocity * Slowdown;
			if (this.velocity.X != oldDryVelocity.X)
			{
				value.X = this.velocity.X;
				this.collideX = true;
			}
			if (this.velocity.Y != oldDryVelocity.Y)
			{
				value.Y = this.velocity.Y;
				this.collideY = true;
			}
			this.oldPosition = this.position;
			this.oldDirection = this.direction;
			this.position += value;
		}

		private void GetTileCollisionParameters(out Vector2 cPosition, out int cWidth, out int cHeight)
		{
			cPosition = this.position;
			cWidth = this.width;
			cHeight = this.height;
			if (this.type == 243)
			{
				cHeight = 90;
			}
			if (this.type == 290)
			{
				cHeight = 40;
			}
			if (this.type == 351)
			{
				cHeight = 40;
			}
			if (this.type == 482)
			{
				cHeight = 40;
			}
			if (this.type == 351 || this.type == 343 || this.type == 348 || this.type == 349)
			{
				cHeight = 40;
			}
			if (this.type == 391)
			{
				for (int i = 0; i < 200; i++)
				{
					if (Main.npc[i].active && Main.npc[i].type == 390 && Main.npc[i].ai[0] == (float)this.whoAmI)
					{
						cHeight = 62;
						break;
					}
				}
			}
			if (this.type == 415)
			{
				for (int j = 0; j < 200; j++)
				{
					if (Main.npc[j].active && Main.npc[j].type == 416 && Main.npc[j].ai[0] == (float)this.whoAmI)
					{
						cHeight = 62;
						break;
					}
				}
			}
			if (cHeight != this.height)
			{
				cPosition.Y += (float)(this.height - cHeight);
			}
		}

		private void FishTransformationDuringRain()
		{
			if (Main.netMode != 1)
			{
				if (this.type == 230 && this.wet)
				{
					int direction = this.direction;
					Vector2 velocity = this.velocity;
					this.Transform(55);
					this.direction = direction;
					this.velocity = velocity;
					this.wet = true;
					if (this.velocity.Y < 0f)
					{
						this.velocity.Y = 0f;
						return;
					}
				}
				else if (this.type == 55 && !this.wet && Main.raining)
				{
					int direction2 = this.direction;
					Vector2 velocity2 = this.velocity;
					this.Transform(230);
					this.direction = direction2;
					this.velocity = velocity2;
					this.homeTileX = (int)(this.position.X / 16f) + 10 * this.direction;
				}
			}
		}

		private bool Collision_DecideFallThroughPlatforms()
		{
			bool result = false;
			if (this.type == 2 || this.type == -43 || this.type == 317 || this.type == 318 || this.type == 133)
			{
				result = true;
			}
			if (this.aiStyle == 10)
			{
				result = true;
			}
			if (this.aiStyle == 40)
			{
				result = true;
			}
			if (this.type == 467)
			{
				result = true;
			}
			if (this.type == 477)
			{
				result = true;
			}
			if (this.aiStyle == 14)
			{
				result = true;
			}
			if (this.type == 173)
			{
				result = true;
			}
			if (this.type == 469 && this.ai[2] == 1f)
			{
				result = true;
			}
			if (this.aiStyle == 3 && this.directionY == 1)
			{
				result = true;
			}
			if (this.type == 210 || this.type == 211)
			{
				result = true;
			}
			if (this.type == 50 && this.target >= 0 && Main.player[this.target].position.Y > this.position.Y + (float)this.height)
			{
				result = true;
			}
			if (this.type == 247 || this.type == 248)
			{
				result = true;
			}
			if (this.type == 245 && this.target >= 0 && Main.player[this.target].position.Y > this.position.Y + (float)this.height)
			{
				result = true;
			}
			if (this.type >= 542 && this.type <= 545)
			{
				result = true;
			}
			if (this.type == 418)
			{
				result = true;
			}
			if (this.aiStyle == 87 && Main.player[this.target].position.Y > this.position.Y + (float)this.height)
			{
				result = true;
			}
			if (this.aiStyle == 7)
			{
				int num = 16;
				bool flag = false;
				if (!Main.dayTime || Main.invasionType > 0 || Main.eclipse)
				{
					flag = true;
				}
				else
				{
					int num2 = (int)(this.position.Y + (float)this.height) / 16;
					if (this.homeTileY - num2 > num)
					{
						result = true;
					}
				}
				if (flag && (this.position.Y + (float)this.height - 8f) / 16f < (float)(this.homeTileY - 1))
				{
					result = true;
				}
			}
			return result;
		}

		private bool Collision_WaterCollision(bool lava)
		{
			bool flag;
			if (this.type == 72 || this.aiStyle == 21 || this.aiStyle == 67 || this.type == 376 || this.type == 541)
			{
				flag = false;
				this.wetCount = 0;
				lava = false;
			}
			else
			{
				flag = Collision.WetCollision(this.position, this.width, this.height);
				if (Collision.honey)
				{
					this.honeyWet = true;
				}
			}
			if (flag)
			{
				if (this.onFire && !this.lavaWet && Main.netMode != 1)
				{
					for (int i = 0; i < 5; i++)
					{
						if (this.buffType[i] == 24)
						{
							this.DelBuff(i);
						}
					}
				}
				if (!this.wet && this.wetCount == 0)
				{
					this.wetCount = 10;
					if (!lava)
					{
						if (this.honeyWet)
						{
							for (int j = 0; j < 10; j++)
							{
								int num = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 152, 0f, 0f, 0, default(Color), 1f);
								Dust expr_14E_cp_0 = Main.dust[num];
								expr_14E_cp_0.velocity.Y = expr_14E_cp_0.velocity.Y - 1f;
								Dust expr_16B_cp_0 = Main.dust[num];
								expr_16B_cp_0.velocity.X = expr_16B_cp_0.velocity.X * 2.5f;
								Main.dust[num].scale = 1.3f;
								Main.dust[num].alpha = 100;
								Main.dust[num].noGravity = true;
							}
							if (this.aiStyle != 1 && this.type != 1 && this.type != 16 && this.type != 147 && this.type != 59 && this.type != 300 && this.aiStyle != 39 && !this.noGravity)
							{
								Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
							}
						}
						else
						{
							for (int k = 0; k < 30; k++)
							{
								int num2 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, Dust.dustWater(), 0f, 0f, 0, default(Color), 1f);
								Dust expr_2BA_cp_0 = Main.dust[num2];
								expr_2BA_cp_0.velocity.Y = expr_2BA_cp_0.velocity.Y - 4f;
								Dust expr_2D8_cp_0 = Main.dust[num2];
								expr_2D8_cp_0.velocity.X = expr_2D8_cp_0.velocity.X * 2.5f;
								Main.dust[num2].scale *= 0.8f;
								Main.dust[num2].alpha = 100;
								Main.dust[num2].noGravity = true;
							}
							if (this.type != 376 && this.aiStyle != 1 && this.type != 1 && this.type != 16 && this.type != 147 && this.type != 59 && this.type != 300 && this.aiStyle != 39 && this.aiStyle != 68 && this.type != 362 && this.type != 364 && this.type != 361 && this.type != 445 && !this.noGravity)
							{
								Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 0);
							}
						}
					}
					else
					{
						for (int l = 0; l < 10; l++)
						{
							int num3 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 35, 0f, 0f, 0, default(Color), 1f);
							Dust expr_48E_cp_0 = Main.dust[num3];
							expr_48E_cp_0.velocity.Y = expr_48E_cp_0.velocity.Y - 1.5f;
							Dust expr_4AC_cp_0 = Main.dust[num3];
							expr_4AC_cp_0.velocity.X = expr_4AC_cp_0.velocity.X * 2.5f;
							Main.dust[num3].scale = 1.3f;
							Main.dust[num3].alpha = 100;
							Main.dust[num3].noGravity = true;
						}
						if (this.aiStyle != 1 && this.type != 1 && this.type != 16 && this.type != 147 && this.type != 59 && this.type != 300 && this.aiStyle != 39 && !this.noGravity)
						{
							Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
						}
					}
				}
				this.wet = true;
			}
			else if (this.wet)
			{
				this.velocity.X = this.velocity.X * 0.5f;
				this.wet = false;
				if (this.wetCount == 0)
				{
					this.wetCount = 10;
					if (!this.lavaWet)
					{
						if (this.honeyWet)
						{
							for (int m = 0; m < 10; m++)
							{
								int num4 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 152, 0f, 0f, 0, default(Color), 1f);
								Dust expr_642_cp_0 = Main.dust[num4];
								expr_642_cp_0.velocity.Y = expr_642_cp_0.velocity.Y - 1f;
								Dust expr_660_cp_0 = Main.dust[num4];
								expr_660_cp_0.velocity.X = expr_660_cp_0.velocity.X * 2.5f;
								Main.dust[num4].scale = 1.3f;
								Main.dust[num4].alpha = 100;
								Main.dust[num4].noGravity = true;
							}
							if (this.aiStyle != 1 && this.type != 1 && this.type != 16 && this.type != 147 && this.type != 300 && this.type != 59 && this.aiStyle != 39 && !this.noGravity)
							{
								Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
							}
						}
						else
						{
							for (int n = 0; n < 30; n++)
							{
								int num5 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, Dust.dustWater(), 0f, 0f, 0, default(Color), 1f);
								Dust expr_7B5_cp_0 = Main.dust[num5];
								expr_7B5_cp_0.velocity.Y = expr_7B5_cp_0.velocity.Y - 4f;
								Dust expr_7D3_cp_0 = Main.dust[num5];
								expr_7D3_cp_0.velocity.X = expr_7D3_cp_0.velocity.X * 2.5f;
								Main.dust[num5].scale *= 0.8f;
								Main.dust[num5].alpha = 100;
								Main.dust[num5].noGravity = true;
							}
							if (this.type != 376 && this.aiStyle != 1 && this.type != 1 && this.type != 16 && this.type != 59 && this.type != 300 && this.aiStyle != 39 && this.aiStyle != 68 && this.type != 362 && this.type != 364 && this.type != 361 && this.type != 445 && !this.noGravity)
							{
								Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 0);
							}
						}
					}
					else
					{
						for (int num6 = 0; num6 < 10; num6++)
						{
							int num7 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 35, 0f, 0f, 0, default(Color), 1f);
							Dust expr_979_cp_0 = Main.dust[num7];
							expr_979_cp_0.velocity.Y = expr_979_cp_0.velocity.Y - 1.5f;
							Dust expr_997_cp_0 = Main.dust[num7];
							expr_997_cp_0.velocity.X = expr_997_cp_0.velocity.X * 2.5f;
							Main.dust[num7].scale = 1.3f;
							Main.dust[num7].alpha = 100;
							Main.dust[num7].noGravity = true;
						}
						if (this.aiStyle != 1 && this.type != 1 && this.type != 16 && this.type != 59 && this.type != 300 && this.aiStyle != 39 && !this.noGravity)
						{
							Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
						}
					}
				}
			}
			return lava;
		}

		private bool Collision_LavaCollision()
		{
			bool flag = Collision.LavaCollision(this.position, this.width, this.height);
			if (flag)
			{
				this.lavaWet = true;
				if (!this.lavaImmune && !this.dontTakeDamage && Main.netMode != 1 && this.immune[255] == 0)
				{
					this.AddBuff(24, 420, false);
					this.immune[255] = 30;
					this.StrikeNPCNoInteraction(50, 0f, 0, false, false, false);
					if (Main.netMode == 2 && Main.netMode != 0)
					{
						NetMessage.SendData(28, -1, -1, "", this.whoAmI, 50f, 0f, 0f, 0, 0, 0);
					}
				}
			}
			return flag;
		}

		private void Collision_WalkDownSlopes()
		{
			float arg_0B_0 = this.velocity.Y;
			Vector4 vector = Collision.WalkDownSlope(this.position, this.velocity, this.width, this.height, NPC.gravity);
			this.position.X = vector.X;
			this.position.Y = vector.Y;
			this.velocity.X = vector.Z;
			this.velocity.Y = vector.W;
		}

		public static void setFireFlyChance()
		{
			if (Main.rand == null)
			{
				Main.rand = new Random((int)DateTime.Now.Ticks);
			}
			if (WorldGen.genRand.Next(9) == 0)
			{
				NPC.fireFlyChance = Main.rand.Next(5, 10);
				NPC.fireFlyFriendly = Main.rand.Next(1, 4);
				NPC.fireFlyMultiple = Main.rand.Next(3, 8);
			}
			else if (WorldGen.genRand.Next(3) == 0)
			{
				NPC.fireFlyChance = 999999;
				NPC.fireFlyFriendly = 999999;
				NPC.fireFlyMultiple = 999999;
			}
			else
			{
				NPC.fireFlyChance = Main.rand.Next(10, 60);
				NPC.fireFlyFriendly = Main.rand.Next(2, 15);
				NPC.fireFlyMultiple = Main.rand.Next(6, 30);
			}
			NPC.butterflyChance = Main.rand.Next(1, 25);
			if (WorldGen.genRand.Next(3) == 0)
			{
				NPC.butterflyChance = 999999;
			}
		}

		public Color GetAlpha(Color newColor)
		{
			Color? modColor = NPCLoader.GetAlpha(this, newColor);
			if (modColor.HasValue)
			{
				return modColor.Value;
			}
			float num = (float)(255 - this.alpha) / 255f;
			int num2 = (int)((float)newColor.R * num);
			int num3 = (int)((float)newColor.G * num);
			int num4 = (int)((float)newColor.B * num);
			int num5 = (int)newColor.A - this.alpha;
			if (this.type == 402)
			{
				return new Color(255, 255, 255, 255);
			}
			if (this.type == 484)
			{
				return new Color(250, 250, 250, 200);
			}
			if (this.type >= 542 && this.type <= 545 && num2 + num3 + num4 > 10 && num2 + num3 + num4 >= 60)
			{
				num2 *= 2;
				num3 *= 2;
				num4 *= 2;
				if (num2 > 255)
				{
					num2 = 255;
				}
				if (num3 > 255)
				{
					num3 = 255;
				}
				if (num4 > 255)
				{
					num4 = 255;
				}
			}
			if ((this.type >= 454 && this.type <= 459) || this.type == 521)
			{
				newColor = Color.Lerp(newColor, Color.White, 0.4f);
				newColor.A = 150;
				newColor *= (float)num5 / 255f;
				return newColor;
			}
			if (this.type == 440)
			{
				byte b = 180;
				if (Main.expertMode)
				{
					b = 210;
				}
				b = (byte)((float)b * num);
				return new Color((int)b, (int)b, (int)b, (int)b);
			}
			if (this.type == 516)
			{
				return new Color(this.alpha, this.alpha, this.alpha, this.alpha);
			}
			if (this.type == 522)
			{
				return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 255 - this.alpha);
			}
			if (this.type == 523)
			{
				return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 255 - this.alpha);
			}
			if (this.type == 395 || this.type == 519)
			{
				newColor = Color.Lerp(newColor, Color.White, 0.4f);
				return newColor;
			}
			if (this.type == 370 && this.ai[0] != -1f && this.ai[0] < 9f)
			{
				float num6 = MathHelper.Lerp(num, 1f, 0.25f);
				if (num6 > 1f)
				{
					num6 = 1f;
				}
				num4 = (int)((float)newColor.B * num6);
			}
			if (this.type == 30)
			{
				return new Color(250, 250, 250, 100);
			}
			if (this.type == 25 || this.type == 30 || this.type == 59 || this.type == 60)
			{
				return new Color(200, 200, 200, 0);
			}
			if (this.type == 360)
			{
				num2 = (int)newColor.R;
				num3 = (int)newColor.G;
				num4 = (int)newColor.B;
				if (num2 < 75)
				{
					num2 = 75;
				}
				if (num3 < 175)
				{
					num3 = 175;
				}
				if (num4 < 255)
				{
					num4 = 255;
				}
				return new Color(num2, num3, num4, 255);
			}
			if (this.type == 352)
			{
				return new Color(255, 255, 255, 200);
			}
			if (this.type == 72)
			{
				num2 = (int)newColor.R;
				num3 = (int)newColor.G;
				num4 = (int)newColor.B;
			}
			else
			{
				if (this.type == 288)
				{
					return new Color(200, 200, 200, 0);
				}
				if (this.type == 289)
				{
					return new Color(250, 250, 250, 50);
				}
				if (this.type >= 254 && this.type <= 261)
				{
					num4 = 255;
					if (num2 < 100)
					{
						num2 = 100;
					}
					if (num3 < 150)
					{
						num3 = 150;
					}
				}
				else if (this.type == 374)
				{
					num4 = 255;
					if (num2 < 100)
					{
						num2 = 100;
					}
					if (num3 < 150)
					{
						num3 = 150;
					}
				}
				else if (this.type == 64 || this.type == 63 || this.type == 75 || this.type == 103 || this.type == 400)
				{
					num2 = (int)((double)newColor.R * 1.5);
					num3 = (int)((double)newColor.G * 1.5);
					num4 = (int)((double)newColor.B * 1.5);
					if (num2 > 255)
					{
						num2 = 255;
					}
					if (num3 > 255)
					{
						num3 = 255;
					}
					if (num4 > 255)
					{
						num4 = 255;
					}
				}
			}
			if (num5 < 0)
			{
				num5 = 0;
			}
			if (num5 > 255)
			{
				num5 = 255;
			}
			return new Color(num2, num3, num4, num5);
		}

		public Color GetColor(Color newColor)
		{
			int num = (int)(this.color.R - (255 - newColor.R));
			int num2 = (int)(this.color.G - (255 - newColor.G));
			int num3 = (int)(this.color.B - (255 - newColor.B));
			int num4 = (int)(this.color.A - (255 - newColor.A));
			if (num < 0)
			{
				num = 0;
			}
			if (num > 255)
			{
				num = 255;
			}
			if (num2 < 0)
			{
				num2 = 0;
			}
			if (num2 > 255)
			{
				num2 = 255;
			}
			if (num3 < 0)
			{
				num3 = 0;
			}
			if (num3 > 255)
			{
				num3 = 255;
			}
			if (num4 < 0)
			{
				num4 = 0;
			}
			if (num4 > 255)
			{
				num4 = 255;
			}
			return new Color(num, num2, num3, num4);
		}

		public string GetChat()
		{
			Recipe.FindRecipes();
			bool flag = false;
			bool flag2 = false;
			bool flag3 = false;
			bool flag4 = false;
			bool flag5 = false;
			bool flag6 = false;
			bool flag7 = false;
			bool flag8 = false;
			bool flag9 = false;
			bool flag10 = false;
			bool flag11 = false;
			bool flag12 = false;
			bool flag13 = false;
			bool flag14 = false;
			bool flag15 = false;
			bool flag16 = false;
			bool flag17 = false;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active)
				{
					if (Main.npc[i].type == 17)
					{
						flag = true;
					}
					else if (Main.npc[i].type == 18)
					{
						flag2 = true;
					}
					else if (Main.npc[i].type == 19)
					{
						flag3 = true;
					}
					else if (Main.npc[i].type == 20)
					{
						flag4 = true;
					}
					else if (Main.npc[i].type == 37)
					{
						flag5 = true;
					}
					else if (Main.npc[i].type == 38)
					{
						flag6 = true;
					}
					else if (Main.npc[i].type == 124)
					{
						flag7 = true;
					}
					else if (Main.npc[i].type == 107)
					{
						flag8 = true;
					}
					else if (Main.npc[i].type == 54)
					{
						flag9 = true;
					}
					else if (Main.npc[i].type == 160)
					{
						flag10 = true;
					}
					else if (Main.npc[i].type == 178)
					{
						flag11 = true;
					}
					else if (Main.npc[i].type == 229)
					{
						flag12 = true;
					}
					else if (Main.npc[i].type == 209)
					{
						flag13 = true;
					}
					else if (Main.npc[i].type == 208)
					{
						flag14 = true;
					}
					else if (Main.npc[i].type == 353)
					{
						flag15 = true;
					}
					else if (Main.npc[i].type == 22)
					{
						flag16 = true;
					}
					else if (Main.npc[i].type == 2)
					{
						flag17 = true;
					}
				}
			}
			string result = "";
			if (this.type == 17)
			{
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = Lang.GetBirthdayDialog(this, false);
				}
				else if (!NPC.downedBoss1 && Main.rand.Next(3) == 0)
				{
					if (Main.player[Main.myPlayer].statLifeMax < 200)
					{
						result = Lang.dialog(1, false);
					}
					else if (Main.player[Main.myPlayer].statDefense <= 10)
					{
						result = Lang.dialog(2, false);
					}
					else
					{
						result = Lang.dialog(3, false);
					}
				}
				else if (Main.dayTime)
				{
					if (Main.time < 16200.0)
					{
						int num = Main.rand.Next(3);
						if (num == 0)
						{
							result = Lang.dialog(4, false);
						}
						else if (num == 1)
						{
							result = Lang.dialog(5, false);
						}
						else
						{
							result = Lang.dialog(6, false);
						}
					}
					else if (Main.time > 37800.0)
					{
						int num2 = Main.rand.Next(3);
						if (num2 == 0)
						{
							result = Lang.dialog(7, false);
						}
						else if (num2 == 1)
						{
							result = Lang.dialog(8, false);
						}
						else
						{
							result = Lang.dialog(9, false);
						}
					}
					else
					{
						int num3 = Main.rand.Next(3);
						if (num3 == 0)
						{
							result = Lang.dialog(10, false);
						}
						else if (num3 == 1)
						{
							result = Lang.dialog(11, false);
						}
						else
						{
							result = Lang.dialog(12, false);
						}
					}
				}
				else if (Main.bloodMoon)
				{
					if (flag2 && flag7 && Main.rand.Next(3) == 0)
					{
						result = Lang.dialog(13, false);
					}
					else
					{
						int num4 = Main.rand.Next(4);
						if (num4 == 0)
						{
							result = Lang.dialog(14, false);
						}
						else if (num4 == 1)
						{
							result = Lang.dialog(15, false);
						}
						else if (num4 == 2)
						{
							result = Lang.dialog(16, false);
						}
						else
						{
							result = Lang.dialog(17, false);
						}
					}
				}
				else if (Main.time < 9720.0)
				{
					if (Main.rand.Next(2) == 0)
					{
						result = Lang.dialog(18, false);
					}
					else
					{
						result = Lang.dialog(19, false);
					}
				}
				else if (Main.time > 22680.0)
				{
					if (Main.rand.Next(2) == 0)
					{
						result = Lang.dialog(20, false);
					}
					else
					{
						result = Lang.dialog(21, false);
					}
				}
				else
				{
					int num5 = Main.rand.Next(3);
					if (num5 == 0)
					{
						result = Lang.dialog(22, false);
					}
					else if (num5 == 1)
					{
						result = Lang.dialog(23, false);
					}
					else
					{
						result = Lang.dialog(24, false);
					}
				}
			}
			else if (this.type == 18)
			{
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = Lang.GetBirthdayDialog(this, false);
				}
				else if (Main.bloodMoon)
				{
					if ((double)Main.player[Main.myPlayer].statLife < (double)Main.player[Main.myPlayer].statLifeMax2 * 0.66)
					{
						int num6 = Main.rand.Next(3);
						if (num6 == 0)
						{
							result = Lang.dialog(25, false);
						}
						else if (num6 == 1)
						{
							result = Lang.dialog(26, false);
						}
						else
						{
							result = Lang.dialog(27, false);
						}
					}
					else
					{
						int num7 = Main.rand.Next(4);
						if (num7 == 0)
						{
							result = Lang.dialog(28, false);
						}
						else if (num7 == 1)
						{
							result = Lang.dialog(29, false);
						}
						else if (num7 == 2)
						{
							result = Lang.dialog(30, false);
						}
						else
						{
							result = Lang.dialog(31, false);
						}
					}
				}
				else if (Main.rand.Next(3) == 0 && !NPC.downedBoss3)
				{
					result = Lang.dialog(32, false);
				}
				else if (flag6 && Main.rand.Next(4) == 0)
				{
					result = Lang.dialog(33, false);
				}
				else if (flag3 && Main.rand.Next(4) == 0)
				{
					result = Lang.dialog(34, false);
				}
				else if (flag17 && Main.rand.Next(4) == 0)
				{
					result = Lang.dialog(35, false);
				}
				else if ((double)Main.player[Main.myPlayer].statLife < (double)Main.player[Main.myPlayer].statLifeMax2 * 0.33)
				{
					int num8 = Main.rand.Next(5);
					if (num8 == 0)
					{
						result = Lang.dialog(36, false);
					}
					else if (num8 == 1)
					{
						result = Lang.dialog(37, false);
					}
					else if (num8 == 2)
					{
						result = Lang.dialog(38, false);
					}
					else if (num8 == 3)
					{
						result = Lang.dialog(39, false);
					}
					else
					{
						result = Lang.dialog(40, false);
					}
				}
				else if ((double)Main.player[Main.myPlayer].statLife < (double)Main.player[Main.myPlayer].statLifeMax2 * 0.66)
				{
					int num9 = Main.rand.Next(7);
					if (num9 == 0)
					{
						result = Lang.dialog(41, false);
					}
					else if (num9 == 1)
					{
						result = Lang.dialog(42, false);
					}
					else if (num9 == 2)
					{
						result = Lang.dialog(43, false);
					}
					else if (num9 == 3)
					{
						result = Lang.dialog(44, false);
					}
					else if (num9 == 4)
					{
						result = Lang.dialog(45, false);
					}
					else if (num9 == 5)
					{
						result = Lang.dialog(46, false);
					}
					else
					{
						result = Lang.dialog(47, false);
					}
				}
				else
				{
					int num10 = Main.rand.Next(4);
					if (num10 == 0)
					{
						result = Lang.dialog(48, false);
					}
					else if (num10 == 1)
					{
						result = Lang.dialog(49, false);
					}
					else if (num10 == 2)
					{
						result = Lang.dialog(50, false);
					}
					else
					{
						result = Lang.dialog(51, false);
					}
				}
			}
			else if (this.type == 19)
			{
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = Lang.GetBirthdayDialog(this, false);
				}
				else if (NPC.downedBoss3 && !Main.hardMode)
				{
					result = Lang.dialog(58, false);
				}
				else if (flag2 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(59, false);
				}
				else if (flag2 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(60, false);
				}
				else if (flag4 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(61, false);
				}
				else if (flag6 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(62, false);
				}
				else if (flag6 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(63, false);
				}
				else if (Main.bloodMoon)
				{
					if (Main.rand.Next(2) == 0)
					{
						result = Lang.dialog(64, false);
					}
					else
					{
						result = Lang.dialog(65, false);
					}
				}
				else
				{
					int num11 = Main.rand.Next(3);
					if (num11 == 0)
					{
						result = Lang.dialog(66, false);
					}
					else if (num11 == 1)
					{
						result = Lang.dialog(67, false);
					}
					else
					{
						result = Lang.dialog(68, false);
					}
				}
			}
			else if (this.type == 20)
			{
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = Lang.GetBirthdayDialog(this, false);
				}
				else if (!NPC.downedBoss2 && Main.rand.Next(3) == 0)
				{
					if (WorldGen.crimson)
					{
						result = Lang.dialog(332, false);
					}
					else
					{
						result = Lang.dialog(69, false);
					}
				}
				else if (flag3 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(70, false);
				}
				else if (flag && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(71, false);
				}
				else if (flag5 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(72, false);
				}
				else if (flag10 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(238, false);
				}
				else if (Main.bloodMoon)
				{
					int num12 = Main.rand.Next(4);
					if (num12 == 0)
					{
						result = Lang.dialog(73, false);
					}
					else if (num12 == 1)
					{
						result = Lang.dialog(74, false);
					}
					else if (num12 == 2)
					{
						result = Lang.dialog(75, false);
					}
					else
					{
						result = Lang.dialog(76, false);
					}
				}
				else
				{
					int num13 = Main.rand.Next(5);
					if (num13 == 0)
					{
						if (WorldGen.crimson)
						{
							result = Lang.dialog(333, false);
						}
						else
						{
							result = Lang.dialog(77, false);
						}
					}
					else if (num13 == 1)
					{
						result = Lang.dialog(78, false);
					}
					else if (num13 == 2)
					{
						result = Lang.dialog(79, false);
					}
					else if (num13 == 3)
					{
						result = Lang.dialog(80, false);
					}
					else
					{
						result = Lang.dialog(81, false);
					}
				}
			}
			else if (this.type == 37)
			{
				if (Main.dayTime)
				{
					int num14 = Main.rand.Next(3);
					if (num14 == 0)
					{
						result = Lang.dialog(82, false);
					}
					else if (num14 == 1)
					{
						result = Lang.dialog(83, false);
					}
					else
					{
						result = Lang.dialog(84, false);
					}
				}
				else if (Main.player[Main.myPlayer].statLifeMax < 300 || Main.player[Main.myPlayer].statDefense < 10)
				{
					int num15 = Main.rand.Next(4);
					if (num15 == 0)
					{
						result = Lang.dialog(85, false);
					}
					else if (num15 == 1)
					{
						result = Lang.dialog(86, false);
					}
					else if (num15 == 2)
					{
						result = Lang.dialog(87, false);
					}
					else
					{
						result = Lang.dialog(88, false);
					}
				}
				else
				{
					int num16 = Main.rand.Next(4);
					if (num16 == 0)
					{
						result = Lang.dialog(89, false);
					}
					else if (num16 == 1)
					{
						result = Lang.dialog(90, false);
					}
					else if (num16 == 2)
					{
						result = Lang.dialog(91, false);
					}
					else
					{
						result = Lang.dialog(92, false);
					}
				}
			}
			else if (this.type == 38)
			{
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = Lang.GetBirthdayDialog(this, false);
				}
				else if (!NPC.downedBoss2 && Main.rand.Next(3) == 0)
				{
					result = Lang.dialog(93, false);
				}
				else if (Main.bloodMoon)
				{
					int num17 = Main.rand.Next(3);
					if (num17 == 0)
					{
						result = Lang.dialog(94, false);
					}
					else if (num17 == 1)
					{
						result = Lang.dialog(95, false);
					}
					else
					{
						result = Lang.dialog(96, false);
					}
				}
				else if (flag3 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(97, false);
				}
				else if (flag3 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(98, false);
				}
				else if (flag2 && Main.rand.Next(4) == 0)
				{
					result = Lang.dialog(99, false);
				}
				else if (flag4 && Main.rand.Next(4) == 0)
				{
					result = Lang.dialog(100, false);
				}
				else if (!Main.dayTime)
				{
					int num18 = Main.rand.Next(4);
					if (num18 == 0)
					{
						result = Lang.dialog(101, false);
					}
					else if (num18 == 1)
					{
						result = Lang.dialog(102, false);
					}
					else if (num18 == 2)
					{
						result = Lang.dialog(103, false);
					}
					else
					{
						result = Lang.dialog(104, false);
					}
				}
				else
				{
					int num19 = Main.rand.Next(5);
					if (num19 == 0)
					{
						result = Lang.dialog(105, false);
					}
					else if (num19 == 1)
					{
						result = Lang.dialog(106, false);
					}
					else if (num19 == 2)
					{
						result = Lang.dialog(107, false);
					}
					else if (num19 == 3)
					{
						result = Lang.dialog(108, false);
					}
					else
					{
						result = Lang.dialog(109, false);
					}
				}
			}
			else if (this.type == 54)
			{
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = Lang.GetBirthdayDialog(this, false);
				}
				else if (!flag7 && Main.rand.Next(2) == 0)
				{
					result = Lang.dialog(110, false);
				}
				else if (flag10 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(237, false);
				}
				else if (Main.bloodMoon)
				{
					result = Lang.dialog(111, false);
				}
				else if (flag2 && Main.rand.Next(4) == 0)
				{
					result = Lang.dialog(112, false);
				}
				else if (Main.player[Main.myPlayer].head == 24)
				{
					result = Lang.dialog(113, false);
				}
				else
				{
					int num20 = Main.rand.Next(6);
					if (num20 == 0)
					{
						result = Lang.dialog(114, false);
					}
					else if (num20 == 1)
					{
						result = Lang.dialog(115, false);
					}
					else if (num20 == 2)
					{
						result = Lang.dialog(116, false);
					}
					else if (num20 == 3)
					{
						result = Lang.dialog(117, false);
					}
					else if (num20 == 4)
					{
						result = Lang.dialog(118, false);
					}
					else
					{
						result = Lang.dialog(119, false);
					}
				}
			}
			else if (this.type == 105)
			{
				result = Lang.dialog(120, false);
			}
			else if (this.type == 107)
			{
				if (this.homeless)
				{
					int num21 = Main.rand.Next(5);
					if (num21 == 0)
					{
						result = Lang.dialog(121, false);
					}
					else if (num21 == 1)
					{
						result = Lang.dialog(122, false);
					}
					else if (num21 == 2)
					{
						result = Lang.dialog(123, false);
					}
					else if (num21 == 3)
					{
						result = Lang.dialog(124, false);
					}
					else
					{
						result = Lang.dialog(125, false);
					}
				}
				else if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = Lang.GetBirthdayDialog(this, false);
				}
				else if (flag7 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(126, false);
				}
				else if (flag15 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(309, false);
				}
				else if (!Main.dayTime)
				{
					int num22 = Main.rand.Next(5);
					if (num22 == 0)
					{
						result = Lang.dialog(127, false);
					}
					else if (num22 == 1)
					{
						result = Lang.dialog(128, false);
					}
					else if (num22 == 2)
					{
						result = Lang.dialog(129, false);
					}
					else if (num22 == 3)
					{
						result = Lang.dialog(130, false);
					}
					else
					{
						result = Lang.dialog(131, false);
					}
				}
				else
				{
					int num23 = Main.rand.Next(5);
					if (num23 == 0)
					{
						result = Lang.dialog(132, false);
					}
					else if (num23 == 1)
					{
						result = Lang.dialog(133, false);
					}
					else if (num23 == 2)
					{
						result = Lang.dialog(134, false);
					}
					else if (num23 == 3)
					{
						result = Lang.dialog(135, false);
					}
					else
					{
						result = Lang.dialog(136, false);
					}
				}
			}
			else if (this.type == 106)
			{
				result = Lang.dialog(137, false);
			}
			else if (this.type == 108)
			{
				if (this.homeless)
				{
					int num24 = Main.rand.Next(3);
					if (num24 == 0)
					{
						result = Lang.dialog(138, false);
					}
					else if (num24 == 1 && !Main.player[Main.myPlayer].Male)
					{
						result = Lang.dialog(139, false);
					}
					else if (num24 == 1)
					{
						result = Lang.dialog(140, false);
					}
					else if (num24 == 2)
					{
						result = Lang.dialog(141, false);
					}
				}
				else if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = Lang.GetBirthdayDialog(this, false);
				}
				else if (Main.player[Main.myPlayer].Male && flag17 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(142, false);
				}
				else if (Main.player[Main.myPlayer].Male && flag6 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(143, false);
				}
				else if (Main.player[Main.myPlayer].Male && flag8 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(144, false);
				}
				else if (!Main.player[Main.myPlayer].Male && flag2 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(145, false);
				}
				else if (!Main.player[Main.myPlayer].Male && flag7 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(146, false);
				}
				else if (!Main.player[Main.myPlayer].Male && flag4 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(147, false);
				}
				else if (!Main.dayTime)
				{
					int num25 = Main.rand.Next(3);
					if (num25 == 0)
					{
						result = Lang.dialog(148, false);
					}
					else if (num25 == 1)
					{
						result = Lang.dialog(149, false);
					}
					else if (num25 == 2)
					{
						result = Lang.dialog(150, false);
					}
				}
				else
				{
					int num26 = Main.rand.Next(5);
					if (num26 == 0)
					{
						result = Lang.dialog(151, false);
					}
					else if (num26 == 1)
					{
						result = Lang.dialog(152, false);
					}
					else if (num26 == 2)
					{
						result = Lang.dialog(153, false);
					}
					else if (num26 == 3)
					{
						result = Lang.dialog(154, false);
					}
					else
					{
						result = Lang.dialog(155, false);
					}
				}
			}
			else if (this.type == 123)
			{
				result = Lang.dialog(156, false);
			}
			else if (this.type == 124)
			{
				if (this.homeless)
				{
					int num27 = Main.rand.Next(4);
					if (num27 == 0)
					{
						result = Lang.dialog(157, false);
					}
					else if (num27 == 1)
					{
						result = Lang.dialog(158, false);
					}
					else if (num27 == 2)
					{
						result = Lang.dialog(159, false);
					}
					else
					{
						result = Lang.dialog(160, false);
					}
				}
				else if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = Lang.GetBirthdayDialog(this, false);
				}
				else if (Main.bloodMoon)
				{
					int num28 = Main.rand.Next(4);
					if (num28 == 0)
					{
						result = Lang.dialog(161, false);
					}
					else if (num28 == 1)
					{
						result = Lang.dialog(162, false);
					}
					else if (num28 == 2)
					{
						result = Lang.dialog(163, false);
					}
					else
					{
						result = Lang.dialog(164, false);
					}
				}
				else if (flag8 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(165, false);
				}
				else if (flag3 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(166, false);
				}
				else
				{
					int num29 = Main.rand.Next(3);
					if (num29 == 0)
					{
						result = Lang.dialog(167, false);
					}
					else if (num29 == 1)
					{
						result = Lang.dialog(168, false);
					}
					else
					{
						result = Lang.dialog(169, false);
					}
				}
			}
			else if (this.type == 22)
			{
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = Lang.GetBirthdayDialog(this, false);
				}
				else if (Main.bloodMoon)
				{
					int num30 = Main.rand.Next(3);
					if (num30 == 0)
					{
						result = Lang.dialog(170, false);
					}
					else if (num30 == 1)
					{
						result = Lang.dialog(171, false);
					}
					else
					{
						result = Lang.dialog(172, false);
					}
				}
				else if (!Main.dayTime)
				{
					result = Lang.dialog(173, false);
				}
				else
				{
					int num31 = Main.rand.Next(3);
					if (num31 == 0)
					{
						result = Lang.dialog(174, false);
					}
					else if (num31 == 1)
					{
						result = Lang.dialog(175, false);
					}
					else
					{
						result = Lang.dialog(176, false);
					}
				}
			}
			else if (this.type == 142)
			{
				int num32 = Main.rand.Next(3);
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = Lang.GetBirthdayDialog(this, false);
				}
				else if (num32 == 0)
				{
					result = Lang.dialog(224, false);
				}
				else if (num32 == 1)
				{
					result = Lang.dialog(225, false);
				}
				else if (num32 == 2)
				{
					result = Lang.dialog(226, false);
				}
			}
			else if (this.type == 160)
			{
				int num33 = Main.rand.Next(6);
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = Lang.GetBirthdayDialog(this, false);
				}
				else if (flag4 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(232, false);
				}
				else if (flag9 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(236, false);
				}
				else if (num33 == 0)
				{
					result = Lang.dialog(231, false);
				}
				else if (num33 == 1)
				{
					result = Lang.dialog(233, false);
				}
				else if (num33 == 2)
				{
					result = Lang.dialog(234, false);
				}
				else if (num33 == 3)
				{
					result = Lang.dialog(235, false);
				}
				else if (num33 == 4)
				{
					result = Lang.dialog(240, false);
				}
				else if (num33 == 5)
				{
					result = Lang.dialog(241, false);
				}
			}
			else if (this.type == 178)
			{
				int num34 = Main.rand.Next(5);
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = Lang.GetBirthdayDialog(this, false);
				}
				else if (Main.bloodMoon && Main.rand.Next(3) == 0)
				{
					result = Lang.dialog(245, false);
				}
				else if (flag13 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(246, false);
				}
				else if (flag12 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(247, false);
				}
				else if (num34 == 0)
				{
					result = Lang.dialog(242, false);
				}
				else if (num34 == 1)
				{
					result = Lang.dialog(243, false);
				}
				else if (num34 == 2)
				{
					result = Lang.dialog(244, false);
				}
				else if (num34 == 3)
				{
					result = Lang.dialog(248, false);
				}
				else if (num34 == 4)
				{
					result = Lang.dialog(249, false);
				}
			}
			else if (this.type == 207)
			{
				int num35 = Main.rand.Next(3);
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = Lang.GetBirthdayDialog(this, false);
				}
				else if (flag12 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(260, false);
				}
				else if (num35 == 0)
				{
					result = Lang.dialog(257, false);
				}
				else if (num35 == 1)
				{
					result = Lang.dialog(258, false);
				}
				else if (num35 == 2)
				{
					result = Lang.dialog(259, false);
				}
			}
			else if (this.type == 208)
			{
				int num36 = Main.rand.Next(7);
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = Lang.GetBirthdayDialog(this, false);
				}
				else if (Main.player[Main.myPlayer].Male && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(268, false);
				}
				else if (flag15 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(310, false);
				}
				else if (num36 == 0)
				{
					result = Lang.dialog(265, false);
				}
				else if (num36 == 1)
				{
					result = Lang.dialog(266, false);
				}
				else if (num36 == 2)
				{
					result = Lang.dialog(267, false);
				}
				else if (num36 == 3)
				{
					result = Lang.dialog(269, false);
				}
				else if (num36 == 4)
				{
					result = Lang.dialog(270, false);
				}
				else if (num36 == 5)
				{
					result = Lang.dialog(271, false);
				}
				else if (num36 == 6)
				{
					result = Lang.dialog(272, false);
				}
			}
			else if (this.type == 209)
			{
				int num37 = Main.rand.Next(5);
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = Lang.GetBirthdayDialog(this, false);
				}
				else if (flag12 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(284, false);
				}
				else if (flag11 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(283, false);
				}
				else if (num37 == 0)
				{
					result = Lang.dialog(280, false);
				}
				else if (num37 == 1)
				{
					result = Lang.dialog(281, false);
				}
				else if (num37 == 2)
				{
					result = Lang.dialog(282, false);
				}
				else if (num37 == 3)
				{
					result = Lang.dialog(285, false);
				}
				else if (num37 == 4)
				{
					result = Lang.dialog(286, false);
				}
			}
			else if (this.type == 227)
			{
				int num38 = Main.rand.Next(5);
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = Lang.GetBirthdayDialog(this, false);
				}
				else if (Main.hardMode && Main.rand.Next(7) == 0)
				{
					result = Lang.dialog(250, false);
				}
				else if (flag14 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(251, false);
				}
				else if (num38 == 0)
				{
					result = Lang.dialog(252, false);
				}
				else if (num38 == 1)
				{
					result = Lang.dialog(253, false);
				}
				else if (num38 == 2)
				{
					result = Lang.dialog(254, false);
				}
				else if (num38 == 3)
				{
					result = Lang.dialog(255, false);
				}
				else if (num38 == 4)
				{
					result = Lang.dialog(256, false);
				}
			}
			else if (this.type == 228)
			{
				int num39 = Main.rand.Next(3);
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = Lang.GetBirthdayDialog(this, false);
				}
				else if (flag2 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(263, false);
				}
				else if (num39 == 0)
				{
					result = Lang.dialog(261, false);
				}
				else if (num39 == 1)
				{
					result = Lang.dialog(262, false);
				}
				else if (num39 == 2)
				{
					result = Lang.dialog(264, false);
				}
			}
			else if (this.type == 229)
			{
				int num40 = Main.rand.Next(6);
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = Lang.GetBirthdayDialog(this, false);
				}
				else if (!Main.player[Main.myPlayer].Male && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(276, false);
				}
				else if (num40 == 0)
				{
					result = Lang.dialog(273, false);
				}
				else if (num40 == 1)
				{
					result = Lang.dialog(274, false);
				}
				else if (num40 == 2)
				{
					result = Lang.dialog(275, false);
				}
				else if (num40 == 3)
				{
					result = Lang.dialog(277, false);
				}
				else if (num40 == 4)
				{
					result = Lang.dialog(278, false);
				}
				else if (num40 == 5)
				{
					result = Lang.dialog(279, false);
				}
			}
			else if (this.type == 354)
			{
				result = Lang.dialog(Main.rand.Next(315, 319), false);
			}
			else if (this.type == 353)
			{
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = Lang.GetBirthdayDialog(this, false);
				}
				else if (Main.bloodMoon)
				{
					int num41 = Main.rand.Next(3);
					if (num41 == 0)
					{
						result = Lang.dialog(304, false);
					}
					else if (num41 == 1)
					{
						result = Lang.dialog(305, false);
					}
					else if (num41 == 2)
					{
						result = Lang.dialog(306, false);
					}
				}
				else if (Main.dayTime && Main.time < 16200.0 && Main.rand.Next(3) == 0)
				{
					result = Lang.dialog(311, false);
				}
				else if (Main.player[Main.myPlayer].Male && Main.rand.Next(3) == 0)
				{
					int num42 = Main.rand.Next(2);
					if (num42 == 0)
					{
						result = Lang.dialog(293, false);
					}
					else if (num42 == 1)
					{
						result = Lang.dialog(300, false);
					}
				}
				else if (!Main.player[Main.myPlayer].Male && Main.rand.Next(3) == 0)
				{
					int num43 = Main.rand.Next(3);
					if (num43 == 0)
					{
						result = Lang.dialog(291, false);
					}
					else if (num43 == 1)
					{
						result = Lang.dialog(292, false);
					}
					else if (num43 == 2)
					{
						result = Lang.dialog(312, false);
					}
				}
				else if (flag14 && flag7 && flag2 && flag3 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(307, false);
				}
				else if (flag14 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(302, false);
				}
				else if (flag6 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(303, false);
				}
				else if (flag13 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(308, false);
				}
				else if (Main.moonPhase < 3)
				{
					int num44 = Main.rand.Next(5);
					if (num44 == 0)
					{
						result = Lang.dialog(287, false);
					}
					else if (num44 == 1)
					{
						result = Lang.dialog(288, false);
					}
					else if (num44 == 2)
					{
						result = Lang.dialog(289, false);
					}
					else if (num44 == 3)
					{
						result = Lang.dialog(290, false);
					}
					else if (num44 == 4)
					{
						result = Lang.dialog(294, false);
					}
				}
				else if (Main.moonPhase < 6)
				{
					int num45 = Main.rand.Next(4);
					if (num45 == 0)
					{
						result = Lang.dialog(295, false);
					}
					else if (num45 == 1)
					{
						result = Lang.dialog(296, false);
					}
					else if (num45 == 2)
					{
						result = Lang.dialog(297, false);
					}
					else if (num45 == 3)
					{
						result = Lang.dialog(298, false);
					}
				}
				else
				{
					int num46 = Main.rand.Next(4);
					if (num46 == 0)
					{
						result = Lang.dialog(299, false);
					}
					else if (num46 == 1)
					{
						result = Lang.dialog(301, false);
					}
					else if (num46 == 2)
					{
						result = Lang.dialog(313, false);
					}
					else if (num46 == 3)
					{
						result = Lang.dialog(314, false);
					}
				}
			}
			else if (this.type == 368)
			{
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = Lang.GetBirthdayDialog(this, false);
				}
				else if (flag16 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(319, false);
				}
				else if (flag && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(320, false);
				}
				else if (flag9 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(321, false);
				}
				else
				{
					result = Lang.dialog(Main.rand.Next(322, 331), false);
				}
			}
			else if (this.type == 376)
			{
				result = Lang.dialog(Main.rand.Next(353, 356), false);
			}
			else if (this.type == 369)
			{
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = Lang.GetBirthdayDialog(this, false);
				}
				else if (Main.bloodMoon)
				{
					if (!Main.anglerQuestFinished)
					{
						result = Lang.dialog(Main.rand.Next(348, 350), false);
					}
					else
					{
						result = Lang.dialog(Main.rand.Next(350, 353), false);
					}
				}
				else if (!Main.anglerQuestFinished)
				{
					result = Lang.dialog(Main.rand.Next(334, 338), false);
				}
				else if (flag4 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(347, false);
				}
				else
				{
					result = Lang.dialog(Main.rand.Next(338, 347), false);
				}
			}
			else if (this.type == 453)
			{
				result = Lang.dialog(Main.rand.Next(356, 364), false);
			}
			else if (this.type == 441)
			{
				if (Main.rand.Next(6) == 0 && flag4)
				{
					result = Lang.dialog(371, false);
				}
				else if (Main.rand.Next(6) == 0 && flag3)
				{
					result = Lang.dialog(372, false);
				}
				else if (Main.rand.Next(6) == 0 && flag6)
				{
					result = Lang.dialog(373, false);
				}
				else if (Main.rand.Next(6) == 0 && flag)
				{
					result = Lang.dialog(374, false);
				}
				else
				{
					result = Lang.dialog(Main.rand.Next(364, 370), false);
				}
			}
			NPCLoader.GetChat(this, ref result);
			return result;
		}

		public object Clone()
		{
			return base.MemberwiseClone();
		}

		public void CheckDrowning()
		{
			bool flag = Collision.DrownCollision(this.position, this.width, this.height, 1f);
			if (Main.netMode != 1)
			{
				if (flag)
				{
					if (++this.breathCounter >= 7)
					{
						this.breathCounter = 0;
						this.breath--;
						if (this.breath <= 0)
						{
							this.friendlyRegen = 0;
							this.breath = 0;
							this.life -= 2;
							if (this.life % 24 < 2)
							{
								this.netUpdate = true;
							}
							if (this.life <= 0)
							{
								this.life = 1;
								this.StrikeNPCNoInteraction(2, 0f, 0, false, false, false);
								if (Main.netMode != 0)
								{
									NetMessage.SendData(28, -1, -1, "", this.whoAmI, 2f, 0f, 0f, 0, 0, 0);
								}
							}
						}
					}
				}
				else
				{
					this.breath += 3;
					if (this.breath > 200)
					{
						this.breath = 200;
					}
					this.breathCounter = 0;
				}
			}
			if (flag && Main.rand.Next(20) == 0 && !this.lavaWet && !this.honeyWet)
			{
				int num = 0;
				int num2 = 0;
				if (this.type == 369)
				{
					num2 = 8;
				}
				Dust.NewDust(new Vector2(this.position.X + (float)((10 + num) * this.direction), this.position.Y + (float)num2 + 4f), this.width - 8, 8, 34, 0f, 0f, 0, default(Color), 1.2f);
			}
		}

		public void TryPortalJumping()
		{
			if (!this.townNPC || Main.netMode == 1)
			{
				return;
			}
			PortalHelper.TryGoingThroughPortals(this);
		}

		public override string ToString()
		{
			return string.Concat(new object[]
				{
					"name:",
					this.name,
					", active:",
					this.active,
					", whoAmI:",
					this.whoAmI
				});
		}
	}
}
