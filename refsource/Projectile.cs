using Microsoft.Xna.Framework;
using System;
using System.Collections.Generic;
using Terraria.GameContent;
using Terraria.GameContent.Achievements;
using Terraria.GameContent.UI;
using Terraria.Graphics.Shaders;
using Terraria.ID;
using Terraria.ModLoader;

namespace Terraria
{
	public class Projectile : Entity
	{
		public ModProjectile modProjectile
		{
			get;
			internal set;
		}

		internal ProjectileInfo[] projectileInfo = new ProjectileInfo[0];

		public ProjectileInfo GetModInfo(Mod mod, string name)
		{
			return ProjectileLoader.GetProjectileInfo(this, mod, name);
		}

		public T GetModInfo<T>(Mod mod) where T : ProjectileInfo
		{
			return (T)GetModInfo(mod, typeof(T).Name);
		}

		public bool arrow;
		public int numHits;
		public bool bobber;
		public bool netImportant;
		public bool noDropItem;
		public static int maxAI = 2;
		public bool counterweight;
		public float scale = 1f;
		public float rotation;
		public int type;
		public int alpha;
		public short glowMask;
		public int owner = 255;
		public float[] ai = new float[Projectile.maxAI];
		public float[] localAI = new float[Projectile.maxAI];
		public float gfxOffY;
		public float stepSpeed = 1f;
		public int aiStyle;
		public int timeLeft;
		public int soundDelay;
		public int damage;
		public int spriteDirection = 1;
		public bool hostile;
		public float knockBack;
		public bool friendly;
		public int penetrate = 1;
		public int[] npcImmune = new int[200];
		public bool updatedNPCImmunity;
		public int maxPenetrate = 1;
		public int identity;
		public float light;
		public bool netUpdate;
		public bool netUpdate2;
		public int netSpam;
		public Vector2[] oldPos = new Vector2[10];
		public float[] oldRot = new float[10];
		public int[] oldSpriteDirection = new int[10];
		public bool minion;
		public float minionSlots;
		public int minionPos;
		public int restrikeDelay;
		public bool tileCollide;
		public int extraUpdates;
		public int numUpdates;
		public bool ignoreWater;
		public bool hide;
		public bool ownerHitCheck;
		public int[] playerImmune = new int[255];
		public string miscText = "";
		public bool melee;
		public bool ranged;
		public bool thrown;
		public bool magic;
		public bool coldDamage;
		public bool noEnchantments;
		public bool trap;
		public bool npcProj;
		public int frameCounter;
		public int frame;
		public bool manualDirectionChange;
		public int projUUID = -1;
		private static float[] _CompanionCubeScreamCooldown = new float[255];

		public float Opacity
		{
			get
			{
				return 1f - (float)this.alpha / 255f;
			}
			set
			{
				this.alpha = (int)MathHelper.Clamp((1f - value) * 255f, 0f, 255f);
			}
		}

		public int MaxUpdates
		{
			get
			{
				return this.extraUpdates + 1;
			}
			set
			{
				this.extraUpdates = value - 1;
			}
		}

		public void CloneDefaults(int TypeToClone)
		{
			int originalType = this.type;
			ModProjectile originalModProjectile = this.modProjectile;
			SetDefaults(TypeToClone);
			this.type = originalType;
			this.modProjectile = originalModProjectile;
			int num = ProjectileID.Sets.TrailCacheLength[type];
			if (num != this.oldPos.Length)
			{
				Array.Resize<Vector2>(ref this.oldPos, num);
				Array.Resize<float>(ref this.oldRot, num);
				Array.Resize<int>(ref this.oldSpriteDirection, num);
			}
			for (int i = 0; i < this.oldPos.Length; i++)
			{
				this.oldPos[i].X = 0f;
				this.oldPos[i].Y = 0f;
				this.oldRot[i] = 0f;
				this.oldSpriteDirection[i] = 0;
			}
		}

		public void SetDefaults(int Type)
		{
			this.modProjectile = null;
			this.counterweight = false;
			this.arrow = false;
			this.bobber = false;
			this.numHits = 0;
			this.netImportant = false;
			this.manualDirectionChange = false;
			int num = 10;
			if (Type >= 0)
			{
				num = ProjectileID.Sets.TrailCacheLength[Type];
			}
			if (num != this.oldPos.Length)
			{
				Array.Resize<Vector2>(ref this.oldPos, num);
				Array.Resize<float>(ref this.oldRot, num);
				Array.Resize<int>(ref this.oldSpriteDirection, num);
			}
			for (int i = 0; i < this.oldPos.Length; i++)
			{
				this.oldPos[i].X = 0f;
				this.oldPos[i].Y = 0f;
				this.oldRot[i] = 0f;
				this.oldSpriteDirection[i] = 0;
			}
			for (int j = 0; j < Projectile.maxAI; j++)
			{
				this.ai[j] = 0f;
				this.localAI[j] = 0f;
			}
			for (int k = 0; k < 255; k++)
			{
				this.playerImmune[k] = 0;
			}
			for (int l = 0; l < 200; l++)
			{
				this.npcImmune[l] = 0;
			}
			this.noDropItem = false;
			this.minion = false;
			this.minionSlots = 0f;
			this.soundDelay = 0;
			this.spriteDirection = 1;
			this.melee = false;
			this.ranged = false;
			this.thrown = false;
			this.magic = false;
			this.ownerHitCheck = false;
			this.hide = false;
			this.lavaWet = false;
			this.wetCount = 0;
			this.wet = false;
			this.ignoreWater = false;
			this.hostile = false;
			this.netUpdate = false;
			this.netUpdate2 = false;
			this.netSpam = 0;
			this.numUpdates = 0;
			this.extraUpdates = 0;
			this.identity = 0;
			this.restrikeDelay = 0;
			this.light = 0f;
			this.penetrate = 1;
			this.tileCollide = true;
			this.position = Vector2.Zero;
			this.velocity = Vector2.Zero;
			this.aiStyle = 0;
			this.alpha = 0;
			this.glowMask = -1;
			this.type = Type;
			this.active = true;
			this.rotation = 0f;
			this.scale = 1f;
			this.owner = 255;
			this.timeLeft = 3600;
			this.name = "";
			this.friendly = false;
			this.damage = 0;
			this.knockBack = 0f;
			this.miscText = "";
			this.coldDamage = false;
			this.noEnchantments = false;
			this.trap = false;
			this.npcProj = false;
			this.projUUID = -1;
			this.frame = 0;
			this.frameCounter = 0;
			if (this.type == 1)
			{
				this.arrow = true;
				this.name = "Wooden Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
			}
			else if (this.type == 2)
			{
				this.arrow = true;
				this.name = "Fire Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.light = 1f;
				this.ranged = true;
			}
			else if (this.type == 3)
			{
				this.name = "Shuriken";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 4;
				this.thrown = true;
			}
			else if (this.type == 4)
			{
				this.arrow = true;
				this.name = "Unholy Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.light = 0.35f;
				this.penetrate = 5;
				this.ranged = true;
			}
			else if (this.type == 5)
			{
				this.arrow = true;
				this.name = "Jester's Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.light = 0.4f;
				this.penetrate = -1;
				this.timeLeft = 120;
				this.alpha = 100;
				this.ignoreWater = true;
				this.ranged = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 6)
			{
				this.name = "Enchanted Boomerang";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 3;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
				this.light = 0.4f;
			}
			else if (this.type == 7 || this.type == 8)
			{
				this.name = "Vilethorn";
				this.width = 28;
				this.height = 28;
				this.aiStyle = 4;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.alpha = 255;
				this.ignoreWater = true;
				this.magic = true;
			}
			else if (this.type == 9)
			{
				this.name = "Starfury";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 5;
				this.friendly = true;
				this.penetrate = 2;
				this.alpha = 50;
				this.scale = 0.8f;
				this.tileCollide = false;
				this.melee = true;
			}
			else if (this.type == 10)
			{
				this.name = "Purification Powder";
				this.width = 64;
				this.height = 64;
				this.aiStyle = 6;
				this.friendly = true;
				this.tileCollide = false;
				this.penetrate = -1;
				this.alpha = 255;
				this.ignoreWater = true;
			}
			else if (this.type == 11)
			{
				this.name = "Vile Powder";
				this.width = 48;
				this.height = 48;
				this.aiStyle = 6;
				this.friendly = true;
				this.tileCollide = false;
				this.penetrate = -1;
				this.alpha = 255;
				this.ignoreWater = true;
			}
			else if (this.type == 12)
			{
				this.name = "Falling Star";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 5;
				this.friendly = true;
				this.penetrate = -1;
				this.alpha = 50;
				this.light = 1f;
			}
			else if (this.type == 13)
			{
				this.netImportant = true;
				this.name = "Hook";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
			}
			else if (this.type == 14)
			{
				this.name = "Bullet";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.light = 0.5f;
				this.alpha = 255;
				this.scale = 1.2f;
				this.timeLeft = 600;
				this.ranged = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 15)
			{
				this.name = "Ball of Fire";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 8;
				this.friendly = true;
				this.light = 0.8f;
				this.alpha = 100;
				this.magic = true;
			}
			else if (this.type == 16)
			{
				this.name = "Magic Missile";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 9;
				this.friendly = true;
				this.light = 0.8f;
				this.alpha = 100;
				this.magic = true;
			}
			else if (this.type == 17)
			{
				this.name = "Dirt Ball";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 10;
				this.friendly = true;
				this.ignoreWater = true;
			}
			else if (this.type == 18)
			{
				this.netImportant = true;
				this.name = "Shadow Orb";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 11;
				this.friendly = true;
				this.light = 0.9f;
				this.alpha = 150;
				this.tileCollide = false;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.ignoreWater = true;
				this.scale = 0.8f;
			}
			else if (this.type == 19)
			{
				this.name = "Flamarang";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 3;
				this.friendly = true;
				this.penetrate = -1;
				this.light = 1f;
				this.melee = true;
			}
			else if (this.type == 20)
			{
				this.name = "Green Laser";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 3;
				this.light = 0.75f;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1.4f;
				this.timeLeft = 600;
				this.magic = true;
			}
			else if (this.type == 21)
			{
				this.name = "Bone";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 2;
				this.scale = 1.2f;
				this.friendly = true;
				this.thrown = true;
			}
			else if (this.type == 22)
			{
				this.name = "Water Stream";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 12;
				this.friendly = true;
				this.alpha = 255;
				this.penetrate = -1;
				this.extraUpdates = 2;
				this.ignoreWater = true;
				this.magic = true;
			}
			else if (this.type == 23)
			{
				this.name = "Harpoon";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 13;
				this.friendly = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.ranged = true;
			}
			else if (this.type == 24)
			{
				this.name = "Spiky Ball";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 14;
				this.friendly = true;
				this.penetrate = 6;
				this.thrown = true;
			}
			else if (this.type == 25)
			{
				this.name = "Ball 'O Hurt";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 15;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
				this.scale = 0.8f;
			}
			else if (this.type == 26)
			{
				this.name = "Blue Moon";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 15;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
				this.scale = 0.8f;
			}
			else if (this.type == 27)
			{
				this.name = "Water Bolt";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 8;
				this.friendly = true;
				this.alpha = 255;
				this.timeLeft /= 2;
				this.penetrate = 10;
				this.magic = true;
			}
			else if (this.type == 28)
			{
				this.name = "Bomb";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
			}
			else if (this.type == 29)
			{
				this.name = "Dynamite";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
			}
			else if (this.type == 30)
			{
				this.name = "Grenade";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.thrown = true;
			}
			else if (this.type == 31)
			{
				this.name = "Sand Ball";
				this.knockBack = 6f;
				this.width = 10;
				this.height = 10;
				this.aiStyle = 10;
				this.friendly = true;
				this.hostile = true;
				this.penetrate = -1;
			}
			else if (this.type == 32)
			{
				this.name = "Ivy Whip";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
			}
			else if (this.type == 33)
			{
				this.name = "Thorn Chakram";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 3;
				this.friendly = true;
				this.scale = 0.9f;
				this.penetrate = -1;
				this.melee = true;
			}
			else if (this.type == 34)
			{
				this.name = "Flamelash";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 9;
				this.friendly = true;
				this.light = 0.8f;
				this.alpha = 100;
				this.penetrate = 1;
				this.magic = true;
			}
			else if (this.type == 35)
			{
				this.name = "Sunfury";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 15;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
				this.scale = 0.8f;
			}
			else if (this.type == 36)
			{
				this.name = "Meteor Shot";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 2;
				this.light = 0.6f;
				this.alpha = 255;
				this.scale = 1.4f;
				this.timeLeft = 600;
				this.ranged = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 37)
			{
				this.name = "Sticky Bomb";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
			}
			else if (this.type == 38)
			{
				this.name = "Harpy Feather";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 0;
				this.hostile = true;
				this.penetrate = -1;
				this.aiStyle = 1;
				this.tileCollide = true;
			}
			else if (this.type == 39)
			{
				this.name = "Mud Ball";
				this.knockBack = 6f;
				this.width = 10;
				this.height = 10;
				this.aiStyle = 10;
				this.friendly = true;
				this.hostile = true;
				this.penetrate = -1;
			}
			else if (this.type == 40)
			{
				this.name = "Ash Ball";
				this.knockBack = 6f;
				this.width = 10;
				this.height = 10;
				this.aiStyle = 10;
				this.friendly = true;
				this.hostile = true;
				this.penetrate = -1;
			}
			else if (this.type == 41)
			{
				this.arrow = true;
				this.name = "Hellfire Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = -1;
				this.ranged = true;
				this.light = 0.3f;
			}
			else if (this.type == 42)
			{
				this.name = "Sand Ball";
				this.knockBack = 8f;
				this.width = 10;
				this.height = 10;
				this.aiStyle = 10;
				this.friendly = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 43)
			{
				this.name = "Tombstone";
				this.knockBack = 12f;
				this.width = 24;
				this.height = 24;
				this.aiStyle = 17;
				this.penetrate = -1;
			}
			else if (this.type == 44)
			{
				this.name = "Demon Sickle";
				this.width = 48;
				this.height = 48;
				this.alpha = 100;
				this.light = 0.2f;
				this.aiStyle = 18;
				this.hostile = true;
				this.penetrate = -1;
				this.tileCollide = true;
				this.scale = 0.9f;
			}
			else if (this.type == 45)
			{
				this.name = "Demon Scythe";
				this.width = 48;
				this.height = 48;
				this.alpha = 100;
				this.light = 0.2f;
				this.aiStyle = 18;
				this.friendly = true;
				this.penetrate = 5;
				this.tileCollide = true;
				this.scale = 0.9f;
				this.magic = true;
			}
			else if (this.type == 46)
			{
				this.name = "Dark Lance";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.scale = 1.1f;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 47)
			{
				this.name = "Trident";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.scale = 1.1f;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 48)
			{
				this.name = "Throwing Knife";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 2;
				this.thrown = true;
			}
			else if (this.type == 49)
			{
				this.name = "Spear";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.scale = 1.2f;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 50)
			{
				this.netImportant = true;
				this.name = "Glowstick";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 14;
				this.penetrate = -1;
				this.alpha = 75;
				this.light = 1f;
				this.timeLeft *= 5;
			}
			else if (this.type == 51)
			{
				this.name = "Seed";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 1;
				this.friendly = true;
			}
			else if (this.type == 52)
			{
				this.name = "Wooden Boomerang";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 3;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
			}
			else if (this.type == 53)
			{
				this.netImportant = true;
				this.name = "Sticky Glowstick";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 14;
				this.penetrate = -1;
				this.alpha = 75;
				this.light = 1f;
				this.timeLeft *= 5;
				this.tileCollide = false;
			}
			else if (this.type == 54)
			{
				this.name = "Poisoned Knife";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 2;
				this.thrown = true;
			}
			else if (this.type == 55)
			{
				this.name = "Stinger";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 0;
				this.hostile = true;
				this.penetrate = -1;
				this.aiStyle = 1;
				this.tileCollide = true;
			}
			else if (this.type == 56)
			{
				this.name = "Ebonsand Ball";
				this.knockBack = 6f;
				this.width = 10;
				this.height = 10;
				this.aiStyle = 10;
				this.friendly = true;
				this.hostile = true;
				this.penetrate = -1;
			}
			else if (this.type == 57)
			{
				this.name = "Cobalt Chainsaw";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 58)
			{
				this.name = "Mythril Chainsaw";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.scale = 1.08f;
			}
			else if (this.type == 59)
			{
				this.name = "Cobalt Drill";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.scale = 0.9f;
			}
			else if (this.type == 60)
			{
				this.name = "Mythril Drill";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.scale = 0.9f;
			}
			else if (this.type == 61)
			{
				this.name = "Adamantite Chainsaw";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.scale = 1.16f;
			}
			else if (this.type == 62)
			{
				this.name = "Adamantite Drill";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.scale = 0.9f;
			}
			else if (this.type == 63)
			{
				this.name = "The Dao of Pow";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 15;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
			}
			else if (this.type == 64)
			{
				this.name = "Mythril Halberd";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.scale = 1.25f;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 65)
			{
				this.name = "Ebonsand Ball";
				this.knockBack = 6f;
				this.width = 10;
				this.height = 10;
				this.aiStyle = 10;
				this.friendly = true;
				this.penetrate = -1;
				this.extraUpdates = 1;
			}
			else if (this.type == 66)
			{
				this.name = "Adamantite Glaive";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.scale = 1.27f;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 67)
			{
				this.name = "Pearl Sand Ball";
				this.knockBack = 6f;
				this.width = 10;
				this.height = 10;
				this.aiStyle = 10;
				this.friendly = true;
				this.hostile = true;
				this.penetrate = -1;
			}
			else if (this.type == 68)
			{
				this.name = "Pearl Sand Ball";
				this.knockBack = 6f;
				this.width = 10;
				this.height = 10;
				this.aiStyle = 10;
				this.friendly = true;
				this.penetrate = -1;
				this.extraUpdates = 1;
			}
			else if (this.type == 69)
			{
				this.name = "Holy Water";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 1;
			}
			else if (this.type == 70)
			{
				this.name = "Unholy Water";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 1;
			}
			else if (this.type == 621)
			{
				this.name = "Blood Water";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 1;
			}
			else if (this.type == 71)
			{
				this.name = "Silt Ball";
				this.knockBack = 6f;
				this.width = 10;
				this.height = 10;
				this.aiStyle = 10;
				this.friendly = true;
				this.hostile = true;
				this.penetrate = -1;
			}
			else if (this.type == 72)
			{
				this.netImportant = true;
				this.name = "Blue Fairy";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 11;
				this.friendly = true;
				this.light = 0.9f;
				this.tileCollide = false;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.ignoreWater = true;
				this.scale = 0.8f;
			}
			else if (this.type == 73 || this.type == 74)
			{
				this.netImportant = true;
				this.name = "Hook";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
				this.light = 0.4f;
			}
			else if (this.type == 75)
			{
				this.name = "Happy Bomb";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 16;
				this.hostile = true;
				this.penetrate = -1;
			}
			else if (this.type == 76 || this.type == 77 || this.type == 78)
			{
				if (this.type == 76)
				{
					this.width = 10;
					this.height = 22;
				}
				else if (this.type == 77)
				{
					this.width = 18;
					this.height = 24;
				}
				else
				{
					this.width = 22;
					this.height = 24;
				}
				this.name = "Note";
				this.aiStyle = 21;
				this.friendly = true;
				this.ranged = true;
				this.alpha = 100;
				this.light = 0.3f;
				this.penetrate = -1;
				this.timeLeft = 180;
				this.magic = true;
			}
			else if (this.type == 79)
			{
				this.name = "Rainbow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 9;
				this.friendly = true;
				this.light = 0.8f;
				this.alpha = 255;
				this.magic = true;
			}
			else if (this.type == 80)
			{
				this.name = "Ice Block";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 22;
				this.friendly = true;
				this.magic = true;
				this.tileCollide = false;
				this.light = 0.5f;
				this.coldDamage = true;
			}
			else if (this.type == 81)
			{
				this.name = "Wooden Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.hostile = true;
				this.ranged = true;
			}
			else if (this.type == 82)
			{
				this.name = "Flaming Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.hostile = true;
				this.ranged = true;
			}
			else if (this.type == 83)
			{
				this.name = "Eye Laser";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.hostile = true;
				this.penetrate = 3;
				this.light = 0.75f;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1.7f;
				this.timeLeft = 600;
				this.magic = true;
			}
			else if (this.type == 84)
			{
				this.name = "Pink Laser";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.hostile = true;
				this.penetrate = 3;
				this.light = 0.75f;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1.2f;
				this.timeLeft = 600;
				this.magic = true;
			}
			else if (this.type == 85)
			{
				this.name = "Flames";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 23;
				this.friendly = true;
				this.alpha = 255;
				this.penetrate = 3;
				this.extraUpdates = 2;
				this.ranged = true;
			}
			else if (this.type == 86)
			{
				this.netImportant = true;
				this.name = "Pink Fairy";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 11;
				this.friendly = true;
				this.light = 0.9f;
				this.tileCollide = false;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.ignoreWater = true;
				this.scale = 0.8f;
			}
			else if (this.type == 87)
			{
				this.netImportant = true;
				this.name = "Pink Fairy";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 11;
				this.friendly = true;
				this.light = 0.9f;
				this.tileCollide = false;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.ignoreWater = true;
				this.scale = 0.8f;
			}
			else if (this.type == 88)
			{
				this.name = "Purple Laser";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 3;
				this.light = 0.75f;
				this.alpha = 255;
				this.extraUpdates = 4;
				this.scale = 1.4f;
				this.timeLeft = 600;
				this.magic = true;
			}
			else if (this.type == 89)
			{
				this.name = "Crystal Bullet";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.light = 0.5f;
				this.alpha = 255;
				this.scale = 1.2f;
				this.timeLeft = 600;
				this.ranged = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 90)
			{
				this.name = "Crystal Shard";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 24;
				this.friendly = true;
				this.penetrate = 1;
				this.light = 0.5f;
				this.alpha = 50;
				this.scale = 1.2f;
				this.timeLeft = 600;
				this.ranged = true;
				this.tileCollide = false;
			}
			else if (this.type == 91)
			{
				this.arrow = true;
				this.name = "Holy Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
			}
			else if (this.type == 92)
			{
				this.name = "Hallow Star";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 5;
				this.friendly = true;
				this.penetrate = 2;
				this.alpha = 50;
				this.scale = 0.8f;
				this.tileCollide = false;
				this.ranged = true;
			}
			else if (this.type == 93)
			{
				this.light = 0.15f;
				this.name = "Magic Dagger";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 2;
				this.magic = true;
			}
			else if (this.type == 94)
			{
				this.ignoreWater = true;
				this.name = "Crystal Storm";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 24;
				this.friendly = true;
				this.light = 0.5f;
				this.alpha = 50;
				this.scale = 1.2f;
				this.timeLeft = 600;
				this.magic = true;
				this.tileCollide = true;
				this.penetrate = 1;
			}
			else if (this.type == 95)
			{
				this.name = "Cursed Flame";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 8;
				this.friendly = true;
				this.light = 0.8f;
				this.alpha = 100;
				this.magic = true;
				this.penetrate = 2;
			}
			else if (this.type == 96)
			{
				this.name = "Cursed Flame";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 8;
				this.hostile = true;
				this.light = 0.8f;
				this.alpha = 100;
				this.magic = true;
				this.penetrate = -1;
				this.scale = 0.9f;
				this.scale = 1.3f;
			}
			else if (this.type == 97)
			{
				this.name = "Cobalt Naginata";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.scale = 1.1f;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 98)
			{
				this.name = "Poison Dart";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.hostile = true;
				this.penetrate = -1;
				this.trap = true;
			}
			else if (this.type == 99)
			{
				this.name = "Boulder";
				this.width = 31;
				this.height = 31;
				this.aiStyle = 25;
				this.friendly = true;
				this.hostile = true;
				this.ranged = true;
				this.penetrate = -1;
				this.trap = true;
			}
			else if (this.type == 100)
			{
				this.name = "Death Laser";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.hostile = true;
				this.penetrate = 3;
				this.light = 0.75f;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1.8f;
				this.timeLeft = 2700;
				this.magic = true;
			}
			else if (this.type == 101)
			{
				this.name = "Eye Fire";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 23;
				this.hostile = true;
				this.alpha = 255;
				this.penetrate = -1;
				this.extraUpdates = 3;
				this.magic = true;
			}
			else if (this.type == 102)
			{
				this.name = "Bomb";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 16;
				this.hostile = true;
				this.penetrate = -1;
				this.ranged = true;
			}
			else if (this.type == 103)
			{
				this.arrow = true;
				this.name = "Cursed Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.light = 1f;
				this.ranged = true;
			}
			else if (this.type == 104)
			{
				this.name = "Cursed Bullet";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.light = 0.5f;
				this.alpha = 255;
				this.scale = 1.2f;
				this.timeLeft = 600;
				this.ranged = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 105)
			{
				this.name = "Gungnir";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.scale = 1.3f;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 106)
			{
				this.name = "Light Disc";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 3;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
				this.light = 0.4f;
			}
			else if (this.type == 107)
			{
				this.name = "Hamdrax";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.scale = 1.1f;
			}
			else if (this.type == 108)
			{
				this.name = "Explosives";
				this.width = 260;
				this.height = 260;
				this.aiStyle = 16;
				this.friendly = true;
				this.hostile = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.alpha = 255;
				this.timeLeft = 2;
				this.trap = true;
			}
			else if (this.type == 109)
			{
				this.name = "Snow Ball";
				this.knockBack = 6f;
				this.width = 10;
				this.height = 10;
				this.aiStyle = 10;
				this.hostile = true;
				this.scale = 0.9f;
				this.penetrate = -1;
				this.coldDamage = true;
				this.thrown = true;
			}
			else if (this.type == 110)
			{
				this.name = "Bullet";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.hostile = true;
				this.penetrate = -1;
				this.light = 0.5f;
				this.alpha = 255;
				this.scale = 1.2f;
				this.timeLeft = 600;
				this.ranged = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 111)
			{
				this.netImportant = true;
				this.name = "Bunny";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 112)
			{
				this.netImportant = true;
				this.name = "Penguin";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 113)
			{
				this.name = "Ice Boomerang";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 3;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
				this.light = 0.4f;
				this.coldDamage = true;
			}
			else if (this.type == 114)
			{
				this.name = "Unholy Trident";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 27;
				this.magic = true;
				this.penetrate = 3;
				this.light = 0.5f;
				this.alpha = 255;
				this.friendly = true;
			}
			else if (this.type == 115)
			{
				this.name = "Unholy Trident";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 27;
				this.hostile = true;
				this.magic = true;
				this.penetrate = -1;
				this.light = 0.5f;
				this.alpha = 255;
			}
			else if (this.type == 116)
			{
				this.name = "Sword Beam";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 27;
				this.melee = true;
				this.penetrate = 1;
				this.light = 0.5f;
				this.alpha = 255;
				this.friendly = true;
			}
			else if (this.type == 117)
			{
				this.arrow = true;
				this.name = "Bone Arrow";
				this.extraUpdates = 2;
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
			}
			else if (this.type == 118)
			{
				this.name = "Ice Bolt";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 28;
				this.alpha = 255;
				this.melee = true;
				this.penetrate = 1;
				this.friendly = true;
				this.coldDamage = true;
			}
			else if (this.type == 119)
			{
				this.name = "Frost Bolt";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 28;
				this.alpha = 255;
				this.melee = true;
				this.penetrate = 2;
				this.friendly = true;
			}
			else if (this.type == 120)
			{
				this.arrow = true;
				this.name = "Frost Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
				this.coldDamage = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 121)
			{
				this.name = "Amethyst Bolt";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 29;
				this.alpha = 255;
				this.magic = true;
				this.penetrate = 1;
				this.friendly = true;
			}
			else if (this.type == 122)
			{
				this.name = "Topaz Bolt";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 29;
				this.alpha = 255;
				this.magic = true;
				this.penetrate = 1;
				this.friendly = true;
			}
			else if (this.type == 123)
			{
				this.name = "Sapphire Bolt";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 29;
				this.alpha = 255;
				this.magic = true;
				this.penetrate = 1;
				this.friendly = true;
			}
			else if (this.type == 124)
			{
				this.name = "Emerald Bolt";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 29;
				this.alpha = 255;
				this.magic = true;
				this.penetrate = 2;
				this.friendly = true;
			}
			else if (this.type == 125)
			{
				this.name = "Ruby Bolt";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 29;
				this.alpha = 255;
				this.magic = true;
				this.penetrate = 2;
				this.friendly = true;
			}
			else if (this.type == 126)
			{
				this.name = "Diamond Bolt";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 29;
				this.alpha = 255;
				this.magic = true;
				this.penetrate = 2;
				this.friendly = true;
			}
			else if (this.type == 127)
			{
				this.netImportant = true;
				this.name = "Turtle";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 128)
			{
				this.name = "Frost Blast";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 28;
				this.alpha = 255;
				this.penetrate = -1;
				this.friendly = false;
				this.hostile = true;
				this.coldDamage = true;
			}
			else if (this.type == 129)
			{
				this.name = "Rune Blast";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 28;
				this.alpha = 255;
				this.penetrate = -1;
				this.friendly = false;
				this.hostile = true;
				this.tileCollide = false;
			}
			else if (this.type == 130)
			{
				this.name = "Mushroom Spear";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.scale = 1.2f;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 131)
			{
				this.name = "Mushroom";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 30;
				this.friendly = true;
				this.penetrate = 1;
				this.tileCollide = false;
				this.melee = true;
				this.light = 0.5f;
			}
			else if (this.type == 132)
			{
				this.name = "Terra Beam";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 27;
				this.melee = true;
				this.penetrate = 3;
				this.light = 0.5f;
				this.alpha = 255;
				this.friendly = true;
			}
			else if (this.type == 133)
			{
				this.name = "Grenade";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.ranged = true;
			}
			else if (this.type == 134)
			{
				this.name = "Rocket";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.ranged = true;
			}
			else if (this.type == 135)
			{
				this.name = "Proximity Mine";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.ranged = true;
			}
			else if (this.type == 136)
			{
				this.name = "Grenade";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.ranged = true;
			}
			else if (this.type == 137)
			{
				this.name = "Rocket";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.ranged = true;
			}
			else if (this.type == 138)
			{
				this.name = "Proximity Mine";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.ranged = true;
			}
			else if (this.type == 139)
			{
				this.name = "Grenade";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.ranged = true;
			}
			else if (this.type == 140)
			{
				this.name = "Rocket";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.ranged = true;
			}
			else if (this.type == 141)
			{
				this.name = "Proximity Mine";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.ranged = true;
			}
			else if (this.type == 142)
			{
				this.name = "Grenade";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.ranged = true;
			}
			else if (this.type == 143)
			{
				this.name = "Rocket";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.ranged = true;
			}
			else if (this.type == 144)
			{
				this.name = "Proximity Mine";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.ranged = true;
			}
			else if (this.type == 145)
			{
				this.name = "Pure Spray";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 31;
				this.friendly = true;
				this.alpha = 255;
				this.penetrate = -1;
				this.extraUpdates = 2;
				this.tileCollide = false;
				this.ignoreWater = true;
			}
			else if (this.type == 146)
			{
				this.name = "Hallow Spray";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 31;
				this.friendly = true;
				this.alpha = 255;
				this.penetrate = -1;
				this.extraUpdates = 2;
				this.tileCollide = false;
				this.ignoreWater = true;
			}
			else if (this.type == 147)
			{
				this.name = "Corrupt Spray";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 31;
				this.friendly = true;
				this.alpha = 255;
				this.penetrate = -1;
				this.extraUpdates = 2;
				this.tileCollide = false;
				this.ignoreWater = true;
			}
			else if (this.type == 148)
			{
				this.name = "Mushroom Spray";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 31;
				this.friendly = true;
				this.alpha = 255;
				this.penetrate = -1;
				this.extraUpdates = 2;
				this.tileCollide = false;
				this.ignoreWater = true;
			}
			else if (this.type == 149)
			{
				this.name = "Crimson Spray";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 31;
				this.friendly = true;
				this.alpha = 255;
				this.penetrate = -1;
				this.extraUpdates = 2;
				this.tileCollide = false;
				this.ignoreWater = true;
			}
			else if (this.type == 150 || this.type == 151 || this.type == 152)
			{
				this.name = "Nettle Burst";
				this.width = 28;
				this.height = 28;
				this.aiStyle = 4;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.alpha = 255;
				this.ignoreWater = true;
				this.magic = true;
			}
			else if (this.type == 153)
			{
				this.name = "The Rotted Fork";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.scale = 1.1f;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 154)
			{
				this.name = "The Meatball";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 15;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
				this.scale = 0.8f;
			}
			else if (this.type == 155)
			{
				this.netImportant = true;
				this.name = "Beach Ball";
				this.width = 44;
				this.height = 44;
				this.aiStyle = 32;
				this.friendly = true;
			}
			else if (this.type == 156)
			{
				this.name = "Light Beam";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 27;
				this.melee = true;
				this.light = 0.5f;
				this.alpha = 255;
				this.friendly = true;
			}
			else if (this.type == 157)
			{
				this.name = "Night Beam";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 27;
				this.melee = true;
				this.light = 0.5f;
				this.alpha = 255;
				this.friendly = true;
				this.scale = 1.2f;
			}
			else if (this.type == 158)
			{
				this.name = "Copper Coin";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.alpha = 255;
				this.timeLeft = 600;
				this.ranged = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 159)
			{
				this.name = "Silver Coin";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.alpha = 255;
				this.timeLeft = 600;
				this.ranged = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 160)
			{
				this.name = "Gold Coin";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.alpha = 255;
				this.timeLeft = 600;
				this.ranged = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 161)
			{
				this.name = "Platinum Coin";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.alpha = 255;
				this.timeLeft = 600;
				this.ranged = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 162)
			{
				this.name = "Cannonball";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 4;
				this.alpha = 255;
			}
			else if (this.type == 163)
			{
				this.netImportant = true;
				this.name = "Flare";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 33;
				this.friendly = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.timeLeft = 36000;
			}
			else if (this.type == 164)
			{
				this.name = "Landmine";
				this.width = 128;
				this.height = 128;
				this.aiStyle = 16;
				this.friendly = true;
				this.hostile = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.alpha = 255;
				this.timeLeft = 2;
			}
			else if (this.type == 165)
			{
				this.netImportant = true;
				this.name = "Web";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
			}
			else if (this.type == 166)
			{
				this.name = "Snow Ball";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 2;
				this.friendly = true;
				this.ranged = true;
				this.coldDamage = true;
			}
			else if (this.type == 167 || this.type == 168 || this.type == 169 || this.type == 170)
			{
				this.name = "Rocket";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 34;
				this.friendly = true;
				this.ranged = true;
				this.timeLeft = 45;
			}
			else if (this.type == 171 || this.type == 505 || this.type == 506)
			{
				this.name = "Rope Coil";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 35;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft = 400;
			}
			else if (this.type == 172)
			{
				this.arrow = true;
				this.name = "Frostburn Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.light = 1f;
				this.ranged = true;
				this.coldDamage = true;
			}
			else if (this.type == 173)
			{
				this.name = "Enchanted Beam";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 27;
				this.melee = true;
				this.penetrate = 1;
				this.light = 0.2f;
				this.alpha = 255;
				this.friendly = true;
			}
			else if (this.type == 174)
			{
				this.name = "Ice Spike";
				this.alpha = 255;
				this.width = 6;
				this.height = 6;
				this.aiStyle = 1;
				this.hostile = true;
				this.penetrate = -1;
				this.coldDamage = true;
			}
			else if (this.type == 175)
			{
				this.name = "Baby Eater";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 176)
			{
				this.name = "Jungle Spike";
				this.alpha = 255;
				this.width = 6;
				this.height = 6;
				this.aiStyle = 1;
				this.hostile = true;
				this.penetrate = -1;
			}
			else if (this.type == 177)
			{
				this.name = "Icewater Spit";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 28;
				this.alpha = 255;
				this.penetrate = -1;
				this.friendly = false;
				this.hostile = true;
				this.coldDamage = true;
			}
			else if (this.type == 178)
			{
				this.name = "Confetti";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.alpha = 255;
				this.penetrate = -1;
				this.timeLeft = 2;
			}
			else if (this.type == 179)
			{
				this.name = "Slush Ball";
				this.knockBack = 6f;
				this.width = 10;
				this.height = 10;
				this.aiStyle = 10;
				this.friendly = true;
				this.hostile = true;
				this.penetrate = -1;
			}
			else if (this.type == 180)
			{
				this.name = "Bullet";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.hostile = true;
				this.penetrate = -1;
				this.light = 0.5f;
				this.alpha = 255;
				this.scale = 1.2f;
				this.timeLeft = 600;
				this.ranged = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 181)
			{
				this.name = "Bee";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 36;
				this.friendly = true;
				this.penetrate = 3;
				this.alpha = 255;
				this.timeLeft = 600;
				this.extraUpdates = 3;
			}
			else if (this.type == 182)
			{
				this.light = 0.15f;
				this.name = "Possessed Hatchet";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 3;
				this.friendly = true;
				this.penetrate = 10;
				this.melee = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 183)
			{
				this.name = "Beenade";
				this.width = 14;
				this.height = 22;
				this.aiStyle = 14;
				this.penetrate = 1;
				this.ranged = true;
				this.timeLeft = 180;
				this.thrown = true;
				this.friendly = true;
			}
			else if (this.type == 184)
			{
				this.name = "Poison Dart";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 1;
				this.friendly = true;
				this.hostile = true;
				this.penetrate = -1;
				this.trap = true;
			}
			else if (this.type == 185)
			{
				this.name = "Spiky Ball";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 14;
				this.friendly = true;
				this.hostile = true;
				this.penetrate = -1;
				this.timeLeft = 900;
				this.trap = true;
			}
			else if (this.type == 186)
			{
				this.name = "Spear";
				this.width = 10;
				this.height = 14;
				this.aiStyle = 37;
				this.friendly = true;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.hostile = true;
				this.penetrate = -1;
				this.timeLeft = 300;
				this.trap = true;
			}
			else if (this.type == 187)
			{
				this.name = "Flamethrower";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 38;
				this.alpha = 255;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.timeLeft = 60;
				this.trap = true;
			}
			else if (this.type == 188)
			{
				this.name = "Flames";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 23;
				this.friendly = true;
				this.hostile = true;
				this.alpha = 255;
				this.penetrate = -1;
				this.extraUpdates = 2;
				this.trap = true;
			}
			else if (this.type == 189)
			{
				this.name = "Wasp";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 36;
				this.friendly = true;
				this.penetrate = 4;
				this.alpha = 255;
				this.timeLeft = 600;
				this.magic = true;
				this.extraUpdates = 3;
			}
			else if (this.type == 190)
			{
				this.name = "Mechanical Piranha";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 39;
				this.friendly = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.ranged = true;
			}
			else if (this.type >= 191 && this.type <= 194)
			{
				this.netImportant = true;
				this.name = "Pygmy";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 26;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.minion = true;
				this.minionSlots = 1f;
				if (this.type == 192)
				{
					this.scale = 1.025f;
				}
				if (this.type == 193)
				{
					this.scale = 1.05f;
				}
				if (this.type == 194)
				{
					this.scale = 1.075f;
				}
			}
			else if (this.type == 195)
			{
				this.tileCollide = false;
				this.name = "Pygmy";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
			}
			else if (this.type == 196)
			{
				this.name = "Smoke Bomb";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 14;
				this.penetrate = -1;
				this.scale = 0.8f;
			}
			else if (this.type == 197)
			{
				this.netImportant = true;
				this.name = "Baby Skeletron Head";
				this.width = 42;
				this.height = 42;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 198)
			{
				this.netImportant = true;
				this.name = "Baby Hornet";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 199)
			{
				this.netImportant = true;
				this.name = "Tiki Spirit";
				this.width = 28;
				this.height = 28;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 200)
			{
				this.netImportant = true;
				this.name = "Pet Lizard";
				this.width = 28;
				this.height = 28;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 201)
			{
				this.name = "Tombstone";
				this.knockBack = 12f;
				this.width = 24;
				this.height = 24;
				this.aiStyle = 17;
				this.penetrate = -1;
			}
			else if (this.type == 202)
			{
				this.name = "Tombstone";
				this.knockBack = 12f;
				this.width = 24;
				this.height = 24;
				this.aiStyle = 17;
				this.penetrate = -1;
			}
			else if (this.type == 203)
			{
				this.name = "Tombstone";
				this.knockBack = 12f;
				this.width = 24;
				this.height = 24;
				this.aiStyle = 17;
				this.penetrate = -1;
			}
			else if (this.type == 204)
			{
				this.name = "Tombstone";
				this.knockBack = 12f;
				this.width = 24;
				this.height = 24;
				this.aiStyle = 17;
				this.penetrate = -1;
			}
			else if (this.type == 205)
			{
				this.name = "Tombstone";
				this.knockBack = 12f;
				this.width = 24;
				this.height = 24;
				this.aiStyle = 17;
				this.penetrate = -1;
			}
			else if (this.type == 206)
			{
				this.name = "Leaf";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 40;
				this.friendly = true;
				this.penetrate = 1;
				this.alpha = 255;
				this.timeLeft = 600;
				this.magic = true;
			}
			else if (this.type == 207)
			{
				this.name = "Bullet";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.light = 0.5f;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1.2f;
				this.timeLeft = 600;
				this.ranged = true;
			}
			else if (this.type == 208)
			{
				this.netImportant = true;
				this.name = "Parrot";
				this.width = 18;
				this.height = 36;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 209)
			{
				this.name = "Truffle";
				this.width = 12;
				this.height = 32;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.light = 0.5f;
			}
			else if (this.type == 210)
			{
				this.netImportant = true;
				this.name = "Sapling";
				this.width = 14;
				this.height = 30;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 211)
			{
				this.netImportant = true;
				this.name = "Wisp";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.light = 1f;
				this.ignoreWater = true;
			}
			else if (this.type == 212)
			{
				this.name = "Palladium Pike";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.scale = 1.12f;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 213)
			{
				this.name = "Palladium Drill";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.scale = 0.92f;
			}
			else if (this.type == 214)
			{
				this.name = "Palladium Chainsaw";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 215)
			{
				this.name = "Orichalcum Halberd";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.scale = 1.27f;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 216)
			{
				this.name = "Orichalcum Drill";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.scale = 0.93f;
			}
			else if (this.type == 217)
			{
				this.name = "Orichalcum Chainsaw";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.scale = 1.12f;
			}
			else if (this.type == 218)
			{
				this.name = "Titanium Trident";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.scale = 1.28f;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 219)
			{
				this.name = "Titanium Drill";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.scale = 0.95f;
			}
			else if (this.type == 220)
			{
				this.name = "Titanium Chainsaw";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.scale = 1.2f;
			}
			else if (this.type == 221)
			{
				this.name = "Flower Petal";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 41;
				this.friendly = true;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.timeLeft = 120;
				this.penetrate = -1;
				this.scale = 1f + (float)Main.rand.Next(30) * 0.01f;
				this.extraUpdates = 2;
			}
			else if (this.type == 222)
			{
				this.name = "Chlorophyte Partisan";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.scale = 1.3f;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 223)
			{
				this.name = "Chlorophyte Drill";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.scale = 1f;
			}
			else if (this.type == 224)
			{
				this.name = "Chlorophyte Chainsaw";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.scale = 1.1f;
			}
			else if (this.type == 225)
			{
				this.arrow = true;
				this.penetrate = 2;
				this.name = "Chlorophyte Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
			}
			else if (this.type == 226)
			{
				this.netImportant = true;
				this.name = "Crystal Leaf";
				this.width = 22;
				this.height = 42;
				this.aiStyle = 42;
				this.friendly = true;
				this.tileCollide = false;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.light = 0.4f;
				this.ignoreWater = true;
			}
			else if (this.type == 227)
			{
				this.netImportant = true;
				this.tileCollide = false;
				this.light = 0.1f;
				this.name = "Crystal Leaf";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 43;
				this.friendly = true;
				this.penetrate = 1;
				this.timeLeft = 180;
			}
			else if (this.type == 228)
			{
				this.tileCollide = false;
				this.name = "Spore Cloud";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 44;
				this.friendly = true;
				this.scale = 1.1f;
				this.penetrate = -1;
			}
			else if (this.type == 229)
			{
				this.name = "Chlorophyte Orb";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 44;
				this.friendly = true;
				this.penetrate = -1;
				this.light = 0.2f;
			}
			else if (this.type >= 230 && this.type <= 235)
			{
				this.netImportant = true;
				this.name = "Gem Hook";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
			}
			else if (this.type == 236)
			{
				this.netImportant = true;
				this.name = "Baby Dino";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 237)
			{
				this.netImportant = true;
				this.name = "Rain Cloud";
				this.width = 28;
				this.height = 28;
				this.aiStyle = 45;
				this.penetrate = -1;
			}
			else if (this.type == 238)
			{
				this.tileCollide = false;
				this.ignoreWater = true;
				this.name = "Rain Cloud";
				this.width = 54;
				this.height = 28;
				this.aiStyle = 45;
				this.penetrate = -1;
			}
			else if (this.type == 239)
			{
				this.ignoreWater = true;
				this.name = "Rain";
				this.width = 4;
				this.height = 40;
				this.aiStyle = 45;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft = 300;
				this.scale = 1.1f;
				this.magic = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 240)
			{
				this.name = "Cannonball";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 2;
				this.hostile = true;
				this.penetrate = -1;
				this.alpha = 255;
			}
			else if (this.type == 241)
			{
				this.name = "Crimsand Ball";
				this.knockBack = 6f;
				this.width = 10;
				this.height = 10;
				this.aiStyle = 10;
				this.friendly = true;
				this.hostile = true;
				this.penetrate = -1;
			}
			else if (this.type == 242)
			{
				this.name = "Bullet";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.light = 0.5f;
				this.alpha = 255;
				this.extraUpdates = 7;
				this.scale = 1.18f;
				this.timeLeft = 600;
				this.ranged = true;
				this.ignoreWater = true;
			}
			else if (this.type == 243)
			{
				this.name = "Blood Cloud";
				this.width = 28;
				this.height = 28;
				this.aiStyle = 45;
				this.penetrate = -1;
			}
			else if (this.type == 244)
			{
				this.tileCollide = false;
				this.ignoreWater = true;
				this.name = "Blood Cloud";
				this.width = 54;
				this.height = 28;
				this.aiStyle = 45;
				this.penetrate = -1;
			}
			else if (this.type == 245)
			{
				this.ignoreWater = true;
				this.name = "Blood Rain";
				this.width = 4;
				this.height = 40;
				this.aiStyle = 45;
				this.friendly = true;
				this.penetrate = 2;
				this.timeLeft = 300;
				this.scale = 1.1f;
				this.magic = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 246)
			{
				this.name = "Stynger";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
				this.alpha = 255;
				this.extraUpdates = 1;
			}
			else if (this.type == 247)
			{
				this.name = "Flower Pow";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 15;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
			}
			else if (this.type == 248)
			{
				this.name = "Flower Pow";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 1;
				this.friendly = true;
				this.melee = true;
			}
			else if (this.type == 249)
			{
				this.name = "Stynger";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 2;
				this.friendly = true;
				this.ranged = true;
			}
			else if (this.type == 250)
			{
				this.name = "Rainbow";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 46;
				this.penetrate = -1;
				this.magic = true;
				this.alpha = 255;
				this.ignoreWater = true;
				this.scale = 1.25f;
			}
			else if (this.type == 251)
			{
				this.name = "Rainbow";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 46;
				this.friendly = true;
				this.penetrate = -1;
				this.magic = true;
				this.alpha = 255;
				this.light = 0.3f;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.scale = 1.25f;
			}
			else if (this.type == 252)
			{
				this.name = "Chlorophyte Jackhammer";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.scale = 1.1f;
			}
			else if (this.type == 253)
			{
				this.name = "Ball of Frost";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 8;
				this.friendly = true;
				this.light = 0.8f;
				this.alpha = 100;
				this.magic = true;
			}
			else if (this.type == 254)
			{
				this.name = "Magnet Sphere";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 47;
				this.magic = true;
				this.timeLeft = 660;
				this.light = 0.5f;
			}
			else if (this.type == 255)
			{
				this.name = "Magnet Sphere";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 48;
				this.friendly = true;
				this.magic = true;
				this.extraUpdates = 100;
				this.timeLeft = 100;
			}
			else if (this.type == 256)
			{
				this.netImportant = true;
				this.tileCollide = false;
				this.name = "Skeletron Hand";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.scale = 1f;
				this.timeLeft *= 10;
			}
			else if (this.type == 257)
			{
				this.name = "Frost Beam";
				this.ignoreWater = true;
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.hostile = true;
				this.penetrate = -1;
				this.light = 0.75f;
				this.alpha = 255;
				this.scale = 1.2f;
				this.timeLeft = 600;
				this.magic = true;
				this.coldDamage = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 258)
			{
				this.name = "Fireball";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 8;
				this.hostile = true;
				this.penetrate = -1;
				this.alpha = 100;
				this.timeLeft = 300;
			}
			else if (this.type == 259)
			{
				this.name = "Eye Beam";
				this.ignoreWater = true;
				this.tileCollide = false;
				this.width = 8;
				this.height = 8;
				this.aiStyle = 1;
				this.hostile = true;
				this.penetrate = -1;
				this.light = 0.3f;
				this.scale = 1.1f;
				this.magic = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 260)
			{
				this.name = "Heat Ray";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 48;
				this.friendly = true;
				this.magic = true;
				this.extraUpdates = 100;
				this.timeLeft = 200;
				this.penetrate = -1;
			}
			else if (this.type == 261)
			{
				this.name = "Boulder";
				this.width = 32;
				this.height = 34;
				this.aiStyle = 14;
				this.friendly = true;
				this.penetrate = 6;
				this.magic = true;
				this.ignoreWater = true;
			}
			else if (this.type == 262)
			{
				this.name = "Golem Fist";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 13;
				this.friendly = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.melee = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 263)
			{
				this.name = "Ice Sickle";
				this.width = 34;
				this.height = 34;
				this.alpha = 100;
				this.light = 0.5f;
				this.aiStyle = 18;
				this.friendly = true;
				this.penetrate = 5;
				this.tileCollide = true;
				this.scale = 1f;
				this.melee = true;
				this.timeLeft = 180;
				this.coldDamage = true;
			}
			else if (this.type == 264)
			{
				this.ignoreWater = true;
				this.name = "Rain";
				this.width = 4;
				this.height = 40;
				this.aiStyle = 45;
				this.hostile = true;
				this.penetrate = -1;
				this.timeLeft = 120;
				this.scale = 1.1f;
				this.extraUpdates = 1;
			}
			else if (this.type == 265)
			{
				this.name = "Poison Fang";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 1;
				this.alpha = 255;
				this.friendly = true;
				this.magic = true;
				this.penetrate = 4;
			}
			else if (this.type == 266)
			{
				this.netImportant = true;
				this.alpha = 75;
				this.name = "Baby Slime";
				this.width = 24;
				this.height = 16;
				this.aiStyle = 26;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.minion = true;
				this.minionSlots = 1f;
			}
			else if (this.type == 267)
			{
				this.alpha = 255;
				this.name = "Poison Dart";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
			}
			else if (this.type == 268)
			{
				this.netImportant = true;
				this.name = "Eye Spring";
				this.width = 18;
				this.height = 32;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 269)
			{
				this.netImportant = true;
				this.name = "Baby Snowman";
				this.width = 20;
				this.height = 26;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 270)
			{
				this.name = "Skull";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 1;
				this.alpha = 255;
				this.friendly = true;
				this.magic = true;
				this.penetrate = 3;
			}
			else if (this.type == 271)
			{
				this.name = "Boxing Glove";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 13;
				this.friendly = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.melee = true;
				this.scale = 1.2f;
			}
			else if (this.type == 272)
			{
				this.name = "Bananarang";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 3;
				this.friendly = true;
				this.scale = 0.9f;
				this.penetrate = -1;
				this.melee = true;
			}
			else if (this.type == 273)
			{
				this.name = "Chain Knife";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 13;
				this.friendly = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.melee = true;
			}
			else if (this.type == 274)
			{
				this.name = "Death Sickle";
				this.width = 42;
				this.height = 42;
				this.alpha = 100;
				this.light = 0.5f;
				this.aiStyle = 18;
				this.friendly = true;
				this.penetrate = 5;
				this.tileCollide = false;
				this.scale = 1.1f;
				this.melee = true;
				this.timeLeft = 180;
			}
			else if (this.type == 275)
			{
				this.alpha = 255;
				this.name = "Seed";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 1;
				this.hostile = true;
			}
			else if (this.type == 276)
			{
				this.alpha = 255;
				this.name = "Poison Seed";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 1;
				this.hostile = true;
			}
			else if (this.type == 277)
			{
				this.alpha = 255;
				this.name = "Thorn Ball";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 14;
				this.hostile = true;
			}
			else if (this.type == 278)
			{
				this.arrow = true;
				this.name = "Ichor Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.light = 1f;
				this.ranged = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 279)
			{
				this.name = "Ichor Bullet";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.light = 0.5f;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1.25f;
				this.timeLeft = 600;
				this.ranged = true;
			}
			else if (this.type == 280)
			{
				this.name = "Golden Shower";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 12;
				this.friendly = true;
				this.alpha = 255;
				this.penetrate = 5;
				this.extraUpdates = 2;
				this.ignoreWater = true;
				this.magic = true;
			}
			else if (this.type == 281)
			{
				this.name = "Explosive Bunny";
				this.width = 28;
				this.height = 28;
				this.aiStyle = 49;
				this.friendly = true;
				this.penetrate = 1;
				this.alpha = 255;
				this.timeLeft = 600;
			}
			else if (this.type == 282)
			{
				this.arrow = true;
				this.name = "Venom Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 283)
			{
				this.name = "Venom Bullet";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.light = 0.5f;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1.25f;
				this.timeLeft = 600;
				this.ranged = true;
			}
			else if (this.type == 284)
			{
				this.name = "Party Bullet";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.light = 0.5f;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1.3f;
				this.timeLeft = 600;
				this.ranged = true;
			}
			else if (this.type == 285)
			{
				this.name = "Nano Bullet";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.light = 0.5f;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1.3f;
				this.timeLeft = 600;
				this.ranged = true;
			}
			else if (this.type == 286)
			{
				this.name = "Explosive Bullet";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.light = 0.5f;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1.3f;
				this.timeLeft = 600;
				this.ranged = true;
			}
			else if (this.type == 287)
			{
				this.name = "Golden Bullet";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.light = 0.5f;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1.3f;
				this.timeLeft = 600;
				this.ranged = true;
			}
			else if (this.type == 288)
			{
				this.name = "Golden Shower";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 12;
				this.hostile = true;
				this.alpha = 255;
				this.penetrate = -1;
				this.extraUpdates = 2;
				this.ignoreWater = true;
				this.magic = true;
			}
			else if (this.type == 289)
			{
				this.name = "Confetti";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.alpha = 255;
				this.penetrate = -1;
				this.timeLeft = 2;
			}
			else if (this.type == 290)
			{
				this.name = "Shadow Beam";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 48;
				this.hostile = true;
				this.magic = true;
				this.extraUpdates = 100;
				this.timeLeft = 100;
				this.penetrate = -1;
			}
			else if (this.type == 291)
			{
				this.name = "Inferno";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 50;
				this.hostile = true;
				this.alpha = 255;
				this.magic = true;
				this.tileCollide = false;
				this.penetrate = -1;
			}
			else if (this.type == 292)
			{
				this.name = "Inferno";
				this.width = 130;
				this.height = 130;
				this.aiStyle = 50;
				this.hostile = true;
				this.alpha = 255;
				this.magic = true;
				this.tileCollide = false;
				this.penetrate = -1;
			}
			else if (this.type == 293)
			{
				this.name = "Lost Soul";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 51;
				this.hostile = true;
				this.alpha = 255;
				this.magic = true;
				this.tileCollide = false;
				this.penetrate = -1;
				this.extraUpdates = 1;
			}
			else if (this.type == 294)
			{
				this.name = "Shadow Beam";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 48;
				this.friendly = true;
				this.magic = true;
				this.extraUpdates = 100;
				this.timeLeft = 300;
				this.penetrate = -1;
			}
			else if (this.type == 295)
			{
				this.name = "Inferno";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 50;
				this.friendly = true;
				this.alpha = 255;
				this.magic = true;
				this.tileCollide = true;
			}
			else if (this.type == 296)
			{
				this.name = "Inferno";
				this.width = 150;
				this.height = 150;
				this.aiStyle = 50;
				this.friendly = true;
				this.alpha = 255;
				this.magic = true;
				this.tileCollide = false;
				this.penetrate = -1;
			}
			else if (this.type == 297)
			{
				this.name = "Lost Soul";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 51;
				this.friendly = true;
				this.alpha = 255;
				this.magic = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 298)
			{
				this.name = "Spirit Heal";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 52;
				this.alpha = 255;
				this.magic = true;
				this.tileCollide = false;
				this.extraUpdates = 3;
			}
			else if (this.type == 299)
			{
				this.name = "Shadowflames";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 1;
				this.hostile = true;
				this.alpha = 255;
				this.penetrate = -1;
				this.extraUpdates = 2;
				this.magic = true;
				this.ignoreWater = true;
				this.tileCollide = false;
			}
			else if (this.type == 300)
			{
				this.name = "Paladin's Hammer";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 2;
				this.hostile = true;
				this.penetrate = -1;
				this.ignoreWater = true;
				this.tileCollide = false;
			}
			else if (this.type == 301)
			{
				this.name = "Paladin's Hammer";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 3;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
				this.extraUpdates = 2;
			}
			else if (this.type == 302)
			{
				this.name = "Sniper Bullet";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.hostile = true;
				this.penetrate = -1;
				this.light = 0.3f;
				this.alpha = 255;
				this.extraUpdates = 7;
				this.scale = 1.18f;
				this.timeLeft = 300;
				this.ranged = true;
				this.ignoreWater = true;
			}
			else if (this.type == 303)
			{
				this.name = "Rocket";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.hostile = true;
				this.penetrate = -1;
				this.ranged = true;
			}
			else if (this.type == 304)
			{
				this.name = "Vampire Knife";
				this.alpha = 255;
				this.width = 30;
				this.height = 30;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 1;
				this.melee = true;
				this.light = 0.2f;
				this.ignoreWater = true;
				this.extraUpdates = 0;
			}
			else if (this.type == 305)
			{
				this.name = "Vampire Heal";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 52;
				this.alpha = 255;
				this.tileCollide = false;
				this.extraUpdates = 10;
			}
			else if (this.type == 306)
			{
				this.name = "Eater's Bite";
				this.alpha = 255;
				this.width = 14;
				this.height = 14;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 1;
				this.melee = true;
				this.ignoreWater = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 307)
			{
				this.name = "Tiny Eater";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 36;
				this.penetrate = 1;
				this.alpha = 255;
				this.timeLeft = 600;
				this.melee = true;
				this.extraUpdates = 3;
			}
			else if (this.type == 308)
			{
				this.name = "Frost Hydra";
				this.width = 80;
				this.height = 74;
				this.aiStyle = 53;
				this.timeLeft = 7200;
				this.light = 0.25f;
				this.ignoreWater = true;
				this.coldDamage = true;
			}
			else if (this.type == 309)
			{
				this.name = "Frost Blast";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 28;
				this.alpha = 255;
				this.penetrate = 1;
				this.friendly = true;
				this.extraUpdates = 3;
				this.coldDamage = true;
			}
			else if (this.type == 310)
			{
				this.netImportant = true;
				this.name = "Blue Flare";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 33;
				this.friendly = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.timeLeft = 36000;
			}
			else if (this.type == 311)
			{
				this.name = "Candy Corn";
				this.width = 10;
				this.height = 12;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 3;
				this.alpha = 255;
				this.timeLeft = 600;
				this.ranged = true;
			}
			else if (this.type == 312)
			{
				this.name = "Jack 'O Lantern";
				this.alpha = 255;
				this.width = 32;
				this.height = 32;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
				this.timeLeft = 300;
			}
			else if (this.type == 313)
			{
				this.netImportant = true;
				this.name = "Spider";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 314)
			{
				this.netImportant = true;
				this.name = "Squashling";
				this.width = 24;
				this.height = 40;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 315)
			{
				this.netImportant = true;
				this.name = "Bat Hook";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
			}
			else if (this.type == 316)
			{
				this.alpha = 255;
				this.name = "Bat";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 36;
				this.friendly = true;
				this.penetrate = 1;
				this.timeLeft = 600;
				this.magic = true;
			}
			else if (this.type == 317)
			{
				this.netImportant = true;
				this.name = "Raven";
				this.width = 28;
				this.height = 28;
				this.aiStyle = 54;
				this.penetrate = 1;
				this.timeLeft *= 5;
				this.minion = true;
				this.minionSlots = 1f;
			}
			else if (this.type == 318)
			{
				this.name = "Rotten Egg";
				this.width = 12;
				this.height = 14;
				this.aiStyle = 2;
				this.friendly = true;
				this.thrown = true;
			}
			else if (this.type == 319)
			{
				this.netImportant = true;
				this.name = "Black Cat";
				this.width = 36;
				this.height = 30;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 320)
			{
				this.name = "Bloody Machete";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 3;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
			}
			else if (this.type == 321)
			{
				this.name = "Flaming Jack";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 55;
				this.friendly = true;
				this.melee = true;
				this.tileCollide = false;
				this.ignoreWater = true;
			}
			else if (this.type == 322)
			{
				this.netImportant = true;
				this.name = "Wood Hook";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
			}
			else if (this.type == 323)
			{
				this.penetrate = 10;
				this.name = "Stake";
				this.extraUpdates = 3;
				this.width = 14;
				this.height = 14;
				this.aiStyle = 1;
				this.alpha = 255;
				this.friendly = true;
				this.ranged = true;
				this.scale = 0.8f;
			}
			else if (this.type == 324)
			{
				this.netImportant = true;
				this.name = "Cursed Sapling";
				this.width = 26;
				this.height = 38;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 325)
			{
				this.alpha = 255;
				this.penetrate = -1;
				this.name = "Flaming Wood";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 1;
				this.hostile = true;
				this.tileCollide = false;
			}
			else if (this.type >= 326 && this.type <= 328)
			{
				this.name = "Greek Fire";
				if (this.type == 326)
				{
					this.width = 14;
					this.height = 16;
				}
				else if (this.type == 327)
				{
					this.width = 12;
					this.height = 14;
				}
				else
				{
					this.width = 6;
					this.height = 12;
				}
				this.aiStyle = 14;
				this.hostile = true;
				this.penetrate = -1;
				this.timeLeft = 360;
			}
			else if (this.type == 329)
			{
				this.name = "Flaming Scythe";
				this.width = 80;
				this.height = 80;
				this.light = 0.25f;
				this.aiStyle = 56;
				this.hostile = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft = 420;
			}
			else if (this.type == 330)
			{
				this.name = "Star Anise";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 6;
				this.thrown = true;
			}
			else if (this.type == 331)
			{
				this.netImportant = true;
				this.name = "Candy Cane Hook";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
			}
			else if (this.type == 332)
			{
				this.netImportant = true;
				this.name = "Christmas Hook";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
				this.light = 0.5f;
			}
			else if (this.type == 333)
			{
				this.name = "Fruitcake Chakram";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 3;
				this.friendly = true;
				this.scale = 0.9f;
				this.penetrate = -1;
				this.melee = true;
			}
			else if (this.type == 334)
			{
				this.netImportant = true;
				this.name = "Puppy";
				this.width = 28;
				this.height = 28;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 335)
			{
				this.name = "Ornament";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 1;
				this.melee = true;
			}
			else if (this.type == 336)
			{
				this.name = "Pine Needle";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.magic = true;
				this.scale = 0.8f;
				this.extraUpdates = 1;
			}
			else if (this.type == 337)
			{
				this.name = "Blizzard";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.magic = true;
				this.tileCollide = false;
				this.coldDamage = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 338 || this.type == 339 || this.type == 340 || this.type == 341)
			{
				this.name = "Rocket";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.penetrate = -1;
				this.friendly = true;
				this.ranged = true;
				this.scale = 0.9f;
			}
			else if (this.type == 342)
			{
				this.name = "North Pole";
				this.width = 22;
				this.height = 2;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.scale = 1.1f;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.coldDamage = true;
			}
			else if (this.type == 343)
			{
				this.alpha = 255;
				this.name = "North Pole";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 57;
				this.friendly = true;
				this.melee = true;
				this.scale = 1.1f;
				this.penetrate = 3;
				this.coldDamage = true;
			}
			else if (this.type == 344)
			{
				this.name = "North Pole";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 1;
				this.friendly = true;
				this.scale = 0.9f;
				this.alpha = 255;
				this.melee = true;
				this.coldDamage = true;
				this.tileCollide = false;
			}
			else if (this.type == 345)
			{
				this.name = "Pine Needle";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.hostile = true;
				this.scale = 0.8f;
			}
			else if (this.type == 346)
			{
				this.name = "Ornament";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 14;
				this.hostile = true;
				this.penetrate = -1;
				this.timeLeft = 300;
			}
			else if (this.type == 347)
			{
				this.name = "Ornament";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 2;
				this.hostile = true;
				this.penetrate = -1;
			}
			else if (this.type == 348)
			{
				this.name = "Frost Wave";
				this.aiStyle = 1;
				this.width = 48;
				this.height = 48;
				this.hostile = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.coldDamage = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 349)
			{
				this.name = "Frost Shard";
				this.aiStyle = 1;
				this.width = 12;
				this.height = 12;
				this.hostile = true;
				this.penetrate = -1;
				this.coldDamage = true;
			}
			else if (this.type == 350)
			{
				this.alpha = 255;
				this.penetrate = -1;
				this.name = "Missile";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 1;
				this.hostile = true;
				this.tileCollide = false;
				this.timeLeft /= 2;
			}
			else if (this.type == 351)
			{
				this.alpha = 255;
				this.penetrate = -1;
				this.name = "Present";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 58;
				this.hostile = true;
				this.tileCollide = false;
			}
			else if (this.type == 352)
			{
				this.name = "Spike";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 14;
				this.hostile = true;
				this.penetrate = -1;
				this.timeLeft /= 3;
			}
			else if (this.type == 353)
			{
				this.netImportant = true;
				this.name = "Baby Grinch";
				this.width = 18;
				this.height = 28;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 354)
			{
				this.name = "Crimsand Ball";
				this.knockBack = 6f;
				this.width = 10;
				this.height = 10;
				this.aiStyle = 10;
				this.friendly = true;
				this.penetrate = -1;
				this.extraUpdates = 1;
			}
			else if (this.type == 355)
			{
				this.name = "Venom Fang";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 1;
				this.alpha = 255;
				this.friendly = true;
				this.magic = true;
				this.penetrate = 7;
			}
			else if (this.type == 356)
			{
				this.name = "Spectre Wrath";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 59;
				this.alpha = 255;
				this.magic = true;
				this.tileCollide = false;
				this.extraUpdates = 3;
			}
			else if (this.type == 357)
			{
				this.name = "Pulse Bolt";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 6;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1.2f;
				this.timeLeft = 600;
				this.ranged = true;
			}
			else if (this.type == 358)
			{
				this.name = "Water Gun";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 60;
				this.alpha = 255;
				this.penetrate = -1;
				this.extraUpdates = 2;
				this.ignoreWater = true;
			}
			else if (this.type == 359)
			{
				this.name = "Frost Bolt";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 28;
				this.alpha = 255;
				this.magic = true;
				this.penetrate = 2;
				this.friendly = true;
				this.coldDamage = true;
			}
			else if ((this.type >= 360 && this.type <= 366) || this.type == 381 || this.type == 382)
			{
				this.name = "Bobber";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 61;
				this.penetrate = -1;
				this.bobber = true;
			}
			else if (this.type == 367)
			{
				this.name = "Obsidian Swordfish";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.scale = 1.1f;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 368)
			{
				this.name = "Swordfish";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 369)
			{
				this.name = "Sawtooth Shark";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 370)
			{
				this.name = "Love Potion";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 1;
			}
			else if (this.type == 371)
			{
				this.name = "Foul Potion";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 1;
			}
			else if (this.type == 372)
			{
				this.name = "Fish Hook";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
			}
			else if (this.type == 373)
			{
				this.netImportant = true;
				this.name = "Hornet";
				this.width = 24;
				this.height = 26;
				this.aiStyle = 62;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.minion = true;
				this.minionSlots = 1f;
				this.tileCollide = false;
				this.ignoreWater = true;
			}
			else if (this.type == 374)
			{
				this.name = "Hornet Stinger";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 0;
				this.friendly = true;
				this.penetrate = 1;
				this.aiStyle = 1;
				this.tileCollide = true;
				this.scale *= 0.9f;
			}
			else if (this.type == 375)
			{
				this.netImportant = true;
				this.name = "Flying Imp";
				this.width = 34;
				this.height = 26;
				this.aiStyle = 62;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.minion = true;
				this.minionSlots = 1f;
				this.tileCollide = false;
				this.ignoreWater = true;
			}
			else if (this.type == 376)
			{
				this.name = "Imp Fireball";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 0;
				this.friendly = true;
				this.penetrate = -1;
				this.aiStyle = 1;
				this.tileCollide = true;
				this.timeLeft = 100;
				this.alpha = 255;
				this.extraUpdates = 1;
			}
			else if (this.type == 377)
			{
				this.name = "Spider Turret";
				this.width = 66;
				this.height = 50;
				this.aiStyle = 53;
				this.timeLeft = 7200;
				this.ignoreWater = true;
			}
			else if (this.type == 378)
			{
				this.name = "Spider Egg";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 14;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft = 60;
				this.scale = 0.9f;
			}
			else if (this.type == 379)
			{
				this.name = "Baby Spider";
				this.width = 14;
				this.height = 10;
				this.aiStyle = 63;
				this.friendly = true;
				this.timeLeft = 300;
				this.penetrate = 1;
			}
			else if (this.type == 380)
			{
				this.netImportant = true;
				this.name = "Zephyr Fish";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 383)
			{
				this.name = "Anchor";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 3;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
			}
			else if (this.type == 384)
			{
				this.name = "Sharknado";
				this.width = 150;
				this.height = 42;
				this.hostile = true;
				this.penetrate = -1;
				this.aiStyle = 64;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.alpha = 255;
				this.timeLeft = 540;
			}
			else if (this.type == 385)
			{
				this.name = "Sharknado Bolt";
				this.width = 30;
				this.height = 30;
				this.hostile = true;
				this.penetrate = -1;
				this.aiStyle = 65;
				this.alpha = 255;
				this.timeLeft = 300;
			}
			else if (this.type == 386)
			{
				this.name = "Cthulunado";
				this.width = 150;
				this.height = 42;
				this.hostile = true;
				this.penetrate = -1;
				this.aiStyle = 64;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.alpha = 255;
				this.timeLeft = 840;
			}
			else if (this.type == 387)
			{
				this.netImportant = true;
				this.name = "Retanimini";
				this.width = 40;
				this.height = 20;
				this.aiStyle = 66;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.minion = true;
				this.minionSlots = 0.5f;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.friendly = true;
			}
			else if (this.type == 388)
			{
				this.netImportant = true;
				this.name = "Spazmamini";
				this.width = 40;
				this.height = 20;
				this.aiStyle = 66;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.minion = true;
				this.minionSlots = 0.5f;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.friendly = true;
			}
			else if (this.type == 389)
			{
				this.name = "Mini Retina Laser";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 3;
				this.light = 0.75f;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1.2f;
				this.timeLeft = 600;
			}
			else if (this.type == 390 || this.type == 391 || this.type == 392)
			{
				this.name = "Venom Spider";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 26;
				this.penetrate = -1;
				this.netImportant = true;
				this.timeLeft *= 5;
				this.minion = true;
				this.minionSlots = 0.75f;
				if (this.type == 391)
				{
					this.name = "Jumper Spider";
				}
				if (this.type == 392)
				{
					this.name = "Dangerous Spider";
				}
			}
			else if (this.type == 393 || this.type == 394 || this.type == 395)
			{
				this.name = "One Eyed Pirate";
				this.width = 20;
				this.height = 30;
				this.aiStyle = 67;
				this.penetrate = -1;
				this.netImportant = true;
				this.timeLeft *= 5;
				this.minion = true;
				this.minionSlots = 1f;
				if (this.type == 394)
				{
					this.name = "Soulscourge Pirate";
				}
				if (this.type == 395)
				{
					this.name = "Pirate Captain";
				}
			}
			else if (this.type == 396)
			{
				this.name = "Slime Hook";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
				this.alpha = 100;
			}
			else if (this.type == 397)
			{
				this.name = "Sticky Grenade";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.thrown = true;
				this.tileCollide = false;
			}
			else if (this.type == 398)
			{
				this.netImportant = true;
				this.name = "Mini Minotaur";
				this.width = 18;
				this.height = 38;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 399)
			{
				this.name = "Molotov Cocktail";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 68;
				this.friendly = true;
				this.penetrate = 1;
				this.alpha = 255;
				this.thrown = true;
				this.noEnchantments = true;
			}
			else if (this.type >= 400 && this.type <= 402)
			{
				this.name = "Molotov Fire";
				if (this.type == 400)
				{
					this.width = 14;
					this.height = 16;
				}
				else if (this.type == 401)
				{
					this.width = 12;
					this.height = 14;
				}
				else
				{
					this.width = 6;
					this.height = 12;
				}
				this.penetrate = 3;
				this.aiStyle = 14;
				this.friendly = true;
				this.timeLeft = 360;
				this.ranged = true;
				this.noEnchantments = true;
			}
			else if (this.type == 403)
			{
				this.netImportant = true;
				this.name = "Track Hook";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
			}
			else if (this.type == 404)
			{
				this.name = "Flairon";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 69;
				this.friendly = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.melee = true;
			}
			else if (this.type == 405)
			{
				this.name = "Flairon Bubble";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 70;
				this.friendly = true;
				this.penetrate = 1;
				this.alpha = 255;
				this.timeLeft = 90;
				this.melee = true;
				this.noEnchantments = true;
			}
			else if (this.type == 406)
			{
				this.name = "Slime Gun";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 60;
				this.alpha = 255;
				this.penetrate = -1;
				this.extraUpdates = 2;
				this.ignoreWater = true;
			}
			else if (this.type == 407)
			{
				this.netImportant = true;
				this.name = "Tempest";
				this.width = 28;
				this.height = 40;
				this.aiStyle = 62;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.minion = true;
				this.friendly = true;
				this.minionSlots = 1f;
				this.tileCollide = false;
				this.ignoreWater = true;
			}
			else if (this.type == 408)
			{
				this.name = "Mini Sharkron";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.alpha = 255;
				this.ignoreWater = true;
			}
			else if (this.type == 409)
			{
				this.name = "Typhoon";
				this.width = 30;
				this.height = 30;
				this.penetrate = -1;
				this.aiStyle = 71;
				this.alpha = 255;
				this.timeLeft = 360;
				this.friendly = true;
				this.tileCollide = true;
				this.extraUpdates = 2;
				this.magic = true;
				this.ignoreWater = true;
			}
			else if (this.type == 410)
			{
				this.name = "Bubble";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 72;
				this.friendly = true;
				this.penetrate = 1;
				this.alpha = 255;
				this.timeLeft = 50;
				this.magic = true;
				this.ignoreWater = true;
			}
			else if (this.type >= 411 && this.type <= 414)
			{
				switch (this.type)
				{
					case 411:
						this.name = "Copper Coins";
						break;
					case 412:
						this.name = "Silver Coins";
						break;
					case 413:
						this.name = "Gold Coins";
						break;
					case 414:
						this.name = "Platinum Coins";
						break;
				}
				this.width = 10;
				this.height = 10;
				this.aiStyle = 10;
			}
			else if (this.type == 415 || this.type == 416 || this.type == 417 || this.type == 418)
			{
				this.name = "Rocket";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 34;
				this.friendly = true;
				this.ranged = true;
				this.timeLeft = 45;
			}
			else if (this.type >= 419 && this.type <= 422)
			{
				this.name = "Firework Fountain";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 73;
				this.friendly = true;
			}
			else if (this.type == 423)
			{
				this.netImportant = true;
				this.name = "UFO";
				this.width = 28;
				this.height = 28;
				this.aiStyle = 62;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.minion = true;
				this.friendly = true;
				this.minionSlots = 1f;
				this.ignoreWater = true;
			}
			else if (this.type >= 424 && this.type <= 426)
			{
				this.name = "Meteor";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 1;
				this.friendly = true;
				this.magic = true;
				this.tileCollide = false;
				this.extraUpdates = 2;
			}
			else if (this.type == 427)
			{
				this.name = "Vortex Chainsaw";
				this.width = 22;
				this.height = 56;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.glowMask = 2;
			}
			else if (this.type == 428)
			{
				this.name = "Vortex Drill";
				this.width = 26;
				this.height = 54;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.glowMask = 3;
			}
			else if (this.type == 429)
			{
				this.name = "Nebula Chainsaw";
				this.width = 18;
				this.height = 56;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.glowMask = 7;
			}
			else if (this.type == 430)
			{
				this.name = "Nebula Drill";
				this.width = 30;
				this.height = 54;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.glowMask = 8;
			}
			else if (this.type == 431)
			{
				this.name = "Solar Flare Chainsaw";
				this.width = 28;
				this.height = 64;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 432)
			{
				this.name = "Solar Flare Drill";
				this.width = 30;
				this.height = 54;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 610)
			{
				this.name = "Stardust Chainsaw";
				this.width = 28;
				this.height = 64;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.glowMask = 179;
			}
			else if (this.type == 609)
			{
				this.name = "Stardust Drill";
				this.width = 30;
				this.height = 54;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.glowMask = 180;
			}
			else if (this.type == 433)
			{
				this.name = "UFO Ray";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 48;
				this.friendly = true;
				this.extraUpdates = 100;
				this.timeLeft = 100;
				this.ignoreWater = true;
			}
			else if (this.type == 434)
			{
				this.name = "Scutlix Laser";
				this.width = 1;
				this.height = 1;
				this.aiStyle = 74;
				this.friendly = true;
				this.extraUpdates = 100;
				this.penetrate = -1;
			}
			else if (this.type == 435)
			{
				this.name = "Electric Bolt";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.hostile = true;
				this.ignoreWater = true;
			}
			else if (this.type == 436)
			{
				this.name = "Brain Scrambling Bolt";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.hostile = true;
				this.ignoreWater = true;
			}
			else if (this.type == 437)
			{
				this.name = "Gigazapper Spearhead";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.hostile = true;
				this.extraUpdates = 2;
				this.ignoreWater = true;
			}
			else if (this.type == 438)
			{
				this.name = "Laser Ray";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 1;
				this.hostile = true;
				this.alpha = 255;
				this.extraUpdates = 3;
				this.ignoreWater = true;
			}
			else if (this.type == 439)
			{
				this.name = "Laser Machinegun";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 75;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.magic = true;
				this.ignoreWater = true;
			}
			else if (this.type == 440)
			{
				this.name = "Laser";
				this.width = 5;
				this.height = 5;
				this.aiStyle = 1;
				this.friendly = true;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1f;
				this.timeLeft = 600;
				this.magic = true;
				this.ignoreWater = true;
			}
			else if (this.type == 441)
			{
				this.name = "Scutlix Crosshair";
				this.width = 1;
				this.height = 1;
				this.aiStyle = 76;
				this.ignoreWater = true;
				this.tileCollide = false;
			}
			else if (this.type == 442)
			{
				this.name = "Electrosphere Missile";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 1;
				this.friendly = true;
				this.alpha = 255;
				this.scale = 1f;
				this.timeLeft = 600;
				this.ranged = true;
			}
			else if (this.type == 443)
			{
				this.name = "Electrosphere";
				this.width = 80;
				this.height = 80;
				this.aiStyle = 77;
				this.friendly = true;
				this.alpha = 255;
				this.scale = 1f;
				this.ranged = true;
				this.ignoreWater = true;
				this.tileCollide = false;
				this.penetrate = -1;
			}
			else if (this.type == 444)
			{
				this.name = "Xenopopper";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 78;
				this.friendly = true;
				this.alpha = 255;
				this.scale = 1f;
				this.ranged = true;
				this.ignoreWater = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 445)
			{
				this.name = "Laser Drill";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 75;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.melee = true;
				this.ignoreWater = true;
				this.ownerHitCheck = true;
			}
			else if (this.type == 446)
			{
				this.netImportant = true;
				this.name = "Anti-Gravity Hook";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
				this.light = 0.7f;
			}
			else if (this.type == 447)
			{
				this.name = "Martian Deathray";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 79;
				this.hostile = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.timeLeft = 240;
			}
			else if (this.type == 448)
			{
				this.name = "Martian Rocket";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 80;
				this.hostile = true;
				this.penetrate = -1;
				this.tileCollide = false;
			}
			else if (this.type == 449)
			{
				this.name = "Saucer Laser";
				this.width = 5;
				this.height = 5;
				this.aiStyle = 1;
				this.hostile = true;
				this.alpha = 255;
				this.extraUpdates = 1;
				this.scale = 1f;
				this.timeLeft = 600;
				this.ignoreWater = true;
			}
			else if (this.type == 450)
			{
				this.name = "Saucer Scrap";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 14;
				this.hostile = true;
				this.penetrate = -1;
				this.timeLeft = 360;
			}
			else if (this.type == 451)
			{
				this.name = "Influx Waver";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 81;
				this.melee = true;
				this.penetrate = 3;
				this.light = 0.2f;
				this.alpha = 255;
				this.friendly = true;
			}
			else if (this.type == 452)
			{
				this.name = "Phantasmal Eye";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 82;
				this.hostile = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.timeLeft = 600;
			}
			else if (this.type == 453)
			{
				this.name = "Drill Crosshair";
				this.width = 1;
				this.height = 1;
				this.aiStyle = 76;
				this.ignoreWater = true;
				this.tileCollide = false;
			}
			else if (this.type == 454)
			{
				this.name = "Phantasmal Sphere";
				this.width = 46;
				this.height = 46;
				this.aiStyle = 83;
				this.hostile = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.timeLeft = 600;
				this.tileCollide = false;
			}
			else if (this.type == 455)
			{
				this.name = "Phantasmal Deathray";
				this.width = 36;
				this.height = 36;
				this.aiStyle = 84;
				this.hostile = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.timeLeft = 600;
				this.tileCollide = false;
			}
			else if (this.type == 456)
			{
				this.name = "Moon Leech";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 85;
				this.hostile = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.timeLeft = 600;
				this.tileCollide = false;
			}
			else if (this.type == 459)
			{
				this.name = "Charged Blaster Orb";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 1;
				this.friendly = true;
				this.magic = true;
				this.alpha = 255;
				this.scale = 1f;
				this.ignoreWater = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 460)
			{
				this.name = "Charged Blaster Cannon";
				this.width = 14;
				this.height = 18;
				this.aiStyle = 75;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.magic = true;
				this.ignoreWater = true;
			}
			else if (this.type == 461)
			{
				this.name = "Charged Blaster Laser";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 84;
				this.friendly = true;
				this.magic = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.tileCollide = false;
				this.hide = true;
			}
			else if (this.type == 462)
			{
				this.name = "Phantasmal Bolt";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 1;
				this.hostile = true;
				this.alpha = 255;
				this.extraUpdates = 3;
				this.ignoreWater = true;
				this.tileCollide = false;
			}
			else if (this.type == 463)
			{
				this.name = "Vicious Powder";
				this.width = 48;
				this.height = 48;
				this.aiStyle = 6;
				this.friendly = true;
				this.tileCollide = false;
				this.penetrate = -1;
				this.alpha = 255;
				this.ignoreWater = true;
			}
			else if (this.type == 464)
			{
				this.name = "Ice Mist";
				this.width = 60;
				this.height = 60;
				this.aiStyle = 86;
				this.hostile = true;
				this.tileCollide = false;
				this.penetrate = -1;
				this.alpha = 255;
				this.ignoreWater = true;
			}
			else if (this.type == 467)
			{
				this.name = "Fireball";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 1;
				this.hostile = true;
				this.alpha = 255;
				this.ignoreWater = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 468)
			{
				this.name = "Shadow Fireball";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 1;
				this.hostile = true;
				this.alpha = 255;
				this.ignoreWater = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 465)
			{
				this.name = "Lightning Orb";
				this.width = 80;
				this.height = 80;
				this.aiStyle = 88;
				this.hostile = true;
				this.alpha = 255;
				this.ignoreWater = true;
				this.tileCollide = false;
			}
			else if (this.type == 466)
			{
				this.name = "Lightning Orb Arc";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 88;
				this.hostile = true;
				this.alpha = 255;
				this.ignoreWater = true;
				this.tileCollide = true;
				this.extraUpdates = 4;
				this.timeLeft = 120 * (this.extraUpdates + 1);
			}
			else if (this.type == 491)
			{
				this.name = "Flying Knife";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 9;
				this.friendly = true;
				this.melee = true;
				this.penetrate = -1;
			}
			else if (this.type == 500)
			{
				this.name = "Crimson Heart";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 67;
				this.penetrate = -1;
				this.netImportant = true;
				this.timeLeft *= 5;
				this.friendly = true;
				this.ignoreWater = true;
				this.scale = 0.8f;
			}
			else if (this.type == 499)
			{
				this.netImportant = true;
				this.name = "Baby Face Monster";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 469)
			{
				this.alpha = 255;
				this.arrow = true;
				this.name = "Bee Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
			}
			else if (this.type == 470)
			{
				this.name = "Sticky Dynamite";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
			}
			else if (this.type == 471)
			{
				this.name = "Bone";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 2;
				this.scale = 1.2f;
				this.hostile = true;
				this.ranged = true;
			}
			else if (this.type == 472)
			{
				this.name = "Web spit";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 0;
				this.hostile = true;
				this.penetrate = -1;
				this.aiStyle = 1;
				this.tileCollide = true;
				this.timeLeft = 50;
			}
			else if (this.type == 474)
			{
				this.arrow = true;
				this.name = "Bone Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
			}
			else if (this.type == 473)
			{
				this.netImportant = true;
				this.name = "Spelunker Glowstick";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 14;
				this.penetrate = -1;
				this.alpha = 75;
				this.light = 1f;
				this.timeLeft *= 2;
			}
			else if (this.type == 475)
			{
				this.name = "Vine Rope Coil";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 35;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft = 400;
			}
			else if (this.type == 476)
			{
				this.name = "Soul Drain";
				this.width = 200;
				this.height = 200;
				this.aiStyle = -1;
				this.friendly = true;
				this.tileCollide = false;
				this.penetrate = -1;
				this.alpha = 255;
				this.ignoreWater = true;
				this.timeLeft = 3;
			}
			else if (this.type == 477)
			{
				this.alpha = 255;
				this.name = "Crystal Dart";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 7;
				this.extraUpdates = 1;
				this.ranged = true;
			}
			else if (this.type == 478)
			{
				this.alpha = 255;
				this.name = "Cursed Dart";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 1;
				this.friendly = true;
				this.timeLeft = 300;
				this.ranged = true;
			}
			else if (this.type == 479)
			{
				this.alpha = 255;
				this.name = "Ichor Dart";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
			}
			else if (this.type == 480)
			{
				this.alpha = 255;
				this.name = "Cursed Flame";
				this.width = 12;
				this.height = 12;
				this.penetrate = 3;
				this.aiStyle = 14;
				this.friendly = true;
				this.timeLeft = 120;
				this.ranged = true;
				this.noEnchantments = true;
			}
			else if (this.type == 481)
			{
				this.name = "Chain Guillotine";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 13;
				this.friendly = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.melee = true;
				this.extraUpdates = 0;
			}
			else if (this.type == 482)
			{
				this.name = "Cursed Flames";
				this.width = 16;
				this.height = 200;
				this.aiStyle = 87;
				this.friendly = true;
				this.tileCollide = false;
				this.penetrate = 20;
				this.alpha = 255;
				this.ignoreWater = true;
				this.timeLeft = 2700;
			}
			else if (this.type == 483)
			{
				this.arrow = true;
				this.name = "Seedler";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 14;
				this.friendly = true;
				this.melee = true;
			}
			else if (this.type == 484)
			{
				this.arrow = true;
				this.name = "Seedler";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.melee = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 485)
			{
				this.arrow = true;
				this.name = "Hellwing";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
				this.penetrate = -1;
			}
			else if (this.type >= 486 && this.type <= 489)
			{
				this.name = "Hook";
				if (this.type == 486)
				{
					this.width = 12;
					this.height = 12;
				}
				else if (this.type == 487)
				{
					this.width = 22;
					this.height = 22;
				}
				else if (this.type == 488)
				{
					this.width = 12;
					this.height = 12;
					this.light = 0.3f;
				}
				else if (this.type == 489)
				{
					this.width = 20;
					this.height = 16;
				}
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
			}
			else if (this.type == 492)
			{
				this.netImportant = true;
				this.name = "Magic Lantern";
				this.width = 18;
				this.height = 32;
				this.aiStyle = 90;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 490)
			{
				this.name = "Lightning Ritual";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 89;
				this.hostile = true;
				this.alpha = 255;
				this.ignoreWater = true;
				this.tileCollide = false;
				this.timeLeft = 600;
				this.netImportant = true;
			}
			else if (this.type == 493 || this.type == 494)
			{
				this.name = "Crystal Vile Shard";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 4;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.alpha = 255;
				this.ignoreWater = true;
				this.magic = true;
				this.light = 0.2f;
			}
			else if (this.type == 495)
			{
				this.arrow = true;
				this.name = "Shadowflame Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
				this.penetrate = 3;
			}
			else if (this.type == 496)
			{
				this.alpha = 255;
				this.name = "Shadowflame";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 91;
				this.friendly = true;
				this.magic = true;
				this.MaxUpdates = 3;
				this.penetrate = 3;
			}
			else if (this.type == 497)
			{
				this.name = "Shadowflame Knife";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 3;
				this.melee = true;
			}
			else if (this.type == 498)
			{
				this.name = "Nail";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 1;
				this.hostile = true;
				this.penetrate = -1;
				this.timeLeft = 180;
			}
			else if (this.type == 501)
			{
				this.name = "Flask";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 2;
				this.scale = 1.1f;
				this.hostile = true;
				this.ranged = true;
			}
			else if (this.type == 502)
			{
				this.name = "Meowmere";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 8;
				this.friendly = true;
				this.melee = true;
				this.penetrate = 5;
			}
			else if (this.type == 503)
			{
				this.name = "Star Wrath";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 5;
				this.friendly = true;
				this.penetrate = 2;
				this.alpha = 255;
				this.tileCollide = false;
				this.melee = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 504)
			{
				this.name = "Spark";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 2;
				this.friendly = true;
				this.magic = true;
				this.alpha = 255;
				this.penetrate = 2;
			}
			else if (this.type == 507)
			{
				this.name = "Javelin";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 1;
				this.friendly = true;
				this.melee = true;
				this.penetrate = 3;
			}
			else if (this.type == 508)
			{
				this.name = "Javelin";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 1;
				this.hostile = true;
				this.penetrate = -1;
			}
			else if (this.type == 509)
			{
				this.name = "Butcher's Chainsaw";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.scale = 1.2f;
			}
			else if (this.type == 510)
			{
				this.name = "Toxic Flask";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 1;
				this.magic = true;
			}
			else if (this.type == 511)
			{
				this.name = "Toxic Cloud";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 92;
				this.friendly = true;
				this.penetrate = -1;
				this.scale = 1.1f;
				this.magic = true;
			}
			else if (this.type == 512)
			{
				this.name = "Toxic Cloud";
				this.width = 40;
				this.height = 38;
				this.aiStyle = 92;
				this.friendly = true;
				this.penetrate = -1;
				this.scale = 1.1f;
				this.magic = true;
			}
			else if (this.type == 513)
			{
				this.name = "Toxic Cloud";
				this.width = 30;
				this.height = 28;
				this.aiStyle = 92;
				this.friendly = true;
				this.penetrate = -1;
				this.scale = 1.1f;
				this.magic = true;
			}
			else if (this.type == 514)
			{
				this.name = "Nail";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 93;
				this.friendly = true;
				this.penetrate = 3;
				this.alpha = 255;
				this.ranged = true;
			}
			else if (this.type == 515)
			{
				this.netImportant = true;
				this.name = "Bouncy Glowstick";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 14;
				this.penetrate = -1;
				this.alpha = 75;
				this.light = 1f;
				this.timeLeft *= 5;
			}
			else if (this.type == 516)
			{
				this.name = "Bouncy Bomb";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
			}
			else if (this.type == 517)
			{
				this.name = "Bouncy Grenade";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.thrown = true;
			}
			else if (this.type == 518)
			{
				this.name = "Coin Portal";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 94;
				this.friendly = true;
				this.alpha = 255;
				this.tileCollide = false;
				this.ignoreWater = true;
			}
			else if (this.type == 519)
			{
				this.name = "Bomb Fish";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
			}
			else if (this.type == 520)
			{
				this.name = "Frost Daggerfish";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 3;
				this.thrown = true;
			}
			else if (this.type == 521)
			{
				this.name = "Crystal Charge";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 29;
				this.alpha = 255;
				this.magic = true;
				this.penetrate = 1;
				this.friendly = true;
			}
			else if (this.type == 522)
			{
				this.name = "Crystal Charge";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 29;
				this.alpha = 255;
				this.magic = true;
				this.penetrate = 1;
				this.friendly = true;
			}
			else if (this.type == 523)
			{
				this.name = "Toxic Bubble";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 95;
				this.alpha = 255;
				this.ranged = true;
				this.penetrate = 1;
				this.friendly = true;
			}
			else if (this.type == 524)
			{
				this.name = "Ichor Splash";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 96;
				this.friendly = true;
				this.alpha = 255;
				this.penetrate = -1;
				this.ignoreWater = true;
				this.melee = true;
				this.extraUpdates = 5;
			}
			else if (this.type == 525)
			{
				this.name = "Flying Piggy Bank";
				this.width = 30;
				this.height = 24;
				this.aiStyle = 97;
				this.tileCollide = false;
				this.timeLeft = 10800;
			}
			else if (this.type == 526)
			{
				this.name = "Energy";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 98;
				this.tileCollide = false;
				this.timeLeft = 120;
				this.alpha = 255;
			}
			else if (this.type >= 527 && this.type <= 531)
			{
				this.name = "Tombstone";
				this.knockBack = 12f;
				this.width = 24;
				this.height = 24;
				this.aiStyle = 17;
				this.penetrate = -1;
			}
			else if (this.type == 532)
			{
				this.name = "XBone";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 1;
				this.scale = 1f;
				this.friendly = true;
				this.thrown = true;
				this.penetrate = 3;
				this.extraUpdates = 1;
			}
			else if (this.type == 533)
			{
				this.netImportant = true;
				this.name = "Deadly Sphere";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 66;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.minion = true;
				this.minionSlots = 1f;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.friendly = true;
			}
			else if (this.type == 534)
			{
				this.extraUpdates = 0;
				this.name = "Yoyo";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 99;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
				this.scale = 1f;
			}
			else if (this.type >= 541 && this.type <= 555)
			{
				this.extraUpdates = 0;
				this.name = "Yoyo";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 99;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
				this.scale = 1f;
				if (this.type == 547)
				{
					this.scale = 1.1f;
				}
				if (this.type == 554)
				{
					this.scale = 1.2f;
				}
				if (this.type == 555)
				{
					this.scale = 1.15f;
				}
				if (this.type == 551 || this.type == 550)
				{
					this.scale = 1.1f;
				}
			}
			else if (this.type >= 562 && this.type <= 564)
			{
				this.extraUpdates = 0;
				this.name = "Yoyo";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 99;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
				this.scale = 1f;
				if (this.type == 563)
				{
					this.scale = 1.05f;
				}
				if (this.type == 564)
				{
					this.scale = 1.075f;
				}
			}
			else if (this.type == 603)
			{
				this.extraUpdates = 0;
				this.name = "Terrarian";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 99;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
				this.scale = 1.15f;
			}
			else if (this.type == 604)
			{
				this.extraUpdates = 0;
				this.name = "Terrarian";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 115;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
				this.scale = 1.2f;
			}
			else if (this.type >= 556 && this.type <= 561)
			{
				this.extraUpdates = 0;
				this.name = "Counterweight";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 99;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
				this.scale = 1f;
				this.counterweight = true;
			}
			else if (this.type == 535)
			{
				this.name = "Medusa Ray";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 100;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.magic = true;
				this.ignoreWater = true;
			}
			else if (this.type == 536)
			{
				this.name = "Medusa Ray";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 101;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.magic = true;
				this.ignoreWater = true;
			}
			else if (this.type == 537)
			{
				this.name = "Stardust Laser";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 84;
				this.hostile = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.timeLeft = 240;
				this.tileCollide = false;
			}
			else if (this.type == 538)
			{
				this.name = "Twinkle";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 14;
				this.hostile = true;
				this.penetrate = -1;
				this.timeLeft = 120;
				this.extraUpdates = 1;
				this.alpha = 255;
			}
			else if (this.type == 539)
			{
				this.name = "Flow Invader";
				this.width = 18;
				this.height = 30;
				this.aiStyle = 102;
				this.hostile = true;
				this.penetrate = -1;
				this.timeLeft = 600;
			}
			else if (this.type == 540)
			{
				this.name = "Starmark";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 103;
				this.hostile = true;
				this.penetrate = -1;
				this.timeLeft = 300;
				this.alpha = 255;
			}
			else if (this.type == 565)
			{
				this.name = "Brain of Confusion";
				this.width = 28;
				this.height = 28;
				this.aiStyle = 104;
				this.penetrate = -1;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.alpha = 255;
				this.scale = 0.8f;
			}
			else if (this.type == 566)
			{
				this.name = "Bee";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 36;
				this.friendly = true;
				this.penetrate = 4;
				this.alpha = 255;
				this.timeLeft = 660;
				this.extraUpdates = 3;
			}
			else if (this.type == 567 || this.type == 568)
			{
				this.name = "Spore";
				if (this.type == 567)
				{
					this.width = 14;
					this.height = 14;
				}
				else
				{
					this.width = 16;
					this.height = 16;
				}
				this.aiStyle = 105;
				this.friendly = true;
				this.penetrate = 1;
				this.alpha = 255;
				this.timeLeft = 3600;
				this.tileCollide = false;
				this.ignoreWater = true;
			}
			else if (this.type >= 569 && this.type <= 571)
			{
				this.name = "Spore";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 106;
				this.friendly = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.timeLeft = 3600;
				this.tileCollide = false;
				this.ignoreWater = true;
			}
			else if (this.type == 575)
			{
				this.name = "Nebula Sphere";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 107;
				this.hostile = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft = 420;
				this.alpha = 255;
			}
			else if (this.type == 573)
			{
				this.name = "Nebula Piercer";
				this.width = 18;
				this.height = 30;
				this.aiStyle = 102;
				this.hostile = true;
				this.penetrate = -1;
				this.timeLeft = 600;
			}
			else if (this.type == 574)
			{
				this.name = "Nebula Eye";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 102;
				this.hostile = true;
				this.timeLeft = 600;
				this.tileCollide = false;
			}
			else if (this.type == 572)
			{
				this.name = "Poison Spit";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.alpha = 255;
				this.penetrate = -1;
				this.friendly = false;
				this.hostile = true;
			}
			else if (this.type == 576)
			{
				this.name = "Nebula Laser";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.hostile = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1.2f;
				this.timeLeft = 600;
			}
			else if (this.type == 577)
			{
				this.name = "Vortex Laser";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.hostile = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1.2f;
				this.timeLeft = 600;
			}
			else if (this.type == 578 || this.type == 579)
			{
				this.name = "Vortex";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 108;
				this.friendly = true;
				this.alpha = 255;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.hostile = true;
				this.hide = true;
			}
			else if (this.type == 580)
			{
				this.name = "Vortex Lightning";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 88;
				this.hostile = true;
				this.alpha = 255;
				this.ignoreWater = true;
				this.tileCollide = true;
				this.extraUpdates = 4;
				this.timeLeft = 600;
			}
			else if (this.type == 581)
			{
				this.name = "Alien Goop";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.alpha = 255;
				this.penetrate = -1;
				this.friendly = false;
				this.hostile = true;
			}
			else if (this.type == 582)
			{
				this.name = "Mechanic's Wrench";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 109;
				this.friendly = true;
				this.penetrate = -1;
				this.MaxUpdates = 2;
			}
			else if (this.type == 583)
			{
				this.name = "Syringe";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 2;
				this.friendly = true;
				this.scale = 0.8f;
			}
			else if (this.type == 589)
			{
				this.name = "Christmas Ornament";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 2;
				this.friendly = true;
			}
			else if (this.type == 584)
			{
				this.name = "Syringe";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 110;
				this.friendly = true;
				this.scale = 0.8f;
				this.penetrate = 3;
			}
			else if (this.type == 585)
			{
				this.name = "Skull";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 1;
				this.alpha = 255;
				this.friendly = true;
				this.penetrate = 3;
			}
			else if (this.type == 586)
			{
				this.name = "Dryad's ward";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 111;
				this.alpha = 255;
				this.friendly = true;
				this.penetrate = -1;
			}
			else if (this.type == 587)
			{
				this.name = "Paintball";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.alpha = 255;
				this.friendly = true;
				this.ranged = true;
			}
			else if (this.type == 588)
			{
				this.name = "Confetti Grenade";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.thrown = true;
			}
			else if (this.type == 590)
			{
				this.name = "Truffle Spore";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 112;
				this.friendly = true;
				this.penetrate = 1;
				this.alpha = 255;
				this.timeLeft = 900;
				this.tileCollide = false;
				this.ignoreWater = true;
			}
			else if (this.type == 591)
			{
				this.name = "Minecart Laser";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 101;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ignoreWater = true;
			}
			else if (this.type == 592)
			{
				this.name = "Laser Ray";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 1;
				this.hostile = true;
				this.alpha = 255;
				this.extraUpdates = 3;
				this.ignoreWater = true;
			}
			else if (this.type == 593)
			{
				this.name = "Prophecy's End";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 1;
				this.hostile = true;
				this.alpha = 255;
				this.extraUpdates = 1;
				this.ignoreWater = true;
			}
			else if (this.type == 594)
			{
				this.name = "Blowup Smoke";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 1;
				this.alpha = 255;
				this.extraUpdates = 2;
			}
			else if (this.type == 595)
			{
				this.name = "Arkhalis";
				this.width = 68;
				this.height = 64;
				this.aiStyle = 75;
				this.friendly = true;
				this.tileCollide = false;
				this.melee = true;
				this.penetrate = -1;
				this.ownerHitCheck = true;
			}
			else if (this.type == 596)
			{
				this.name = "Desert Spirit's Curse";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 107;
				this.hostile = true;
				this.alpha = 255;
				this.ignoreWater = true;
				this.timeLeft = 180;
				this.tileCollide = false;
			}
			else if (this.type == 597)
			{
				this.name = "Amber Bolt";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 29;
				this.alpha = 255;
				this.magic = true;
				this.penetrate = 2;
				this.friendly = true;
			}
			else if (this.type == 598)
			{
				this.name = "Bone Javelin";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 113;
				this.friendly = true;
				this.melee = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.hide = true;
			}
			else if (this.type == 599)
			{
				this.name = "Bone Dagger";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 6;
				this.thrown = true;
			}
			else if (this.type == 600)
			{
				this.name = "Portal Gun";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 75;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ignoreWater = true;
			}
			else if (this.type == 601)
			{
				this.name = "Portal Bolt";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.alpha = 255;
				this.friendly = true;
				this.extraUpdates = 30;
			}
			else if (this.type == 602)
			{
				this.name = "Portal Gate";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 114;
				this.alpha = 255;
				this.friendly = true;
				this.tileCollide = false;
				this.netImportant = true;
			}
			else if (this.type == 605)
			{
				this.name = "Slime Spike";
				this.alpha = 255;
				this.width = 6;
				this.height = 6;
				this.aiStyle = 1;
				this.hostile = true;
				this.penetrate = -1;
			}
			else if (this.type == 606)
			{
				this.name = "Laser";
				this.width = 5;
				this.height = 5;
				this.aiStyle = 1;
				this.friendly = true;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1f;
				this.timeLeft = 600;
				this.ignoreWater = true;
			}
			else if (this.type == 607)
			{
				this.name = "Solar Flare";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 116;
				this.friendly = true;
				this.alpha = 255;
				this.timeLeft = 600;
				this.ignoreWater = true;
				this.tileCollide = false;
				this.penetrate = -1;
			}
			else if (this.type == 608)
			{
				this.name = "Solar Radiance";
				this.width = 160;
				this.height = 160;
				this.aiStyle = 117;
				this.friendly = true;
				this.alpha = 255;
				this.timeLeft = 3;
				this.ignoreWater = true;
				this.tileCollide = false;
				this.penetrate = -1;
				this.hide = true;
			}
			else if (this.type == 611)
			{
				this.name = "Solar Eruption";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 75;
				this.friendly = true;
				this.melee = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.hide = true;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.updatedNPCImmunity = true;
			}
			else if (this.type == 612)
			{
				this.name = "Solar Eruption";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 117;
				this.friendly = true;
				this.alpha = 255;
				this.ignoreWater = true;
				this.timeLeft = 60;
				this.tileCollide = false;
				this.penetrate = -1;
				this.updatedNPCImmunity = true;
			}
			else if (this.type == 613)
			{
				this.netImportant = true;
				this.name = "Stardust Cell";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 62;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.minion = true;
				this.friendly = true;
				this.minionSlots = 1f;
				this.ignoreWater = true;
			}
			else if (this.type == 614)
			{
				this.name = "Stardust Cell";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 113;
				this.friendly = true;
				this.penetrate = -1;
				this.alpha = 255;
			}
			else if (this.type == 615)
			{
				this.name = "Vortex Beater";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 75;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ranged = true;
				this.ignoreWater = true;
			}
			else if (this.type == 616)
			{
				this.name = "Vortex Rocket";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.alpha = 255;
				this.ranged = true;
				this.extraUpdates = 2;
				this.timeLeft = 90 * this.MaxUpdates;
			}
			else if (this.type == 617)
			{
				this.name = "Nebula Arcanum";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 118;
				this.friendly = true;
				this.alpha = 255;
				this.ignoreWater = true;
				this.hide = true;
				this.magic = true;
				this.penetrate = 3;
				this.updatedNPCImmunity = true;
			}
			else if (this.type == 618)
			{
				this.name = "Nebula Arcanum";
				this.tileCollide = false;
				this.width = 18;
				this.height = 30;
				this.aiStyle = 119;
				this.penetrate = -1;
				this.timeLeft = 420;
				this.magic = true;
				this.friendly = true;
				this.updatedNPCImmunity = true;
			}
			else if (this.type == 619)
			{
				this.name = "Nebula Arcanum";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 29;
				this.alpha = 255;
				this.magic = true;
				this.penetrate = 1;
				this.friendly = true;
			}
			else if (this.type == 620)
			{
				this.name = "Nebula Arcanum";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 29;
				this.alpha = 255;
				this.magic = true;
				this.penetrate = 1;
				this.friendly = true;
			}
			else if (this.type == 622)
			{
				this.name = "Blowup Smoke";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.alpha = 255;
				this.extraUpdates = 2;
			}
			else if (this.type == 623)
			{
				this.netImportant = true;
				this.name = "Stardust Guardian";
				this.width = 50;
				this.height = 80;
				this.aiStyle = 120;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.minion = true;
				this.friendly = true;
				this.minionSlots = 0f;
				this.ignoreWater = true;
				this.tileCollide = false;
				this.netImportant = true;
			}
			else if (this.type == 624)
			{
				this.name = "Starburst";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 117;
				this.friendly = true;
				this.alpha = 255;
				this.ignoreWater = true;
				this.timeLeft = 60;
				this.tileCollide = false;
				this.penetrate = -1;
			}
			else if (this.type >= 625 && this.type <= 628)
			{
				if (this.type == 625 || this.type == 628)
				{
					this.netImportant = true;
				}
				if (this.type == 626 || this.type == 627)
				{
					this.minionSlots = 0.5f;
				}
				this.name = "Stardust Dragon";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 121;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.minion = true;
				this.friendly = true;
				this.ignoreWater = true;
				this.tileCollide = false;
				this.alpha = 255;
				this.hide = true;
				this.netImportant = true;
			}
			else if (this.type == 629)
			{
				this.name = "Released Energy";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 122;
				this.hostile = true;
				this.alpha = 255;
				this.ignoreWater = true;
				this.timeLeft = 3600;
				this.tileCollide = false;
				this.penetrate = -1;
				this.extraUpdates = 2;
			}
			else if (this.type == 630)
			{
				this.name = "Phantasm";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 75;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ranged = true;
				this.ignoreWater = true;
			}
			else if (this.type == 631)
			{
				this.arrow = true;
				this.name = "Phantasm";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 122;
				this.friendly = true;
				this.ranged = true;
				this.tileCollide = false;
				this.alpha = 255;
				this.ignoreWater = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 633)
			{
				this.name = "Last Prism";
				this.width = 14;
				this.height = 18;
				this.aiStyle = 75;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.magic = true;
				this.ignoreWater = true;
			}
			else if (this.type == 632)
			{
				this.name = "Last Prism";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 84;
				this.friendly = true;
				this.magic = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.tileCollide = false;
			}
			else if (this.type == 634)
			{
				this.name = "Nebula Blaze";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 1;
				this.friendly = true;
				this.alpha = 255;
				this.ignoreWater = true;
				this.extraUpdates = 2;
				this.magic = true;
			}
			else if (this.type == 635)
			{
				this.name = "Nebula Blaze Ex";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 1;
				this.friendly = true;
				this.alpha = 255;
				this.friendly = true;
				this.extraUpdates = 3;
				this.magic = true;
			}
			else if (this.type == 636)
			{
				this.name = "Daybreak";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 113;
				this.friendly = true;
				this.melee = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.hide = true;
				this.MaxUpdates = 2;
			}
			else if (this.type == 637)
			{
				this.name = "Bouncy Dynamite";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
			}
			else if (this.type == 638)
			{
				this.name = "Luminite Bullet";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.alpha = 255;
				this.extraUpdates = 5;
				this.timeLeft = 600;
				this.ranged = true;
				this.ignoreWater = true;
				this.updatedNPCImmunity = true;
				this.penetrate = -1;
			}
			else if (this.type == 639)
			{
				this.arrow = true;
				this.name = "Luminite Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
				this.MaxUpdates = 2;
				this.timeLeft = this.MaxUpdates * 45;
				this.ignoreWater = true;
				this.updatedNPCImmunity = true;
				this.alpha = 255;
				this.penetrate = 4;
			}
			else if (this.type == 640)
			{
				this.name = "Luminite Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
				this.MaxUpdates = 3;
				this.timeLeft = 90;
				this.ignoreWater = true;
				this.updatedNPCImmunity = true;
				this.alpha = 255;
				this.penetrate = 4;
			}
			else if (this.type == 642)
			{
				this.name = "Lunar Portal Laser";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 84;
				this.friendly = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.tileCollide = false;
				this.updatedNPCImmunity = true;
			}
			else if (this.type == 641)
			{
				this.name = "Lunar Portal";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 123;
				this.timeLeft = 7200;
				this.ignoreWater = true;
				this.tileCollide = false;
				this.alpha = 255;
				this.hide = true;
			}
			else if (this.type == 643)
			{
				this.name = "Rainbow Crystal";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 123;
				this.timeLeft = 7200;
				this.ignoreWater = true;
				this.tileCollide = false;
				this.alpha = 255;
			}
			else if (this.type == 644)
			{
				this.name = "Rainbow Explosion";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 112;
				this.penetrate = 1;
				this.timeLeft = 900;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.alpha = 255;
			}
			else if (this.type == 645)
			{
				this.name = "Lunar Flare";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.magic = true;
				this.tileCollide = false;
				this.extraUpdates = 5;
				this.penetrate = -1;
				this.updatedNPCImmunity = true;
			}
			else if (this.type >= 646 && this.type <= 649)
			{
				this.name = "Lunar Hook";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
			}
			else if (this.type == 650)
			{
				this.name = "Suspicious Looking Tentacle";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 124;
				this.penetrate = -1;
				this.netImportant = true;
				this.timeLeft *= 5;
				this.friendly = true;
				this.ignoreWater = true;
				this.tileCollide = false;
				this.manualDirectionChange = true;
			}
			else if (this.type == 651)
			{
				this.name = "Wire Kite";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 125;
				this.friendly = true;
				this.ignoreWater = true;
				this.tileCollide = false;
				this.penetrate = -1;
			}
			else if (this.type == 652)
			{
				this.name = "Static Hook";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
			}
			else if (this.type == 653)
			{
				this.name = "Companion Cube";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 67;
				this.penetrate = -1;
				this.netImportant = true;
				this.timeLeft *= 5;
				this.friendly = true;
				this.ignoreWater = true;
				this.scale = 0.8f;
			}
			else if (this.type == 654)
			{
				this.name = "Geyser";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 126;
				this.alpha = 255;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.timeLeft = 120;
				this.friendly = true;
				this.hostile = true;
				this.penetrate = -1;
				this.trap = true;
			}
			else if (this.type == 655)
			{
				this.name = "Bee Hive";
				this.width = 31;
				this.height = 31;
				this.aiStyle = 25;
				this.friendly = true;
				this.hostile = true;
				this.penetrate = -1;
				this.trap = true;
			}
			else if (this.type == 656)
			{
				this.name = "Ancient Storm";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 127;
				this.friendly = true;
				this.magic = true;
				this.tileCollide = false;
				this.penetrate = -1;
				this.updatedNPCImmunity = true;
				this.timeLeft = 1200;
			}
			else if (this.type == 657)
			{
				this.name = "Ancient Storm";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 127;
				this.hostile = true;
				this.tileCollide = false;
				this.penetrate = -1;
				this.timeLeft = 1200;
			}
			else if (this.type == 658)
			{
				this.name = "Ancient Storm";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 128;
				this.penetrate = 1;
				this.timeLeft = 900;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.alpha = 255;
				this.hostile = true;
			}
			else if (this.type == 659)
			{
				this.name = "Spirit Flame";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 129;
				this.friendly = true;
				this.magic = true;
				this.alpha = 255;
				this.ignoreWater = true;
				this.timeLeft = 180;
				this.tileCollide = false;
				this.penetrate = -1;
			}
			else if (this.type == 660)
			{
				this.name = "Sky Fracture";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.alpha = 255;
				this.timeLeft = 600;
				this.magic = true;
				this.ignoreWater = true;
			}
			else if (this.type == 661)
			{
				this.name = "Onyx Blaster";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.alpha = 255;
				this.timeLeft = 40;
				this.extraUpdates = 1;
				this.ranged = true;
				this.ignoreWater = true;
				this.updatedNPCImmunity = true;
			}
			ProjectileLoader.SetupProjectile(this);
			this.width = (int)((float)this.width * this.scale);
			this.height = (int)((float)this.height * this.scale);
			this.maxPenetrate = this.penetrate;
		}

		public static int GetNextSlot()
		{
			int result = 1000;
			for (int i = 0; i < 1000; i++)
			{
				if (!Main.projectile[i].active)
				{
					result = i;
					break;
				}
			}
			return result;
		}

		public static int NewProjectile(Vector2 position, Vector2 velocity, int Type, int Damage, float KnockBack, int Owner = 255, float ai0 = 0f, float ai1 = 0f)
		{
			return Projectile.NewProjectile(position.X, position.Y, velocity.X, velocity.Y, Type, Damage, KnockBack, Owner, ai0, ai1);
		}

		public static int NewProjectile(float X, float Y, float SpeedX, float SpeedY, int Type, int Damage, float KnockBack, int Owner = 255, float ai0 = 0f, float ai1 = 0f)
		{
			int num = 1000;
			for (int i = 0; i < 1000; i++)
			{
				if (!Main.projectile[i].active)
				{
					num = i;
					break;
				}
			}
			if (num == 1000)
			{
				return num;
			}
			Projectile projectile = Main.projectile[num];
			projectile.SetDefaults(Type);
			projectile.position.X = X - (float)projectile.width * 0.5f;
			projectile.position.Y = Y - (float)projectile.height * 0.5f;
			projectile.owner = Owner;
			projectile.velocity.X = SpeedX;
			projectile.velocity.Y = SpeedY;
			projectile.damage = Damage;
			projectile.knockBack = KnockBack;
			projectile.identity = num;
			projectile.gfxOffY = 0f;
			projectile.stepSpeed = 1f;
			projectile.wet = Collision.WetCollision(projectile.position, projectile.width, projectile.height);
			if (projectile.ignoreWater)
			{
				projectile.wet = false;
			}
			projectile.honeyWet = Collision.honey;
			Main.projectileIdentity[Owner, num] = num;
			if (projectile.aiStyle == 1)
			{
				while (projectile.velocity.X >= 16f || projectile.velocity.X <= -16f || projectile.velocity.Y >= 16f || projectile.velocity.Y < -16f)
				{
					Projectile expr_119_cp_0 = projectile;
					expr_119_cp_0.velocity.X = expr_119_cp_0.velocity.X * 0.97f;
					Projectile expr_130_cp_0 = projectile;
					expr_130_cp_0.velocity.Y = expr_130_cp_0.velocity.Y * 0.97f;
				}
			}
			if (Owner == Main.myPlayer)
			{
				if (Type == 206)
				{
					projectile.ai[0] = (float)Main.rand.Next(-100, 101) * 0.0005f;
					projectile.ai[1] = (float)Main.rand.Next(-100, 101) * 0.0005f;
				}
				else if (Type == 335)
				{
					projectile.ai[1] = (float)Main.rand.Next(4);
				}
				else if (Type == 358)
				{
					projectile.ai[1] = (float)Main.rand.Next(10, 31) * 0.1f;
				}
				else if (Type == 406)
				{
					projectile.ai[1] = (float)Main.rand.Next(10, 21) * 0.1f;
				}
				else
				{
					projectile.ai[0] = ai0;
					projectile.ai[1] = ai1;
				}
			}
			if (Type == 434)
			{
				projectile.ai[0] = projectile.position.X;
				projectile.ai[1] = projectile.position.Y;
			}
			if (Type > 0)
			{
				if (ProjectileID.Sets.NeedsUUID[Type])
				{
					projectile.projUUID = projectile.identity;
				}
				if (ProjectileID.Sets.StardustDragon[Type])
				{
					int num2 = Main.projectile[(int)projectile.ai[0]].projUUID;
					if (num2 >= 0)
					{
						projectile.ai[0] = (float)num2;
					}
				}
			}
			if (Main.netMode != 0 && Owner == Main.myPlayer)
			{
				NetMessage.SendData(27, -1, -1, "", num, 0f, 0f, 0f, 0, 0, 0);
			}
			if (Owner == Main.myPlayer)
			{
				if (Type == 28)
				{
					projectile.timeLeft = 180;
				}
				if (Type == 516)
				{
					projectile.timeLeft = 180;
				}
				if (Type == 519)
				{
					projectile.timeLeft = 180;
				}
				if (Type == 29)
				{
					projectile.timeLeft = 300;
				}
				if (Type == 470)
				{
					projectile.timeLeft = 300;
				}
				if (Type == 637)
				{
					projectile.timeLeft = 300;
				}
				if (Type == 30)
				{
					projectile.timeLeft = 180;
				}
				if (Type == 517)
				{
					projectile.timeLeft = 180;
				}
				if (Type == 37)
				{
					projectile.timeLeft = 180;
				}
				if (Type == 75)
				{
					projectile.timeLeft = 180;
				}
				if (Type == 133)
				{
					projectile.timeLeft = 180;
				}
				if (Type == 136)
				{
					projectile.timeLeft = 180;
				}
				if (Type == 139)
				{
					projectile.timeLeft = 180;
				}
				if (Type == 142)
				{
					projectile.timeLeft = 180;
				}
				if (Type == 397)
				{
					projectile.timeLeft = 180;
				}
				if (Type == 419)
				{
					projectile.timeLeft = 600;
				}
				if (Type == 420)
				{
					projectile.timeLeft = 600;
				}
				if (Type == 421)
				{
					projectile.timeLeft = 600;
				}
				if (Type == 422)
				{
					projectile.timeLeft = 600;
				}
				if (Type == 588)
				{
					projectile.timeLeft = 180;
				}
				if (Type == 443)
				{
					projectile.timeLeft = 300;
				}
			}
			if (Type == 249)
			{
				projectile.frame = Main.rand.Next(5);
			}
			return num;
		}

		public void StatusNPC(int i)
		{
			if (this.melee && Main.player[this.owner].meleeEnchant > 0 && !this.noEnchantments)
			{
				int meleeEnchant = (int)Main.player[this.owner].meleeEnchant;
				if (meleeEnchant == 1)
				{
					Main.npc[i].AddBuff(70, 60 * Main.rand.Next(5, 10), false);
				}
				if (meleeEnchant == 2)
				{
					Main.npc[i].AddBuff(39, 60 * Main.rand.Next(3, 7), false);
				}
				if (meleeEnchant == 3)
				{
					Main.npc[i].AddBuff(24, 60 * Main.rand.Next(3, 7), false);
				}
				if (meleeEnchant == 5)
				{
					Main.npc[i].AddBuff(69, 60 * Main.rand.Next(10, 20), false);
				}
				if (meleeEnchant == 6)
				{
					Main.npc[i].AddBuff(31, 60 * Main.rand.Next(1, 4), false);
				}
				if (meleeEnchant == 8)
				{
					Main.npc[i].AddBuff(20, 60 * Main.rand.Next(5, 10), false);
				}
				if (meleeEnchant == 4)
				{
					Main.npc[i].AddBuff(72, 120, false);
				}
			}
			if (this.type == 195)
			{
				if (Main.rand.Next(3) == 0)
				{
					Main.npc[i].AddBuff(70, 60 * Main.rand.Next(10, 21), false);
				}
				else
				{
					Main.npc[i].AddBuff(20, 60 * Main.rand.Next(10, 21), false);
				}
			}
			if (this.type == 567 || this.type == 568)
			{
				Main.npc[i].AddBuff(20, 60 * Main.rand.Next(5, 11), false);
			}
			if (this.type == 598)
			{
				Main.npc[i].AddBuff(169, 900, false);
			}
			if (this.type == 636)
			{
				Main.npc[i].AddBuff(189, 300, false);
			}
			if (this.type == 611)
			{
				Main.npc[i].AddBuff(189, 300, false);
			}
			if (this.type == 612)
			{
				Main.npc[i].AddBuff(189, 300, false);
			}
			if (this.type == 614)
			{
				Main.npc[i].AddBuff(183, 900, false);
			}
			if (this.type == 585)
			{
				Main.npc[i].AddBuff(153, 60 * Main.rand.Next(5, 11), false);
			}
			if (this.type == 583)
			{
				Main.npc[i].AddBuff(20, 60 * Main.rand.Next(3, 6), false);
			}
			if (this.type == 524)
			{
				Main.npc[i].AddBuff(69, 60 * Main.rand.Next(3, 8), false);
			}
			if (this.type == 504 && Main.rand.Next(3) == 0)
			{
				if (Main.rand.Next(3) == 0)
				{
					Main.npc[i].AddBuff(24, Main.rand.Next(60, 180), false);
				}
				else
				{
					Main.npc[i].AddBuff(24, Main.rand.Next(30, 120), false);
				}
			}
			if (this.type == 545 && Main.rand.Next(3) == 0)
			{
				Main.npc[i].AddBuff(24, Main.rand.Next(60, 240), false);
			}
			if (this.type == 553)
			{
				Main.npc[i].AddBuff(24, Main.rand.Next(180, 480), false);
			}
			if (this.type == 552 && Main.rand.Next(3) != 0)
			{
				Main.npc[i].AddBuff(44, Main.rand.Next(120, 320), false);
			}
			if (this.type == 495)
			{
				Main.npc[i].AddBuff(153, Main.rand.Next(120, 300), false);
			}
			if (this.type == 497)
			{
				Main.npc[i].AddBuff(153, Main.rand.Next(60, 180), false);
			}
			if (this.type == 496)
			{
				Main.npc[i].AddBuff(153, Main.rand.Next(240, 480), false);
			}
			if (this.type == 476)
			{
				Main.npc[i].AddBuff(151, 30, false);
			}
			if (this.type == 523)
			{
				Main.npc[i].AddBuff(20, 60 * Main.rand.Next(10, 30), false);
			}
			if (this.type == 478 || this.type == 480)
			{
				Main.npc[i].AddBuff(39, 60 * Main.rand.Next(3, 7), false);
			}
			if (this.type == 479)
			{
				Main.npc[i].AddBuff(69, 60 * Main.rand.Next(7, 15), false);
			}
			if (this.type == 379)
			{
				Main.npc[i].AddBuff(70, 60 * Main.rand.Next(4, 7), false);
			}
			if (this.type >= 390 && this.type <= 392)
			{
				Main.npc[i].AddBuff(70, 60 * Main.rand.Next(2, 5), false);
			}
			if (this.type == 374)
			{
				Main.npc[i].AddBuff(20, 60 * Main.rand.Next(4, 7), false);
			}
			if (this.type == 376)
			{
				Main.npc[i].AddBuff(24, 60 * Main.rand.Next(3, 7), false);
			}
			if (this.type >= 399 && this.type <= 402)
			{
				Main.npc[i].AddBuff(24, 60 * Main.rand.Next(3, 7), false);
			}
			if (this.type == 295 || this.type == 296)
			{
				Main.npc[i].AddBuff(24, 60 * Main.rand.Next(8, 16), false);
			}
			if ((this.melee || this.ranged) && Main.player[this.owner].frostBurn && !this.noEnchantments)
			{
				Main.npc[i].AddBuff(44, 60 * Main.rand.Next(5, 15), false);
			}
			if (this.melee && Main.player[this.owner].magmaStone && !this.noEnchantments)
			{
				if (Main.rand.Next(7) == 0)
				{
					Main.npc[i].AddBuff(24, 360, false);
				}
				else if (Main.rand.Next(3) == 0)
				{
					Main.npc[i].AddBuff(24, 120, false);
				}
				else
				{
					Main.npc[i].AddBuff(24, 60, false);
				}
			}
			if (this.type == 287)
			{
				Main.npc[i].AddBuff(72, 120, false);
			}
			if (this.type == 285)
			{
				if (Main.rand.Next(3) == 0)
				{
					Main.npc[i].AddBuff(31, 180, false);
				}
				else
				{
					Main.npc[i].AddBuff(31, 60, false);
				}
			}
			if (this.type == 2 && Main.rand.Next(3) == 0)
			{
				Main.npc[i].AddBuff(24, 180, false);
			}
			if (this.type == 172)
			{
				if (Main.rand.Next(3) == 0)
				{
					Main.npc[i].AddBuff(44, 180, false);
				}
			}
			else if (this.type == 15)
			{
				if (Main.rand.Next(2) == 0)
				{
					Main.npc[i].AddBuff(24, 300, false);
				}
			}
			else if (this.type == 253)
			{
				if (Main.rand.Next(2) == 0)
				{
					Main.npc[i].AddBuff(44, 480, false);
				}
			}
			else if (this.type == 19)
			{
				if (Main.rand.Next(5) == 0)
				{
					Main.npc[i].AddBuff(24, 180, false);
				}
			}
			else if (this.type == 33)
			{
				if (Main.rand.Next(5) == 0)
				{
					Main.npc[i].AddBuff(20, 420, false);
				}
			}
			else if (this.type == 34)
			{
				if (Main.rand.Next(2) == 0)
				{
					Main.npc[i].AddBuff(24, Main.rand.Next(240, 480), false);
				}
			}
			else if (this.type == 35)
			{
				if (Main.rand.Next(4) == 0)
				{
					Main.npc[i].AddBuff(24, 180, false);
				}
			}
			else if (this.type == 54)
			{
				if (Main.rand.Next(2) == 0)
				{
					Main.npc[i].AddBuff(20, 600, false);
				}
			}
			else if (this.type == 267)
			{
				if (Main.rand.Next(3) == 0)
				{
					Main.npc[i].AddBuff(20, 3600, false);
				}
				else
				{
					Main.npc[i].AddBuff(20, 1800, false);
				}
			}
			else if (this.type == 63)
			{
				if (Main.rand.Next(5) != 0)
				{
					Main.npc[i].AddBuff(31, 60 * Main.rand.Next(2, 5), false);
				}
			}
			else if (this.type == 85 || this.type == 188)
			{
				Main.npc[i].AddBuff(24, 1200, false);
			}
			else if (this.type == 95 || this.type == 103 || this.type == 104)
			{
				Main.npc[i].AddBuff(39, 420, false);
			}
			else if (this.type == 278 || this.type == 279 || this.type == 280)
			{
				Main.npc[i].AddBuff(69, 600, false);
			}
			else if (this.type == 282 || this.type == 283)
			{
				Main.npc[i].AddBuff(70, 600, false);
			}
			if (this.type == 163 || this.type == 310)
			{
				if (Main.rand.Next(3) == 0)
				{
					Main.npc[i].AddBuff(24, 600, false);
					return;
				}
				Main.npc[i].AddBuff(24, 300, false);
				return;
			}
			else
			{
				if (this.type == 98)
				{
					Main.npc[i].AddBuff(20, 600, false);
					return;
				}
				if (this.type == 184)
				{
					Main.npc[i].AddBuff(20, 900, false);
					return;
				}
				if (this.type == 265)
				{
					Main.npc[i].AddBuff(20, 1800, false);
					return;
				}
				if (this.type == 355)
				{
					Main.npc[i].AddBuff(70, 1800, false);
				}
				return;
			}
		}

		public void StatusPvP(int i)
		{
			if (this.melee && Main.player[this.owner].meleeEnchant > 0 && !this.noEnchantments)
			{
				int meleeEnchant = (int)Main.player[this.owner].meleeEnchant;
				if (meleeEnchant == 1)
				{
					Main.player[i].AddBuff(70, 60 * Main.rand.Next(5, 10), true);
				}
				if (meleeEnchant == 2)
				{
					Main.player[i].AddBuff(39, 60 * Main.rand.Next(3, 7), true);
				}
				if (meleeEnchant == 3)
				{
					Main.player[i].AddBuff(24, 60 * Main.rand.Next(3, 7), true);
				}
				if (meleeEnchant == 5)
				{
					Main.player[i].AddBuff(69, 60 * Main.rand.Next(10, 20), true);
				}
				if (meleeEnchant == 6)
				{
					Main.player[i].AddBuff(31, 60 * Main.rand.Next(1, 4), true);
				}
				if (meleeEnchant == 8)
				{
					Main.player[i].AddBuff(20, 60 * Main.rand.Next(5, 10), true);
				}
			}
			if (this.type == 295 || this.type == 296)
			{
				Main.player[i].AddBuff(24, 60 * Main.rand.Next(8, 16), true);
			}
			if (this.type == 478 || this.type == 480)
			{
				Main.player[i].AddBuff(39, 60 * Main.rand.Next(3, 7), true);
			}
			if ((this.melee || this.ranged) && Main.player[this.owner].frostBurn && !this.noEnchantments)
			{
				Main.player[i].AddBuff(44, 60 * Main.rand.Next(1, 8), false);
			}
			if (this.melee && Main.player[this.owner].magmaStone && !this.noEnchantments)
			{
				if (Main.rand.Next(4) == 0)
				{
					Main.player[i].AddBuff(24, 360, true);
				}
				else if (Main.rand.Next(2) == 0)
				{
					Main.player[i].AddBuff(24, 240, true);
				}
				else
				{
					Main.player[i].AddBuff(24, 120, true);
				}
			}
			if (this.type == 2 && Main.rand.Next(3) == 0)
			{
				Main.player[i].AddBuff(24, 180, false);
			}
			if (this.type == 172)
			{
				if (Main.rand.Next(3) == 0)
				{
					Main.player[i].AddBuff(44, 240, false);
				}
			}
			else if (this.type == 15)
			{
				if (Main.rand.Next(2) == 0)
				{
					Main.player[i].AddBuff(24, 300, false);
				}
			}
			else if (this.type == 253)
			{
				if (Main.rand.Next(2) == 0)
				{
					Main.player[i].AddBuff(44, 480, false);
				}
			}
			else if (this.type == 19)
			{
				if (Main.rand.Next(5) == 0)
				{
					Main.player[i].AddBuff(24, 180, false);
				}
			}
			else if (this.type == 33)
			{
				if (Main.rand.Next(5) == 0)
				{
					Main.player[i].AddBuff(20, 420, false);
				}
			}
			else if (this.type == 34)
			{
				if (Main.rand.Next(2) == 0)
				{
					Main.player[i].AddBuff(24, 240, false);
				}
			}
			else if (this.type == 35)
			{
				if (Main.rand.Next(4) == 0)
				{
					Main.player[i].AddBuff(24, 180, false);
				}
			}
			else if (this.type == 54)
			{
				if (Main.rand.Next(2) == 0)
				{
					Main.player[i].AddBuff(20, 600, false);
				}
			}
			else if (this.type == 267)
			{
				if (Main.rand.Next(3) == 0)
				{
					Main.player[i].AddBuff(20, 3600, true);
				}
				else
				{
					Main.player[i].AddBuff(20, 1800, true);
				}
			}
			else if (this.type == 63)
			{
				if (Main.rand.Next(3) != 0)
				{
					Main.player[i].AddBuff(31, 120, true);
				}
			}
			else if (this.type == 85 || this.type == 188)
			{
				Main.player[i].AddBuff(24, 1200, false);
			}
			else if (this.type == 95 || this.type == 103 || this.type == 104)
			{
				Main.player[i].AddBuff(39, 420, true);
			}
			else if (this.type == 278 || this.type == 279 || this.type == 280)
			{
				Main.player[i].AddBuff(69, 900, true);
			}
			else if (this.type == 282 || this.type == 283)
			{
				Main.player[i].AddBuff(70, 600, true);
			}
			if (this.type == 163 || this.type == 310)
			{
				if (Main.rand.Next(3) == 0)
				{
					Main.player[i].AddBuff(24, 600, true);
					return;
				}
				Main.player[i].AddBuff(24, 300, true);
				return;
			}
			else
			{
				if (this.type == 265)
				{
					Main.player[i].AddBuff(20, 1200, true);
					return;
				}
				if (this.type == 355)
				{
					Main.player[i].AddBuff(70, 1800, true);
				}
				return;
			}
		}

		public void ghostHurt(int dmg, Vector2 Position)
		{
			if (!this.magic)
			{
				return;
			}
			int num = this.damage / 2;
			if (dmg / 2 <= 1)
			{
				return;
			}
			int num2 = 1000;
			if (Main.player[Main.myPlayer].ghostDmg > (float)num2)
			{
				return;
			}
			Main.player[Main.myPlayer].ghostDmg += (float)num;
			int[] array = new int[200];
			int num3 = 0;
			int num4 = 0;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].CanBeChasedBy(this, false))
				{
					float num5 = Math.Abs(Main.npc[i].position.X + (float)(Main.npc[i].width / 2) - this.position.X + (float)(this.width / 2)) + Math.Abs(Main.npc[i].position.Y + (float)(Main.npc[i].height / 2) - this.position.Y + (float)(this.height / 2));
					if (num5 < 800f)
					{
						if (Collision.CanHit(this.position, 1, 1, Main.npc[i].position, Main.npc[i].width, Main.npc[i].height) && num5 > 50f)
						{
							array[num4] = i;
							num4++;
						}
						else if (num4 == 0)
						{
							array[num3] = i;
							num3++;
						}
					}
				}
			}
			if (num3 == 0 && num4 == 0)
			{
				return;
			}
			int num6;
			if (num4 > 0)
			{
				num6 = array[Main.rand.Next(num4)];
			}
			else
			{
				num6 = array[Main.rand.Next(num3)];
			}
			float num7 = 4f;
			float num8 = (float)Main.rand.Next(-100, 101);
			float num9 = (float)Main.rand.Next(-100, 101);
			float num10 = (float)Math.Sqrt((double)(num8 * num8 + num9 * num9));
			num10 = num7 / num10;
			num8 *= num10;
			num9 *= num10;
			Projectile.NewProjectile(Position.X, Position.Y, num8, num9, 356, num, 0f, this.owner, (float)num6, 0f);
		}

		public void ghostHeal(int dmg, Vector2 Position)
		{
			float num = 0.2f;
			num -= (float)this.numHits * 0.05f;
			if (num <= 0f)
			{
				return;
			}
			float num2 = (float)dmg * num;
			if ((int)num2 <= 0)
			{
				return;
			}
			if (Main.player[Main.myPlayer].lifeSteal <= 0f)
			{
				return;
			}
			Main.player[Main.myPlayer].lifeSteal -= num2;
			if (!this.magic)
			{
				return;
			}
			float num3 = 0f;
			int num4 = this.owner;
			for (int i = 0; i < 255; i++)
			{
				if (Main.player[i].active && !Main.player[i].dead && ((!Main.player[this.owner].hostile && !Main.player[i].hostile) || Main.player[this.owner].team == Main.player[i].team))
				{
					float num5 = Math.Abs(Main.player[i].position.X + (float)(Main.player[i].width / 2) - this.position.X + (float)(this.width / 2)) + Math.Abs(Main.player[i].position.Y + (float)(Main.player[i].height / 2) - this.position.Y + (float)(this.height / 2));
					if (num5 < 1200f && (float)(Main.player[i].statLifeMax2 - Main.player[i].statLife) > num3)
					{
						num3 = (float)(Main.player[i].statLifeMax2 - Main.player[i].statLife);
						num4 = i;
					}
				}
			}
			Projectile.NewProjectile(Position.X, Position.Y, 0f, 0f, 298, 0, 0f, this.owner, (float)num4, num2);
		}

		public void vampireHeal(int dmg, Vector2 Position)
		{
			float num = (float)dmg * 0.075f;
			if ((int)num == 0)
			{
				return;
			}
			if (Main.player[Main.myPlayer].lifeSteal <= 0f)
			{
				return;
			}
			Main.player[Main.myPlayer].lifeSteal -= num;
			int num2 = this.owner;
			Projectile.NewProjectile(Position.X, Position.Y, 0f, 0f, 305, 0, 0f, this.owner, (float)num2, num);
		}

		public void StatusPlayer(int i)
		{
			if (this.type == 472)
			{
				Main.player[i].AddBuff(149, Main.rand.Next(30, 150), true);
			}
			if (this.type == 467)
			{
				Main.player[i].AddBuff(24, Main.rand.Next(30, 150), true);
			}
			if (this.type == 581)
			{
				if (Main.expertMode)
				{
					Main.player[i].AddBuff(164, Main.rand.Next(300, 540), true);
				}
				else if (Main.rand.Next(2) == 0)
				{
					Main.player[i].AddBuff(164, Main.rand.Next(360, 720), true);
				}
			}
			if (this.type == 572 && Main.rand.Next(3) != 0)
			{
				Main.player[i].AddBuff(20, Main.rand.Next(120, 240), true);
			}
			if (this.type == 276)
			{
				if (Main.expertMode)
				{
					Main.player[i].AddBuff(20, Main.rand.Next(120, 540), true);
				}
				else if (Main.rand.Next(2) == 0)
				{
					Main.player[i].AddBuff(20, Main.rand.Next(180, 420), true);
				}
			}
			if (this.type == 436 && Main.rand.Next(5) >= 2)
			{
				Main.player[i].AddBuff(31, 300, true);
			}
			if (this.type == 435 && Main.rand.Next(3) != 0)
			{
				Main.player[i].AddBuff(144, 300, true);
			}
			if (this.type == 437)
			{
				Main.player[i].AddBuff(144, 60 * Main.rand.Next(4, 9), true);
			}
			if (this.type == 348)
			{
				if (Main.rand.Next(2) == 0)
				{
					Main.player[i].AddBuff(46, 600, true);
				}
				else
				{
					Main.player[i].AddBuff(46, 300, true);
				}
				if (Main.rand.Next(3) != 0)
				{
					if (Main.rand.Next(16) == 0)
					{
						Main.player[i].AddBuff(47, 60, true);
					}
					else if (Main.rand.Next(12) == 0)
					{
						Main.player[i].AddBuff(47, 40, true);
					}
					else if (Main.rand.Next(8) == 0)
					{
						Main.player[i].AddBuff(47, 20, true);
					}
				}
			}
			if (this.type == 349)
			{
				if (Main.rand.Next(3) == 0)
				{
					Main.player[i].AddBuff(46, 600, true);
				}
				else if (Main.rand.Next(2) == 0)
				{
					Main.player[i].AddBuff(46, 300, true);
				}
			}
			if (this.type >= 399 && this.type <= 402)
			{
				Main.npc[i].AddBuff(24, 60 * Main.rand.Next(3, 7), false);
			}
			if (this.type == 55)
			{
				if (Main.rand.Next(3) == 0)
				{
					Main.player[i].AddBuff(20, 600, true);
				}
				else if (Main.expertMode)
				{
					Main.player[i].AddBuff(20, Main.rand.Next(60, 300), true);
				}
			}
			if (this.type == 44 && Main.rand.Next(3) == 0)
			{
				Main.player[i].AddBuff(22, 900, true);
			}
			if (this.type == 293)
			{
				Main.player[i].AddBuff(80, 60 * Main.rand.Next(2, 7), true);
			}
			if (this.type == 82 && Main.rand.Next(3) == 0)
			{
				Main.player[i].AddBuff(24, 420, true);
			}
			if (this.type == 285)
			{
				if (Main.rand.Next(3) == 0)
				{
					Main.player[i].AddBuff(31, 180, true);
				}
				else
				{
					Main.player[i].AddBuff(31, 60, true);
				}
			}
			if (this.type == 96 || this.type == 101)
			{
				if (Main.rand.Next(6) == 0)
				{
					Main.player[i].AddBuff(39, 480, true);
				}
				else if (Main.rand.Next(4) == 0)
				{
					Main.player[i].AddBuff(39, 300, true);
				}
				else if (Main.rand.Next(2) == 0)
				{
					Main.player[i].AddBuff(39, 180, true);
				}
			}
			else if (this.type == 288)
			{
				Main.player[i].AddBuff(69, 900, true);
			}
			else if (this.type == 253 && Main.rand.Next(2) == 0)
			{
				Main.player[i].AddBuff(44, 600, true);
			}
			if (this.type == 291 || this.type == 292)
			{
				Main.player[i].AddBuff(24, 60 * Main.rand.Next(8, 16), true);
			}
			if (this.type == 98)
			{
				Main.player[i].AddBuff(20, 600, true);
			}
			if (this.type == 184)
			{
				Main.player[i].AddBuff(20, 900, true);
			}
			if (this.type == 290)
			{
				Main.player[i].AddBuff(32, 60 * Main.rand.Next(5, 16), true);
			}
			if (this.type == 174)
			{
				Main.player[i].AddBuff(46, 1200, true);
				if (!Main.player[i].frozen && Main.rand.Next(20) == 0)
				{
					Main.player[i].AddBuff(47, 90, true);
				}
				else if (!Main.player[i].frozen && Main.expertMode && Main.rand.Next(20) == 0)
				{
					Main.player[i].AddBuff(47, 60, true);
				}
			}
			if (this.type == 257)
			{
				Main.player[i].AddBuff(46, 2700, true);
				if (!Main.player[i].frozen && Main.rand.Next(5) == 0)
				{
					Main.player[i].AddBuff(47, 60, true);
				}
			}
			if (this.type == 177)
			{
				Main.player[i].AddBuff(46, 1500, true);
				if (!Main.player[i].frozen && Main.rand.Next(10) == 0)
				{
					Main.player[i].AddBuff(47, Main.rand.Next(30, 120), true);
				}
			}
			if (this.type == 176)
			{
				if (Main.rand.Next(4) == 0)
				{
					Main.player[i].AddBuff(20, 1200, true);
					return;
				}
				if (Main.rand.Next(2) == 0)
				{
					Main.player[i].AddBuff(20, 300, true);
				}
			}
		}

		public bool CanHit(Entity ent)
		{
			return Collision.CanHit(Main.player[this.owner].position, Main.player[this.owner].width, Main.player[this.owner].height, ent.position, ent.width, ent.height) || Collision.CanHitLine(Main.player[this.owner].Center + new Vector2((float)(Main.player[this.owner].direction * Main.player[this.owner].width / 2), Main.player[this.owner].gravDir * (float)(-(float)Main.player[this.owner].height) / 3f), 0, 0, ent.Center + new Vector2(0f, (float)(-(float)ent.height / 3)), 0, 0) || Collision.CanHitLine(Main.player[this.owner].Center + new Vector2((float)(Main.player[this.owner].direction * Main.player[this.owner].width / 2), Main.player[this.owner].gravDir * (float)(-(float)Main.player[this.owner].height) / 3f), 0, 0, ent.Center, 0, 0) || Collision.CanHitLine(Main.player[this.owner].Center + new Vector2((float)(Main.player[this.owner].direction * Main.player[this.owner].width / 2), 0f), 0, 0, ent.Center + new Vector2(0f, (float)(ent.height / 3)), 0, 0);
		}

		public void Damage()
		{
			if (this.type == 18 || this.type == 72 || this.type == 86 || this.type == 87 || this.aiStyle == 31 || this.aiStyle == 32 || this.type == 226 || this.type == 378 || this.type == 613 || this.type == 650 || (this.type == 434 && this.localAI[0] != 0f) || this.type == 439 || this.type == 444 || (this.type == 451 && ((int)(this.ai[0] - 1f) / this.penetrate == 0 || this.ai[1] < 5f) && this.ai[0] != 0f) || (this.type == 500 || this.type == 653 || this.type == 460 || this.type == 633 || this.type == 600 || this.type == 601 || this.type == 602 || this.type == 535 || (this.type == 631 && this.localAI[1] == 0f)) || this.type == 651)
			{
				return;
			}
			if (this.aiStyle == 93 && this.ai[0] != 0f && this.ai[0] != 2f)
			{
				return;
			}
			if (this.aiStyle == 10 && this.localAI[1] == -1f)
			{
				return;
			}
			if (Main.projPet[this.type] && this.type != 266 && this.type != 407 && this.type != 317 && (this.type != 388 || this.ai[0] != 2f) && (this.type < 390 || this.type > 392) && (this.type < 393 || this.type > 395) && (this.type != 533 || this.ai[0] < 6f || this.ai[0] > 8f) && (this.type < 625 || this.type > 628) && !ProjectileLoader.MinionContactDamage(this))
			{
				return;
			}
			if (!ProjectileLoader.CanDamage(this))
			{
				return;
			}
			Rectangle myRect = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
			if (this.type == 85 || this.type == 101)
			{
				int num = 30;
				myRect.X -= num;
				myRect.Y -= num;
				myRect.Width += num * 2;
				myRect.Height += num * 2;
			}
			if (this.type == 188)
			{
				int num2 = 20;
				myRect.X -= num2;
				myRect.Y -= num2;
				myRect.Width += num2 * 2;
				myRect.Height += num2 * 2;
			}
			if (this.aiStyle == 29)
			{
				int num3 = 4;
				myRect.X -= num3;
				myRect.Y -= num3;
				myRect.Width += num3 * 2;
				myRect.Height += num3 * 2;
			}
			if (this.friendly && this.owner == Main.myPlayer && !this.npcProj)
			{
				if ((this.aiStyle == 16 && this.type != 338 && this.type != 339 && this.type != 340 && this.type != 341 && (this.timeLeft <= 1 || this.type == 108 || this.type == 164)) || (this.type == 286 && this.localAI[1] == -1f))
				{
					int myPlayer = Main.myPlayer;
					if (Main.player[myPlayer].active && !Main.player[myPlayer].dead && !Main.player[myPlayer].immune && (!this.ownerHitCheck || this.CanHit(Main.player[myPlayer])))
					{
						Rectangle value = new Rectangle((int)Main.player[myPlayer].position.X, (int)Main.player[myPlayer].position.Y, Main.player[myPlayer].width, Main.player[myPlayer].height);
						if (myRect.Intersects(value))
						{
							if (Main.player[myPlayer].position.X + (float)(Main.player[myPlayer].width / 2) < this.position.X + (float)(this.width / 2))
							{
								this.direction = -1;
							}
							else
							{
								this.direction = 1;
							}
							int num4 = Main.DamageVar((float)this.damage);
							this.StatusPlayer(myPlayer);
							Main.player[myPlayer].Hurt(num4, this.direction, true, false, Lang.deathMsg(this.owner, -1, this.whoAmI, -1, 0, 0), false, -1);
							if (this.trap)
							{
								Main.player[myPlayer].trapDebuffSource = true;
								if (Main.player[myPlayer].dead)
								{
									AchievementsHelper.HandleSpecialEvent(Main.player[myPlayer], 4);
								}
							}
						}
					}
				}
				this.CutTiles();
			}
			if (this.owner == Main.myPlayer)
			{
				if (this.damage > 0)
				{
					for (int i = 0; i < 200; i++)
					{
						if (!Main.npc[i].active || Main.npc[i].dontTakeDamage || this.updatedNPCImmunity && this.npcImmune[i] != 0)
						{
							continue;
						}
						bool? modCanHit = ProjectileLoader.CanHitNPC(this, Main.npc[i]);
						if (modCanHit.HasValue && !modCanHit.Value)
						{
							continue;
						}
						bool? modCanBeHit = NPCLoader.CanBeHitByProjectile(Main.npc[i], this);
						if (modCanBeHit.HasValue && !modCanBeHit.Value)
						{
							continue;
						}
						bool? modCanHit2 = PlayerHooks.CanHitNPCWithProj(this, Main.npc[i]);
						if (modCanHit2.HasValue && !modCanHit2.Value)
						{
							continue;
						}
						bool canHitFlag = (modCanHit.HasValue && modCanHit.Value) || (modCanBeHit.HasValue && modCanBeHit.Value) || (modCanHit2.HasValue && modCanHit2.Value);
						if ((canHitFlag || (this.friendly && (!Main.npc[i].friendly || this.type == 318 || (Main.npc[i].type == 22 && this.owner < 255 && Main.player[this.owner].killGuide) || (Main.npc[i].type == 54 && this.owner < 255 && Main.player[this.owner].killClothier))) || (this.hostile && Main.npc[i].friendly)) && (this.owner < 0 || Main.npc[i].immune[this.owner] == 0 || this.maxPenetrate == 1))
						{
							bool flag2 = false;
							if (this.type == 11 && (Main.npc[i].type == 47 || Main.npc[i].type == 57))
							{
								flag2 = true;
							}
							else if (this.type == 31 && Main.npc[i].type == 69)
							{
								flag2 = true;
							}
							if (canHitFlag)
							{
								flag2 = false;
							}
							else if (Main.npc[i].trapImmune && this.trap)
							{
								flag2 = true;
							}
							else if (Main.npc[i].immortal && this.npcProj)
							{
								flag2 = true;
							}
							if (!flag2 && (Main.npc[i].noTileCollide || !this.ownerHitCheck || this.CanHit(Main.npc[i])))
							{
								bool flag3;
								if (Main.npc[i].type == 414)
								{
									Rectangle rect = Main.npc[i].getRect();
									int num5 = 8;
									rect.X -= num5;
									rect.Y -= num5;
									rect.Width += num5 * 2;
									rect.Height += num5 * 2;
									flag3 = this.Colliding(myRect, rect);
								}
								else
								{
									flag3 = this.Colliding(myRect, Main.npc[i].getRect());
								}
								if (flag3)
								{
									if (this.type == 604)
									{
										Main.player[this.owner].Counterweight(Main.npc[i].Center, this.damage, this.knockBack);
									}
									if (Main.npc[i].reflectingProjectiles && this.CanReflect())
									{
										Main.npc[i].ReflectProjectile(this.whoAmI);
										return;
									}
									int num6 = this.damage;
									if (this.type > 0 && ProjectileID.Sets.StardustDragon[this.type])
									{
										float num7 = (this.scale - 1f) * 100f;
										num7 = Utils.Clamp<float>(num7, 0f, 50f);
										num6 = (int)((float)num6 * (1f + num7 * 0.23f));
									}
									int num8 = Main.DamageVar((float)num6);
									bool flag4 = !this.npcProj && !this.trap;
									if (this.type == 604)
									{
										this.friendly = false;
										this.ai[1] = 1000f;
									}
									if ((this.type == 400 || this.type == 401 || this.type == 402) && Main.npc[i].type >= 13 && Main.npc[i].type <= 15)
									{
										num8 = (int)((double)num8 * 0.65);
										if (this.penetrate > 1)
										{
											this.penetrate--;
										}
									}
									if (this.type == 504)
									{
										float num9 = (60f - this.ai[0]) / 2f;
										this.ai[0] += num9;
									}
									if (this.aiStyle == 3 && this.type != 301)
									{
										if (this.ai[0] == 0f)
										{
											this.velocity.X = -this.velocity.X;
											this.velocity.Y = -this.velocity.Y;
											this.netUpdate = true;
										}
										this.ai[0] = 1f;
									}
									else if (this.type == 582)
									{
										if (this.ai[0] != 0f)
										{
											this.direction *= -1;
										}
									}
									else if (this.type == 612)
									{
										this.direction = Main.player[this.owner].direction;
									}
									else if (this.type == 624)
									{
										float num10 = 1f;
										if (Main.npc[i].knockBackResist > 0f)
										{
											num10 = 1f / Main.npc[i].knockBackResist;
										}
										this.knockBack = 4f * num10;
										if (Main.npc[i].Center.X < base.Center.X)
										{
											this.direction = 1;
										}
										else
										{
											this.direction = -1;
										}
									}
									else if (this.aiStyle == 16)
									{
										if (this.timeLeft > 3)
										{
											this.timeLeft = 3;
										}
										if (Main.npc[i].position.X + (float)(Main.npc[i].width / 2) < this.position.X + (float)(this.width / 2))
										{
											this.direction = -1;
										}
										else
										{
											this.direction = 1;
										}
									}
									else if (this.aiStyle == 68)
									{
										if (this.timeLeft > 3)
										{
											this.timeLeft = 3;
										}
										if (Main.npc[i].position.X + (float)(Main.npc[i].width / 2) < this.position.X + (float)(this.width / 2))
										{
											this.direction = -1;
										}
										else
										{
											this.direction = 1;
										}
									}
									else if (this.aiStyle == 50)
									{
										if (Main.npc[i].position.X + (float)(Main.npc[i].width / 2) < this.position.X + (float)(this.width / 2))
										{
											this.direction = -1;
										}
										else
										{
											this.direction = 1;
										}
									}
									if (this.type == 509)
									{
										int num11 = Main.rand.Next(2, 6);
										for (int j = 0; j < num11; j++)
										{
											Vector2 vector = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
											vector += this.velocity * 3f;
											vector.Normalize();
											vector *= (float)Main.rand.Next(35, 81) * 0.1f;
											int num12 = (int)((double)this.damage * 0.5);
											Projectile.NewProjectile(base.Center.X, base.Center.Y, vector.X, vector.Y, 504, num12, this.knockBack * 0.2f, this.owner, 0f, 0f);
										}
									}
									if (this.type == 598 || this.type == 636 || this.type == 614)
									{
										this.ai[0] = 1f;
										this.ai[1] = (float)i;
										this.velocity = (Main.npc[i].Center - base.Center) * 0.75f;
										this.netUpdate = true;
									}
									if (this.type >= 511 && this.type <= 513)
									{
										this.timeLeft = 0;
									}
									if (this.type == 659)
									{
										this.timeLeft = 0;
									}
									if (this.type == 524)
									{
										this.netUpdate = true;
										this.ai[0] += 50f;
									}
									if (this.aiStyle == 39)
									{
										if (this.ai[1] == 0f)
										{
											this.ai[1] = (float)(i + 1);
											this.netUpdate = true;
										}
										if (Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) < this.position.X + (float)(this.width / 2))
										{
											this.direction = 1;
										}
										else
										{
											this.direction = -1;
										}
									}
									if (this.type == 41 && this.timeLeft > 1)
									{
										this.timeLeft = 1;
									}
									bool flag5 = false;
									if (flag4)
									{
										if (this.melee && Main.rand.Next(1, 101) <= Main.player[this.owner].meleeCrit)
										{
											flag5 = true;
										}
										if (this.ranged && Main.rand.Next(1, 101) <= Main.player[this.owner].rangedCrit)
										{
											flag5 = true;
										}
										if (this.magic && Main.rand.Next(1, 101) <= Main.player[this.owner].magicCrit)
										{
											flag5 = true;
										}
										if (this.thrown && Main.rand.Next(1, 101) <= Main.player[this.owner].thrownCrit)
										{
											flag5 = true;
										}
									}
									if (this.aiStyle == 99)
									{
										Main.player[this.owner].Counterweight(Main.npc[i].Center, this.damage, this.knockBack);
										if (Main.npc[i].Center.X < Main.player[this.owner].Center.X)
										{
											this.direction = -1;
										}
										else
										{
											this.direction = 1;
										}
										if (this.ai[0] >= 0f)
										{
											Vector2 value2 = base.Center - Main.npc[i].Center;
											value2.Normalize();
											float scaleFactor = 16f;
											this.velocity *= -0.5f;
											this.velocity += value2 * scaleFactor;
											this.netUpdate = true;
											this.localAI[0] += 20f;
											if (!Collision.CanHit(this.position, this.width, this.height, Main.player[this.owner].position, Main.player[this.owner].width, Main.player[this.owner].height))
											{
												this.localAI[0] += 40f;
												num8 = (int)((double)num8 * 0.75);
											}
										}
									}
									if (this.aiStyle == 93)
									{
										if (this.ai[0] == 0f)
										{
											this.ai[1] = 0f;
											int num13 = -i - 1;
											this.ai[0] = (float)num13;
											this.velocity = Main.npc[i].Center - base.Center;
										}
										if (this.ai[0] == 2f)
										{
											num8 = (int)((double)num8 * 1.35);
										}
										else
										{
											num8 = (int)((double)num8 * 0.15);
										}
									}
									if (flag4)
									{
										int num14 = Item.NPCtoBanner(Main.npc[i].BannerID());
										if (num14 >= 0)
										{
											Main.player[Main.myPlayer].lastCreatureHit = num14;
										}
									}
									if (Main.netMode != 2 && flag4)
									{
										int num15 = Item.NPCtoBanner(Main.npc[i].BannerID());
										if (num15 > 0 && Main.player[this.owner].NPCBannerBuff[num15])
										{
											if (Main.expertMode)
											{
												num8 *= 2;
											}
											else
											{
												num8 = (int)((double)num8 * 1.5);
											}
										}
									}
									if (Main.expertMode)
									{
										if ((this.type == 30 || this.type == 28 || this.type == 29 || this.type == 470 || this.type == 517 || this.type == 588 || this.type == 637) && Main.npc[i].type >= 13 && Main.npc[i].type <= 15)
										{
											num8 /= 5;
										}
										if (this.type == 280 && ((Main.npc[i].type >= 134 && Main.npc[i].type <= 136) || Main.npc[i].type == 139))
										{
											num8 = (int)((double)num8 * 0.75);
										}
									}
									if (Main.netMode != 2 && Main.npc[i].type == 439 && this.type >= 0 && ProjectileID.Sets.Homing[this.type])
									{
										num8 = (int)((float)num8 * 0.75f);
									}
									if (this.type == 497 && this.penetrate != 1)
									{
										this.ai[0] = 25f;
										float scaleFactor2 = this.velocity.Length();
										Vector2 value3 = Main.npc[i].Center - base.Center;
										value3.Normalize();
										value3 *= scaleFactor2;
										this.velocity = -value3 * 0.9f;
										this.netUpdate = true;
									}
									if (this.type == 323 && (Main.npc[i].type == 158 || Main.npc[i].type == 159))
									{
										num8 *= 10;
									}
									if (this.type == 294)
									{
										this.damage = (int)((double)this.damage * 0.8);
									}
									if (this.type == 477 && this.penetrate > 1)
									{
										int[] array = new int[10];
										int num16 = 0;
										int num17 = 700;
										int num18 = 20;
										for (int k = 0; k < 200; k++)
										{
											if (k != i && Main.npc[k].CanBeChasedBy(this, false))
											{
												float num19 = (base.Center - Main.npc[k].Center).Length();
												if (num19 > (float)num18 && num19 < (float)num17 && Collision.CanHitLine(base.Center, 1, 1, Main.npc[k].Center, 1, 1))
												{
													array[num16] = k;
													num16++;
													if (num16 >= 9)
													{
														break;
													}
												}
											}
										}
										if (num16 > 0)
										{
											num16 = Main.rand.Next(num16);
											Vector2 value4 = Main.npc[array[num16]].Center - base.Center;
											float scaleFactor3 = this.velocity.Length();
											value4.Normalize();
											this.velocity = value4 * scaleFactor3;
											this.netUpdate = true;
										}
									}
									if (this.type == 261)
									{
										float num20 = (float)Math.Sqrt((double)(this.velocity.X * this.velocity.X + this.velocity.Y * this.velocity.Y));
										if (num20 < 1f)
										{
											num20 = 1f;
										}
										num8 = (int)((float)num8 * num20 / 8f);
									}
									float knockback = this.knockBack;
									ProjectileLoader.ModifyHitNPC(this, Main.npc[i], ref num8, ref knockback, ref flag5);
									NPCLoader.ModifyHitByProjectile(Main.npc[i], this, ref num8, ref knockback, ref flag5);
									PlayerHooks.ModifyHitNPCWithProj(this, Main.npc[i], ref num8, ref knockback, ref flag5);
									this.StatusNPC(i);
									if (flag4 && this.type != 221 && this.type != 227 && this.type != 614)
									{
										Main.player[this.owner].OnHit(Main.npc[i].Center.X, Main.npc[i].Center.Y, Main.npc[i]);
									}
									if (this.type == 317)
									{
										this.ai[1] = -1f;
										this.netUpdate = true;
									}
									if (flag4 && !this.hostile && Main.player[this.owner].armorPenetration > 0)
									{
										num8 += Main.npc[i].checkArmorPenetration(Main.player[this.owner].armorPenetration);
									}
									int num21;
									if (flag4)
									{
										num21 = (int)Main.npc[i].StrikeNPC(num8, knockback, this.direction, flag5, false, false);
									}
									else
									{
										num21 = (int)Main.npc[i].StrikeNPCNoInteraction(num8, knockback, this.direction, flag5, false, false);
									}
									if (flag4 && Main.player[this.owner].accDreamCatcher)
									{
										Main.player[this.owner].addDPS(num21);
									}
									if (flag4 && !Main.npc[i].immortal)
									{
										if (this.type == 304 && num21 > 0 && Main.npc[i].lifeMax > 5 && !Main.player[this.owner].moonLeech)
										{
											this.vampireHeal(num21, new Vector2(Main.npc[i].Center.X, Main.npc[i].Center.Y));
										}
										if (Main.npc[i].value > 0f && Main.player[this.owner].coins && Main.rand.Next(5) == 0)
										{
											int num22 = 71;
											if (Main.rand.Next(10) == 0)
											{
												num22 = 72;
											}
											if (Main.rand.Next(100) == 0)
											{
												num22 = 73;
											}
											int num23 = Item.NewItem((int)Main.npc[i].position.X, (int)Main.npc[i].position.Y, Main.npc[i].width, Main.npc[i].height, num22, 1, false, 0, false, false);
											Main.item[num23].stack = Main.rand.Next(1, 11);
											Main.item[num23].velocity.Y = (float)Main.rand.Next(-20, 1) * 0.2f;
											Main.item[num23].velocity.X = (float)Main.rand.Next(10, 31) * 0.2f * (float)this.direction;
											if (Main.netMode == 1)
											{
												NetMessage.SendData(21, -1, -1, "", num23, 0f, 0f, 0f, 0, 0, 0);
											}
										}
										if (num21 > 0 && Main.npc[i].lifeMax > 5 && this.friendly && !this.hostile && this.aiStyle != 59)
										{
											if (Main.npc[i].canGhostHeal)
											{
												if (Main.player[this.owner].ghostHeal && !Main.player[this.owner].moonLeech)
												{
													this.ghostHeal(num21, new Vector2(Main.npc[i].Center.X, Main.npc[i].Center.Y));
												}
												if (Main.player[this.owner].ghostHurt)
												{
													this.ghostHurt(num21, new Vector2(Main.npc[i].Center.X, Main.npc[i].Center.Y));
												}
												if (Main.player[this.owner].setNebula && Main.player[this.owner].nebulaCD == 0 && Main.rand.Next(3) == 0)
												{
													Main.player[this.owner].nebulaCD = 30;
													int num24 = Utils.SelectRandom<int>(Main.rand, new int[]
														{
															3453,
															3454,
															3455
														});
													int num25 = Item.NewItem((int)Main.npc[i].position.X, (int)Main.npc[i].position.Y, Main.npc[i].width, Main.npc[i].height, num24, 1, false, 0, false, false);
													Main.item[num25].velocity.Y = (float)Main.rand.Next(-20, 1) * 0.2f;
													Main.item[num25].velocity.X = (float)Main.rand.Next(10, 31) * 0.2f * (float)this.direction;
													if (Main.netMode == 1)
													{
														NetMessage.SendData(21, -1, -1, "", num25, 0f, 0f, 0f, 0, 0, 0);
													}
												}
											}
											if (this.melee && Main.player[this.owner].beetleOffense && !Main.npc[i].immortal)
											{
												if (Main.player[this.owner].beetleOrbs == 0)
												{
													Main.player[this.owner].beetleCounter += (float)(num21 * 3);
												}
												else if (Main.player[this.owner].beetleOrbs == 1)
												{
													Main.player[this.owner].beetleCounter += (float)(num21 * 2);
												}
												else
												{
													Main.player[this.owner].beetleCounter += (float)num21;
												}
												Main.player[this.owner].beetleCountdown = 0;
											}
											if (this.arrow && this.type != 631 && Main.player[this.owner].phantasmTime > 0)
											{
												Vector2 source = Main.player[this.owner].position + Main.player[this.owner].Size * Utils.RandomVector2(Main.rand, 0f, 1f);
												Vector2 vector2 = Main.npc[i].DirectionFrom(source) * 6f;
												int num26 = (int)((float)this.damage * 0.3f);
												Projectile.NewProjectile(source.X, source.Y, vector2.X, vector2.Y, 631, num26, 0f, this.owner, (float)i, 0f);
												Projectile.NewProjectile(source.X, source.Y, vector2.X, vector2.Y, 631, num26, 0f, this.owner, (float)i, 15f);
												Projectile.NewProjectile(source.X, source.Y, vector2.X, vector2.Y, 631, num26, 0f, this.owner, (float)i, 30f);
											}
										}
									}
									if (flag4 && this.melee && Main.player[this.owner].meleeEnchant == 7)
									{
										Projectile.NewProjectile(Main.npc[i].Center.X, Main.npc[i].Center.Y, Main.npc[i].velocity.X, Main.npc[i].velocity.Y, 289, 0, 0f, this.owner, 0f, 0f);
									}
									if (Main.netMode != 0)
									{
										if (flag5)
										{
											NetMessage.SendData(28, -1, -1, "", i, (float)num8, this.knockBack, (float)this.direction, 1, 0, 0);
										}
										else
										{
											NetMessage.SendData(28, -1, -1, "", i, (float)num8, this.knockBack, (float)this.direction, 0, 0, 0);
										}
									}
									if (this.type >= 390 && this.type <= 392)
									{
										this.localAI[1] = 20f;
									}
									if (this.type == 434)
									{
										this.numUpdates = 0;
									}
									else if (this.type == 598 || this.type == 636 || this.type == 614)
									{
										this.damage = 0;
										int num27 = 6;
										if (this.type == 614)
										{
											num27 = 10;
										}
										if (this.type == 636)
										{
											num27 = 8;
										}
										Point[] array2 = new Point[num27];
										int num28 = 0;
										for (int l = 0; l < 1000; l++)
										{
											if (l != this.whoAmI && Main.projectile[l].active && Main.projectile[l].owner == Main.myPlayer && Main.projectile[l].type == this.type && Main.projectile[l].ai[0] == 1f && Main.projectile[l].ai[1] == (float)i)
											{
												array2[num28++] = new Point(l, Main.projectile[l].timeLeft);
												if (num28 >= array2.Length)
												{
													break;
												}
											}
										}
										if (num28 >= array2.Length)
										{
											int num29 = 0;
											for (int m = 1; m < array2.Length; m++)
											{
												if (array2[m].Y < array2[num29].Y)
												{
													num29 = m;
												}
											}
											Main.projectile[array2[num29].X].Kill();
										}
									}
									else if (this.type == 632)
									{
										Main.npc[i].immune[this.owner] = 5;
									}
									else if (this.type == 514)
									{
										Main.npc[i].immune[this.owner] = 1;
									}
									else if (this.type == 611)
									{
										if (this.localAI[1] <= 0f)
										{
											Projectile.NewProjectile(Main.npc[i].Center.X, Main.npc[i].Center.Y, 0f, 0f, 612, this.damage, 10f, this.owner, 0f, 0.85f + Main.rand.NextFloat() * 1.15f);
										}
										this.localAI[1] = 4f;
									}
									else if (this.type == 595)
									{
										Main.npc[i].immune[this.owner] = 5;
									}
									else if (this.type >= 625 && this.type <= 628)
									{
										Main.npc[i].immune[this.owner] = 6;
									}
									else if (this.type == 286)
									{
										Main.npc[i].immune[this.owner] = 5;
									}
									else if (this.type == 514)
									{
										Main.npc[i].immune[this.owner] = 3;
									}
									else if (this.type == 443)
									{
										Main.npc[i].immune[this.owner] = 8;
									}
									else if (this.type >= 424 && this.type <= 426)
									{
										Main.npc[i].immune[this.owner] = 5;
									}
									else if (this.type == 634 || this.type == 635)
									{
										Main.npc[i].immune[this.owner] = 5;
									}
									else if (this.type == 659)
									{
										Main.npc[i].immune[this.owner] = 5;
									}
									else if (this.type == 246)
									{
										Main.npc[i].immune[this.owner] = 7;
									}
									else if (this.type == 249)
									{
										Main.npc[i].immune[this.owner] = 7;
									}
									else if (this.type == 190)
									{
										Main.npc[i].immune[this.owner] = 8;
									}
									else if (this.type == 409)
									{
										Main.npc[i].immune[this.owner] = 6;
									}
									else if (this.type == 407)
									{
										Main.npc[i].immune[this.owner] = 20;
									}
									else if (this.type == 311)
									{
										Main.npc[i].immune[this.owner] = 7;
									}
									else if (this.type == 582)
									{
										Main.npc[i].immune[this.owner] = 7;
										if (this.ai[0] != 1f)
										{
											this.ai[0] = 1f;
											this.netUpdate = true;
										}
									}
									else
									{
										if (this.type == 451)
										{
											if (this.ai[0] == 0f)
											{
												this.ai[0] += (float)this.penetrate;
											}
											else
											{
												this.ai[0] -= (float)(this.penetrate + 1);
											}
											this.ai[1] = 0f;
											this.netUpdate = true;
											break;
										}
										if (this.type == 661)
										{
											this.npcImmune[i] = 8;
											Main.npc[i].immune[this.owner] = 0;
										}
										else if (this.penetrate != 1)
										{
											Main.npc[i].immune[this.owner] = 10;
										}
									}
									ProjectileLoader.OnHitNPC(this, Main.npc[i], num21, knockback, flag5);
									NPCLoader.OnHitByProjectile(Main.npc[i], this, num21, knockback, flag5);
									PlayerHooks.OnHitNPCWithProj(this, Main.npc[i], num21, knockback, flag5);
									if (this.penetrate > 0 && this.type != 317)
									{
										if (this.type == 357)
										{
											this.damage = (int)((double)this.damage * 0.9);
										}
										this.penetrate--;
										if (this.penetrate == 0)
										{
											break;
										}
									}
									if (this.aiStyle == 7)
									{
										this.ai[0] = 1f;
										this.damage = 0;
										this.netUpdate = true;
									}
									else if (this.aiStyle == 13)
									{
										this.ai[0] = 1f;
										this.netUpdate = true;
									}
									else if (this.aiStyle == 69)
									{
										this.ai[0] = 1f;
										this.netUpdate = true;
									}
									else if (this.type == 607)
									{
										this.ai[0] = 1f;
										this.netUpdate = true;
										this.friendly = false;
									}
									else if (this.type == 638 || this.type == 639 || this.type == 640)
									{
										this.npcImmune[i] = -1;
										Main.npc[i].immune[this.owner] = 0;
										this.damage = (int)((double)this.damage * 0.96);
									}
									else if (this.type == 617)
									{
										this.npcImmune[i] = 8;
										Main.npc[i].immune[this.owner] = 0;
									}
									else if (this.type == 656)
									{
										this.npcImmune[i] = 8;
										Main.npc[i].immune[this.owner] = 0;
										this.localAI[0] += 1f;
									}
									else if (this.type == 618)
									{
										this.npcImmune[i] = 20;
										Main.npc[i].immune[this.owner] = 0;
									}
									else if (this.type == 642)
									{
										this.npcImmune[i] = 10;
										Main.npc[i].immune[this.owner] = 0;
									}
									else if (this.type == 611 || this.type == 612)
									{
										this.npcImmune[i] = 6;
										Main.npc[i].immune[this.owner] = 4;
									}
									else if (this.type == 645)
									{
										this.npcImmune[i] = -1;
										Main.npc[i].immune[this.owner] = 0;
										if (this.ai[1] != -1f)
										{
											this.ai[0] = 0f;
											this.ai[1] = -1f;
											this.netUpdate = true;
										}
									}
									this.numHits++;
									int arg_2709_0 = Main.npc[i].immune[this.owner];
								}
							}
						}
					}
				}
				if (this.damage > 0 && Main.player[Main.myPlayer].hostile)
				{
					for (int n = 0; n < 255; n++)
					{
						if (n != this.owner && Main.player[n].active && !Main.player[n].dead && !Main.player[n].immune && Main.player[n].hostile && this.playerImmune[n] <= 0 && (Main.player[Main.myPlayer].team == 0 || Main.player[Main.myPlayer].team != Main.player[n].team) && (!this.ownerHitCheck || this.CanHit(Main.player[n])))
						{
							bool flag6 = this.Colliding(myRect, Main.player[n].getRect());
							if (ProjectileLoader.CanHitPvp(this, Main.player[n]) && PlayerHooks.CanHitPvpWithProj(this, Main.player[n]) && flag6)
							{
								if (this.aiStyle == 3)
								{
									if (this.ai[0] == 0f)
									{
										this.velocity.X = -this.velocity.X;
										this.velocity.Y = -this.velocity.Y;
										this.netUpdate = true;
									}
									this.ai[0] = 1f;
								}
								else if (this.aiStyle == 16)
								{
									if (this.timeLeft > 3)
									{
										this.timeLeft = 3;
									}
									if (Main.player[n].position.X + (float)(Main.player[n].width / 2) < this.position.X + (float)(this.width / 2))
									{
										this.direction = -1;
									}
									else
									{
										this.direction = 1;
									}
								}
								else if (this.aiStyle == 68)
								{
									if (this.timeLeft > 3)
									{
										this.timeLeft = 3;
									}
									if (Main.player[n].position.X + (float)(Main.player[n].width / 2) < this.position.X + (float)(this.width / 2))
									{
										this.direction = -1;
									}
									else
									{
										this.direction = 1;
									}
								}
								if (this.type == 41 && this.timeLeft > 1)
								{
									this.timeLeft = 1;
								}
								bool flag7 = false;
								if (this.melee && Main.rand.Next(1, 101) <= Main.player[this.owner].meleeCrit)
								{
									flag7 = true;
								}
								int num30 = Main.DamageVar((float)this.damage);
								ProjectileLoader.ModifyHitPvp(this, Main.player[n], ref num30, ref flag7);
								PlayerHooks.ModifyHitPvpWithProj(this, Main.player[n], ref num30, ref flag7);
								if (!Main.player[n].immune)
								{
									this.StatusPvP(n);
								}
								if (this.type != 221 && this.type != 227 && this.type != 614)
								{
									Main.player[this.owner].OnHit(Main.player[n].Center.X, Main.player[n].Center.Y, Main.player[n]);
								}
								//patch file: num31
								int num31 = (int)Main.player[n].Hurt(num30, this.direction, true, false, Lang.deathMsg(this.owner, -1, this.whoAmI, -1, 0, 0), flag7, -1);
								if (num31 > 0 && Main.player[this.owner].ghostHeal && this.friendly && !this.hostile)
								{
									this.ghostHeal(num31, new Vector2(Main.player[n].Center.X, Main.player[n].Center.Y));
								}
								if (this.type == 304 && num31 > 0)
								{
									this.vampireHeal(num31, new Vector2(Main.player[n].Center.X, Main.player[n].Center.Y));
								}
								if (this.melee && Main.player[this.owner].meleeEnchant == 7)
								{
									Projectile.NewProjectile(Main.player[n].Center.X, Main.player[n].Center.Y, Main.player[n].velocity.X, Main.player[n].velocity.Y, 289, 0, 0f, this.owner, 0f, 0f);
								}
								ProjectileLoader.OnHitPvp(this, Main.player[n], num31, flag7);
								PlayerHooks.OnHitPvpWithProj(this, Main.player[n], num31, flag7);
								if (Main.netMode != 0)
								{
									if (flag7)
									{
										NetMessage.SendData(26, -1, -1, Lang.deathMsg(this.owner, -1, this.whoAmI, -1, 0, 0), n, (float)this.direction, (float)num30, 1f, 1, 0, 0);
									}
									else
									{
										NetMessage.SendData(26, -1, -1, Lang.deathMsg(this.owner, -1, this.whoAmI, -1, 0, 0), n, (float)this.direction, (float)num30, 1f, 0, 0, 0);
									}
								}
								this.playerImmune[n] = 40;
								if (this.penetrate > 0)
								{
									this.penetrate--;
									if (this.penetrate == 0)
									{
										break;
									}
								}
								if (this.aiStyle == 7)
								{
									this.ai[0] = 1f;
									this.damage = 0;
									this.netUpdate = true;
								}
								else if (this.aiStyle == 13)
								{
									this.ai[0] = 1f;
									this.netUpdate = true;
								}
								else if (this.aiStyle == 69)
								{
									this.ai[0] = 1f;
									this.netUpdate = true;
								}
							}
						}
					}
				}
			}
			if (this.type == 10 && Main.netMode != 1)
			{
				for (int num32 = 0; num32 < 200; num32++)
				{
					if (Main.npc[num32].active && Main.npc[num32].type == 534)
					{
						Rectangle value5 = new Rectangle((int)Main.npc[num32].position.X, (int)Main.npc[num32].position.Y, Main.npc[num32].width, Main.npc[num32].height);
						if (myRect.Intersects(value5))
						{
							Main.npc[num32].Transform(441);
						}
					}
				}
			}
			if (this.type == 11 && Main.netMode != 1)
			{
				for (int num33 = 0; num33 < 200; num33++)
				{
					if (Main.npc[num33].active)
					{
						if (Main.npc[num33].type == 46 || Main.npc[num33].type == 303)
						{
							Rectangle value6 = new Rectangle((int)Main.npc[num33].position.X, (int)Main.npc[num33].position.Y, Main.npc[num33].width, Main.npc[num33].height);
							if (myRect.Intersects(value6))
							{
								Main.npc[num33].Transform(47);
							}
						}
						else if (Main.npc[num33].type == 55)
						{
							Rectangle value7 = new Rectangle((int)Main.npc[num33].position.X, (int)Main.npc[num33].position.Y, Main.npc[num33].width, Main.npc[num33].height);
							if (myRect.Intersects(value7))
							{
								Main.npc[num33].Transform(57);
							}
						}
						else if (Main.npc[num33].type == 148 || Main.npc[num33].type == 149)
						{
							Rectangle value8 = new Rectangle((int)Main.npc[num33].position.X, (int)Main.npc[num33].position.Y, Main.npc[num33].width, Main.npc[num33].height);
							if (myRect.Intersects(value8))
							{
								Main.npc[num33].Transform(168);
							}
						}
					}
				}
			}
			if (this.type == 463 && Main.netMode != 1)
			{
				for (int num34 = 0; num34 < 200; num34++)
				{
					if (Main.npc[num34].active)
					{
						if (Main.npc[num34].type == 46 || Main.npc[num34].type == 303)
						{
							Rectangle value9 = new Rectangle((int)Main.npc[num34].position.X, (int)Main.npc[num34].position.Y, Main.npc[num34].width, Main.npc[num34].height);
							if (myRect.Intersects(value9))
							{
								Main.npc[num34].Transform(464);
							}
						}
						else if (Main.npc[num34].type == 55)
						{
							Rectangle value10 = new Rectangle((int)Main.npc[num34].position.X, (int)Main.npc[num34].position.Y, Main.npc[num34].width, Main.npc[num34].height);
							if (myRect.Intersects(value10))
							{
								Main.npc[num34].Transform(465);
							}
						}
						else if (Main.npc[num34].type == 148 || Main.npc[num34].type == 149)
						{
							Rectangle value11 = new Rectangle((int)Main.npc[num34].position.X, (int)Main.npc[num34].position.Y, Main.npc[num34].width, Main.npc[num34].height);
							if (myRect.Intersects(value11))
							{
								Main.npc[num34].Transform(470);
							}
						}
					}
				}
			}
			if (Main.netMode != 2 && this.hostile && Main.myPlayer < 255 && this.damage > 0)
			{
				int num35 = -1;
				if (this.type == 455 || this.type == 452 || this.type == 454 || this.type == 462)
				{
					num35 = 1;
				}
				if (modProjectile != null)
				{
					num35 = modProjectile.cooldownSlot;
				}
				int myPlayer2 = Main.myPlayer;
				if (Main.player[myPlayer2].active && !Main.player[myPlayer2].dead && (!Main.player[myPlayer2].immune || num35 != -1))
				{
					bool flag8 = this.Colliding(myRect, Main.player[myPlayer2].getRect());
					if (ProjectileLoader.CanHitPlayer(this, Main.player[myPlayer2]) && PlayerHooks.CanBeHitByProjectile(Main.player[myPlayer2], this) && flag8)
					{
						int hitDirection = this.direction;
						if (Main.player[myPlayer2].position.X + (float)(Main.player[myPlayer2].width / 2) < this.position.X + (float)(this.width / 2))
						{
							hitDirection = -1;
						}
						else
						{
							hitDirection = 1;
						}
						int num36 = Main.DamageVar((float)this.damage);
						bool crit = false;
						ProjectileLoader.ModifyHitPlayer(this, Main.player[myPlayer2], ref num36, ref crit);
						PlayerHooks.ModifyHitByProjectile(Main.player[myPlayer2], this, ref num36, ref crit);
						if (!Main.player[myPlayer2].immune)
						{
							this.StatusPlayer(myPlayer2);
						}
						if (Main.player[myPlayer2].resistCold && this.coldDamage)
						{
							num36 = (int)((float)num36 * 0.7f);
						}
						if (Main.expertMode)
						{
							num36 = (int)((float)num36 * Main.expertDamage);
						}
						int realDamage = (int)Main.player[myPlayer2].Hurt(num36 * 2, hitDirection, false, false, Lang.deathMsg(-1, -1, this.whoAmI, -1), crit, num35);
						if (this.trap)
						{
							Main.player[myPlayer2].trapDebuffSource = true;
							if (Main.player[myPlayer2].dead)
							{
								AchievementsHelper.HandleSpecialEvent(Main.player[myPlayer2], 4);
							}
						}
						ProjectileLoader.OnHitPlayer(this, Main.player[myPlayer2], realDamage, crit);
						PlayerHooks.OnHitByProjectile(Main.player[myPlayer2], this, realDamage, crit);
						if (this.type == 435)
						{
							this.penetrate--;
						}
						if (this.type == 436)
						{
							this.penetrate--;
						}
						if (this.type == 437)
						{
							this.penetrate--;
						}
					}
				}
			}
		}

		private void CutTiles()
		{
			if (this.CanCutTiles())
			{
				int num = (int)(this.position.X / 16f);
				int num2 = (int)((this.position.X + (float)this.width) / 16f) + 1;
				int num3 = (int)(this.position.Y / 16f);
				int num4 = (int)((this.position.Y + (float)this.height) / 16f) + 1;
				if (num < 0)
				{
					num = 0;
				}
				if (num2 > Main.maxTilesX)
				{
					num2 = Main.maxTilesX;
				}
				if (num3 < 0)
				{
					num3 = 0;
				}
				if (num4 > Main.maxTilesY)
				{
					num4 = Main.maxTilesY;
				}
				AchievementsHelper.CurrentlyMining = true;
				for (int i = num; i < num2; i++)
				{
					for (int j = num3; j < num4; j++)
					{
						if (Main.tile[i, j] != null && Main.tileCut[(int)Main.tile[i, j].type] && Main.tile[i, j + 1] != null && Main.tile[i, j + 1].type != 78 && Main.tile[i, j + 1].type != 380)
						{
							WorldGen.KillTile(i, j, false, false, false);
							if (Main.netMode != 0)
							{
								NetMessage.SendData(17, -1, -1, "", 0, (float)i, (float)j, 0f, 0, 0, 0);
							}
						}
					}
				}
				if (this.type == 461 || this.type == 632 || this.type == 642)
				{
					Utils.PlotTileLine(base.Center, base.Center + this.velocity * this.localAI[1], (float)this.width * this.scale, new Utils.PerLinePoint(DelegateMethods.CutTiles));
				}
				else if (this.type == 611)
				{
					Utils.PlotTileLine(base.Center, base.Center + this.velocity, (float)this.width * this.scale, new Utils.PerLinePoint(DelegateMethods.CutTiles));
				}
				AchievementsHelper.CurrentlyMining = false;
			}
		}

		private bool CanCutTiles()
		{
			return this.aiStyle != 45 && this.aiStyle != 92 && this.aiStyle != 105 && this.aiStyle != 106 && this.type != 463 && this.type != 69 && this.type != 70 && this.type != 621 && this.type != 10 && this.type != 11 && this.type != 379 && this.type != 407 && this.type != 476 && this.type != 623 && (this.type < 625 || this.type > 628);
		}

		public bool Colliding(Rectangle myRect, Rectangle targetRect)
		{
			if (this.type == 598 && targetRect.Width > 8 && targetRect.Height > 8)
			{
				targetRect.Inflate(-targetRect.Width / 8, -targetRect.Height / 8);
			}
			else if (this.type == 614 && targetRect.Width > 8 && targetRect.Height > 8)
			{
				targetRect.Inflate(-targetRect.Width / 8, -targetRect.Height / 8);
			}
			else if (this.type == 636 && targetRect.Width > 8 && targetRect.Height > 8)
			{
				targetRect.Inflate(-targetRect.Width / 8, -targetRect.Height / 8);
			}
			else if (this.type == 607)
			{
				myRect.X += (int)this.velocity.X;
				myRect.Y += (int)this.velocity.Y;
			}
			else if (this.type == 661 && !Collision.CanHitLine(myRect.Center.ToVector2(), 0, 0, targetRect.Center.ToVector2(), 0, 0))
			{
				return false;
			}
			bool? modColliding = ProjectileLoader.Colliding(this, myRect, targetRect);
			if (modColliding.HasValue)
			{
				return modColliding.Value;
			}
			if (myRect.Intersects(targetRect))
			{
				return true;
			}
			if (this.type == 461)
			{
				float num = 0f;
				if (Collision.CheckAABBvLineCollision(targetRect.TopLeft(), targetRect.Size(), base.Center, base.Center + this.velocity * this.localAI[1], 22f * this.scale, ref num))
				{
					return true;
				}
			}
			else if (this.type == 642)
			{
				float num2 = 0f;
				if (Collision.CheckAABBvLineCollision(targetRect.TopLeft(), targetRect.Size(), base.Center, base.Center + this.velocity * this.localAI[1], 30f * this.scale, ref num2))
				{
					return true;
				}
			}
			else if (this.type == 632)
			{
				float num3 = 0f;
				if (Collision.CheckAABBvLineCollision(targetRect.TopLeft(), targetRect.Size(), base.Center, base.Center + this.velocity * this.localAI[1], 22f * this.scale, ref num3))
				{
					return true;
				}
			}
			else if (this.type == 455)
			{
				float num4 = 0f;
				if (Collision.CheckAABBvLineCollision(targetRect.TopLeft(), targetRect.Size(), base.Center, base.Center + this.velocity * this.localAI[1], 36f * this.scale, ref num4))
				{
					return true;
				}
			}
			else if (this.type == 611)
			{
				float num5 = 0f;
				if (Collision.CheckAABBvLineCollision(targetRect.TopLeft(), targetRect.Size(), base.Center, base.Center + this.velocity, 16f * this.scale, ref num5))
				{
					return true;
				}
			}
			else if (this.type == 537)
			{
				float num6 = 0f;
				if (Collision.CheckAABBvLineCollision(targetRect.TopLeft(), targetRect.Size(), base.Center, base.Center + this.velocity * this.localAI[1], 22f * this.scale, ref num6))
				{
					return true;
				}
			}
			else if (this.type == 466 || this.type == 580)
			{
				for (int i = 0; i < this.oldPos.Length; i++)
				{
					myRect.X = (int)this.oldPos[i].X;
					myRect.Y = (int)this.oldPos[i].Y;
					if (myRect.Intersects(targetRect))
					{
						return true;
					}
				}
			}
			else if (this.type == 464 && this.ai[1] != 1f)
			{
				Vector2 value = new Vector2(0f, -720f).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
				float scaleFactor = this.ai[0] % 45f / 45f;
				Vector2 spinningpoint = value * scaleFactor;
				for (int j = 0; j < 6; j++)
				{
					float num7 = (float)j * 6.28318548f / 6f;
					Vector2 center = base.Center + spinningpoint.RotatedBy((double)num7, default(Vector2));
					if (Utils.CenteredRectangle(center, new Vector2(30f, 30f)).Intersects(targetRect))
					{
						return true;
					}
				}
			}
			return false;
		}

		public void ProjLight()
		{
			if (this.light > 0f)
			{
				float num = this.light;
				float num2 = this.light;
				float num3 = this.light;
				if (this.type == 446)
				{
					num *= 0f;
					num3 *= 0.8f;
				}
				else if (this.type == 493 || this.type == 494)
				{
					num2 *= 0.3f;
				}
				else if (this.type == 332)
				{
					num3 *= 0.1f;
					num2 *= 0.6f;
				}
				else if (this.type == 259)
				{
					num3 *= 0.1f;
				}
				else if (this.type == 329)
				{
					num3 *= 0.1f;
					num2 *= 0.9f;
				}
				else if (this.type == 2 || this.type == 82)
				{
					num2 *= 0.75f;
					num3 *= 0.55f;
				}
				else if (this.type == 172)
				{
					num2 *= 0.55f;
					num *= 0.35f;
				}
				else if (this.type == 308)
				{
					num2 *= 0.7f;
					num *= 0.1f;
				}
				else if (this.type == 304)
				{
					num2 *= 0.2f;
					num3 *= 0.1f;
				}
				else if (this.type == 263)
				{
					num2 *= 0.7f;
					num *= 0.1f;
				}
				else if (this.type == 274)
				{
					num2 *= 0.1f;
					num *= 0.7f;
				}
				else if (this.type == 254)
				{
					num *= 0.1f;
				}
				else if (this.type == 94)
				{
					num *= 0.5f;
					num2 *= 0f;
				}
				else if (this.type == 95 || this.type == 96 || this.type == 103 || this.type == 104)
				{
					num *= 0.35f;
					num2 *= 1f;
					num3 *= 0f;
				}
				else if (this.type == 4)
				{
					num2 *= 0.1f;
					num *= 0.5f;
				}
				else if (this.type == 257)
				{
					num2 *= 0.9f;
					num *= 0.1f;
				}
				else if (this.type == 9)
				{
					num2 *= 0.1f;
					num3 *= 0.6f;
				}
				else if (this.type == 488)
				{
					num = 0.3f;
					num3 = 0.25f;
					num2 = 0f;
				}
				else if (this.type == 92)
				{
					num2 *= 0.6f;
					num *= 0.8f;
				}
				else if (this.type == 93)
				{
					num2 *= 1f;
					num *= 1f;
					num3 *= 0.01f;
				}
				else if (this.type == 12)
				{
					num *= 0.9f;
					num2 *= 0.8f;
					num3 *= 0.1f;
				}
				else if (this.type == 14 || this.type == 110 || this.type == 180 || this.type == 242 || this.type == 302)
				{
					num2 *= 0.7f;
					num3 *= 0.1f;
				}
				else if (this.type == 15)
				{
					num2 *= 0.4f;
					num3 *= 0.1f;
					num = 1f;
				}
				else if (this.type == 16)
				{
					num *= 0.1f;
					num2 *= 0.4f;
					num3 = 1f;
				}
				else if (this.type == 18)
				{
					num2 *= 0.1f;
					num *= 0.6f;
				}
				else if (this.type == 19)
				{
					num2 *= 0.5f;
					num3 *= 0.1f;
				}
				else if (this.type == 20)
				{
					num *= 0.1f;
					num3 *= 0.3f;
				}
				else if (this.type == 22)
				{
					num = 0f;
					num2 = 0f;
				}
				else if (this.type == 27)
				{
					num *= 0f;
					num2 *= 0.3f;
					num3 = 1f;
				}
				else if (this.type == 34)
				{
					num2 *= 0.1f;
					num3 *= 0.1f;
				}
				else if (this.type == 36)
				{
					num = 0.8f;
					num2 *= 0.2f;
					num3 *= 0.6f;
				}
				else if (this.type == 41)
				{
					num2 *= 0.8f;
					num3 *= 0.6f;
				}
				else if (this.type == 44 || this.type == 45)
				{
					num3 = 1f;
					num *= 0.6f;
					num2 *= 0.1f;
				}
				else if (this.type == 50)
				{
					num *= 0.7f;
					num3 *= 0.8f;
				}
				else if (this.type == 515)
				{
					num2 *= 0.6f;
					num3 *= 0.85f;
				}
				else if (this.type == 53)
				{
					num *= 0.7f;
					num2 *= 0.8f;
				}
				else if (this.type == 473)
				{
					num *= 1.05f;
					num2 *= 0.95f;
					num3 *= 0.55f;
				}
				else if (this.type == 72)
				{
					num *= 0.45f;
					num2 *= 0.75f;
					num3 = 1f;
				}
				else if (this.type == 86)
				{
					num *= 1f;
					num2 *= 0.45f;
					num3 = 0.75f;
				}
				else if (this.type == 87)
				{
					num *= 0.45f;
					num2 = 1f;
					num3 *= 0.75f;
				}
				else if (this.type == 73)
				{
					num *= 0.4f;
					num2 *= 0.6f;
					num3 *= 1f;
				}
				else if (this.type == 74)
				{
					num *= 1f;
					num2 *= 0.4f;
					num3 *= 0.6f;
				}
				else if (this.type == 284)
				{
					num *= 1f;
					num2 *= 0.1f;
					num3 *= 0.8f;
				}
				else if (this.type == 285)
				{
					num *= 0.1f;
					num2 *= 0.5f;
					num3 *= 1f;
				}
				else if (this.type == 286)
				{
					num *= 1f;
					num2 *= 0.5f;
					num3 *= 0.1f;
				}
				else if (this.type == 287)
				{
					num *= 0.9f;
					num2 *= 1f;
					num3 *= 0.4f;
				}
				else if (this.type == 283)
				{
					num *= 0.8f;
					num2 *= 0.1f;
				}
				else if (this.type == 76 || this.type == 77 || this.type == 78)
				{
					num *= 1f;
					num2 *= 0.3f;
					num3 *= 0.6f;
				}
				else if (this.type == 79)
				{
					num = (float)Main.DiscoR / 255f;
					num2 = (float)Main.DiscoG / 255f;
					num3 = (float)Main.DiscoB / 255f;
				}
				else if (this.type == 80)
				{
					num *= 0f;
					num2 *= 0.8f;
					num3 *= 1f;
				}
				else if (this.type == 83 || this.type == 88)
				{
					num *= 0.7f;
					num2 *= 0f;
					num3 *= 1f;
				}
				else if (this.type == 100)
				{
					num *= 1f;
					num2 *= 0.5f;
					num3 *= 0f;
				}
				else if (this.type == 84 || this.type == 389)
				{
					num *= 0.8f;
					num2 *= 0f;
					num3 *= 0.5f;
				}
				else if (this.type == 89 || this.type == 90)
				{
					num2 *= 0.2f;
					num3 *= 1f;
					num *= 0.05f;
				}
				else if (this.type == 106)
				{
					num *= 0f;
					num2 *= 0.5f;
					num3 *= 1f;
				}
				else if (this.type == 113)
				{
					num *= 0.25f;
					num2 *= 0.75f;
					num3 *= 1f;
				}
				else if (this.type == 114 || this.type == 115)
				{
					num *= 0.5f;
					num2 *= 0.05f;
					num3 *= 1f;
				}
				else if (this.type == 116)
				{
					num3 *= 0.25f;
				}
				else if (this.type == 131)
				{
					num *= 0.1f;
					num2 *= 0.4f;
				}
				else if (this.type == 132 || this.type == 157)
				{
					num *= 0.2f;
					num3 *= 0.6f;
				}
				else if (this.type == 156)
				{
					num *= 1f;
					num3 *= 0.6f;
					num2 = 0f;
				}
				else if (this.type == 173)
				{
					num *= 0.3f;
					num3 *= 1f;
					num2 = 0.4f;
				}
				else if (this.type == 207)
				{
					num *= 0.4f;
					num3 *= 0.4f;
				}
				else if (this.type == 253)
				{
					num = 0f;
					num2 *= 0.4f;
				}
				else if (this.type == 211)
				{
					num *= 0.5f;
					num2 *= 0.9f;
					num3 *= 1f;
					if (this.localAI[0] == 0f)
					{
						this.light = 1.5f;
					}
					else
					{
						this.light = 1f;
					}
				}
				else if (this.type == 209)
				{
					float num4 = (255f - (float)this.alpha) / 255f;
					num *= 0.3f;
					num2 *= 0.4f;
					num3 *= 1.75f;
					num3 *= num4;
					num *= num4;
					num2 *= num4;
				}
				else if (this.type == 226 || (this.type == 227 | this.type == 229))
				{
					num *= 0.25f;
					num2 *= 1f;
					num3 *= 0.5f;
				}
				else if (this.type == 251)
				{
					num = (float)Main.DiscoR / 255f;
					num2 = (float)Main.DiscoG / 255f;
					num3 = (float)Main.DiscoB / 255f;
					num = (num + 1f) / 2f;
					num2 = (num2 + 1f) / 2f;
					num3 = (num3 + 1f) / 2f;
					num *= this.light;
					num2 *= this.light;
					num3 *= this.light;
				}
				else if (this.type == 278 || this.type == 279)
				{
					num *= 1f;
					num2 *= 1f;
					num3 *= 0f;
				}
				Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), num, num2, num3);
			}
		}

		public Rectangle getRect()
		{
			return new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
		}

		public void Update(int i)
		{
			if (!this.active)
			{
				return;
			}
			this.numUpdates = this.extraUpdates;
			while (this.numUpdates >= 0)
			{
				this.numUpdates--;
				if (this.type == 640 && this.ai[1] > 0f)
				{
					this.ai[1] -= 1f;
				}
				else
				{
					if (this.position.X <= Main.leftWorld || this.position.X + (float)this.width >= Main.rightWorld || this.position.Y <= Main.topWorld || this.position.Y + (float)this.height >= Main.bottomWorld)
					{
						this.active = false;
						return;
					}
					if (this.type != 344 && !this.npcProj)
					{
						if (Main.player[this.owner].frostBurn && (this.melee || this.ranged) && this.friendly && !this.hostile && !this.noEnchantments && Main.rand.Next(2 * (1 + this.extraUpdates)) == 0)
						{
							int num = Dust.NewDust(this.position, this.width, this.height, 135, this.velocity.X * 0.2f + (float)(this.direction * 3), this.velocity.Y * 0.2f, 100, default(Color), 2f);
							Main.dust[num].noGravity = true;
							Main.dust[num].velocity *= 0.7f;
							Dust expr_1D3_cp_0 = Main.dust[num];
							expr_1D3_cp_0.velocity.Y = expr_1D3_cp_0.velocity.Y - 0.5f;
						}
						if (this.melee && Main.player[this.owner].meleeEnchant > 0 && !this.noEnchantments)
						{
							if (Main.player[this.owner].meleeEnchant == 1 && Main.rand.Next(3) == 0)
							{
								int num2 = Dust.NewDust(this.position, this.width, this.height, 171, 0f, 0f, 100, default(Color), 1f);
								Main.dust[num2].noGravity = true;
								Main.dust[num2].fadeIn = 1.5f;
								Main.dust[num2].velocity *= 0.25f;
							}
							if (Main.player[this.owner].meleeEnchant == 1)
							{
								if (Main.rand.Next(3) == 0)
								{
									int num3 = Dust.NewDust(this.position, this.width, this.height, 171, 0f, 0f, 100, default(Color), 1f);
									Main.dust[num3].noGravity = true;
									Main.dust[num3].fadeIn = 1.5f;
									Main.dust[num3].velocity *= 0.25f;
								}
							}
							else if (Main.player[this.owner].meleeEnchant == 2)
							{
								if (Main.rand.Next(2) == 0)
								{
									int num4 = Dust.NewDust(this.position, this.width, this.height, 75, this.velocity.X * 0.2f + (float)(this.direction * 3), this.velocity.Y * 0.2f, 100, default(Color), 2.5f);
									Main.dust[num4].noGravity = true;
									Main.dust[num4].velocity *= 0.7f;
									Dust expr_3F5_cp_0 = Main.dust[num4];
									expr_3F5_cp_0.velocity.Y = expr_3F5_cp_0.velocity.Y - 0.5f;
								}
							}
							else if (Main.player[this.owner].meleeEnchant == 3)
							{
								if (Main.rand.Next(2) == 0)
								{
									int num5 = Dust.NewDust(this.position, this.width, this.height, 6, this.velocity.X * 0.2f + (float)(this.direction * 3), this.velocity.Y * 0.2f, 100, default(Color), 2.5f);
									Main.dust[num5].noGravity = true;
									Main.dust[num5].velocity *= 0.7f;
									Dust expr_4C1_cp_0 = Main.dust[num5];
									expr_4C1_cp_0.velocity.Y = expr_4C1_cp_0.velocity.Y - 0.5f;
								}
							}
							else if (Main.player[this.owner].meleeEnchant == 4)
							{
								if (Main.rand.Next(2) == 0)
								{
									int num6 = Dust.NewDust(this.position, this.width, this.height, 57, this.velocity.X * 0.2f + (float)(this.direction * 3), this.velocity.Y * 0.2f, 100, default(Color), 1.1f);
									Main.dust[num6].noGravity = true;
									Dust expr_574_cp_0 = Main.dust[num6];
									expr_574_cp_0.velocity.X = expr_574_cp_0.velocity.X / 2f;
									Dust expr_592_cp_0 = Main.dust[num6];
									expr_592_cp_0.velocity.Y = expr_592_cp_0.velocity.Y / 2f;
								}
							}
							else if (Main.player[this.owner].meleeEnchant == 5)
							{
								if (Main.rand.Next(2) == 0)
								{
									int num7 = Dust.NewDust(this.position, this.width, this.height, 169, 0f, 0f, 100, default(Color), 1f);
									Dust expr_615_cp_0 = Main.dust[num7];
									expr_615_cp_0.velocity.X = expr_615_cp_0.velocity.X + (float)this.direction;
									Dust expr_635_cp_0 = Main.dust[num7];
									expr_635_cp_0.velocity.Y = expr_635_cp_0.velocity.Y + 0.2f;
									Main.dust[num7].noGravity = true;
								}
							}
							else if (Main.player[this.owner].meleeEnchant == 6)
							{
								if (Main.rand.Next(2) == 0)
								{
									int num8 = Dust.NewDust(this.position, this.width, this.height, 135, 0f, 0f, 100, default(Color), 1f);
									Dust expr_6C6_cp_0 = Main.dust[num8];
									expr_6C6_cp_0.velocity.X = expr_6C6_cp_0.velocity.X + (float)this.direction;
									Dust expr_6E6_cp_0 = Main.dust[num8];
									expr_6E6_cp_0.velocity.Y = expr_6E6_cp_0.velocity.Y + 0.2f;
									Main.dust[num8].noGravity = true;
								}
							}
							else if (Main.player[this.owner].meleeEnchant == 7)
							{
								Vector2 vector = this.velocity;
								if (vector.Length() > 4f)
								{
									vector *= 4f / vector.Length();
								}
								if (Main.rand.Next(20) == 0)
								{
									int num9 = Main.rand.Next(139, 143);
									int num10 = Dust.NewDust(this.position, this.width, this.height, num9, vector.X, vector.Y, 0, default(Color), 1.2f);
									Dust expr_7BA_cp_0 = Main.dust[num10];
									expr_7BA_cp_0.velocity.X = expr_7BA_cp_0.velocity.X * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
									Dust expr_7EE_cp_0 = Main.dust[num10];
									expr_7EE_cp_0.velocity.Y = expr_7EE_cp_0.velocity.Y * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
									Dust expr_822_cp_0 = Main.dust[num10];
									expr_822_cp_0.velocity.X = expr_822_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.05f;
									Dust expr_850_cp_0 = Main.dust[num10];
									expr_850_cp_0.velocity.Y = expr_850_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.05f;
									Main.dust[num10].scale *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
								}
								if (Main.rand.Next(40) == 0)
								{
									int num11 = Main.rand.Next(276, 283);
									int num12 = Gore.NewGore(this.position, vector, num11, 1f);
									Gore expr_8EA_cp_0 = Main.gore[num12];
									expr_8EA_cp_0.velocity.X = expr_8EA_cp_0.velocity.X * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
									Gore expr_91E_cp_0 = Main.gore[num12];
									expr_91E_cp_0.velocity.Y = expr_91E_cp_0.velocity.Y * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
									Main.gore[num12].scale *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
									Gore expr_981_cp_0 = Main.gore[num12];
									expr_981_cp_0.velocity.X = expr_981_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.05f;
									Gore expr_9AF_cp_0 = Main.gore[num12];
									expr_9AF_cp_0.velocity.Y = expr_9AF_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.05f;
								}
							}
							else if (Main.player[this.owner].meleeEnchant == 8 && Main.rand.Next(4) == 0)
							{
								int num13 = Dust.NewDust(this.position, this.width, this.height, 46, 0f, 0f, 100, default(Color), 1f);
								Main.dust[num13].noGravity = true;
								Main.dust[num13].fadeIn = 1.5f;
								Main.dust[num13].velocity *= 0.25f;
							}
						}
						if (this.melee && Main.player[this.owner].magmaStone && !this.noEnchantments && Main.rand.Next(3) != 0)
						{
							int num14 = Dust.NewDust(new Vector2(this.position.X - 4f, this.position.Y - 4f), this.width + 8, this.height + 8, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2f);
							if (Main.rand.Next(2) == 0)
							{
								Main.dust[num14].scale = 1.5f;
							}
							Main.dust[num14].noGravity = true;
							Dust expr_B54_cp_0 = Main.dust[num14];
							expr_B54_cp_0.velocity.X = expr_B54_cp_0.velocity.X * 2f;
							Dust expr_B72_cp_0 = Main.dust[num14];
							expr_B72_cp_0.velocity.Y = expr_B72_cp_0.velocity.Y * 2f;
						}
					}
					if (this.minion && this.numUpdates == -1 && this.type != 625 && this.type != 628)
					{
						this.minionPos = Main.player[this.owner].numMinions;
						if (Main.player[this.owner].slotsMinions + this.minionSlots > (float)Main.player[this.owner].maxMinions && this.owner == Main.myPlayer)
						{
							if (this.type == 627 || this.type == 626)
							{
								int byUUID = Projectile.GetByUUID(this.owner, this.ai[0]);
								if (byUUID != -1)
								{
									Projectile projectile = Main.projectile[byUUID];
									if (projectile.type != 625)
									{
										projectile.localAI[1] = this.localAI[1];
									}
									projectile = Main.projectile[(int)this.localAI[1]];
									projectile.ai[0] = this.ai[0];
									projectile.ai[1] = 1f;
									projectile.netUpdate = true;
								}
							}
							this.Kill();
						}
						else
						{
							Main.player[this.owner].numMinions++;
							Main.player[this.owner].slotsMinions += this.minionSlots;
						}
					}
					float num15 = 1f + Math.Abs(this.velocity.X) / 3f;
					if (this.gfxOffY > 0f)
					{
						this.gfxOffY -= num15 * this.stepSpeed;
						if (this.gfxOffY < 0f)
						{
							this.gfxOffY = 0f;
						}
					}
					else if (this.gfxOffY < 0f)
					{
						this.gfxOffY += num15 * this.stepSpeed;
						if (this.gfxOffY > 0f)
						{
							this.gfxOffY = 0f;
						}
					}
					if (this.gfxOffY > 16f)
					{
						this.gfxOffY = 16f;
					}
					if (this.gfxOffY < -16f)
					{
						this.gfxOffY = -16f;
					}
					Vector2 velocity = this.velocity;
					this.oldVelocity = this.velocity;
					this.whoAmI = i;
					if (this.soundDelay > 0)
					{
						this.soundDelay--;
					}
					this.netUpdate = false;
					for (int j = 0; j < 255; j++)
					{
						if (this.playerImmune[j] > 0)
						{
							this.playerImmune[j]--;
						}
					}
					if (this.updatedNPCImmunity)
					{
						for (int k = 0; k < 200; k++)
						{
							if (this.npcImmune[k] > 0)
							{
								this.npcImmune[k]--;
							}
						}
					}
					this.AI();
					if (this.owner < 255 && !Main.player[this.owner].active)
					{
						this.Kill();
					}
					if (this.type == 242 || this.type == 302 || this.type == 638)
					{
						this.wet = false;
					}
					if (!this.ignoreWater)
					{
						bool flag;
						bool flag2;
						try
						{
							flag = Collision.LavaCollision(this.position, this.width, this.height);
							flag2 = Collision.WetCollision(this.position, this.width, this.height);
							if (flag)
							{
								this.lavaWet = true;
							}
							if (Collision.honey)
							{
								this.honeyWet = true;
							}
						}
						catch
						{
							this.active = false;
							return;
						}
						if (this.wet && !this.lavaWet)
						{
							if (this.type == 85 || this.type == 15 || this.type == 34 || this.type == 188)
							{
								this.Kill();
							}
							if (this.type == 2)
							{
								this.type = 1;
								this.light = 0f;
							}
						}
						if (this.type == 80)
						{
							flag2 = false;
							this.wet = false;
							if (flag && this.ai[0] >= 0f)
							{
								this.Kill();
							}
						}
						if (flag2)
						{
							if (this.type != 155 && this.wetCount == 0 && !this.wet)
							{
								if (!flag)
								{
									if (this.honeyWet)
									{
										for (int l = 0; l < 10; l++)
										{
											int num16 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 152, 0f, 0f, 0, default(Color), 1f);
											Dust expr_105D_cp_0 = Main.dust[num16];
											expr_105D_cp_0.velocity.Y = expr_105D_cp_0.velocity.Y - 1f;
											Dust expr_107B_cp_0 = Main.dust[num16];
											expr_107B_cp_0.velocity.X = expr_107B_cp_0.velocity.X * 2.5f;
											Main.dust[num16].scale = 1.3f;
											Main.dust[num16].alpha = 100;
											Main.dust[num16].noGravity = true;
										}
										Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
									}
									else
									{
										for (int m = 0; m < 10; m++)
										{
											int num17 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, Dust.dustWater(), 0f, 0f, 0, default(Color), 1f);
											Dust expr_1166_cp_0 = Main.dust[num17];
											expr_1166_cp_0.velocity.Y = expr_1166_cp_0.velocity.Y - 4f;
											Dust expr_1184_cp_0 = Main.dust[num17];
											expr_1184_cp_0.velocity.X = expr_1184_cp_0.velocity.X * 2.5f;
											Main.dust[num17].scale = 1.3f;
											Main.dust[num17].alpha = 100;
											Main.dust[num17].noGravity = true;
										}
										Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
									}
								}
								else
								{
									for (int n = 0; n < 10; n++)
									{
										int num18 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 35, 0f, 0f, 0, default(Color), 1f);
										Dust expr_126C_cp_0 = Main.dust[num18];
										expr_126C_cp_0.velocity.Y = expr_126C_cp_0.velocity.Y - 1.5f;
										Dust expr_128A_cp_0 = Main.dust[num18];
										expr_128A_cp_0.velocity.X = expr_128A_cp_0.velocity.X * 2.5f;
										Main.dust[num18].scale = 1.3f;
										Main.dust[num18].alpha = 100;
										Main.dust[num18].noGravity = true;
									}
									Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
								}
							}
							this.wet = true;
						}
						else if (this.wet)
						{
							this.wet = false;
							if (this.type == 155)
							{
								this.velocity.Y = this.velocity.Y * 0.5f;
							}
							else if (this.wetCount == 0)
							{
								this.wetCount = 10;
								if (!this.lavaWet)
								{
									if (this.honeyWet)
									{
										for (int num19 = 0; num19 < 10; num19++)
										{
											int num20 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 152, 0f, 0f, 0, default(Color), 1f);
											Dust expr_13E0_cp_0 = Main.dust[num20];
											expr_13E0_cp_0.velocity.Y = expr_13E0_cp_0.velocity.Y - 1f;
											Dust expr_13FE_cp_0 = Main.dust[num20];
											expr_13FE_cp_0.velocity.X = expr_13FE_cp_0.velocity.X * 2.5f;
											Main.dust[num20].scale = 1.3f;
											Main.dust[num20].alpha = 100;
											Main.dust[num20].noGravity = true;
										}
										Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
									}
									else
									{
										for (int num21 = 0; num21 < 10; num21++)
										{
											int num22 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2)), this.width + 12, 24, Dust.dustWater(), 0f, 0f, 0, default(Color), 1f);
											Dust expr_14E3_cp_0 = Main.dust[num22];
											expr_14E3_cp_0.velocity.Y = expr_14E3_cp_0.velocity.Y - 4f;
											Dust expr_1501_cp_0 = Main.dust[num22];
											expr_1501_cp_0.velocity.X = expr_1501_cp_0.velocity.X * 2.5f;
											Main.dust[num22].scale = 1.3f;
											Main.dust[num22].alpha = 100;
											Main.dust[num22].noGravity = true;
										}
										Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
									}
								}
								else
								{
									for (int num23 = 0; num23 < 10; num23++)
									{
										int num24 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 35, 0f, 0f, 0, default(Color), 1f);
										Dust expr_15E9_cp_0 = Main.dust[num24];
										expr_15E9_cp_0.velocity.Y = expr_15E9_cp_0.velocity.Y - 1.5f;
										Dust expr_1607_cp_0 = Main.dust[num24];
										expr_1607_cp_0.velocity.X = expr_1607_cp_0.velocity.X * 2.5f;
										Main.dust[num24].scale = 1.3f;
										Main.dust[num24].alpha = 100;
										Main.dust[num24].noGravity = true;
									}
									Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
								}
							}
						}
						if (!this.wet)
						{
							this.lavaWet = false;
							this.honeyWet = false;
						}
						if (this.wetCount > 0)
						{
							this.wetCount -= 1;
						}
					}
					this.oldPosition = this.position;
					this.oldDirection = this.direction;
					int num25;
					int num26;
					this.HandleMovement(velocity, out num25, out num26);
					if ((this.aiStyle != 3 || this.ai[0] != 1f) && (this.aiStyle != 7 || this.ai[0] != 1f) && (this.aiStyle != 13 || this.ai[0] != 1f) && this.aiStyle != 65 && this.aiStyle != 69 && this.aiStyle != 114 && this.aiStyle != 123 && this.aiStyle != 112 && !this.manualDirectionChange && this.aiStyle != 67 && this.aiStyle != 26 && this.aiStyle != 15)
					{
						if (this.velocity.X < 0f)
						{
							this.direction = -1;
						}
						else
						{
							this.direction = 1;
						}
					}
					if (this.active)
					{
						this.ProjLight();
						if (!this.npcProj && this.friendly && Main.player[this.owner].magicQuiver && this.extraUpdates < 1 && this.arrow)
						{
							this.extraUpdates = 1;
						}
						if (this.type == 2 || this.type == 82)
						{
							Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1f);
						}
						else if (this.type == 172)
						{
							Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 135, 0f, 0f, 100, default(Color), 1f);
						}
						else if (this.type == 103)
						{
							int num27 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 75, 0f, 0f, 100, default(Color), 1f);
							if (Main.rand.Next(2) == 0)
							{
								Main.dust[num27].noGravity = true;
								Main.dust[num27].scale *= 2f;
							}
						}
						else if (this.type == 278)
						{
							int num28 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 169, 0f, 0f, 100, default(Color), 1f);
							if (Main.rand.Next(2) == 0)
							{
								Main.dust[num28].noGravity = true;
								Main.dust[num28].scale *= 1.5f;
							}
						}
						else if (this.type == 4)
						{
							if (Main.rand.Next(5) == 0)
							{
								Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 14, 0f, 0f, 150, default(Color), 1.1f);
							}
						}
						else if (this.type == 5)
						{
							int num29 = Main.rand.Next(3);
							if (num29 == 0)
							{
								num29 = 15;
							}
							else if (num29 == 1)
							{
								num29 = 57;
							}
							else
							{
								num29 = 58;
							}
							Dust.NewDust(this.position, this.width, this.height, num29, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 150, default(Color), 1.2f);
						}
						this.Damage();
						if (this.type == 434 && this.localAI[0] == 0f && this.numUpdates == 0)
						{
							this.extraUpdates = 1;
							this.velocity = Vector2.Zero;
							this.localAI[0] = 1f;
							this.localAI[1] = 0.9999f;
							this.netUpdate = true;
						}
						if (Main.netMode != 1 && (this.type == 99 || this.type == 444))
						{
							Collision.SwitchTiles(this.position, this.width, this.height, this.oldPosition, 3);
						}
						if (ProjectileID.Sets.TrailingMode[this.type] == 0)
						{
							for (int num30 = this.oldPos.Length - 1; num30 > 0; num30--)
							{
								this.oldPos[num30] = this.oldPos[num30 - 1];
							}
							this.oldPos[0] = this.position;
						}
						else if (ProjectileID.Sets.TrailingMode[this.type] == 1)
						{
							if (this.frameCounter == 0 || this.oldPos[0] == Vector2.Zero)
							{
								for (int num31 = this.oldPos.Length - 1; num31 > 0; num31--)
								{
									this.oldPos[num31] = this.oldPos[num31 - 1];
								}
								this.oldPos[0] = this.position;
								if (this.velocity == Vector2.Zero && this.type == 466)
								{
									float num32 = this.rotation + 1.57079637f + ((Main.rand.Next(2) == 1) ? -1f : 1f) * 1.57079637f;
									float num33 = (float)Main.rand.NextDouble() * 2f + 2f;
									Vector2 vector2 = new Vector2((float)Math.Cos((double)num32) * num33, (float)Math.Sin((double)num32) * num33);
									int num34 = Dust.NewDust(this.oldPos[this.oldPos.Length - 1], 0, 0, 229, vector2.X, vector2.Y, 0, default(Color), 1f);
									Main.dust[num34].noGravity = true;
									Main.dust[num34].scale = 1.7f;
								}
								if (this.velocity == Vector2.Zero && this.type == 580)
								{
									float num35 = this.rotation + 1.57079637f + ((Main.rand.Next(2) == 1) ? -1f : 1f) * 1.57079637f;
									float num36 = (float)Main.rand.NextDouble() * 2f + 2f;
									Vector2 vector3 = new Vector2((float)Math.Cos((double)num35) * num36, (float)Math.Sin((double)num35) * num36);
									int num37 = Dust.NewDust(this.oldPos[this.oldPos.Length - 1], 0, 0, 229, vector3.X, vector3.Y, 0, default(Color), 1f);
									Main.dust[num37].noGravity = true;
									Main.dust[num37].scale = 1.7f;
								}
							}
						}
						else if (ProjectileID.Sets.TrailingMode[this.type] == 2)
						{
							for (int num38 = this.oldPos.Length - 1; num38 > 0; num38--)
							{
								this.oldPos[num38] = this.oldPos[num38 - 1];
								this.oldRot[num38] = this.oldRot[num38 - 1];
								this.oldSpriteDirection[num38] = this.oldSpriteDirection[num38 - 1];
							}
							this.oldPos[0] = this.position;
							this.oldRot[0] = this.rotation;
							this.oldSpriteDirection[0] = this.spriteDirection;
						}
						this.timeLeft--;
						if (this.timeLeft <= 0)
						{
							this.Kill();
						}
						if (this.penetrate == 0)
						{
							this.Kill();
						}
						if (!this.active || this.owner != Main.myPlayer)
						{
							continue;
						}
						if (this.netUpdate2)
						{
							this.netUpdate = true;
						}
						if (!this.active)
						{
							this.netSpam = 0;
						}
						if (this.netUpdate)
						{
							if (this.netSpam < 60)
							{
								this.netSpam += 5;
								NetMessage.SendData(27, -1, -1, "", i, 0f, 0f, 0f, 0, 0, 0);
								this.netUpdate2 = false;
							}
							else
							{
								this.netUpdate2 = true;
							}
						}
						if (this.netSpam > 0)
						{
							this.netSpam--;
							continue;
						}
						continue;
					}
					return;
				}
			}
			this.netUpdate = false;
		}

		private void HandleMovement(Vector2 wetVelocity, out int overrideWidth, out int overrideHeight)
		{
			bool flag = false;
			overrideWidth = -1;
			overrideHeight = -1;
			bool flag2 = false;
			bool? flag3 = ProjectileID.Sets.ForcePlateDetection[this.type];
			bool flag4 = flag3.HasValue && !flag3.Value;
			bool flag5 = flag3.HasValue && flag3.Value;
			if (this.tileCollide)
			{
				Vector2 velocity = this.velocity;
				bool flag6 = true;
				if (Main.projPet[this.type])
				{
					flag6 = false;
					if (Main.player[this.owner].position.Y + (float)Main.player[this.owner].height - 12f > this.position.Y + (float)this.height)
					{
						flag6 = true;
					}
				}
				if (this.type == 500)
				{
					flag6 = false;
					if (Main.player[this.owner].Bottom.Y > base.Bottom.Y + 4f)
					{
						flag6 = true;
					}
				}
				if (this.type == 653)
				{
					flag6 = false;
					if (Main.player[this.owner].Bottom.Y > base.Bottom.Y + 4f)
					{
						flag6 = true;
					}
				}
				if (this.aiStyle == 62)
				{
					flag6 = true;
				}
				if (this.aiStyle == 66)
				{
					flag6 = true;
				}
				if (this.type == 317)
				{
					flag6 = true;
				}
				if (this.type == 373)
				{
					flag6 = true;
				}
				if (this.aiStyle == 53)
				{
					flag6 = false;
				}
				if (this.type == 9 || this.type == 12 || this.type == 15 || this.type == 13 || this.type == 31 || this.type == 39 || this.type == 40)
				{
					flag6 = false;
				}
				if (this.type == 24)
				{
					flag6 = false;
				}
				if (this.aiStyle == 29 || this.type == 28 || this.aiStyle == 49)
				{
					overrideWidth = this.width - 8;
					overrideHeight = this.height - 8;
				}
				else if (this.type == 250 || this.type == 267 || this.type == 297 || this.type == 323 || this.type == 3)
				{
					overrideWidth = 6;
					overrideHeight = 6;
				}
				else if (this.type == 308)
				{
					overrideWidth = 26;
					overrideHeight = this.height;
				}
				else if (this.type == 261 || this.type == 277)
				{
					overrideWidth = 26;
					overrideHeight = 26;
				}
				else if (this.type == 481 || this.type == 491 || this.type == 106 || this.type == 262 || this.type == 271 || this.type == 270 || this.type == 272 || this.type == 273 || this.type == 274 || this.type == 280 || this.type == 288 || this.type == 301 || this.type == 320 || this.type == 333 || this.type == 335 || this.type == 343 || this.type == 344 || this.type == 497 || this.type == 496 || this.type == 6 || this.type == 19 || this.type == 113 || this.type == 52 || this.type == 520 || this.type == 523 || this.type == 585 || this.type == 598 || this.type == 599 || this.type == 636)
				{
					overrideWidth = 10;
					overrideHeight = 10;
				}
				else if (this.type == 514)
				{
					overrideWidth = 4;
					overrideHeight = 4;
				}
				else if (this.type == 248 || this.type == 247 || this.type == 507 || this.type == 508)
				{
					overrideWidth = this.width - 12;
					overrideHeight = this.height - 12;
				}
				else if (this.aiStyle == 18 || this.type == 254)
				{
					overrideWidth = this.width - 36;
					overrideHeight = this.height - 36;
				}
				else if (this.type == 182 || this.type == 190 || this.type == 33 || this.type == 229 || this.type == 237 || this.type == 243)
				{
					overrideWidth = this.width - 20;
					overrideHeight = this.height - 20;
				}
				else if (this.aiStyle == 27)
				{
					overrideWidth = this.width - 12;
					overrideHeight = this.height - 12;
				}
				else if (this.type == 533 && this.ai[0] >= 6f)
				{
					overrideWidth = this.width + 6;
					overrideHeight = this.height + 6;
				}
				else if (this.type == 582 || this.type == 634 || this.type == 635)
				{
					overrideWidth = 8;
					overrideHeight = 8;
				}
				else if (this.type == 617)
				{
					overrideWidth = (int)(20f * this.scale);
					overrideHeight = (int)(20f * this.scale);
				}
				ProjectileLoader.TileCollideStyle(this, ref overrideWidth, ref overrideHeight, ref flag6);
				if (((this.type != 440 && this.type != 449 && this.type != 606) || this.ai[1] != 1f) && (this.type != 466 || this.localAI[1] != 1f) && (this.type != 580 || this.localAI[1] <= 0f) && (this.type != 640 || this.localAI[1] <= 0f))
				{
					if (this.aiStyle == 10)
					{
						if (this.type == 42 || this.type == 65 || this.type == 68 || this.type == 354 || (this.type == 31 && this.ai[0] == 2f))
						{
							//patch file: flag6
							this.velocity = Collision.TileCollision(this.position, this.velocity, this.width, this.height, flag6, flag6, 1);
						}
						else
						{
							this.velocity = Collision.AnyCollision(this.position, this.velocity, this.width, this.height, true);
						}
					}
					else
					{
						Vector2 vector = this.position;
						//patch file: overrideWidth, overrideHeight
						int num = (overrideWidth != -1) ? overrideWidth : this.width;
						int num2 = (overrideHeight != -1) ? overrideHeight : this.height;
						if (overrideHeight != -1 || overrideWidth != -1)
						{
							vector = new Vector2(this.position.X + (float)(this.width / 2) - (float)(num / 2), this.position.Y + (float)(this.height / 2) - (float)(num2 / 2));
						}
						if (this.wet)
						{
							if (this.honeyWet)
							{
								Vector2 velocity2 = this.velocity;
								this.velocity = Collision.TileCollision(vector, this.velocity, num, num2, flag6, flag6, 1);
								wetVelocity = this.velocity * 0.25f;
								if (this.velocity.X != velocity2.X)
								{
									wetVelocity.X = this.velocity.X;
								}
								if (this.velocity.Y != velocity2.Y)
								{
									wetVelocity.Y = this.velocity.Y;
								}
							}
							else
							{
								Vector2 velocity3 = this.velocity;
								this.velocity = Collision.TileCollision(vector, this.velocity, num, num2, flag6, flag6, 1);
								wetVelocity = this.velocity * 0.5f;
								if (this.velocity.X != velocity3.X)
								{
									wetVelocity.X = this.velocity.X;
								}
								if (this.velocity.Y != velocity3.Y)
								{
									wetVelocity.Y = this.velocity.Y;
								}
							}
						}
						else
						{
							int num3 = Math.Min(num, num2);
							if (num3 < 3)
							{
								num3 = 3;
							}
							if (num3 > 16)
							{
								num3 = 16;
							}
							if (this.velocity.Length() > (float)num3)
							{
								Vector2 vector2 = Collision.TileCollision(vector, this.velocity, num, num2, flag6, flag6, 1);
								float num4 = this.velocity.Length();
								float num5 = (float)num3;
								Vector2 value = Vector2.Normalize(this.velocity);
								if (vector2.Y == 0f)
								{
									value.Y = 0f;
								}
								Vector2 vector3 = Vector2.Zero;
								Vector2 arg_954_0 = Vector2.Zero;
								Vector2 value2 = Vector2.Zero;
								int num6 = 0;
								while (num4 > 0f)
								{
									num6++;
									if (num6 > 300)
									{
										break;
									}
									Vector2 vector4 = vector;
									float num7 = num4;
									if (num7 > num5)
									{
										num7 = num5;
									}
									num4 -= num7;
									Vector2 velocity4 = value * num7;
									Vector2 vector5 = Collision.TileCollision(vector, velocity4, num, num2, flag6, flag6, 1);
									vector += vector5;
									this.velocity = vector5;
									if (!Main.projPet[this.type])
									{
										Vector4 vector6 = Collision.SlopeCollision(vector, this.velocity, num, num2, 0f, true);
										Vector2 value3 = this.position - vector;
										if (vector.X != vector6.X)
										{
											flag = true;
										}
										if (vector.Y != vector6.Y)
										{
											flag = true;
										}
										if (this.velocity.X != vector6.Z)
										{
											flag = true;
										}
										if (this.velocity.Y != vector6.W)
										{
											flag = true;
										}
										vector.X = vector6.X;
										vector.Y = vector6.Y;
										value2 += vector + value3 - this.position;
										this.velocity.X = vector6.Z;
										this.velocity.Y = vector6.W;
									}
									flag2 = true;
									if (this.owner == Main.myPlayer && vector != vector4 && !flag4)
									{
										Collision.SwitchTiles(vector, num, num2, vector4, 4);
									}
									vector5 = this.velocity;
									vector3 += vector5;
								}
								this.velocity = vector3;
								if (Math.Abs(this.velocity.X - velocity.X) < 0.0001f)
								{
									this.velocity.X = velocity.X;
								}
								if (Math.Abs(this.velocity.Y - velocity.Y) < 0.0001f)
								{
									this.velocity.Y = velocity.Y;
								}
								if (!Main.projPet[this.type])
								{
									Vector4 vector7 = Collision.SlopeCollision(vector, this.velocity, num, num2, 0f, true);
									Vector2 value4 = this.position - vector;
									if (vector.X != vector7.X)
									{
										flag = true;
									}
									if (vector.Y != vector7.Y)
									{
										flag = true;
									}
									if (this.velocity.X != vector7.Z)
									{
										flag = true;
									}
									if (this.velocity.Y != vector7.W)
									{
										flag = true;
									}
									vector.X = vector7.X;
									vector.Y = vector7.Y;
									this.position = vector + value4;
									this.velocity.X = vector7.Z;
									this.velocity.Y = vector7.W;
								}
							}
							else
							{
								this.velocity = Collision.TileCollision(vector, this.velocity, num, num2, flag6, flag6, 1);
								if (!Main.projPet[this.type])
								{
									Vector4 vector8 = Collision.SlopeCollision(vector, this.velocity, num, num2, 0f, true);
									Vector2 value5 = this.position - vector;
									if (vector.X != vector8.X)
									{
										flag = true;
									}
									if (vector.Y != vector8.Y)
									{
										flag = true;
									}
									if (this.velocity.X != vector8.Z)
									{
										flag = true;
									}
									if (this.velocity.Y != vector8.W)
									{
										flag = true;
									}
									vector.X = vector8.X;
									vector.Y = vector8.Y;
									this.position = vector + value5;
									this.velocity.X = vector8.Z;
									this.velocity.Y = vector8.W;
								}
							}
						}
					}
				}
				if (velocity != this.velocity)
				{
					flag = true;
				}
				if (flag)
				{
					if (!ProjectileLoader.OnTileCollide(this, velocity))
					{
					}
					else if (this.type == 434)
					{
						this.position += this.velocity;
						this.numUpdates = 0;
					}
					else if (this.type == 601)
					{
						if (this.owner == Main.myPlayer)
						{
							PortalHelper.TryPlacingPortal(this, velocity, this.velocity);
						}
						this.position += this.velocity;
						this.Kill();
					}
					else if (this.type == 451)
					{
						this.ai[0] = 1f;
						this.ai[1] = 0f;
						this.netUpdate = true;
						this.velocity = velocity / 2f;
					}
					else if (this.type == 645)
					{
						this.ai[0] = 0f;
						this.ai[1] = -1f;
						this.netUpdate = true;
					}
					else if (this.type == 584)
					{
						bool flag7 = false;
						if (this.velocity.X != velocity.X)
						{
							this.velocity.X = velocity.X * -0.75f;
							flag7 = true;
						}
						if ((this.velocity.Y != velocity.Y && velocity.Y > 2f) || this.velocity.Y == 0f)
						{
							this.velocity.Y = velocity.Y * -0.75f;
							flag7 = true;
						}
						if (flag7)
						{
							float num8 = velocity.Length() / this.velocity.Length();
							if (num8 == 0f)
							{
								num8 = 1f;
							}
							this.velocity /= num8;
							this.penetrate--;
						}
					}
					else if (this.type == 532)
					{
						bool flag8 = false;
						if (this.velocity.X != velocity.X)
						{
							this.velocity.X = velocity.X * -0.75f;
							flag8 = true;
						}
						if ((this.velocity.Y != velocity.Y && velocity.Y > 2f) || this.velocity.Y == 0f)
						{
							this.velocity.Y = velocity.Y * -0.75f;
							flag8 = true;
						}
						if (flag8)
						{
							float num9 = velocity.Length() / this.velocity.Length();
							if (num9 == 0f)
							{
								num9 = 1f;
							}
							this.velocity /= num9;
							this.penetrate--;
							Collision.HitTiles(this.position, velocity, this.width, this.height);
						}
					}
					else if (this.type == 533)
					{
						float num10 = 1f;
						bool flag9 = false;
						if (this.velocity.X != velocity.X)
						{
							this.velocity.X = velocity.X * -num10;
							flag9 = true;
						}
						if (this.velocity.Y != velocity.Y || this.velocity.Y == 0f)
						{
							this.velocity.Y = velocity.Y * -num10 * 0.5f;
							flag9 = true;
						}
						if (flag9)
						{
							float num11 = velocity.Length() / this.velocity.Length();
							if (num11 == 0f)
							{
								num11 = 1f;
							}
							this.velocity /= num11;
							if (this.ai[0] == 7f && (double)this.velocity.Y < -0.1)
							{
								this.velocity.Y = this.velocity.Y + 0.1f;
							}
							if (this.ai[0] >= 6f && this.ai[0] < 9f)
							{
								Collision.HitTiles(this.position, velocity, this.width, this.height);
							}
						}
					}
					else if (this.type == 502)
					{
						this.ai[0] += 1f;
						Main.PlaySound(37, (int)this.position.X, (int)this.position.Y, 5 + (int)this.ai[0]);
						if (this.ai[0] >= 5f)
						{
							this.position += this.velocity;
							this.Kill();
						}
						else
						{
							if (this.velocity.Y != velocity.Y)
							{
								this.velocity.Y = -velocity.Y;
							}
							if (this.velocity.X != velocity.X)
							{
								this.velocity.X = -velocity.X;
							}
						}
						Vector2 spinningpoint = new Vector2(0f, -3f - this.ai[0]).RotatedByRandom(3.1415927410125732);
						float num12 = 10f + this.ai[0] * 4f;
						Vector2 value6 = new Vector2(1.05f, 1f);
						for (float num13 = 0f; num13 < num12; num13 += 1f)
						{
							int num14 = Dust.NewDust(base.Center, 0, 0, 66, 0f, 0f, 0, Color.Transparent, 1f);
							Main.dust[num14].position = base.Center;
							Main.dust[num14].velocity = spinningpoint.RotatedBy((double)(6.28318548f * num13 / num12), default(Vector2)) * value6 * (0.8f + Main.rand.NextFloat() * 0.4f);
							Main.dust[num14].color = Main.hslToRgb(num13 / num12, 1f, 0.5f);
							Main.dust[num14].noGravity = true;
							Main.dust[num14].scale = 1f + this.ai[0] / 3f;
						}
						if (Main.myPlayer == this.owner)
						{
							int width = this.width;
							int height = this.height;
							int num15 = this.penetrate;
							this.position = base.Center;
							this.width = (this.height = 40 + 8 * (int)this.ai[0]);
							base.Center = this.position;
							this.penetrate = -1;
							this.Damage();
							this.penetrate = num15;
							this.position = base.Center;
							this.width = width;
							this.height = height;
							base.Center = this.position;
						}
					}
					else if (this.type == 653)
					{
						if (this.velocity.Y != velocity.Y && this.velocity.Y == 0f && velocity.Y > 1f && velocity.Y < 4f)
						{
							this.velocity.Y = -velocity.Y * 2f;
						}
					}
					else if (this.type == 444)
					{
						if (this.velocity.X != velocity.X)
						{
							this.velocity.X = -velocity.X;
						}
						if (this.velocity.Y != velocity.Y)
						{
							this.velocity.Y = -velocity.Y;
						}
						this.ai[0] = this.velocity.ToRotation();
					}
					else if (this.type == 617)
					{
						if (this.velocity.X != velocity.X)
						{
							this.velocity.X = -velocity.X * 0.35f;
						}
						if (this.velocity.Y != velocity.Y)
						{
							this.velocity.Y = -velocity.Y * 0.35f;
						}
					}
					else if (this.type == 440 || this.type == 449 || this.type == 606)
					{
						if (this.ai[1] != 1f)
						{
							this.ai[1] = 1f;
							this.position += this.velocity;
							this.velocity = velocity;
						}
					}
					else if (this.type == 466 || this.type == 580 || this.type == 640)
					{
						if (this.localAI[1] < 1f)
						{
							this.localAI[1] += 2f;
							this.position += this.velocity;
							this.velocity = Vector2.Zero;
						}
					}
					else if (this.aiStyle == 54)
					{
						if (this.velocity.X != velocity.X)
						{
							this.velocity.X = velocity.X * -0.6f;
						}
						if (this.velocity.Y != velocity.Y)
						{
							this.velocity.Y = velocity.Y * -0.6f;
						}
					}
					else if (!Main.projPet[this.type] && this.type != 500 && this.type != 650)
					{
						if (this.aiStyle == 99)
						{
							if (this.type >= 556 && this.type <= 561)
							{
								bool flag10 = false;
								if (this.velocity.X != velocity.X)
								{
									flag10 = true;
									this.velocity.X = velocity.X * -1f;
								}
								if (this.velocity.Y != velocity.Y)
								{
									flag10 = true;
									this.velocity.Y = velocity.Y * -1f;
								}
								if (flag10)
								{
									Vector2 vector9 = Main.player[this.owner].Center - base.Center;
									vector9.Normalize();
									vector9 *= this.velocity.Length();
									vector9 *= 0.25f;
									this.velocity *= 0.75f;
									this.velocity += vector9;
									if (this.velocity.Length() > 6f)
									{
										this.velocity *= 0.5f;
									}
								}
							}
						}
						else if (this.type == 604)
						{
							if (this.velocity.X != velocity.X)
							{
								this.velocity.X = -velocity.X;
							}
							if (this.velocity.Y != velocity.Y)
							{
								this.velocity.Y = -velocity.Y;
							}
						}
						else if (this.type == 379)
						{
							if (this.velocity.X != velocity.X)
							{
								this.velocity.X = velocity.X * -0.6f;
							}
							if (this.velocity.Y != velocity.Y && velocity.Y > 2f)
							{
								this.velocity.Y = velocity.Y * -0.6f;
							}
						}
						else if (this.type == 491)
						{
							if (this.ai[0] <= 0f)
							{
								this.ai[0] = -10f;
							}
							if (this.velocity.X != velocity.X && Math.Abs(velocity.X) > 0f)
							{
								this.velocity.X = velocity.X * -1f;
							}
							if (this.velocity.Y != velocity.Y && Math.Abs(velocity.Y) > 0f)
							{
								this.velocity.Y = velocity.Y * -1f;
							}
						}
						else if ((this.type >= 515 && this.type <= 517) || this.type == 637)
						{
							if (this.velocity.X != velocity.X && Math.Abs(velocity.X) > 1f)
							{
								this.velocity.X = velocity.X * -0.9f;
							}
							if (this.velocity.Y != velocity.Y && Math.Abs(velocity.Y) > 1f)
							{
								this.velocity.Y = velocity.Y * -0.9f;
							}
						}
						else if (this.type == 409)
						{
							if (this.velocity.X != velocity.X)
							{
								this.velocity.X = velocity.X * -1f;
							}
							if (this.velocity.Y != velocity.Y)
							{
								this.velocity.Y = velocity.Y * -1f;
							}
						}
						else if (this.type == 254)
						{
							this.tileCollide = false;
							this.velocity = velocity;
							if (this.timeLeft > 30)
							{
								this.timeLeft = 30;
							}
						}
						else if (this.type == 225 && this.penetrate > 0)
						{
							this.velocity.X = -velocity.X;
							this.velocity.Y = -velocity.Y;
							this.penetrate--;
						}
						else if (this.type == 155)
						{
							if (this.ai[1] > 10f)
							{
								string text = string.Concat(new object[]
									{
										this.name,
										" was hit ",
										this.ai[1],
										" times before touching the ground!"
									});
								if (Main.netMode == 0)
								{
									Main.NewText(text, 255, 240, 20, false);
								}
								else if (Main.netMode == 2)
								{
									NetMessage.SendData(25, -1, -1, text, 255, 255f, 240f, 20f, 0, 0, 0);
								}
							}
							this.ai[1] = 0f;
							if (this.velocity.X != velocity.X)
							{
								this.velocity.X = velocity.X * -0.6f;
							}
							if (this.velocity.Y != velocity.Y && velocity.Y > 2f)
							{
								this.velocity.Y = velocity.Y * -0.6f;
							}
						}
						else if (this.aiStyle == 33)
						{
							if (this.localAI[0] == 0f)
							{
								if (this.wet)
								{
									this.position += velocity / 2f;
								}
								else
								{
									this.position += velocity;
								}
								this.velocity *= 0f;
								this.localAI[0] = 1f;
							}
						}
						else if (this.type != 308)
						{
							if (this.type == 477)
							{
								if (this.velocity.Y != velocity.Y || this.velocity.X != velocity.X)
								{
									this.penetrate--;
									if (this.penetrate <= 0)
									{
										this.Kill();
									}
									if (this.velocity.X != velocity.X)
									{
										this.velocity.X = -velocity.X;
									}
									if (this.velocity.Y != velocity.Y)
									{
										this.velocity.Y = -velocity.Y;
									}
								}
								if (this.penetrate > 0 && this.owner == Main.myPlayer)
								{
									int[] array = new int[10];
									int num16 = 0;
									int num17 = 700;
									int num18 = 20;
									for (int i = 0; i < 200; i++)
									{
										if (Main.npc[i].CanBeChasedBy(this, false))
										{
											float num19 = (base.Center - Main.npc[i].Center).Length();
											if (num19 > (float)num18 && num19 < (float)num17 && Collision.CanHitLine(base.Center, 1, 1, Main.npc[i].Center, 1, 1))
											{
												array[num16] = i;
												num16++;
												if (num16 >= 9)
												{
													break;
												}
											}
										}
									}
									if (num16 > 0)
									{
										num16 = Main.rand.Next(num16);
										Vector2 value7 = Main.npc[array[num16]].Center - base.Center;
										float scaleFactor = this.velocity.Length();
										value7.Normalize();
										this.velocity = value7 * scaleFactor;
										this.netUpdate = true;
									}
								}
							}
							else if (this.type == 94)
							{
								if (this.velocity.X != velocity.X)
								{
									this.velocity.X = -velocity.X;
								}
								if (this.velocity.Y != velocity.Y)
								{
									this.velocity.Y = -velocity.Y;
								}
							}
							else if (this.type == 496)
							{
								if (this.velocity.X != velocity.X)
								{
									if (Math.Abs(this.velocity.X) < 1f)
									{
										this.velocity.X = -velocity.X;
									}
									else
									{
										this.Kill();
									}
								}
								if (this.velocity.Y != velocity.Y)
								{
									if (Math.Abs(this.velocity.Y) < 1f)
									{
										this.velocity.Y = -velocity.Y;
									}
									else
									{
										this.Kill();
									}
								}
							}
							else if (this.type == 311)
							{
								if (this.velocity.X != velocity.X)
								{
									this.velocity.X = -velocity.X;
									this.ai[1] += 1f;
								}
								if (this.velocity.Y != velocity.Y)
								{
									this.velocity.Y = -velocity.Y;
									this.ai[1] += 1f;
								}
								if (this.ai[1] > 4f)
								{
									this.Kill();
								}
							}
							else if (this.type == 312)
							{
								if (this.velocity.X != velocity.X)
								{
									this.velocity.X = -velocity.X;
									this.ai[1] += 1f;
								}
								if (this.velocity.Y != velocity.Y)
								{
									this.velocity.Y = -velocity.Y;
									this.ai[1] += 1f;
								}
							}
							else if (this.type == 522 || this.type == 620)
							{
								if (this.velocity.X != velocity.X)
								{
									this.velocity.X = -velocity.X;
								}
								if (this.velocity.Y != velocity.Y)
								{
									this.velocity.Y = -velocity.Y;
								}
							}
							else if (this.type == 524)
							{
								this.ai[0] += 100f;
								if (this.velocity.X != velocity.X)
								{
									this.velocity.X = -velocity.X;
								}
								if (this.velocity.Y != velocity.Y)
								{
									this.velocity.Y = -velocity.Y;
								}
							}
							else if (this.aiStyle == 93)
							{
								if (this.velocity != velocity)
								{
									this.ai[1] = 0f;
									this.ai[0] = 1f;
									this.netUpdate = true;
									this.tileCollide = false;
									this.position += this.velocity;
									this.velocity = velocity;
									this.velocity.Normalize();
									this.velocity *= 3f;
								}
							}
							else if (this.type == 281)
							{
								float num20 = Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y);
								if (num20 < 2f || this.ai[1] == 2f)
								{
									this.ai[1] = 2f;
								}
								else
								{
									if (this.velocity.X != velocity.X)
									{
										this.velocity.X = -velocity.X * 0.5f;
									}
									if (this.velocity.Y != velocity.Y)
									{
										this.velocity.Y = -velocity.Y * 0.5f;
									}
								}
							}
							else if (this.type == 290 || this.type == 294)
							{
								if (this.velocity.X != velocity.X)
								{
									this.position.X = this.position.X + this.velocity.X;
									this.velocity.X = -velocity.X;
								}
								if (this.velocity.Y != velocity.Y)
								{
									this.position.Y = this.position.Y + this.velocity.Y;
									this.velocity.Y = -velocity.Y;
								}
							}
							else if ((this.type == 181 || this.type == 189 || this.type == 357 || this.type == 566) && this.penetrate > 0)
							{
								if (this.type == 357)
								{
									this.damage = (int)((double)this.damage * 0.9);
								}
								this.penetrate--;
								if (this.velocity.X != velocity.X)
								{
									this.velocity.X = -velocity.X;
								}
								if (this.velocity.Y != velocity.Y)
								{
									this.velocity.Y = -velocity.Y;
								}
							}
							else if (this.type == 307 && this.ai[1] < 5f)
							{
								this.ai[1] += 1f;
								if (this.velocity.X != velocity.X)
								{
									this.velocity.X = -velocity.X;
								}
								if (this.velocity.Y != velocity.Y)
								{
									this.velocity.Y = -velocity.Y;
								}
							}
							else if (this.type == 99)
							{
								if (this.velocity.Y != velocity.Y && velocity.Y > 5f)
								{
									Collision.HitTiles(this.position, this.velocity, this.width, this.height);
									Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
									this.velocity.Y = -velocity.Y * 0.2f;
								}
								if (this.velocity.X != velocity.X)
								{
									this.Kill();
								}
							}
							else if (this.type == 444)
							{
								if (this.velocity.Y != velocity.Y && velocity.Y > 5f)
								{
									Collision.HitTiles(this.position, this.velocity, this.width, this.height);
									Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
									this.velocity.Y = -velocity.Y * 0.2f;
								}
								if (this.velocity.X != velocity.X)
								{
									this.Kill();
								}
							}
							else if (this.type == 36)
							{
								if (this.penetrate > 1)
								{
									Collision.HitTiles(this.position, this.velocity, this.width, this.height);
									Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
									this.penetrate--;
									if (this.velocity.X != velocity.X)
									{
										this.velocity.X = -velocity.X;
									}
									if (this.velocity.Y != velocity.Y)
									{
										this.velocity.Y = -velocity.Y;
									}
								}
								else
								{
									this.Kill();
								}
							}
							else if (this.aiStyle == 21)
							{
								if (this.velocity.X != velocity.X)
								{
									this.velocity.X = -velocity.X;
								}
								if (this.velocity.Y != velocity.Y)
								{
									this.velocity.Y = -velocity.Y;
								}
							}
							else if (this.aiStyle == 17)
							{
								if (this.velocity.X != velocity.X)
								{
									this.velocity.X = velocity.X * -0.75f;
								}
								if (this.velocity.Y != velocity.Y && (double)velocity.Y > 1.5)
								{
									this.velocity.Y = velocity.Y * -0.7f;
								}
							}
							else if (this.aiStyle == 15)
							{
								bool flag11 = false;
								if (velocity.X != this.velocity.X)
								{
									if (Math.Abs(velocity.X) > 4f)
									{
										flag11 = true;
									}
									this.position.X = this.position.X + this.velocity.X;
									this.velocity.X = -velocity.X * 0.2f;
								}
								if (velocity.Y != this.velocity.Y)
								{
									if (Math.Abs(velocity.Y) > 4f)
									{
										flag11 = true;
									}
									this.position.Y = this.position.Y + this.velocity.Y;
									this.velocity.Y = -velocity.Y * 0.2f;
								}
								this.ai[0] = 1f;
								if (flag11)
								{
									this.netUpdate = true;
									Collision.HitTiles(this.position, this.velocity, this.width, this.height);
									Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
								}
								if (this.wet)
								{
									wetVelocity = this.velocity;
								}
							}
							else if (this.aiStyle == 39)
							{
								Collision.HitTiles(this.position, this.velocity, this.width, this.height);
								if (this.type == 33 || this.type == 106)
								{
									if (this.velocity.X != velocity.X)
									{
										this.velocity.X = -velocity.X;
									}
									if (this.velocity.Y != velocity.Y)
									{
										this.velocity.Y = -velocity.Y;
									}
								}
								else
								{
									this.ai[0] = 1f;
									if (this.aiStyle == 3)
									{
										this.velocity.X = -velocity.X;
										this.velocity.Y = -velocity.Y;
									}
								}
								this.netUpdate = true;
								Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
							}
							else if (this.aiStyle == 3 || this.aiStyle == 13 || this.aiStyle == 69 || this.aiStyle == 109)
							{
								Collision.HitTiles(this.position, this.velocity, this.width, this.height);
								if (this.type == 33 || this.type == 106)
								{
									if (this.velocity.X != velocity.X)
									{
										this.velocity.X = -velocity.X;
									}
									if (this.velocity.Y != velocity.Y)
									{
										this.velocity.Y = -velocity.Y;
									}
								}
								else
								{
									this.ai[0] = 1f;
									if ((this.aiStyle == 3 || this.aiStyle == 109) && this.type != 383)
									{
										this.velocity.X = -velocity.X;
										this.velocity.Y = -velocity.Y;
									}
								}
								this.netUpdate = true;
								Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
							}
							else if (this.aiStyle == 8 && this.type != 96)
							{
								Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
								this.ai[0] += 1f;
								if ((this.ai[0] >= 5f && this.type != 253) || (this.type == 253 && this.ai[0] >= 8f))
								{
									this.position += this.velocity;
									this.Kill();
								}
								else
								{
									if (this.type == 15 && this.velocity.Y > 4f)
									{
										if (this.velocity.Y != velocity.Y)
										{
											this.velocity.Y = -velocity.Y * 0.8f;
										}
									}
									else if (this.velocity.Y != velocity.Y)
									{
										this.velocity.Y = -velocity.Y;
									}
									if (this.velocity.X != velocity.X)
									{
										this.velocity.X = -velocity.X;
									}
								}
							}
							else if (this.aiStyle == 61)
							{
								if (this.velocity.X != velocity.X)
								{
									this.velocity.X = velocity.X * -0.3f;
								}
								if (this.velocity.Y != velocity.Y && velocity.Y > 1f)
								{
									this.velocity.Y = velocity.Y * -0.3f;
								}
							}
							else if (this.aiStyle == 14)
							{
								if (this.type == 261 && ((this.velocity.X != velocity.X && (velocity.X < -3f || velocity.X > 3f)) || (this.velocity.Y != velocity.Y && (velocity.Y < -3f || velocity.Y > 3f))))
								{
									Collision.HitTiles(this.position, this.velocity, this.width, this.height);
									Main.PlaySound(0, (int)base.Center.X, (int)base.Center.Y, 1);
								}
								if (this.type >= 326 && this.type <= 328 && this.velocity.X != velocity.X)
								{
									this.velocity.X = velocity.X * -0.1f;
								}
								if (this.type >= 400 && this.type <= 402)
								{
									if (this.velocity.X != velocity.X)
									{
										this.velocity.X = velocity.X * -0.1f;
									}
								}
								else if (this.type == 50)
								{
									if (this.velocity.X != velocity.X)
									{
										this.velocity.X = velocity.X * -0.2f;
									}
									if (this.velocity.Y != velocity.Y && (double)velocity.Y > 1.5)
									{
										this.velocity.Y = velocity.Y * -0.2f;
									}
								}
								else if (this.type == 185)
								{
									if (this.velocity.X != velocity.X)
									{
										this.velocity.X = velocity.X * -0.9f;
									}
									if (this.velocity.Y != velocity.Y && velocity.Y > 1f)
									{
										this.velocity.Y = velocity.Y * -0.9f;
									}
								}
								else if (this.type == 277)
								{
									if (this.velocity.X != velocity.X)
									{
										this.velocity.X = velocity.X * -0.9f;
									}
									if (this.velocity.Y != velocity.Y && velocity.Y > 3f)
									{
										this.velocity.Y = velocity.Y * -0.9f;
									}
								}
								else if (this.type != 480)
								{
									if (this.type == 450)
									{
										if (this.velocity.X != velocity.X)
										{
											this.velocity.X = velocity.X * -0.1f;
										}
									}
									else
									{
										if (this.velocity.X != velocity.X)
										{
											this.velocity.X = velocity.X * -0.5f;
										}
										if (this.velocity.Y != velocity.Y && velocity.Y > 1f)
										{
											this.velocity.Y = velocity.Y * -0.5f;
										}
									}
								}
							}
							else if (this.aiStyle == 16)
							{
								if (this.velocity.X != velocity.X)
								{
									this.velocity.X = velocity.X * -0.4f;
									if (this.type == 29)
									{
										this.velocity.X = this.velocity.X * 0.8f;
									}
								}
								if (this.velocity.Y != velocity.Y && (double)velocity.Y > 0.7 && this.type != 102)
								{
									this.velocity.Y = velocity.Y * -0.4f;
									if (this.type == 29)
									{
										this.velocity.Y = this.velocity.Y * 0.8f;
									}
								}
								if (this.type == 134 || this.type == 137 || this.type == 140 || this.type == 143 || this.type == 303 || (this.type >= 338 && this.type <= 341))
								{
									this.velocity *= 0f;
									this.alpha = 255;
									this.timeLeft = 3;
								}
							}
							else if (this.aiStyle == 68)
							{
								this.velocity *= 0f;
								this.alpha = 255;
								this.timeLeft = 3;
							}
							else if (this.aiStyle != 9 || this.owner == Main.myPlayer)
							{
								this.position += this.velocity;
								this.Kill();
							}
						}
					}
				}
			}
			this.UpdatePosition(wetVelocity);
			if (!flag2 && !flag4 && this.owner == Main.myPlayer && (this.tileCollide || flag5) && this.position != this.oldPosition)
			{
				Vector2 position = this.position;
				Vector2 oldPosition = this.oldPosition;
				int num21 = (overrideWidth != -1) ? overrideWidth : this.width;
				int num22 = (overrideHeight != -1) ? overrideHeight : this.height;
				if (overrideHeight != -1 || overrideWidth != -1)
				{
					position = new Vector2(this.position.X + (float)(this.width / 2) - (float)(num21 / 2), this.position.Y + (float)(this.height / 2) - (float)(num22 / 2));
					oldPosition = new Vector2(this.oldPosition.X + (float)(this.width / 2) - (float)(num21 / 2), this.oldPosition.Y + (float)(this.height / 2) - (float)(num22 / 2));
				}
				Collision.SwitchTiles(position, num21, num22, oldPosition, 4);
			}
		}

		private void UpdatePosition(Vector2 wetVelocity)
		{
			if (this.aiStyle != 4 && this.aiStyle != 38)
			{
				if (this.aiStyle == 84)
				{
					return;
				}
				if (this.aiStyle == 7 && this.ai[0] == 2f)
				{
					return;
				}
				if ((this.type == 440 || this.type == 449 || this.type == 606) && this.ai[1] == 1f)
				{
					return;
				}
				if (this.aiStyle == 93 && this.ai[0] < 0f)
				{
					return;
				}
				if (this.type == 540)
				{
					return;
				}
				if (!ProjectileLoader.ShouldUpdatePosition(this))
				{
					return;
				}
				if (this.wet)
				{
					this.position += wetVelocity;
				}
				else
				{
					this.position += this.velocity;
				}
				if (Main.projPet[this.type] && this.tileCollide)
				{
					Vector4 vector = Collision.SlopeCollision(this.position, this.velocity, this.width, this.height, 0f, false);
					this.position.X = vector.X;
					this.position.Y = vector.Y;
					this.velocity.X = vector.Z;
					this.velocity.Y = vector.W;
				}
			}
		}

		public void FishingCheck()
		{
			int num = (int)(base.Center.X / 16f);
			int num2 = (int)(base.Center.Y / 16f);
			if (Main.tile[num, num2].liquid < 0)
			{
				num2++;
			}
			bool flag = false;
			bool flag2 = false;
			int num3 = num;
			int num4 = num;
			while (num3 > 10 && Main.tile[num3, num2].liquid > 0)
			{
				if (WorldGen.SolidTile(num3, num2))
				{
					break;
				}
				num3--;
			}
			while (num4 < Main.maxTilesX - 10 && Main.tile[num4, num2].liquid > 0 && !WorldGen.SolidTile(num4, num2))
			{
				num4++;
			}
			int num5 = 0;
			for (int i = num3; i <= num4; i++)
			{
				int num6 = num2;
				while (Main.tile[i, num6].liquid > 0 && !WorldGen.SolidTile(i, num6) && num6 < Main.maxTilesY - 10)
				{
					num5++;
					num6++;
					//patch file: flag, num5
					if (Main.tile[i, num6].lava())
					{
						flag = true;
					}
					else if (Main.tile[i, num6].honey())
					{
						//patch file: flag2
						flag2 = true;
					}
				}
			}
			if (flag2)
			{
				num5 = (int)((double)num5 * 1.5);
			}
			if (num5 < 75)
			{
				Main.player[this.owner].displayedFishingInfo = "Not Enough Water!";
				return;
			}
			//patch file: num7
			int num7 = Main.player[this.owner].FishingLevel();
			if (num7 == 0)
			{
				return;
			}
			Main.player[this.owner].displayedFishingInfo = num7 + " Fishing Power";
			if (num7 < 0)
			{
				if (num7 == -1)
				{
					Main.player[this.owner].displayedFishingInfo = "Warning!";
					if ((num < 380 || num > Main.maxTilesX - 380) && num5 > 1000 && !NPC.AnyNPCs(370))
					{
						this.ai[1] = (float)(Main.rand.Next(-180, -60) - 100);
						this.localAI[1] = (float)num7;
						this.netUpdate = true;
					}
				}
				return;
			}
			int num8 = 300;
			float num9 = (float)(Main.maxTilesX / 4200);
			num9 *= num9;
			float num10 = (float)((double)(this.position.Y / 16f - (60f + 10f * num9)) / (Main.worldSurface / 6.0));
			if ((double)num10 < 0.25)
			{
				num10 = 0.25f;
			}
			if (num10 > 1f)
			{
				num10 = 1f;
			}
			num8 = (int)((float)num8 * num10);
			float num11 = (float)num5 / (float)num8;
			if (num11 < 1f)
			{
				num7 = (int)((float)num7 * num11);
			}
			num11 = 1f - num11;
			if (num5 < num8)
			{
				Main.player[this.owner].displayedFishingInfo = string.Concat(new object[]
					{
						num7,
						" (",
						-Math.Round((double)(num11 * 100f)),
						"%) Fishing Power"
					});
			}
			int num12 = (num7 + 75) / 2;
			if (Main.player[this.owner].wet)
			{
				return;
			}
			if (Main.rand.Next(100) > num12)
			{
				return;
			}
			int num13 = 0;
			int num14;
			if ((double)num2 < Main.worldSurface * 0.5)
			{
				num14 = 0;
			}
			else if ((double)num2 < Main.worldSurface)
			{
				//patch file: num14
				num14 = 1;
			}
			else if ((double)num2 < Main.rockLayer)
			{
				num14 = 2;
			}
			else if (num2 < Main.maxTilesY - 300)
			{
				num14 = 3;
			}
			else
			{
				num14 = 4;
			}
			int num15 = 150;
			int num16 = num15 / num7;
			int num17 = num15 * 2 / num7;
			int num18 = num15 * 7 / num7;
			int num19 = num15 * 15 / num7;
			int num20 = num15 * 30 / num7;
			if (num16 < 2)
			{
				num16 = 2;
			}
			if (num17 < 3)
			{
				num17 = 3;
			}
			if (num18 < 4)
			{
				num18 = 4;
			}
			if (num19 < 5)
			{
				num19 = 5;
			}
			if (num20 < 6)
			{
				num20 = 6;
			}
			bool flag3 = false;
			bool flag4 = false;
			bool flag5 = false;
			bool flag6 = false;
			bool flag7 = false;
			if (Main.rand.Next(num16) == 0)
			{
				flag3 = true;
			}
			if (Main.rand.Next(num17) == 0)
			{
				flag4 = true;
			}
			if (Main.rand.Next(num18) == 0)
			{
				flag5 = true;
			}
			if (Main.rand.Next(num19) == 0)
			{
				flag6 = true;
			}
			if (Main.rand.Next(num20) == 0)
			{
				flag7 = true;
			}
			int num21 = 10;
			if (Main.player[this.owner].cratePotion)
			{
				num21 += 10;
			}
			int num22 = Main.anglerQuestItemNetIDs[Main.anglerQuest];
			//patch file: num22
			if (Main.player[this.owner].HasItem(num22))
			{
				num22 = -1;
			}
			if (Main.anglerQuestFinished)
			{
				num22 = -1;
			}
			bool junk = false;
			if (flag)
			{
				if (Main.player[this.owner].inventory[Main.player[this.owner].selectedItem].type != 2422)
				{
					return;
				}
				if (flag7)
				{
					num13 = 2331;
				}
				else if (flag6)
				{
					num13 = 2312;
				}
				else if (flag5)
				{
					num13 = 2315;
				}
			}
			else if (flag2)
			{
				if (flag5 || (flag4 && Main.rand.Next(2) == 0))
				{
					num13 = 2314;
				}
				else if (flag4 && num22 == 2451)
				{
					num13 = 2451;
				}
			}
			else if (Main.rand.Next(50) > num7 && Main.rand.Next(50) > num7 && num5 < num8)
			{
				num13 = Main.rand.Next(2337, 2340);
				junk = true;
			}
			else if (Main.rand.Next(100) < num21)
			{
				if (flag6 || flag7)
				{
					num13 = 2336;
				}
				else if (flag5 && Main.player[this.owner].ZoneCorrupt)
				{
					num13 = 3203;
				}
				else if (flag5 && Main.player[this.owner].ZoneCrimson)
				{
					num13 = 3204;
				}
				else if (flag5 && Main.player[this.owner].ZoneHoly)
				{
					num13 = 3207;
				}
				else if (flag5 && Main.player[this.owner].ZoneDungeon)
				{
					num13 = 3205;
				}
				else if (flag5 && Main.player[this.owner].ZoneJungle)
				{
					num13 = 3208;
				}
				else if (flag5 && num14 == 0)
				{
					num13 = 3206;
				}
				else if (flag4)
				{
					num13 = 2335;
				}
				else
				{
					num13 = 2334;
				}
			}
			else if (flag7 && Main.rand.Next(5) == 0)
			{
				num13 = 2423;
			}
			else if (flag7 && Main.rand.Next(5) == 0)
			{
				num13 = 3225;
			}
			else if (flag7 && Main.rand.Next(10) == 0)
			{
				num13 = 2420;
			}
			else if (!flag7 && !flag6 && flag4 && Main.rand.Next(5) == 0)
			{
				num13 = 3196;
			}
			else
			{
				bool flag8 = Main.player[this.owner].ZoneCorrupt;
				bool flag9 = Main.player[this.owner].ZoneCrimson;
				if (flag8 && flag9)
				{
					if (Main.rand.Next(2) == 0)
					{
						flag9 = false;
					}
					else
					{
						flag8 = false;
					}
				}
				if (flag8)
				{
					if (flag7 && Main.hardMode && Main.player[this.owner].ZoneSnow && num14 == 3 && Main.rand.Next(3) != 0)
					{
						num13 = 2429;
					}
					else if (flag7 && Main.hardMode && Main.rand.Next(2) == 0)
					{
						num13 = 3210;
					}
					else if (flag5)
					{
						num13 = 2330;
					}
					else if (flag4 && num22 == 2454)
					{
						num13 = 2454;
					}
					else if (flag4 && num22 == 2485)
					{
						num13 = 2485;
					}
					else if (flag4 && num22 == 2457)
					{
						num13 = 2457;
					}
					else if (flag4)
					{
						num13 = 2318;
					}
				}
				else if (flag9)
				{
					if (flag7 && Main.hardMode && Main.player[this.owner].ZoneSnow && num14 == 3 && Main.rand.Next(3) != 0)
					{
						num13 = 2429;
					}
					else if (flag7 && Main.hardMode && Main.rand.Next(2) == 0)
					{
						num13 = 3211;
					}
					else if (flag4 && num22 == 2477)
					{
						num13 = 2477;
					}
					else if (flag4 && num22 == 2463)
					{
						num13 = 2463;
					}
					else if (flag4)
					{
						num13 = 2319;
					}
					else if (flag3)
					{
						num13 = 2305;
					}
				}
				else if (Main.player[this.owner].ZoneHoly)
				{
					if (flag7 && Main.hardMode && Main.player[this.owner].ZoneSnow && num14 == 3 && Main.rand.Next(3) != 0)
					{
						num13 = 2429;
					}
					else if (flag7 && Main.hardMode && Main.rand.Next(2) == 0)
					{
						num13 = 3209;
					}
					else if (num14 > 1 && flag6)
					{
						num13 = 2317;
					}
					else if (num14 > 1 && flag5 && num22 == 2465)
					{
						num13 = 2465;
					}
					else if (num14 < 2 && flag5 && num22 == 2468)
					{
						num13 = 2468;
					}
					else if (flag5)
					{
						num13 = 2310;
					}
					else if (flag4 && num22 == 2471)
					{
						num13 = 2471;
					}
					else if (flag4)
					{
						num13 = 2307;
					}
				}
				if (num13 == 0 && Main.player[this.owner].ZoneSnow)
				{
					if (num14 < 2 && flag4 && num22 == 2467)
					{
						num13 = 2467;
					}
					else if (num14 == 1 && flag4 && num22 == 2470)
					{
						num13 = 2470;
					}
					else if (num14 >= 2 && flag4 && num22 == 2484)
					{
						num13 = 2484;
					}
					else if (num14 > 1 && flag4 && num22 == 2466)
					{
						num13 = 2466;
					}
					else if ((flag3 && Main.rand.Next(12) == 0) || (flag4 && Main.rand.Next(6) == 0))
					{
						num13 = 3197;
					}
					else if (flag4)
					{
						num13 = 2306;
					}
					else if (flag3)
					{
						num13 = 2299;
					}
					else if (num14 > 1 && Main.rand.Next(3) == 0)
					{
						num13 = 2309;
					}
				}
				if (num13 == 0 && Main.player[this.owner].ZoneJungle)
				{
					if (num14 == 1 && flag4 && num22 == 2452)
					{
						num13 = 2452;
					}
					else if (num14 == 1 && flag4 && num22 == 2483)
					{
						num13 = 2483;
					}
					else if (num14 == 1 && flag4 && num22 == 2488)
					{
						num13 = 2488;
					}
					else if (num14 >= 1 && flag4 && num22 == 2486)
					{
						num13 = 2486;
					}
					else if (num14 > 1 && flag4)
					{
						num13 = 2311;
					}
					else if (flag4)
					{
						num13 = 2313;
					}
					else if (flag3)
					{
						num13 = 2302;
					}
				}
				if (num13 == 0 && Main.shroomTiles > 200 && flag4 && num22 == 2475)
				{
					num13 = 2475;
				}
				if (num13 == 0)
				{
					if (num14 <= 1 && (num < 380 || num > Main.maxTilesX - 380) && num5 > 1000)
					{
						if (flag6 && Main.rand.Next(2) == 0)
						{
							num13 = 2341;
						}
						else if (flag6)
						{
							num13 = 2342;
						}
						else if (flag5 && Main.rand.Next(5) == 0)
						{
							num13 = 2438;
						}
						else if (flag5 && Main.rand.Next(2) == 0)
						{
							num13 = 2332;
						}
						else if (flag4 && num22 == 2480)
						{
							num13 = 2480;
						}
						else if (flag4 && num22 == 2481)
						{
							num13 = 2481;
						}
						else if (flag4)
						{
							num13 = 2316;
						}
						else if (flag3 && Main.rand.Next(2) == 0)
						{
							num13 = 2301;
						}
						else if (flag3)
						{
							num13 = 2300;
						}
						else
						{
							num13 = 2297;
						}
					}
					else
					{
						int arg_C94_0 = Main.sandTiles;
					}
				}
				if (num13 == 0)
				{
					if (num14 < 2 && flag4 && num22 == 2461)
					{
						num13 = 2461;
					}
					else if (num14 == 0 && flag4 && num22 == 2453)
					{
						num13 = 2453;
					}
					else if (num14 == 0 && flag4 && num22 == 2473)
					{
						num13 = 2473;
					}
					else if (num14 == 0 && flag4 && num22 == 2476)
					{
						num13 = 2476;
					}
					else if (num14 < 2 && flag4 && num22 == 2458)
					{
						num13 = 2458;
					}
					else if (num14 < 2 && flag4 && num22 == 2459)
					{
						num13 = 2459;
					}
					else if (num14 == 0 && flag4)
					{
						num13 = 2304;
					}
					else if (num14 > 0 && num14 < 3 && flag4 && num22 == 2455)
					{
						num13 = 2455;
					}
					else if (num14 == 1 && flag4 && num22 == 2479)
					{
						num13 = 2479;
					}
					else if (num14 == 1 && flag4 && num22 == 2456)
					{
						num13 = 2456;
					}
					else if (num14 == 1 && flag4 && num22 == 2474)
					{
						num13 = 2474;
					}
					else if (num14 > 1 && flag5 && Main.rand.Next(5) == 0)
					{
						if (Main.hardMode && Main.rand.Next(2) == 0)
						{
							num13 = 2437;
						}
						else
						{
							num13 = 2436;
						}
					}
					else if (num14 > 1 && flag7)
					{
						num13 = 2308;
					}
					else if (num14 > 1 && flag6 && Main.rand.Next(2) == 0)
					{
						num13 = 2320;
					}
					else if (num14 > 1 && flag5)
					{
						num13 = 2321;
					}
					else if (num14 > 1 && flag4 && num22 == 2478)
					{
						num13 = 2478;
					}
					else if (num14 > 1 && flag4 && num22 == 2450)
					{
						num13 = 2450;
					}
					else if (num14 > 1 && flag4 && num22 == 2464)
					{
						num13 = 2464;
					}
					else if (num14 > 1 && flag4 && num22 == 2469)
					{
						num13 = 2469;
					}
					else if (num14 > 2 && flag4 && num22 == 2462)
					{
						num13 = 2462;
					}
					else if (num14 > 2 && flag4 && num22 == 2482)
					{
						num13 = 2482;
					}
					else if (num14 > 2 && flag4 && num22 == 2472)
					{
						num13 = 2472;
					}
					else if (num14 > 2 && flag4 && num22 == 2460)
					{
						num13 = 2460;
					}
					else if (num14 > 1 && flag4 && Main.rand.Next(4) != 0)
					{
						num13 = 2303;
					}
					else if (num14 > 1 && (flag4 || flag3 || Main.rand.Next(4) == 0))
					{
						if (Main.rand.Next(4) == 0)
						{
							num13 = 2303;
						}
						else
						{
							num13 = 2309;
						}
					}
					else if (flag4 && num22 == 2487)
					{
						num13 = 2487;
					}
					else if (num5 > 1000 && flag3)
					{
						num13 = 2298;
					}
					else
					{
						num13 = 2290;
					}
				}
			}
			PlayerHooks.CatchFish(Main.player[this.owner], Main.player[this.owner].inventory[Main.player[this.owner].selectedItem],
				num7, (flag ? 1 : (flag2 ? 2 : 0)), num5, num14, num22, ref num13, ref junk);
			if (num13 > 0)
			{
				if (Main.player[this.owner].sonarPotion)
				{
					Item item = new Item();
					item.SetDefaults(num13, false);
					item.position = this.position;
					ItemText.NewText(item, 1, true, false);
				}
				float num23 = (float)num7;
				this.ai[1] = (float)Main.rand.Next(-240, -90) - num23;
				this.localAI[1] = (float)num13;
				this.netUpdate = true;
			}
		}

		public bool CanReflect()
		{
			return this.active && this.friendly && !this.hostile && this.damage > 0 && (this.aiStyle == 1 || this.aiStyle == 2 || this.aiStyle == 8 || this.aiStyle == 21 || this.aiStyle == 24 || this.aiStyle == 28 || this.aiStyle == 29);
		}

		public float GetPrismHue(float indexing)
		{
			string name;
			if (Main.player[this.owner].active && (name = Main.player[this.owner].name) != null)
			{
				switch (name)
				{
					case "Tsuki":
					case "Yoraiz0r":
						return 0.85f;
					case "Ghostar":
						return 0.33f;
					case "Devalaous":
						return 0.66f + (float)Math.Cos(Main.time / 180.0 * 6.2831854820251465) * 0.1f;
					case "Leinfors":
						return 0.77f;
					case "Aeroblop":
						return 0.25f + (float)Math.Cos(Main.time / 180.0 * 6.2831854820251465) * 0.1f;
					case "Doylee":
						return 0f;
					case "Darkhalis":
					case "Arkhalis":
						return 0.75f + (float)Math.Cos(Main.time / 180.0 * 6.2831854820251465) * 0.07f;
					case "Nike Leon":
						return 0.075f + (float)Math.Cos(Main.time / 180.0 * 6.2831854820251465) * 0.07f;
					case "Suweeka":
						return 0.5f + (float)Math.Cos(Main.time / 180.0 * 6.2831854820251465) * 0.18f;
					case "W1K":
						return 0.75f + (float)Math.Cos(Main.time / 120.0 * 6.2831854820251465) * 0.05f;
					case "Grox The Great":
						return 0.31f + (float)Math.Cos(Main.time / 120.0 * 6.2831854820251465) * 0.03f;
					case "Random":
						return Main.rand.NextFloat();
					case "bluemagic123":
						return 0.55f + (float)Math.Cos(Main.time / 120.0 * 6.2831854820251465) * 0.1f;
				}
			}
			return (float)((int)indexing) / 6f;
		}

		public static int GetByUUID(int owner, float uuid)
		{
			return Projectile.GetByUUID(owner, (int)uuid);
		}

		public static int GetByUUID(int owner, int uuid)
		{
			if (uuid < 0 || uuid >= 1000 || owner < 0 || owner >= 255)
			{
				return -1;
			}
			int num = Main.projectileIdentity[owner, uuid];
			if (num >= 0 && Main.projectile[num].active)
			{
				return num;
			}
			return -1;
		}

		public void ProjectileFixDesperation()
		{
			if (this.owner < 0 || this.owner >= 1000)
			{
				return;
			}
			int num = this.type;
			if (num != 461 && num != 632)
			{
				switch (num)
				{
					case 642:
					case 644:
						break;
					case 643:
						return;
					default:
						return;
				}
			}
			for (int i = 0; i < 1000; i++)
			{
				if (Main.projectile[i].owner == this.owner && (float)Main.projectile[i].identity == this.ai[1] && Main.projectile[i].active)
				{
					this.ai[1] = (float)i;
					return;
				}
			}
		}

		public void AI()
		{
			ProjectileLoader.ProjectileAI(this);
		}

		public void VanillaAI()
		{
			if (this.aiStyle == 1)
			{
				this.AI_001();
				return;
			}
			if (this.aiStyle == 2)
			{
				if (this.type == 93 && Main.rand.Next(5) == 0)
				{
					int num = Dust.NewDust(this.position, this.width, this.height, 57, this.velocity.X * 0.2f + (float)(this.direction * 3), this.velocity.Y * 0.2f, 100, default(Color), 0.3f);
					Dust expr_A0_cp_0 = Main.dust[num];
					expr_A0_cp_0.velocity.X = expr_A0_cp_0.velocity.X * 0.3f;
					Dust expr_BD_cp_0 = Main.dust[num];
					expr_BD_cp_0.velocity.Y = expr_BD_cp_0.velocity.Y * 0.3f;
				}
				if (this.type == 304 && this.localAI[0] == 0f)
				{
					this.localAI[0] += 1f;
					this.alpha = 0;
				}
				if (this.type == 335)
				{
					this.frame = (int)this.ai[1];
				}
				if (this.type == 510)
				{
					this.rotation += Math.Abs(this.velocity.X) * 0.04f * (float)this.direction;
				}
				else
				{
					this.rotation += (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) * 0.03f * (float)this.direction;
				}
				if (this.type == 162)
				{
					if (this.ai[1] == 0f)
					{
						this.ai[1] = 1f;
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
					}
					this.ai[0] += 1f;
					if (this.ai[0] >= 18f)
					{
						this.velocity.Y = this.velocity.Y + 0.28f;
						this.velocity.X = this.velocity.X * 0.99f;
					}
					if (this.ai[0] > 2f)
					{
						this.alpha = 0;
						if (this.ai[0] == 3f)
						{
							for (int i = 0; i < 10; i++)
							{
								int num2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
								Main.dust[num2].velocity *= 0.5f;
								Main.dust[num2].velocity += this.velocity * 0.1f;
							}
							for (int j = 0; j < 5; j++)
							{
								int num3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2f);
								Main.dust[num3].noGravity = true;
								Main.dust[num3].velocity *= 3f;
								Main.dust[num3].velocity += this.velocity * 0.2f;
								num3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1f);
								Main.dust[num3].velocity *= 2f;
								Main.dust[num3].velocity += this.velocity * 0.3f;
							}
							for (int k = 0; k < 1; k++)
							{
								int num4 = Gore.NewGore(new Vector2(this.position.X - 10f, this.position.Y - 10f), default(Vector2), Main.rand.Next(61, 64), 1f);
								Main.gore[num4].position += this.velocity * 1.25f;
								Main.gore[num4].scale = 1.5f;
								Main.gore[num4].velocity += this.velocity * 0.5f;
								Main.gore[num4].velocity *= 0.02f;
							}
						}
					}
				}
				else if (this.type == 281)
				{
					if (this.ai[1] == 0f)
					{
						this.ai[1] = 1f;
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
					}
					this.ai[0] += 1f;
					if (this.ai[0] >= 18f)
					{
						this.velocity.Y = this.velocity.Y + 0.28f;
						this.velocity.X = this.velocity.X * 0.99f;
					}
					if (this.ai[0] > 2f)
					{
						this.alpha = 0;
						if (this.ai[0] == 3f)
						{
							for (int l = 0; l < 10; l++)
							{
								int num5 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
								Main.dust[num5].velocity *= 0.5f;
								Main.dust[num5].velocity += this.velocity * 0.1f;
							}
							for (int m = 0; m < 5; m++)
							{
								int num6 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2f);
								Main.dust[num6].noGravity = true;
								Main.dust[num6].velocity *= 3f;
								Main.dust[num6].velocity += this.velocity * 0.2f;
								num6 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1f);
								Main.dust[num6].velocity *= 2f;
								Main.dust[num6].velocity += this.velocity * 0.3f;
							}
							for (int n = 0; n < 1; n++)
							{
								int num7 = Gore.NewGore(new Vector2(this.position.X - 10f, this.position.Y - 10f), default(Vector2), Main.rand.Next(61, 64), 1f);
								Main.gore[num7].position += this.velocity * 1.25f;
								Main.gore[num7].scale = 1.5f;
								Main.gore[num7].velocity += this.velocity * 0.5f;
								Main.gore[num7].velocity *= 0.02f;
							}
						}
					}
				}
				else if (this.type == 240)
				{
					if (this.ai[1] == 0f)
					{
						this.ai[1] = 1f;
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
					}
					this.ai[0] += 1f;
					if (this.ai[0] >= 16f)
					{
						this.velocity.Y = this.velocity.Y + 0.18f;
						this.velocity.X = this.velocity.X * 0.991f;
					}
					if (this.ai[0] > 2f)
					{
						this.alpha = 0;
						if (this.ai[0] == 3f)
						{
							for (int num8 = 0; num8 < 7; num8++)
							{
								int num9 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
								Main.dust[num9].velocity *= 0.5f;
								Main.dust[num9].velocity += this.velocity * 0.1f;
							}
							for (int num10 = 0; num10 < 3; num10++)
							{
								int num11 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2f);
								Main.dust[num11].noGravity = true;
								Main.dust[num11].velocity *= 3f;
								Main.dust[num11].velocity += this.velocity * 0.2f;
								num11 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1f);
								Main.dust[num11].velocity *= 2f;
								Main.dust[num11].velocity += this.velocity * 0.3f;
							}
							for (int num12 = 0; num12 < 1; num12++)
							{
								int num13 = Gore.NewGore(new Vector2(this.position.X - 10f, this.position.Y - 10f), default(Vector2), Main.rand.Next(61, 64), 1f);
								Main.gore[num13].position += this.velocity * 1.25f;
								Main.gore[num13].scale = 1.25f;
								Main.gore[num13].velocity += this.velocity * 0.5f;
								Main.gore[num13].velocity *= 0.02f;
							}
						}
					}
				}
				else if (this.type == 497)
				{
					int num14 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, this.velocity.X, this.velocity.Y, 100, default(Color), 1.2f);
					Main.dust[num14].position = (Main.dust[num14].position + base.Center) / 2f;
					Main.dust[num14].noGravity = true;
					Main.dust[num14].velocity *= 0.3f;
					Main.dust[num14].velocity -= this.velocity * 0.1f;
					this.ai[0] += 1f;
					if (this.ai[0] >= 30f)
					{
						this.velocity.X = this.velocity.X * 0.99f;
						this.velocity.Y = this.velocity.Y + 0.5f;
					}
					else
					{
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
					}
				}
				else if (this.type == 249)
				{
					this.ai[0] += 1f;
					if (this.ai[0] >= 0f)
					{
						this.velocity.Y = this.velocity.Y + 0.25f;
					}
				}
				else if (this.type == 347)
				{
					this.ai[0] += 1f;
					if (this.ai[0] >= 5f)
					{
						this.velocity.Y = this.velocity.Y + 0.25f;
					}
				}
				else if (this.type == 501)
				{
					this.ai[0] += 1f;
					if (this.ai[0] >= 18f)
					{
						this.velocity.X = this.velocity.X * 0.995f;
						this.velocity.Y = this.velocity.Y + 0.2f;
					}
				}
				else if (this.type == 504)
				{
					this.alpha = 255;
					this.ai[0] += 1f;
					if (this.ai[0] > 3f)
					{
						int num15 = 100;
						if (this.ai[0] > 20f)
						{
							int num16 = 40;
							float num17 = this.ai[0] - 20f;
							num15 = (int)(100f * (1f - num17 / (float)num16));
							if (num17 >= (float)num16)
							{
								this.Kill();
							}
						}
						if (this.ai[0] <= 10f)
						{
							num15 = (int)this.ai[0] * 10;
						}
						if (Main.rand.Next(100) < num15)
						{
							int num18 = Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 150, default(Color), 1f);
							Main.dust[num18].position = (Main.dust[num18].position + base.Center) / 2f;
							Main.dust[num18].noGravity = true;
							Main.dust[num18].velocity *= 2f;
							Main.dust[num18].scale *= 1.2f;
							Main.dust[num18].velocity += this.velocity;
						}
					}
					if (this.ai[0] >= 20f)
					{
						this.velocity.X = this.velocity.X * 0.99f;
						this.velocity.Y = this.velocity.Y + 0.1f;
					}
				}
				else if (this.type == 69 || this.type == 70 || this.type == 621)
				{
					this.ai[0] += 1f;
					if (this.ai[0] >= 10f)
					{
						this.velocity.Y = this.velocity.Y + 0.25f;
						this.velocity.X = this.velocity.X * 0.99f;
					}
				}
				else if (this.type == 166)
				{
					this.ai[0] += 1f;
					if (this.ai[0] >= 20f)
					{
						this.velocity.Y = this.velocity.Y + 0.3f;
						this.velocity.X = this.velocity.X * 0.98f;
					}
				}
				else if (this.type == 300)
				{
					if (this.ai[0] == 0f)
					{
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 1);
					}
					this.ai[0] += 1f;
					if (this.ai[0] >= 60f)
					{
						this.velocity.Y = this.velocity.Y + 0.2f;
						this.velocity.X = this.velocity.X * 0.99f;
					}
				}
				else if (this.type == 306)
				{
					if (this.alpha <= 200)
					{
						for (int num19 = 0; num19 < 4; num19++)
						{
							float num20 = this.velocity.X / 4f * (float)num19;
							float num21 = this.velocity.Y / 4f * (float)num19;
							int num22 = Dust.NewDust(this.position, this.width, this.height, 184, 0f, 0f, 0, default(Color), 1f);
							Main.dust[num22].position.X = base.Center.X - num20;
							Main.dust[num22].position.Y = base.Center.Y - num21;
							Main.dust[num22].velocity *= 0f;
							Main.dust[num22].scale = 0.7f;
						}
					}
					this.alpha -= 50;
					if (this.alpha < 0)
					{
						this.alpha = 0;
					}
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 0.785f;
				}
				else if (this.type == 304)
				{
					this.ai[0] += 1f;
					if (this.ai[0] >= 30f)
					{
						this.alpha += 10;
						this.damage = (int)((double)this.damage * 0.9);
						this.knockBack = (float)((int)((double)this.knockBack * 0.9));
						if (this.alpha >= 255)
						{
							this.active = false;
						}
					}
					if (this.ai[0] < 30f)
					{
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
					}
				}
				else if (this.type == 370 || this.type == 371)
				{
					this.ai[0] += 1f;
					if (this.ai[0] >= 15f)
					{
						this.velocity.Y = this.velocity.Y + 0.3f;
						this.velocity.X = this.velocity.X * 0.98f;
					}
				}
				else
				{
					this.ai[0] += 1f;
					if (this.ai[0] >= 20f)
					{
						this.velocity.Y = this.velocity.Y + 0.4f;
						this.velocity.X = this.velocity.X * 0.97f;
					}
					else if (this.type == 48 || this.type == 54 || this.type == 93 || this.type == 520 || this.type == 599)
					{
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
					}
				}
				if (this.velocity.Y > 16f)
				{
					this.velocity.Y = 16f;
				}
				if (this.type == 54 && Main.rand.Next(20) == 0)
				{
					Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 40, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 0, default(Color), 0.75f);
					return;
				}
			}
			else if (this.aiStyle == 3)
			{
				if (this.soundDelay == 0 && this.type != 383)
				{
					this.soundDelay = 8;
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 7);
				}
				if (this.type == 19)
				{
					for (int num23 = 0; num23 < 2; num23++)
					{
						int num24 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2f);
						Main.dust[num24].noGravity = true;
						Dust expr_178D_cp_0 = Main.dust[num24];
						expr_178D_cp_0.velocity.X = expr_178D_cp_0.velocity.X * 0.3f;
						Dust expr_17AB_cp_0 = Main.dust[num24];
						expr_17AB_cp_0.velocity.Y = expr_17AB_cp_0.velocity.Y * 0.3f;
					}
				}
				else if (this.type == 33)
				{
					if (Main.rand.Next(1) == 0)
					{
						int num25 = Dust.NewDust(this.position, this.width, this.height, 40, this.velocity.X * 0.25f, this.velocity.Y * 0.25f, 0, default(Color), 1.4f);
						Main.dust[num25].noGravity = true;
					}
				}
				else if (this.type == 320)
				{
					if (Main.rand.Next(3) == 0)
					{
						int num26 = Dust.NewDust(this.position, this.width, this.height, 5, this.velocity.X * 0.25f, this.velocity.Y * 0.25f, 0, default(Color), 1.1f);
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num26].scale = 0.9f;
							Main.dust[num26].velocity *= 0.2f;
						}
						else
						{
							Main.dust[num26].noGravity = true;
						}
					}
				}
				else if (this.type == 6)
				{
					if (Main.rand.Next(5) == 0)
					{
						int num27 = Main.rand.Next(3);
						if (num27 == 0)
						{
							num27 = 15;
						}
						else if (num27 == 1)
						{
							num27 = 57;
						}
						else
						{
							num27 = 58;
						}
						Dust.NewDust(this.position, this.width, this.height, num27, this.velocity.X * 0.25f, this.velocity.Y * 0.25f, 150, default(Color), 0.7f);
					}
				}
				else if (this.type == 113 && Main.rand.Next(1) == 0)
				{
					int num28 = Dust.NewDust(this.position, this.width, this.height, 76, this.velocity.X * 0.15f, this.velocity.Y * 0.15f, 0, default(Color), 1.1f);
					Main.dust[num28].noGravity = true;
					Dust.NewDust(this.position, this.width, this.height, 15, this.velocity.X * 0.05f, this.velocity.Y * 0.05f, 150, default(Color), 0.6f);
				}
				if (this.ai[0] == 0f)
				{
					this.ai[1] += 1f;
					if (this.type == 106 && this.ai[1] >= 45f)
					{
						this.ai[0] = 1f;
						this.ai[1] = 0f;
						this.netUpdate = true;
					}
					if (this.type == 320 || this.type == 383)
					{
						if (this.ai[1] >= 10f)
						{
							this.velocity.Y = this.velocity.Y + 0.5f;
							if (this.type == 383 && this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y + 0.35f;
							}
							this.velocity.X = this.velocity.X * 0.95f;
							if (this.velocity.Y > 16f)
							{
								this.velocity.Y = 16f;
							}
							if (this.type == 383 && Vector2.Distance(base.Center, Main.player[this.owner].Center) > 800f)
							{
								this.ai[0] = 1f;
							}
						}
					}
					else if (this.type == 182)
					{
						if (Main.rand.Next(2) == 0)
						{
							int num29 = Dust.NewDust(this.position, this.width, this.height, 57, 0f, 0f, 255, default(Color), 0.75f);
							Main.dust[num29].velocity *= 0.1f;
							Main.dust[num29].noGravity = true;
						}
						if (this.velocity.X > 0f)
						{
							this.spriteDirection = 1;
						}
						else if (this.velocity.X < 0f)
						{
							this.spriteDirection = -1;
						}
						float num30 = this.position.X;
						float num31 = this.position.Y;
						bool flag = false;
						if (this.ai[1] > 10f)
						{
							for (int num32 = 0; num32 < 200; num32++)
							{
								if (Main.npc[num32].CanBeChasedBy(this, false))
								{
									float num33 = Main.npc[num32].position.X + (float)(Main.npc[num32].width / 2);
									float num34 = Main.npc[num32].position.Y + (float)(Main.npc[num32].height / 2);
									float num35 = Math.Abs(this.position.X + (float)(this.width / 2) - num33) + Math.Abs(this.position.Y + (float)(this.height / 2) - num34);
									if (num35 < 800f && Collision.CanHit(new Vector2(this.position.X + (float)(this.width / 2), this.position.Y + (float)(this.height / 2)), 1, 1, Main.npc[num32].position, Main.npc[num32].width, Main.npc[num32].height))
									{
										num30 = num33;
										num31 = num34;
										flag = true;
									}
								}
							}
						}
						if (!flag)
						{
							num30 = this.position.X + (float)(this.width / 2) + this.velocity.X * 100f;
							num31 = this.position.Y + (float)(this.height / 2) + this.velocity.Y * 100f;
							if (this.ai[1] >= 30f)
							{
								this.ai[0] = 1f;
								this.ai[1] = 0f;
								this.netUpdate = true;
							}
						}
						float num36 = 12f;
						float num37 = 0.25f;
						Vector2 vector = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num38 = num30 - vector.X;
						float num39 = num31 - vector.Y;
						float num40 = (float)Math.Sqrt((double)(num38 * num38 + num39 * num39));
						num40 = num36 / num40;
						num38 *= num40;
						num39 *= num40;
						if (this.velocity.X < num38)
						{
							this.velocity.X = this.velocity.X + num37;
							if (this.velocity.X < 0f && num38 > 0f)
							{
								this.velocity.X = this.velocity.X + num37 * 2f;
							}
						}
						else if (this.velocity.X > num38)
						{
							this.velocity.X = this.velocity.X - num37;
							if (this.velocity.X > 0f && num38 < 0f)
							{
								this.velocity.X = this.velocity.X - num37 * 2f;
							}
						}
						if (this.velocity.Y < num39)
						{
							this.velocity.Y = this.velocity.Y + num37;
							if (this.velocity.Y < 0f && num39 > 0f)
							{
								this.velocity.Y = this.velocity.Y + num37 * 2f;
							}
						}
						else if (this.velocity.Y > num39)
						{
							this.velocity.Y = this.velocity.Y - num37;
							if (this.velocity.Y > 0f && num39 < 0f)
							{
								this.velocity.Y = this.velocity.Y - num37 * 2f;
							}
						}
					}
					else if (this.type == 301)
					{
						if (this.ai[1] >= 20f)
						{
							this.ai[0] = 1f;
							this.ai[1] = 0f;
							this.netUpdate = true;
						}
					}
					else if (this.ai[1] >= 30f)
					{
						this.ai[0] = 1f;
						this.ai[1] = 0f;
						this.netUpdate = true;
					}
				}
				else
				{
					this.tileCollide = false;
					float num41 = 9f;
					float num42 = 0.4f;
					if (this.type == 19)
					{
						num41 = 13f;
						num42 = 0.6f;
					}
					else if (this.type == 33)
					{
						num41 = 15f;
						num42 = 0.8f;
					}
					else if (this.type == 182)
					{
						num41 = 16f;
						num42 = 1.2f;
					}
					else if (this.type == 106)
					{
						num41 = 16f;
						num42 = 1.2f;
					}
					else if (this.type == 272)
					{
						num41 = 15f;
						num42 = 1f;
					}
					else if (this.type == 333)
					{
						num41 = 12f;
						num42 = 0.6f;
					}
					else if (this.type == 301)
					{
						num41 = 15f;
						num42 = 3f;
					}
					else if (this.type == 320)
					{
						num41 = 15f;
						num42 = 3f;
					}
					else if (this.type == 383)
					{
						num41 = 16f;
						num42 = 4f;
					}
					Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num43 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector2.X;
					float num44 = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - vector2.Y;
					float num45 = (float)Math.Sqrt((double)(num43 * num43 + num44 * num44));
					if (num45 > 3000f)
					{
						this.Kill();
					}
					num45 = num41 / num45;
					num43 *= num45;
					num44 *= num45;
					if (this.type == 383)
					{
						Vector2 vector3 = new Vector2(num43, num44) - this.velocity;
						if (vector3 != Vector2.Zero)
						{
							Vector2 value = vector3;
							value.Normalize();
							this.velocity += value * Math.Min(num42, vector3.Length());
						}
					}
					else
					{
						if (this.velocity.X < num43)
						{
							this.velocity.X = this.velocity.X + num42;
							if (this.velocity.X < 0f && num43 > 0f)
							{
								this.velocity.X = this.velocity.X + num42;
							}
						}
						else if (this.velocity.X > num43)
						{
							this.velocity.X = this.velocity.X - num42;
							if (this.velocity.X > 0f && num43 < 0f)
							{
								this.velocity.X = this.velocity.X - num42;
							}
						}
						if (this.velocity.Y < num44)
						{
							this.velocity.Y = this.velocity.Y + num42;
							if (this.velocity.Y < 0f && num44 > 0f)
							{
								this.velocity.Y = this.velocity.Y + num42;
							}
						}
						else if (this.velocity.Y > num44)
						{
							this.velocity.Y = this.velocity.Y - num42;
							if (this.velocity.Y > 0f && num44 < 0f)
							{
								this.velocity.Y = this.velocity.Y - num42;
							}
						}
					}
					if (Main.myPlayer == this.owner)
					{
						Rectangle rectangle = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
						Rectangle value2 = new Rectangle((int)Main.player[this.owner].position.X, (int)Main.player[this.owner].position.Y, Main.player[this.owner].width, Main.player[this.owner].height);
						if (rectangle.Intersects(value2))
						{
							this.Kill();
						}
					}
				}
				if (this.type == 106)
				{
					this.rotation += 0.3f * (float)this.direction;
					return;
				}
				if (this.type != 383)
				{
					this.rotation += 0.4f * (float)this.direction;
					return;
				}
				if (this.ai[0] == 0f)
				{
					Vector2 velocity = this.velocity;
					velocity.Normalize();
					this.rotation = (float)Math.Atan2((double)velocity.Y, (double)velocity.X) + 1.57f;
					return;
				}
				Vector2 vector4 = base.Center - Main.player[this.owner].Center;
				vector4.Normalize();
				this.rotation = (float)Math.Atan2((double)vector4.Y, (double)vector4.X) + 1.57f;
				return;
			}
			else if (this.aiStyle == 4)
			{
				this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
				if (this.ai[0] == 0f)
				{
					if (this.type >= 150 && this.type <= 152 && this.ai[1] == 0f && this.alpha == 255 && Main.rand.Next(2) == 0)
					{
						this.type++;
						this.netUpdate = true;
					}
					this.alpha -= 50;
					if (this.type >= 150 && this.type <= 152)
					{
						this.alpha -= 25;
					}
					else if (this.type == 493 || this.type == 494)
					{
						this.alpha -= 50;
					}
					if (this.alpha <= 0)
					{
						this.alpha = 0;
						this.ai[0] = 1f;
						if (this.ai[1] == 0f)
						{
							this.ai[1] += 1f;
							this.position += this.velocity * 1f;
						}
						if (this.type == 7 && Main.myPlayer == this.owner)
						{
							int num46 = this.type;
							if (this.ai[1] >= 6f)
							{
								num46++;
							}
							int num47 = Projectile.NewProjectile(this.position.X + this.velocity.X + (float)(this.width / 2), this.position.Y + this.velocity.Y + (float)(this.height / 2), this.velocity.X, this.velocity.Y, num46, this.damage, this.knockBack, this.owner, 0f, 0f);
							Main.projectile[num47].damage = this.damage;
							Main.projectile[num47].ai[1] = this.ai[1] + 1f;
							NetMessage.SendData(27, -1, -1, "", num47, 0f, 0f, 0f, 0, 0, 0);
							return;
						}
						if (this.type == 494 && Main.myPlayer == this.owner)
						{
							int num48 = this.type;
							if (this.ai[1] >= (float)(7 + Main.rand.Next(2)))
							{
								num48--;
							}
							int num49 = this.damage;
							float num50 = this.knockBack;
							if (num48 == 493)
							{
								num49 = (int)((double)this.damage * 1.25);
								num50 = this.knockBack * 1.25f;
							}
							int number = Projectile.NewProjectile(this.position.X + this.velocity.X + (float)(this.width / 2), this.position.Y + this.velocity.Y + (float)(this.height / 2), this.velocity.X, this.velocity.Y, num48, num49, num50, this.owner, 0f, this.ai[1] + 1f);
							NetMessage.SendData(27, -1, -1, "", number, 0f, 0f, 0f, 0, 0, 0);
							return;
						}
						if ((this.type == 150 || this.type == 151) && Main.myPlayer == this.owner)
						{
							int num51 = this.type;
							if (this.type == 150)
							{
								num51 = 151;
							}
							else if (this.type == 151)
							{
								num51 = 150;
							}
							if (this.ai[1] >= 10f && this.type == 151)
							{
								num51 = 152;
							}
							int num52 = Projectile.NewProjectile(this.position.X + this.velocity.X + (float)(this.width / 2), this.position.Y + this.velocity.Y + (float)(this.height / 2), this.velocity.X, this.velocity.Y, num51, this.damage, this.knockBack, this.owner, 0f, 0f);
							Main.projectile[num52].damage = this.damage;
							Main.projectile[num52].ai[1] = this.ai[1] + 1f;
							NetMessage.SendData(27, -1, -1, "", num52, 0f, 0f, 0f, 0, 0, 0);
							return;
						}
					}
				}
				else
				{
					if (this.alpha < 170 && this.alpha + 5 >= 170)
					{
						if (this.type >= 150 && this.type <= 152)
						{
							for (int num53 = 0; num53 < 8; num53++)
							{
								int num54 = Dust.NewDust(this.position, this.width, this.height, 7, this.velocity.X * 0.025f, this.velocity.Y * 0.025f, 200, default(Color), 1.3f);
								Main.dust[num54].noGravity = true;
								Main.dust[num54].velocity *= 0.5f;
							}
						}
						else if (this.type == 493 || this.type == 494)
						{
							for (int num55 = 0; num55 < 8; num55++)
							{
								int num56 = Dust.NewDust(this.position, this.width, this.height, Main.rand.Next(68, 71), this.velocity.X * 0.025f, this.velocity.Y * 0.025f, 200, default(Color), 1.3f);
								Main.dust[num56].noGravity = true;
								Main.dust[num56].velocity *= 0.5f;
							}
						}
						else
						{
							for (int num57 = 0; num57 < 3; num57++)
							{
								Dust.NewDust(this.position, this.width, this.height, 18, this.velocity.X * 0.025f, this.velocity.Y * 0.025f, 170, default(Color), 1.2f);
							}
							Dust.NewDust(this.position, this.width, this.height, 14, 0f, 0f, 170, default(Color), 1.1f);
						}
					}
					if (this.type >= 150 && this.type <= 152)
					{
						this.alpha += 3;
					}
					else if (this.type == 493 || this.type == 494)
					{
						this.alpha += 7;
					}
					else
					{
						this.alpha += 5;
					}
					if (this.alpha >= 255)
					{
						this.Kill();
						return;
					}
				}
			}
			else if (this.aiStyle == 5)
			{
				if (this.type == 503)
				{
					if (base.Center.Y > this.ai[1])
					{
						this.tileCollide = true;
					}
				}
				else if (this.type == 92)
				{
					if (this.position.Y > this.ai[1])
					{
						this.tileCollide = true;
					}
				}
				else
				{
					if (this.ai[1] == 0f && !Collision.SolidCollision(this.position, this.width, this.height))
					{
						this.ai[1] = 1f;
						this.netUpdate = true;
					}
					if (this.ai[1] != 0f)
					{
						this.tileCollide = true;
					}
				}
				if (this.soundDelay == 0)
				{
					this.soundDelay = 20 + Main.rand.Next(40);
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 9);
				}
				if (this.type == 503)
				{
					this.alpha -= 15;
					int num58 = 150;
					if (base.Center.Y >= this.ai[1])
					{
						num58 = 0;
					}
					if (this.alpha < num58)
					{
						this.alpha = num58;
					}
					this.localAI[0] += (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) * 0.01f * (float)this.direction;
				}
				else
				{
					if (this.localAI[0] == 0f)
					{
						this.localAI[0] = 1f;
					}
					this.alpha += (int)(25f * this.localAI[0]);
					if (this.alpha > 200)
					{
						this.alpha = 200;
						this.localAI[0] = -1f;
					}
					if (this.alpha < 0)
					{
						this.alpha = 0;
						this.localAI[0] = 1f;
					}
				}
				if (this.type == 503)
				{
					this.rotation = this.velocity.ToRotation() - 1.57079637f;
				}
				else
				{
					this.rotation += (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) * 0.01f * (float)this.direction;
				}
				if (this.type == 503)
				{
					if (Main.rand.Next(16) == 0)
					{
						Vector2 value3 = Vector2.UnitX.RotatedByRandom(1.5707963705062866).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
						int num59 = Dust.NewDust(this.position, this.width, this.height, 58, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 150, default(Color), 1.2f);
						Main.dust[num59].velocity = value3 * 0.66f;
						Main.dust[num59].position = base.Center + value3 * 12f;
					}
					if (Main.rand.Next(48) == 0)
					{
						int num60 = Gore.NewGore(base.Center, new Vector2(this.velocity.X * 0.2f, this.velocity.Y * 0.2f), 16, 1f);
						Main.gore[num60].velocity *= 0.66f;
						Main.gore[num60].velocity += this.velocity * 0.3f;
					}
				}
				if (this.ai[1] == 1f || this.type == 92)
				{
					this.light = 0.9f;
					if (Main.rand.Next(10) == 0)
					{
						Dust.NewDust(this.position, this.width, this.height, 58, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 150, default(Color), 1.2f);
					}
					if (Main.rand.Next(20) == 0)
					{
						Gore.NewGore(this.position, new Vector2(this.velocity.X * 0.2f, this.velocity.Y * 0.2f), Main.rand.Next(16, 18), 1f);
						return;
					}
				}
			}
			else if (this.aiStyle == 6)
			{
				this.velocity *= 0.95f;
				this.ai[0] += 1f;
				if (this.ai[0] == 180f)
				{
					this.Kill();
				}
				if (this.ai[1] == 0f)
				{
					this.ai[1] = 1f;
					int num61 = 10 + this.type;
					if (this.type == 463)
					{
						num61 = 231;
					}
					for (int num62 = 0; num62 < 30; num62++)
					{
						Dust.NewDust(this.position, this.width, this.height, num61, this.velocity.X, this.velocity.Y, 50, default(Color), 1f);
					}
				}
				if (this.type == 10 || this.type == 11 || this.type == 463)
				{
					int num63 = (int)(this.position.X / 16f) - 1;
					int num64 = (int)((this.position.X + (float)this.width) / 16f) + 2;
					int num65 = (int)(this.position.Y / 16f) - 1;
					int num66 = (int)((this.position.Y + (float)this.height) / 16f) + 2;
					if (num63 < 0)
					{
						num63 = 0;
					}
					if (num64 > Main.maxTilesX)
					{
						num64 = Main.maxTilesX;
					}
					if (num65 < 0)
					{
						num65 = 0;
					}
					if (num66 > Main.maxTilesY)
					{
						num66 = Main.maxTilesY;
					}
					for (int num67 = num63; num67 < num64; num67++)
					{
						for (int num68 = num65; num68 < num66; num68++)
						{
							Vector2 vector5;
							vector5.X = (float)(num67 * 16);
							vector5.Y = (float)(num68 * 16);
							if (this.position.X + (float)this.width > vector5.X && this.position.X < vector5.X + 16f && this.position.Y + (float)this.height > vector5.Y && this.position.Y < vector5.Y + 16f && Main.myPlayer == this.owner && Main.tile[num67, num68].active())
							{
								if (this.type == 10)
								{
									if (Main.tile[num67, num68].type == 23 || Main.tile[num67, num68].type == 199)
									{
										Main.tile[num67, num68].type = 2;
										WorldGen.SquareTileFrame(num67, num68, true);
										if (Main.netMode == 1)
										{
											NetMessage.SendTileSquare(-1, num67, num68, 1);
										}
									}
									if (Main.tile[num67, num68].type == 25 || Main.tile[num67, num68].type == 203)
									{
										Main.tile[num67, num68].type = 1;
										WorldGen.SquareTileFrame(num67, num68, true);
										if (Main.netMode == 1)
										{
											NetMessage.SendTileSquare(-1, num67, num68, 1);
										}
									}
									if (Main.tile[num67, num68].type == 112 || Main.tile[num67, num68].type == 234)
									{
										Main.tile[num67, num68].type = 53;
										WorldGen.SquareTileFrame(num67, num68, true);
										if (Main.netMode == 1)
										{
											NetMessage.SendTileSquare(-1, num67, num68, 1);
										}
									}
									if (Main.tile[num67, num68].type == 163 || Main.tile[num67, num68].type == 200)
									{
										Main.tile[num67, num68].type = 161;
										WorldGen.SquareTileFrame(num67, num68, true);
										if (Main.netMode == 1)
										{
											NetMessage.SendTileSquare(-1, num67, num68, 1);
										}
									}
									if (Main.tile[num67, num68].type == 400 || Main.tile[num67, num68].type == 401)
									{
										Main.tile[num67, num68].type = 396;
										WorldGen.SquareTileFrame(num67, num68, true);
										if (Main.netMode == 1)
										{
											NetMessage.SendTileSquare(-1, num67, num68, 1);
										}
									}
									if (Main.tile[num67, num68].type == 398 || Main.tile[num67, num68].type == 399)
									{
										Main.tile[num67, num68].type = 397;
										WorldGen.SquareTileFrame(num67, num68, true);
										if (Main.netMode == 1)
										{
											NetMessage.SendTileSquare(-1, num67, num68, 1);
										}
									}
								}
								else if (this.type == 11 || this.type == 463)
								{
									if (Main.tile[num67, num68].type == 109)
									{
										Main.tile[num67, num68].type = 2;
										WorldGen.SquareTileFrame(num67, num68, true);
										if (Main.netMode == 1)
										{
											NetMessage.SendTileSquare(-1, num67, num68, 1);
										}
									}
									if (Main.tile[num67, num68].type == 116)
									{
										Main.tile[num67, num68].type = 53;
										WorldGen.SquareTileFrame(num67, num68, true);
										if (Main.netMode == 1)
										{
											NetMessage.SendTileSquare(-1, num67, num68, 1);
										}
									}
									if (Main.tile[num67, num68].type == 117)
									{
										Main.tile[num67, num68].type = 1;
										WorldGen.SquareTileFrame(num67, num68, true);
										if (Main.netMode == 1)
										{
											NetMessage.SendTileSquare(-1, num67, num68, 1);
										}
									}
									if (Main.tile[num67, num68].type == 164)
									{
										Main.tile[num67, num68].type = 161;
										WorldGen.SquareTileFrame(num67, num68, true);
										if (Main.netMode == 1)
										{
											NetMessage.SendTileSquare(-1, num67, num68, 1);
										}
									}
									if (Main.tile[num67, num68].type == 403)
									{
										Main.tile[num67, num68].type = 396;
										WorldGen.SquareTileFrame(num67, num68, true);
										if (Main.netMode == 1)
										{
											NetMessage.SendTileSquare(-1, num67, num68, 1);
										}
									}
									if (Main.tile[num67, num68].type == 402)
									{
										Main.tile[num67, num68].type = 397;
										WorldGen.SquareTileFrame(num67, num68, true);
										if (Main.netMode == 1)
										{
											NetMessage.SendTileSquare(-1, num67, num68, 1);
										}
									}
								}
							}
						}
					}
					return;
				}
			}
			else if (this.aiStyle == 7)
			{
				if (Main.player[this.owner].dead || Main.player[this.owner].stoned || Main.player[this.owner].webbed || Main.player[this.owner].frozen)
				{
					this.Kill();
					return;
				}
				Vector2 mountedCenter = Main.player[this.owner].MountedCenter;
				Vector2 vector6 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float num69 = mountedCenter.X - vector6.X;
				float num70 = mountedCenter.Y - vector6.Y;
				float num71 = (float)Math.Sqrt((double)(num69 * num69 + num70 * num70));
				this.rotation = (float)Math.Atan2((double)num70, (double)num69) - 1.57f;
				if (this.type == 256)
				{
					this.rotation = (float)Math.Atan2((double)num70, (double)num69) + 3.92500019f;
				}
				if (this.type == 446)
				{
					Lighting.AddLight(mountedCenter, 0f, 0.4f, 0.3f);
					this.localAI[0] += 1f;
					if (this.localAI[0] >= 28f)
					{
						this.localAI[0] = 0f;
					}
					DelegateMethods.v3_1 = new Vector3(0f, 0.4f, 0.3f);
					Utils.PlotTileLine(base.Center, mountedCenter, 8f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
				}
				if (this.type == 652 && ++this.frameCounter >= 7)
				{
					this.frameCounter = 0;
					if (++this.frame >= Main.projFrames[this.type])
					{
						this.frame = 0;
					}
				}
				if (this.type >= 646 && this.type <= 649)
				{
					Vector3 zero = Vector3.Zero;
					switch (this.type)
					{
						case 646:
							zero = new Vector3(0.7f, 0.5f, 0.1f);
							break;
						case 647:
							zero = new Vector3(0f, 0.6f, 0.7f);
							break;
						case 648:
							zero = new Vector3(0.6f, 0.2f, 0.6f);
							break;
						case 649:
							zero = new Vector3(0.6f, 0.6f, 0.9f);
							break;
					}
					Lighting.AddLight(mountedCenter, zero);
					Lighting.AddLight(base.Center, zero);
					DelegateMethods.v3_1 = zero;
					Utils.PlotTileLine(base.Center, mountedCenter, 8f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
				}
				if (this.ai[0] == 0f)
				{
					if ((num71 > 300f && this.type == 13) || (num71 > 400f && this.type == 32) || (num71 > 440f && this.type == 73) || (num71 > 440f && this.type == 74) || (num71 > 250f && this.type == 165) || (num71 > 350f && this.type == 256) || (num71 > 500f && this.type == 315) || (num71 > 550f && this.type == 322) || (num71 > 400f && this.type == 331) || (num71 > 550f && this.type == 332) || (num71 > 400f && this.type == 372) || (num71 > 300f && this.type == 396) || (num71 > 550f && this.type >= 646 && this.type <= 649) || (num71 > 600f && this.type == 652) || (num71 > 480f && this.type >= 486 && this.type <= 489) || (num71 > 500f && this.type == 446))
					{
						this.ai[0] = 1f;
					}
					else if (this.type >= 230 && this.type <= 235)
					{
						int num72 = 300 + (this.type - 230) * 30;
						if (num71 > (float)num72)
						{
							this.ai[0] = 1f;
							//this comment includes num71 in the diff in case the name changes
						}
					}
					else if (ProjectileLoader.GrappleOutOfRange(num71, this))
					{
						this.ai[0] = 1f;
					}
					Vector2 value4 = base.Center - new Vector2(5f);
					Vector2 value5 = base.Center + new Vector2(5f);
					Point point = (value4 - new Vector2(16f)).ToTileCoordinates();
					Point point2 = (value5 + new Vector2(32f)).ToTileCoordinates();
					int num73 = point.X;
					int num74 = point2.X;
					int num75 = point.Y;
					int num76 = point2.Y;
					if (num73 < 0)
					{
						num73 = 0;
					}
					if (num74 > Main.maxTilesX)
					{
						num74 = Main.maxTilesX;
					}
					if (num75 < 0)
					{
						num75 = 0;
					}
					if (num76 > Main.maxTilesY)
					{
						num76 = Main.maxTilesY;
					}
					for (int num77 = num73; num77 < num74; num77++)
					{
						int num78 = num75;
						while (num78 < num76)
						{
							if (Main.tile[num77, num78] == null)
							{
								Main.tile[num77, num78] = new Tile();
							}
							Vector2 vector7;
							vector7.X = (float)(num77 * 16);
							vector7.Y = (float)(num78 * 16);
							if (value4.X + 10f > vector7.X && value4.X < vector7.X + 16f && value4.Y + 10f > vector7.Y && value4.Y < vector7.Y + 16f && Main.tile[num77, num78].nactive() && (Main.tileSolid[(int)Main.tile[num77, num78].type] || Main.tile[num77, num78].type == 314) && (this.type != 403 || Main.tile[num77, num78].type == 314))
							{
								if (Main.player[this.owner].grapCount < 10)
								{
									Main.player[this.owner].grappling[Main.player[this.owner].grapCount] = this.whoAmI;
									Main.player[this.owner].grapCount++;
								}
								if (Main.myPlayer == this.owner)
								{
									int num79 = 0;
									int num80 = -1;
									int num81 = 100000;
									if (this.type == 73 || this.type == 74)
									{
										for (int num82 = 0; num82 < 1000; num82++)
										{
											if (num82 != this.whoAmI && Main.projectile[num82].active && Main.projectile[num82].owner == this.owner && Main.projectile[num82].aiStyle == 7 && Main.projectile[num82].ai[0] == 2f)
											{
												Main.projectile[num82].Kill();
											}
										}
									}
									else
									{
										int num83 = 3;
										if (this.type == 165)
										{
											num83 = 8;
										}
										if (this.type == 256)
										{
											num83 = 2;
										}
										if (this.type == 372)
										{
											num83 = 2;
										}
										if (this.type == 652)
										{
											num83 = 1;
										}
										if (this.type >= 646 && this.type <= 649)
										{
											num83 = 4;
										}
										ProjectileLoader.NumGrappleHooks(this, Main.player[this.owner], ref num83);
										for (int num84 = 0; num84 < 1000; num84++)
										{
											if (Main.projectile[num84].active && Main.projectile[num84].owner == this.owner && Main.projectile[num84].aiStyle == 7)
											{
												if (Main.projectile[num84].timeLeft < num81)
												{
													num80 = num84;
													num81 = Main.projectile[num84].timeLeft;
												}
												num79++;
											}
										}
										if (num79 > num83)
										{
											Main.projectile[num80].Kill();
										}
									}
								}
								WorldGen.KillTile(num77, num78, true, true, false);
								Main.PlaySound(0, num77 * 16, num78 * 16, 1);
								this.velocity.X = 0f;
								this.velocity.Y = 0f;
								this.ai[0] = 2f;
								this.position.X = (float)(num77 * 16 + 8 - this.width / 2);
								this.position.Y = (float)(num78 * 16 + 8 - this.height / 2);
								this.damage = 0;
								this.netUpdate = true;
								if (Main.myPlayer == this.owner)
								{
									NetMessage.SendData(13, -1, -1, "", this.owner, 0f, 0f, 0f, 0, 0, 0);
									break;
								}
								break;
							}
							else
							{
								num78++;
							}
						}
						if (this.ai[0] == 2f)
						{
							return;
						}
					}
					return;
				}
				if (this.ai[0] == 1f)
				{
					float num85 = 11f;
					if (this.type == 32)
					{
						num85 = 15f;
					}
					if (this.type == 73 || this.type == 74)
					{
						num85 = 17f;
					}
					if (this.type == 315)
					{
						num85 = 20f;
					}
					if (this.type == 322)
					{
						num85 = 22f;
					}
					if (this.type >= 230 && this.type <= 235)
					{
						num85 = 11f + (float)(this.type - 230) * 0.75f;
					}
					if (this.type == 446)
					{
						num85 = 20f;
					}
					if (this.type >= 486 && this.type <= 489)
					{
						num85 = 18f;
					}
					if (this.type >= 646 && this.type <= 649)
					{
						num85 = 24f;
					}
					if (this.type == 652)
					{
						num85 = 24f;
					}
					if (this.type == 332)
					{
						num85 = 17f;
					}
					ProjectileLoader.GrappleRetreatSpeed(this, Main.player[this.owner], ref num85);
					if (num71 < 24f)
					{
						this.Kill();
					}
					num71 = num85 / num71;
					num69 *= num71;
					num70 *= num71;
					this.velocity.X = num69;
					this.velocity.Y = num70;
					return;
				}
				if (this.ai[0] == 2f)
				{
					int num86 = (int)(this.position.X / 16f) - 1;
					int num87 = (int)((this.position.X + (float)this.width) / 16f) + 2;
					int num88 = (int)(this.position.Y / 16f) - 1;
					int num89 = (int)((this.position.Y + (float)this.height) / 16f) + 2;
					if (num86 < 0)
					{
						num86 = 0;
					}
					if (num87 > Main.maxTilesX)
					{
						num87 = Main.maxTilesX;
					}
					if (num88 < 0)
					{
						num88 = 0;
					}
					if (num89 > Main.maxTilesY)
					{
						num89 = Main.maxTilesY;
					}
					bool flag2 = true;
					for (int num90 = num86; num90 < num87; num90++)
					{
						for (int num91 = num88; num91 < num89; num91++)
						{
							if (Main.tile[num90, num91] == null)
							{
								Main.tile[num90, num91] = new Tile();
							}
							Vector2 vector8;
							vector8.X = (float)(num90 * 16);
							vector8.Y = (float)(num91 * 16);
							if (this.position.X + (float)(this.width / 2) > vector8.X && this.position.X + (float)(this.width / 2) < vector8.X + 16f && this.position.Y + (float)(this.height / 2) > vector8.Y && this.position.Y + (float)(this.height / 2) < vector8.Y + 16f && Main.tile[num90, num91].nactive() && (Main.tileSolid[(int)Main.tile[num90, num91].type] || Main.tile[num90, num91].type == 314 || Main.tile[num90, num91].type == 5))
							{
								flag2 = false;
							}
						}
					}
					if (flag2)
					{
						this.ai[0] = 1f;
						return;
					}
					if (Main.player[this.owner].grapCount < 10)
					{
						Main.player[this.owner].grappling[Main.player[this.owner].grapCount] = this.whoAmI;
						Main.player[this.owner].grapCount++;
						return;
					}
				}
			}
			else if (this.aiStyle == 8)
			{
				if (this.type == 258 && this.localAI[0] == 0f)
				{
					this.localAI[0] = 1f;
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 20);
				}
				if (this.type == 96 && this.localAI[0] == 0f)
				{
					this.localAI[0] = 1f;
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 20);
				}
				if (this.type == 27)
				{
					for (int num92 = 0; num92 < 5; num92++)
					{
						float num93 = this.velocity.X / 3f * (float)num92;
						float num94 = this.velocity.Y / 3f * (float)num92;
						int num95 = 4;
						int num96 = Dust.NewDust(new Vector2(this.position.X + (float)num95, this.position.Y + (float)num95), this.width - num95 * 2, this.height - num95 * 2, 172, 0f, 0f, 100, default(Color), 1.2f);
						Main.dust[num96].noGravity = true;
						Main.dust[num96].velocity *= 0.1f;
						Main.dust[num96].velocity += this.velocity * 0.1f;
						Dust expr_4896_cp_0 = Main.dust[num96];
						expr_4896_cp_0.position.X = expr_4896_cp_0.position.X - num93;
						Dust expr_48B1_cp_0 = Main.dust[num96];
						expr_48B1_cp_0.position.Y = expr_48B1_cp_0.position.Y - num94;
					}
					if (Main.rand.Next(5) == 0)
					{
						int num97 = 4;
						int num98 = Dust.NewDust(new Vector2(this.position.X + (float)num97, this.position.Y + (float)num97), this.width - num97 * 2, this.height - num97 * 2, 172, 0f, 0f, 100, default(Color), 0.6f);
						Main.dust[num98].velocity *= 0.25f;
						Main.dust[num98].velocity += this.velocity * 0.5f;
					}
				}
				else if (this.type == 502)
				{
					float num99 = (float)Main.DiscoR / 255f;
					float num100 = (float)Main.DiscoG / 255f;
					float num101 = (float)Main.DiscoB / 255f;
					num99 = (0.5f + num99) / 2f;
					num100 = (0.5f + num100) / 2f;
					num101 = (0.5f + num101) / 2f;
					Lighting.AddLight(base.Center, num99, num100, num101);
				}
				else if (this.type == 95 || this.type == 96)
				{
					int num102 = Dust.NewDust(new Vector2(this.position.X + this.velocity.X, this.position.Y + this.velocity.Y), this.width, this.height, 75, this.velocity.X, this.velocity.Y, 100, default(Color), 3f * this.scale);
					Main.dust[num102].noGravity = true;
				}
				else if (this.type == 253)
				{
					for (int num103 = 0; num103 < 2; num103++)
					{
						int num104 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 135, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2f);
						Main.dust[num104].noGravity = true;
						Dust expr_4B4C_cp_0 = Main.dust[num104];
						expr_4B4C_cp_0.velocity.X = expr_4B4C_cp_0.velocity.X * 0.3f;
						Dust expr_4B6A_cp_0 = Main.dust[num104];
						expr_4B6A_cp_0.velocity.Y = expr_4B6A_cp_0.velocity.Y * 0.3f;
					}
				}
				else
				{
					for (int num105 = 0; num105 < 2; num105++)
					{
						int num106 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2f);
						Main.dust[num106].noGravity = true;
						Dust expr_4C17_cp_0 = Main.dust[num106];
						expr_4C17_cp_0.velocity.X = expr_4C17_cp_0.velocity.X * 0.3f;
						Dust expr_4C35_cp_0 = Main.dust[num106];
						expr_4C35_cp_0.velocity.Y = expr_4C35_cp_0.velocity.Y * 0.3f;
					}
				}
				if (this.type != 27 && this.type != 96 && this.type != 258)
				{
					this.ai[1] += 1f;
				}
				if (this.ai[1] >= 20f)
				{
					this.velocity.Y = this.velocity.Y + 0.2f;
				}
				if (this.type == 502)
				{
					this.rotation = this.velocity.ToRotation() + 1.57079637f;
					if (this.velocity.X != 0f)
					{
						this.spriteDirection = (this.direction = Math.Sign(this.velocity.X));
					}
				}
				else
				{
					this.rotation += 0.3f * (float)this.direction;
				}
				if (this.velocity.Y > 16f)
				{
					this.velocity.Y = 16f;
					return;
				}
			}
			else if (this.aiStyle == 9)
			{
				if (this.type == 491)
				{
					if (Main.rand.Next(2) == 0)
					{
						int num107 = Main.rand.Next(3);
						if (num107 == 0)
						{
							num107 = 15;
						}
						else if (num107 == 1)
						{
							num107 = 57;
						}
						else
						{
							num107 = 58;
						}
						int num108 = Dust.NewDust(this.position, this.width, this.height, num107, this.velocity.X * 0.25f, this.velocity.Y * 0.25f, 255, default(Color), 0.7f);
						Main.dust[num108].velocity *= 0.25f;
						Main.dust[num108].position = (Main.dust[num108].position + this.position) / 2f;
					}
				}
				else if (this.type == 34)
				{
					int num109 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 3.5f);
					Main.dust[num109].noGravity = true;
					Main.dust[num109].velocity *= 1.4f;
					num109 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 1.5f);
				}
				else if (this.type == 79)
				{
					if (this.soundDelay == 0 && Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) > 2f)
					{
						this.soundDelay = 10;
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 9);
					}
					for (int num110 = 0; num110 < 1; num110++)
					{
						int num111 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 66, 0f, 0f, 100, new Color(Main.DiscoR, Main.DiscoG, Main.DiscoB), 2.5f);
						Main.dust[num111].velocity *= 0.1f;
						Main.dust[num111].velocity += this.velocity * 0.2f;
						Main.dust[num111].position.X = this.position.X + (float)(this.width / 2) + 4f + (float)Main.rand.Next(-2, 3);
						Main.dust[num111].position.Y = this.position.Y + (float)(this.height / 2) + (float)Main.rand.Next(-2, 3);
						Main.dust[num111].noGravity = true;
					}
				}
				else
				{
					if (this.soundDelay == 0 && Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) > 2f)
					{
						this.soundDelay = 10;
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 9);
					}
					int num112 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 15, 0f, 0f, 100, default(Color), 2f);
					Main.dust[num112].velocity *= 0.3f;
					Main.dust[num112].position.X = this.position.X + (float)(this.width / 2) + 4f + (float)Main.rand.Next(-4, 5);
					Main.dust[num112].position.Y = this.position.Y + (float)(this.height / 2) + (float)Main.rand.Next(-4, 5);
					Main.dust[num112].noGravity = true;
				}
				if (Main.myPlayer == this.owner && this.ai[0] <= 0f)
				{
					if (Main.player[this.owner].channel)
					{
						float num113 = 12f;
						if (this.type == 16)
						{
							num113 = 15f;
						}
						if (this.type == 491)
						{
							num113 = 20f;
						}
						Vector2 vector9 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num114 = (float)Main.mouseX + Main.screenPosition.X - vector9.X;
						float num115 = (float)Main.mouseY + Main.screenPosition.Y - vector9.Y;
						if (Main.player[this.owner].gravDir == -1f)
						{
							num115 = Main.screenPosition.Y + (float)Main.screenHeight - (float)Main.mouseY - vector9.Y;
						}
						float num116 = (float)Math.Sqrt((double)(num114 * num114 + num115 * num115));
						num116 = (float)Math.Sqrt((double)(num114 * num114 + num115 * num115));
						if (this.ai[0] < 0f)
						{
							this.ai[0] += 1f;
						}
						if (this.type == 491 && num116 < 100f)
						{
							if (this.velocity.Length() < num113)
							{
								this.velocity *= 1.1f;
								if (this.velocity.Length() > num113)
								{
									this.velocity.Normalize();
									this.velocity *= num113;
								}
							}
							if (this.ai[0] == 0f)
							{
								this.ai[0] = -10f;
							}
						}
						else if (num116 > num113)
						{
							num116 = num113 / num116;
							num114 *= num116;
							num115 *= num116;
							int num117 = (int)(num114 * 1000f);
							int num118 = (int)(this.velocity.X * 1000f);
							int num119 = (int)(num115 * 1000f);
							int num120 = (int)(this.velocity.Y * 1000f);
							if (num117 != num118 || num119 != num120)
							{
								this.netUpdate = true;
							}
							if (this.type == 491)
							{
								Vector2 value6 = new Vector2(num114, num115);
								this.velocity = (this.velocity * 4f + value6) / 5f;
							}
							else
							{
								this.velocity.X = num114;
								this.velocity.Y = num115;
							}
						}
						else
						{
							int num121 = (int)(num114 * 1000f);
							int num122 = (int)(this.velocity.X * 1000f);
							int num123 = (int)(num115 * 1000f);
							int num124 = (int)(this.velocity.Y * 1000f);
							if (num121 != num122 || num123 != num124)
							{
								this.netUpdate = true;
							}
							this.velocity.X = num114;
							this.velocity.Y = num115;
						}
					}
					else if (this.ai[0] <= 0f)
					{
						this.netUpdate = true;
						if (this.type != 491)
						{
							float num125 = 12f;
							Vector2 vector10 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num126 = (float)Main.mouseX + Main.screenPosition.X - vector10.X;
							float num127 = (float)Main.mouseY + Main.screenPosition.Y - vector10.Y;
							if (Main.player[this.owner].gravDir == -1f)
							{
								num127 = Main.screenPosition.Y + (float)Main.screenHeight - (float)Main.mouseY - vector10.Y;
							}
							float num128 = (float)Math.Sqrt((double)(num126 * num126 + num127 * num127));
							if (num128 == 0f || this.ai[0] < 0f)
							{
								vector10 = new Vector2(Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2), Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2));
								num126 = this.position.X + (float)this.width * 0.5f - vector10.X;
								num127 = this.position.Y + (float)this.height * 0.5f - vector10.Y;
								num128 = (float)Math.Sqrt((double)(num126 * num126 + num127 * num127));
							}
							num128 = num125 / num128;
							num126 *= num128;
							num127 *= num128;
							this.velocity.X = num126;
							this.velocity.Y = num127;
							if (this.velocity.X == 0f && this.velocity.Y == 0f)
							{
								this.Kill();
							}
						}
						this.ai[0] = 1f;
					}
				}
				if (this.type == 491)
				{
					this.localAI[0] += 1f;
					if (this.ai[0] > 0f && this.localAI[0] > 15f)
					{
						this.tileCollide = false;
						Vector2 vector11 = Main.player[this.owner].Center - base.Center;
						if (vector11.Length() < 20f)
						{
							this.Kill();
						}
						vector11.Normalize();
						vector11 *= 25f;
						this.velocity = (this.velocity * 5f + vector11) / 6f;
					}
					if (this.ai[0] < 0f || (this.velocity.X == 0f && this.velocity.Y == 0f))
					{
						this.rotation += 0.3f;
					}
					else if (this.ai[0] > 0f)
					{
						this.rotation += 0.3f * (float)this.direction;
					}
					else
					{
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
					}
				}
				else if (this.type == 34)
				{
					this.rotation += 0.3f * (float)this.direction;
				}
				else if (this.velocity.X != 0f || this.velocity.Y != 0f)
				{
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 2.355f;
				}
				if (this.velocity.Y > 16f)
				{
					this.velocity.Y = 16f;
					return;
				}
			}
			else if (this.aiStyle == 10)
			{
				if (this.type == 31 && this.ai[0] != 2f)
				{
					if (Main.rand.Next(2) == 0)
					{
						int num129 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 32, 0f, this.velocity.Y / 2f, 0, default(Color), 1f);
						Dust expr_5A2D_cp_0 = Main.dust[num129];
						expr_5A2D_cp_0.velocity.X = expr_5A2D_cp_0.velocity.X * 0.4f;
					}
				}
				else if (this.type == 39)
				{
					if (Main.rand.Next(2) == 0)
					{
						int num130 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 38, 0f, this.velocity.Y / 2f, 0, default(Color), 1f);
						Dust expr_5AC7_cp_0 = Main.dust[num130];
						expr_5AC7_cp_0.velocity.X = expr_5AC7_cp_0.velocity.X * 0.4f;
					}
				}
				else if (this.type >= 411 && this.type <= 414)
				{
					if (Main.rand.Next(3) == 0)
					{
						int num131 = 9;
						if (this.type == 412 || this.type == 414)
						{
							num131 = 11;
						}
						if (this.type == 413)
						{
							num131 = 19;
						}
						int num132 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num131, 0f, this.velocity.Y / 2f, 0, default(Color), 1f);
						Main.dust[num132].noGravity = true;
						Main.dust[num132].velocity -= this.velocity * 0.5f;
					}
				}
				else if (this.type == 40)
				{
					if (Main.rand.Next(2) == 0)
					{
						int num133 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 36, 0f, this.velocity.Y / 2f, 0, default(Color), 1f);
						Main.dust[num133].velocity *= 0.4f;
					}
				}
				else if (this.type == 42 || this.type == 31)
				{
					if (Main.rand.Next(2) == 0)
					{
						int num134 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 32, 0f, 0f, 0, default(Color), 1f);
						Dust expr_5CF0_cp_0 = Main.dust[num134];
						expr_5CF0_cp_0.velocity.X = expr_5CF0_cp_0.velocity.X * 0.4f;
					}
				}
				else if (this.type == 56 || this.type == 65)
				{
					if (Main.rand.Next(2) == 0)
					{
						int num135 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 14, 0f, 0f, 0, default(Color), 1f);
						Dust expr_5D88_cp_0 = Main.dust[num135];
						expr_5D88_cp_0.velocity.X = expr_5D88_cp_0.velocity.X * 0.4f;
					}
				}
				else if (this.type == 67 || this.type == 68)
				{
					if (Main.rand.Next(2) == 0)
					{
						int num136 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 51, 0f, 0f, 0, default(Color), 1f);
						Dust expr_5E20_cp_0 = Main.dust[num136];
						expr_5E20_cp_0.velocity.X = expr_5E20_cp_0.velocity.X * 0.4f;
					}
				}
				else if (this.type == 71)
				{
					if (Main.rand.Next(2) == 0)
					{
						int num137 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 53, 0f, 0f, 0, default(Color), 1f);
						Dust expr_5EAE_cp_0 = Main.dust[num137];
						expr_5EAE_cp_0.velocity.X = expr_5EAE_cp_0.velocity.X * 0.4f;
					}
				}
				else if (this.type == 179)
				{
					if (Main.rand.Next(2) == 0)
					{
						int num138 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 149, 0f, 0f, 0, default(Color), 1f);
						Dust expr_5F42_cp_0 = Main.dust[num138];
						expr_5F42_cp_0.velocity.X = expr_5F42_cp_0.velocity.X * 0.4f;
					}
				}
				else if (this.type == 241 || this.type == 354)
				{
					if (Main.rand.Next(2) == 0)
					{
						int num139 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 36, 0f, 0f, 0, default(Color), 1f);
						Dust expr_5FDD_cp_0 = Main.dust[num139];
						expr_5FDD_cp_0.velocity.X = expr_5FDD_cp_0.velocity.X * 0.4f;
					}
				}
				else if (this.type != 109 && Main.rand.Next(20) == 0)
				{
					Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 0, 0f, 0f, 0, default(Color), 1f);
				}
				this.tileCollide = true;
				this.localAI[1] = 0f;
				if (Main.myPlayer == this.owner && this.ai[0] == 0f)
				{
					this.tileCollide = false;
					if (Main.player[this.owner].channel)
					{
						this.localAI[1] = -1f;
						float num140 = 12f;
						Vector2 vector12 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num141 = (float)Main.mouseX + Main.screenPosition.X - vector12.X;
						float num142 = (float)Main.mouseY + Main.screenPosition.Y - vector12.Y;
						if (Main.player[this.owner].gravDir == -1f)
						{
							num142 = Main.screenPosition.Y + (float)Main.screenHeight - (float)Main.mouseY - vector12.Y;
						}
						float num143 = (float)Math.Sqrt((double)(num141 * num141 + num142 * num142));
						num143 = (float)Math.Sqrt((double)(num141 * num141 + num142 * num142));
						if (num143 > num140)
						{
							num143 = num140 / num143;
							num141 *= num143;
							num142 *= num143;
							if (num141 != this.velocity.X || num142 != this.velocity.Y)
							{
								this.netUpdate = true;
							}
							this.velocity.X = num141;
							this.velocity.Y = num142;
						}
						else
						{
							if (num141 != this.velocity.X || num142 != this.velocity.Y)
							{
								this.netUpdate = true;
							}
							this.velocity.X = num141;
							this.velocity.Y = num142;
						}
					}
					else
					{
						this.ai[0] = 1f;
						this.netUpdate = true;
					}
				}
				if (this.ai[0] == 1f && this.type != 109)
				{
					if (this.type == 42 || this.type == 65 || this.type == 68 || this.type == 354)
					{
						this.ai[1] += 1f;
						if (this.ai[1] >= 60f)
						{
							this.ai[1] = 60f;
							this.velocity.Y = this.velocity.Y + 0.2f;
						}
					}
					else
					{
						this.velocity.Y = this.velocity.Y + 0.41f;
					}
				}
				else if (this.ai[0] == 2f && this.type != 109)
				{
					this.velocity.Y = this.velocity.Y + 0.2f;
					if ((double)this.velocity.X < -0.04)
					{
						this.velocity.X = this.velocity.X + 0.04f;
					}
					else if ((double)this.velocity.X > 0.04)
					{
						this.velocity.X = this.velocity.X - 0.04f;
					}
					else
					{
						this.velocity.X = 0f;
					}
				}
				this.rotation += 0.1f;
				if (this.velocity.Y > 10f)
				{
					this.velocity.Y = 10f;
					return;
				}
			}
			else if (this.aiStyle == 11)
			{
				if (this.type == 72 || this.type == 86 || this.type == 87)
				{
					if (this.velocity.X > 0f)
					{
						this.spriteDirection = -1;
					}
					else if (this.velocity.X < 0f)
					{
						this.spriteDirection = 1;
					}
					this.rotation = this.velocity.X * 0.1f;
					this.frameCounter++;
					if (this.frameCounter >= 4)
					{
						this.frame++;
						this.frameCounter = 0;
					}
					if (this.frame >= 4)
					{
						this.frame = 0;
					}
					if (Main.rand.Next(6) == 0)
					{
						int num144 = 56;
						if (this.type == 86)
						{
							num144 = 73;
						}
						else if (this.type == 87)
						{
							num144 = 74;
						}
						int num145 = Dust.NewDust(this.position, this.width, this.height, num144, 0f, 0f, 200, default(Color), 0.8f);
						Main.dust[num145].velocity *= 0.3f;
						Main.dust[num145].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cLight, Main.player[this.owner]);
					}
				}
				else
				{
					this.rotation += 0.02f;
				}
				if (Main.myPlayer == this.owner)
				{
					if (this.type == 72)
					{
						if (Main.player[Main.myPlayer].blueFairy)
						{
							this.timeLeft = 2;
						}
					}
					else if (this.type == 86)
					{
						if (Main.player[Main.myPlayer].redFairy)
						{
							this.timeLeft = 2;
						}
					}
					else if (this.type == 87)
					{
						if (Main.player[Main.myPlayer].greenFairy)
						{
							this.timeLeft = 2;
						}
					}
					else if (Main.player[Main.myPlayer].lightOrb)
					{
						this.timeLeft = 2;
					}
				}
				if (Main.player[this.owner].dead)
				{
					this.Kill();
					return;
				}
				float num146 = 3f;
				if (this.type == 72 || this.type == 86 || this.type == 87)
				{
					num146 = 3.75f;
				}
				Vector2 vector13 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float num147 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector13.X;
				float num148 = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - vector13.Y;
				int num149 = 70;
				if (this.type == 18)
				{
					if (Main.player[this.owner].controlUp)
					{
						num148 = Main.player[this.owner].position.Y - 40f - vector13.Y;
						num147 -= 6f;
						num149 = 4;
					}
					else if (Main.player[this.owner].controlDown)
					{
						num148 = Main.player[this.owner].position.Y + (float)Main.player[this.owner].height + 40f - vector13.Y;
						num147 -= 6f;
						num149 = 4;
					}
				}
				float num150 = (float)Math.Sqrt((double)(num147 * num147 + num148 * num148));
				num150 = (float)Math.Sqrt((double)(num147 * num147 + num148 * num148));
				if (this.type == 72 || this.type == 86 || this.type == 87)
				{
					num149 = 40;
				}
				if (num150 > 800f)
				{
					this.position.X = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - (float)(this.width / 2);
					this.position.Y = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - (float)(this.height / 2);
					return;
				}
				if (num150 > (float)num149)
				{
					num150 = num146 / num150;
					num147 *= num150;
					num148 *= num150;
					this.velocity.X = num147;
					this.velocity.Y = num148;
					return;
				}
				this.velocity.X = 0f;
				this.velocity.Y = 0f;
				return;
			}
			else if (this.aiStyle == 12)
			{
				if (this.type == 288 && this.localAI[0] == 0f)
				{
					this.localAI[0] = 1f;
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
				}
				if (this.type == 280 || this.type == 288)
				{
					this.scale -= 0.002f;
					if (this.scale <= 0f)
					{
						this.Kill();
					}
					if (this.type == 288)
					{
						this.ai[0] = 4f;
					}
					if (this.ai[0] <= 3f)
					{
						this.ai[0] += 1f;
						return;
					}
					this.velocity.Y = this.velocity.Y + 0.075f;
					for (int num151 = 0; num151 < 3; num151++)
					{
						float num152 = this.velocity.X / 3f * (float)num151;
						float num153 = this.velocity.Y / 3f * (float)num151;
						int num154 = 14;
						int num155 = Dust.NewDust(new Vector2(this.position.X + (float)num154, this.position.Y + (float)num154), this.width - num154 * 2, this.height - num154 * 2, 170, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num155].noGravity = true;
						Main.dust[num155].velocity *= 0.1f;
						Main.dust[num155].velocity += this.velocity * 0.5f;
						Dust expr_6AA0_cp_0 = Main.dust[num155];
						expr_6AA0_cp_0.position.X = expr_6AA0_cp_0.position.X - num152;
						Dust expr_6ABB_cp_0 = Main.dust[num155];
						expr_6ABB_cp_0.position.Y = expr_6ABB_cp_0.position.Y - num153;
					}
					if (Main.rand.Next(8) == 0)
					{
						int num156 = 16;
						int num157 = Dust.NewDust(new Vector2(this.position.X + (float)num156, this.position.Y + (float)num156), this.width - num156 * 2, this.height - num156 * 2, 170, 0f, 0f, 100, default(Color), 0.5f);
						Main.dust[num157].velocity *= 0.25f;
						Main.dust[num157].velocity += this.velocity * 0.5f;
						return;
					}
				}
				else
				{
					this.scale -= 0.02f;
					if (this.scale <= 0f)
					{
						this.Kill();
					}
					if (this.ai[0] > 3f)
					{
						this.velocity.Y = this.velocity.Y + 0.2f;
						for (int num158 = 0; num158 < 1; num158++)
						{
							for (int num159 = 0; num159 < 3; num159++)
							{
								float num160 = this.velocity.X / 3f * (float)num159;
								float num161 = this.velocity.Y / 3f * (float)num159;
								int num162 = 6;
								int num163 = Dust.NewDust(new Vector2(this.position.X + (float)num162, this.position.Y + (float)num162), this.width - num162 * 2, this.height - num162 * 2, 172, 0f, 0f, 100, default(Color), 1.2f);
								Main.dust[num163].noGravity = true;
								Main.dust[num163].velocity *= 0.3f;
								Main.dust[num163].velocity += this.velocity * 0.5f;
								Dust expr_6D06_cp_0 = Main.dust[num163];
								expr_6D06_cp_0.position.X = expr_6D06_cp_0.position.X - num160;
								Dust expr_6D21_cp_0 = Main.dust[num163];
								expr_6D21_cp_0.position.Y = expr_6D21_cp_0.position.Y - num161;
							}
							if (Main.rand.Next(8) == 0)
							{
								int num164 = 6;
								int num165 = Dust.NewDust(new Vector2(this.position.X + (float)num164, this.position.Y + (float)num164), this.width - num164 * 2, this.height - num164 * 2, 172, 0f, 0f, 100, default(Color), 0.75f);
								Main.dust[num165].velocity *= 0.5f;
								Main.dust[num165].velocity += this.velocity * 0.5f;
							}
						}
						return;
					}
					this.ai[0] += 1f;
					return;
				}
			}
			else if (this.aiStyle == 13)
			{
				if (Main.player[this.owner].dead)
				{
					this.Kill();
					return;
				}
				if (this.type != 481)
				{
					Main.player[this.owner].itemAnimation = 5;
					Main.player[this.owner].itemTime = 5;
				}
				if (this.alpha == 0)
				{
					if (this.position.X + (float)(this.width / 2) > Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2))
					{
						Main.player[this.owner].ChangeDir(1);
					}
					else
					{
						Main.player[this.owner].ChangeDir(-1);
					}
				}
				if (this.type == 481)
				{
					if (this.ai[0] == 0f)
					{
						this.extraUpdates = 0;
					}
					else
					{
						this.extraUpdates = 1;
					}
				}
				Vector2 vector14 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float num166 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector14.X;
				float num167 = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - vector14.Y;
				float num168 = (float)Math.Sqrt((double)(num166 * num166 + num167 * num167));
				if (this.ai[0] == 0f)
				{
					if (num168 > 700f)
					{
						this.ai[0] = 1f;
					}
					else if (this.type == 262 && num168 > 500f)
					{
						this.ai[0] = 1f;
					}
					else if (this.type == 271 && num168 > 200f)
					{
						this.ai[0] = 1f;
					}
					else if (this.type == 273 && num168 > 150f)
					{
						this.ai[0] = 1f;
					}
					else if (this.type == 481 && num168 > 350f)
					{
						this.ai[0] = 1f;
					}
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
					this.ai[1] += 1f;
					if (this.ai[1] > 5f)
					{
						this.alpha = 0;
					}
					if (this.type == 262 && this.ai[1] > 8f)
					{
						this.ai[1] = 8f;
					}
					if (this.type == 271 && this.ai[1] > 8f)
					{
						this.ai[1] = 8f;
					}
					if (this.type == 273 && this.ai[1] > 8f)
					{
						this.ai[1] = 8f;
					}
					if (this.type == 481 && this.ai[1] > 8f)
					{
						this.ai[1] = 8f;
					}
					if (this.type == 404 && this.ai[1] > 8f)
					{
						this.ai[1] = 0f;
					}
					if (this.ai[1] >= 10f)
					{
						this.ai[1] = 15f;
						this.velocity.Y = this.velocity.Y + 0.3f;
					}
					if (this.type == 262 && this.velocity.X < 0f)
					{
						this.spriteDirection = -1;
					}
					else if (this.type == 262)
					{
						this.spriteDirection = 1;
					}
					if (this.type == 271 && this.velocity.X < 0f)
					{
						this.spriteDirection = -1;
						return;
					}
					if (this.type == 271)
					{
						this.spriteDirection = 1;
						return;
					}
				}
				else if (this.ai[0] == 1f)
				{
					this.tileCollide = false;
					this.rotation = (float)Math.Atan2((double)num167, (double)num166) - 1.57f;
					float num169 = 20f;
					if (this.type == 262)
					{
						num169 = 30f;
					}
					if (num168 < 50f)
					{
						this.Kill();
					}
					num168 = num169 / num168;
					num166 *= num168;
					num167 *= num168;
					this.velocity.X = num166;
					this.velocity.Y = num167;
					if (this.type == 262 && this.velocity.X < 0f)
					{
						this.spriteDirection = 1;
					}
					else if (this.type == 262)
					{
						this.spriteDirection = -1;
					}
					if (this.type == 271 && this.velocity.X < 0f)
					{
						this.spriteDirection = 1;
						return;
					}
					if (this.type == 271)
					{
						this.spriteDirection = -1;
						return;
					}
				}
			}
			else if (this.aiStyle == 14)
			{
				if (this.type == 473 && Main.netMode != 2)
				{
					this.localAI[0] += 1f;
					if (this.localAI[0] >= 10f)
					{
						this.localAI[0] = 0f;
						int num170 = 30;
						if ((base.Center - Main.player[Main.myPlayer].Center).Length() < (float)(Main.screenWidth + num170 * 16))
						{
							int num171 = (int)base.Center.X / 16;
							int num172 = (int)base.Center.Y / 16;
							for (int num173 = num171 - num170; num173 <= num171 + num170; num173++)
							{
								for (int num174 = num172 - num170; num174 <= num172 + num170; num174++)
								{
									if (Main.rand.Next(4) == 0)
									{
										Vector2 vector15 = new Vector2((float)(num171 - num173), (float)(num172 - num174));
										if (vector15.Length() < (float)num170 && num173 > 0 && num173 < Main.maxTilesX - 1 && num174 > 0 && num174 < Main.maxTilesY - 1 && Main.tile[num173, num174] != null && Main.tile[num173, num174].active())
										{
											bool flag3 = false;
											if (Main.tile[num173, num174].type == 185 && Main.tile[num173, num174].frameY == 18)
											{
												if (Main.tile[num173, num174].frameX >= 576 && Main.tile[num173, num174].frameX <= 882)
												{
													flag3 = true;
												}
											}
											else if (Main.tile[num173, num174].type == 186 && Main.tile[num173, num174].frameX >= 864 && Main.tile[num173, num174].frameX <= 1170)
											{
												flag3 = true;
											}
											if (flag3 || Main.tileSpelunker[(int)Main.tile[num173, num174].type] || (Main.tileAlch[(int)Main.tile[num173, num174].type] && Main.tile[num173, num174].type != 82))
											{
												int num175 = Dust.NewDust(new Vector2((float)(num173 * 16), (float)(num174 * 16)), 16, 16, 204, 0f, 0f, 150, default(Color), 0.3f);
												Main.dust[num175].fadeIn = 0.75f;
												Main.dust[num175].velocity *= 0.1f;
												Main.dust[num175].noLight = true;
											}
										}
									}
								}
							}
						}
					}
				}
				if (this.type == 352)
				{
					if (this.localAI[1] == 0f)
					{
						this.localAI[1] = 1f;
					}
					this.alpha += (int)(25f * this.localAI[1]);
					if (this.alpha <= 0)
					{
						this.alpha = 0;
						this.localAI[1] = 1f;
					}
					else if (this.alpha >= 255)
					{
						this.alpha = 255;
						this.localAI[1] = -1f;
					}
					this.scale += this.localAI[1] * 0.01f;
				}
				if (this.type == 346)
				{
					if (this.localAI[0] == 0f)
					{
						this.localAI[0] = 1f;
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 1);
					}
					this.frame = (int)this.ai[1];
					if (this.owner == Main.myPlayer && this.timeLeft == 1)
					{
						for (int num176 = 0; num176 < 5; num176++)
						{
							float num177 = 10f;
							Vector2 vector16 = new Vector2(base.Center.X, base.Center.Y);
							float num178 = (float)Main.rand.Next(-20, 21);
							float num179 = (float)Main.rand.Next(-20, 0);
							float num180 = (float)Math.Sqrt((double)(num178 * num178 + num179 * num179));
							num180 = num177 / num180;
							num178 *= num180;
							num179 *= num180;
							num178 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
							num179 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
							Projectile.NewProjectile(vector16.X, vector16.Y, num178, num179, 347, 40, 0f, Main.myPlayer, 0f, this.ai[1]);
						}
					}
				}
				if (this.type == 196)
				{
					int num181 = Main.rand.Next(1, 3);
					for (int num182 = 0; num182 < num181; num182++)
					{
						int num183 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num183].alpha += Main.rand.Next(100);
						Main.dust[num183].velocity *= 0.3f;
						Dust expr_7947_cp_0 = Main.dust[num183];
						expr_7947_cp_0.velocity.X = expr_7947_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.025f;
						Dust expr_7975_cp_0 = Main.dust[num183];
						expr_7975_cp_0.velocity.Y = expr_7975_cp_0.velocity.Y - (0.4f + (float)Main.rand.Next(-3, 14) * 0.15f);
						Main.dust[num183].fadeIn = 1.25f + (float)Main.rand.Next(20) * 0.15f;
					}
				}
				if (this.type == 53)
				{
					try
					{
						int num184 = (int)(this.position.X / 16f) - 1;
						int num185 = (int)((this.position.X + (float)this.width) / 16f) + 2;
						int num186 = (int)(this.position.Y / 16f) - 1;
						int num187 = (int)((this.position.Y + (float)this.height) / 16f) + 2;
						if (num184 < 0)
						{
							num184 = 0;
						}
						if (num185 > Main.maxTilesX)
						{
							num185 = Main.maxTilesX;
						}
						if (num186 < 0)
						{
							num186 = 0;
						}
						if (num187 > Main.maxTilesY)
						{
							num187 = Main.maxTilesY;
						}
						for (int num188 = num184; num188 < num185; num188++)
						{
							for (int num189 = num186; num189 < num187; num189++)
							{
								if (Main.tile[num188, num189] != null && Main.tile[num188, num189].nactive() && (Main.tileSolid[(int)Main.tile[num188, num189].type] || (Main.tileSolidTop[(int)Main.tile[num188, num189].type] && Main.tile[num188, num189].frameY == 0)))
								{
									Vector2 vector17;
									vector17.X = (float)(num188 * 16);
									vector17.Y = (float)(num189 * 16);
									if (this.position.X + (float)this.width > vector17.X && this.position.X < vector17.X + 16f && this.position.Y + (float)this.height > vector17.Y && this.position.Y < vector17.Y + 16f)
									{
										this.velocity.X = 0f;
										this.velocity.Y = -0.2f;
									}
								}
							}
						}
					}
					catch
					{
					}
				}
				if (this.type == 277)
				{
					if (this.alpha > 0)
					{
						this.alpha -= 30;
						if (this.alpha < 0)
						{
							this.alpha = 0;
						}
					}
					if (Main.expertMode)
					{
						float scaleFactor = 12f;
						int num190 = (int)Player.FindClosest(base.Center, 1, 1);
						Vector2 value7 = Main.player[num190].Center - base.Center;
						value7.Normalize();
						value7 *= scaleFactor;
						int num191 = 200;
						this.velocity.X = (this.velocity.X * (float)(num191 - 1) + value7.X) / (float)num191;
						if (this.velocity.Length() > 16f)
						{
							this.velocity.Normalize();
							this.velocity *= 16f;
						}
					}
				}
				if (this.type == 261 || this.type == 277)
				{
					this.ai[0] += 1f;
					if (this.ai[0] > 15f)
					{
						this.ai[0] = 15f;
						if (this.velocity.Y == 0f && this.velocity.X != 0f)
						{
							this.velocity.X = this.velocity.X * 0.97f;
							if ((double)this.velocity.X > -0.01 && (double)this.velocity.X < 0.01)
							{
								this.Kill();
							}
						}
						this.velocity.Y = this.velocity.Y + 0.2f;
					}
					this.rotation += this.velocity.X * 0.05f;
				}
				else if (this.type == 378)
				{
					if (this.localAI[0] == 0f)
					{
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
						this.localAI[0] += 1f;
					}
					Rectangle rectangle2 = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
					for (int num192 = 0; num192 < 200; num192++)
					{
						if (Main.npc[num192].CanBeChasedBy(this, true))
						{
							Rectangle value8 = new Rectangle((int)Main.npc[num192].position.X, (int)Main.npc[num192].position.Y, Main.npc[num192].width, Main.npc[num192].height);
							if (rectangle2.Intersects(value8))
							{
								this.Kill();
								return;
							}
						}
					}
					this.ai[0] += 1f;
					if (this.ai[0] > 10f)
					{
						this.ai[0] = 90f;
						if (this.velocity.Y == 0f && this.velocity.X != 0f)
						{
							this.velocity.X = this.velocity.X * 0.96f;
							if ((double)this.velocity.X > -0.01 && (double)this.velocity.X < 0.01)
							{
								this.Kill();
							}
						}
						this.velocity.Y = this.velocity.Y + 0.2f;
					}
					this.rotation += this.velocity.X * 0.1f;
				}
				else if (this.type == 483)
				{
					this.ai[0] += 1f;
					if (this.ai[0] > 5f)
					{
						if (this.owner == Main.myPlayer && this.ai[0] > (float)Main.rand.Next(20, 130))
						{
							this.Kill();
						}
						if (this.velocity.Y == 0f && this.velocity.X != 0f)
						{
							this.velocity.X = this.velocity.X * 0.97f;
							if ((double)this.velocity.X > -0.01 && (double)this.velocity.X < 0.01)
							{
								this.velocity.X = 0f;
								this.netUpdate = true;
							}
						}
						this.velocity.Y = this.velocity.Y + 0.3f;
						this.velocity.X = this.velocity.X * 0.99f;
					}
					this.rotation += this.velocity.X * 0.05f;
				}
				else if (this.type == 538)
				{
					this.ai[0] += 1f;
					if (this.ai[0] > 60f || this.velocity.Y >= 0f)
					{
						this.alpha += 6;
						this.velocity *= 0.5f;
					}
					else if (this.ai[0] > 5f)
					{
						this.velocity.Y = this.velocity.Y + 0.1f;
						this.velocity.X = this.velocity.X * 1.025f;
						this.alpha -= 23;
						this.scale = 0.8f * (255f - (float)this.alpha) / 255f;
						if (this.alpha < 0)
						{
							this.alpha = 0;
						}
					}
					if (this.alpha >= 255 && this.ai[0] > 5f)
					{
						this.Kill();
						return;
					}
				}
				else
				{
					this.ai[0] += 1f;
					if (this.ai[0] > 5f)
					{
						this.ai[0] = 5f;
						if (this.velocity.Y == 0f && this.velocity.X != 0f)
						{
							this.velocity.X = this.velocity.X * 0.97f;
							if ((double)this.velocity.X > -0.01 && (double)this.velocity.X < 0.01)
							{
								this.velocity.X = 0f;
								this.netUpdate = true;
							}
						}
						this.velocity.Y = this.velocity.Y + 0.2f;
					}
					this.rotation += this.velocity.X * 0.1f;
				}
				if (this.type == 538)
				{
					if (this.localAI[1] == 0f)
					{
						this.localAI[1] = 1f;
						Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 7);
					}
					if (this.velocity.Y < 0f && this.ai[0] < 60f)
					{
						if (Main.rand.Next(4) == 0)
						{
							int num193 = Dust.NewDust(this.position, this.width, this.height, 180, 0f, 0f, 100, default(Color), 1f);
							Main.dust[num193].position = base.Center;
							Main.dust[num193].scale += (float)Main.rand.Next(50) * 0.01f;
							Main.dust[num193].noGravity = true;
							Dust expr_83FB_cp_0 = Main.dust[num193];
							expr_83FB_cp_0.velocity.Y = expr_83FB_cp_0.velocity.Y - 2f;
						}
						if (Main.rand.Next(6) == 0)
						{
							int num194 = Dust.NewDust(this.position, this.width, this.height, 176, 0f, 0f, 100, default(Color), 1f);
							Main.dust[num194].position = base.Center;
							Main.dust[num194].scale += 0.3f + (float)Main.rand.Next(50) * 0.01f;
							Main.dust[num194].noGravity = true;
							Main.dust[num194].velocity *= 0.1f;
						}
					}
				}
				if (this.type == 450)
				{
					if (this.ai[1] == 0f)
					{
						this.ai[1] = 1f;
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 13);
					}
					if (Main.rand.Next(2) == 0)
					{
						int num195 = Dust.NewDust(this.position, this.width, this.height, 228, 0f, 0f, 100, default(Color), 1f);
						Dust expr_856A_cp_0 = Main.dust[num195];
						expr_856A_cp_0.position.X = expr_856A_cp_0.position.X - 2f;
						Dust expr_8588_cp_0 = Main.dust[num195];
						expr_8588_cp_0.position.Y = expr_8588_cp_0.position.Y + 2f;
						Main.dust[num195].scale += (float)Main.rand.Next(50) * 0.01f;
						Main.dust[num195].noGravity = true;
						Dust expr_85DB_cp_0 = Main.dust[num195];
						expr_85DB_cp_0.velocity.Y = expr_85DB_cp_0.velocity.Y - 2f;
					}
					if (Main.rand.Next(4) == 0)
					{
						int num196 = Dust.NewDust(this.position, this.width, this.height, 228, 0f, 0f, 100, default(Color), 1f);
						Dust expr_8646_cp_0 = Main.dust[num196];
						expr_8646_cp_0.position.X = expr_8646_cp_0.position.X - 2f;
						Dust expr_8664_cp_0 = Main.dust[num196];
						expr_8664_cp_0.position.Y = expr_8664_cp_0.position.Y + 2f;
						Main.dust[num196].scale += 0.3f + (float)Main.rand.Next(50) * 0.01f;
						Main.dust[num196].noGravity = true;
						Main.dust[num196].velocity *= 0.1f;
					}
					if (++this.frameCounter >= 3)
					{
						this.frameCounter = 0;
						if (++this.frame >= 5)
						{
							this.frame = 0;
						}
					}
					if ((double)this.velocity.Y < 0.25 && (double)this.velocity.Y > 0.15)
					{
						this.velocity.X = this.velocity.X * 0.8f;
					}
					this.rotation = -this.velocity.X * 0.05f;
				}
				if (this.type == 480)
				{
					this.alpha = 255;
					int num197 = Dust.NewDust(this.position, this.width, this.height, 75, 0f, 0f, 100, default(Color), 1f);
					Dust expr_87CE_cp_0 = Main.dust[num197];
					expr_87CE_cp_0.position.X = expr_87CE_cp_0.position.X - 2f;
					Dust expr_87EC_cp_0 = Main.dust[num197];
					expr_87EC_cp_0.position.Y = expr_87EC_cp_0.position.Y + 2f;
					Main.dust[num197].scale += (float)Main.rand.Next(50) * 0.01f;
					Main.dust[num197].noGravity = true;
					Dust expr_883F_cp_0 = Main.dust[num197];
					expr_883F_cp_0.velocity.Y = expr_883F_cp_0.velocity.Y - 2f;
					if (Main.rand.Next(2) == 0)
					{
						int num198 = Dust.NewDust(this.position, this.width, this.height, 75, 0f, 0f, 100, default(Color), 1f);
						Dust expr_88A7_cp_0 = Main.dust[num198];
						expr_88A7_cp_0.position.X = expr_88A7_cp_0.position.X - 2f;
						Dust expr_88C5_cp_0 = Main.dust[num198];
						expr_88C5_cp_0.position.Y = expr_88C5_cp_0.position.Y + 2f;
						Main.dust[num198].scale += 0.3f + (float)Main.rand.Next(50) * 0.01f;
						Main.dust[num198].noGravity = true;
						Main.dust[num198].velocity *= 0.1f;
					}
				}
				if ((this.type >= 326 && this.type <= 328) || (this.type >= 400 && this.type <= 402))
				{
					if (this.wet)
					{
						this.Kill();
					}
					if (this.ai[1] == 0f && this.type >= 326 && this.type <= 328)
					{
						this.ai[1] = 1f;
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 13);
					}
					int num199 = Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 100, default(Color), 1f);
					Dust expr_8A12_cp_0 = Main.dust[num199];
					expr_8A12_cp_0.position.X = expr_8A12_cp_0.position.X - 2f;
					Dust expr_8A30_cp_0 = Main.dust[num199];
					expr_8A30_cp_0.position.Y = expr_8A30_cp_0.position.Y + 2f;
					Main.dust[num199].scale += (float)Main.rand.Next(50) * 0.01f;
					Main.dust[num199].noGravity = true;
					Dust expr_8A83_cp_0 = Main.dust[num199];
					expr_8A83_cp_0.velocity.Y = expr_8A83_cp_0.velocity.Y - 2f;
					if (Main.rand.Next(2) == 0)
					{
						int num200 = Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 100, default(Color), 1f);
						Dust expr_8AEA_cp_0 = Main.dust[num200];
						expr_8AEA_cp_0.position.X = expr_8AEA_cp_0.position.X - 2f;
						Dust expr_8B08_cp_0 = Main.dust[num200];
						expr_8B08_cp_0.position.Y = expr_8B08_cp_0.position.Y + 2f;
						Main.dust[num200].scale += 0.3f + (float)Main.rand.Next(50) * 0.01f;
						Main.dust[num200].noGravity = true;
						Main.dust[num200].velocity *= 0.1f;
					}
					if ((double)this.velocity.Y < 0.25 && (double)this.velocity.Y > 0.15)
					{
						this.velocity.X = this.velocity.X * 0.8f;
					}
					this.rotation = -this.velocity.X * 0.05f;
				}
				if (this.velocity.Y > 16f)
				{
					this.velocity.Y = 16f;
					return;
				}
			}
			else if (this.aiStyle == 15)
			{
				if (this.type == 25)
				{
					if (Main.rand.Next(15) == 0)
					{
						Dust.NewDust(this.position, this.width, this.height, 14, 0f, 0f, 150, default(Color), 1.3f);
					}
				}
				else if (this.type == 26)
				{
					int num201 = Dust.NewDust(this.position, this.width, this.height, 172, this.velocity.X * 0.4f, this.velocity.Y * 0.4f, 100, default(Color), 1.5f);
					Main.dust[num201].noGravity = true;
					Dust expr_8CDA_cp_0 = Main.dust[num201];
					expr_8CDA_cp_0.velocity.X = expr_8CDA_cp_0.velocity.X / 2f;
					Dust expr_8CF8_cp_0 = Main.dust[num201];
					expr_8CF8_cp_0.velocity.Y = expr_8CF8_cp_0.velocity.Y / 2f;
				}
				else if (this.type == 35)
				{
					int num202 = Dust.NewDust(this.position, this.width, this.height, 6, this.velocity.X * 0.4f, this.velocity.Y * 0.4f, 100, default(Color), 3f);
					Main.dust[num202].noGravity = true;
					Dust expr_8D87_cp_0 = Main.dust[num202];
					expr_8D87_cp_0.velocity.X = expr_8D87_cp_0.velocity.X * 2f;
					Dust expr_8DA5_cp_0 = Main.dust[num202];
					expr_8DA5_cp_0.velocity.Y = expr_8DA5_cp_0.velocity.Y * 2f;
				}
				else if (this.type == 154)
				{
					int num203 = Dust.NewDust(this.position, this.width, this.height, 115, this.velocity.X * 0.4f, this.velocity.Y * 0.4f, 140, default(Color), 1.5f);
					Main.dust[num203].noGravity = true;
					Main.dust[num203].velocity *= 0.25f;
				}
				if (Main.player[this.owner].dead)
				{
					this.Kill();
					return;
				}
				Main.player[this.owner].itemAnimation = 10;
				Main.player[this.owner].itemTime = 10;
				if (this.position.X + (float)(this.width / 2) > Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2))
				{
					Main.player[this.owner].ChangeDir(1);
					this.direction = 1;
				}
				else
				{
					Main.player[this.owner].ChangeDir(-1);
					this.direction = -1;
				}
				Vector2 mountedCenter2 = Main.player[this.owner].MountedCenter;
				Vector2 vector18 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float num204 = mountedCenter2.X - vector18.X;
				float num205 = mountedCenter2.Y - vector18.Y;
				float num206 = (float)Math.Sqrt((double)(num204 * num204 + num205 * num205));
				if (this.ai[0] == 0f)
				{
					float num207 = 160f;
					if (this.type == 63)
					{
						num207 *= 1.5f;
					}
					if (this.type == 247)
					{
						num207 *= 1.5f;
					}
					this.tileCollide = true;
					if (num206 > num207)
					{
						this.ai[0] = 1f;
						this.netUpdate = true;
					}
					else if (!Main.player[this.owner].channel)
					{
						if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y * 0.9f;
						}
						this.velocity.Y = this.velocity.Y + 1f;
						this.velocity.X = this.velocity.X * 0.9f;
					}
				}
				else if (this.ai[0] == 1f)
				{
					float num208 = 14f / Main.player[this.owner].meleeSpeed;
					float num209 = 0.9f / Main.player[this.owner].meleeSpeed;
					float num210 = 300f;
					if (this.type == 63)
					{
						num210 *= 1.5f;
						num208 *= 1.5f;
						num209 *= 1.5f;
					}
					if (this.type == 247)
					{
						num210 *= 1.5f;
						num208 = 15.9f;
						num209 *= 2f;
					}
					Math.Abs(num204);
					Math.Abs(num205);
					if (this.ai[1] == 1f)
					{
						this.tileCollide = false;
					}
					if (!Main.player[this.owner].channel || num206 > num210 || !this.tileCollide)
					{
						this.ai[1] = 1f;
						if (this.tileCollide)
						{
							this.netUpdate = true;
						}
						this.tileCollide = false;
						if (num206 < 20f)
						{
							this.Kill();
						}
					}
					if (!this.tileCollide)
					{
						num209 *= 2f;
					}
					int num211 = 60;
					if (this.type == 247)
					{
						num211 = 100;
					}
					if (num206 > (float)num211 || !this.tileCollide)
					{
						num206 = num208 / num206;
						num204 *= num206;
						num205 *= num206;
						new Vector2(this.velocity.X, this.velocity.Y);
						float num212 = num204 - this.velocity.X;
						float num213 = num205 - this.velocity.Y;
						float num214 = (float)Math.Sqrt((double)(num212 * num212 + num213 * num213));
						num214 = num209 / num214;
						num212 *= num214;
						num213 *= num214;
						this.velocity.X = this.velocity.X * 0.98f;
						this.velocity.Y = this.velocity.Y * 0.98f;
						this.velocity.X = this.velocity.X + num212;
						this.velocity.Y = this.velocity.Y + num213;
					}
					else
					{
						if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) < 6f)
						{
							this.velocity.X = this.velocity.X * 0.96f;
							this.velocity.Y = this.velocity.Y + 0.2f;
						}
						if (Main.player[this.owner].velocity.X == 0f)
						{
							this.velocity.X = this.velocity.X * 0.96f;
						}
					}
				}
				if (this.type != 247)
				{
					this.rotation = (float)Math.Atan2((double)num205, (double)num204) - this.velocity.X * 0.1f;
					return;
				}
				if (this.velocity.X < 0f)
				{
					this.rotation -= (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) * 0.01f;
				}
				else
				{
					this.rotation += (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) * 0.01f;
				}
				float num215 = this.position.X;
				float num216 = this.position.Y;
				float num217 = 600f;
				bool flag4 = false;
				if (this.owner == Main.myPlayer)
				{
					this.localAI[1] += 1f;
					if (this.localAI[1] > 20f)
					{
						this.localAI[1] = 20f;
						for (int num218 = 0; num218 < 200; num218++)
						{
							if (Main.npc[num218].CanBeChasedBy(this, false))
							{
								float num219 = Main.npc[num218].position.X + (float)(Main.npc[num218].width / 2);
								float num220 = Main.npc[num218].position.Y + (float)(Main.npc[num218].height / 2);
								float num221 = Math.Abs(this.position.X + (float)(this.width / 2) - num219) + Math.Abs(this.position.Y + (float)(this.height / 2) - num220);
								if (num221 < num217 && Collision.CanHit(this.position, this.width, this.height, Main.npc[num218].position, Main.npc[num218].width, Main.npc[num218].height))
								{
									num217 = num221;
									num215 = num219;
									num216 = num220;
									flag4 = true;
								}
							}
						}
					}
				}
				if (flag4)
				{
					this.localAI[1] = 0f;
					float num222 = 14f;
					vector18 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					num204 = num215 - vector18.X;
					num205 = num216 - vector18.Y;
					num206 = (float)Math.Sqrt((double)(num204 * num204 + num205 * num205));
					num206 = num222 / num206;
					num204 *= num206;
					num205 *= num206;
					Projectile.NewProjectile(vector18.X, vector18.Y, num204, num205, 248, (int)((double)this.damage / 1.5), this.knockBack / 2f, Main.myPlayer, 0f, 0f);
					return;
				}
			}
			else if (this.aiStyle == 16)
			{
				if (this.type == 108 || this.type == 164)
				{
					this.ai[0] += 1f;
					if (this.ai[0] > 3f)
					{
						this.Kill();
					}
				}
				if (this.type != 37 && this.type != 397 && this.type != 470)
				{
					if (this.type != 519)
					{
						goto IL_996C;
					}
				}
				try
				{
					int num223 = (int)(this.position.X / 16f) - 1;
					int num224 = (int)((this.position.X + (float)this.width) / 16f) + 2;
					int num225 = (int)(this.position.Y / 16f) - 1;
					int num226 = (int)((this.position.Y + (float)this.height) / 16f) + 2;
					if (num223 < 0)
					{
						num223 = 0;
					}
					if (num224 > Main.maxTilesX)
					{
						num224 = Main.maxTilesX;
					}
					if (num225 < 0)
					{
						num225 = 0;
					}
					if (num226 > Main.maxTilesY)
					{
						num226 = Main.maxTilesY;
					}
					for (int num227 = num223; num227 < num224; num227++)
					{
						for (int num228 = num225; num228 < num226; num228++)
						{
							if (Main.tile[num227, num228] != null && Main.tile[num227, num228].nactive() && (Main.tileSolid[(int)Main.tile[num227, num228].type] || (Main.tileSolidTop[(int)Main.tile[num227, num228].type] && Main.tile[num227, num228].frameY == 0)))
							{
								Vector2 vector19;
								vector19.X = (float)(num227 * 16);
								vector19.Y = (float)(num228 * 16);
								if (this.position.X + (float)this.width - 4f > vector19.X && this.position.X + 4f < vector19.X + 16f && this.position.Y + (float)this.height - 4f > vector19.Y && this.position.Y + 4f < vector19.Y + 16f)
								{
									this.velocity.X = 0f;
									this.velocity.Y = -0.2f;
								}
							}
						}
					}
				}
				catch
				{
				}
				IL_996C:
				if (this.type == 519)
				{
					this.localAI[1] += 1f;
					float num229 = 180f - this.localAI[1];
					if (num229 < 0f)
					{
						num229 = 0f;
					}
					this.frameCounter++;
					if (num229 < 15f)
					{
						this.frameCounter++;
					}
					if ((float)this.frameCounter >= (num229 / 10f + 6f) / 2f)
					{
						this.frame++;
						this.frameCounter = 0;
						if (this.frame >= Main.projFrames[this.type])
						{
							this.frame = 0;
						}
					}
				}
				if (this.type == 102)
				{
					if (this.velocity.Y > 10f)
					{
						this.velocity.Y = 10f;
					}
					if (this.localAI[0] == 0f)
					{
						this.localAI[0] = 1f;
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
					}
					this.frameCounter++;
					if (this.frameCounter > 3)
					{
						this.frame++;
						this.frameCounter = 0;
					}
					if (this.frame > 1)
					{
						this.frame = 0;
					}
					if (this.velocity.Y == 0f)
					{
						this.position.X = this.position.X + (float)(this.width / 2);
						this.position.Y = this.position.Y + (float)(this.height / 2);
						this.width = 128;
						this.height = 128;
						this.position.X = this.position.X - (float)(this.width / 2);
						this.position.Y = this.position.Y - (float)(this.height / 2);
						this.damage = 40;
						this.knockBack = 8f;
						this.timeLeft = 3;
						this.netUpdate = true;
					}
				}
				if (this.type == 303 && this.timeLeft <= 3 && this.hostile)
				{
					this.position.X = this.position.X + (float)(this.width / 2);
					this.position.Y = this.position.Y + (float)(this.height / 2);
					this.width = 128;
					this.height = 128;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y - (float)(this.height / 2);
				}
				if (this.owner == Main.myPlayer && this.timeLeft <= 3)
				{
					this.tileCollide = false;
					this.ai[1] = 0f;
					this.alpha = 255;
					if (this.type == 28 || this.type == 37 || this.type == 75 || this.type == 516 || this.type == 519)
					{
						this.position.X = this.position.X + (float)(this.width / 2);
						this.position.Y = this.position.Y + (float)(this.height / 2);
						this.width = 128;
						this.height = 128;
						this.position.X = this.position.X - (float)(this.width / 2);
						this.position.Y = this.position.Y - (float)(this.height / 2);
						this.damage = 100;
						this.knockBack = 8f;
					}
					else if (this.type == 29 || this.type == 470 || this.type == 637)
					{
						this.position.X = this.position.X + (float)(this.width / 2);
						this.position.Y = this.position.Y + (float)(this.height / 2);
						this.width = 250;
						this.height = 250;
						this.position.X = this.position.X - (float)(this.width / 2);
						this.position.Y = this.position.Y - (float)(this.height / 2);
						this.damage = 250;
						this.knockBack = 10f;
					}
					else if (this.type == 30 || this.type == 397 || this.type == 517 || this.type == 588)
					{
						this.position.X = this.position.X + (float)(this.width / 2);
						this.position.Y = this.position.Y + (float)(this.height / 2);
						this.width = 128;
						this.height = 128;
						this.position.X = this.position.X - (float)(this.width / 2);
						this.position.Y = this.position.Y - (float)(this.height / 2);
						this.knockBack = 8f;
					}
					else if (this.type == 133 || this.type == 134 || this.type == 135 || this.type == 136 || this.type == 137 || this.type == 138 || this.type == 338 || this.type == 339)
					{
						this.position.X = this.position.X + (float)(this.width / 2);
						this.position.Y = this.position.Y + (float)(this.height / 2);
						this.width = 128;
						this.height = 128;
						this.position.X = this.position.X - (float)(this.width / 2);
						this.position.Y = this.position.Y - (float)(this.height / 2);
						this.knockBack = 8f;
					}
					else if (this.type == 139 || this.type == 140 || this.type == 141 || this.type == 142 || this.type == 143 || this.type == 144 || this.type == 340 || this.type == 341)
					{
						this.position.X = this.position.X + (float)(this.width / 2);
						this.position.Y = this.position.Y + (float)(this.height / 2);
						this.width = 200;
						this.height = 200;
						this.position.X = this.position.X - (float)(this.width / 2);
						this.position.Y = this.position.Y - (float)(this.height / 2);
						this.knockBack = 10f;
					}
				}
				else
				{
					if (this.type != 30 && this.type != 517 && this.type != 588 && this.type != 397 && this.type != 108 && this.type != 133 && this.type != 134 && this.type != 135 && this.type != 136 && this.type != 137 && this.type != 138 && this.type != 139 && this.type != 140 && this.type != 141 && this.type != 142 && this.type != 143 && this.type != 144 && this.type != 164 && this.type != 303 && this.type < 338 && this.type < 341)
					{
						this.damage = 0;
					}
					if (this.type == 338 || this.type == 339 || this.type == 340 || this.type == 341)
					{
						this.localAI[1] += 1f;
						if (this.localAI[1] > 6f)
						{
							this.alpha = 0;
						}
						else
						{
							this.alpha = (int)(255f - 42f * this.localAI[1]) + 100;
							if (this.alpha > 255)
							{
								this.alpha = 255;
							}
						}
						for (int num230 = 0; num230 < 2; num230++)
						{
							float num231 = 0f;
							float num232 = 0f;
							if (num230 == 1)
							{
								num231 = this.velocity.X * 0.5f;
								num232 = this.velocity.Y * 0.5f;
							}
							if (this.localAI[1] > 9f)
							{
								if (Main.rand.Next(2) == 0)
								{
									int num233 = Dust.NewDust(new Vector2(this.position.X + 3f + num231, this.position.Y + 3f + num232) - this.velocity * 0.5f, this.width - 8, this.height - 8, 6, 0f, 0f, 100, default(Color), 1f);
									Main.dust[num233].scale *= 1.4f + (float)Main.rand.Next(10) * 0.1f;
									Main.dust[num233].velocity *= 0.2f;
									Main.dust[num233].noGravity = true;
								}
								if (Main.rand.Next(2) == 0)
								{
									int num234 = Dust.NewDust(new Vector2(this.position.X + 3f + num231, this.position.Y + 3f + num232) - this.velocity * 0.5f, this.width - 8, this.height - 8, 31, 0f, 0f, 100, default(Color), 0.5f);
									Main.dust[num234].fadeIn = 0.5f + (float)Main.rand.Next(5) * 0.1f;
									Main.dust[num234].velocity *= 0.05f;
								}
							}
						}
						float num235 = this.position.X;
						float num236 = this.position.Y;
						float num237 = 600f;
						bool flag5 = false;
						this.ai[0] += 1f;
						if (this.ai[0] > 30f)
						{
							this.ai[0] = 30f;
							for (int num238 = 0; num238 < 200; num238++)
							{
								if (Main.npc[num238].CanBeChasedBy(this, false))
								{
									float num239 = Main.npc[num238].position.X + (float)(Main.npc[num238].width / 2);
									float num240 = Main.npc[num238].position.Y + (float)(Main.npc[num238].height / 2);
									float num241 = Math.Abs(this.position.X + (float)(this.width / 2) - num239) + Math.Abs(this.position.Y + (float)(this.height / 2) - num240);
									if (num241 < num237 && Collision.CanHit(this.position, this.width, this.height, Main.npc[num238].position, Main.npc[num238].width, Main.npc[num238].height))
									{
										num237 = num241;
										num235 = num239;
										num236 = num240;
										flag5 = true;
									}
								}
							}
						}
						if (!flag5)
						{
							num235 = this.position.X + (float)(this.width / 2) + this.velocity.X * 100f;
							num236 = this.position.Y + (float)(this.height / 2) + this.velocity.Y * 100f;
						}
						float num242 = 16f;
						Vector2 vector20 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num243 = num235 - vector20.X;
						float num244 = num236 - vector20.Y;
						float num245 = (float)Math.Sqrt((double)(num243 * num243 + num244 * num244));
						num245 = num242 / num245;
						num243 *= num245;
						num244 *= num245;
						this.velocity.X = (this.velocity.X * 11f + num243) / 12f;
						this.velocity.Y = (this.velocity.Y * 11f + num244) / 12f;
					}
					else if (this.type == 134 || this.type == 137 || this.type == 140 || this.type == 143 || this.type == 303)
					{
						if (Math.Abs(this.velocity.X) >= 8f || Math.Abs(this.velocity.Y) >= 8f)
						{
							for (int num246 = 0; num246 < 2; num246++)
							{
								float num247 = 0f;
								float num248 = 0f;
								if (num246 == 1)
								{
									num247 = this.velocity.X * 0.5f;
									num248 = this.velocity.Y * 0.5f;
								}
								int num249 = Dust.NewDust(new Vector2(this.position.X + 3f + num247, this.position.Y + 3f + num248) - this.velocity * 0.5f, this.width - 8, this.height - 8, 6, 0f, 0f, 100, default(Color), 1f);
								Main.dust[num249].scale *= 2f + (float)Main.rand.Next(10) * 0.1f;
								Main.dust[num249].velocity *= 0.2f;
								Main.dust[num249].noGravity = true;
								num249 = Dust.NewDust(new Vector2(this.position.X + 3f + num247, this.position.Y + 3f + num248) - this.velocity * 0.5f, this.width - 8, this.height - 8, 31, 0f, 0f, 100, default(Color), 0.5f);
								Main.dust[num249].fadeIn = 1f + (float)Main.rand.Next(5) * 0.1f;
								Main.dust[num249].velocity *= 0.05f;
							}
						}
						if (Math.Abs(this.velocity.X) < 15f && Math.Abs(this.velocity.Y) < 15f)
						{
							this.velocity *= 1.1f;
						}
					}
					else if (this.type == 133 || this.type == 136 || this.type == 139 || this.type == 142)
					{
						int num250 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num250].scale *= 1f + (float)Main.rand.Next(10) * 0.1f;
						Main.dust[num250].velocity *= 0.2f;
						Main.dust[num250].noGravity = true;
					}
					else if (this.type == 135 || this.type == 138 || this.type == 141 || this.type == 144)
					{
						if ((double)this.velocity.X > -0.2 && (double)this.velocity.X < 0.2 && (double)this.velocity.Y > -0.2 && (double)this.velocity.Y < 0.2)
						{
							this.alpha += 2;
							if (this.alpha > 200)
							{
								this.alpha = 200;
							}
						}
						else
						{
							this.alpha = 0;
							int num251 = Dust.NewDust(new Vector2(this.position.X + 3f, this.position.Y + 3f) - this.velocity * 0.5f, this.width - 8, this.height - 8, 31, 0f, 0f, 100, default(Color), 1f);
							Main.dust[num251].scale *= 1.6f + (float)Main.rand.Next(5) * 0.1f;
							Main.dust[num251].velocity *= 0.05f;
							Main.dust[num251].noGravity = true;
						}
					}
					else if (this.type != 30 && this.type != 517 && this.type != 397 && this.type != 519 && this.type != 588 && Main.rand.Next(2) == 0)
					{
						int num252 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num252].scale = 0.1f + (float)Main.rand.Next(5) * 0.1f;
						Main.dust[num252].fadeIn = 1.5f + (float)Main.rand.Next(5) * 0.1f;
						Main.dust[num252].noGravity = true;
						Main.dust[num252].position = base.Center + new Vector2(0f, (float)(-(float)this.height / 2)).RotatedBy((double)this.rotation, default(Vector2)) * 1.1f;
						Main.rand.Next(2);
						num252 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num252].scale = 1f + (float)Main.rand.Next(5) * 0.1f;
						Main.dust[num252].noGravity = true;
						Main.dust[num252].position = base.Center + new Vector2(0f, (float)(-(float)this.height / 2 - 6)).RotatedBy((double)this.rotation, default(Vector2)) * 1.1f;
					}
				}
				this.ai[0] += 1f;
				if (this.type == 338 || this.type == 339 || this.type == 340 || this.type == 341)
				{
					if (this.velocity.X < 0f)
					{
						this.spriteDirection = -1;
						this.rotation = (float)Math.Atan2((double)(-(double)this.velocity.Y), (double)(-(double)this.velocity.X)) - 1.57f;
					}
					else
					{
						this.spriteDirection = 1;
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
					}
				}
				else if (this.type == 134 || this.type == 137 || this.type == 140 || this.type == 143 || this.type == 303)
				{
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
				}
				else if (this.type == 135 || this.type == 138 || this.type == 141 || this.type == 144)
				{
					this.velocity.Y = this.velocity.Y + 0.2f;
					this.velocity *= 0.97f;
					if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
					{
						this.velocity.X = 0f;
					}
					if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
					{
						this.velocity.Y = 0f;
					}
				}
				else if (this.type == 133 || this.type == 136 || this.type == 139 || this.type == 142)
				{
					if (this.ai[0] > 15f)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity.X = this.velocity.X * 0.95f;
						}
						this.velocity.Y = this.velocity.Y + 0.2f;
					}
				}
				else if (((this.type == 30 || this.type == 397 || this.type == 517 || this.type == 588) && this.ai[0] > 10f) || (this.type != 30 && this.type != 397 && this.type != 517 && this.type != 588 && this.ai[0] > 5f))
				{
					this.ai[0] = 10f;
					if (this.velocity.Y == 0f && this.velocity.X != 0f)
					{
						this.velocity.X = this.velocity.X * 0.97f;
						if (this.type == 29 || this.type == 470 || this.type == 637)
						{
							this.velocity.X = this.velocity.X * 0.99f;
						}
						if ((double)this.velocity.X > -0.01 && (double)this.velocity.X < 0.01)
						{
							this.velocity.X = 0f;
							this.netUpdate = true;
						}
					}
					this.velocity.Y = this.velocity.Y + 0.2f;
				}
				if (this.type == 519)
				{
					this.rotation += this.velocity.X * 0.06f;
					return;
				}
				if (this.type != 134 && this.type != 137 && this.type != 140 && this.type != 143 && this.type != 303 && (this.type < 338 || this.type > 341))
				{
					this.rotation += this.velocity.X * 0.1f;
					return;
				}
			}
			else if (this.aiStyle == 17)
			{
				if (this.velocity.Y == 0f)
				{
					this.velocity.X = this.velocity.X * 0.98f;
				}
				this.rotation += this.velocity.X * 0.1f;
				this.velocity.Y = this.velocity.Y + 0.2f;
				if (this.owner == Main.myPlayer)
				{
					int num253 = (int)((this.position.X + (float)(this.width / 2)) / 16f);
					int num254 = (int)((this.position.Y + (float)this.height - 4f) / 16f);
					if (Main.tile[num253, num254] != null && !Main.tile[num253, num254].active())
					{
						int num255 = 0;
						if (this.type >= 201 && this.type <= 205)
						{
							num255 = this.type - 200;
						}
						if (this.type >= 527 && this.type <= 531)
						{
							num255 = this.type - 527 + 6;
						}
						WorldGen.PlaceTile(num253, num254, 85, false, false, this.owner, num255);
						if (Main.tile[num253, num254].active())
						{
							if (Main.netMode != 0)
							{
								NetMessage.SendData(17, -1, -1, "", 1, (float)num253, (float)num254, 85f, num255, 0, 0);
							}
							int num256 = Sign.ReadSign(num253, num254, true);
							if (num256 >= 0)
							{
								Sign.TextSign(num256, this.miscText);
							}
							this.Kill();
							return;
						}
					}
				}
			}
			else if (this.aiStyle == 18)
			{
				if (this.ai[1] == 0f && this.type == 44)
				{
					this.ai[1] = 1f;
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
				}
				if (this.type != 263 && this.type != 274)
				{
					this.rotation += (float)this.direction * 0.8f;
					this.ai[0] += 1f;
					if (this.ai[0] >= 30f)
					{
						if (this.ai[0] < 100f)
						{
							this.velocity *= 1.06f;
						}
						else
						{
							this.ai[0] = 200f;
						}
					}
					for (int num257 = 0; num257 < 2; num257++)
					{
						int num258 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num258].noGravity = true;
					}
					return;
				}
				if (this.type == 274 && this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
				}
				this.rotation += (float)this.direction * 0.05f;
				this.rotation += (float)this.direction * 0.5f * ((float)this.timeLeft / 180f);
				if (this.type == 274)
				{
					this.velocity *= 0.96f;
					return;
				}
				this.velocity *= 0.95f;
				return;
			}
			else if (this.aiStyle == 19)
			{
				Vector2 vector21 = Main.player[this.owner].RotatedRelativePoint(Main.player[this.owner].MountedCenter, true);
				this.direction = Main.player[this.owner].direction;
				Main.player[this.owner].heldProj = this.whoAmI;
				Main.player[this.owner].itemTime = Main.player[this.owner].itemAnimation;
				this.position.X = vector21.X - (float)(this.width / 2);
				this.position.Y = vector21.Y - (float)(this.height / 2);
				if (!Main.player[this.owner].frozen)
				{
					if (this.type == 46)
					{
						if (this.ai[0] == 0f)
						{
							this.ai[0] = 3f;
							this.netUpdate = true;
						}
						if (Main.player[this.owner].itemAnimation < Main.player[this.owner].itemAnimationMax / 3)
						{
							this.ai[0] -= 1.6f;
						}
						else
						{
							this.ai[0] += 1.4f;
						}
					}
					else if (this.type == 105)
					{
						if (this.ai[0] == 0f)
						{
							this.ai[0] = 3f;
							this.netUpdate = true;
						}
						if (Main.player[this.owner].itemAnimation < Main.player[this.owner].itemAnimationMax / 3)
						{
							this.ai[0] -= 2.4f;
						}
						else
						{
							this.ai[0] += 2.1f;
						}
					}
					else if (this.type == 367)
					{
						this.spriteDirection = -this.direction;
						if (this.ai[0] == 0f)
						{
							this.ai[0] = 3f;
							this.netUpdate = true;
						}
						if (Main.player[this.owner].itemAnimation < Main.player[this.owner].itemAnimationMax / 3)
						{
							this.ai[0] -= 1.6f;
						}
						else
						{
							this.ai[0] += 1.5f;
						}
					}
					else if (this.type == 368)
					{
						this.spriteDirection = -this.direction;
						if (this.ai[0] == 0f)
						{
							this.ai[0] = 3f;
							this.netUpdate = true;
						}
						if (Main.player[this.owner].itemAnimation < Main.player[this.owner].itemAnimationMax / 3)
						{
							this.ai[0] -= 1.5f;
						}
						else
						{
							this.ai[0] += 1.4f;
						}
					}
					else if (this.type == 222)
					{
						if (this.ai[0] == 0f)
						{
							this.ai[0] = 3f;
							this.netUpdate = true;
						}
						if (Main.player[this.owner].itemAnimation < Main.player[this.owner].itemAnimationMax / 3)
						{
							this.ai[0] -= 2.4f;
							if (this.localAI[0] == 0f && Main.myPlayer == this.owner)
							{
								this.localAI[0] = 1f;
								Projectile.NewProjectile(base.Center.X + this.velocity.X * this.ai[0], base.Center.Y + this.velocity.Y * this.ai[0], this.velocity.X, this.velocity.Y, 228, this.damage, this.knockBack, this.owner, 0f, 0f);
							}
						}
						else
						{
							this.ai[0] += 2.1f;
						}
					}
					else if (this.type == 342)
					{
						if (this.ai[0] == 0f)
						{
							this.ai[0] = 3f;
							this.netUpdate = true;
						}
						if (Main.player[this.owner].itemAnimation < Main.player[this.owner].itemAnimationMax / 3)
						{
							this.ai[0] -= 2.4f;
							if (this.localAI[0] == 0f && Main.myPlayer == this.owner)
							{
								this.localAI[0] = 1f;
								if (Collision.CanHit(Main.player[this.owner].position, Main.player[this.owner].width, Main.player[this.owner].height, new Vector2(base.Center.X + this.velocity.X * this.ai[0], base.Center.Y + this.velocity.Y * this.ai[0]), this.width, this.height))
								{
									Projectile.NewProjectile(base.Center.X + this.velocity.X * this.ai[0], base.Center.Y + this.velocity.Y * this.ai[0], this.velocity.X * 2.4f, this.velocity.Y * 2.4f, 343, (int)((double)this.damage * 0.8), this.knockBack * 0.85f, this.owner, 0f, 0f);
								}
							}
						}
						else
						{
							this.ai[0] += 2.1f;
						}
					}
					else if (this.type == 47)
					{
						if (this.ai[0] == 0f)
						{
							this.ai[0] = 4f;
							this.netUpdate = true;
						}
						if (Main.player[this.owner].itemAnimation < Main.player[this.owner].itemAnimationMax / 3)
						{
							this.ai[0] -= 1.2f;
						}
						else
						{
							this.ai[0] += 0.9f;
						}
					}
					else if (this.type == 153)
					{
						this.spriteDirection = -this.direction;
						if (this.ai[0] == 0f)
						{
							this.ai[0] = 4f;
							this.netUpdate = true;
						}
						if (Main.player[this.owner].itemAnimation < Main.player[this.owner].itemAnimationMax / 3)
						{
							this.ai[0] -= 1.5f;
						}
						else
						{
							this.ai[0] += 1.3f;
						}
					}
					else if (this.type == 49)
					{
						if (this.ai[0] == 0f)
						{
							this.ai[0] = 4f;
							this.netUpdate = true;
						}
						if (Main.player[this.owner].itemAnimation < Main.player[this.owner].itemAnimationMax / 3)
						{
							this.ai[0] -= 1.1f;
						}
						else
						{
							this.ai[0] += 0.85f;
						}
					}
					else if (this.type == 64 || this.type == 215)
					{
						this.spriteDirection = -this.direction;
						if (this.ai[0] == 0f)
						{
							this.ai[0] = 3f;
							this.netUpdate = true;
						}
						if (Main.player[this.owner].itemAnimation < Main.player[this.owner].itemAnimationMax / 3)
						{
							this.ai[0] -= 1.9f;
						}
						else
						{
							this.ai[0] += 1.7f;
						}
					}
					else if (this.type == 66 || this.type == 97 || this.type == 212 || this.type == 218)
					{
						this.spriteDirection = -this.direction;
						if (this.ai[0] == 0f)
						{
							this.ai[0] = 3f;
							this.netUpdate = true;
						}
						if (Main.player[this.owner].itemAnimation < Main.player[this.owner].itemAnimationMax / 3)
						{
							this.ai[0] -= 2.1f;
						}
						else
						{
							this.ai[0] += 1.9f;
						}
					}
					else if (this.type == 130)
					{
						this.spriteDirection = -this.direction;
						if (this.ai[0] == 0f)
						{
							this.ai[0] = 3f;
							this.netUpdate = true;
						}
						if (Main.player[this.owner].itemAnimation < Main.player[this.owner].itemAnimationMax / 3)
						{
							this.ai[0] -= 1.3f;
						}
						else
						{
							this.ai[0] += 1f;
						}
					}
				}
				this.position += this.velocity * this.ai[0];
				if (this.type == 130)
				{
					if (this.ai[1] == 0f || this.ai[1] == 4f || this.ai[1] == 8f || this.ai[1] == 12f || this.ai[1] == 16f || this.ai[1] == 20f || this.ai[1] == 24f)
					{
						Projectile.NewProjectile(this.position.X + (float)(this.width / 2), this.position.Y + (float)(this.height / 2), this.velocity.X, this.velocity.Y, 131, this.damage / 3, 0f, this.owner, 0f, 0f);
					}
					this.ai[1] += 1f;
				}
				if (Main.player[this.owner].itemAnimation == 0)
				{
					this.Kill();
				}
				this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 2.355f;
				if (this.spriteDirection == -1)
				{
					this.rotation -= 1.57f;
				}
				if (this.type == 46)
				{
					if (Main.rand.Next(5) == 0)
					{
						Dust.NewDust(this.position, this.width, this.height, 14, 0f, 0f, 150, default(Color), 1.4f);
					}
					int num259 = Dust.NewDust(this.position, this.width, this.height, 27, this.velocity.X * 0.2f + (float)(this.direction * 3), this.velocity.Y * 0.2f, 100, default(Color), 1.2f);
					Main.dust[num259].noGravity = true;
					Dust expr_C535_cp_0 = Main.dust[num259];
					expr_C535_cp_0.velocity.X = expr_C535_cp_0.velocity.X / 2f;
					Dust expr_C555_cp_0 = Main.dust[num259];
					expr_C555_cp_0.velocity.Y = expr_C555_cp_0.velocity.Y / 2f;
					num259 = Dust.NewDust(this.position - this.velocity * 2f, this.width, this.height, 27, 0f, 0f, 150, default(Color), 1.4f);
					Dust expr_C5C9_cp_0 = Main.dust[num259];
					expr_C5C9_cp_0.velocity.X = expr_C5C9_cp_0.velocity.X / 5f;
					Dust expr_C5E9_cp_0 = Main.dust[num259];
					expr_C5E9_cp_0.velocity.Y = expr_C5E9_cp_0.velocity.Y / 5f;
					return;
				}
				if (this.type == 105)
				{
					if (Main.rand.Next(3) == 0)
					{
						int num260 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 57, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 200, default(Color), 1.2f);
						Main.dust[num260].velocity += this.velocity * 0.3f;
						Main.dust[num260].velocity *= 0.2f;
					}
					if (Main.rand.Next(4) == 0)
					{
						int num261 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 43, 0f, 0f, 254, default(Color), 0.3f);
						Main.dust[num261].velocity += this.velocity * 0.5f;
						Main.dust[num261].velocity *= 0.5f;
						return;
					}
				}
				else if (this.type == 153)
				{
					int num262 = Dust.NewDust(this.position - this.velocity * 3f, this.width, this.height, 115, this.velocity.X * 0.4f, this.velocity.Y * 0.4f, 140, default(Color), 1f);
					Main.dust[num262].noGravity = true;
					Main.dust[num262].fadeIn = 1.25f;
					Main.dust[num262].velocity *= 0.25f;
					return;
				}
			}
			else if (this.aiStyle == 20)
			{
				if (this.type == 252)
				{
					this.frameCounter++;
					if (this.frameCounter >= 4)
					{
						this.frameCounter = 0;
						this.frame++;
					}
					if (this.frame > 3)
					{
						this.frame = 0;
					}
				}
				if (this.type == 509)
				{
					this.frameCounter++;
					if (this.frameCounter >= 2)
					{
						this.frameCounter = 0;
						this.frame++;
					}
					if (this.frame > 1)
					{
						this.frame = 0;
					}
				}
				if (this.soundDelay <= 0)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 22);
					this.soundDelay = 30;
				}
				Vector2 vector22 = Main.player[this.owner].RotatedRelativePoint(Main.player[this.owner].MountedCenter, true);
				if (Main.myPlayer == this.owner)
				{
					if (Main.player[this.owner].channel)
					{
						float num263 = Main.player[this.owner].inventory[Main.player[this.owner].selectedItem].shootSpeed * this.scale;
						Vector2 vector23 = vector22;
						float num264 = (float)Main.mouseX + Main.screenPosition.X - vector23.X;
						float num265 = (float)Main.mouseY + Main.screenPosition.Y - vector23.Y;
						if (Main.player[this.owner].gravDir == -1f)
						{
							num265 = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - vector23.Y;
						}
						float num266 = (float)Math.Sqrt((double)(num264 * num264 + num265 * num265));
						num266 = (float)Math.Sqrt((double)(num264 * num264 + num265 * num265));
						num266 = num263 / num266;
						num264 *= num266;
						num265 *= num266;
						if (num264 != this.velocity.X || num265 != this.velocity.Y)
						{
							this.netUpdate = true;
						}
						this.velocity.X = num264;
						this.velocity.Y = num265;
					}
					else
					{
						this.Kill();
					}
				}
				if (this.velocity.X > 0f)
				{
					Main.player[this.owner].ChangeDir(1);
				}
				else if (this.velocity.X < 0f)
				{
					Main.player[this.owner].ChangeDir(-1);
				}
				this.spriteDirection = this.direction;
				Main.player[this.owner].ChangeDir(this.direction);
				Main.player[this.owner].heldProj = this.whoAmI;
				Main.player[this.owner].itemTime = 2;
				Main.player[this.owner].itemAnimation = 2;
				this.position.X = vector22.X - (float)(this.width / 2);
				this.position.Y = vector22.Y - (float)(this.height / 2);
				this.rotation = (float)(Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.5700000524520874);
				if (Main.player[this.owner].direction == 1)
				{
					Main.player[this.owner].itemRotation = (float)Math.Atan2((double)(this.velocity.Y * (float)this.direction), (double)(this.velocity.X * (float)this.direction));
				}
				else
				{
					Main.player[this.owner].itemRotation = (float)Math.Atan2((double)(this.velocity.Y * (float)this.direction), (double)(this.velocity.X * (float)this.direction));
				}
				this.velocity.X = this.velocity.X * (1f + (float)Main.rand.Next(-3, 4) * 0.01f);
				if (Main.rand.Next(6) == 0)
				{
					int num267 = Dust.NewDust(this.position + this.velocity * (float)Main.rand.Next(6, 10) * 0.1f, this.width, this.height, 31, 0f, 0f, 80, default(Color), 1.4f);
					Dust expr_CD15_cp_0 = Main.dust[num267];
					expr_CD15_cp_0.position.X = expr_CD15_cp_0.position.X - 4f;
					Main.dust[num267].noGravity = true;
					Main.dust[num267].velocity *= 0.2f;
					Main.dust[num267].velocity.Y = (float)(-(float)Main.rand.Next(7, 13)) * 0.15f;
					return;
				}
			}
			else if (this.aiStyle == 21)
			{
				this.rotation = this.velocity.X * 0.1f;
				this.spriteDirection = -this.direction;
				if (Main.rand.Next(3) == 0)
				{
					int num268 = Dust.NewDust(this.position, this.width, this.height, 27, 0f, 0f, 80, default(Color), 1f);
					Main.dust[num268].noGravity = true;
					Main.dust[num268].velocity *= 0.2f;
				}
				if (this.ai[1] == 1f)
				{
					this.ai[1] = 0f;
					Main.harpNote = this.ai[0];
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 26);
					return;
				}
			}
			else if (this.aiStyle == 22)
			{
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					this.alpha = 255;
				}
				if (this.ai[1] < 0f)
				{
					if (this.velocity.X > 0f)
					{
						this.rotation += 0.3f;
					}
					else
					{
						this.rotation -= 0.3f;
					}
					int num269 = (int)(this.position.X / 16f) - 1;
					int num270 = (int)((this.position.X + (float)this.width) / 16f) + 2;
					int num271 = (int)(this.position.Y / 16f) - 1;
					int num272 = (int)((this.position.Y + (float)this.height) / 16f) + 2;
					if (num269 < 0)
					{
						num269 = 0;
					}
					if (num270 > Main.maxTilesX)
					{
						num270 = Main.maxTilesX;
					}
					if (num271 < 0)
					{
						num271 = 0;
					}
					if (num272 > Main.maxTilesY)
					{
						num272 = Main.maxTilesY;
					}
					int num273 = (int)this.position.X + 4;
					int num274 = (int)this.position.Y + 4;
					for (int num275 = num269; num275 < num270; num275++)
					{
						for (int num276 = num271; num276 < num272; num276++)
						{
							if (Main.tile[num275, num276] != null && Main.tile[num275, num276].active() && Main.tile[num275, num276].type != 127 && Main.tileSolid[(int)Main.tile[num275, num276].type] && !Main.tileSolidTop[(int)Main.tile[num275, num276].type])
							{
								Vector2 vector24;
								vector24.X = (float)(num275 * 16);
								vector24.Y = (float)(num276 * 16);
								if ((float)(num273 + 8) > vector24.X && (float)num273 < vector24.X + 16f && (float)(num274 + 8) > vector24.Y && (float)num274 < vector24.Y + 16f)
								{
									this.Kill();
								}
							}
						}
					}
					int num277 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 67, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num277].noGravity = true;
					Main.dust[num277].velocity *= 0.3f;
					return;
				}
				if (this.ai[0] < 0f)
				{
					if (this.ai[0] == -1f)
					{
						for (int num278 = 0; num278 < 10; num278++)
						{
							int num279 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 67, 0f, 0f, 0, default(Color), 1.1f);
							Main.dust[num279].noGravity = true;
							Main.dust[num279].velocity *= 1.3f;
						}
					}
					else if (Main.rand.Next(30) == 0)
					{
						int num280 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 67, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num280].velocity *= 0.2f;
					}
					int num281 = (int)this.position.X / 16;
					int num282 = (int)this.position.Y / 16;
					if (Main.tile[num281, num282] == null || !Main.tile[num281, num282].active())
					{
						this.Kill();
					}
					this.ai[0] -= 1f;
					if (this.ai[0] <= -900f && (Main.myPlayer == this.owner || Main.netMode == 2) && Main.tile[num281, num282].active() && Main.tile[num281, num282].type == 127)
					{
						WorldGen.KillTile(num281, num282, false, false, false);
						if (Main.netMode == 1)
						{
							NetMessage.SendData(17, -1, -1, "", 0, (float)num281, (float)num282, 0f, 0, 0, 0);
						}
						this.Kill();
						return;
					}
				}
				else
				{
					int num283 = (int)(this.position.X / 16f) - 1;
					int num284 = (int)((this.position.X + (float)this.width) / 16f) + 2;
					int num285 = (int)(this.position.Y / 16f) - 1;
					int num286 = (int)((this.position.Y + (float)this.height) / 16f) + 2;
					if (num283 < 0)
					{
						num283 = 0;
					}
					if (num284 > Main.maxTilesX)
					{
						num284 = Main.maxTilesX;
					}
					if (num285 < 0)
					{
						num285 = 0;
					}
					if (num286 > Main.maxTilesY)
					{
						num286 = Main.maxTilesY;
					}
					int num287 = (int)this.position.X + 4;
					int num288 = (int)this.position.Y + 4;
					for (int num289 = num283; num289 < num284; num289++)
					{
						for (int num290 = num285; num290 < num286; num290++)
						{
							if (Main.tile[num289, num290] != null && Main.tile[num289, num290].nactive() && Main.tile[num289, num290].type != 127 && Main.tileSolid[(int)Main.tile[num289, num290].type] && !Main.tileSolidTop[(int)Main.tile[num289, num290].type])
							{
								Vector2 vector25;
								vector25.X = (float)(num289 * 16);
								vector25.Y = (float)(num290 * 16);
								if ((float)(num287 + 8) > vector25.X && (float)num287 < vector25.X + 16f && (float)(num288 + 8) > vector25.Y && (float)num288 < vector25.Y + 16f)
								{
									this.Kill();
								}
							}
						}
					}
					if (this.lavaWet)
					{
						this.Kill();
					}
					if (this.active)
					{
						int num291 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 67, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num291].noGravity = true;
						Main.dust[num291].velocity *= 0.3f;
						int num292 = (int)this.ai[0];
						int num293 = (int)this.ai[1];
						if (WorldGen.SolidTile(num292, num293))
						{
							if (Math.Abs(this.velocity.X) > Math.Abs(this.velocity.Y))
							{
								if (base.Center.Y < (float)(num293 * 16 + 8) && !WorldGen.SolidTile(num292, num293 - 1))
								{
									num293--;
								}
								else if (!WorldGen.SolidTile(num292, num293 + 1))
								{
									num293++;
								}
								else if (!WorldGen.SolidTile(num292, num293 - 1))
								{
									num293--;
								}
								else if (base.Center.X < (float)(num292 * 16 + 8) && !WorldGen.SolidTile(num292 - 1, num293))
								{
									num292--;
								}
								else if (!WorldGen.SolidTile(num292 + 1, num293))
								{
									num292++;
								}
								else if (!WorldGen.SolidTile(num292 - 1, num293))
								{
									num292--;
								}
							}
							else if (base.Center.X < (float)(num292 * 16 + 8) && !WorldGen.SolidTile(num292 - 1, num293))
							{
								num292--;
							}
							else if (!WorldGen.SolidTile(num292 + 1, num293))
							{
								num292++;
							}
							else if (!WorldGen.SolidTile(num292 - 1, num293))
							{
								num292--;
							}
							else if (base.Center.Y < (float)(num293 * 16 + 8) && !WorldGen.SolidTile(num292, num293 - 1))
							{
								num293--;
							}
							else if (!WorldGen.SolidTile(num292, num293 + 1))
							{
								num293++;
							}
							else if (!WorldGen.SolidTile(num292, num293 - 1))
							{
								num293--;
							}
						}
						if (this.velocity.X > 0f)
						{
							this.rotation += 0.3f;
						}
						else
						{
							this.rotation -= 0.3f;
						}
						if (Main.myPlayer == this.owner)
						{
							int num294 = (int)((this.position.X + (float)(this.width / 2)) / 16f);
							int num295 = (int)((this.position.Y + (float)(this.height / 2)) / 16f);
							bool flag6 = false;
							if (num294 == num292 && num295 == num293)
							{
								flag6 = true;
							}
							if (((this.velocity.X <= 0f && num294 <= num292) || (this.velocity.X >= 0f && num294 >= num292)) && ((this.velocity.Y <= 0f && num295 <= num293) || (this.velocity.Y >= 0f && num295 >= num293)))
							{
								flag6 = true;
							}
							if (flag6)
							{
								if (WorldGen.PlaceTile(num292, num293, 127, false, false, this.owner, 0))
								{
									if (Main.netMode == 1)
									{
										NetMessage.SendData(17, -1, -1, "", 1, (float)((int)this.ai[0]), (float)((int)this.ai[1]), 127f, 0, 0, 0);
									}
									this.damage = 0;
									this.ai[0] = -1f;
									this.velocity *= 0f;
									this.alpha = 255;
									this.position.X = (float)(num292 * 16);
									this.position.Y = (float)(num293 * 16);
									this.netUpdate = true;
									return;
								}
								this.ai[1] = -1f;
								return;
							}
						}
					}
				}
			}
			else
			{
				if (this.aiStyle == 23)
				{
					if (this.type == 188 && this.ai[0] < 8f)
					{
						this.ai[0] = 8f;
					}
					if (this.timeLeft > 60)
					{
						this.timeLeft = 60;
					}
					if (this.ai[0] > 7f)
					{
						float num296 = 1f;
						if (this.ai[0] == 8f)
						{
							num296 = 0.25f;
						}
						else if (this.ai[0] == 9f)
						{
							num296 = 0.5f;
						}
						else if (this.ai[0] == 10f)
						{
							num296 = 0.75f;
						}
						this.ai[0] += 1f;
						int num297 = 6;
						if (this.type == 101)
						{
							num297 = 75;
						}
						if (num297 == 6 || Main.rand.Next(2) == 0)
						{
							for (int num298 = 0; num298 < 1; num298++)
							{
								int num299 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num297, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 1f);
								if (Main.rand.Next(3) != 0 || (num297 == 75 && Main.rand.Next(3) == 0))
								{
									Main.dust[num299].noGravity = true;
									Main.dust[num299].scale *= 3f;
									Dust expr_DC8B_cp_0 = Main.dust[num299];
									expr_DC8B_cp_0.velocity.X = expr_DC8B_cp_0.velocity.X * 2f;
									Dust expr_DCAB_cp_0 = Main.dust[num299];
									expr_DCAB_cp_0.velocity.Y = expr_DCAB_cp_0.velocity.Y * 2f;
								}
								if (this.type == 188)
								{
									Main.dust[num299].scale *= 1.25f;
								}
								else
								{
									Main.dust[num299].scale *= 1.5f;
								}
								Dust expr_DD10_cp_0 = Main.dust[num299];
								expr_DD10_cp_0.velocity.X = expr_DD10_cp_0.velocity.X * 1.2f;
								Dust expr_DD30_cp_0 = Main.dust[num299];
								expr_DD30_cp_0.velocity.Y = expr_DD30_cp_0.velocity.Y * 1.2f;
								Main.dust[num299].scale *= num296;
								if (num297 == 75)
								{
									Main.dust[num299].velocity += this.velocity;
									if (!Main.dust[num299].noGravity)
									{
										Main.dust[num299].velocity *= 0.5f;
									}
								}
							}
						}
					}
					else
					{
						this.ai[0] += 1f;
					}
					this.rotation += 0.3f * (float)this.direction;
					return;
				}
				if (this.aiStyle == 24)
				{
					this.light = this.scale * 0.5f;
					this.rotation += this.velocity.X * 0.2f;
					this.ai[1] += 1f;
					if (this.type == 94)
					{
						if (Main.rand.Next(4) == 0)
						{
							int num300 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 70, 0f, 0f, 0, default(Color), 1f);
							Main.dust[num300].noGravity = true;
							Main.dust[num300].velocity *= 0.5f;
							Main.dust[num300].scale *= 0.9f;
						}
						this.velocity *= 0.985f;
						if (this.ai[1] > 130f)
						{
							this.scale -= 0.05f;
							if ((double)this.scale <= 0.2)
							{
								this.scale = 0.2f;
								this.Kill();
								return;
							}
						}
					}
					else
					{
						this.velocity *= 0.96f;
						if (this.ai[1] > 15f)
						{
							this.scale -= 0.05f;
							if ((double)this.scale <= 0.2)
							{
								this.scale = 0.2f;
								this.Kill();
								return;
							}
						}
					}
				}
				else if (this.aiStyle == 25)
				{
					if (this.ai[0] != 0f && this.velocity.Y <= 0f && this.velocity.X == 0f)
					{
						float num301 = 0.5f;
						int i2 = (int)((this.position.X - 8f) / 16f);
						int num302 = (int)(this.position.Y / 16f);
						bool flag7 = false;
						bool flag8 = false;
						if (WorldGen.SolidTile(i2, num302) || WorldGen.SolidTile(i2, num302 + 1))
						{
							flag7 = true;
						}
						i2 = (int)((this.position.X + (float)this.width + 8f) / 16f);
						if (WorldGen.SolidTile(i2, num302) || WorldGen.SolidTile(i2, num302 + 1))
						{
							flag8 = true;
						}
						if (flag7)
						{
							this.velocity.X = num301;
						}
						else if (flag8)
						{
							this.velocity.X = -num301;
						}
						else
						{
							i2 = (int)((this.position.X - 8f - 16f) / 16f);
							num302 = (int)(this.position.Y / 16f);
							flag7 = false;
							flag8 = false;
							if (WorldGen.SolidTile(i2, num302) || WorldGen.SolidTile(i2, num302 + 1))
							{
								flag7 = true;
							}
							i2 = (int)((this.position.X + (float)this.width + 8f + 16f) / 16f);
							if (WorldGen.SolidTile(i2, num302) || WorldGen.SolidTile(i2, num302 + 1))
							{
								flag8 = true;
							}
							if (flag7)
							{
								this.velocity.X = num301;
							}
							else if (flag8)
							{
								this.velocity.X = -num301;
							}
							else
							{
								i2 = (int)((this.position.X + 4f) / 16f);
								num302 = (int)((this.position.Y + (float)this.height + 8f) / 16f);
								if (WorldGen.SolidTile(i2, num302) || WorldGen.SolidTile(i2, num302 + 1))
								{
									flag7 = true;
								}
								if (!flag7)
								{
									this.velocity.X = num301;
								}
								else
								{
									this.velocity.X = -num301;
								}
							}
						}
					}
					this.rotation += this.velocity.X * 0.06f;
					this.ai[0] = 1f;
					if (this.velocity.Y > 16f)
					{
						this.velocity.Y = 16f;
					}
					if (this.velocity.Y <= 6f)
					{
						if (this.velocity.X > 0f && this.velocity.X < 7f)
						{
							this.velocity.X = this.velocity.X + 0.05f;
						}
						if (this.velocity.X < 0f && this.velocity.X > -7f)
						{
							this.velocity.X = this.velocity.X - 0.05f;
						}
					}
					this.velocity.Y = this.velocity.Y + 0.3f;
					if (this.type == 655 && this.wet)
					{
						this.Kill();
						return;
					}
				}
				else
				{
					if (this.aiStyle == 26)
					{
						this.AI_026();
						return;
					}
					if (this.aiStyle == 27)
					{
						if (this.type == 115)
						{
							this.ai[0] += 1f;
							if (this.ai[0] < 30f)
							{
								this.velocity *= 1.125f;
							}
						}
						if (this.type == 115 && this.localAI[1] < 5f)
						{
							this.localAI[1] = 5f;
							for (int num303 = 5; num303 < 25; num303++)
							{
								float num304 = this.velocity.X * (30f / (float)num303);
								float num305 = this.velocity.Y * (30f / (float)num303);
								num304 *= 80f;
								num305 *= 80f;
								int num306 = Dust.NewDust(new Vector2(this.position.X - num304, this.position.Y - num305), 8, 8, 27, this.oldVelocity.X, this.oldVelocity.Y, 100, default(Color), 0.9f);
								Main.dust[num306].velocity *= 0.25f;
								Main.dust[num306].velocity -= this.velocity * 5f;
							}
						}
						if (this.localAI[1] > 7f && this.type == 173)
						{
							int num307 = Main.rand.Next(3);
							if (num307 == 0)
							{
								num307 = 15;
							}
							else if (num307 == 1)
							{
								num307 = 57;
							}
							else
							{
								num307 = 58;
							}
							int num308 = Dust.NewDust(new Vector2(this.position.X - this.velocity.X * 4f + 2f, this.position.Y + 2f - this.velocity.Y * 4f), 8, 8, num307, 0f, 0f, 100, default(Color), 1.25f);
							Main.dust[num308].velocity *= 0.1f;
						}
						if (this.localAI[1] > 7f && this.type == 132)
						{
							int num309 = Dust.NewDust(new Vector2(this.position.X - this.velocity.X * 4f + 2f, this.position.Y + 2f - this.velocity.Y * 4f), 8, 8, 107, this.oldVelocity.X, this.oldVelocity.Y, 100, default(Color), 1.25f);
							Main.dust[num309].velocity *= -0.25f;
							num309 = Dust.NewDust(new Vector2(this.position.X - this.velocity.X * 4f + 2f, this.position.Y + 2f - this.velocity.Y * 4f), 8, 8, 107, this.oldVelocity.X, this.oldVelocity.Y, 100, default(Color), 1.25f);
							Main.dust[num309].velocity *= -0.25f;
							Main.dust[num309].position -= this.velocity * 0.5f;
						}
						if (this.localAI[1] < 15f)
						{
							this.localAI[1] += 1f;
						}
						else
						{
							if (this.type == 114 || this.type == 115)
							{
								int num310 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 4f), 8, 8, 27, this.oldVelocity.X, this.oldVelocity.Y, 100, default(Color), 0.6f);
								Main.dust[num310].velocity *= -0.25f;
							}
							else if (this.type == 116)
							{
								int num311 = Dust.NewDust(new Vector2(this.position.X - this.velocity.X * 5f + 2f, this.position.Y + 2f - this.velocity.Y * 5f), 8, 8, 64, this.oldVelocity.X, this.oldVelocity.Y, 100, default(Color), 1.5f);
								Main.dust[num311].velocity *= -0.25f;
								Main.dust[num311].noGravity = true;
							}
							if (this.localAI[0] == 0f)
							{
								this.scale -= 0.02f;
								this.alpha += 30;
								if (this.alpha >= 250)
								{
									this.alpha = 255;
									this.localAI[0] = 1f;
								}
							}
							else if (this.localAI[0] == 1f)
							{
								this.scale += 0.02f;
								this.alpha -= 30;
								if (this.alpha <= 0)
								{
									this.alpha = 0;
									this.localAI[0] = 0f;
								}
							}
						}
						if (this.ai[1] == 0f)
						{
							this.ai[1] = 1f;
							if (this.type == 132)
							{
								Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 60);
							}
							else
							{
								Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
							}
						}
						if (this.type == 157)
						{
							this.rotation += (float)this.direction * 0.4f;
							this.spriteDirection = this.direction;
						}
						else
						{
							this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 0.785f;
						}
						if (this.velocity.Y > 16f)
						{
							this.velocity.Y = 16f;
							return;
						}
					}
					else if (this.aiStyle == 28)
					{
						if (this.type == 177)
						{
							for (int num312 = 0; num312 < 3; num312++)
							{
								int num313 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 137, this.velocity.X, this.velocity.Y, Main.rand.Next(0, 101), default(Color), 1f + (float)Main.rand.Next(-20, 40) * 0.01f);
								Main.dust[num313].noGravity = true;
								Main.dust[num313].velocity *= 0.3f;
							}
						}
						if (this.type == 118)
						{
							for (int num314 = 0; num314 < 2; num314++)
							{
								int num315 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 92, this.velocity.X, this.velocity.Y, 50, default(Color), 1.2f);
								Main.dust[num315].noGravity = true;
								Main.dust[num315].velocity *= 0.3f;
							}
						}
						if (this.type == 119 || this.type == 128 || this.type == 359)
						{
							for (int num316 = 0; num316 < 3; num316++)
							{
								int num317 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 92, this.velocity.X, this.velocity.Y, 50, default(Color), 1.2f);
								Main.dust[num317].noGravity = true;
								Main.dust[num317].velocity *= 0.3f;
							}
						}
						if (this.type == 309)
						{
							for (int num318 = 0; num318 < 3; num318++)
							{
								int num319 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 185, this.velocity.X, this.velocity.Y, 50, default(Color), 1.2f);
								Main.dust[num319].noGravity = true;
								Main.dust[num319].velocity *= 0.3f;
							}
						}
						if (this.type == 129)
						{
							for (int num320 = 0; num320 < 6; num320++)
							{
								int num321 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 106, this.velocity.X, this.velocity.Y, 100, default(Color), 1f);
								Main.dust[num321].noGravity = true;
								Main.dust[num321].velocity *= 0.1f + (float)Main.rand.Next(4) * 0.1f;
								Main.dust[num321].scale *= 1f + (float)Main.rand.Next(5) * 0.1f;
							}
						}
						if (this.ai[1] == 0f)
						{
							this.ai[1] = 1f;
							Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 28);
							return;
						}
					}
					else if (this.aiStyle == 29)
					{
						if (this.type == 619)
						{
							int num322 = (int)this.ai[0];
							for (int num323 = 0; num323 < 3; num323++)
							{
								int num324 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 254, this.velocity.X, this.velocity.Y, num322, default(Color), 1.2f);
								Main.dust[num324].position = (Main.dust[num324].position + base.Center) / 2f;
								Main.dust[num324].noGravity = true;
								Main.dust[num324].velocity *= 0.5f;
							}
							for (int num325 = 0; num325 < 2; num325++)
							{
								int num324 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 255, this.velocity.X, this.velocity.Y, num322, default(Color), 0.4f);
								if (num325 == 0)
								{
									Main.dust[num324].position = (Main.dust[num324].position + base.Center * 5f) / 6f;
								}
								else if (num325 == 1)
								{
									Main.dust[num324].position = (Main.dust[num324].position + (base.Center + this.velocity / 2f) * 5f) / 6f;
								}
								Main.dust[num324].velocity *= 0.1f;
								Main.dust[num324].noGravity = true;
								Main.dust[num324].fadeIn = 1f;
							}
							return;
						}
						if (this.type == 620)
						{
							int num326 = (int)this.ai[0];
							this.ai[1] += 1f;
							float num327 = (60f - this.ai[1]) / 60f;
							if (this.ai[1] > 40f)
							{
								this.Kill();
							}
							this.velocity.Y = this.velocity.Y + 0.2f;
							if (this.velocity.Y > 18f)
							{
								this.velocity.Y = 18f;
							}
							this.velocity.X = this.velocity.X * 0.98f;
							for (int num328 = 0; num328 < 2; num328++)
							{
								int num329 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num326, this.velocity.X, this.velocity.Y, 50, default(Color), 1.1f);
								Main.dust[num329].position = (Main.dust[num329].position + base.Center) / 2f;
								Main.dust[num329].noGravity = true;
								Main.dust[num329].velocity *= 0.3f;
								Main.dust[num329].scale *= num327;
							}
							for (int num330 = 0; num330 < 1; num330++)
							{
								int num329 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num326, this.velocity.X, this.velocity.Y, 50, default(Color), 0.6f);
								Main.dust[num329].position = (Main.dust[num329].position + base.Center * 5f) / 6f;
								Main.dust[num329].velocity *= 0.1f;
								Main.dust[num329].noGravity = true;
								Main.dust[num329].fadeIn = 0.9f * num327;
								Main.dust[num329].scale *= num327;
							}
							return;
						}
						if (this.type == 521)
						{
							for (int num331 = 0; num331 < 3; num331++)
							{
								int num332 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 254, this.velocity.X, this.velocity.Y, 50, default(Color), 1.2f);
								Main.dust[num332].position = (Main.dust[num332].position + base.Center) / 2f;
								Main.dust[num332].noGravity = true;
								Main.dust[num332].velocity *= 0.5f;
							}
							for (int num333 = 0; num333 < 2; num333++)
							{
								int num332 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 255, this.velocity.X, this.velocity.Y, 50, default(Color), 0.4f);
								if (num333 == 0)
								{
									Main.dust[num332].position = (Main.dust[num332].position + base.Center * 5f) / 6f;
								}
								else if (num333 == 1)
								{
									Main.dust[num332].position = (Main.dust[num332].position + (base.Center + this.velocity / 2f) * 5f) / 6f;
								}
								Main.dust[num332].velocity *= 0.1f;
								Main.dust[num332].noGravity = true;
								Main.dust[num332].fadeIn = 1f;
							}
							return;
						}
						if (this.type == 522)
						{
							this.ai[1] += 1f;
							float num334 = (60f - this.ai[1]) / 60f;
							if (this.ai[1] > 40f)
							{
								this.Kill();
							}
							this.velocity.Y = this.velocity.Y + 0.2f;
							if (this.velocity.Y > 18f)
							{
								this.velocity.Y = 18f;
							}
							this.velocity.X = this.velocity.X * 0.98f;
							for (int num335 = 0; num335 < 2; num335++)
							{
								int num336 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 254, this.velocity.X, this.velocity.Y, 50, default(Color), 1.1f);
								Main.dust[num336].position = (Main.dust[num336].position + base.Center) / 2f;
								Main.dust[num336].noGravity = true;
								Main.dust[num336].velocity *= 0.3f;
								Main.dust[num336].scale *= num334;
							}
							for (int num337 = 0; num337 < 1; num337++)
							{
								int num336 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 255, this.velocity.X, this.velocity.Y, 50, default(Color), 0.6f);
								Main.dust[num336].position = (Main.dust[num336].position + base.Center * 5f) / 6f;
								Main.dust[num336].velocity *= 0.1f;
								Main.dust[num336].noGravity = true;
								Main.dust[num336].fadeIn = 0.9f * num334;
								Main.dust[num336].scale *= num334;
							}
							return;
						}
						int num338 = this.type - 121 + 86;
						if (this.type == 597)
						{
							num338 = 262;
						}
						for (int num339 = 0; num339 < 2; num339++)
						{
							int num340 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num338, this.velocity.X, this.velocity.Y, 50, default(Color), 1.2f);
							Main.dust[num340].noGravity = true;
							Main.dust[num340].velocity *= 0.3f;
						}
						if (this.ai[1] == 0f)
						{
							this.ai[1] = 1f;
							Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
							return;
						}
					}
					else if (this.aiStyle == 30)
					{
						this.velocity *= 0.8f;
						this.rotation += 0.2f;
						this.alpha += 4;
						if (this.alpha >= 255)
						{
							this.Kill();
							return;
						}
					}
					else
					{
						if (this.aiStyle == 31)
						{
							int num341 = 110;
							int conversionType = 0;
							if (this.type == 146)
							{
								num341 = 111;
								conversionType = 2;
							}
							if (this.type == 147)
							{
								num341 = 112;
								conversionType = 1;
							}
							if (this.type == 148)
							{
								num341 = 113;
								conversionType = 3;
							}
							if (this.type == 149)
							{
								num341 = 114;
								conversionType = 4;
							}
							if (this.owner == Main.myPlayer)
							{
								WorldGen.Convert((int)(this.position.X + (float)(this.width / 2)) / 16, (int)(this.position.Y + (float)(this.height / 2)) / 16, conversionType, 2);
							}
							if (this.timeLeft > 133)
							{
								this.timeLeft = 133;
							}
							if (this.ai[0] > 7f)
							{
								float num342 = 1f;
								if (this.ai[0] == 8f)
								{
									num342 = 0.2f;
								}
								else if (this.ai[0] == 9f)
								{
									num342 = 0.4f;
								}
								else if (this.ai[0] == 10f)
								{
									num342 = 0.6f;
								}
								else if (this.ai[0] == 11f)
								{
									num342 = 0.8f;
								}
								this.ai[0] += 1f;
								for (int num343 = 0; num343 < 1; num343++)
								{
									int num344 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num341, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 1f);
									Main.dust[num344].noGravity = true;
									Main.dust[num344].scale *= 1.75f;
									Dust expr_FD0D_cp_0 = Main.dust[num344];
									expr_FD0D_cp_0.velocity.X = expr_FD0D_cp_0.velocity.X * 2f;
									Dust expr_FD2D_cp_0 = Main.dust[num344];
									expr_FD2D_cp_0.velocity.Y = expr_FD2D_cp_0.velocity.Y * 2f;
									Main.dust[num344].scale *= num342;
								}
							}
							else
							{
								this.ai[0] += 1f;
							}
							this.rotation += 0.3f * (float)this.direction;
							return;
						}
						if (this.aiStyle == 32)
						{
							this.timeLeft = 10;
							this.ai[0] += 1f;
							if (this.ai[0] >= 20f)
							{
								this.ai[0] = 15f;
								for (int num345 = 0; num345 < 255; num345++)
								{
									Rectangle rectangle3 = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
									if (Main.player[num345].active)
									{
										Rectangle value9 = new Rectangle((int)Main.player[num345].position.X, (int)Main.player[num345].position.Y, Main.player[num345].width, Main.player[num345].height);
										if (rectangle3.Intersects(value9))
										{
											this.ai[0] = 0f;
											this.velocity.Y = -4.5f;
											if (this.velocity.X > 2f)
											{
												this.velocity.X = 2f;
											}
											if (this.velocity.X < -2f)
											{
												this.velocity.X = -2f;
											}
											this.velocity.X = (this.velocity.X + (float)Main.player[num345].direction * 1.75f) / 2f;
											this.velocity.X = this.velocity.X + Main.player[num345].velocity.X * 3f;
											this.velocity.Y = this.velocity.Y + Main.player[num345].velocity.Y;
											if (this.velocity.X > 6f)
											{
												this.velocity.X = 6f;
											}
											if (this.velocity.X < -6f)
											{
												this.velocity.X = -6f;
											}
											this.netUpdate = true;
											this.ai[1] += 1f;
										}
									}
								}
							}
							if (this.velocity.X == 0f && this.velocity.Y == 0f)
							{
								this.Kill();
							}
							this.rotation += 0.02f * this.velocity.X;
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.98f;
							}
							else if (this.wet)
							{
								this.velocity.X = this.velocity.X * 0.99f;
							}
							else
							{
								this.velocity.X = this.velocity.X * 0.995f;
							}
							if ((double)this.velocity.X > -0.03 && (double)this.velocity.X < 0.03)
							{
								this.velocity.X = 0f;
							}
							if (this.wet)
							{
								this.ai[1] = 0f;
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.95f;
								}
								this.velocity.Y = this.velocity.Y - 0.1f;
								if (this.velocity.Y < -4f)
								{
									this.velocity.Y = -4f;
								}
								if (this.velocity.X == 0f)
								{
									this.Kill();
								}
							}
							else
							{
								this.velocity.Y = this.velocity.Y + 0.1f;
							}
							if (this.velocity.Y > 10f)
							{
								this.velocity.Y = 10f;
								return;
							}
						}
						else
						{
							if (this.aiStyle == 33)
							{
								if (this.alpha > 0)
								{
									this.alpha -= 50;
									if (this.alpha < 0)
									{
										this.alpha = 0;
									}
								}
								float num346 = 4f;
								float num347 = this.ai[0];
								float num348 = this.ai[1];
								if (num347 == 0f && num348 == 0f)
								{
									num347 = 1f;
								}
								float num349 = (float)Math.Sqrt((double)(num347 * num347 + num348 * num348));
								num349 = num346 / num349;
								num347 *= num349;
								num348 *= num349;
								if (this.alpha < 70)
								{
									int num350 = 127;
									if (this.type == 310)
									{
										num350 = 187;
									}
									int num351 = Dust.NewDust(new Vector2(this.position.X, this.position.Y - 2f), 6, 6, num350, this.velocity.X, this.velocity.Y, 100, default(Color), 1.6f);
									Main.dust[num351].noGravity = true;
									Dust expr_10322_cp_0 = Main.dust[num351];
									expr_10322_cp_0.position.X = expr_10322_cp_0.position.X - num347 * 1f;
									Dust expr_10347_cp_0 = Main.dust[num351];
									expr_10347_cp_0.position.Y = expr_10347_cp_0.position.Y - num348 * 1f;
									Dust expr_1036C_cp_0 = Main.dust[num351];
									expr_1036C_cp_0.velocity.X = expr_1036C_cp_0.velocity.X - num347;
									Dust expr_1038B_cp_0 = Main.dust[num351];
									expr_1038B_cp_0.velocity.Y = expr_1038B_cp_0.velocity.Y - num348;
								}
								if (this.localAI[0] == 0f)
								{
									this.ai[0] = this.velocity.X;
									this.ai[1] = this.velocity.Y;
									this.localAI[1] += 1f;
									if (this.localAI[1] >= 30f)
									{
										this.velocity.Y = this.velocity.Y + 0.09f;
										this.localAI[1] = 30f;
									}
								}
								else
								{
									if (!Collision.SolidCollision(this.position, this.width, this.height))
									{
										this.localAI[0] = 0f;
										this.localAI[1] = 30f;
									}
									this.damage = 0;
								}
								if (this.velocity.Y > 16f)
								{
									this.velocity.Y = 16f;
								}
								this.rotation = (float)Math.Atan2((double)this.ai[1], (double)this.ai[0]) + 1.57f;
								return;
							}
							if (this.aiStyle == 34)
							{
								this.rotation = this.velocity.ToRotation() + 1.57079637f;
								if (this.ai[1] == 1f)
								{
									this.ai[0] += 1f;
									if (this.ai[0] == 1f)
									{
										for (int num352 = 0; num352 < 8; num352++)
										{
											int num353 = Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.8f);
											Main.dust[num353].noGravity = true;
											Main.dust[num353].velocity *= 3f;
											Main.dust[num353].fadeIn = 0.5f;
											Main.dust[num353].position += this.velocity / 2f;
											Main.dust[num353].velocity += this.velocity / 4f + Main.player[this.owner].velocity * 0.1f;
										}
									}
									if (this.ai[0] > 2f)
									{
										int num354 = Dust.NewDust(new Vector2(this.position.X + 2f, this.position.Y + 20f), 8, 8, 6, this.velocity.X, this.velocity.Y, 100, default(Color), 1.2f);
										Main.dust[num354].noGravity = true;
										Main.dust[num354].velocity *= 0.2f;
										Main.dust[num354].position = Main.dust[num354].position.RotatedBy((double)this.rotation, base.Center);
										num354 = Dust.NewDust(new Vector2(this.position.X + 2f, this.position.Y + 15f), 8, 8, 6, this.velocity.X, this.velocity.Y, 100, default(Color), 1.2f);
										Main.dust[num354].noGravity = true;
										Main.dust[num354].velocity *= 0.2f;
										Main.dust[num354].position = Main.dust[num354].position.RotatedBy((double)this.rotation, base.Center);
										num354 = Dust.NewDust(new Vector2(this.position.X + 2f, this.position.Y + 10f), 8, 8, 6, this.velocity.X, this.velocity.Y, 100, default(Color), 1.2f);
										Main.dust[num354].noGravity = true;
										Main.dust[num354].velocity *= 0.2f;
										Main.dust[num354].position = Main.dust[num354].position.RotatedBy((double)this.rotation, base.Center);
										return;
									}
								}
								else
								{
									if (this.type < 415 || this.type > 418)
									{
										int num355 = Dust.NewDust(new Vector2(this.position.X + 2f, this.position.Y + 20f), 8, 8, 6, this.velocity.X, this.velocity.Y, 100, default(Color), 1.2f);
										Main.dust[num355].noGravity = true;
										Main.dust[num355].velocity *= 0.2f;
										Main.dust[num355].position = Main.dust[num355].position.RotatedBy((double)this.rotation, base.Center);
										return;
									}
									this.ai[0] += 1f;
									if (this.ai[0] > 4f)
									{
										int num356 = Dust.NewDust(new Vector2(this.position.X + 2f, this.position.Y + 20f), 8, 8, 6, this.velocity.X, this.velocity.Y, 100, default(Color), 1.2f);
										Main.dust[num356].noGravity = true;
										Main.dust[num356].velocity *= 0.2f;
										Main.dust[num356].position = Main.dust[num356].position.RotatedBy((double)this.rotation, base.Center);
										return;
									}
								}
							}
							else if (this.aiStyle == 35)
							{
								this.ai[0] += 1f;
								if (this.ai[0] > 30f)
								{
									this.velocity.Y = this.velocity.Y + 0.2f;
									this.velocity.X = this.velocity.X * 0.985f;
									if (this.velocity.Y > 14f)
									{
										this.velocity.Y = 14f;
									}
								}
								this.rotation += (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) * (float)this.direction * 0.02f;
								if (this.owner == Main.myPlayer)
								{
									Vector2 vector26 = Collision.TileCollision(this.position, this.velocity, this.width, this.height, true, true, 1);
									bool flag9 = false;
									if (vector26 != this.velocity)
									{
										flag9 = true;
									}
									else
									{
										int num357 = (int)(base.Center.X + this.velocity.X) / 16;
										int num358 = (int)(base.Center.Y + this.velocity.Y) / 16;
										if (Main.tile[num357, num358] != null && Main.tile[num357, num358].active() && Main.tile[num357, num358].bottomSlope())
										{
											flag9 = true;
											this.position.Y = (float)(num358 * 16 + 16 + 8);
											this.position.X = (float)(num357 * 16 + 8);
										}
									}
									if (flag9)
									{
										int num359 = 213;
										if (this.type == 475)
										{
											num359 = 353;
										}
										if (this.type == 506)
										{
											num359 = 366;
										}
										if (this.type == 505)
										{
											num359 = 365;
										}
										int num360 = (int)(this.position.X + (float)(this.width / 2)) / 16;
										int num361 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
										this.position += vector26;
										int num362 = 10;
										if (Main.tile[num360, num361] != null)
										{
											while (Main.tile[num360, num361] != null && Main.tile[num360, num361].active())
											{
												if (!Main.tileRope[(int)Main.tile[num360, num361].type])
												{
													break;
												}
												num361++;
											}
											while (num362 > 0)
											{
												num362--;
												if (Main.tile[num360, num361] == null)
												{
													break;
												}
												if (Main.tile[num360, num361].active() && (Main.tileCut[(int)Main.tile[num360, num361].type] || Main.tile[num360, num361].type == 165))
												{
													WorldGen.KillTile(num360, num361, false, false, false);
													NetMessage.SendData(17, -1, -1, "", 0, (float)num360, (float)num361, 0f, 0, 0, 0);
												}
												if (!Main.tile[num360, num361].active())
												{
													WorldGen.PlaceTile(num360, num361, num359, false, false, -1, 0);
													NetMessage.SendData(17, -1, -1, "", 1, (float)num360, (float)num361, (float)num359, 0, 0, 0);
													this.ai[1] += 1f;
												}
												else
												{
													num362 = 0;
												}
												num361++;
											}
											this.Kill();
											return;
										}
									}
								}
							}
							else if (this.aiStyle == 36)
							{
								if (this.type != 307 && this.wet && !this.honeyWet)
								{
									this.Kill();
								}
								if (this.alpha > 0)
								{
									this.alpha -= 50;
								}
								else
								{
									this.extraUpdates = 0;
								}
								if (this.alpha < 0)
								{
									this.alpha = 0;
								}
								if (this.type == 307)
								{
									this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
									this.frameCounter++;
									if (this.frameCounter >= 6)
									{
										this.frame++;
										this.frameCounter = 0;
									}
									if (this.frame >= 2)
									{
										this.frame = 0;
									}
									for (int num363 = 0; num363 < 3; num363++)
									{
										float num364 = this.velocity.X / 3f * (float)num363;
										float num365 = this.velocity.Y / 3f * (float)num363;
										int num366 = Dust.NewDust(this.position, this.width, this.height, 184, 0f, 0f, 0, default(Color), 1f);
										Main.dust[num366].position.X = base.Center.X - num364;
										Main.dust[num366].position.Y = base.Center.Y - num365;
										Main.dust[num366].velocity *= 0f;
										Main.dust[num366].scale = 0.5f;
									}
								}
								else
								{
									if (this.type == 316)
									{
										if (this.velocity.X > 0f)
										{
											this.spriteDirection = -1;
										}
										else if (this.velocity.X < 0f)
										{
											this.spriteDirection = 1;
										}
									}
									else if (this.velocity.X > 0f)
									{
										this.spriteDirection = 1;
									}
									else if (this.velocity.X < 0f)
									{
										this.spriteDirection = -1;
									}
									this.rotation = this.velocity.X * 0.1f;
									this.frameCounter++;
									if (this.frameCounter >= 3)
									{
										this.frame++;
										this.frameCounter = 0;
									}
									if (this.frame >= 3)
									{
										this.frame = 0;
									}
								}
								float num367 = this.position.X;
								float num368 = this.position.Y;
								float num369 = 100000f;
								bool flag10 = false;
								this.ai[0] += 1f;
								if (this.ai[0] > 30f)
								{
									this.ai[0] = 30f;
									for (int num370 = 0; num370 < 200; num370++)
									{
										if (Main.npc[num370].CanBeChasedBy(this, false) && (!Main.npc[num370].wet || this.type == 307))
										{
											float num371 = Main.npc[num370].position.X + (float)(Main.npc[num370].width / 2);
											float num372 = Main.npc[num370].position.Y + (float)(Main.npc[num370].height / 2);
											float num373 = Math.Abs(this.position.X + (float)(this.width / 2) - num371) + Math.Abs(this.position.Y + (float)(this.height / 2) - num372);
											if (num373 < 800f && num373 < num369 && Collision.CanHit(this.position, this.width, this.height, Main.npc[num370].position, Main.npc[num370].width, Main.npc[num370].height))
											{
												num369 = num373;
												num367 = num371;
												num368 = num372;
												flag10 = true;
											}
										}
									}
								}
								if (!flag10)
								{
									num367 = this.position.X + (float)(this.width / 2) + this.velocity.X * 100f;
									num368 = this.position.Y + (float)(this.height / 2) + this.velocity.Y * 100f;
								}
								else if (this.type == 307)
								{
									this.friendly = true;
								}
								float num374 = 6f;
								float num375 = 0.1f;
								if (this.type == 189)
								{
									num374 = 7f;
									num375 = 0.15f;
								}
								if (this.type == 307)
								{
									num374 = 9f;
									num375 = 0.2f;
								}
								if (this.type == 316)
								{
									num374 = 10f;
									num375 = 0.25f;
								}
								if (this.type == 566)
								{
									num374 = 6.8f;
									num375 = 0.14f;
								}
								Vector2 vector27 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num376 = num367 - vector27.X;
								float num377 = num368 - vector27.Y;
								float num378 = (float)Math.Sqrt((double)(num376 * num376 + num377 * num377));
								num378 = num374 / num378;
								num376 *= num378;
								num377 *= num378;
								if (this.velocity.X < num376)
								{
									this.velocity.X = this.velocity.X + num375;
									if (this.velocity.X < 0f && num376 > 0f)
									{
										this.velocity.X = this.velocity.X + num375 * 2f;
									}
								}
								else if (this.velocity.X > num376)
								{
									this.velocity.X = this.velocity.X - num375;
									if (this.velocity.X > 0f && num376 < 0f)
									{
										this.velocity.X = this.velocity.X - num375 * 2f;
									}
								}
								if (this.velocity.Y < num377)
								{
									this.velocity.Y = this.velocity.Y + num375;
									if (this.velocity.Y < 0f && num377 > 0f)
									{
										this.velocity.Y = this.velocity.Y + num375 * 2f;
										return;
									}
								}
								else if (this.velocity.Y > num377)
								{
									this.velocity.Y = this.velocity.Y - num375;
									if (this.velocity.Y > 0f && num377 < 0f)
									{
										this.velocity.Y = this.velocity.Y - num375 * 2f;
										return;
									}
								}
							}
							else if (this.aiStyle == 37)
							{
								if (this.ai[1] == 0f)
								{
									this.ai[1] = 1f;
									this.localAI[0] = base.Center.X - this.velocity.X * 1.5f;
									this.localAI[1] = base.Center.Y - this.velocity.Y * 1.5f;
								}
								Vector2 value10 = new Vector2(this.localAI[0], this.localAI[1]);
								this.rotation = (base.Center - value10).ToRotation() - 1.57079637f;
								if (this.ai[0] == 0f)
								{
									if (Collision.SolidCollision(this.position, this.width, this.height))
									{
										this.velocity *= -1f;
										this.ai[0] += 1f;
										return;
									}
									float num379 = Vector2.Distance(base.Center, value10);
									if (num379 > 300f)
									{
										this.velocity *= -1f;
										this.ai[0] += 1f;
										return;
									}
								}
								else if (Collision.SolidCollision(this.position, this.width, this.height) || Vector2.Distance(base.Center, value10) < this.velocity.Length())
								{
									this.Kill();
									return;
								}
							}
							else if (this.aiStyle == 38)
							{
								this.ai[0] += 1f;
								if (this.ai[0] >= 6f)
								{
									this.ai[0] = 0f;
									Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 34);
									if (Main.myPlayer == this.owner)
									{
										Projectile.NewProjectile(this.position.X, this.position.Y, this.velocity.X, this.velocity.Y, 188, this.damage, this.knockBack, this.owner, 0f, 0f);
										return;
									}
								}
							}
							else if (this.aiStyle == 39)
							{
								this.alpha -= 50;
								if (this.alpha < 0)
								{
									this.alpha = 0;
								}
								if (Main.player[this.owner].dead)
								{
									this.Kill();
									return;
								}
								if (this.alpha == 0)
								{
									Main.player[this.owner].itemAnimation = 5;
									Main.player[this.owner].itemTime = 5;
									if (this.position.X + (float)(this.width / 2) > Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2))
									{
										Main.player[this.owner].ChangeDir(1);
									}
									else
									{
										Main.player[this.owner].ChangeDir(-1);
									}
								}
								Vector2 vector28 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num380 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector28.X;
								float num381 = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - vector28.Y;
								float num382 = (float)Math.Sqrt((double)(num380 * num380 + num381 * num381));
								if (!Main.player[this.owner].channel && this.alpha == 0)
								{
									this.ai[0] = 1f;
									this.ai[1] = -1f;
								}
								if (this.ai[1] > 0f && num382 > 1500f)
								{
									this.ai[1] = 0f;
									this.ai[0] = 1f;
								}
								if (this.ai[1] > 0f)
								{
									this.tileCollide = false;
									int num383 = (int)this.ai[1] - 1;
									if (Main.npc[num383].active && Main.npc[num383].life > 0)
									{
										float num384 = 16f;
										vector28 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										num380 = Main.npc[num383].position.X + (float)(Main.npc[num383].width / 2) - vector28.X;
										num381 = Main.npc[num383].position.Y + (float)(Main.npc[num383].height / 2) - vector28.Y;
										num382 = (float)Math.Sqrt((double)(num380 * num380 + num381 * num381));
										if (num382 < num384)
										{
											this.velocity.X = num380;
											this.velocity.Y = num381;
											if (num382 > num384 / 2f)
											{
												if (this.velocity.X < 0f)
												{
													this.spriteDirection = -1;
													this.rotation = (float)Math.Atan2((double)(-(double)this.velocity.Y), (double)(-(double)this.velocity.X));
												}
												else
												{
													this.spriteDirection = 1;
													this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
												}
											}
										}
										else
										{
											num382 = num384 / num382;
											num380 *= num382;
											num381 *= num382;
											this.velocity.X = num380;
											this.velocity.Y = num381;
											if (this.velocity.X < 0f)
											{
												this.spriteDirection = -1;
												this.rotation = (float)Math.Atan2((double)(-(double)this.velocity.Y), (double)(-(double)this.velocity.X));
											}
											else
											{
												this.spriteDirection = 1;
												this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
											}
										}
										this.ai[0] = 1f;
									}
									else
									{
										this.ai[1] = 0f;
										float num385 = this.position.X;
										float num386 = this.position.Y;
										float num387 = 3000f;
										int num388 = -1;
										for (int num389 = 0; num389 < 200; num389++)
										{
											if (Main.npc[num389].CanBeChasedBy(this, false))
											{
												float num390 = Main.npc[num389].position.X + (float)(Main.npc[num389].width / 2);
												float num391 = Main.npc[num389].position.Y + (float)(Main.npc[num389].height / 2);
												float num392 = Math.Abs(this.position.X + (float)(this.width / 2) - num390) + Math.Abs(this.position.Y + (float)(this.height / 2) - num391);
												if (num392 < num387 && Collision.CanHit(this.position, this.width, this.height, Main.npc[num389].position, Main.npc[num389].width, Main.npc[num389].height))
												{
													num387 = num392;
													num385 = num390;
													num386 = num391;
													num388 = num389;
												}
											}
										}
										if (num388 >= 0)
										{
											float num393 = 16f;
											vector28 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											num380 = num385 - vector28.X;
											num381 = num386 - vector28.Y;
											num382 = (float)Math.Sqrt((double)(num380 * num380 + num381 * num381));
											num382 = num393 / num382;
											num380 *= num382;
											num381 *= num382;
											this.velocity.X = num380;
											this.velocity.Y = num381;
											this.ai[0] = 0f;
											this.ai[1] = (float)(num388 + 1);
										}
									}
								}
								else if (this.ai[0] == 0f)
								{
									if (num382 > 700f)
									{
										this.ai[0] = 1f;
									}
									if (this.velocity.X < 0f)
									{
										this.spriteDirection = -1;
										this.rotation = (float)Math.Atan2((double)(-(double)this.velocity.Y), (double)(-(double)this.velocity.X));
									}
									else
									{
										this.spriteDirection = 1;
										this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
									}
								}
								else if (this.ai[0] == 1f)
								{
									this.tileCollide = false;
									if (this.velocity.X < 0f)
									{
										this.spriteDirection = 1;
										this.rotation = (float)Math.Atan2((double)(-(double)this.velocity.Y), (double)(-(double)this.velocity.X));
									}
									else
									{
										this.spriteDirection = -1;
										this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
									}
									if (this.velocity.X < 0f)
									{
										this.spriteDirection = -1;
										this.rotation = (float)Math.Atan2((double)(-(double)this.velocity.Y), (double)(-(double)this.velocity.X));
									}
									else
									{
										this.spriteDirection = 1;
										this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
									}
									float num394 = 20f;
									if (num382 < 70f)
									{
										this.Kill();
									}
									num382 = num394 / num382;
									num380 *= num382;
									num381 *= num382;
									this.velocity.X = num380;
									this.velocity.Y = num381;
								}
								this.frameCounter++;
								if (this.frameCounter >= 4)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame >= 4)
								{
									this.frame = 0;
									return;
								}
							}
							else
							{
								if (this.aiStyle == 40)
								{
									this.localAI[0] += 1f;
									if (this.localAI[0] > 3f)
									{
										this.localAI[0] = 100f;
										this.alpha -= 50;
										if (this.alpha < 0)
										{
											this.alpha = 0;
										}
									}
									this.frameCounter++;
									if (this.frameCounter >= 3)
									{
										this.frame++;
										this.frameCounter = 0;
									}
									if (this.frame >= 5)
									{
										this.frame = 0;
									}
									this.velocity.X = this.velocity.X + this.ai[0];
									this.velocity.Y = this.velocity.Y + this.ai[1];
									this.localAI[1] += 1f;
									if (this.localAI[1] == 50f)
									{
										this.localAI[1] = 51f;
										this.ai[0] = (float)Main.rand.Next(-100, 101) * 6E-05f;
										this.ai[1] = (float)Main.rand.Next(-100, 101) * 6E-05f;
									}
									if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) > 16f)
									{
										this.velocity.X = this.velocity.X * 0.95f;
										this.velocity.Y = this.velocity.Y * 0.95f;
									}
									if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) < 12f)
									{
										this.velocity.X = this.velocity.X * 1.05f;
										this.velocity.Y = this.velocity.Y * 1.05f;
									}
									this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 3.14f;
									return;
								}
								if (this.aiStyle == 41)
								{
									if (this.localAI[0] == 0f)
									{
										this.localAI[0] = 1f;
										this.frame = Main.rand.Next(3);
									}
									this.rotation += this.velocity.X * 0.01f;
									return;
								}
								if (this.aiStyle == 42)
								{
									if (!Main.player[this.owner].crystalLeaf)
									{
										this.Kill();
										return;
									}
									this.position.X = Main.player[this.owner].Center.X - (float)(this.width / 2);
									this.position.Y = Main.player[this.owner].Center.Y - (float)(this.height / 2) + Main.player[this.owner].gfxOffY - 60f;
									if (Main.player[this.owner].gravDir == -1f)
									{
										this.position.Y = this.position.Y + 120f;
										this.rotation = 3.14f;
									}
									else
									{
										this.rotation = 0f;
									}
									this.position.X = (float)((int)this.position.X);
									this.position.Y = (float)((int)this.position.Y);
									float num395 = (float)Main.mouseTextColor / 200f - 0.35f;
									num395 *= 0.2f;
									this.scale = num395 + 0.95f;
									if (this.owner == Main.myPlayer)
									{
										if (this.ai[0] != 0f)
										{
											this.ai[0] -= 1f;
											return;
										}
										float num396 = this.position.X;
										float num397 = this.position.Y;
										float num398 = 700f;
										bool flag11 = false;
										for (int num399 = 0; num399 < 200; num399++)
										{
											if (Main.npc[num399].CanBeChasedBy(this, true))
											{
												float num400 = Main.npc[num399].position.X + (float)(Main.npc[num399].width / 2);
												float num401 = Main.npc[num399].position.Y + (float)(Main.npc[num399].height / 2);
												float num402 = Math.Abs(this.position.X + (float)(this.width / 2) - num400) + Math.Abs(this.position.Y + (float)(this.height / 2) - num401);
												if (num402 < num398 && Collision.CanHit(this.position, this.width, this.height, Main.npc[num399].position, Main.npc[num399].width, Main.npc[num399].height))
												{
													num398 = num402;
													num396 = num400;
													num397 = num401;
													flag11 = true;
												}
											}
										}
										if (flag11)
										{
											float num403 = 12f;
											Vector2 vector29 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											float num404 = num396 - vector29.X;
											float num405 = num397 - vector29.Y;
											float num406 = (float)Math.Sqrt((double)(num404 * num404 + num405 * num405));
											num406 = num403 / num406;
											num404 *= num406;
											num405 *= num406;
											Projectile.NewProjectile(base.Center.X - 4f, base.Center.Y, num404, num405, 227, Player.crystalLeafDamage, (float)Player.crystalLeafKB, this.owner, 0f, 0f);
											this.ai[0] = 50f;
											return;
										}
									}
								}
								else
								{
									if (this.aiStyle == 43)
									{
										if (this.localAI[1] == 0f)
										{
											Main.PlaySound(6, (int)this.position.X, (int)this.position.Y, 1);
											this.localAI[1] += 1f;
											for (int num407 = 0; num407 < 5; num407++)
											{
												int num408 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 157, 0f, 0f, 0, default(Color), 1f);
												Main.dust[num408].noGravity = true;
												Main.dust[num408].velocity *= 3f;
												Main.dust[num408].scale = 1.5f;
											}
										}
										this.ai[0] = (float)Main.rand.Next(-100, 101) * 0.0025f;
										this.ai[1] = (float)Main.rand.Next(-100, 101) * 0.0025f;
										if (this.localAI[0] == 0f)
										{
											this.scale += 0.05f;
											if ((double)this.scale > 1.2)
											{
												this.localAI[0] = 1f;
											}
										}
										else
										{
											this.scale -= 0.05f;
											if ((double)this.scale < 0.8)
											{
												this.localAI[0] = 0f;
											}
										}
										this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 3.14f;
										int num409 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 157, 0f, 0f, 0, default(Color), 1f);
										Main.dust[num409].noGravity = true;
										Main.dust[num409].velocity *= 0.1f;
										Main.dust[num409].scale = 1.5f;
										return;
									}
									if (this.aiStyle == 44)
									{
										if (this.type == 228)
										{
											this.velocity *= 0.96f;
											this.alpha += 4;
											if (this.alpha > 255)
											{
												this.Kill();
											}
										}
										else if (this.type == 229)
										{
											if (this.ai[0] == 0f)
											{
												Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
											}
											this.ai[0] += 1f;
											if (this.ai[0] > 20f)
											{
												this.velocity.Y = this.velocity.Y + 0.3f;
												this.velocity.X = this.velocity.X * 0.98f;
											}
										}
										this.frameCounter++;
										if (this.frameCounter > 5)
										{
											this.frame++;
											this.frameCounter = 0;
										}
										if (this.frame >= Main.projFrames[this.type])
										{
											this.frame = 0;
											return;
										}
									}
									else if (this.aiStyle == 45)
									{
										if (this.type == 237 || this.type == 243)
										{
											float num410 = this.ai[0];
											float num411 = this.ai[1];
											if (num410 != 0f && num411 != 0f)
											{
												bool flag12 = false;
												bool flag13 = false;
												if ((this.velocity.X < 0f && base.Center.X < num410) || (this.velocity.X > 0f && base.Center.X > num410))
												{
													flag12 = true;
												}
												if ((this.velocity.Y < 0f && base.Center.Y < num411) || (this.velocity.Y > 0f && base.Center.Y > num411))
												{
													flag13 = true;
												}
												if (flag12 && flag13)
												{
													this.Kill();
												}
											}
											this.rotation += this.velocity.X * 0.02f;
											this.frameCounter++;
											if (this.frameCounter > 4)
											{
												this.frameCounter = 0;
												this.frame++;
												if (this.frame > 3)
												{
													this.frame = 0;
													return;
												}
											}
										}
										else if (this.type == 238 || this.type == 244)
										{
											this.frameCounter++;
											if (this.frameCounter > 8)
											{
												this.frameCounter = 0;
												this.frame++;
												if (this.frame > 5)
												{
													this.frame = 0;
												}
											}
											this.ai[1] += 1f;
											if (this.type == 244 && this.ai[1] >= 3600f)
											{
												this.alpha += 5;
												if (this.alpha > 255)
												{
													this.alpha = 255;
													this.Kill();
												}
											}
											else if (this.type == 238 && this.ai[1] >= 7200f)
											{
												this.alpha += 5;
												if (this.alpha > 255)
												{
													this.alpha = 255;
													this.Kill();
												}
											}
											else
											{
												this.ai[0] += 1f;
												if (this.type == 244)
												{
													if (this.ai[0] > 10f)
													{
														this.ai[0] = 0f;
														if (this.owner == Main.myPlayer)
														{
															int num412 = (int)(this.position.X + 14f + (float)Main.rand.Next(this.width - 28));
															int num413 = (int)(this.position.Y + (float)this.height + 4f);
															Projectile.NewProjectile((float)num412, (float)num413, 0f, 5f, 245, this.damage, 0f, this.owner, 0f, 0f);
														}
													}
												}
												else if (this.ai[0] > 8f)
												{
													this.ai[0] = 0f;
													if (this.owner == Main.myPlayer)
													{
														int num414 = (int)(this.position.X + 14f + (float)Main.rand.Next(this.width - 28));
														int num415 = (int)(this.position.Y + (float)this.height + 4f);
														Projectile.NewProjectile((float)num414, (float)num415, 0f, 5f, 239, this.damage, 0f, this.owner, 0f, 0f);
													}
												}
											}
											this.localAI[0] += 1f;
											if (this.localAI[0] >= 10f)
											{
												this.localAI[0] = 0f;
												int num416 = 0;
												int num417 = 0;
												float num418 = 0f;
												int num419 = this.type;
												for (int num420 = 0; num420 < 1000; num420++)
												{
													if (Main.projectile[num420].active && Main.projectile[num420].owner == this.owner && Main.projectile[num420].type == num419 && Main.projectile[num420].ai[1] < 3600f)
													{
														num416++;
														if (Main.projectile[num420].ai[1] > num418)
														{
															num417 = num420;
															num418 = Main.projectile[num420].ai[1];
														}
													}
												}
												if (this.type == 244)
												{
													if (num416 > 1)
													{
														Main.projectile[num417].netUpdate = true;
														Main.projectile[num417].ai[1] = 36000f;
														return;
													}
												}
												else if (num416 > 2)
												{
													Main.projectile[num417].netUpdate = true;
													Main.projectile[num417].ai[1] = 36000f;
													return;
												}
											}
										}
										else
										{
											if (this.type == 239)
											{
												this.alpha = 50;
												return;
											}
											if (this.type == 245)
											{
												this.alpha = 100;
												return;
											}
											if (this.type == 264)
											{
												this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
												return;
											}
										}
									}
									else if (this.aiStyle == 46)
									{
										int num421 = 1200;
										if (this.type == 250)
										{
											if (this.owner == Main.myPlayer)
											{
												this.localAI[0] += 1f;
												if (this.localAI[0] > 4f)
												{
													this.localAI[0] = 3f;
													Projectile.NewProjectile(base.Center.X, base.Center.Y, this.velocity.X * 0.001f, this.velocity.Y * 0.001f, 251, this.damage, this.knockBack, this.owner, 0f, 0f);
												}
												if (this.timeLeft > num421)
												{
													this.timeLeft = num421;
												}
											}
											float num422 = 1f;
											if (this.velocity.Y < 0f)
											{
												num422 -= this.velocity.Y / 3f;
											}
											this.ai[0] += num422;
											if (this.ai[0] > 30f)
											{
												this.velocity.Y = this.velocity.Y + 0.5f;
												if (this.velocity.Y > 0f)
												{
													this.velocity.X = this.velocity.X * 0.95f;
												}
												else
												{
													this.velocity.X = this.velocity.X * 1.05f;
												}
											}
											float num423 = this.velocity.X;
											float num424 = this.velocity.Y;
											float num425 = (float)Math.Sqrt((double)(num423 * num423 + num424 * num424));
											num425 = 15.95f * this.scale / num425;
											num423 *= num425;
											num424 *= num425;
											this.velocity.X = num423;
											this.velocity.Y = num424;
											this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
											return;
										}
										if (this.localAI[0] == 0f)
										{
											if (this.velocity.X > 0f)
											{
												this.spriteDirection = -1;
												this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
											}
											else
											{
												this.spriteDirection = 1;
												this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
											}
											this.localAI[0] = 1f;
											this.timeLeft = num421;
										}
										this.velocity.X = this.velocity.X * 0.98f;
										this.velocity.Y = this.velocity.Y * 0.98f;
										if (this.rotation == 0f)
										{
											this.alpha = 255;
											return;
										}
										if (this.timeLeft < 10)
										{
											this.alpha = 255 - (int)(255f * (float)this.timeLeft / 10f);
											return;
										}
										if (this.timeLeft > num421 - 10)
										{
											int num426 = num421 - this.timeLeft;
											this.alpha = 255 - (int)(255f * (float)num426 / 10f);
											return;
										}
										this.alpha = 0;
										return;
									}
									else if (this.aiStyle == 47)
									{
										if (this.ai[0] == 0f)
										{
											this.ai[0] = this.velocity.X;
											this.ai[1] = this.velocity.Y;
										}
										if (this.velocity.X > 0f)
										{
											this.rotation += (Math.Abs(this.velocity.Y) + Math.Abs(this.velocity.X)) * 0.001f;
										}
										else
										{
											this.rotation -= (Math.Abs(this.velocity.Y) + Math.Abs(this.velocity.X)) * 0.001f;
										}
										this.frameCounter++;
										if (this.frameCounter > 6)
										{
											this.frameCounter = 0;
											this.frame++;
											if (this.frame > 4)
											{
												this.frame = 0;
											}
										}
										if (Math.Sqrt((double)(this.velocity.X * this.velocity.X + this.velocity.Y * this.velocity.Y)) > 2.0)
										{
											this.velocity *= 0.98f;
										}
										for (int num427 = 0; num427 < 1000; num427++)
										{
											if (num427 != this.whoAmI && Main.projectile[num427].active && Main.projectile[num427].owner == this.owner && Main.projectile[num427].type == this.type && this.timeLeft > Main.projectile[num427].timeLeft && Main.projectile[num427].timeLeft > 30)
											{
												Main.projectile[num427].timeLeft = 30;
											}
										}
										int[] array = new int[20];
										int num428 = 0;
										float num429 = 300f;
										bool flag14 = false;
										for (int num430 = 0; num430 < 200; num430++)
										{
											if (Main.npc[num430].CanBeChasedBy(this, false))
											{
												float num431 = Main.npc[num430].position.X + (float)(Main.npc[num430].width / 2);
												float num432 = Main.npc[num430].position.Y + (float)(Main.npc[num430].height / 2);
												float num433 = Math.Abs(this.position.X + (float)(this.width / 2) - num431) + Math.Abs(this.position.Y + (float)(this.height / 2) - num432);
												if (num433 < num429 && Collision.CanHit(base.Center, 1, 1, Main.npc[num430].Center, 1, 1))
												{
													if (num428 < 20)
													{
														array[num428] = num430;
														num428++;
													}
													flag14 = true;
												}
											}
										}
										if (this.timeLeft < 30)
										{
											flag14 = false;
										}
										if (flag14)
										{
											int num434 = Main.rand.Next(num428);
											num434 = array[num434];
											float num435 = Main.npc[num434].position.X + (float)(Main.npc[num434].width / 2);
											float num436 = Main.npc[num434].position.Y + (float)(Main.npc[num434].height / 2);
											this.localAI[0] += 1f;
											if (this.localAI[0] > 8f)
											{
												this.localAI[0] = 0f;
												float num437 = 6f;
												Vector2 value11 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
												value11 += this.velocity * 4f;
												float num438 = num435 - value11.X;
												float num439 = num436 - value11.Y;
												float num440 = (float)Math.Sqrt((double)(num438 * num438 + num439 * num439));
												num440 = num437 / num440;
												num438 *= num440;
												num439 *= num440;
												Projectile.NewProjectile(value11.X, value11.Y, num438, num439, 255, this.damage, this.knockBack, this.owner, 0f, 0f);
												return;
											}
										}
									}
									else if (this.aiStyle == 48)
									{
										if (this.type == 255)
										{
											for (int num441 = 0; num441 < 4; num441++)
											{
												Vector2 vector30 = this.position;
												vector30 -= this.velocity * ((float)num441 * 0.25f);
												this.alpha = 255;
												int num442 = Dust.NewDust(vector30, 1, 1, 160, 0f, 0f, 0, default(Color), 1f);
												Main.dust[num442].position = vector30;
												Dust expr_13B72_cp_0 = Main.dust[num442];
												expr_13B72_cp_0.position.X = expr_13B72_cp_0.position.X + (float)(this.width / 2);
												Dust expr_13B96_cp_0 = Main.dust[num442];
												expr_13B96_cp_0.position.Y = expr_13B96_cp_0.position.Y + (float)(this.height / 2);
												Main.dust[num442].scale = (float)Main.rand.Next(70, 110) * 0.013f;
												Main.dust[num442].velocity *= 0.2f;
											}
											return;
										}
										if (this.type == 433)
										{
											for (int num443 = 0; num443 < 2; num443++)
											{
												Vector2 vector31 = this.position;
												vector31 -= this.velocity * ((float)num443 * 0.25f);
												this.alpha = 255;
												int num444 = Dust.NewDust(vector31, 1, 1, 160, 0f, 0f, 0, default(Color), 1f);
												Main.dust[num444].position = vector31;
												Dust expr_13CA9_cp_0 = Main.dust[num444];
												expr_13CA9_cp_0.position.X = expr_13CA9_cp_0.position.X + (float)(this.width / 2);
												Dust expr_13CCD_cp_0 = Main.dust[num444];
												expr_13CCD_cp_0.position.Y = expr_13CCD_cp_0.position.Y + (float)(this.height / 2);
												if (Main.rand.Next(2) == 0)
												{
													Main.dust[num444].color = Color.LimeGreen;
												}
												else
												{
													Main.dust[num444].color = Color.CornflowerBlue;
												}
												Main.dust[num444].scale = (float)Main.rand.Next(70, 110) * 0.013f;
												Main.dust[num444].velocity *= 0.2f;
											}
											return;
										}
										if (this.type == 290)
										{
											if (this.localAI[0] == 0f)
											{
												Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
											}
											this.localAI[0] += 1f;
											if (this.localAI[0] > 3f)
											{
												for (int num445 = 0; num445 < 3; num445++)
												{
													Vector2 vector32 = this.position;
													vector32 -= this.velocity * ((float)num445 * 0.3334f);
													this.alpha = 255;
													int num446 = Dust.NewDust(vector32, 1, 1, 173, 0f, 0f, 0, default(Color), 1f);
													Main.dust[num446].position = vector32;
													Main.dust[num446].scale = (float)Main.rand.Next(70, 110) * 0.013f;
													Main.dust[num446].velocity *= 0.2f;
												}
												return;
											}
										}
										else if (this.type == 294)
										{
											this.localAI[0] += 1f;
											if (this.localAI[0] > 9f)
											{
												for (int num447 = 0; num447 < 4; num447++)
												{
													Vector2 vector33 = this.position;
													vector33 -= this.velocity * ((float)num447 * 0.25f);
													this.alpha = 255;
													int num448 = Dust.NewDust(vector33, 1, 1, 173, 0f, 0f, 0, default(Color), 1f);
													Main.dust[num448].position = vector33;
													Main.dust[num448].scale = (float)Main.rand.Next(70, 110) * 0.013f;
													Main.dust[num448].velocity *= 0.2f;
												}
												return;
											}
										}
										else
										{
											this.localAI[0] += 1f;
											if (this.localAI[0] > 3f)
											{
												for (int num449 = 0; num449 < 4; num449++)
												{
													Vector2 vector34 = this.position;
													vector34 -= this.velocity * ((float)num449 * 0.25f);
													this.alpha = 255;
													int num450 = Dust.NewDust(vector34, 1, 1, 162, 0f, 0f, 0, default(Color), 1f);
													Main.dust[num450].position = vector34;
													Dust expr_140A0_cp_0 = Main.dust[num450];
													expr_140A0_cp_0.position.X = expr_140A0_cp_0.position.X + (float)(this.width / 2);
													Dust expr_140C4_cp_0 = Main.dust[num450];
													expr_140C4_cp_0.position.Y = expr_140C4_cp_0.position.Y + (float)(this.height / 2);
													Main.dust[num450].scale = (float)Main.rand.Next(70, 110) * 0.013f;
													Main.dust[num450].velocity *= 0.2f;
												}
												return;
											}
										}
									}
									else if (this.aiStyle == 49)
									{
										if (this.ai[1] == 0f)
										{
											this.ai[1] = 1f;
											Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
										}
										if (this.ai[1] == 1f)
										{
											if (this.velocity.X > 0f)
											{
												this.direction = 1;
											}
											else if (this.velocity.X < 0f)
											{
												this.direction = -1;
											}
											this.spriteDirection = this.direction;
											this.ai[0] += 1f;
											this.rotation += this.velocity.X * 0.05f + (float)this.direction * 0.05f;
											if (this.ai[0] >= 18f)
											{
												this.velocity.Y = this.velocity.Y + 0.28f;
												this.velocity.X = this.velocity.X * 0.99f;
											}
											if ((double)this.velocity.Y > 15.9)
											{
												this.velocity.Y = 15.9f;
											}
											if (this.ai[0] > 2f)
											{
												this.alpha = 0;
												if (this.ai[0] == 3f)
												{
													for (int num451 = 0; num451 < 10; num451++)
													{
														int num452 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
														Main.dust[num452].velocity *= 0.5f;
														Main.dust[num452].velocity += this.velocity * 0.1f;
													}
													for (int num453 = 0; num453 < 5; num453++)
													{
														int num454 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2f);
														Main.dust[num454].noGravity = true;
														Main.dust[num454].velocity *= 3f;
														Main.dust[num454].velocity += this.velocity * 0.2f;
														num454 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1f);
														Main.dust[num454].velocity *= 2f;
														Main.dust[num454].velocity += this.velocity * 0.3f;
													}
													for (int num455 = 0; num455 < 1; num455++)
													{
														int num456 = Gore.NewGore(new Vector2(this.position.X - 10f, this.position.Y - 10f), default(Vector2), Main.rand.Next(61, 64), 1f);
														Main.gore[num456].position += this.velocity * 1.25f;
														Main.gore[num456].scale = 1.5f;
														Main.gore[num456].velocity += this.velocity * 0.5f;
														Main.gore[num456].velocity *= 0.02f;
													}
													return;
												}
											}
										}
										else if (this.ai[1] == 2f)
										{
											this.rotation = 0f;
											this.velocity.X = this.velocity.X * 0.95f;
											this.velocity.Y = this.velocity.Y + 0.2f;
											return;
										}
									}
									else if (this.aiStyle == 50)
									{
										if (this.type == 291)
										{
											if (this.localAI[0] == 0f)
											{
												Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 20);
												this.localAI[0] += 1f;
											}
											bool flag15 = false;
											bool flag16 = false;
											if (this.velocity.X < 0f && this.position.X < this.ai[0])
											{
												flag15 = true;
											}
											if (this.velocity.X > 0f && this.position.X > this.ai[0])
											{
												flag15 = true;
											}
											if (this.velocity.Y < 0f && this.position.Y < this.ai[1])
											{
												flag16 = true;
											}
											if (this.velocity.Y > 0f && this.position.Y > this.ai[1])
											{
												flag16 = true;
											}
											if (flag15 && flag16)
											{
												this.Kill();
											}
											for (int num457 = 0; num457 < 10; num457++)
											{
												int num458 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 174, 0f, 0f, 100, default(Color), 1.2f);
												Main.dust[num458].noGravity = true;
												Main.dust[num458].velocity *= 0.5f;
												Main.dust[num458].velocity += this.velocity * 0.1f;
											}
											return;
										}
										if (this.type == 295)
										{
											for (int num459 = 0; num459 < 8; num459++)
											{
												int num460 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 174, 0f, 0f, 100, default(Color), 1.2f);
												Main.dust[num460].noGravity = true;
												Main.dust[num460].velocity *= 0.5f;
												Main.dust[num460].velocity += this.velocity * 0.1f;
											}
											return;
										}
										if (this.localAI[0] == 0f)
										{
											Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 74);
											this.localAI[0] += 1f;
										}
										this.ai[0] += 1f;
										if (this.type == 296)
										{
											this.ai[0] += 3f;
										}
										float num461 = 25f;
										if (this.ai[0] > 180f)
										{
											num461 -= (this.ai[0] - 180f) / 2f;
										}
										if (num461 <= 0f)
										{
											num461 = 0f;
											this.Kill();
										}
										if (this.type == 296)
										{
											num461 *= 0.7f;
										}
										int num462 = 0;
										while ((float)num462 < num461)
										{
											float num463 = (float)Main.rand.Next(-10, 11);
											float num464 = (float)Main.rand.Next(-10, 11);
											float num465 = (float)Main.rand.Next(3, 9);
											float num466 = (float)Math.Sqrt((double)(num463 * num463 + num464 * num464));
											num466 = num465 / num466;
											num463 *= num466;
											num464 *= num466;
											int num467 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 174, 0f, 0f, 100, default(Color), 1.5f);
											Main.dust[num467].noGravity = true;
											Main.dust[num467].position.X = base.Center.X;
											Main.dust[num467].position.Y = base.Center.Y;
											Dust expr_14B13_cp_0 = Main.dust[num467];
											expr_14B13_cp_0.position.X = expr_14B13_cp_0.position.X + (float)Main.rand.Next(-10, 11);
											Dust expr_14B3D_cp_0 = Main.dust[num467];
											expr_14B3D_cp_0.position.Y = expr_14B3D_cp_0.position.Y + (float)Main.rand.Next(-10, 11);
											Main.dust[num467].velocity.X = num463;
											Main.dust[num467].velocity.Y = num464;
											num462++;
										}
										return;
									}
									else if (this.aiStyle == 51)
									{
										if (this.type == 297)
										{
											this.localAI[0] += 1f;
											if (this.localAI[0] > 4f)
											{
												for (int num468 = 0; num468 < 5; num468++)
												{
													int num469 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 175, 0f, 0f, 100, default(Color), 2f);
													Main.dust[num469].noGravity = true;
													Main.dust[num469].velocity *= 0f;
												}
											}
										}
										else
										{
											if (this.localAI[0] == 0f)
											{
												Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
												this.localAI[0] += 1f;
											}
											for (int num470 = 0; num470 < 9; num470++)
											{
												int num471 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 175, 0f, 0f, 100, default(Color), 1.3f);
												Main.dust[num471].noGravity = true;
												Main.dust[num471].velocity *= 0f;
											}
										}
										float num472 = base.Center.X;
										float num473 = base.Center.Y;
										float num474 = 400f;
										bool flag17 = false;
										if (this.type == 297)
										{
											for (int num475 = 0; num475 < 200; num475++)
											{
												if (Main.npc[num475].CanBeChasedBy(this, false) && Collision.CanHit(base.Center, 1, 1, Main.npc[num475].Center, 1, 1))
												{
													float num476 = Main.npc[num475].position.X + (float)(Main.npc[num475].width / 2);
													float num477 = Main.npc[num475].position.Y + (float)(Main.npc[num475].height / 2);
													float num478 = Math.Abs(this.position.X + (float)(this.width / 2) - num476) + Math.Abs(this.position.Y + (float)(this.height / 2) - num477);
													if (num478 < num474)
													{
														num474 = num478;
														num472 = num476;
														num473 = num477;
														flag17 = true;
													}
												}
											}
										}
										else
										{
											num474 = 200f;
											for (int num479 = 0; num479 < 255; num479++)
											{
												if (Main.player[num479].active && !Main.player[num479].dead)
												{
													float num480 = Main.player[num479].position.X + (float)(Main.player[num479].width / 2);
													float num481 = Main.player[num479].position.Y + (float)(Main.player[num479].height / 2);
													float num482 = Math.Abs(this.position.X + (float)(this.width / 2) - num480) + Math.Abs(this.position.Y + (float)(this.height / 2) - num481);
													if (num482 < num474)
													{
														num474 = num482;
														num472 = num480;
														num473 = num481;
														flag17 = true;
													}
												}
											}
										}
										if (flag17)
										{
											float num483 = 3f;
											if (this.type == 297)
											{
												num483 = 6f;
											}
											Vector2 vector35 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											float num484 = num472 - vector35.X;
											float num485 = num473 - vector35.Y;
											float num486 = (float)Math.Sqrt((double)(num484 * num484 + num485 * num485));
											num486 = num483 / num486;
											num484 *= num486;
											num485 *= num486;
											if (this.type == 297)
											{
												this.velocity.X = (this.velocity.X * 20f + num484) / 21f;
												this.velocity.Y = (this.velocity.Y * 20f + num485) / 21f;
												return;
											}
											this.velocity.X = (this.velocity.X * 100f + num484) / 101f;
											this.velocity.Y = (this.velocity.Y * 100f + num485) / 101f;
											return;
										}
									}
									else if (this.aiStyle == 52)
									{
										int num487 = (int)this.ai[0];
										float num488 = 4f;
										Vector2 vector36 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float num489 = Main.player[num487].Center.X - vector36.X;
										float num490 = Main.player[num487].Center.Y - vector36.Y;
										float num491 = (float)Math.Sqrt((double)(num489 * num489 + num490 * num490));
										if (num491 < 50f && this.position.X < Main.player[num487].position.X + (float)Main.player[num487].width && this.position.X + (float)this.width > Main.player[num487].position.X && this.position.Y < Main.player[num487].position.Y + (float)Main.player[num487].height && this.position.Y + (float)this.height > Main.player[num487].position.Y)
										{
											if (this.owner == Main.myPlayer && !Main.player[Main.myPlayer].moonLeech)
											{
												int num492 = (int)this.ai[1];
												Main.player[num487].HealEffect(num492, false);
												Main.player[num487].statLife += num492;
												if (Main.player[num487].statLife > Main.player[num487].statLifeMax2)
												{
													Main.player[num487].statLife = Main.player[num487].statLifeMax2;
												}
												NetMessage.SendData(66, -1, -1, "", num487, (float)num492, 0f, 0f, 0, 0, 0);
											}
											this.Kill();
										}
										num491 = num488 / num491;
										num489 *= num491;
										num490 *= num491;
										this.velocity.X = (this.velocity.X * 15f + num489) / 16f;
										this.velocity.Y = (this.velocity.Y * 15f + num490) / 16f;
										if (this.type == 305)
										{
											for (int num493 = 0; num493 < 3; num493++)
											{
												float num494 = this.velocity.X * 0.334f * (float)num493;
												float num495 = -(this.velocity.Y * 0.334f) * (float)num493;
												int num496 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 183, 0f, 0f, 100, default(Color), 1.1f);
												Main.dust[num496].noGravity = true;
												Main.dust[num496].velocity *= 0f;
												Dust expr_15516_cp_0 = Main.dust[num496];
												expr_15516_cp_0.position.X = expr_15516_cp_0.position.X - num494;
												Dust expr_15535_cp_0 = Main.dust[num496];
												expr_15535_cp_0.position.Y = expr_15535_cp_0.position.Y - num495;
											}
											return;
										}
										for (int num497 = 0; num497 < 5; num497++)
										{
											float num498 = this.velocity.X * 0.2f * (float)num497;
											float num499 = -(this.velocity.Y * 0.2f) * (float)num497;
											int num500 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 175, 0f, 0f, 100, default(Color), 1.3f);
											Main.dust[num500].noGravity = true;
											Main.dust[num500].velocity *= 0f;
											Dust expr_1562D_cp_0 = Main.dust[num500];
											expr_1562D_cp_0.position.X = expr_1562D_cp_0.position.X - num498;
											Dust expr_1564C_cp_0 = Main.dust[num500];
											expr_1564C_cp_0.position.Y = expr_1564C_cp_0.position.Y - num499;
										}
										return;
									}
									else if (this.aiStyle == 53)
									{
										if (this.localAI[0] == 0f)
										{
											this.localAI[1] = 1f;
											this.localAI[0] = 1f;
											this.ai[0] = 120f;
											int num501 = 80;
											Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 46);
											if (this.type == 308)
											{
												for (int num502 = 0; num502 < num501; num502++)
												{
													int num503 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 16f), this.width, this.height - 16, 185, 0f, 0f, 0, default(Color), 1f);
													Main.dust[num503].velocity *= 2f;
													Main.dust[num503].noGravity = true;
													Main.dust[num503].scale *= 1.15f;
												}
											}
											if (this.type == 377)
											{
												this.frame = 4;
												num501 = 40;
												for (int num504 = 0; num504 < num501; num504++)
												{
													int num505 = Dust.NewDust(this.position + Vector2.UnitY * 16f, this.width, this.height - 16, 171, 0f, 0f, 100, default(Color), 1f);
													Main.dust[num505].scale = (float)Main.rand.Next(1, 10) * 0.1f;
													Main.dust[num505].noGravity = true;
													Main.dust[num505].fadeIn = 1.5f;
													Main.dust[num505].velocity *= 0.75f;
												}
											}
										}
										this.velocity.X = 0f;
										this.velocity.Y = this.velocity.Y + 0.2f;
										if (this.velocity.Y > 16f)
										{
											this.velocity.Y = 16f;
										}
										bool flag18 = false;
										float num506 = base.Center.X;
										float num507 = base.Center.Y;
										float num508 = 1000f;
										for (int num509 = 0; num509 < 200; num509++)
										{
											if (Main.npc[num509].CanBeChasedBy(this, false))
											{
												float num510 = Main.npc[num509].position.X + (float)(Main.npc[num509].width / 2);
												float num511 = Main.npc[num509].position.Y + (float)(Main.npc[num509].height / 2);
												float num512 = Math.Abs(this.position.X + (float)(this.width / 2) - num510) + Math.Abs(this.position.Y + (float)(this.height / 2) - num511);
												if (num512 < num508 && Collision.CanHit(this.position, this.width, this.height, Main.npc[num509].position, Main.npc[num509].width, Main.npc[num509].height))
												{
													num508 = num512;
													num506 = num510;
													num507 = num511;
													flag18 = true;
												}
											}
										}
										if (flag18)
										{
											float num513 = num506;
											float num514 = num507;
											num506 -= base.Center.X;
											num507 -= base.Center.Y;
											if (num506 < 0f)
											{
												this.spriteDirection = -1;
											}
											else
											{
												this.spriteDirection = 1;
											}
											int num515;
											if (num507 > 0f)
											{
												num515 = 0;
											}
											else if (Math.Abs(num507) > Math.Abs(num506) * 3f)
											{
												num515 = 4;
											}
											else if (Math.Abs(num507) > Math.Abs(num506) * 2f)
											{
												num515 = 3;
											}
											else if (Math.Abs(num506) > Math.Abs(num507) * 3f)
											{
												num515 = 0;
											}
											else if (Math.Abs(num506) > Math.Abs(num507) * 2f)
											{
												num515 = 1;
											}
											else
											{
												num515 = 2;
											}
											if (this.type == 308)
											{
												this.frame = num515 * 2;
											}
											else if (this.type == 377)
											{
												this.frame = num515;
											}
											if (this.ai[0] > 40f && this.localAI[1] == 0f && this.type == 308)
											{
												this.frame++;
											}
											if (this.ai[0] <= 0f)
											{
												this.localAI[1] = 0f;
												this.ai[0] = 60f;
												if (Main.myPlayer == this.owner)
												{
													float num516 = 6f;
													int num517 = 309;
													if (this.type == 377)
													{
														num517 = 378;
														num516 = 9f;
													}
													Vector2 vector37 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
													if (num515 == 0)
													{
														vector37.Y += 12f;
														vector37.X += (float)(24 * this.spriteDirection);
													}
													else if (num515 == 1)
													{
														vector37.Y += 0f;
														vector37.X += (float)(24 * this.spriteDirection);
													}
													else if (num515 == 2)
													{
														vector37.Y -= 2f;
														vector37.X += (float)(24 * this.spriteDirection);
													}
													else if (num515 == 3)
													{
														vector37.Y -= 6f;
														vector37.X += (float)(14 * this.spriteDirection);
													}
													else if (num515 == 4)
													{
														vector37.Y -= 14f;
														vector37.X += (float)(2 * this.spriteDirection);
													}
													if (this.spriteDirection < 0)
													{
														vector37.X += 10f;
													}
													float num518 = num513 - vector37.X;
													float num519 = num514 - vector37.Y;
													float num520 = (float)Math.Sqrt((double)(num518 * num518 + num519 * num519));
													num520 = num516 / num520;
													num518 *= num520;
													num519 *= num520;
													int num521 = this.damage;
													Projectile.NewProjectile(vector37.X, vector37.Y, num518, num519, num517, num521, this.knockBack, Main.myPlayer, 0f, 0f);
												}
											}
										}
										else if (this.ai[0] <= 60f && (this.frame == 1 || this.frame == 3 || this.frame == 5 || this.frame == 7 || this.frame == 9))
										{
											this.frame--;
										}
										if (this.ai[0] > 0f)
										{
											this.ai[0] -= 1f;
											return;
										}
									}
									else if (this.aiStyle == 54)
									{
										if (this.type == 317)
										{
											if (Main.player[Main.myPlayer].dead)
											{
												Main.player[Main.myPlayer].raven = false;
											}
											if (Main.player[Main.myPlayer].raven)
											{
												this.timeLeft = 2;
											}
										}
										for (int num522 = 0; num522 < 1000; num522++)
										{
											if (num522 != this.whoAmI && Main.projectile[num522].active && Main.projectile[num522].owner == this.owner && Main.projectile[num522].type == this.type && Math.Abs(this.position.X - Main.projectile[num522].position.X) + Math.Abs(this.position.Y - Main.projectile[num522].position.Y) < (float)this.width)
											{
												if (this.position.X < Main.projectile[num522].position.X)
												{
													this.velocity.X = this.velocity.X - 0.05f;
												}
												else
												{
													this.velocity.X = this.velocity.X + 0.05f;
												}
												if (this.position.Y < Main.projectile[num522].position.Y)
												{
													this.velocity.Y = this.velocity.Y - 0.05f;
												}
												else
												{
													this.velocity.Y = this.velocity.Y + 0.05f;
												}
											}
										}
										float num523 = this.position.X;
										float num524 = this.position.Y;
										float num525 = 900f;
										bool flag19 = false;
										int num526 = 500;
										if (this.ai[1] != 0f || this.friendly)
										{
											num526 = 1400;
										}
										if (Math.Abs(base.Center.X - Main.player[this.owner].Center.X) + Math.Abs(base.Center.Y - Main.player[this.owner].Center.Y) > (float)num526)
										{
											this.ai[0] = 1f;
										}
										if (this.ai[0] == 0f)
										{
											this.tileCollide = true;
											for (int num527 = 0; num527 < 200; num527++)
											{
												if (Main.npc[num527].CanBeChasedBy(this, false))
												{
													float num528 = Main.npc[num527].position.X + (float)(Main.npc[num527].width / 2);
													float num529 = Main.npc[num527].position.Y + (float)(Main.npc[num527].height / 2);
													float num530 = Math.Abs(this.position.X + (float)(this.width / 2) - num528) + Math.Abs(this.position.Y + (float)(this.height / 2) - num529);
													if (num530 < num525 && Collision.CanHit(this.position, this.width, this.height, Main.npc[num527].position, Main.npc[num527].width, Main.npc[num527].height))
													{
														num525 = num530;
														num523 = num528;
														num524 = num529;
														flag19 = true;
													}
												}
											}
										}
										else
										{
											this.tileCollide = false;
										}
										if (!flag19)
										{
											this.friendly = true;
											float num531 = 8f;
											if (this.ai[0] == 1f)
											{
												num531 = 12f;
											}
											Vector2 vector38 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											float num532 = Main.player[this.owner].Center.X - vector38.X;
											float num533 = Main.player[this.owner].Center.Y - vector38.Y - 60f;
											float num534 = (float)Math.Sqrt((double)(num532 * num532 + num533 * num533));
											if (num534 < 100f && this.ai[0] == 1f && !Collision.SolidCollision(this.position, this.width, this.height))
											{
												this.ai[0] = 0f;
											}
											if (num534 > 2000f)
											{
												this.position.X = Main.player[this.owner].Center.X - (float)(this.width / 2);
												this.position.Y = Main.player[this.owner].Center.Y - (float)(this.width / 2);
											}
											if (num534 > 70f)
											{
												num534 = num531 / num534;
												num532 *= num534;
												num533 *= num534;
												this.velocity.X = (this.velocity.X * 20f + num532) / 21f;
												this.velocity.Y = (this.velocity.Y * 20f + num533) / 21f;
											}
											else
											{
												if (this.velocity.X == 0f && this.velocity.Y == 0f)
												{
													this.velocity.X = -0.15f;
													this.velocity.Y = -0.05f;
												}
												this.velocity *= 1.01f;
											}
											this.friendly = false;
											this.rotation = this.velocity.X * 0.05f;
											this.frameCounter++;
											if (this.frameCounter >= 4)
											{
												this.frameCounter = 0;
												this.frame++;
											}
											if (this.frame > 3)
											{
												this.frame = 0;
											}
											if ((double)Math.Abs(this.velocity.X) > 0.2)
											{
												this.spriteDirection = -this.direction;
												return;
											}
										}
										else
										{
											if (this.ai[1] == -1f)
											{
												this.ai[1] = 17f;
											}
											if (this.ai[1] > 0f)
											{
												this.ai[1] -= 1f;
											}
											if (this.ai[1] == 0f)
											{
												this.friendly = true;
												float num535 = 8f;
												Vector2 vector39 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
												float num536 = num523 - vector39.X;
												float num537 = num524 - vector39.Y;
												float num538 = (float)Math.Sqrt((double)(num536 * num536 + num537 * num537));
												if (num538 < 100f)
												{
													num535 = 10f;
												}
												num538 = num535 / num538;
												num536 *= num538;
												num537 *= num538;
												this.velocity.X = (this.velocity.X * 14f + num536) / 15f;
												this.velocity.Y = (this.velocity.Y * 14f + num537) / 15f;
											}
											else
											{
												this.friendly = false;
												if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) < 10f)
												{
													this.velocity *= 1.05f;
												}
											}
											this.rotation = this.velocity.X * 0.05f;
											this.frameCounter++;
											if (this.frameCounter >= 4)
											{
												this.frameCounter = 0;
												this.frame++;
											}
											if (this.frame < 4)
											{
												this.frame = 4;
											}
											if (this.frame > 7)
											{
												this.frame = 4;
											}
											if ((double)Math.Abs(this.velocity.X) > 0.2)
											{
												this.spriteDirection = -this.direction;
												return;
											}
										}
									}
									else if (this.aiStyle == 55)
									{
										this.frameCounter++;
										if (this.frameCounter > 0)
										{
											this.frame++;
											this.frameCounter = 0;
											if (this.frame > 2)
											{
												this.frame = 0;
											}
										}
										if (this.velocity.X < 0f)
										{
											this.spriteDirection = -1;
											this.rotation = (float)Math.Atan2((double)(-(double)this.velocity.Y), (double)(-(double)this.velocity.X));
										}
										else
										{
											this.spriteDirection = 1;
											this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
										}
										if (this.ai[0] >= 0f && this.ai[0] < 200f)
										{
											int num539 = (int)this.ai[0];
											if (Main.npc[num539].active)
											{
												float num540 = 8f;
												Vector2 vector40 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
												float num541 = Main.npc[num539].position.X - vector40.X;
												float num542 = Main.npc[num539].position.Y - vector40.Y;
												float num543 = (float)Math.Sqrt((double)(num541 * num541 + num542 * num542));
												num543 = num540 / num543;
												num541 *= num543;
												num542 *= num543;
												this.velocity.X = (this.velocity.X * 14f + num541) / 15f;
												this.velocity.Y = (this.velocity.Y * 14f + num542) / 15f;
											}
											else
											{
												float num544 = 1000f;
												for (int num545 = 0; num545 < 200; num545++)
												{
													if (Main.npc[num545].CanBeChasedBy(this, false))
													{
														float num546 = Main.npc[num545].position.X + (float)(Main.npc[num545].width / 2);
														float num547 = Main.npc[num545].position.Y + (float)(Main.npc[num545].height / 2);
														float num548 = Math.Abs(this.position.X + (float)(this.width / 2) - num546) + Math.Abs(this.position.Y + (float)(this.height / 2) - num547);
														if (num548 < num544 && Collision.CanHit(this.position, this.width, this.height, Main.npc[num545].position, Main.npc[num545].width, Main.npc[num545].height))
														{
															num544 = num548;
															this.ai[0] = (float)num545;
														}
													}
												}
											}
											int num549 = 8;
											int num550 = Dust.NewDust(new Vector2(this.position.X + (float)num549, this.position.Y + (float)num549), this.width - num549 * 2, this.height - num549 * 2, 6, 0f, 0f, 0, default(Color), 1f);
											Main.dust[num550].velocity *= 0.5f;
											Main.dust[num550].velocity += this.velocity * 0.5f;
											Main.dust[num550].noGravity = true;
											Main.dust[num550].noLight = true;
											Main.dust[num550].scale = 1.4f;
											return;
										}
										this.Kill();
										return;
									}
									else
									{
										if (this.aiStyle == 56)
										{
											if (this.localAI[0] == 0f)
											{
												this.localAI[0] = 1f;
												this.rotation = this.ai[0];
												this.spriteDirection = -(int)this.ai[1];
											}
											if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) < 16f)
											{
												this.velocity *= 1.05f;
											}
											if (this.velocity.X < 0f)
											{
												this.direction = -1;
											}
											else
											{
												this.direction = 1;
											}
											this.rotation += (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) * 0.025f * (float)this.direction;
											return;
										}
										if (this.aiStyle == 57)
										{
											this.ai[0] += 1f;
											if (this.ai[0] > 30f)
											{
												this.ai[0] = 30f;
												this.velocity.Y = this.velocity.Y + 0.25f;
												if (this.velocity.Y > 16f)
												{
													this.velocity.Y = 16f;
												}
												this.velocity.X = this.velocity.X * 0.995f;
											}
											this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
											this.alpha -= 50;
											if (this.alpha < 0)
											{
												this.alpha = 0;
											}
											if (this.owner == Main.myPlayer)
											{
												this.localAI[0] += 1f;
												if (this.localAI[0] >= 4f)
												{
													this.localAI[0] = 0f;
													int num551 = 0;
													for (int num552 = 0; num552 < 1000; num552++)
													{
														if (Main.projectile[num552].active && Main.projectile[num552].owner == this.owner && Main.projectile[num552].type == 344)
														{
															num551++;
														}
													}
													float num553 = (float)this.damage * 0.8f;
													if (num551 > 100)
													{
														float num554 = (float)(num551 - 100);
														num554 = 1f - num554 / 100f;
														num553 *= num554;
													}
													if (num551 > 100)
													{
														this.localAI[0] -= 1f;
													}
													if (num551 > 120)
													{
														this.localAI[0] -= 1f;
													}
													if (num551 > 140)
													{
														this.localAI[0] -= 1f;
													}
													if (num551 > 150)
													{
														this.localAI[0] -= 1f;
													}
													if (num551 > 160)
													{
														this.localAI[0] -= 1f;
													}
													if (num551 > 165)
													{
														this.localAI[0] -= 1f;
													}
													if (num551 > 170)
													{
														this.localAI[0] -= 2f;
													}
													if (num551 > 175)
													{
														this.localAI[0] -= 3f;
													}
													if (num551 > 180)
													{
														this.localAI[0] -= 4f;
													}
													if (num551 > 185)
													{
														this.localAI[0] -= 5f;
													}
													if (num551 > 190)
													{
														this.localAI[0] -= 6f;
													}
													if (num551 > 195)
													{
														this.localAI[0] -= 7f;
													}
													if (num553 > (float)this.damage * 0.1f)
													{
														Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 344, (int)num553, this.knockBack * 0.55f, this.owner, 0f, (float)Main.rand.Next(3));
														return;
													}
												}
											}
										}
										else
										{
											if (this.aiStyle == 58)
											{
												this.alpha -= 50;
												if (this.alpha < 0)
												{
													this.alpha = 0;
												}
												if (this.ai[0] == 0f)
												{
													this.frame = 0;
													this.ai[1] += 1f;
													if (this.ai[1] > 30f)
													{
														this.velocity.Y = this.velocity.Y + 0.1f;
													}
													if (this.velocity.Y >= 0f)
													{
														this.ai[0] = 1f;
													}
												}
												if (this.ai[0] == 1f)
												{
													this.frame = 1;
													this.velocity.Y = this.velocity.Y + 0.1f;
													if (this.velocity.Y > 3f)
													{
														this.velocity.Y = 3f;
													}
													this.velocity.X = this.velocity.X * 0.99f;
												}
												this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
												return;
											}
											if (this.aiStyle == 59)
											{
												this.ai[1] += 1f;
												if (this.ai[1] >= 60f)
												{
													this.friendly = true;
													int num555 = (int)this.ai[0];
													if (!Main.npc[num555].active)
													{
														int[] array2 = new int[200];
														int num556 = 0;
														for (int num557 = 0; num557 < 200; num557++)
														{
															if (Main.npc[num557].CanBeChasedBy(this, false))
															{
																float num558 = Math.Abs(Main.npc[num557].position.X + (float)(Main.npc[num557].width / 2) - this.position.X + (float)(this.width / 2)) + Math.Abs(Main.npc[num557].position.Y + (float)(Main.npc[num557].height / 2) - this.position.Y + (float)(this.height / 2));
																if (num558 < 800f)
																{
																	array2[num556] = num557;
																	num556++;
																}
															}
														}
														if (num556 == 0)
														{
															this.Kill();
															return;
														}
														num555 = array2[Main.rand.Next(num556)];
														this.ai[0] = (float)num555;
													}
													float num559 = 4f;
													Vector2 vector41 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
													float num560 = Main.npc[num555].Center.X - vector41.X;
													float num561 = Main.npc[num555].Center.Y - vector41.Y;
													float num562 = (float)Math.Sqrt((double)(num560 * num560 + num561 * num561));
													num562 = num559 / num562;
													num560 *= num562;
													num561 *= num562;
													int num563 = 30;
													this.velocity.X = (this.velocity.X * (float)(num563 - 1) + num560) / (float)num563;
													this.velocity.Y = (this.velocity.Y * (float)(num563 - 1) + num561) / (float)num563;
												}
												for (int num564 = 0; num564 < 5; num564++)
												{
													float num565 = this.velocity.X * 0.2f * (float)num564;
													float num566 = -(this.velocity.Y * 0.2f) * (float)num564;
													int num567 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 175, 0f, 0f, 100, default(Color), 1.3f);
													Main.dust[num567].noGravity = true;
													Main.dust[num567].velocity *= 0f;
													Dust expr_175EF_cp_0 = Main.dust[num567];
													expr_175EF_cp_0.position.X = expr_175EF_cp_0.position.X - num565;
													Dust expr_1760E_cp_0 = Main.dust[num567];
													expr_1760E_cp_0.position.Y = expr_1760E_cp_0.position.Y - num566;
												}
												return;
											}
											if (this.aiStyle == 60)
											{
												this.scale -= 0.015f;
												if (this.scale <= 0f)
												{
													this.velocity *= 5f;
													this.oldVelocity = this.velocity;
													this.Kill();
												}
												if (this.ai[0] <= 3f)
												{
													this.ai[0] += 1f;
													return;
												}
												int num568 = 103;
												if (this.type == 406)
												{
													num568 = 137;
												}
												if (this.owner == Main.myPlayer)
												{
													Rectangle rectangle4 = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
													for (int num569 = 0; num569 < 200; num569++)
													{
														if (Main.npc[num569].active && !Main.npc[num569].dontTakeDamage && Main.npc[num569].lifeMax > 1)
														{
															Rectangle value12 = new Rectangle((int)Main.npc[num569].position.X, (int)Main.npc[num569].position.Y, Main.npc[num569].width, Main.npc[num569].height);
															if (rectangle4.Intersects(value12))
															{
																Main.npc[num569].AddBuff(num568, 1500, false);
																this.Kill();
															}
														}
													}
													for (int num570 = 0; num570 < 255; num570++)
													{
														if (num570 != this.owner && Main.player[num570].active && !Main.player[num570].dead)
														{
															Rectangle value13 = new Rectangle((int)Main.player[num570].position.X, (int)Main.player[num570].position.Y, Main.player[num570].width, Main.player[num570].height);
															if (rectangle4.Intersects(value13))
															{
																Main.player[num570].AddBuff(num568, 1500, false);
																this.Kill();
															}
														}
													}
												}
												this.ai[0] += this.ai[1];
												if (this.ai[0] > 30f)
												{
													this.velocity.Y = this.velocity.Y + 0.1f;
												}
												if (this.type == 358)
												{
													for (int num571 = 0; num571 < 1; num571++)
													{
														for (int num572 = 0; num572 < 6; num572++)
														{
															float num573 = this.velocity.X / 6f * (float)num572;
															float num574 = this.velocity.Y / 6f * (float)num572;
															int num575 = 6;
															int num576 = Dust.NewDust(new Vector2(this.position.X + (float)num575, this.position.Y + (float)num575), this.width - num575 * 2, this.height - num575 * 2, 211, 0f, 0f, 75, default(Color), 1.2f);
															if (Main.rand.Next(2) == 0)
															{
																Main.dust[num576].alpha += 25;
															}
															if (Main.rand.Next(2) == 0)
															{
																Main.dust[num576].alpha += 25;
															}
															if (Main.rand.Next(2) == 0)
															{
																Main.dust[num576].alpha += 25;
															}
															Main.dust[num576].noGravity = true;
															Main.dust[num576].velocity *= 0.3f;
															Main.dust[num576].velocity += this.velocity * 0.5f;
															Main.dust[num576].position = base.Center;
															Dust expr_17AA1_cp_0 = Main.dust[num576];
															expr_17AA1_cp_0.position.X = expr_17AA1_cp_0.position.X - num573;
															Dust expr_17AC0_cp_0 = Main.dust[num576];
															expr_17AC0_cp_0.position.Y = expr_17AC0_cp_0.position.Y - num574;
															Main.dust[num576].velocity *= 0.2f;
														}
														if (Main.rand.Next(4) == 0)
														{
															int num577 = 6;
															int num578 = Dust.NewDust(new Vector2(this.position.X + (float)num577, this.position.Y + (float)num577), this.width - num577 * 2, this.height - num577 * 2, 211, 0f, 0f, 75, default(Color), 0.65f);
															Main.dust[num578].velocity *= 0.5f;
															Main.dust[num578].velocity += this.velocity * 0.5f;
														}
													}
												}
												if (this.type == 406)
												{
													int num579 = 175;
													Color newColor = new Color(0, 80, 255, 100);
													for (int num580 = 0; num580 < 6; num580++)
													{
														Vector2 vector42 = this.velocity * (float)num580 / 6f;
														int num581 = 6;
														int num582 = Dust.NewDust(this.position + Vector2.One * 6f, this.width - num581 * 2, this.height - num581 * 2, 4, 0f, 0f, num579, newColor, 1.2f);
														if (Main.rand.Next(2) == 0)
														{
															Main.dust[num582].alpha += 25;
														}
														if (Main.rand.Next(2) == 0)
														{
															Main.dust[num582].alpha += 25;
														}
														if (Main.rand.Next(2) == 0)
														{
															Main.dust[num582].alpha += 25;
														}
														Main.dust[num582].noGravity = true;
														Main.dust[num582].velocity *= 0.3f;
														Main.dust[num582].velocity += this.velocity * 0.5f;
														Main.dust[num582].position = base.Center;
														Dust expr_17D7D_cp_0 = Main.dust[num582];
														expr_17D7D_cp_0.position.X = expr_17D7D_cp_0.position.X - vector42.X;
														Dust expr_17DA1_cp_0 = Main.dust[num582];
														expr_17DA1_cp_0.position.Y = expr_17DA1_cp_0.position.Y - vector42.Y;
														Main.dust[num582].velocity *= 0.2f;
													}
													if (Main.rand.Next(4) == 0)
													{
														int num583 = 6;
														int num584 = Dust.NewDust(this.position + Vector2.One * 6f, this.width - num583 * 2, this.height - num583 * 2, 4, 0f, 0f, num579, newColor, 1.2f);
														Main.dust[num584].velocity *= 0.5f;
														Main.dust[num584].velocity += this.velocity * 0.5f;
														return;
													}
												}
											}
											else if (this.aiStyle == 61)
											{
												this.timeLeft = 60;
												if (Main.player[this.owner].inventory[Main.player[this.owner].selectedItem].fishingPole == 0 || Main.player[this.owner].CCed || Main.player[this.owner].noItems)
												{
													this.Kill();
												}
												else if (Main.player[this.owner].inventory[Main.player[this.owner].selectedItem].shoot != this.type)
												{
													this.Kill();
												}
												else if (Main.player[this.owner].pulley)
												{
													this.Kill();
												}
												else if (Main.player[this.owner].dead)
												{
													this.Kill();
												}
												if (this.ai[1] > 0f && this.localAI[1] >= 0f)
												{
													this.localAI[1] = -1f;
													if (!this.lavaWet && !this.honeyWet)
													{
														for (int num585 = 0; num585 < 100; num585++)
														{
															int num586 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y - 10f), this.width + 12, 24, Dust.dustWater(), 0f, 0f, 0, default(Color), 1f);
															Dust expr_18052_cp_0 = Main.dust[num586];
															expr_18052_cp_0.velocity.Y = expr_18052_cp_0.velocity.Y - 4f;
															Dust expr_18072_cp_0 = Main.dust[num586];
															expr_18072_cp_0.velocity.X = expr_18072_cp_0.velocity.X * 2.5f;
															Main.dust[num586].scale = 0.8f;
															Main.dust[num586].alpha = 100;
															Main.dust[num586].noGravity = true;
														}
														Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 0);
													}
												}
												if (this.ai[0] >= 1f)
												{
													if (this.ai[0] == 2f)
													{
														this.ai[0] += 1f;
														Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
														if (!this.lavaWet && !this.honeyWet)
														{
															for (int num587 = 0; num587 < 100; num587++)
															{
																int num588 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y - 10f), this.width + 12, 24, Dust.dustWater(), 0f, 0f, 0, default(Color), 1f);
																Dust expr_181DB_cp_0 = Main.dust[num588];
																expr_181DB_cp_0.velocity.Y = expr_181DB_cp_0.velocity.Y - 4f;
																Dust expr_181FB_cp_0 = Main.dust[num588];
																expr_181FB_cp_0.velocity.X = expr_181FB_cp_0.velocity.X * 2.5f;
																Main.dust[num588].scale = 0.8f;
																Main.dust[num588].alpha = 100;
																Main.dust[num588].noGravity = true;
															}
															Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 0);
														}
													}
													if (this.localAI[0] < 100f)
													{
														this.localAI[0] += 1f;
													}
													this.tileCollide = false;
													float num589 = 15.9f;
													int num590 = 10;
													Vector2 vector43 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
													float num591 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector43.X;
													float num592 = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - vector43.Y;
													float num593 = (float)Math.Sqrt((double)(num591 * num591 + num592 * num592));
													if (num593 > 3000f)
													{
														this.Kill();
													}
													num593 = num589 / num593;
													num591 *= num593;
													num592 *= num593;
													this.velocity.X = (this.velocity.X * (float)(num590 - 1) + num591) / (float)num590;
													this.velocity.Y = (this.velocity.Y * (float)(num590 - 1) + num592) / (float)num590;
													if (Main.myPlayer == this.owner)
													{
														Rectangle rectangle5 = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
														Rectangle value14 = new Rectangle((int)Main.player[this.owner].position.X, (int)Main.player[this.owner].position.Y, Main.player[this.owner].width, Main.player[this.owner].height);
														if (rectangle5.Intersects(value14))
														{
															if (this.ai[1] > 0f && this.ai[1] < (float)ItemLoader.ItemCount)
															{
																int num594 = (int)this.ai[1];
																Item item = new Item();
																item.SetDefaults(num594, false);
																if (num594 == 3196)
																{
																	int num595 = Main.player[this.owner].FishingLevel();
																	int minValue = (num595 / 20 + 3) / 2;
																	int num596 = (num595 / 10 + 6) / 2;
																	if (Main.rand.Next(50) < num595)
																	{
																		num596++;
																	}
																	if (Main.rand.Next(100) < num595)
																	{
																		num596++;
																	}
																	if (Main.rand.Next(150) < num595)
																	{
																		num596++;
																	}
																	if (Main.rand.Next(200) < num595)
																	{
																		num596++;
																	}
																	int stack = Main.rand.Next(minValue, num596 + 1);
																	item.stack = stack;
																}
																if (num594 == 3197)
																{
																	int num597 = Main.player[this.owner].FishingLevel();
																	int minValue2 = (num597 / 4 + 15) / 2;
																	int num598 = (num597 / 2 + 30) / 2;
																	if (Main.rand.Next(50) < num597)
																	{
																		num598 += 4;
																	}
																	if (Main.rand.Next(100) < num597)
																	{
																		num598 += 4;
																	}
																	if (Main.rand.Next(150) < num597)
																	{
																		num598 += 4;
																	}
																	if (Main.rand.Next(200) < num597)
																	{
																		num598 += 4;
																	}
																	int stack2 = Main.rand.Next(minValue2, num598 + 1);
																	item.stack = stack2;
																}
																item.newAndShiny = true;
																Item item2 = Main.player[this.owner].GetItem(this.owner, item, false, false);
																if (item2.stack > 0)
																{
																	int number2 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num594, 1, false, 0, true, false);
																	if (Main.netMode == 1)
																	{
																		NetMessage.SendData(21, -1, -1, "", number2, 1f, 0f, 0f, 0, 0, 0);
																	}
																}
																else
																{
																	item.position.X = base.Center.X - (float)(item.width / 2);
																	item.position.Y = base.Center.Y - (float)(item.height / 2);
																	item.active = true;
																	ItemText.NewText(item, 0, false, false);
																}
															}
															this.Kill();
														}
													}
													this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
													return;
												}
												bool flag20 = false;
												Vector2 vector44 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
												float num599 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector44.X;
												float num600 = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - vector44.Y;
												this.rotation = (float)Math.Atan2((double)num600, (double)num599) + 1.57f;
												float num601 = (float)Math.Sqrt((double)(num599 * num599 + num600 * num600));
												if (num601 > 900f)
												{
													this.ai[0] = 1f;
												}
												if (this.wet)
												{
													this.rotation = 0f;
													this.velocity.X = this.velocity.X * 0.9f;
													int num602 = (int)(base.Center.X + (float)((this.width / 2 + 8) * this.direction)) / 16;
													int num603 = (int)(base.Center.Y / 16f);
													float arg_18964_0 = this.position.Y / 16f;
													int num604 = (int)((this.position.Y + (float)this.height) / 16f);
													if (Main.tile[num602, num603] == null)
													{
														Main.tile[num602, num603] = new Tile();
													}
													if (Main.tile[num602, num604] == null)
													{
														Main.tile[num602, num604] = new Tile();
													}
													if (this.velocity.Y > 0f)
													{
														this.velocity.Y = this.velocity.Y * 0.5f;
													}
													num602 = (int)(base.Center.X / 16f);
													num603 = (int)(base.Center.Y / 16f);
													float num605 = this.position.Y + (float)this.height;
													if (Main.tile[num602, num603 - 1] == null)
													{
														Main.tile[num602, num603 - 1] = new Tile();
													}
													if (Main.tile[num602, num603] == null)
													{
														Main.tile[num602, num603] = new Tile();
													}
													if (Main.tile[num602, num603 + 1] == null)
													{
														Main.tile[num602, num603 + 1] = new Tile();
													}
													if (Main.tile[num602, num603 - 1].liquid > 0)
													{
														num605 = (float)(num603 * 16);
														num605 -= (float)(Main.tile[num602, num603 - 1].liquid / 16);
													}
													else if (Main.tile[num602, num603].liquid > 0)
													{
														num605 = (float)((num603 + 1) * 16);
														num605 -= (float)(Main.tile[num602, num603].liquid / 16);
													}
													else if (Main.tile[num602, num603 + 1].liquid > 0)
													{
														num605 = (float)((num603 + 2) * 16);
														num605 -= (float)(Main.tile[num602, num603 + 1].liquid / 16);
													}
													if (base.Center.Y > num605)
													{
														this.velocity.Y = this.velocity.Y - 0.1f;
														if (this.velocity.Y < -8f)
														{
															this.velocity.Y = -8f;
														}
														if (base.Center.Y + this.velocity.Y < num605)
														{
															this.velocity.Y = num605 - base.Center.Y;
														}
													}
													else
													{
														this.velocity.Y = num605 - base.Center.Y;
													}
													if ((double)this.velocity.Y >= -0.01 && (double)this.velocity.Y <= 0.01)
													{
														flag20 = true;
													}
												}
												else
												{
													if (this.velocity.Y == 0f)
													{
														this.velocity.X = this.velocity.X * 0.95f;
													}
													this.velocity.X = this.velocity.X * 0.98f;
													this.velocity.Y = this.velocity.Y + 0.2f;
													if (this.velocity.Y > 15.9f)
													{
														this.velocity.Y = 15.9f;
													}
												}
												if (this.ai[1] != 0f)
												{
													flag20 = true;
												}
												if (flag20)
												{
													if (this.ai[1] == 0f && Main.myPlayer == this.owner)
													{
														int num606 = Main.player[this.owner].FishingLevel();
														if (num606 == -9000)
														{
															this.localAI[1] += 5f;
															this.localAI[1] += (float)Main.rand.Next(1, 3);
															if (this.localAI[1] > 660f)
															{
																this.localAI[1] = 0f;
																this.FishingCheck();
																return;
															}
														}
														else
														{
															if (Main.rand.Next(300) < num606)
															{
																this.localAI[1] += (float)Main.rand.Next(1, 3);
															}
															this.localAI[1] += (float)(num606 / 30);
															this.localAI[1] += (float)Main.rand.Next(1, 3);
															if (Main.rand.Next(60) == 0)
															{
																this.localAI[1] += 60f;
															}
															if (this.localAI[1] > 660f)
															{
																this.localAI[1] = 0f;
																this.FishingCheck();
																return;
															}
														}
													}
													else if (this.ai[1] < 0f)
													{
														if (this.velocity.Y == 0f || (this.honeyWet && (double)this.velocity.Y >= -0.01 && (double)this.velocity.Y <= 0.01))
														{
															this.velocity.Y = (float)Main.rand.Next(100, 500) * 0.015f;
															this.velocity.X = (float)Main.rand.Next(-100, 101) * 0.015f;
															this.wet = false;
															this.lavaWet = false;
															this.honeyWet = false;
														}
														this.ai[1] += (float)Main.rand.Next(1, 5);
														if (this.ai[1] >= 0f)
														{
															this.ai[1] = 0f;
															this.localAI[1] = 0f;
															this.netUpdate = true;
															return;
														}
													}
												}
											}
											else
											{
												if (this.aiStyle == 62)
												{
													this.AI_062();
													return;
												}
												if (this.aiStyle == 63)
												{
													if (!Main.player[this.owner].active)
													{
														this.active = false;
														return;
													}
													Vector2 value15 = this.position;
													bool flag21 = false;
													float num607 = 500f;
													for (int num608 = 0; num608 < 200; num608++)
													{
														NPC nPC = Main.npc[num608];
														if (nPC.CanBeChasedBy(this, false))
														{
															float num609 = Vector2.Distance(nPC.Center, base.Center);
															if (((Vector2.Distance(base.Center, value15) > num609 && num609 < num607) || !flag21) && Collision.CanHit(this.position, this.width, this.height, nPC.position, nPC.width, nPC.height))
															{
																num607 = num609;
																value15 = nPC.Center;
																flag21 = true;
															}
														}
													}
													if (!flag21)
													{
														this.velocity.X = this.velocity.X * 0.95f;
													}
													else
													{
														float num610 = 5f;
														float num611 = 0.08f;
														if (this.velocity.Y == 0f)
														{
															bool flag22 = false;
															if (base.Center.Y - 50f > value15.Y)
															{
																flag22 = true;
															}
															if (flag22)
															{
																this.velocity.Y = -6f;
															}
														}
														else
														{
															num610 = 8f;
															num611 = 0.12f;
														}
														this.velocity.X = this.velocity.X + (float)Math.Sign(value15.X - base.Center.X) * num611;
														if (this.velocity.X < -num610)
														{
															this.velocity.X = -num610;
														}
														if (this.velocity.X > num610)
														{
															this.velocity.X = num610;
														}
													}
													float num612 = 0f;
													Collision.StepUp(ref this.position, ref this.velocity, this.width, this.height, ref num612, ref this.gfxOffY, 1, false, 0);
													if (this.velocity.Y != 0f)
													{
														this.frame = 3;
													}
													else
													{
														if (Math.Abs(this.velocity.X) > 0.2f)
														{
															this.frameCounter++;
														}
														if (this.frameCounter >= 9)
														{
															this.frameCounter = 0;
														}
														if (this.frameCounter >= 6)
														{
															this.frame = 2;
														}
														else if (this.frameCounter >= 3)
														{
															this.frame = 1;
														}
														else
														{
															this.frame = 0;
														}
													}
													if (this.velocity.X != 0f)
													{
														this.direction = Math.Sign(this.velocity.X);
													}
													this.spriteDirection = -this.direction;
													this.velocity.Y = this.velocity.Y + 0.2f;
													if (this.velocity.Y > 16f)
													{
														this.velocity.Y = 16f;
														return;
													}
												}
												else if (this.aiStyle == 64)
												{
													int num613 = 10;
													int num614 = 15;
													float num615 = 1f;
													int num616 = 150;
													int num617 = 42;
													if (this.type == 386)
													{
														num613 = 16;
														num614 = 16;
														num615 = 1.5f;
													}
													if (this.velocity.X != 0f)
													{
														this.direction = (this.spriteDirection = -Math.Sign(this.velocity.X));
													}
													this.frameCounter++;
													if (this.frameCounter > 2)
													{
														this.frame++;
														this.frameCounter = 0;
													}
													if (this.frame >= 6)
													{
														this.frame = 0;
													}
													if (this.localAI[0] == 0f && Main.myPlayer == this.owner)
													{
														this.localAI[0] = 1f;
														this.position.X = this.position.X + (float)(this.width / 2);
														this.position.Y = this.position.Y + (float)(this.height / 2);
														this.scale = ((float)(num613 + num614) - this.ai[1]) * num615 / (float)(num614 + num613);
														this.width = (int)((float)num616 * this.scale);
														this.height = (int)((float)num617 * this.scale);
														this.position.X = this.position.X - (float)(this.width / 2);
														this.position.Y = this.position.Y - (float)(this.height / 2);
														this.netUpdate = true;
													}
													if (this.ai[1] != -1f)
													{
														this.scale = ((float)(num613 + num614) - this.ai[1]) * num615 / (float)(num614 + num613);
														this.width = (int)((float)num616 * this.scale);
														this.height = (int)((float)num617 * this.scale);
													}
													if (!Collision.SolidCollision(this.position, this.width, this.height))
													{
														this.alpha -= 30;
														if (this.alpha < 60)
														{
															this.alpha = 60;
														}
														if (this.type == 386 && this.alpha < 100)
														{
															this.alpha = 100;
														}
													}
													else
													{
														this.alpha += 30;
														if (this.alpha > 150)
														{
															this.alpha = 150;
														}
													}
													if (this.ai[0] > 0f)
													{
														this.ai[0] -= 1f;
													}
													if (this.ai[0] == 1f && this.ai[1] > 0f && this.owner == Main.myPlayer)
													{
														this.netUpdate = true;
														Vector2 center = base.Center;
														center.Y -= (float)num617 * this.scale / 2f;
														float num618 = ((float)(num613 + num614) - this.ai[1] + 1f) * num615 / (float)(num614 + num613);
														center.Y -= (float)num617 * num618 / 2f;
														center.Y += 2f;
														Projectile.NewProjectile(center.X, center.Y, this.velocity.X, this.velocity.Y, this.type, this.damage, this.knockBack, this.owner, 10f, this.ai[1] - 1f);
														int num619 = 4;
														if (this.type == 386)
														{
															num619 = 2;
														}
														if ((int)this.ai[1] % num619 == 0 && this.ai[1] != 0f)
														{
															int num620 = 372;
															if (this.type == 386)
															{
																num620 = 373;
															}
															int num621 = NPC.NewNPC((int)center.X, (int)center.Y, num620, 0, 0f, 0f, 0f, 0f, 255);
															Main.npc[num621].velocity = this.velocity;
															Main.npc[num621].netUpdate = true;
															if (this.type == 386)
															{
																Main.npc[num621].ai[2] = (float)this.width;
																Main.npc[num621].ai[3] = -1.5f;
															}
														}
													}
													if (this.ai[0] <= 0f)
													{
														float num622 = 0.104719758f;
														float num623 = (float)this.width / 5f;
														if (this.type == 386)
														{
															num623 *= 2f;
														}
														float num624 = (float)(Math.Cos((double)(num622 * -(double)this.ai[0])) - 0.5) * num623;
														this.position.X = this.position.X - num624 * (float)(-(float)this.direction);
														this.ai[0] -= 1f;
														num624 = (float)(Math.Cos((double)(num622 * -(double)this.ai[0])) - 0.5) * num623;
														this.position.X = this.position.X + num624 * (float)(-(float)this.direction);
														return;
													}
												}
												else if (this.aiStyle == 65)
												{
													if (this.ai[1] > 0f)
													{
														int num625 = (int)this.ai[1] - 1;
														if (num625 < 255)
														{
															this.localAI[0] += 1f;
															if (this.localAI[0] > 10f)
															{
																int num626 = 6;
																for (int num627 = 0; num627 < num626; num627++)
																{
																	Vector2 vector45 = Vector2.Normalize(this.velocity) * new Vector2((float)this.width / 2f, (float)this.height) * 0.75f;
																	vector45 = vector45.RotatedBy((double)(num627 - (num626 / 2 - 1)) * 3.1415926535897931 / (double)((float)num626), default(Vector2)) + base.Center;
																	Vector2 value16 = ((float)(Main.rand.NextDouble() * 3.1415927410125732) - 1.57079637f).ToRotationVector2() * (float)Main.rand.Next(3, 8);
																	int num628 = Dust.NewDust(vector45 + value16, 0, 0, 172, value16.X * 2f, value16.Y * 2f, 100, default(Color), 1.4f);
																	Main.dust[num628].noGravity = true;
																	Main.dust[num628].noLight = true;
																	Main.dust[num628].velocity /= 4f;
																	Main.dust[num628].velocity -= this.velocity;
																}
																this.alpha -= 5;
																if (this.alpha < 100)
																{
																	this.alpha = 100;
																}
																this.rotation += this.velocity.X * 0.1f;
																this.frame = (int)(this.localAI[0] / 3f) % 3;
															}
															Vector2 value17 = Main.player[num625].Center - base.Center;
															float num629 = 4f;
															num629 += this.localAI[0] / 20f;
															this.velocity = Vector2.Normalize(value17) * num629;
															if (value17.Length() < 50f)
															{
																this.Kill();
															}
														}
													}
													else
													{
														float num630 = 0.209439516f;
														float num631 = 4f;
														float num632 = (float)(Math.Cos((double)(num630 * this.ai[0])) - 0.5) * num631;
														this.velocity.Y = this.velocity.Y - num632;
														this.ai[0] += 1f;
														num632 = (float)(Math.Cos((double)(num630 * this.ai[0])) - 0.5) * num631;
														this.velocity.Y = this.velocity.Y + num632;
														this.localAI[0] += 1f;
														if (this.localAI[0] > 10f)
														{
															this.alpha -= 5;
															if (this.alpha < 100)
															{
																this.alpha = 100;
															}
															this.rotation += this.velocity.X * 0.1f;
															this.frame = (int)(this.localAI[0] / 3f) % 3;
														}
													}
													if (this.wet)
													{
														this.position.Y = this.position.Y - 16f;
														this.Kill();
														return;
													}
												}
												else if (this.aiStyle == 66)
												{
													float num633 = 0f;
													float num634 = 0f;
													float num635 = 0f;
													float num636 = 0f;
													if (this.type == 387 || this.type == 388)
													{
														num633 = 700f;
														num634 = 800f;
														num635 = 1200f;
														num636 = 150f;
														if (Main.player[this.owner].dead)
														{
															Main.player[this.owner].twinsMinion = false;
														}
														if (Main.player[this.owner].twinsMinion)
														{
															this.timeLeft = 2;
														}
													}
													if (this.type == 533)
													{
														num633 = 1500f;
														num634 = 900f;
														num635 = 1500f;
														num636 = 450f;
														if (Main.player[this.owner].dead)
														{
															Main.player[this.owner].DeadlySphereMinion = false;
														}
														if (Main.player[this.owner].DeadlySphereMinion)
														{
															this.timeLeft = 2;
														}
													}
													float num637 = 0.05f;
													for (int num638 = 0; num638 < 1000; num638++)
													{
														bool flag23 = (Main.projectile[num638].type == 387 || Main.projectile[num638].type == 388) && (this.type == 387 || this.type == 388);
														if (!flag23)
														{
															flag23 = (this.type == 533 && Main.projectile[num638].type == 533);
														}
														if (num638 != this.whoAmI && Main.projectile[num638].active && Main.projectile[num638].owner == this.owner && flag23 && Math.Abs(this.position.X - Main.projectile[num638].position.X) + Math.Abs(this.position.Y - Main.projectile[num638].position.Y) < (float)this.width)
														{
															if (this.position.X < Main.projectile[num638].position.X)
															{
																this.velocity.X = this.velocity.X - num637;
															}
															else
															{
																this.velocity.X = this.velocity.X + num637;
															}
															if (this.position.Y < Main.projectile[num638].position.Y)
															{
																this.velocity.Y = this.velocity.Y - num637;
															}
															else
															{
																this.velocity.Y = this.velocity.Y + num637;
															}
														}
													}
													if (this.type == 533)
													{
														if ((int)this.ai[0] % 3 != 2)
														{
															Lighting.AddLight(base.Center, 0.8f, 0.3f, 0.1f);
														}
														else
														{
															Lighting.AddLight(base.Center, 0.3f, 0.5f, 0.7f);
														}
													}
													bool flag24 = false;
													if (this.ai[0] == 2f && this.type == 388)
													{
														this.ai[1] += 1f;
														this.extraUpdates = 1;
														this.rotation = this.velocity.ToRotation() + 3.14159274f;
														this.frameCounter++;
														if (this.frameCounter > 1)
														{
															this.frame++;
															this.frameCounter = 0;
														}
														if (this.frame > 2)
														{
															this.frame = 0;
														}
														if (this.ai[1] > 40f)
														{
															this.ai[1] = 1f;
															this.ai[0] = 0f;
															this.extraUpdates = 0;
															this.numUpdates = 0;
															this.netUpdate = true;
														}
														else
														{
															flag24 = true;
														}
													}
													if (this.type == 533 && this.ai[0] >= 3f && this.ai[0] <= 5f)
													{
														int num639 = 2;
														flag24 = true;
														this.velocity *= 0.9f;
														this.ai[1] += 1f;
														int num640 = (int)this.ai[1] / num639 + (int)(this.ai[0] - 3f) * 8;
														if (num640 < 4)
														{
															this.frame = 17 + num640;
														}
														else if (num640 < 5)
														{
															this.frame = 0;
														}
														else if (num640 < 8)
														{
															this.frame = 1 + num640 - 5;
														}
														else if (num640 < 11)
														{
															this.frame = 11 - num640;
														}
														else if (num640 < 12)
														{
															this.frame = 0;
														}
														else if (num640 < 16)
														{
															this.frame = num640 - 2;
														}
														else if (num640 < 20)
														{
															this.frame = 29 - num640;
														}
														else if (num640 < 21)
														{
															this.frame = 0;
														}
														else
														{
															this.frame = num640 - 4;
														}
														if (this.ai[1] > (float)(num639 * 8))
														{
															this.ai[0] -= 3f;
															this.ai[1] = 0f;
														}
													}
													if (this.type == 533 && this.ai[0] >= 6f && this.ai[0] <= 8f)
													{
														this.ai[1] += 1f;
														this.MaxUpdates = 2;
														if (this.ai[0] == 7f)
														{
															this.rotation = this.velocity.ToRotation() + 3.14159274f;
														}
														else
														{
															this.rotation += 0.5235988f;
														}
														int num641 = 0;
														switch ((int)this.ai[0])
														{
															case 6:
																this.frame = 5;
																num641 = 40;
																break;
															case 7:
																this.frame = 13;
																num641 = 30;
																break;
															case 8:
																this.frame = 17;
																num641 = 30;
																break;
														}
														if (this.ai[1] > (float)num641)
														{
															this.ai[1] = 1f;
															this.ai[0] -= 6f;
															this.localAI[0] += 1f;
															this.extraUpdates = 0;
															this.numUpdates = 0;
															this.netUpdate = true;
														}
														else
														{
															flag24 = true;
														}
														if (this.ai[0] == 8f)
														{
															for (int num642 = 0; num642 < 4; num642++)
															{
																int num643 = Utils.SelectRandom<int>(Main.rand, new int[]
																	{
																		226,
																		228,
																		75
																	});
																int num644 = Dust.NewDust(base.Center, 0, 0, num643, 0f, 0f, 0, default(Color), 1f);
																Dust dust = Main.dust[num644];
																Vector2 value18 = Vector2.One.RotatedBy((double)((float)num642 * 1.57079637f), default(Vector2)).RotatedBy((double)this.rotation, default(Vector2));
																dust.position = base.Center + value18 * 10f;
																dust.velocity = value18 * 1f;
																dust.scale = 0.6f + Main.rand.NextFloat() * 0.5f;
																dust.noGravity = true;
															}
														}
													}
													if (flag24)
													{
														return;
													}
													Vector2 vector46 = this.position;
													bool flag25 = false;
													if (this.ai[0] != 1f && (this.type == 387 || this.type == 388))
													{
														this.tileCollide = true;
													}
													if (this.type == 533 && this.ai[0] < 9f)
													{
														this.tileCollide = true;
													}
													if (this.tileCollide && WorldGen.SolidTile(Framing.GetTileSafely((int)base.Center.X / 16, (int)base.Center.Y / 16)))
													{
														this.tileCollide = false;
													}
													for (int num645 = 0; num645 < 200; num645++)
													{
														NPC nPC2 = Main.npc[num645];
														if (nPC2.CanBeChasedBy(this, false))
														{
															float num646 = Vector2.Distance(nPC2.Center, base.Center);
															if (((Vector2.Distance(base.Center, vector46) > num646 && num646 < num633) || !flag25) && Collision.CanHitLine(this.position, this.width, this.height, nPC2.position, nPC2.width, nPC2.height))
															{
																num633 = num646;
																vector46 = nPC2.Center;
																flag25 = true;
															}
														}
													}
													float num647 = num634;
													if (flag25)
													{
														num647 = num635;
													}
													Player player = Main.player[this.owner];
													if (Vector2.Distance(player.Center, base.Center) > num647)
													{
														if (this.type == 387 || this.type == 388)
														{
															this.ai[0] = 1f;
														}
														if (this.type == 533 && this.ai[0] < 9f)
														{
															this.ai[0] += (float)(3 * (3 - (int)(this.ai[0] / 3f)));
														}
														this.tileCollide = false;
														this.netUpdate = true;
													}
													if ((this.type == 388 || this.type == 387) && flag25 && this.ai[0] == 0f)
													{
														Vector2 vector47 = vector46 - base.Center;
														float num648 = vector47.Length();
														vector47.Normalize();
														if (num648 > 200f)
														{
															float scaleFactor2 = 6f;
															if (this.type == 388)
															{
																scaleFactor2 = 8f;
															}
															vector47 *= scaleFactor2;
															this.velocity = (this.velocity * 40f + vector47) / 41f;
														}
														else
														{
															float num649 = 4f;
															vector47 *= -num649;
															this.velocity = (this.velocity * 40f + vector47) / 41f;
														}
													}
													else
													{
														bool flag26 = false;
														if (!flag26)
														{
															flag26 = (this.ai[0] == 1f && (this.type == 387 || this.type == 388));
														}
														if (!flag26)
														{
															flag26 = (this.ai[0] >= 9f && this.type == 533);
														}
														float num650 = 6f;
														if (this.type == 533)
														{
															num650 = 12f;
														}
														if (flag26)
														{
															num650 = 15f;
														}
														Vector2 center2 = base.Center;
														Vector2 vector48 = player.Center - center2 + new Vector2(0f, -60f);
														float num651 = vector48.Length();
														if (num651 > 200f && num650 < 8f)
														{
															num650 = 8f;
														}
														if (num651 < num636 && flag26 && !Collision.SolidCollision(this.position, this.width, this.height))
														{
															if (this.type == 387 || this.type == 388)
															{
																this.ai[0] = 0f;
															}
															if (this.type == 533)
															{
																this.ai[0] -= 9f;
															}
															this.netUpdate = true;
														}
														if (num651 > 2000f)
														{
															this.position.X = Main.player[this.owner].Center.X - (float)(this.width / 2);
															this.position.Y = Main.player[this.owner].Center.Y - (float)(this.height / 2);
															this.netUpdate = true;
														}
														if (num651 > 70f)
														{
															vector48.Normalize();
															vector48 *= num650;
															this.velocity = (this.velocity * 40f + vector48) / 41f;
														}
														else if (this.velocity.X == 0f && this.velocity.Y == 0f)
														{
															this.velocity.X = -0.15f;
															this.velocity.Y = -0.05f;
														}
													}
													if (this.type == 388)
													{
														this.rotation = this.velocity.ToRotation() + 3.14159274f;
													}
													if (this.type == 387)
													{
														if (flag25)
														{
															this.rotation = (vector46 - base.Center).ToRotation() + 3.14159274f;
														}
														else
														{
															this.rotation = this.velocity.ToRotation() + 3.14159274f;
														}
													}
													if (this.type == 533 && (this.ai[0] < 3f || this.ai[0] >= 9f))
													{
														this.rotation += this.velocity.X * 0.04f;
													}
													if (this.type == 388 || this.type == 387)
													{
														this.frameCounter++;
														if (this.frameCounter > 3)
														{
															this.frame++;
															this.frameCounter = 0;
														}
														if (this.frame > 2)
														{
															this.frame = 0;
														}
													}
													else if (this.type == 533)
													{
														if (this.ai[0] < 3f || this.ai[0] >= 9f)
														{
															this.frameCounter++;
															if (this.frameCounter >= 24)
															{
																this.frameCounter = 0;
															}
															int num652 = this.frameCounter / 4;
															this.frame = 4 + num652;
															int num653 = (int)this.ai[0];
															switch (num653)
															{
																case 0:
																	break;
																case 1:
																	goto IL_1ACBB;
																case 2:
																	goto IL_1ACD6;
																default:
																	switch (num653)
																	{
																		case 9:
																			break;
																		case 10:
																			goto IL_1ACBB;
																		case 11:
																			goto IL_1ACD6;
																		default:
																			goto IL_1AD00;
																	}
																	break;
															}
															this.frame = 4 + num652;
															goto IL_1AD00;
															IL_1ACBB:
															num652 = this.frameCounter / 8;
															this.frame = 14 + num652;
															goto IL_1AD00;
															IL_1ACD6:
															num652 = this.frameCounter / 3;
															if (num652 >= 4)
															{
																num652 -= 4;
															}
															this.frame = 17 + num652;
														}
														IL_1AD00:
														if (this.ai[0] == 2f && Main.rand.Next(2) == 0)
														{
															for (int num654 = 0; num654 < 4; num654++)
															{
																if (Main.rand.Next(2) != 0)
																{
																	int num655 = Utils.SelectRandom<int>(Main.rand, new int[]
																		{
																			226,
																			228,
																			75
																		});
																	int num656 = Dust.NewDust(base.Center, 0, 0, num655, 0f, 0f, 0, default(Color), 1f);
																	Dust dust2 = Main.dust[num656];
																	Vector2 value19 = Vector2.One.RotatedBy((double)((float)num654 * 1.57079637f), default(Vector2)).RotatedBy((double)this.rotation, default(Vector2));
																	dust2.position = base.Center + value19 * 10f;
																	dust2.velocity = value19 * 1f;
																	dust2.scale = 0.3f + Main.rand.NextFloat() * 0.5f;
																	dust2.noGravity = true;
																	dust2.customData = this;
																	dust2.noLight = true;
																}
															}
														}
													}
													if (this.ai[1] > 0f && (this.type == 387 || this.type == 388))
													{
														this.ai[1] += (float)Main.rand.Next(1, 4);
													}
													if (this.ai[1] > 90f && this.type == 387)
													{
														this.ai[1] = 0f;
														this.netUpdate = true;
													}
													if (this.ai[1] > 40f && this.type == 388)
													{
														this.ai[1] = 0f;
														this.netUpdate = true;
													}
													if (this.ai[1] > 0f && this.type == 533)
													{
														this.ai[1] += 1f;
														int num657 = 10;
														if (this.ai[1] > (float)num657)
														{
															this.ai[1] = 0f;
															this.netUpdate = true;
														}
													}
													if (this.ai[0] == 0f && (this.type == 387 || this.type == 388))
													{
														if (this.type == 387)
														{
															float scaleFactor3 = 8f;
															int num658 = 389;
															if (flag25 && this.ai[1] == 0f)
															{
																this.ai[1] += 1f;
																if (Main.myPlayer == this.owner && Collision.CanHitLine(this.position, this.width, this.height, vector46, 0, 0))
																{
																	Vector2 value20 = vector46 - base.Center;
																	value20.Normalize();
																	value20 *= scaleFactor3;
																	int num659 = Projectile.NewProjectile(base.Center.X, base.Center.Y, value20.X, value20.Y, num658, (int)((float)this.damage * 0.8f), 0f, Main.myPlayer, 0f, 0f);
																	Main.projectile[num659].timeLeft = 300;
																	this.netUpdate = true;
																}
															}
														}
														if (this.type == 388 && this.ai[1] == 0f && flag25 && num633 < 500f)
														{
															this.ai[1] += 1f;
															if (Main.myPlayer == this.owner)
															{
																this.ai[0] = 2f;
																Vector2 value21 = vector46 - base.Center;
																value21.Normalize();
																this.velocity = value21 * 8f;
																this.netUpdate = true;
																return;
															}
														}
													}
													else if (this.type == 533 && this.ai[0] < 3f)
													{
														int num660 = 0;
														switch ((int)this.ai[0])
														{
															case 0:
															case 3:
															case 6:
																num660 = 400;
																break;
															case 1:
															case 4:
															case 7:
																num660 = 400;
																break;
															case 2:
															case 5:
															case 8:
																num660 = 600;
																break;
														}
														if (this.ai[1] == 0f && flag25 && num633 < (float)num660)
														{
															this.ai[1] += 1f;
															if (Main.myPlayer == this.owner)
															{
																if (this.localAI[0] >= 3f)
																{
																	this.ai[0] += 4f;
																	if (this.ai[0] == 6f)
																	{
																		this.ai[0] = 3f;
																	}
																	this.localAI[0] = 0f;
																	return;
																}
																this.ai[0] += 6f;
																Vector2 value22 = vector46 - base.Center;
																value22.Normalize();
																float scaleFactor4 = (this.ai[0] == 8f) ? 12f : 10f;
																this.velocity = value22 * scaleFactor4;
																this.netUpdate = true;
																return;
															}
														}
													}
												}
												else if (this.aiStyle == 67)
												{
													Player player2 = Main.player[this.owner];
													if (!player2.active)
													{
														this.active = false;
														return;
													}
													bool flag27 = this.type == 393 || this.type == 394 || this.type == 395;
													if (flag27)
													{
														if (player2.dead)
														{
															player2.pirateMinion = false;
														}
														if (player2.pirateMinion)
														{
															this.timeLeft = 2;
														}
													}
													if (this.type == 500)
													{
														if (player2.dead)
														{
															player2.crimsonHeart = false;
														}
														if (player2.crimsonHeart)
														{
															this.timeLeft = 2;
														}
													}
													if (this.type == 653)
													{
														if (player2.dead)
														{
															player2.companionCube = false;
														}
														if (player2.companionCube)
														{
															this.timeLeft = 2;
														}
													}
													Vector2 vector49 = player2.Center;
													if (flag27)
													{
														vector49.X -= (float)((15 + player2.width / 2) * player2.direction);
														vector49.X -= (float)(this.minionPos * 40 * player2.direction);
													}
													if (this.type == 500)
													{
														vector49.X -= (float)((15 + player2.width / 2) * player2.direction);
														vector49.X -= (float)(40 * player2.direction);
													}
													if (this.type == 653)
													{
														float num661 = (float)(15 + (player2.crimsonHeart ? 40 : 0));
														vector49.X -= (num661 + (float)(player2.width / 2)) * (float)player2.direction;
														vector49.X -= (float)(40 * player2.direction);
													}
													if (this.type == 500)
													{
														Lighting.AddLight(base.Center, 0.9f, 0.1f, 0.3f);
														int num662 = 6;
														if (this.frame == 0 || this.frame == 2)
														{
															num662 = 12;
														}
														if (++this.frameCounter >= num662)
														{
															this.frameCounter = 0;
															if (++this.frame >= Main.projFrames[this.type])
															{
																this.frame = 0;
															}
														}
														this.rotation += this.velocity.X / 20f;
														Vector2 vector50 = (-Vector2.UnitY).RotatedBy((double)this.rotation, default(Vector2)).RotatedBy((double)((float)this.direction * 0.2f), default(Vector2));
														int num663 = Dust.NewDust(base.Center + vector50 * 10f - new Vector2(4f), 0, 0, 5, vector50.X, vector50.Y, 0, Color.Transparent, 1f);
														Main.dust[num663].scale = 1f;
														Main.dust[num663].velocity = vector50.RotatedByRandom(0.78539818525314331) * 3.5f;
														Main.dust[num663].noGravity = true;
														Main.dust[num663].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cLight, Main.player[this.owner]);
													}
													if (this.type == 653)
													{
														this.rotation += this.velocity.X / 20f;
														if (this.velocity.Y == 0f)
														{
															this.rotation = this.rotation.AngleTowards(0f, 0.7f);
														}
														if (this.owner >= 0 && this.owner < 255)
														{
															Projectile._CompanionCubeScreamCooldown[this.owner] -= 1f;
															if (Projectile._CompanionCubeScreamCooldown[this.owner] < 0f)
															{
																Projectile._CompanionCubeScreamCooldown[this.owner] = 0f;
															}
														}
														Tile tileSafely = Framing.GetTileSafely(base.Center);
														if (tileSafely.liquid > 0 && tileSafely.lava())
														{
															this.localAI[0] += 1f;
														}
														else
														{
															this.localAI[0] -= 1f;
														}
														this.localAI[0] = MathHelper.Clamp(this.localAI[0], 0f, 20f);
														if (this.localAI[0] >= 20f)
														{
															if (Projectile._CompanionCubeScreamCooldown[this.owner] == 0f)
															{
																Projectile._CompanionCubeScreamCooldown[this.owner] = 3600f;
																Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, (Main.rand.Next(10) == 0) ? 61 : 59);
															}
															this.Kill();
														}
														Vector3 vector51 = Lighting.GetColor((int)base.Center.X / 16, (int)base.Center.Y / 16).ToVector3();
														Vector3 vector52 = Lighting.GetColor((int)player2.Center.X / 16, (int)player2.Center.Y / 16).ToVector3();
														if (vector51.Length() < 0.15f && vector52.Length() < 0.15f)
														{
															this.localAI[1] += 1f;
														}
														else if (this.localAI[1] > 0f)
														{
															this.localAI[1] -= 1f;
														}
														this.localAI[1] = MathHelper.Clamp(this.localAI[1], -3600f, 120f);
														if (this.localAI[1] > (float)Main.rand.Next(30, 120) && !player2.immune && player2.velocity == Vector2.Zero)
														{
															if (Main.rand.Next(5) == 0)
															{
																Main.PlaySound(2, base.Center, 16);
																this.localAI[1] = -600f;
															}
															else
															{
																Main.PlaySound(2, base.Center, 1);
																player2.Hurt(3, 0, false, false, Lang.deathMsg(-1, -1, -1, 6, 0, 0), false, -1);
																player2.immune = false;
																player2.immuneTime = 0;
																this.localAI[1] = (float)(-300 + Main.rand.Next(30) * -10);
															}
														}
													}
													bool flag28 = true;
													if (this.type == 500 || this.type == 653)
													{
														flag28 = false;
													}
													int num664 = -1;
													float num665 = 450f;
													if (flag27)
													{
														num665 = 800f;
													}
													int num666 = 15;
													if (this.ai[0] == 0f && flag28)
													{
														for (int num667 = 0; num667 < 200; num667++)
														{
															NPC nPC3 = Main.npc[num667];
															if (nPC3.CanBeChasedBy(this, false))
															{
																float num668 = (nPC3.Center - base.Center).Length();
																if (num668 < num665)
																{
																	num664 = num667;
																	num665 = num668;
																}
															}
														}
													}
													if (this.ai[0] == 1f)
													{
														this.tileCollide = false;
														float num669 = 0.2f;
														float num670 = 10f;
														int num671 = 200;
														if (num670 < Math.Abs(player2.velocity.X) + Math.Abs(player2.velocity.Y))
														{
															num670 = Math.Abs(player2.velocity.X) + Math.Abs(player2.velocity.Y);
														}
														Vector2 value23 = player2.Center - base.Center;
														float num672 = value23.Length();
														if (num672 > 2000f)
														{
															this.position = player2.Center - new Vector2((float)this.width, (float)this.height) / 2f;
														}
														if (num672 < (float)num671 && player2.velocity.Y == 0f && this.position.Y + (float)this.height <= player2.position.Y + (float)player2.height && !Collision.SolidCollision(this.position, this.width, this.height))
														{
															this.ai[0] = 0f;
															this.netUpdate = true;
															if (this.velocity.Y < -6f)
															{
																this.velocity.Y = -6f;
															}
														}
														if (num672 >= 60f)
														{
															value23.Normalize();
															value23 *= num670;
															if (this.velocity.X < value23.X)
															{
																this.velocity.X = this.velocity.X + num669;
																if (this.velocity.X < 0f)
																{
																	this.velocity.X = this.velocity.X + num669 * 1.5f;
																}
															}
															if (this.velocity.X > value23.X)
															{
																this.velocity.X = this.velocity.X - num669;
																if (this.velocity.X > 0f)
																{
																	this.velocity.X = this.velocity.X - num669 * 1.5f;
																}
															}
															if (this.velocity.Y < value23.Y)
															{
																this.velocity.Y = this.velocity.Y + num669;
																if (this.velocity.Y < 0f)
																{
																	this.velocity.Y = this.velocity.Y + num669 * 1.5f;
																}
															}
															if (this.velocity.Y > value23.Y)
															{
																this.velocity.Y = this.velocity.Y - num669;
																if (this.velocity.Y > 0f)
																{
																	this.velocity.Y = this.velocity.Y - num669 * 1.5f;
																}
															}
														}
														if (this.velocity.X != 0f)
														{
															this.spriteDirection = Math.Sign(this.velocity.X);
														}
														if (flag27)
														{
															this.frameCounter++;
															if (this.frameCounter > 3)
															{
																this.frame++;
																this.frameCounter = 0;
															}
															if (this.frame < 10 | this.frame > 13)
															{
																this.frame = 10;
															}
															this.rotation = this.velocity.X * 0.1f;
														}
													}
													if (this.ai[0] == 2f)
													{
														this.friendly = true;
														this.spriteDirection = this.direction;
														this.rotation = 0f;
														this.frame = 4 + (int)((float)num666 - this.ai[1]) / (num666 / 3);
														if (this.velocity.Y != 0f)
														{
															this.frame += 3;
														}
														this.velocity.Y = this.velocity.Y + 0.4f;
														if (this.velocity.Y > 10f)
														{
															this.velocity.Y = 10f;
														}
														this.ai[1] -= 1f;
														if (this.ai[1] <= 0f)
														{
															this.ai[1] = 0f;
															this.ai[0] = 0f;
															this.friendly = false;
															this.netUpdate = true;
															return;
														}
													}
													if (num664 >= 0)
													{
														float num673 = 400f;
														float num674 = 20f;
														if (flag27)
														{
															num673 = 700f;
														}
														if ((double)this.position.Y > Main.worldSurface * 16.0)
														{
															num673 *= 0.7f;
														}
														NPC nPC4 = Main.npc[num664];
														Vector2 center3 = nPC4.Center;
														float num675 = (center3 - base.Center).Length();
														Collision.CanHit(this.position, this.width, this.height, nPC4.position, nPC4.width, nPC4.height);
														if (num675 < num673)
														{
															vector49 = center3;
															if (center3.Y < base.Center.Y - 30f && this.velocity.Y == 0f)
															{
																float num676 = Math.Abs(center3.Y - base.Center.Y);
																if (num676 < 120f)
																{
																	this.velocity.Y = -10f;
																}
																else if (num676 < 210f)
																{
																	this.velocity.Y = -13f;
																}
																else if (num676 < 270f)
																{
																	this.velocity.Y = -15f;
																}
																else if (num676 < 310f)
																{
																	this.velocity.Y = -17f;
																}
																else if (num676 < 380f)
																{
																	this.velocity.Y = -18f;
																}
															}
														}
														if (num675 < num674)
														{
															this.ai[0] = 2f;
															this.ai[1] = (float)num666;
															this.netUpdate = true;
														}
													}
													if (this.ai[0] == 0f && num664 < 0)
													{
														float num677 = 500f;
														if (this.type == 500)
														{
															num677 = 200f;
														}
														if (this.type == 653)
														{
															num677 = 170f;
														}
														if (Main.player[this.owner].rocketDelay2 > 0)
														{
															this.ai[0] = 1f;
															this.netUpdate = true;
														}
														Vector2 vector53 = player2.Center - base.Center;
														if (vector53.Length() > 2000f)
														{
															this.position = player2.Center - new Vector2((float)this.width, (float)this.height) / 2f;
														}
														else if (vector53.Length() > num677 || Math.Abs(vector53.Y) > 300f)
														{
															this.ai[0] = 1f;
															this.netUpdate = true;
															if (this.velocity.Y > 0f && vector53.Y < 0f)
															{
																this.velocity.Y = 0f;
															}
															if (this.velocity.Y < 0f && vector53.Y > 0f)
															{
																this.velocity.Y = 0f;
															}
														}
													}
													if (this.ai[0] == 0f)
													{
														this.tileCollide = true;
														float num678 = 0.5f;
														float num679 = 4f;
														float num680 = 4f;
														float num681 = 0.1f;
														if (num680 < Math.Abs(player2.velocity.X) + Math.Abs(player2.velocity.Y))
														{
															num680 = Math.Abs(player2.velocity.X) + Math.Abs(player2.velocity.Y);
															num678 = 0.7f;
														}
														int num682 = 0;
														bool flag29 = false;
														float num683 = vector49.X - base.Center.X;
														if (Math.Abs(num683) > 5f)
														{
															if (num683 < 0f)
															{
																num682 = -1;
																if (this.velocity.X > -num679)
																{
																	this.velocity.X = this.velocity.X - num678;
																}
																else
																{
																	this.velocity.X = this.velocity.X - num681;
																}
															}
															else
															{
																num682 = 1;
																if (this.velocity.X < num679)
																{
																	this.velocity.X = this.velocity.X + num678;
																}
																else
																{
																	this.velocity.X = this.velocity.X + num681;
																}
															}
															if (!flag27)
															{
																flag29 = true;
															}
														}
														else
														{
															this.velocity.X = this.velocity.X * 0.9f;
															if (Math.Abs(this.velocity.X) < num678 * 2f)
															{
																this.velocity.X = 0f;
															}
														}
														if (num682 != 0)
														{
															int num684 = (int)(this.position.X + (float)(this.width / 2)) / 16;
															int num685 = (int)this.position.Y / 16;
															num684 += num682;
															num684 += (int)this.velocity.X;
															for (int num686 = num685; num686 < num685 + this.height / 16 + 1; num686++)
															{
																if (WorldGen.SolidTile(num684, num686))
																{
																	flag29 = true;
																}
															}
														}
														if (this.type == 500 && this.velocity.X != 0f)
														{
															flag29 = true;
														}
														if (this.type == 653 && this.velocity.X != 0f)
														{
															flag29 = true;
														}
														Collision.StepUp(ref this.position, ref this.velocity, this.width, this.height, ref this.stepSpeed, ref this.gfxOffY, 1, false, 0);
														if (this.velocity.Y == 0f && flag29)
														{
															int num687 = 0;
															while (num687 < 3)
															{
																int num688 = (int)(this.position.X + (float)(this.width / 2)) / 16;
																if (num687 == 0)
																{
																	num688 = (int)this.position.X / 16;
																}
																if (num687 == 2)
																{
																	num688 = (int)(this.position.X + (float)this.width) / 16;
																}
																int num689 = (int)(this.position.Y + (float)this.height) / 16;
																if (WorldGen.SolidTile(num688, num689) || Main.tile[num688, num689].halfBrick() || Main.tile[num688, num689].slope() > 0)
																{
																	goto Block_1971;
																}
																if (TileID.Sets.Platforms[(int)Main.tile[num688, num689].type] && Main.tile[num688, num689].active() && !Main.tile[num688, num689].inActive())
																{
																	goto Block_1971;
																}
																IL_1C872:
																num687++;
																continue;
																Block_1971:
																try
																{
																	IL_1C754:
																	num688 = (int)(this.position.X + (float)(this.width / 2)) / 16;
																	num689 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
																	num688 += num682;
																	num688 += (int)this.velocity.X;
																	if (!WorldGen.SolidTile(num688, num689 - 1) && !WorldGen.SolidTile(num688, num689 - 2))
																	{
																		this.velocity.Y = -5.1f;
																	}
																	else if (!WorldGen.SolidTile(num688, num689 - 2))
																	{
																		this.velocity.Y = -7.1f;
																	}
																	else if (WorldGen.SolidTile(num688, num689 - 5))
																	{
																		this.velocity.Y = -11.1f;
																	}
																	else if (WorldGen.SolidTile(num688, num689 - 4))
																	{
																		this.velocity.Y = -10.1f;
																	}
																	else
																	{
																		this.velocity.Y = -9.1f;
																	}
																}
																catch
																{
																	this.velocity.Y = -9.1f;
																}
																goto IL_1C872;
															}
														}
														if (this.velocity.X > num680)
														{
															this.velocity.X = num680;
														}
														if (this.velocity.X < -num680)
														{
															this.velocity.X = -num680;
														}
														if (this.velocity.X < 0f)
														{
															this.direction = -1;
														}
														if (this.velocity.X > 0f)
														{
															this.direction = 1;
														}
														if (this.velocity.X > num678 && num682 == 1)
														{
															this.direction = 1;
														}
														if (this.velocity.X < -num678 && num682 == -1)
														{
															this.direction = -1;
														}
														this.spriteDirection = this.direction;
														if (flag27)
														{
															this.rotation = 0f;
															if (this.velocity.Y == 0f)
															{
																if (this.velocity.X == 0f)
																{
																	this.frame = 0;
																	this.frameCounter = 0;
																}
																else if (Math.Abs(this.velocity.X) >= 0.5f)
																{
																	this.frameCounter += (int)Math.Abs(this.velocity.X);
																	this.frameCounter++;
																	if (this.frameCounter > 10)
																	{
																		this.frame++;
																		this.frameCounter = 0;
																	}
																	if (this.frame >= 4)
																	{
																		this.frame = 0;
																	}
																}
																else
																{
																	this.frame = 0;
																	this.frameCounter = 0;
																}
															}
															else if (this.velocity.Y != 0f)
															{
																this.frameCounter = 0;
																this.frame = 14;
															}
														}
														this.velocity.Y = this.velocity.Y + 0.4f;
														if (this.velocity.Y > 10f)
														{
															this.velocity.Y = 10f;
														}
													}
													if (flag27)
													{
														this.localAI[0] += 1f;
														if (this.velocity.X == 0f)
														{
															this.localAI[0] += 1f;
														}
														if (this.localAI[0] >= (float)Main.rand.Next(900, 1200))
														{
															this.localAI[0] = 0f;
															for (int num690 = 0; num690 < 6; num690++)
															{
																int num691 = Dust.NewDust(base.Center + Vector2.UnitX * (float)(-(float)this.direction) * 8f - Vector2.One * 5f + Vector2.UnitY * 8f, 3, 6, 216, (float)(-(float)this.direction), 1f, 0, default(Color), 1f);
																Main.dust[num691].velocity /= 2f;
																Main.dust[num691].scale = 0.8f;
															}
															int num692 = Gore.NewGore(base.Center + Vector2.UnitX * (float)(-(float)this.direction) * 8f, Vector2.Zero, Main.rand.Next(580, 583), 1f);
															Main.gore[num692].velocity /= 2f;
															Main.gore[num692].velocity.Y = Math.Abs(Main.gore[num692].velocity.Y);
															Main.gore[num692].velocity.X = -Math.Abs(Main.gore[num692].velocity.X) * (float)this.direction;
															return;
														}
													}
												}
												else if (this.aiStyle == 68)
												{
													this.rotation += 0.25f * (float)this.direction;
													this.ai[0] += 1f;
													if (this.ai[0] >= 3f)
													{
														this.alpha -= 40;
														if (this.alpha < 0)
														{
															this.alpha = 0;
														}
													}
													if (this.ai[0] >= 15f)
													{
														this.velocity.Y = this.velocity.Y + 0.2f;
														if (this.velocity.Y > 16f)
														{
															this.velocity.Y = 16f;
														}
														this.velocity.X = this.velocity.X * 0.99f;
													}
													if (this.alpha == 0)
													{
														Vector2 vector54 = new Vector2(4f, -8f);
														float num693 = this.rotation;
														if (this.direction == -1)
														{
															vector54.X = -4f;
														}
														vector54 = vector54.RotatedBy((double)num693, default(Vector2));
														for (int num694 = 0; num694 < 1; num694++)
														{
															int num695 = Dust.NewDust(base.Center + vector54 - Vector2.One * 5f, 4, 4, 6, 0f, 0f, 0, default(Color), 1f);
															Main.dust[num695].scale = 1.5f;
															Main.dust[num695].noGravity = true;
															Main.dust[num695].velocity = Main.dust[num695].velocity * 0.25f + Vector2.Normalize(vector54) * 1f;
															Main.dust[num695].velocity = Main.dust[num695].velocity.RotatedBy((double)(-1.57079637f * (float)this.direction), default(Vector2));
														}
													}
													this.spriteDirection = this.direction;
													if (this.owner == Main.myPlayer && this.timeLeft <= 3)
													{
														this.tileCollide = false;
														this.alpha = 255;
														this.position.X = this.position.X + (float)(this.width / 2);
														this.position.Y = this.position.Y + (float)(this.height / 2);
														this.width = 80;
														this.height = 80;
														this.position.X = this.position.X - (float)(this.width / 2);
														this.position.Y = this.position.Y - (float)(this.height / 2);
														this.knockBack = 8f;
													}
													if (this.wet && this.timeLeft > 3)
													{
														this.timeLeft = 3;
														return;
													}
												}
												else if (this.aiStyle == 69)
												{
													Vector2 vector55 = Main.player[this.owner].Center - base.Center;
													this.rotation = vector55.ToRotation() - 1.57f;
													if (Main.player[this.owner].dead)
													{
														this.Kill();
														return;
													}
													Main.player[this.owner].itemAnimation = 10;
													Main.player[this.owner].itemTime = 10;
													float arg_1D046_0 = vector55.X;
													if (vector55.X < 0f)
													{
														Main.player[this.owner].ChangeDir(1);
														this.direction = 1;
													}
													else
													{
														Main.player[this.owner].ChangeDir(-1);
														this.direction = -1;
													}
													Main.player[this.owner].itemRotation = (vector55 * -1f * (float)this.direction).ToRotation();
													this.spriteDirection = ((vector55.X > 0f) ? -1 : 1);
													if (this.ai[0] == 0f && vector55.Length() > 400f)
													{
														this.ai[0] = 1f;
													}
													if (this.ai[0] == 1f || this.ai[0] == 2f)
													{
														float num696 = vector55.Length();
														if (num696 > 1500f)
														{
															this.Kill();
															return;
														}
														if (num696 > 600f)
														{
															this.ai[0] = 2f;
														}
														this.tileCollide = false;
														float num697 = 20f;
														if (this.ai[0] == 2f)
														{
															num697 = 40f;
														}
														this.velocity = Vector2.Normalize(vector55) * num697;
														if (vector55.Length() < num697)
														{
															this.Kill();
															return;
														}
													}
													this.ai[1] += 1f;
													if (this.ai[1] > 5f)
													{
														this.alpha = 0;
													}
													if ((int)this.ai[1] % 4 == 0 && this.owner == Main.myPlayer)
													{
														Vector2 vector56 = vector55 * -1f;
														vector56.Normalize();
														vector56 *= (float)Main.rand.Next(45, 65) * 0.1f;
														vector56 = vector56.RotatedBy((Main.rand.NextDouble() - 0.5) * 1.5707963705062866, default(Vector2));
														Projectile.NewProjectile(base.Center.X, base.Center.Y, vector56.X, vector56.Y, 405, this.damage, this.knockBack, this.owner, -10f, 0f);
														return;
													}
												}
												else
												{
													if (this.aiStyle == 70)
													{
														if (this.ai[0] == 0f)
														{
															float num698 = 500f;
															int num699 = -1;
															for (int num700 = 0; num700 < 200; num700++)
															{
																NPC nPC5 = Main.npc[num700];
																if (nPC5.CanBeChasedBy(this, false) && Collision.CanHit(this.position, this.width, this.height, nPC5.position, nPC5.width, nPC5.height))
																{
																	float num701 = (nPC5.Center - base.Center).Length();
																	if (num701 < num698)
																	{
																		num699 = num700;
																		num698 = num701;
																	}
																}
															}
															this.ai[0] = (float)(num699 + 1);
															if (this.ai[0] == 0f)
															{
																this.ai[0] = -15f;
															}
															if (this.ai[0] > 0f)
															{
																float scaleFactor5 = (float)Main.rand.Next(35, 75) / 30f;
																this.velocity = (this.velocity * 20f + Vector2.Normalize(Main.npc[(int)this.ai[0] - 1].Center - base.Center + new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101))) * scaleFactor5) / 21f;
																this.netUpdate = true;
															}
														}
														else if (this.ai[0] > 0f)
														{
															Vector2 value24 = Vector2.Normalize(Main.npc[(int)this.ai[0] - 1].Center - base.Center);
															this.velocity = (this.velocity * 40f + value24 * 12f) / 41f;
														}
														else
														{
															this.ai[0] += 1f;
															this.alpha -= 25;
															if (this.alpha < 50)
															{
																this.alpha = 50;
															}
															this.velocity *= 0.95f;
														}
														if (this.ai[1] == 0f)
														{
															this.ai[1] = (float)Main.rand.Next(80, 121) / 100f;
															this.netUpdate = true;
														}
														this.scale = this.ai[1];
														return;
													}
													if (this.aiStyle == 71)
													{
														this.localAI[1] += 1f;
														if (this.localAI[1] > 10f && Main.rand.Next(3) == 0)
														{
															int num702 = 6;
															for (int num703 = 0; num703 < num702; num703++)
															{
																Vector2 vector57 = Vector2.Normalize(this.velocity) * new Vector2((float)this.width, (float)this.height) / 2f;
																vector57 = vector57.RotatedBy((double)(num703 - (num702 / 2 - 1)) * 3.1415926535897931 / (double)((float)num702), default(Vector2)) + base.Center;
																Vector2 value25 = ((float)(Main.rand.NextDouble() * 3.1415927410125732) - 1.57079637f).ToRotationVector2() * (float)Main.rand.Next(3, 8);
																int num704 = Dust.NewDust(vector57 + value25, 0, 0, 217, value25.X * 2f, value25.Y * 2f, 100, default(Color), 1.4f);
																Main.dust[num704].noGravity = true;
																Main.dust[num704].noLight = true;
																Main.dust[num704].velocity /= 4f;
																Main.dust[num704].velocity -= this.velocity;
															}
															this.alpha -= 5;
															if (this.alpha < 50)
															{
																this.alpha = 50;
															}
															this.rotation += this.velocity.X * 0.1f;
															this.frame = (int)(this.localAI[1] / 3f) % 3;
															Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.1f, 0.4f, 0.6f);
														}
														int num705 = -1;
														Vector2 vector58 = base.Center;
														float num706 = 500f;
														if (this.localAI[0] > 0f)
														{
															this.localAI[0] -= 1f;
														}
														if (this.ai[0] == 0f && this.localAI[0] == 0f)
														{
															for (int num707 = 0; num707 < 200; num707++)
															{
																NPC nPC6 = Main.npc[num707];
																if (nPC6.CanBeChasedBy(this, false) && (this.ai[0] == 0f || this.ai[0] == (float)(num707 + 1)))
																{
																	Vector2 center4 = nPC6.Center;
																	float num708 = Vector2.Distance(center4, vector58);
																	if (num708 < num706 && Collision.CanHit(this.position, this.width, this.height, nPC6.position, nPC6.width, nPC6.height))
																	{
																		num706 = num708;
																		vector58 = center4;
																		num705 = num707;
																	}
																}
															}
															if (num705 >= 0)
															{
																this.ai[0] = (float)(num705 + 1);
																this.netUpdate = true;
															}
														}
														if (this.localAI[0] == 0f && this.ai[0] == 0f)
														{
															this.localAI[0] = 30f;
														}
														bool flag30 = false;
														if (this.ai[0] != 0f)
														{
															int num709 = (int)(this.ai[0] - 1f);
															if (Main.npc[num709].active && !Main.npc[num709].dontTakeDamage && Main.npc[num709].immune[this.owner] == 0)
															{
																float num710 = Main.npc[num709].position.X + (float)(Main.npc[num709].width / 2);
																float num711 = Main.npc[num709].position.Y + (float)(Main.npc[num709].height / 2);
																float num712 = Math.Abs(this.position.X + (float)(this.width / 2) - num710) + Math.Abs(this.position.Y + (float)(this.height / 2) - num711);
																if (num712 < 1000f)
																{
																	flag30 = true;
																	vector58 = Main.npc[num709].Center;
																}
															}
															else
															{
																this.ai[0] = 0f;
																flag30 = false;
																this.netUpdate = true;
															}
														}
														if (flag30)
														{
															Vector2 v = vector58 - base.Center;
															float num713 = this.velocity.ToRotation();
															float num714 = v.ToRotation();
															double num715 = (double)(num714 - num713);
															if (num715 > 3.1415926535897931)
															{
																num715 -= 6.2831853071795862;
															}
															if (num715 < -3.1415926535897931)
															{
																num715 += 6.2831853071795862;
															}
															this.velocity = this.velocity.RotatedBy(num715 * 0.10000000149011612, default(Vector2));
														}
														float num716 = this.velocity.Length();
														this.velocity.Normalize();
														this.velocity *= num716 + 0.0025f;
														return;
													}
													if (this.aiStyle == 72)
													{
														this.localAI[0] += 1f;
														if (this.localAI[0] > 5f)
														{
															this.alpha -= 25;
															if (this.alpha < 50)
															{
																this.alpha = 50;
															}
														}
														this.velocity *= 0.96f;
														if (this.ai[1] == 0f)
														{
															this.ai[1] = (float)Main.rand.Next(60, 121) / 100f;
															this.netUpdate = true;
														}
														this.scale = this.ai[1];
														this.position = base.Center;
														int num717 = 14;
														int num718 = 14;
														this.width = (int)((float)num717 * this.ai[1]);
														this.height = (int)((float)num718 * this.ai[1]);
														this.position -= new Vector2((float)(this.width / 2), (float)(this.height / 2));
														return;
													}
													if (this.aiStyle == 73)
													{
														int num719 = (int)this.ai[0];
														int num720 = (int)this.ai[1];
														Tile tile = Main.tile[num719, num720];
														if (tile == null || !tile.active() || tile.type != 338)
														{
															this.Kill();
															return;
														}
														float num721 = 2f;
														float num722 = (float)this.timeLeft / 60f;
														if (num722 < 1f)
														{
															num721 *= num722;
														}
														if (this.type == 419)
														{
															for (int num723 = 0; num723 < 2; num723++)
															{
																Vector2 vector59 = new Vector2(0f, -num721);
																vector59 *= 0.85f + (float)Main.rand.NextDouble() * 0.2f;
																vector59 = vector59.RotatedBy((Main.rand.NextDouble() - 0.5) * 1.5707963705062866, default(Vector2));
																int num724 = Dust.NewDust(this.position, this.width, this.height, 222, 0f, 0f, 100, default(Color), 1f);
																Dust dust3 = Main.dust[num724];
																dust3.scale = 1f + (float)Main.rand.NextDouble() * 0.3f;
																dust3.velocity *= 0.5f;
																if (dust3.velocity.Y > 0f)
																{
																	Dust expr_1DE75_cp_0 = dust3;
																	expr_1DE75_cp_0.velocity.Y = expr_1DE75_cp_0.velocity.Y * -1f;
																}
																dust3.position -= new Vector2((float)(2 + Main.rand.Next(-2, 3)), 0f);
																dust3.velocity += vector59;
																dust3.scale = 0.6f;
																dust3.fadeIn = dust3.scale + 0.2f;
																Dust expr_1DEFB_cp_0 = dust3;
																expr_1DEFB_cp_0.velocity.Y = expr_1DEFB_cp_0.velocity.Y * 2f;
															}
														}
														if (this.type == 420)
														{
															for (int num725 = 0; num725 < 2; num725++)
															{
																Vector2 vector60 = new Vector2(0f, -num721);
																vector60 *= 0.85f + (float)Main.rand.NextDouble() * 0.2f;
																vector60 = vector60.RotatedBy((Main.rand.NextDouble() - 0.5) * 1.5707963705062866, default(Vector2));
																int num726 = 219;
																if (Main.rand.Next(5) == 0)
																{
																	num726 = 222;
																}
																int num727 = Dust.NewDust(this.position, this.width, this.height, num726, 0f, 0f, 100, default(Color), 1f);
																Dust dust4 = Main.dust[num727];
																dust4.scale = 1f + (float)Main.rand.NextDouble() * 0.3f;
																dust4.velocity *= 0.5f;
																if (dust4.velocity.Y > 0f)
																{
																	Dust expr_1E06C_cp_0 = dust4;
																	expr_1E06C_cp_0.velocity.Y = expr_1E06C_cp_0.velocity.Y * -1f;
																}
																dust4.position -= new Vector2((float)(2 + Main.rand.Next(-2, 3)), 0f);
																dust4.velocity += vector60;
																Dust expr_1E0CC_cp_0 = dust4;
																expr_1E0CC_cp_0.velocity.X = expr_1E0CC_cp_0.velocity.X * 0.5f;
																dust4.scale = 0.6f;
																dust4.fadeIn = dust4.scale + 0.2f;
																Dust expr_1E10C_cp_0 = dust4;
																expr_1E10C_cp_0.velocity.Y = expr_1E10C_cp_0.velocity.Y * 2f;
															}
														}
														if (this.type == 421)
														{
															for (int num728 = 0; num728 < 2; num728++)
															{
																Vector2 vector61 = new Vector2(0f, -num721);
																vector61 *= 0.85f + (float)Main.rand.NextDouble() * 0.2f;
																vector61 = vector61.RotatedBy((Main.rand.NextDouble() - 0.5) * 0.78539818525314331, default(Vector2));
																int num729 = Dust.NewDust(this.position, this.width, this.height, 221, 0f, 0f, 100, default(Color), 1f);
																Dust dust5 = Main.dust[num729];
																dust5.scale = 1f + (float)Main.rand.NextDouble() * 0.3f;
																dust5.velocity *= 0.1f;
																if (dust5.velocity.Y > 0f)
																{
																	Dust expr_1E25F_cp_0 = dust5;
																	expr_1E25F_cp_0.velocity.Y = expr_1E25F_cp_0.velocity.Y * -1f;
																}
																dust5.position -= new Vector2((float)(2 + Main.rand.Next(-2, 3)), 0f);
																dust5.velocity += vector61;
																dust5.scale = 0.6f;
																dust5.fadeIn = dust5.scale + 0.2f;
																Dust expr_1E2E5_cp_0 = dust5;
																expr_1E2E5_cp_0.velocity.Y = expr_1E2E5_cp_0.velocity.Y * 2.5f;
															}
															if (this.timeLeft % 10 == 0)
															{
																float num730 = 0.85f + (float)Main.rand.NextDouble() * 0.2f;
																for (int num731 = 0; num731 < 9; num731++)
																{
																	Vector2 value26 = new Vector2((float)(num731 - 4) / 5f, -num721 * num730);
																	int num732 = Dust.NewDust(this.position, this.width, this.height, 222, 0f, 0f, 100, default(Color), 1f);
																	Dust dust6 = Main.dust[num732];
																	dust6.scale = 0.7f + (float)Main.rand.NextDouble() * 0.3f;
																	dust6.velocity *= 0f;
																	if (dust6.velocity.Y > 0f)
																	{
																		Dust expr_1E401_cp_0 = dust6;
																		expr_1E401_cp_0.velocity.Y = expr_1E401_cp_0.velocity.Y * -1f;
																	}
																	dust6.position -= new Vector2((float)(2 + Main.rand.Next(-2, 3)), 0f);
																	dust6.velocity += value26;
																	dust6.scale = 0.6f;
																	dust6.fadeIn = dust6.scale + 0.2f;
																	Dust expr_1E487_cp_0 = dust6;
																	expr_1E487_cp_0.velocity.Y = expr_1E487_cp_0.velocity.Y * 2f;
																}
															}
														}
														if (this.type == 422)
														{
															for (int num733 = 0; num733 < 2; num733++)
															{
																Vector2 vector62 = new Vector2(0f, -num721);
																vector62 *= 0.85f + (float)Main.rand.NextDouble() * 0.2f;
																vector62 = vector62.RotatedBy((Main.rand.NextDouble() - 0.5) * 1.5707963705062866, default(Vector2));
																int num734 = Dust.NewDust(this.position, this.width, this.height, 219 + Main.rand.Next(5), 0f, 0f, 100, default(Color), 1f);
																Dust dust7 = Main.dust[num734];
																dust7.scale = 1f + (float)Main.rand.NextDouble() * 0.3f;
																dust7.velocity *= 0.5f;
																if (dust7.velocity.Y > 0f)
																{
																	Dust expr_1E5E7_cp_0 = dust7;
																	expr_1E5E7_cp_0.velocity.Y = expr_1E5E7_cp_0.velocity.Y * -1f;
																}
																dust7.position -= new Vector2((float)(2 + Main.rand.Next(-2, 3)), 0f);
																dust7.velocity += vector62;
																dust7.scale = 0.6f;
																dust7.fadeIn = dust7.scale + 0.2f;
																Dust expr_1E66D_cp_0 = dust7;
																expr_1E66D_cp_0.velocity.Y = expr_1E66D_cp_0.velocity.Y * 2f;
															}
															return;
														}
													}
													else if (this.aiStyle == 74)
													{
														if (this.extraUpdates == 1)
														{
															this.localAI[0] *= this.localAI[1];
															this.localAI[1] -= 0.001f;
															if ((double)this.localAI[0] < 0.01)
															{
																this.Kill();
																return;
															}
														}
													}
													else
													{
														if (this.aiStyle == 75)
														{
															this.AI_075();
															return;
														}
														if (this.aiStyle == 76)
														{
															Player player3 = Main.player[this.owner];
															player3.heldProj = this.whoAmI;
															if (this.type == 441)
															{
																if (player3.mount.Type != 9)
																{
																	this.Kill();
																	return;
																}
															}
															else if (this.type == 453 && player3.mount.Type != 8)
															{
																this.Kill();
																return;
															}
															if (Main.myPlayer != this.owner)
															{
																this.position.X = player3.position.X + this.ai[0];
																this.position.Y = player3.position.Y + this.ai[1];
																if (this.type == 441)
																{
																	if (!player3.mount.AbilityCharging)
																	{
																		player3.mount.StartAbilityCharge(player3);
																	}
																}
																else if (this.type == 453 && !player3.mount.AbilityActive)
																{
																	player3.mount.UseAbility(player3, this.position, false);
																}
																player3.mount.AimAbility(player3, this.position);
																return;
															}
															this.position.X = Main.screenPosition.X + (float)Main.mouseX;
															this.position.Y = Main.screenPosition.Y + (float)Main.mouseY;
															if (this.ai[0] != this.position.X - player3.position.X || this.ai[1] != this.position.Y - player3.position.Y)
															{
																this.netUpdate = true;
															}
															this.ai[0] = this.position.X - player3.position.X;
															this.ai[1] = this.position.Y - player3.position.Y;
															player3.mount.AimAbility(player3, this.position);
															if (!player3.channel)
															{
																player3.mount.UseAbility(player3, this.position, false);
																this.Kill();
																return;
															}
														}
														else
														{
															if (this.aiStyle == 77)
															{
																if (this.ai[1] == 1f)
																{
																	this.friendly = false;
																	if (this.alpha < 255)
																	{
																		this.alpha += 51;
																	}
																	if (this.alpha >= 255)
																	{
																		this.alpha = 255;
																		this.Kill();
																		return;
																	}
																}
																else
																{
																	if (this.alpha > 0)
																	{
																		this.alpha -= 50;
																	}
																	if (this.alpha < 0)
																	{
																		this.alpha = 0;
																	}
																}
																float num735 = 30f;
																float num736 = num735 * 4f;
																this.ai[0] += 1f;
																if (this.ai[0] > num736)
																{
																	this.ai[0] = 0f;
																}
																Vector2 vector63 = -Vector2.UnitY.RotatedBy((double)(6.28318548f * this.ai[0] / num735), default(Vector2));
																float val = 0.75f + vector63.Y * 0.25f;
																float val2 = 0.8f - vector63.Y * 0.2f;
																float num737 = Math.Max(val, val2);
																this.position += new Vector2((float)this.width, (float)this.height) / 2f;
																this.width = (this.height = (int)(80f * num737));
																this.position -= new Vector2((float)this.width, (float)this.height) / 2f;
																this.frameCounter++;
																if (this.frameCounter >= 3)
																{
																	this.frameCounter = 0;
																	this.frame++;
																	if (this.frame >= 4)
																	{
																		this.frame = 0;
																	}
																}
																for (int num738 = 0; num738 < 1; num738++)
																{
																	float num739 = 55f * num737;
																	float num740 = 11f * num737;
																	float num741 = 0.5f;
																	int num742 = Dust.NewDust(this.position, this.width, this.height, 226, 0f, 0f, 100, default(Color), 0.5f);
																	Main.dust[num742].noGravity = true;
																	Main.dust[num742].velocity *= 2f;
																	Main.dust[num742].position = ((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * (num740 + num741 * (float)Main.rand.NextDouble() * num739) + base.Center;
																	Main.dust[num742].velocity = Main.dust[num742].velocity / 2f + Vector2.Normalize(Main.dust[num742].position - base.Center);
																	if (Main.rand.Next(2) == 0)
																	{
																		num742 = Dust.NewDust(this.position, this.width, this.height, 226, 0f, 0f, 100, default(Color), 0.9f);
																		Main.dust[num742].noGravity = true;
																		Main.dust[num742].velocity *= 1.2f;
																		Main.dust[num742].position = ((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * (num740 + num741 * (float)Main.rand.NextDouble() * num739) + base.Center;
																		Main.dust[num742].velocity = Main.dust[num742].velocity / 2f + Vector2.Normalize(Main.dust[num742].position - base.Center);
																	}
																	if (Main.rand.Next(4) == 0)
																	{
																		num742 = Dust.NewDust(this.position, this.width, this.height, 226, 0f, 0f, 100, default(Color), 0.7f);
																		Main.dust[num742].noGravity = true;
																		Main.dust[num742].velocity *= 1.2f;
																		Main.dust[num742].position = ((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * (num740 + num741 * (float)Main.rand.NextDouble() * num739) + base.Center;
																		Main.dust[num742].velocity = Main.dust[num742].velocity / 2f + Vector2.Normalize(Main.dust[num742].position - base.Center);
																	}
																}
																return;
															}
															if (this.aiStyle == 78)
															{
																if (this.alpha > 0)
																{
																	this.alpha -= 30;
																}
																if (this.alpha < 0)
																{
																	this.alpha = 0;
																}
																Vector2 v2 = this.ai[0].ToRotationVector2();
																float num743 = this.velocity.ToRotation();
																float num744 = v2.ToRotation();
																double num745 = (double)(num744 - num743);
																if (num745 > 3.1415926535897931)
																{
																	num745 -= 6.2831853071795862;
																}
																if (num745 < -3.1415926535897931)
																{
																	num745 += 6.2831853071795862;
																}
																this.velocity = this.velocity.RotatedBy(num745 * 0.05000000074505806, default(Vector2));
																this.velocity *= 0.96f;
																this.rotation = this.velocity.ToRotation() - 1.57079637f;
																if (Main.myPlayer == this.owner && this.timeLeft > 60)
																{
																	this.timeLeft = 60;
																	return;
																}
															}
															else if (this.aiStyle == 79)
															{
																bool flag31 = true;
																int num746 = (int)this.ai[0] - 1;
																if (this.type == 447 && (this.ai[0] == 0f || ((!Main.npc[num746].active || Main.npc[num746].type != 392) && (!Main.npc[num746].active || Main.npc[num746].type != 395 || Main.npc[num746].ai[3] % 120f < 60f || Main.npc[num746].ai[0] != 2f))))
																{
																	flag31 = false;
																}
																if (!flag31)
																{
																	this.Kill();
																	return;
																}
																NPC nPC7 = Main.npc[num746];
																float num747 = nPC7.Center.Y + 46f;
																int num748 = (int)nPC7.Center.X / 16;
																int num749 = (int)num747 / 16;
																int num750 = 0;
																bool flag32 = Main.tile[num748, num749].nactive() && Main.tileSolid[(int)Main.tile[num748, num749].type] && !Main.tileSolidTop[(int)Main.tile[num748, num749].type];
																if (flag32)
																{
																	num750 = 1;
																}
																else
																{
																	while (num750 < 150 && num749 + num750 < Main.maxTilesY)
																	{
																		int num751 = num749 + num750;
																		bool flag33 = Main.tile[num748, num751].nactive() && Main.tileSolid[(int)Main.tile[num748, num751].type] && !Main.tileSolidTop[(int)Main.tile[num748, num751].type];
																		if (flag33)
																		{
																			num750--;
																			break;
																		}
																		num750++;
																	}
																}
																this.position.X = nPC7.Center.X - (float)(this.width / 2);
																this.position.Y = num747;
																this.height = (num750 + 1) * 16;
																int num752 = (int)this.position.Y + this.height;
																if (Main.tile[num748, num752 / 16].nactive() && Main.tileSolid[(int)Main.tile[num748, num752 / 16].type] && !Main.tileSolidTop[(int)Main.tile[num748, num752 / 16].type])
																{
																	int num753 = num752 % 16;
																	this.height -= num753 - 2;
																}
																if (this.type == 447)
																{
																	for (int num754 = 0; num754 < 2; num754++)
																	{
																		int num755 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height - 16f), this.width, 16, 228, 0f, 0f, 0, default(Color), 1f);
																		Main.dust[num755].noGravity = true;
																		Main.dust[num755].velocity *= 0.5f;
																		Dust expr_1F3F2_cp_0 = Main.dust[num755];
																		expr_1F3F2_cp_0.velocity.X = expr_1F3F2_cp_0.velocity.X - ((float)num754 - nPC7.velocity.X * 2f / 3f);
																		Main.dust[num755].scale = 2.8f;
																	}
																	if (Main.rand.Next(5) == 0)
																	{
																		int num756 = Dust.NewDust(new Vector2(this.position.X + (float)(this.width / 2) - (float)(this.width / 2 * Math.Sign(nPC7.velocity.X)) - 4f, this.position.Y + (float)this.height - 16f), 4, 16, 31, 0f, 0f, 100, default(Color), 1.5f);
																		Main.dust[num756].velocity *= 0.5f;
																		Dust expr_1F508_cp_0 = Main.dust[num756];
																		expr_1F508_cp_0.velocity.X = expr_1F508_cp_0.velocity.X - nPC7.velocity.X / 2f;
																		Main.dust[num756].velocity.Y = -Math.Abs(Main.dust[num756].velocity.Y);
																	}
																}
																if (this.type == 447 && ++this.frameCounter >= 5)
																{
																	this.frameCounter = 0;
																	if (++this.frame >= 4)
																	{
																		this.frame = 0;
																		return;
																	}
																}
															}
															else
															{
																if (this.aiStyle == 80)
																{
																	if (this.ai[0] == 0f && this.ai[1] > 0f)
																	{
																		this.ai[1] -= 1f;
																	}
																	else if (this.ai[0] == 0f && this.ai[1] == 0f)
																	{
																		this.ai[0] = 1f;
																		this.ai[1] = (float)Player.FindClosest(this.position, this.width, this.height);
																		this.netUpdate = true;
																		float num757 = this.velocity.Length();
																		this.velocity = Vector2.Normalize(this.velocity) * (num757 + 4f);
																		for (int num758 = 0; num758 < 8; num758++)
																		{
																			Vector2 vector64 = Vector2.UnitX * -8f;
																			vector64 += -Vector2.UnitY.RotatedBy((double)((float)num758 * 3.14159274f / 4f), default(Vector2)) * new Vector2(2f, 8f);
																			vector64 = vector64.RotatedBy((double)(this.rotation - 1.57079637f), default(Vector2));
																			int num759 = Dust.NewDust(base.Center, 0, 0, 228, 0f, 0f, 0, default(Color), 1f);
																			Main.dust[num759].scale = 1.5f;
																			Main.dust[num759].noGravity = true;
																			Main.dust[num759].position = base.Center + vector64;
																			Main.dust[num759].velocity = this.velocity * 0f;
																		}
																	}
																	else if (this.ai[0] == 1f)
																	{
																		this.tileCollide = true;
																		this.localAI[1] += 1f;
																		float num760 = 180f;
																		float num761 = 0f;
																		float num762 = 30f;
																		if (this.localAI[1] == num760)
																		{
																			this.Kill();
																			return;
																		}
																		if (this.localAI[1] >= num761 && this.localAI[1] < num761 + num762)
																		{
																			Vector2 v3 = Main.player[(int)this.ai[1]].Center - base.Center;
																			float num763 = this.velocity.ToRotation();
																			float num764 = v3.ToRotation();
																			double num765 = (double)(num764 - num763);
																			if (num765 > 3.1415926535897931)
																			{
																				num765 -= 6.2831853071795862;
																			}
																			if (num765 < -3.1415926535897931)
																			{
																				num765 += 6.2831853071795862;
																			}
																			this.velocity = this.velocity.RotatedBy(num765 * 0.20000000298023224, default(Vector2));
																		}
																		if (this.localAI[1] % 5f == 0f)
																		{
																			for (int num766 = 0; num766 < 4; num766++)
																			{
																				Vector2 vector65 = Vector2.UnitX * -8f;
																				vector65 += -Vector2.UnitY.RotatedBy((double)((float)num766 * 3.14159274f / 4f), default(Vector2)) * new Vector2(2f, 4f);
																				vector65 = vector65.RotatedBy((double)(this.rotation - 1.57079637f), default(Vector2));
																				int num767 = Dust.NewDust(base.Center, 0, 0, 228, 0f, 0f, 0, default(Color), 1f);
																				Main.dust[num767].scale = 1.5f;
																				Main.dust[num767].noGravity = true;
																				Main.dust[num767].position = base.Center + vector65;
																				Main.dust[num767].velocity = this.velocity * 0f;
																			}
																		}
																	}
																	this.rotation = this.velocity.ToRotation() + 1.57079637f;
																	if (++this.frameCounter >= 3)
																	{
																		this.frameCounter = 0;
																		if (++this.frame >= 3)
																		{
																			this.frame = 0;
																		}
																	}
																	int num768 = 0;
																	while ((float)num768 < 1f + this.ai[0])
																	{
																		Vector2 value27 = Vector2.UnitY.RotatedBy((double)this.rotation, default(Vector2)) * 8f * (float)(num768 + 1);
																		int num769 = Dust.NewDust(base.Center, 0, 0, 228, 0f, 0f, 0, default(Color), 1f);
																		Main.dust[num769].position = base.Center + value27;
																		Main.dust[num769].scale = 1f;
																		Main.dust[num769].noGravity = true;
																		num768++;
																	}
																	for (int num770 = 0; num770 < 255; num770++)
																	{
																		Player player4 = Main.player[num770];
																		if (player4.active && !player4.dead && Vector2.Distance(player4.Center, base.Center) <= 42f)
																		{
																			this.Kill();
																			return;
																		}
																	}
																	return;
																}
																if (this.aiStyle == 81)
																{
																	int num771 = this.penetrate;
																	if (this.ai[0] == 0f)
																	{
																		this.tileCollide = true;
																		this.localAI[0] += 1f;
																		if (this.localAI[0] > 7f)
																		{
																			int num772 = Utils.SelectRandom<int>(Main.rand, new int[]
																				{
																					226,
																					229
																				});
																			Vector2 center5 = base.Center;
																			Vector2 vector66 = new Vector2(-16f, 16f);
																			float num773 = 1f;
																			vector66 += new Vector2(-16f, 16f);
																			vector66 = vector66.RotatedBy((double)this.rotation, default(Vector2));
																			int num774 = 4;
																			int num775 = Dust.NewDust(center5 + vector66 + Vector2.One * (float)(-(float)num774), num774 * 2, num774 * 2, num772, 0f, 0f, 100, default(Color), num773);
																			Main.dust[num775].velocity *= 0.1f;
																			if (Main.rand.Next(6) != 0)
																			{
																				Main.dust[num775].noGravity = true;
																			}
																		}
																		float num776 = 0.01f;
																		int num777 = 5;
																		int num778 = num777 * 15;
																		int num779 = 0;
																		if (this.localAI[0] > 7f)
																		{
																			if (this.localAI[1] == 0f)
																			{
																				this.scale -= num776;
																				this.alpha += num777;
																				if (this.alpha > num778)
																				{
																					this.alpha = num778;
																					this.localAI[1] = 1f;
																				}
																			}
																			else if (this.localAI[1] == 1f)
																			{
																				this.scale += num776;
																				this.alpha -= num777;
																				if (this.alpha <= num779)
																				{
																					this.alpha = num779;
																					this.localAI[1] = 0f;
																				}
																			}
																		}
																		this.rotation = this.velocity.ToRotation() + 0.7853982f;
																	}
																	else if (this.ai[0] >= (float)1 && this.ai[0] < (float)(1 + num771))
																	{
																		this.tileCollide = false;
																		this.alpha += 15;
																		this.velocity *= 0.98f;
																		this.localAI[0] = 0f;
																		if (this.alpha >= 255)
																		{
																			if (this.ai[0] == 1f)
																			{
																				this.Kill();
																				return;
																			}
																			int num780 = -1;
																			Vector2 value28 = base.Center;
																			float num781 = 250f;
																			for (int num782 = 0; num782 < 200; num782++)
																			{
																				NPC nPC8 = Main.npc[num782];
																				if (nPC8.CanBeChasedBy(this, false))
																				{
																					Vector2 center6 = nPC8.Center;
																					float num783 = Vector2.Distance(center6, base.Center);
																					if (num783 < num781)
																					{
																						num781 = num783;
																						value28 = center6;
																						num780 = num782;
																					}
																				}
																			}
																			if (num780 >= 0)
																			{
																				this.netUpdate = true;
																				this.ai[0] += (float)num771;
																				this.position = value28 + ((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * 100f - new Vector2((float)this.width, (float)this.height) / 2f;
																				this.velocity = Vector2.Normalize(value28 - base.Center) * 15f;
																				this.rotation = this.velocity.ToRotation() + 0.7853982f;
																			}
																			else
																			{
																				this.Kill();
																			}
																		}
																		if (Main.rand.Next(3) == 0)
																		{
																			int num784 = Utils.SelectRandom<int>(Main.rand, new int[]
																				{
																					226,
																					229
																				});
																			Vector2 center7 = base.Center;
																			Vector2 vector67 = new Vector2(-16f, 16f);
																			vector67 = (vector67 = vector67);
																			float num785 = 0.6f;
																			vector67 += new Vector2(-16f, 16f);
																			vector67 = vector67.RotatedBy((double)this.rotation, default(Vector2));
																			int num786 = 4;
																			int num787 = Dust.NewDust(center7 + vector67 + Vector2.One * (float)(-(float)num786), num786 * 2, num786 * 2, num784, 0f, 0f, 100, default(Color), num785);
																			Main.dust[num787].velocity *= 0.1f;
																			Main.dust[num787].noGravity = true;
																		}
																	}
																	else if (this.ai[0] >= (float)(1 + num771) && this.ai[0] < (float)(1 + num771 * 2))
																	{
																		this.scale = 0.9f;
																		this.tileCollide = false;
																		this.rotation = this.velocity.ToRotation() + 0.7853982f;
																		this.ai[1] += 1f;
																		if (this.ai[1] >= 15f)
																		{
																			this.alpha += 51;
																			this.velocity *= 0.8f;
																			if (this.alpha >= 255)
																			{
																				this.Kill();
																			}
																		}
																		else
																		{
																			this.alpha -= 125;
																			if (this.alpha < 0)
																			{
																				this.alpha = 0;
																			}
																			this.velocity *= 0.98f;
																		}
																		this.localAI[0] += 1f;
																		int num788 = Utils.SelectRandom<int>(Main.rand, new int[]
																			{
																				226,
																				229
																			});
																		Vector2 center8 = base.Center;
																		Vector2 vector68 = new Vector2(-16f, 16f);
																		float num789 = 0.6f;
																		vector68 += new Vector2(-16f, 16f);
																		vector68 = vector68.RotatedBy((double)this.rotation, default(Vector2));
																		int num790 = 4;
																		int num791 = Dust.NewDust(center8 + vector68 + Vector2.One * (float)(-(float)num790), num790 * 2, num790 * 2, num788, 0f, 0f, 100, default(Color), num789);
																		Main.dust[num791].velocity *= 0.1f;
																		Main.dust[num791].noGravity = true;
																	}
																	float num792 = (float)this.alpha / 255f;
																	Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.3f * num792, 0.4f * num792, 1f * num792);
																	return;
																}
																if (this.aiStyle == 82)
																{
																	this.alpha -= 40;
																	if (this.alpha < 0)
																	{
																		this.alpha = 0;
																	}
																	if (this.ai[0] == 0f)
																	{
																		this.localAI[0] += 1f;
																		if (this.localAI[0] >= 45f)
																		{
																			this.localAI[0] = 0f;
																			this.ai[0] = 1f;
																			this.ai[1] = -this.ai[1];
																			this.netUpdate = true;
																		}
																		this.velocity.X = this.velocity.RotatedBy((double)this.ai[1], default(Vector2)).X;
																		this.velocity.X = MathHelper.Clamp(this.velocity.X, -6f, 6f);
																		this.velocity.Y = this.velocity.Y - 0.08f;
																		if (this.velocity.Y > 0f)
																		{
																			this.velocity.Y = this.velocity.Y - 0.2f;
																		}
																		if (this.velocity.Y < -7f)
																		{
																			this.velocity.Y = -7f;
																		}
																	}
																	else if (this.ai[0] == 1f)
																	{
																		this.localAI[0] += 1f;
																		if (this.localAI[0] >= 90f)
																		{
																			this.localAI[0] = 0f;
																			this.ai[0] = 2f;
																			this.ai[1] = (float)Player.FindClosest(this.position, this.width, this.height);
																			this.netUpdate = true;
																		}
																		this.velocity.X = this.velocity.RotatedBy((double)this.ai[1], default(Vector2)).X;
																		this.velocity.X = MathHelper.Clamp(this.velocity.X, -6f, 6f);
																		this.velocity.Y = this.velocity.Y - 0.08f;
																		if (this.velocity.Y > 0f)
																		{
																			this.velocity.Y = this.velocity.Y - 0.2f;
																		}
																		if (this.velocity.Y < -7f)
																		{
																			this.velocity.Y = -7f;
																		}
																	}
																	else if (this.ai[0] == 2f)
																	{
																		Vector2 vector69 = Main.player[(int)this.ai[1]].Center - base.Center;
																		if (vector69.Length() < 30f)
																		{
																			this.Kill();
																			return;
																		}
																		vector69.Normalize();
																		vector69 *= 14f;
																		vector69 = Vector2.Lerp(this.velocity, vector69, 0.6f);
																		if (vector69.Y < 6f)
																		{
																			vector69.Y = 6f;
																		}
																		float num793 = 0.4f;
																		if (this.velocity.X < vector69.X)
																		{
																			this.velocity.X = this.velocity.X + num793;
																			if (this.velocity.X < 0f && vector69.X > 0f)
																			{
																				this.velocity.X = this.velocity.X + num793;
																			}
																		}
																		else if (this.velocity.X > vector69.X)
																		{
																			this.velocity.X = this.velocity.X - num793;
																			if (this.velocity.X > 0f && vector69.X < 0f)
																			{
																				this.velocity.X = this.velocity.X - num793;
																			}
																		}
																		if (this.velocity.Y < vector69.Y)
																		{
																			this.velocity.Y = this.velocity.Y + num793;
																			if (this.velocity.Y < 0f && vector69.Y > 0f)
																			{
																				this.velocity.Y = this.velocity.Y + num793;
																			}
																		}
																		else if (this.velocity.Y > vector69.Y)
																		{
																			this.velocity.Y = this.velocity.Y - num793;
																			if (this.velocity.Y > 0f && vector69.Y < 0f)
																			{
																				this.velocity.Y = this.velocity.Y - num793;
																			}
																		}
																	}
																	if (this.alpha < 40)
																	{
																		int num794 = Dust.NewDust(base.Center - Vector2.One * 5f, 10, 10, 229, -this.velocity.X / 3f, -this.velocity.Y / 3f, 150, Color.Transparent, 1.2f);
																		Main.dust[num794].noGravity = true;
																	}
																	this.rotation = this.velocity.ToRotation() + 1.57079637f;
																	return;
																}
																if (this.aiStyle == 83)
																{
																	if (this.alpha > 200)
																	{
																		this.alpha = 200;
																	}
																	this.alpha -= 5;
																	if (this.alpha < 0)
																	{
																		this.alpha = 0;
																	}
																	float num795 = (float)this.alpha / 255f;
																	this.scale = 1f - num795;
																	if (this.ai[0] >= 0f)
																	{
																		this.ai[0] += 1f;
																	}
																	if (this.ai[0] == -1f)
																	{
																		this.frame = 1;
																		this.extraUpdates = 1;
																	}
																	else if (this.ai[0] < 30f)
																	{
																		this.position = Main.npc[(int)this.ai[1]].Center - new Vector2((float)this.width, (float)this.height) / 2f - this.velocity;
																	}
																	else
																	{
																		this.velocity *= 0.96f;
																		if (++this.frameCounter >= 6)
																		{
																			this.frameCounter = 0;
																			if (++this.frame >= 2)
																			{
																				this.frame = 0;
																			}
																		}
																	}
																	if (this.alpha < 40)
																	{
																		for (int num796 = 0; num796 < 2; num796++)
																		{
																			float num797 = (float)Main.rand.NextDouble() * 1f - 0.5f;
																			if (num797 < -0.5f)
																			{
																				num797 = -0.5f;
																			}
																			if (num797 > 0.5f)
																			{
																				num797 = 0.5f;
																			}
																			Vector2 value29 = new Vector2((float)(-(float)this.width) * 0.65f * this.scale, 0f).RotatedBy((double)(num797 * 6.28318548f), default(Vector2)).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
																			int num798 = Dust.NewDust(base.Center - Vector2.One * 5f, 10, 10, 229, -this.velocity.X / 3f, -this.velocity.Y / 3f, 150, Color.Transparent, 0.7f);
																			Main.dust[num798].velocity = Vector2.Zero;
																			Main.dust[num798].position = base.Center + value29;
																			Main.dust[num798].noGravity = true;
																		}
																		return;
																	}
																}
																else if (this.aiStyle == 84)
																{
																	Vector2? vector70 = null;
																	if (this.velocity.HasNaNs() || this.velocity == Vector2.Zero)
																	{
																		this.velocity = -Vector2.UnitY;
																	}
																	if (this.type == 455 && Main.npc[(int)this.ai[1]].active && Main.npc[(int)this.ai[1]].type == 396)
																	{
																		Vector2 value30 = new Vector2(27f, 59f);
																		Vector2 value31 = Utils.Vector2FromElipse(Main.npc[(int)this.ai[1]].localAI[0].ToRotationVector2(), value30 * Main.npc[(int)this.ai[1]].localAI[1]);
																		this.position = Main.npc[(int)this.ai[1]].Center + value31 - new Vector2((float)this.width, (float)this.height) / 2f;
																	}
																	else if (this.type == 455 && Main.npc[(int)this.ai[1]].active && Main.npc[(int)this.ai[1]].type == 400)
																	{
																		Vector2 value32 = new Vector2(30f, 30f);
																		Vector2 value33 = Utils.Vector2FromElipse(Main.npc[(int)this.ai[1]].localAI[0].ToRotationVector2(), value32 * Main.npc[(int)this.ai[1]].localAI[1]);
																		this.position = Main.npc[(int)this.ai[1]].Center + value33 - new Vector2((float)this.width, (float)this.height) / 2f;
																	}
																	else if (this.type == 537 && Main.npc[(int)this.ai[1]].active && Main.npc[(int)this.ai[1]].type == 411)
																	{
																		Vector2 value34 = new Vector2((float)(Main.npc[(int)this.ai[1]].direction * 6), -4f);
																		this.position = Main.npc[(int)this.ai[1]].Center + value34 - base.Size / 2f + new Vector2(0f, -Main.npc[(int)this.ai[1]].gfxOffY);
																	}
																	else if (this.type == 461 && Main.projectile[(int)this.ai[1]].active && Main.projectile[(int)this.ai[1]].type == 460)
																	{
																		Vector2 value35 = Vector2.Normalize(Main.projectile[(int)this.ai[1]].velocity);
																		this.position = Main.projectile[(int)this.ai[1]].Center + value35 * 16f - new Vector2((float)this.width, (float)this.height) / 2f + new Vector2(0f, -Main.projectile[(int)this.ai[1]].gfxOffY);
																		this.velocity = Vector2.Normalize(Main.projectile[(int)this.ai[1]].velocity);
																	}
																	else if (this.type == 642 && Main.projectile[(int)this.ai[1]].active && Main.projectile[(int)this.ai[1]].type == 641)
																	{
																		base.Center = Main.projectile[(int)this.ai[1]].Center;
																		this.velocity = Vector2.Normalize(Main.projectile[(int)this.ai[1]].ai[1].ToRotationVector2());
																	}
																	else
																	{
																		if (this.type != 632 || !Main.projectile[(int)this.ai[1]].active || Main.projectile[(int)this.ai[1]].type != 633)
																		{
																			this.Kill();
																			return;
																		}
																		float num799 = (float)((int)this.ai[0]) - 2.5f;
																		Vector2 value36 = Vector2.Normalize(Main.projectile[(int)this.ai[1]].velocity);
																		Projectile projectile = Main.projectile[(int)this.ai[1]];
																		float num800 = num799 * 0.5235988f;
																		Vector2 value37 = Vector2.Zero;
																		float num801;
																		float y;
																		float num802;
																		float scaleFactor6;
																		if (projectile.ai[0] < 180f)
																		{
																			num801 = 1f - projectile.ai[0] / 180f;
																			y = 20f - projectile.ai[0] / 180f * 14f;
																			if (projectile.ai[0] < 120f)
																			{
																				num802 = 20f - 4f * (projectile.ai[0] / 120f);
																				this.Opacity = projectile.ai[0] / 120f * 0.4f;
																			}
																			else
																			{
																				num802 = 16f - 10f * ((projectile.ai[0] - 120f) / 60f);
																				this.Opacity = 0.4f + (projectile.ai[0] - 120f) / 60f * 0.6f;
																			}
																			scaleFactor6 = -22f + projectile.ai[0] / 180f * 20f;
																		}
																		else
																		{
																			num801 = 0f;
																			num802 = 1.75f;
																			y = 6f;
																			this.Opacity = 1f;
																			scaleFactor6 = -2f;
																		}
																		float num803 = (projectile.ai[0] + num799 * num802) / (num802 * 6f) * 6.28318548f;
																		num800 = Vector2.UnitY.RotatedBy((double)num803, default(Vector2)).Y * 0.5235988f * num801;
																		value37 = (Vector2.UnitY.RotatedBy((double)num803, default(Vector2)) * new Vector2(4f, y)).RotatedBy((double)projectile.velocity.ToRotation(), default(Vector2));
																		this.position = projectile.Center + value36 * 16f - base.Size / 2f + new Vector2(0f, -Main.projectile[(int)this.ai[1]].gfxOffY);
																		this.position += projectile.velocity.ToRotation().ToRotationVector2() * scaleFactor6;
																		this.position += value37;
																		this.velocity = Vector2.Normalize(projectile.velocity).RotatedBy((double)num800, default(Vector2));
																		this.scale = 1.4f * (1f - num801);
																		this.damage = projectile.damage;
																		if (projectile.ai[0] >= 180f)
																		{
																			this.damage *= 3;
																			vector70 = new Vector2?(projectile.Center);
																		}
																		if (!Collision.CanHitLine(Main.player[this.owner].Center, 0, 0, projectile.Center, 0, 0))
																		{
																			vector70 = new Vector2?(Main.player[this.owner].Center);
																		}
																		this.friendly = (projectile.ai[0] > 30f);
																	}
																	if (this.velocity.HasNaNs() || this.velocity == Vector2.Zero)
																	{
																		this.velocity = -Vector2.UnitY;
																	}
																	if (this.type == 461)
																	{
																		this.ai[0] += 1f;
																		if (this.ai[0] >= 300f)
																		{
																			this.Kill();
																			return;
																		}
																		this.scale = (float)Math.Sin((double)(this.ai[0] * 3.14159274f / 300f)) * 10f;
																		if (this.scale > 1f)
																		{
																			this.scale = 1f;
																		}
																	}
																	if (this.type == 455)
																	{
																		if (this.localAI[0] == 0f)
																		{
																			Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 104);
																		}
																		float num804 = 1f;
																		if (Main.npc[(int)this.ai[1]].type == 400)
																		{
																			num804 = 0.4f;
																		}
																		this.localAI[0] += 1f;
																		if (this.localAI[0] >= 180f)
																		{
																			this.Kill();
																			return;
																		}
																		this.scale = (float)Math.Sin((double)(this.localAI[0] * 3.14159274f / 180f)) * 10f * num804;
																		if (this.scale > num804)
																		{
																			this.scale = num804;
																		}
																	}
																	if (this.type == 642)
																	{
																		float num805 = 1f;
																		this.localAI[0] += 1f;
																		if (this.localAI[0] >= 50f)
																		{
																			this.Kill();
																			return;
																		}
																		this.scale = (float)Math.Sin((double)(this.localAI[0] * 3.14159274f / 50f)) * 10f * num805;
																		if (this.scale > num805)
																		{
																			this.scale = num805;
																		}
																	}
																	if (this.type == 537)
																	{
																		float num806 = 0.8f;
																		this.localAI[0] += 1f;
																		if (this.localAI[0] >= 60f)
																		{
																			this.Kill();
																			return;
																		}
																		this.scale = (float)Math.Sin((double)(this.localAI[0] * 3.14159274f / 60f)) * 10f * num806;
																		if (this.scale > num806)
																		{
																			this.scale = num806;
																		}
																	}
																	float num807 = this.velocity.ToRotation();
																	if (this.type == 455)
																	{
																		num807 += this.ai[0];
																	}
																	this.rotation = num807 - 1.57079637f;
																	this.velocity = num807.ToRotationVector2();
																	float num808 = 0f;
																	float num809 = 0f;
																	Vector2 samplingPoint = base.Center;
																	if (vector70.HasValue)
																	{
																		samplingPoint = vector70.Value;
																	}
																	if (this.type == 455)
																	{
																		num808 = 3f;
																		num809 = (float)this.width;
																	}
																	else if (this.type == 461)
																	{
																		num808 = 2f;
																		num809 = 0f;
																	}
																	else if (this.type == 642)
																	{
																		num808 = 2f;
																		num809 = 0f;
																	}
																	else if (this.type == 632)
																	{
																		num808 = 2f;
																		num809 = 0f;
																	}
																	else if (this.type == 537)
																	{
																		num808 = 2f;
																		num809 = 0f;
																	}
																	float[] array3 = new float[(int)num808];
																	Collision.LaserScan(samplingPoint, this.velocity, num809 * this.scale, 2400f, array3);
																	float num810 = 0f;
																	for (int num811 = 0; num811 < array3.Length; num811++)
																	{
																		num810 += array3[num811];
																	}
																	num810 /= num808;
																	float amount = 0.5f;
																	if (this.type == 632)
																	{
																		amount = 0.75f;
																	}
																	this.localAI[1] = MathHelper.Lerp(this.localAI[1], num810, amount);
																	if (this.type == 455)
																	{
																		Vector2 vector71 = base.Center + this.velocity * (this.localAI[1] - 14f);
																		for (int num812 = 0; num812 < 2; num812++)
																		{
																			float num813 = this.velocity.ToRotation() + ((Main.rand.Next(2) == 1) ? -1f : 1f) * 1.57079637f;
																			float num814 = (float)Main.rand.NextDouble() * 2f + 2f;
																			Vector2 vector72 = new Vector2((float)Math.Cos((double)num813) * num814, (float)Math.Sin((double)num813) * num814);
																			int num815 = Dust.NewDust(vector71, 0, 0, 229, vector72.X, vector72.Y, 0, default(Color), 1f);
																			Main.dust[num815].noGravity = true;
																			Main.dust[num815].scale = 1.7f;
																		}
																		if (Main.rand.Next(5) == 0)
																		{
																			Vector2 value38 = this.velocity.RotatedBy(1.5707963705062866, default(Vector2)) * ((float)Main.rand.NextDouble() - 0.5f) * (float)this.width;
																			int num816 = Dust.NewDust(vector71 + value38 - Vector2.One * 4f, 8, 8, 31, 0f, 0f, 100, default(Color), 1.5f);
																			Main.dust[num816].velocity *= 0.5f;
																			Main.dust[num816].velocity.Y = -Math.Abs(Main.dust[num816].velocity.Y);
																		}
																		DelegateMethods.v3_1 = new Vector3(0.3f, 0.65f, 0.7f);
																		Utils.PlotTileLine(base.Center, base.Center + this.velocity * this.localAI[1], (float)this.width * this.scale, new Utils.PerLinePoint(DelegateMethods.CastLight));
																	}
																	else if (this.type == 642)
																	{
																		Vector2 vector73 = base.Center + this.velocity * (this.localAI[1] - 14f);
																		for (int num817 = 0; num817 < 2; num817++)
																		{
																			float num818 = this.velocity.ToRotation() + ((Main.rand.Next(2) == 1) ? -1f : 1f) * 1.57079637f;
																			float num819 = (float)Main.rand.NextDouble() * 2f + 2f;
																			Vector2 vector74 = new Vector2((float)Math.Cos((double)num818) * num819, (float)Math.Sin((double)num818) * num819);
																			int num820 = Dust.NewDust(vector73, 0, 0, 229, vector74.X, vector74.Y, 0, default(Color), 1f);
																			Main.dust[num820].noGravity = true;
																			Main.dust[num820].scale = 1.7f;
																		}
																		if (Main.rand.Next(5) == 0)
																		{
																			Vector2 value39 = this.velocity.RotatedBy(1.5707963705062866, default(Vector2)) * ((float)Main.rand.NextDouble() - 0.5f) * (float)this.width;
																			int num821 = Dust.NewDust(vector73 + value39 - Vector2.One * 4f, 8, 8, 31, 0f, 0f, 100, default(Color), 1.5f);
																			Main.dust[num821].velocity *= 0.5f;
																			Main.dust[num821].velocity.Y = -Math.Abs(Main.dust[num821].velocity.Y);
																		}
																		DelegateMethods.v3_1 = new Vector3(0.3f, 0.65f, 0.7f);
																		Utils.PlotTileLine(base.Center, base.Center + this.velocity * this.localAI[1], (float)this.width * this.scale, new Utils.PerLinePoint(DelegateMethods.CastLight));
																	}
																	if (this.type == 461)
																	{
																		Vector2 vector75 = base.Center + this.velocity * (this.localAI[1] - 8f);
																		for (int num822 = 0; num822 < 2; num822++)
																		{
																			float num823 = this.velocity.ToRotation() + ((Main.rand.Next(2) == 1) ? -1f : 1f) * 1.57079637f;
																			float num824 = (float)Main.rand.NextDouble() * 0.8f + 1f;
																			Vector2 vector76 = new Vector2((float)Math.Cos((double)num823) * num824, (float)Math.Sin((double)num823) * num824);
																			int num825 = Dust.NewDust(vector75, 0, 0, 226, vector76.X, vector76.Y, 0, default(Color), 1f);
																			Main.dust[num825].noGravity = true;
																			Main.dust[num825].scale = 1.2f;
																		}
																		if (Main.rand.Next(5) == 0)
																		{
																			Vector2 value40 = this.velocity.RotatedBy(1.5707963705062866, default(Vector2)) * ((float)Main.rand.NextDouble() - 0.5f) * (float)this.width;
																			int num826 = Dust.NewDust(vector75 + value40 - Vector2.One * 4f, 8, 8, 31, 0f, 0f, 100, default(Color), 1.5f);
																			Main.dust[num826].velocity *= 0.5f;
																			Main.dust[num826].velocity.Y = -Math.Abs(Main.dust[num826].velocity.Y);
																		}
																		DelegateMethods.v3_1 = new Vector3(0.4f, 0.85f, 0.9f);
																		Utils.PlotTileLine(base.Center, base.Center + this.velocity * this.localAI[1], (float)this.width * this.scale, new Utils.PerLinePoint(DelegateMethods.CastLight));
																	}
																	if (this.type == 537)
																	{
																		Vector2 vector77 = base.Center + this.velocity * (this.localAI[1] - 8f);
																		for (int num827 = 0; num827 < 2; num827++)
																		{
																			float num828 = this.velocity.ToRotation() + ((Main.rand.Next(2) == 1) ? -1f : 1f) * 1.57079637f;
																			float num829 = (float)Main.rand.NextDouble() * 0.8f + 1f;
																			Vector2 vector78 = new Vector2((float)Math.Cos((double)num828) * num829, (float)Math.Sin((double)num828) * num829);
																			int num830 = Dust.NewDust(vector77, 0, 0, 226, vector78.X, vector78.Y, 0, default(Color), 1f);
																			Main.dust[num830].noGravity = true;
																			Main.dust[num830].scale = 1.2f;
																		}
																		if (Main.rand.Next(5) == 0)
																		{
																			Vector2 value41 = this.velocity.RotatedBy(1.5707963705062866, default(Vector2)) * ((float)Main.rand.NextDouble() - 0.5f) * (float)this.width;
																			int num831 = Dust.NewDust(vector77 + value41 - Vector2.One * 4f, 8, 8, 31, 0f, 0f, 100, default(Color), 1.5f);
																			Main.dust[num831].velocity *= 0.5f;
																			Main.dust[num831].velocity.Y = -Math.Abs(Main.dust[num831].velocity.Y);
																		}
																		DelegateMethods.v3_1 = new Vector3(0.4f, 0.85f, 0.9f);
																		Utils.PlotTileLine(base.Center, base.Center + this.velocity * this.localAI[1], (float)this.width * this.scale, new Utils.PerLinePoint(DelegateMethods.CastLight));
																	}
																	if (this.type == 632 && Math.Abs(this.localAI[1] - num810) < 100f && this.scale > 0.15f)
																	{
																		float prismHue = this.GetPrismHue(this.ai[0]);
																		Color color = Main.hslToRgb(prismHue, 1f, 0.5f);
																		color.A = 0;
																		Vector2 vector79 = base.Center + this.velocity * (this.localAI[1] - 14.5f * this.scale);
																		float x = Main.rgbToHsl(new Color(Main.DiscoR, Main.DiscoG, Main.DiscoB)).X;
																		for (int num832 = 0; num832 < 2; num832++)
																		{
																			float num833 = this.velocity.ToRotation() + ((Main.rand.Next(2) == 1) ? -1f : 1f) * 1.57079637f;
																			float num834 = (float)Main.rand.NextDouble() * 0.8f + 1f;
																			Vector2 vector80 = new Vector2((float)Math.Cos((double)num833) * num834, (float)Math.Sin((double)num833) * num834);
																			int num835 = Dust.NewDust(vector79, 0, 0, 267, vector80.X, vector80.Y, 0, default(Color), 1f);
																			Main.dust[num835].color = color;
																			Main.dust[num835].scale = 1.2f;
																			if (this.scale > 1f)
																			{
																				Main.dust[num835].velocity *= this.scale;
																				Main.dust[num835].scale *= this.scale;
																			}
																			Main.dust[num835].noGravity = true;
																			if (this.scale != 1.4f)
																			{
																				Dust dust8 = Dust.CloneDust(num835);
																				dust8.color = Color.White;
																				dust8.scale /= 2f;
																			}
																			float hue = (x + Main.rand.NextFloat() * 0.4f) % 1f;
																			Main.dust[num835].color = Color.Lerp(color, Main.hslToRgb(hue, 1f, 0.75f), this.scale / 1.4f);
																		}
																		if (Main.rand.Next(5) == 0)
																		{
																			Vector2 value42 = this.velocity.RotatedBy(1.5707963705062866, default(Vector2)) * ((float)Main.rand.NextDouble() - 0.5f) * (float)this.width;
																			int num836 = Dust.NewDust(vector79 + value42 - Vector2.One * 4f, 8, 8, 31, 0f, 0f, 100, default(Color), 1.5f);
																			Main.dust[num836].velocity *= 0.5f;
																			Main.dust[num836].velocity.Y = -Math.Abs(Main.dust[num836].velocity.Y);
																		}
																		DelegateMethods.v3_1 = color.ToVector3() * 0.3f;
																		Utils.PlotTileLine(base.Center, base.Center + this.velocity * this.localAI[1], (float)this.width * this.scale, new Utils.PerLinePoint(DelegateMethods.CastLight));
																		return;
																	}
																}
																else if (this.aiStyle == 85)
																{
																	Vector2 value43 = new Vector2(0f, 216f);
																	this.alpha -= 15;
																	if (this.alpha < 0)
																	{
																		this.alpha = 0;
																	}
																	int num837 = (int)Math.Abs(this.ai[0]) - 1;
																	int num838 = (int)this.ai[1];
																	if (!Main.npc[num837].active || Main.npc[num837].type != 396)
																	{
																		this.Kill();
																		return;
																	}
																	this.localAI[0] += 1f;
																	if (this.localAI[0] >= 330f && this.ai[0] > 0f && Main.netMode != 1)
																	{
																		this.ai[0] *= -1f;
																		this.netUpdate = true;
																	}
																	if (Main.netMode != 1 && this.ai[0] > 0f && (!Main.player[(int)this.ai[1]].active || Main.player[(int)this.ai[1]].dead))
																	{
																		this.ai[0] *= -1f;
																		this.netUpdate = true;
																	}
																	this.rotation = (Main.npc[(int)Math.Abs(this.ai[0]) - 1].Center - Main.player[(int)this.ai[1]].Center + value43).ToRotation() + 1.57079637f;
																	if (this.ai[0] > 0f)
																	{
																		Vector2 value44 = Main.player[(int)this.ai[1]].Center - base.Center;
																		if (value44.X != 0f || value44.Y != 0f)
																		{
																			this.velocity = Vector2.Normalize(value44) * Math.Min(16f, value44.Length());
																		}
																		else
																		{
																			this.velocity = Vector2.Zero;
																		}
																		if (value44.Length() < 20f && this.localAI[1] == 0f)
																		{
																			this.localAI[1] = 1f;
																			int time = 840;
																			if (Main.expertMode)
																			{
																				time = 960;
																			}
																			Main.player[num838].AddBuff(145, time, true);
																			return;
																		}
																	}
																	else
																	{
																		Vector2 value45 = Main.npc[(int)Math.Abs(this.ai[0]) - 1].Center - base.Center + value43;
																		if (value45.X != 0f || value45.Y != 0f)
																		{
																			this.velocity = Vector2.Normalize(value45) * Math.Min(16f, value45.Length());
																		}
																		else
																		{
																			this.velocity = Vector2.Zero;
																		}
																		if (value45.Length() < 20f)
																		{
																			this.Kill();
																			return;
																		}
																	}
																}
																else if (this.aiStyle == 86)
																{
																	if (this.localAI[1] == 0f)
																	{
																		this.localAI[1] = 1f;
																		Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 120);
																	}
																	this.ai[0] += 1f;
																	if (this.ai[1] == 1f)
																	{
																		if (this.ai[0] >= 130f)
																		{
																			this.alpha += 10;
																		}
																		else
																		{
																			this.alpha -= 10;
																		}
																		if (this.alpha < 0)
																		{
																			this.alpha = 0;
																		}
																		if (this.alpha > 255)
																		{
																			this.alpha = 255;
																		}
																		if (this.ai[0] >= 150f)
																		{
																			this.Kill();
																			return;
																		}
																		if (this.ai[0] % 30f == 0f && Main.netMode != 1)
																		{
																			Vector2 vector81 = this.rotation.ToRotationVector2();
																			Projectile.NewProjectile(base.Center.X, base.Center.Y, vector81.X, vector81.Y, 464, this.damage, this.knockBack, this.owner, 0f, 0f);
																		}
																		this.rotation += 0.104719758f;
																		Lighting.AddLight(base.Center, 0.3f, 0.75f, 0.9f);
																		return;
																	}
																	else
																	{
																		this.position -= this.velocity;
																		if (this.ai[0] >= 40f)
																		{
																			this.alpha += 3;
																		}
																		else
																		{
																			this.alpha -= 40;
																		}
																		if (this.alpha < 0)
																		{
																			this.alpha = 0;
																		}
																		if (this.alpha > 255)
																		{
																			this.alpha = 255;
																		}
																		if (this.ai[0] >= 45f)
																		{
																			this.Kill();
																			return;
																		}
																		Vector2 value46 = new Vector2(0f, -720f).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
																		float scaleFactor7 = this.ai[0] % 45f / 45f;
																		Vector2 spinningpoint = value46 * scaleFactor7;
																		for (int num839 = 0; num839 < 6; num839++)
																		{
																			Vector2 vector82 = base.Center + spinningpoint.RotatedBy((double)((float)num839 * 6.28318548f / 6f), default(Vector2));
																			Lighting.AddLight(vector82, 0.3f, 0.75f, 0.9f);
																			for (int num840 = 0; num840 < 2; num840++)
																			{
																				int num841 = Dust.NewDust(vector82 + Utils.RandomVector2(Main.rand, -8f, 8f) / 2f, 8, 8, 197, 0f, 0f, 100, Color.Transparent, 1f);
																				Main.dust[num841].noGravity = true;
																			}
																		}
																		return;
																	}
																}
																else
																{
																	if (this.aiStyle == 87)
																	{
																		this.position.Y = this.ai[0];
																		this.height = (int)this.ai[1];
																		if (base.Center.X > Main.player[this.owner].Center.X)
																		{
																			this.direction = 1;
																		}
																		else
																		{
																			this.direction = -1;
																		}
																		this.velocity.X = (float)this.direction * 1E-06f;
																		if (this.owner == Main.myPlayer)
																		{
																			for (int num842 = 0; num842 < 1000; num842++)
																			{
																				if (Main.projectile[num842].active && num842 != this.whoAmI && Main.projectile[num842].type == this.type && Main.projectile[num842].owner == this.owner && Main.projectile[num842].timeLeft > this.timeLeft)
																				{
																					this.Kill();
																					return;
																				}
																			}
																		}
																		float num843 = (float)(this.width * this.height) * 0.0045f;
																		int num844 = 0;
																		while ((float)num844 < num843)
																		{
																			int num845 = Dust.NewDust(this.position, this.width, this.height, 75, 0f, 0f, 100, default(Color), 1f);
																			Main.dust[num845].noGravity = true;
																			Main.dust[num845].velocity *= 0.5f;
																			Dust expr_22F7E_cp_0 = Main.dust[num845];
																			expr_22F7E_cp_0.velocity.Y = expr_22F7E_cp_0.velocity.Y - 0.5f;
																			Main.dust[num845].scale = 1.4f;
																			Dust expr_22FB2_cp_0 = Main.dust[num845];
																			expr_22FB2_cp_0.position.X = expr_22FB2_cp_0.position.X + 6f;
																			Dust expr_22FD2_cp_0 = Main.dust[num845];
																			expr_22FD2_cp_0.position.Y = expr_22FD2_cp_0.position.Y - 2f;
																			num844++;
																		}
																		return;
																	}
																	if (this.aiStyle == 88)
																	{
																		if (this.type == 465)
																		{
																			if (this.localAI[1] == 0f)
																			{
																				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 121);
																				this.localAI[1] = 1f;
																			}
																			if (this.ai[0] < 180f)
																			{
																				this.alpha -= 5;
																				if (this.alpha < 0)
																				{
																					this.alpha = 0;
																				}
																			}
																			else
																			{
																				this.alpha += 5;
																				if (this.alpha > 255)
																				{
																					this.alpha = 255;
																					this.Kill();
																					return;
																				}
																			}
																			this.ai[0] += 1f;
																			if (this.ai[0] % 30f == 0f && this.ai[0] < 180f && Main.netMode != 1)
																			{
																				int[] array4 = new int[5];
																				Vector2[] array5 = new Vector2[5];
																				int num846 = 0;
																				float num847 = 2000f;
																				for (int num848 = 0; num848 < 255; num848++)
																				{
																					if (Main.player[num848].active && !Main.player[num848].dead)
																					{
																						Vector2 center9 = Main.player[num848].Center;
																						float num849 = Vector2.Distance(center9, base.Center);
																						if (num849 < num847 && Collision.CanHit(base.Center, 1, 1, center9, 1, 1))
																						{
																							array4[num846] = num848;
																							array5[num846] = center9;
																							if (++num846 >= array5.Length)
																							{
																								break;
																							}
																						}
																					}
																				}
																				for (int num850 = 0; num850 < num846; num850++)
																				{
																					Vector2 vector83 = array5[num850] - base.Center;
																					float ai = (float)Main.rand.Next(100);
																					Vector2 vector84 = Vector2.Normalize(vector83.RotatedByRandom(0.78539818525314331)) * 7f;
																					Projectile.NewProjectile(base.Center.X, base.Center.Y, vector84.X, vector84.Y, 466, this.damage, 0f, Main.myPlayer, vector83.ToRotation(), ai);
																				}
																			}
																			Lighting.AddLight(base.Center, 0.4f, 0.85f, 0.9f);
																			if (++this.frameCounter >= 4)
																			{
																				this.frameCounter = 0;
																				if (++this.frame >= Main.projFrames[this.type])
																				{
																					this.frame = 0;
																				}
																			}
																			if (this.alpha < 150 && this.ai[0] < 180f)
																			{
																				for (int num851 = 0; num851 < 1; num851++)
																				{
																					float num852 = (float)Main.rand.NextDouble() * 1f - 0.5f;
																					if (num852 < -0.5f)
																					{
																						num852 = -0.5f;
																					}
																					if (num852 > 0.5f)
																					{
																						num852 = 0.5f;
																					}
																					Vector2 value47 = new Vector2((float)(-(float)this.width) * 0.2f * this.scale, 0f).RotatedBy((double)(num852 * 6.28318548f), default(Vector2)).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
																					int num853 = Dust.NewDust(base.Center - Vector2.One * 5f, 10, 10, 226, -this.velocity.X / 3f, -this.velocity.Y / 3f, 150, Color.Transparent, 0.7f);
																					Main.dust[num853].position = base.Center + value47;
																					Main.dust[num853].velocity = Vector2.Normalize(Main.dust[num853].position - base.Center) * 2f;
																					Main.dust[num853].noGravity = true;
																				}
																				for (int num854 = 0; num854 < 1; num854++)
																				{
																					float num855 = (float)Main.rand.NextDouble() * 1f - 0.5f;
																					if (num855 < -0.5f)
																					{
																						num855 = -0.5f;
																					}
																					if (num855 > 0.5f)
																					{
																						num855 = 0.5f;
																					}
																					Vector2 value48 = new Vector2((float)(-(float)this.width) * 0.6f * this.scale, 0f).RotatedBy((double)(num855 * 6.28318548f), default(Vector2)).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
																					int num856 = Dust.NewDust(base.Center - Vector2.One * 5f, 10, 10, 226, -this.velocity.X / 3f, -this.velocity.Y / 3f, 150, Color.Transparent, 0.7f);
																					Main.dust[num856].velocity = Vector2.Zero;
																					Main.dust[num856].position = base.Center + value48;
																					Main.dust[num856].noGravity = true;
																				}
																				return;
																			}
																		}
																		else if (this.type == 466)
																		{
																			this.frameCounter++;
																			Lighting.AddLight(base.Center, 0.3f, 0.45f, 0.5f);
																			if (this.velocity == Vector2.Zero)
																			{
																				if (this.frameCounter >= this.extraUpdates * 2)
																				{
																					this.frameCounter = 0;
																					bool flag34 = true;
																					for (int num857 = 1; num857 < this.oldPos.Length; num857++)
																					{
																						if (this.oldPos[num857] != this.oldPos[0])
																						{
																							flag34 = false;
																						}
																					}
																					if (flag34)
																					{
																						this.Kill();
																						return;
																					}
																				}
																				if (Main.rand.Next(this.extraUpdates) == 0)
																				{
																					for (int num858 = 0; num858 < 2; num858++)
																					{
																						float num859 = this.rotation + ((Main.rand.Next(2) == 1) ? -1f : 1f) * 1.57079637f;
																						float num860 = (float)Main.rand.NextDouble() * 0.8f + 1f;
																						Vector2 vector85 = new Vector2((float)Math.Cos((double)num859) * num860, (float)Math.Sin((double)num859) * num860);
																						int num861 = Dust.NewDust(base.Center, 0, 0, 226, vector85.X, vector85.Y, 0, default(Color), 1f);
																						Main.dust[num861].noGravity = true;
																						Main.dust[num861].scale = 1.2f;
																					}
																					if (Main.rand.Next(5) == 0)
																					{
																						Vector2 value49 = this.velocity.RotatedBy(1.5707963705062866, default(Vector2)) * ((float)Main.rand.NextDouble() - 0.5f) * (float)this.width;
																						int num862 = Dust.NewDust(base.Center + value49 - Vector2.One * 4f, 8, 8, 31, 0f, 0f, 100, default(Color), 1.5f);
																						Main.dust[num862].velocity *= 0.5f;
																						Main.dust[num862].velocity.Y = -Math.Abs(Main.dust[num862].velocity.Y);
																						return;
																					}
																				}
																			}
																			else if (this.frameCounter >= this.extraUpdates * 2)
																			{
																				this.frameCounter = 0;
																				float num863 = this.velocity.Length();
																				Random random = new Random((int)this.ai[1]);
																				int num864 = 0;
																				Vector2 spinningpoint2 = -Vector2.UnitY;
																				Vector2 vector86;
																				do
																				{
																					int num865 = random.Next();
																					this.ai[1] = (float)num865;
																					num865 %= 100;
																					float f = (float)num865 / 100f * 6.28318548f;
																					vector86 = f.ToRotationVector2();
																					if (vector86.Y > 0f)
																					{
																						vector86.Y *= -1f;
																					}
																					bool flag35 = false;
																					if (vector86.Y > -0.02f)
																					{
																						flag35 = true;
																					}
																					if (vector86.X * (float)(this.extraUpdates + 1) * 2f * num863 + this.localAI[0] > 40f)
																					{
																						flag35 = true;
																					}
																					if (vector86.X * (float)(this.extraUpdates + 1) * 2f * num863 + this.localAI[0] < -40f)
																					{
																						flag35 = true;
																					}
																					if (!flag35)
																					{
																						goto IL_23A4A;
																					}
																				}
																				while (num864++ < 100);
																				this.velocity = Vector2.Zero;
																				this.localAI[1] = 1f;
																				goto IL_23A52;
																				IL_23A4A:
																				spinningpoint2 = vector86;
																				IL_23A52:
																				if (this.velocity != Vector2.Zero)
																				{
																					this.localAI[0] += spinningpoint2.X * (float)(this.extraUpdates + 1) * 2f * num863;
																					this.velocity = spinningpoint2.RotatedBy((double)(this.ai[0] + 1.57079637f), default(Vector2)) * num863;
																					this.rotation = this.velocity.ToRotation() + 1.57079637f;
																					return;
																				}
																			}
																		}
																		else if (this.type == 580)
																		{
																			if (this.localAI[1] == 0f && this.ai[0] >= 900f)
																			{
																				this.ai[0] -= 1000f;
																				this.localAI[1] = -1f;
																			}
																			this.frameCounter++;
																			Lighting.AddLight(base.Center, 0.3f, 0.45f, 0.5f);
																			if (this.velocity == Vector2.Zero)
																			{
																				if (this.frameCounter >= this.extraUpdates * 2)
																				{
																					this.frameCounter = 0;
																					bool flag36 = true;
																					for (int num866 = 1; num866 < this.oldPos.Length; num866++)
																					{
																						if (this.oldPos[num866] != this.oldPos[0])
																						{
																							flag36 = false;
																						}
																					}
																					if (flag36)
																					{
																						this.Kill();
																						return;
																					}
																				}
																				if (Main.rand.Next(this.extraUpdates) == 0 && (this.velocity != Vector2.Zero || Main.rand.Next((this.localAI[1] == 2f) ? 2 : 6) == 0))
																				{
																					for (int num867 = 0; num867 < 2; num867++)
																					{
																						float num868 = this.rotation + ((Main.rand.Next(2) == 1) ? -1f : 1f) * 1.57079637f;
																						float num869 = (float)Main.rand.NextDouble() * 0.8f + 1f;
																						Vector2 vector87 = new Vector2((float)Math.Cos((double)num868) * num869, (float)Math.Sin((double)num868) * num869);
																						int num870 = Dust.NewDust(base.Center, 0, 0, 226, vector87.X, vector87.Y, 0, default(Color), 1f);
																						Main.dust[num870].noGravity = true;
																						Main.dust[num870].scale = 1.2f;
																					}
																					if (Main.rand.Next(5) == 0)
																					{
																						Vector2 value50 = this.velocity.RotatedBy(1.5707963705062866, default(Vector2)) * ((float)Main.rand.NextDouble() - 0.5f) * (float)this.width;
																						int num871 = Dust.NewDust(base.Center + value50 - Vector2.One * 4f, 8, 8, 31, 0f, 0f, 100, default(Color), 1.5f);
																						Main.dust[num871].velocity *= 0.5f;
																						Main.dust[num871].velocity.Y = -Math.Abs(Main.dust[num871].velocity.Y);
																						return;
																					}
																				}
																			}
																			else if (this.frameCounter >= this.extraUpdates * 2)
																			{
																				this.frameCounter = 0;
																				float num872 = this.velocity.Length();
																				Random random2 = new Random((int)this.ai[1]);
																				int num873 = 0;
																				Vector2 spinningpoint3 = -Vector2.UnitY;
																				Vector2 vector88;
																				do
																				{
																					int num874 = random2.Next();
																					this.ai[1] = (float)num874;
																					num874 %= 100;
																					float f2 = (float)num874 / 100f * 6.28318548f;
																					vector88 = f2.ToRotationVector2();
																					if (vector88.Y > 0f)
																					{
																						vector88.Y *= -1f;
																					}
																					bool flag37 = false;
																					if (vector88.Y > -0.02f)
																					{
																						flag37 = true;
																					}
																					if (vector88.X * (float)(this.extraUpdates + 1) * 2f * num872 + this.localAI[0] > 40f)
																					{
																						flag37 = true;
																					}
																					if (vector88.X * (float)(this.extraUpdates + 1) * 2f * num872 + this.localAI[0] < -40f)
																					{
																						flag37 = true;
																					}
																					if (!flag37)
																					{
																						goto IL_23FAE;
																					}
																				}
																				while (num873++ < 100);
																				this.velocity = Vector2.Zero;
																				if (this.localAI[1] < 1f)
																				{
																					this.localAI[1] += 2f;
																					goto IL_23FB6;
																				}
																				goto IL_23FB6;
																				IL_23FAE:
																				spinningpoint3 = vector88;
																				IL_23FB6:
																				if (this.velocity != Vector2.Zero)
																				{
																					this.localAI[0] += spinningpoint3.X * (float)(this.extraUpdates + 1) * 2f * num872;
																					this.velocity = spinningpoint3.RotatedBy((double)(this.ai[0] + 1.57079637f), default(Vector2)) * num872;
																					this.rotation = this.velocity.ToRotation() + 1.57079637f;
																					if (Main.rand.Next(4) == 0 && Main.netMode != 1 && this.localAI[1] == 0f)
																					{
																						float num875 = (float)Main.rand.Next(-3, 4) * 1.04719758f / 3f;
																						Vector2 vector89 = this.ai[0].ToRotationVector2().RotatedBy((double)num875, default(Vector2)) * this.velocity.Length();
																						if (!Collision.CanHitLine(base.Center, 0, 0, base.Center + vector89 * 50f, 0, 0))
																						{
																							Projectile.NewProjectile(base.Center.X - vector89.X, base.Center.Y - vector89.Y, vector89.X, vector89.Y, this.type, this.damage, this.knockBack, this.owner, vector89.ToRotation() + 1000f, this.ai[1]);
																							return;
																						}
																					}
																				}
																			}
																		}
																	}
																	else if (this.aiStyle == 89)
																	{
																		if (this.ai[1] == -1f)
																		{
																			this.alpha += 12;
																		}
																		else if (this.ai[0] < 300f)
																		{
																			this.alpha -= 5;
																		}
																		else
																		{
																			this.alpha += 12;
																		}
																		if (this.alpha < 0)
																		{
																			this.alpha = 0;
																		}
																		if (this.alpha > 255)
																		{
																			this.alpha = 255;
																		}
																		this.scale = 1f - (float)this.alpha / 255f;
																		this.scale *= 0.6f;
																		this.rotation += 0.0149599658f;
																		if (this.localAI[1] == 0f)
																		{
																			this.localAI[1] = 1f;
																			Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 123);
																		}
																		if (this.alpha == 0)
																		{
																			for (int num876 = 0; num876 < 2; num876++)
																			{
																				float num877 = (float)Main.rand.Next(2, 4);
																				float num878 = this.scale;
																				if (num876 == 1)
																				{
																					num878 *= 0.42f;
																					num877 *= -0.75f;
																				}
																				Vector2 value51 = new Vector2((float)Main.rand.Next(-10, 11), (float)Main.rand.Next(-10, 11));
																				value51.Normalize();
																				int num879 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 228, 0f, 0f, 100, default(Color), 2f);
																				Main.dust[num879].noGravity = true;
																				Main.dust[num879].noLight = true;
																				Main.dust[num879].position = base.Center + value51 * 204f * num878;
																				if (Main.rand.Next(8) == 0)
																				{
																					Main.dust[num879].velocity = value51 * -num877 * 2f;
																					Main.dust[num879].scale += 0.5f;
																				}
																				else
																				{
																					Main.dust[num879].velocity = value51 * -num877;
																				}
																			}
																		}
																		this.ai[0] += 1f;
																		if (this.ai[0] >= 60f)
																		{
																			int arg_24457_0 = (int)(this.ai[0] - 0f) / 60;
																			for (int num880 = 0; num880 < 1; num880++)
																			{
																				float scaleFactor8 = (float)Main.rand.Next(1, 3);
																				Vector2 value52 = new Vector2((float)Main.rand.Next(-10, 11), (float)Main.rand.Next(-10, 11));
																				value52.Normalize();
																				int num881 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 228, 0f, 0f, 100, default(Color), 2f);
																				Main.dust[num881].noGravity = true;
																				Main.dust[num881].noLight = true;
																				Main.dust[num881].position = base.Center;
																				if (Main.rand.Next(2) == 0)
																				{
																					Main.dust[num881].velocity = value52 * scaleFactor8 * 2f;
																					Main.dust[num881].scale += 0.5f;
																				}
																				else
																				{
																					Main.dust[num881].velocity = value52 * scaleFactor8;
																				}
																				Main.dust[num881].fadeIn = 2f;
																			}
																		}
																		if (this.ai[0] == 300f && this.ai[1] != -1f && Main.netMode != 1)
																		{
																			if (!NPC.AnyNPCs(454))
																			{
																				this.ai[1] = (float)NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 454, 0, 0f, 0f, 0f, 0f, 255);
																			}
																			else
																			{
																				this.ai[1] = (float)NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 521, 0, 0f, 0f, 0f, 0f, 255);
																			}
																		}
																		else if (this.ai[0] == 320f)
																		{
																			this.Kill();
																			return;
																		}
																		bool flag38 = false;
																		if (this.ai[1] == -1f)
																		{
																			if (this.alpha == 255)
																			{
																				flag38 = true;
																			}
																		}
																		else
																		{
																			flag38 = (this.ai[1] < 0f || !Main.npc[(int)this.ai[1]].active);
																			if ((flag38 || Main.npc[(int)this.ai[1]].type != 439) && (flag38 || Main.npc[(int)this.ai[1]].type != 454) && (flag38 || Main.npc[(int)this.ai[1]].type != 521))
																			{
																				flag38 = true;
																			}
																		}
																		if (flag38)
																		{
																			this.Kill();
																			return;
																		}
																		Lighting.AddLight(base.Center, 1.1f, 0.9f, 0.4f);
																		return;
																	}
																	else if (this.aiStyle == 90)
																	{
																		if (Main.player[this.owner].dead)
																		{
																			this.Kill();
																		}
																		if (Main.myPlayer == this.owner && Main.player[this.owner].magicLantern)
																		{
																			this.timeLeft = 2;
																		}
																		if (this.tileCollide)
																		{
																			if (!Collision.CanHit(this.position, this.width, this.height, Main.player[this.owner].Center, 1, 1))
																			{
																				this.tileCollide = false;
																			}
																			else if (!Collision.SolidCollision(this.position, this.width, this.height) && Collision.CanHitLine(this.position, this.width, this.height, Main.player[this.owner].Center, 1, 1))
																			{
																				this.tileCollide = true;
																			}
																		}
																		this.direction = Main.player[this.owner].direction;
																		this.spriteDirection = this.direction;
																		Lighting.AddLight(this.position, 0.35f, 0.35f, 0.1f);
																		this.localAI[0] += 1f;
																		if (this.localAI[0] >= 10f)
																		{
																			this.localAI[0] = 0f;
																			int num882 = 17;
																			if ((base.Center - Main.player[Main.myPlayer].Center).Length() < (float)(Main.screenWidth + num882 * 16))
																			{
																				int num883 = (int)base.Center.X / 16;
																				int num884 = (int)base.Center.Y / 16;
																				for (int num885 = num883 - num882; num885 <= num883 + num882; num885++)
																				{
																					for (int num886 = num884 - num882; num886 <= num884 + num882; num886++)
																					{
																						if (Main.rand.Next(4) == 0)
																						{
																							Vector2 vector90 = new Vector2((float)(num883 - num885), (float)(num884 - num886));
																							if (vector90.Length() < (float)num882 && num885 > 0 && num885 < Main.maxTilesX - 1 && num886 > 0 && num886 < Main.maxTilesY - 1 && Main.tile[num885, num886] != null && Main.tile[num885, num886].active())
																							{
																								bool flag39 = false;
																								if (Main.tile[num885, num886].type == 185 && Main.tile[num885, num886].frameY == 18)
																								{
																									if (Main.tile[num885, num886].frameX >= 576 && Main.tile[num885, num886].frameX <= 882)
																									{
																										flag39 = true;
																									}
																								}
																								else if (Main.tile[num885, num886].type == 186 && Main.tile[num885, num886].frameX >= 864 && Main.tile[num885, num886].frameX <= 1170)
																								{
																									flag39 = true;
																								}
																								if (flag39 || Main.tileSpelunker[(int)Main.tile[num885, num886].type] || (Main.tileAlch[(int)Main.tile[num885, num886].type] && Main.tile[num885, num886].type != 82))
																								{
																									int num887 = Dust.NewDust(new Vector2((float)(num885 * 16), (float)(num886 * 16)), 16, 16, 204, 0f, 0f, 150, default(Color), 0.3f);
																									Main.dust[num887].fadeIn = 0.75f;
																									Main.dust[num887].velocity *= 0.1f;
																									Main.dust[num887].noLight = true;
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																		Vector2 vector91 = Main.player[this.owner].Center - base.Center;
																		vector91.X += (float)(40 * this.direction);
																		vector91.Y -= 40f;
																		float num888 = vector91.Length();
																		if (num888 > 1000f)
																		{
																			base.Center = Main.player[this.owner].Center;
																		}
																		float num889 = 3f;
																		float num890 = 4f;
																		if (num888 > 200f)
																		{
																			num890 += (num888 - 200f) * 0.1f;
																			this.tileCollide = false;
																		}
																		if (num888 < num890)
																		{
																			this.velocity *= 0.25f;
																			num890 = num888;
																		}
																		if (vector91.X != 0f || vector91.Y != 0f)
																		{
																			vector91.Normalize();
																			vector91 *= num890;
																		}
																		this.velocity = (this.velocity * (num889 - 1f) + vector91) / num889;
																		if (this.velocity.Length() > 6f)
																		{
																			float num891 = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
																			if ((double)Math.Abs(this.rotation - num891) >= 3.14)
																			{
																				if (num891 < this.rotation)
																				{
																					this.rotation -= 6.28f;
																				}
																				else
																				{
																					this.rotation += 6.28f;
																				}
																			}
																			this.rotation = (this.rotation * 4f + num891) / 5f;
																			this.frameCounter++;
																			if (this.frameCounter > 4)
																			{
																				this.frameCounter = 0;
																				this.frame++;
																				if (this.frame > 7)
																				{
																					this.frame = 4;
																				}
																			}
																			if (this.frame < 4)
																			{
																				this.frame = 7;
																				return;
																			}
																		}
																		else
																		{
																			if ((double)this.rotation > 3.14)
																			{
																				this.rotation -= 6.28f;
																			}
																			if ((double)this.rotation > -0.01 && (double)this.rotation < 0.01)
																			{
																				this.rotation = 0f;
																			}
																			else
																			{
																				this.rotation *= 0.9f;
																			}
																			this.frameCounter++;
																			if (this.frameCounter > 6)
																			{
																				this.frameCounter = 0;
																				this.frame++;
																				if (this.frame > 3)
																				{
																					this.frame = 0;
																					return;
																				}
																			}
																		}
																	}
																	else if (this.aiStyle == 91)
																	{
																		Vector2 center10 = base.Center;
																		this.scale = 1f - this.localAI[0];
																		this.width = (int)(20f * this.scale);
																		this.height = this.width;
																		this.position.X = center10.X - (float)(this.width / 2);
																		this.position.Y = center10.Y - (float)(this.height / 2);
																		if ((double)this.localAI[0] < 0.1)
																		{
																			this.localAI[0] += 0.01f;
																		}
																		else
																		{
																			this.localAI[0] += 0.025f;
																		}
																		if (this.localAI[0] >= 0.95f)
																		{
																			this.Kill();
																		}
																		this.velocity.X = this.velocity.X + this.ai[0] * 1.5f;
																		this.velocity.Y = this.velocity.Y + this.ai[1] * 1.5f;
																		if (this.velocity.Length() > 16f)
																		{
																			this.velocity.Normalize();
																			this.velocity *= 16f;
																		}
																		this.ai[0] *= 1.05f;
																		this.ai[1] *= 1.05f;
																		if (this.scale < 1f)
																		{
																			int num892 = 0;
																			while ((float)num892 < this.scale * 10f)
																			{
																				int num893 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, this.velocity.X, this.velocity.Y, 100, default(Color), 1.1f);
																				Main.dust[num893].position = (Main.dust[num893].position + base.Center) / 2f;
																				Main.dust[num893].noGravity = true;
																				Main.dust[num893].velocity *= 0.1f;
																				Main.dust[num893].velocity -= this.velocity * (1.3f - this.scale);
																				Main.dust[num893].fadeIn = (float)(100 + this.owner);
																				Main.dust[num893].scale += this.scale * 0.75f;
																				num892++;
																			}
																			return;
																		}
																	}
																	else
																	{
																		if (this.aiStyle == 92)
																		{
																			this.tileCollide = false;
																			this.ai[1] += 1f;
																			if (this.ai[1] > 60f)
																			{
																				this.ai[0] += 10f;
																			}
																			if (this.ai[0] > 255f)
																			{
																				this.Kill();
																				this.ai[0] = 255f;
																			}
																			this.alpha = (int)(100.0 + (double)this.ai[0] * 0.7);
																			this.rotation += this.velocity.X * 0.1f;
																			this.rotation += (float)this.direction * 0.003f;
																			this.velocity *= 0.96f;
																			Rectangle rectangle6 = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
																			for (int num894 = 0; num894 < 1000; num894++)
																			{
																				if (num894 != this.whoAmI && Main.projectile[num894].active && Main.projectile[num894].type >= 511 && Main.projectile[num894].type <= 513)
																				{
																					Rectangle value53 = new Rectangle((int)Main.projectile[num894].position.X, (int)Main.projectile[num894].position.Y, Main.projectile[num894].width, Main.projectile[num894].height);
																					if (rectangle6.Intersects(value53))
																					{
																						Vector2 vector92 = Main.projectile[num894].Center - base.Center;
																						if (vector92.X == 0f && vector92.Y == 0f)
																						{
																							if (num894 < this.whoAmI)
																							{
																								vector92.X = -1f;
																								vector92.Y = 1f;
																							}
																							else
																							{
																								vector92.X = 1f;
																								vector92.Y = -1f;
																							}
																						}
																						vector92.Normalize();
																						vector92 *= 0.005f;
																						this.velocity -= vector92;
																						Main.projectile[num894].velocity += vector92;
																					}
																				}
																			}
																			return;
																		}
																		if (this.aiStyle == 93)
																		{
																			if (this.alpha > 0)
																			{
																				this.alpha -= 25;
																				if (this.alpha <= 0)
																				{
																					this.alpha = 0;
																				}
																			}
																			if (this.velocity.Y > 18f)
																			{
																				this.velocity.Y = 18f;
																			}
																			if (this.ai[0] == 0f)
																			{
																				this.ai[1] += 1f;
																				if (this.ai[1] > 20f)
																				{
																					this.velocity.Y = this.velocity.Y + 0.1f;
																					this.velocity.X = this.velocity.X * 0.992f;
																				}
																				this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
																				return;
																			}
																			this.tileCollide = false;
																			if (this.ai[0] == 1f)
																			{
																				this.tileCollide = false;
																				this.velocity *= 0.6f;
																			}
																			else
																			{
																				this.tileCollide = false;
																				int num895 = (int)(-(int)this.ai[0]);
																				num895--;
																				this.position = Main.npc[num895].Center - this.velocity;
																				this.position.X = this.position.X - (float)(this.width / 2);
																				this.position.Y = this.position.Y - (float)(this.height / 2);
																				if (!Main.npc[num895].active || Main.npc[num895].life < 0)
																				{
																					this.tileCollide = true;
																					this.ai[0] = 0f;
																					this.ai[1] = 20f;
																					this.velocity = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
																					this.velocity.Normalize();
																					this.velocity *= 6f;
																					this.netUpdate = true;
																				}
																				else if (this.velocity.Length() > (float)((Main.npc[num895].width + Main.npc[num895].height) / 3))
																				{
																					this.velocity *= 0.99f;
																				}
																			}
																			if (this.ai[0] != 0f)
																			{
																				this.ai[1] += 1f;
																				if (this.ai[1] > 90f)
																				{
																					this.Kill();
																					return;
																				}
																			}
																		}
																		else
																		{
																			if (this.aiStyle == 94)
																			{
																				if (++this.frameCounter >= 4)
																				{
																					this.frameCounter = 0;
																					if (++this.frame >= Main.projFrames[this.type])
																					{
																						this.frame = 0;
																					}
																				}
																				this.ai[0] += 1f;
																				if (this.ai[0] <= 40f)
																				{
																					this.alpha -= 5;
																					if (this.alpha < 0)
																					{
																						this.alpha = 0;
																					}
																					this.velocity *= 0.85f;
																					if (this.ai[0] == 40f)
																					{
																						this.netUpdate = true;
																						switch (Main.rand.Next(3))
																						{
																							case 0:
																								this.ai[1] = 10f;
																								break;
																							case 1:
																								this.ai[1] = 15f;
																								break;
																							case 2:
																								this.ai[1] = 30f;
																								break;
																						}
																					}
																				}
																				else if (this.ai[0] <= 60f)
																				{
																					this.velocity = Vector2.Zero;
																					if (this.ai[0] == 60f)
																					{
																						this.netUpdate = true;
																					}
																				}
																				else if (this.ai[0] <= 210f)
																				{
																					if (Main.netMode != 1 && (this.localAI[0] += 1f) >= this.ai[1])
																					{
																						this.localAI[0] = 0f;
																						int num896 = Item.NewItem((int)base.Center.X, (int)base.Center.Y, 0, 0, 73, 1, false, 0, false, false);
																						Main.item[num896].velocity = Vector2.UnitY.RotatedByRandom(6.2831854820251465) * new Vector2(3f, 2f) * (Main.rand.NextFloat() * 0.5f + 0.5f) - Vector2.UnitY * 1f;
																					}
																					if (this.ai[0] == 210f)
																					{
																						this.netUpdate = true;
																					}
																				}
																				else
																				{
																					this.scale -= 0.0333333351f;
																					this.alpha += 15;
																					if (this.ai[0] == 239f)
																					{
																						this.netUpdate = true;
																					}
																					if (this.ai[0] == 240f)
																					{
																						this.Kill();
																					}
																				}
																				if (this.alpha < 90 && Main.rand.Next(3) == 0)
																				{
																					Vector2 vector93 = new Vector2((float)this.width, (float)this.height) * this.scale * 0.85f;
																					vector93 /= 2f;
																					Vector2 value54 = Vector2.UnitY.RotatedByRandom(6.2831854820251465) * vector93;
																					int num897 = Dust.NewDust(base.Center + value54, 0, 0, 246, 0f, 0f, 0, default(Color), 1f);
																					Main.dust[num897].position = base.Center + value54;
																					Main.dust[num897].velocity = Vector2.Zero;
																				}
																				float num898 = 0.8f;
																				float num899 = 0.709803939f;
																				float num900 = 0.282352954f;
																				Lighting.AddLight(base.Center, num898 * 0.3f, num899 * 0.3f, num900 * 0.3f);
																				return;
																			}
																			if (this.aiStyle == 95)
																			{
																				if (this.localAI[0] > 2f)
																				{
																					this.alpha -= 20;
																					if (this.alpha < 100)
																					{
																						this.alpha = 100;
																					}
																				}
																				else
																				{
																					this.localAI[0] += 1f;
																				}
																				if (this.ai[0] > 30f)
																				{
																					if (this.velocity.Y > -8f)
																					{
																						this.velocity.Y = this.velocity.Y - 0.05f;
																					}
																					this.velocity.X = this.velocity.X * 0.98f;
																				}
																				else
																				{
																					this.ai[0] += 1f;
																				}
																				this.rotation = this.velocity.X * 0.1f;
																				if (this.wet)
																				{
																					if (this.velocity.Y > 0f)
																					{
																						this.velocity.Y = this.velocity.Y * 0.98f;
																					}
																					if (this.velocity.Y > -8f)
																					{
																						this.velocity.Y = this.velocity.Y - 0.2f;
																					}
																					this.velocity.X = this.velocity.X * 0.94f;
																					return;
																				}
																			}
																			else
																			{
																				if (this.aiStyle == 96)
																				{
																					this.ai[0] += 0.6f;
																					if (this.ai[0] > 500f)
																					{
																						this.Kill();
																					}
																					for (int num901 = 0; num901 < 2; num901++)
																					{
																						if (Main.rand.Next(3) != 0)
																						{
																							int num902 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 170, 0f, 0f, 100, default(Color), 1f);
																							Main.dust[num902].position = (Main.dust[num902].position + base.Center) / 2f;
																							Main.dust[num902].noGravity = true;
																							Main.dust[num902].velocity *= 0.1f;
																							if (num901 == 1)
																							{
																								Main.dust[num902].position += this.velocity / 2f;
																							}
																							float num903 = (800f - this.ai[0]) / 800f;
																							Main.dust[num902].scale *= num903 + 0.1f;
																						}
																					}
																					this.velocity.Y = this.velocity.Y + 0.008f;
																					return;
																				}
																				if (this.aiStyle == 97)
																				{
																					this.frameCounter++;
																					float num904 = 4f;
																					if ((float)this.frameCounter < num904 * 1f)
																					{
																						this.frame = 0;
																					}
																					else if ((float)this.frameCounter < num904 * 2f)
																					{
																						this.frame = 1;
																					}
																					else if ((float)this.frameCounter < num904 * 3f)
																					{
																						this.frame = 2;
																					}
																					else if ((float)this.frameCounter < num904 * 4f)
																					{
																						this.frame = 3;
																					}
																					else if ((float)this.frameCounter < num904 * 5f)
																					{
																						this.frame = 4;
																					}
																					else if ((float)this.frameCounter < num904 * 6f)
																					{
																						this.frame = 3;
																					}
																					else if ((float)this.frameCounter < num904 * 7f)
																					{
																						this.frame = 2;
																					}
																					else if ((float)this.frameCounter < num904 * 8f)
																					{
																						this.frame = 1;
																					}
																					else
																					{
																						this.frameCounter = 0;
																						this.frame = 0;
																					}
																					if (this.owner == Main.myPlayer)
																					{
																						for (int num905 = 0; num905 < 1000; num905++)
																						{
																							if (num905 != this.whoAmI && Main.projectile[num905].active && Main.projectile[num905].owner == this.owner && Main.projectile[num905].type == this.type)
																							{
																								if (this.timeLeft >= Main.projectile[num905].timeLeft)
																								{
																									Main.projectile[num905].Kill();
																								}
																								else
																								{
																									this.Kill();
																								}
																							}
																						}
																					}
																					if (this.ai[0] == 0f)
																					{
																						if ((double)this.velocity.Length() < 0.1)
																						{
																							this.velocity.X = 0f;
																							this.velocity.Y = 0f;
																							this.ai[0] = 1f;
																							this.ai[1] = 45f;
																							return;
																						}
																						this.velocity *= 0.94f;
																						if (this.velocity.X < 0f)
																						{
																							this.direction = -1;
																						}
																						else
																						{
																							this.direction = 1;
																						}
																						this.spriteDirection = this.direction;
																						return;
																					}
																					else
																					{
																						if (Main.player[this.owner].Center.X < base.Center.X)
																						{
																							this.direction = -1;
																						}
																						else
																						{
																							this.direction = 1;
																						}
																						this.spriteDirection = this.direction;
																						this.ai[1] += 1f;
																						float num906 = 0.005f;
																						if (this.ai[1] > 0f)
																						{
																							this.velocity.Y = this.velocity.Y - num906;
																						}
																						else
																						{
																							this.velocity.Y = this.velocity.Y + num906;
																						}
																						if (this.ai[1] >= 90f)
																						{
																							this.ai[1] *= -1f;
																							return;
																						}
																					}
																				}
																				else if (this.aiStyle == 98)
																				{
																					Vector2 value55 = new Vector2(this.ai[0], this.ai[1]);
																					Vector2 vector94 = value55 - base.Center;
																					if (vector94.Length() < this.velocity.Length())
																					{
																						this.Kill();
																						return;
																					}
																					vector94.Normalize();
																					vector94 *= 15f;
																					this.velocity = Vector2.Lerp(this.velocity, vector94, 0.1f);
																					for (int num907 = 0; num907 < 2; num907++)
																					{
																						int num908 = Dust.NewDust(base.Center, 0, 0, 228, 0f, 0f, 100, default(Color), 1f);
																						Main.dust[num908].noGravity = true;
																						Main.dust[num908].position += new Vector2(4f);
																						Main.dust[num908].scale += Main.rand.NextFloat() * 1f;
																					}
																					return;
																				}
																				else
																				{
																					if (this.aiStyle == 99 && this.type >= 556 && this.type <= 561)
																					{
																						this.AI_099_1();
																						return;
																					}
																					if (this.aiStyle == 99)
																					{
																						this.AI_099_2();
																						return;
																					}
																					if (this.aiStyle == 100)
																					{
																						Player player5 = Main.player[this.owner];
																						Vector2 zero2 = Vector2.Zero;
																						if (this.type == 535)
																						{
																							zero2.X = (float)player5.direction * 6f;
																							zero2.Y = player5.gravDir * -14f;
																							this.ai[0] += 1f;
																							int num909 = 0;
																							if (this.ai[0] >= 60f)
																							{
																								num909++;
																							}
																							if (this.ai[0] >= 180f)
																							{
																								num909++;
																							}
																							if (this.ai[0] >= 240f)
																							{
																								this.Kill();
																								return;
																							}
																							bool flag40 = false;
																							if (this.ai[0] == 60f || this.ai[0] == 180f)
																							{
																								flag40 = true;
																							}
																							bool flag41 = this.ai[0] >= 180f;
																							if (flag41)
																							{
																								if (this.frame < 8)
																								{
																									this.frame = 8;
																								}
																								if (this.frame >= 12)
																								{
																									this.frame = 8;
																								}
																								this.frameCounter++;
																								if (++this.frameCounter >= 5)
																								{
																									this.frameCounter = 0;
																									if (++this.frame >= 12)
																									{
																										this.frame = 8;
																									}
																								}
																							}
																							else if (++this.frameCounter >= 5)
																							{
																								this.frameCounter = 0;
																								if (++this.frame >= 8)
																								{
																									this.frame = 0;
																								}
																							}
																							Vector2 center11 = player5.Center;
																							Vector2 vector95 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - center11;
																							if (player5.gravDir == -1f)
																							{
																								vector95.Y = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - center11.Y;
																							}
																							Vector2 velocity2 = new Vector2((float)Math.Sign((vector95.X == 0f) ? ((float)player5.direction) : vector95.X), 0f);
																							if (velocity2.X != this.velocity.X || velocity2.Y != this.velocity.Y)
																							{
																								this.netUpdate = true;
																							}
																							this.velocity = velocity2;
																							if (this.soundDelay <= 0 && !flag41)
																							{
																								this.soundDelay = 10;
																								this.soundDelay *= 2;
																								if (this.ai[0] != 1f)
																								{
																									Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 15);
																								}
																							}
																							if (this.ai[0] == 181f)
																							{
																								Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 17);
																							}
																							if (this.ai[0] > 10f && !flag41)
																							{
																								Vector2 vector96 = base.Center + new Vector2((float)(player5.direction * 2), player5.gravDir * 5f);
																								float scaleFactor9 = MathHelper.Lerp(30f, 10f, (this.ai[0] - 10f) / 180f);
																								float num910 = Main.rand.NextFloat() * 6.28318548f;
																								for (float num911 = 0f; num911 < 1f; num911 += 1f)
																								{
																									Vector2 value56 = Vector2.UnitY.RotatedBy((double)(num911 / 1f * 6.28318548f + num910), default(Vector2));
																									Dust dust9 = Main.dust[Dust.NewDust(vector96, 0, 0, 228, 0f, 0f, 0, default(Color), 1f)];
																									dust9.position = vector96 + value56 * scaleFactor9;
																									dust9.noGravity = true;
																									dust9.customData = player5;
																									dust9.velocity = value56 * -2f;
																								}
																							}
																							if (this.ai[0] > 180f && this.ai[0] <= 182f)
																							{
																								Vector2 vector97 = base.Center + new Vector2((float)(player5.direction * 2), player5.gravDir * 5f);
																								float scaleFactor10 = MathHelper.Lerp(20f, 30f, (this.ai[0] - 180f) / 182f);
																								Main.rand.NextFloat();
																								for (float num912 = 0f; num912 < 10f; num912 += 1f)
																								{
																									Vector2 value57 = Vector2.UnitY.RotatedByRandom(6.2831854820251465) * (Main.rand.NextFloat() * 0.5f + 0.5f);
																									Dust dust10 = Main.dust[Dust.NewDust(vector97, 0, 0, 228, 0f, 0f, 0, default(Color), 1f)];
																									dust10.position = vector97 + value57 * scaleFactor10;
																									dust10.noGravity = true;
																									dust10.customData = player5;
																									dust10.velocity = value57 * 4f;
																									dust10.scale = 0.5f + Main.rand.NextFloat();
																								}
																							}
																							if (Main.myPlayer == this.owner)
																							{
																								bool flag42 = !flag40 || player5.CheckMana(player5.inventory[player5.selectedItem].mana, true, false);
																								bool flag43 = player5.channel && flag42;
																								if ((!flag41 && !flag43) || this.ai[0] == 180f)
																								{
																									Vector2 vector98 = player5.Center + new Vector2((float)(player5.direction * 4), player5.gravDir * 2f);
																									int num913 = this.damage * (1 + num909);
																									vector98 = base.Center;
																									int num914 = 0;
																									float num915 = 0f;
																									for (int num916 = 0; num916 < 200; num916++)
																									{
																										NPC nPC9 = Main.npc[num916];
																										if (nPC9.active && base.Distance(nPC9.Center) < 500f && nPC9.CanBeChasedBy(this, false) && Collision.CanHitLine(nPC9.position, nPC9.width, nPC9.height, vector98, 0, 0))
																										{
																											Vector2 v4 = nPC9.Center - vector98;
																											num915 += v4.ToRotation();
																											num914++;
																											int num917 = Projectile.NewProjectile(vector98.X, vector98.Y, v4.X, v4.Y, 536, 0, 0f, this.owner, (float)this.whoAmI, 0f);
																											Main.projectile[num917].Center = nPC9.Center;
																											Main.projectile[num917].damage = num913;
																											Main.projectile[num917].Damage();
																											Main.projectile[num917].damage = 0;
																											Main.projectile[num917].Center = vector98;
																											this.ai[0] = 180f;
																										}
																									}
																									if (num914 != 0)
																									{
																										num915 /= (float)num914;
																									}
																									else
																									{
																										num915 = ((player5.direction == 1) ? 0f : 3.14159274f);
																									}
																									for (int num918 = 0; num918 < 6; num918++)
																									{
																										Vector2 vector99 = Vector2.Zero;
																										if (Main.rand.Next(4) != 0)
																										{
																											vector99 = Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)num915, default(Vector2)) * new Vector2(200f, 50f) * (Main.rand.NextFloat() * 0.7f + 0.3f);
																										}
																										else
																										{
																											vector99 = Vector2.UnitX.RotatedByRandom(6.2831854820251465) * new Vector2(200f, 50f) * (Main.rand.NextFloat() * 0.7f + 0.3f);
																										}
																										Projectile.NewProjectile(vector98.X, vector98.Y, vector99.X, vector99.Y, 536, 0, 0f, this.owner, (float)this.whoAmI, 0f);
																									}
																									this.ai[0] = 180f;
																									this.netUpdate = true;
																								}
																							}
																							Lighting.AddLight(base.Center, 0.9f, 0.75f, 0.1f);
																						}
																						this.rotation = ((player5.gravDir == 1f) ? 0f : 3.14159274f);
																						this.spriteDirection = this.direction;
																						this.timeLeft = 2;
																						Vector2 vector100 = Main.OffsetsPlayerOnhand[player5.bodyFrame.Y / 56] * 2f;
																						if (player5.direction != 1)
																						{
																							vector100.X = (float)player5.bodyFrame.Width - vector100.X;
																						}
																						vector100 -= (player5.bodyFrame.Size() - new Vector2((float)player5.width, 42f)) / 2f;
																						base.Center = (player5.position + vector100 + zero2 - this.velocity).Floor();
																						player5.ChangeDir(this.direction);
																						player5.heldProj = this.whoAmI;
																						player5.itemTime = 2;
																						player5.itemAnimation = 2;
																						return;
																					}
																					if (this.aiStyle == 101)
																					{
																						float num919 = 20f;
																						this.localAI[0] += 1f;
																						this.alpha = (int)MathHelper.Lerp(0f, 255f, this.localAI[0] / num919);
																						int num920 = (int)this.ai[0];
																						int num921 = -1;
																						int num922 = -1;
																						int num653 = this.type;
																						if (num653 != 536)
																						{
																							if (num653 == 591)
																							{
																								num922 = 1;
																							}
																						}
																						else
																						{
																							num921 = 535;
																							num922 = 0;
																						}
																						if (num922 == 1)
																						{
																							if (this.localAI[0] >= num919 || num920 < 0 || num920 > 255 || !Main.player[num920].active || Main.player[num920].dead)
																							{
																								this.Kill();
																								return;
																							}
																							if (this.type == 591)
																							{
																								base.Center = Mount.GetMinecartMechPoint(Main.player[num920], 20, -19) - this.velocity;
																								this.rotation = this.velocity.ToRotation() + 1.57079637f;
																								if (Math.Sign(this.velocity.X) != Math.Sign(Main.player[num920].velocity.X) && Main.player[num920].velocity.X != 0f)
																								{
																									this.Kill();
																									return;
																								}
																							}
																							else
																							{
																								base.Center = Main.player[num920].Center - this.velocity;
																							}
																						}
																						else if (num922 == 0)
																						{
																							if (this.localAI[0] >= num919 || num920 < 0 || num920 > 1000 || !Main.projectile[num920].active || Main.projectile[num920].type != num921)
																							{
																								this.Kill();
																								return;
																							}
																							base.Center = Main.projectile[num920].Center - this.velocity;
																						}
																						this.rotation = this.velocity.ToRotation() + 1.57079637f;
																						return;
																					}
																					if (this.aiStyle == 102)
																					{
																						int num923 = 0;
																						float num924 = 0f;
																						float x2 = 0f;
																						float y2 = 0f;
																						int num925 = -1;
																						int num926 = 0;
																						float num927 = 0f;
																						bool flag44 = true;
																						bool flag45 = false;
																						bool flag46 = false;
																						int num653 = this.type;
																						if (num653 != 539)
																						{
																							switch (num653)
																							{
																								case 573:
																									num923 = 424;
																									num924 = 90f;
																									num927 = 20f;
																									flag44 = false;
																									flag45 = true;
																									break;
																								case 574:
																									num923 = 420;
																									num924 = 180f;
																									x2 = 0.15f;
																									y2 = 0.075f;
																									num927 = 8f;
																									flag44 = false;
																									num925 = 576;
																									num926 = 65;
																									if (Main.expertMode)
																									{
																										num926 = 50;
																									}
																									flag46 = true;
																									break;
																							}
																						}
																						else
																						{
																							num923 = 407;
																							num924 = 210f;
																							x2 = 0.15f;
																							y2 = 0.075f;
																							num927 = 16f;
																						}
																						if (flag46)
																						{
																							int num928 = (int)this.ai[1];
																							if (!Main.npc[num928].active || Main.npc[num928].type != num923)
																							{
																								this.Kill();
																								return;
																							}
																							this.timeLeft = 2;
																						}
																						this.ai[0] += 1f;
																						if (this.ai[0] < num924)
																						{
																							bool flag47 = true;
																							int num929 = (int)this.ai[1];
																							if (Main.npc[num929].active && Main.npc[num929].type == num923)
																							{
																								if (!flag45 && Main.npc[num929].oldPos[1] != Vector2.Zero)
																								{
																									this.position += Main.npc[num929].position - Main.npc[num929].oldPos[1];
																								}
																							}
																							else
																							{
																								this.ai[0] = num924;
																								flag47 = false;
																							}
																							if (flag47 && !flag45)
																							{
																								this.velocity += new Vector2((float)Math.Sign(Main.npc[num929].Center.X - base.Center.X), (float)Math.Sign(Main.npc[num929].Center.Y - base.Center.Y)) * new Vector2(x2, y2);
																								if (this.velocity.Length() > 6f)
																								{
																									this.velocity *= 6f / this.velocity.Length();
																								}
																							}
																							if (this.type == 539)
																							{
																								if (Main.rand.Next(12) == 0)
																								{
																									int num930 = Dust.NewDust(base.Center, 8, 8, 180, 0f, 0f, 0, default(Color), 1f);
																									Main.dust[num930].position = base.Center;
																									Main.dust[num930].velocity *= 0.2f;
																									Main.dust[num930].noGravity = true;
																								}
																								if (++this.frameCounter >= 4)
																								{
																									this.frameCounter = 0;
																									if (++this.frame >= Main.projFrames[this.type])
																									{
																										this.frame = 0;
																									}
																								}
																								this.rotation = this.velocity.X * 0.1f;
																							}
																							if (this.type == 573)
																							{
																								if (Main.rand.Next(2) == 0)
																								{
																									int num931 = Dust.NewDust(base.Center, 8, 8, 242, 0f, 0f, 0, default(Color), 1f);
																									Main.dust[num931].position = base.Center;
																									Main.dust[num931].velocity = this.velocity;
																									Main.dust[num931].noGravity = true;
																									Main.dust[num931].scale = 1.5f;
																								}
																								this.alpha = 255;
																							}
																							if (this.type == 574)
																							{
																								if (Main.rand.Next(10) == 0)
																								{
																									int num932 = Dust.NewDust(base.Center, 8, 8, 242, 0f, 0f, 0, default(Color), 1f);
																									Main.dust[num932].position = base.Center;
																									Main.dust[num932].velocity = this.velocity;
																									Main.dust[num932].noGravity = true;
																									Main.dust[num932].scale = 1.5f;
																								}
																								if (flag47)
																								{
																									int target = Main.npc[num929].target;
																									float num933 = this.velocity.ToRotation();
																									if (Collision.CanHitLine(base.Center, 0, 0, Main.player[target].Center, 0, 0))
																									{
																										num933 = base.DirectionTo(Main.player[target].Center).ToRotation();
																									}
																									this.rotation = this.rotation.AngleLerp(num933 + 1.57079637f, 0.2f);
																								}
																								this.frame = 1;
																							}
																						}
																						if (this.ai[0] == num924)
																						{
																							bool flag48 = true;
																							int num934 = -1;
																							if (!flag44)
																							{
																								int num935 = (int)this.ai[1];
																								if (Main.npc[num935].active && Main.npc[num935].type == num923)
																								{
																									num934 = Main.npc[num935].target;
																								}
																								else
																								{
																									flag48 = false;
																								}
																							}
																							else
																							{
																								flag48 = false;
																							}
																							if (!flag48)
																							{
																								num934 = (int)Player.FindClosest(this.position, this.width, this.height);
																							}
																							Vector2 value58 = Main.player[num934].Center - base.Center;
																							value58.X += (float)Main.rand.Next(-50, 51);
																							value58.Y += (float)Main.rand.Next(-50, 51);
																							value58.X *= (float)Main.rand.Next(80, 121) * 0.01f;
																							value58.Y *= (float)Main.rand.Next(80, 121) * 0.01f;
																							Vector2 vector101 = Vector2.Normalize(value58);
																							if (vector101.HasNaNs())
																							{
																								vector101 = Vector2.UnitY;
																							}
																							if (num925 == -1)
																							{
																								this.velocity = vector101 * num927;
																								this.netUpdate = true;
																							}
																							else
																							{
																								if (Main.netMode != 1 && Collision.CanHitLine(base.Center, 0, 0, Main.player[num934].Center, 0, 0))
																								{
																									Projectile.NewProjectile(base.Center.X, base.Center.Y, vector101.X * num927, vector101.Y * num927, num925, num926, 1f, Main.myPlayer, 0f, 0f);
																								}
																								this.ai[0] = 0f;
																							}
																						}
																						if (this.ai[0] >= num924)
																						{
																							this.rotation = this.rotation.AngleLerp(this.velocity.ToRotation() + 1.57079637f, 0.4f);
																							if (this.type == 539)
																							{
																								if (++this.frameCounter >= 2)
																								{
																									this.frameCounter = 0;
																									if (++this.frame >= Main.projFrames[this.type])
																									{
																										this.frame = 0;
																									}
																								}
																								if (Main.rand.Next(2) == 0)
																								{
																									int num936 = Dust.NewDust(this.position, this.width, this.height, 180, 0f, 0f, 100, default(Color), 1f);
																									Main.dust[num936].scale += (float)Main.rand.Next(50) * 0.01f;
																									Main.dust[num936].noGravity = true;
																									Main.dust[num936].velocity *= 0.1f;
																									Main.dust[num936].fadeIn = Main.rand.NextFloat() * 1.5f;
																								}
																								if (Main.rand.Next(3) == 0)
																								{
																									int num937 = Dust.NewDust(this.position, this.width, this.height, 176, 0f, 0f, 100, default(Color), 1f);
																									Main.dust[num937].scale += 0.3f + (float)Main.rand.Next(50) * 0.01f;
																									Main.dust[num937].noGravity = true;
																									Main.dust[num937].velocity *= 0.1f;
																									Main.dust[num937].fadeIn = Main.rand.NextFloat() * 1.5f;
																								}
																							}
																							if (this.type == 573)
																							{
																								if (Main.rand.Next(4) == 0)
																								{
																									int num938 = Dust.NewDust(base.Center, 8, 8, 242, 0f, 0f, 0, default(Color), 1f);
																									Main.dust[num938].position = base.Center;
																									Main.dust[num938].velocity *= 0.2f;
																									Main.dust[num938].noGravity = true;
																									Main.dust[num938].scale = 1.5f;
																								}
																								this.alpha = 0;
																								return;
																							}
																						}
																					}
																					else if (this.aiStyle == 103)
																					{
																						this.scale = this.ai[1];
																						this.ai[0] += 1f;
																						if (this.ai[0] >= 30f)
																						{
																							this.alpha += 25;
																							if (this.alpha >= 250)
																							{
																								this.Kill();
																								return;
																							}
																						}
																						else if (this.ai[0] >= 0f)
																						{
																							this.alpha -= 25;
																							if (this.alpha < 0)
																							{
																								this.alpha = 0;
																								if (this.localAI[1] == 0f && Main.netMode != 1 && this.localAI[0] != 0f)
																								{
																									this.localAI[1] = 1f;
																									NPC.NewNPC((int)base.Center.X, (int)base.Bottom.Y, (int)this.localAI[0], 0, 0f, 0f, 0f, 0f, 255);
																									return;
																								}
																							}
																						}
																					}
																					else
																					{
																						if (this.aiStyle == 104)
																						{
																							if (this.ai[0] == 1f)
																							{
																								this.scale *= 0.995f;
																								this.alpha += 3;
																								if (this.alpha >= 250)
																								{
																									this.Kill();
																								}
																							}
																							else
																							{
																								this.scale *= 1.01f;
																								this.alpha -= 7;
																								if (this.alpha < 0)
																								{
																									this.alpha = 0;
																									this.ai[0] = 1f;
																								}
																							}
																							this.frameCounter++;
																							if (this.frameCounter > 6)
																							{
																								this.frameCounter = 0;
																								this.frame++;
																								if (this.frame > 3)
																								{
																									this.frame = 0;
																								}
																							}
																							this.velocity.Y = this.velocity.Y - 0.03f;
																							this.velocity.X = this.velocity.X * 0.97f;
																							return;
																						}
																						if (this.aiStyle == 105)
																						{
																							float num939 = 1f - (float)this.alpha / 255f;
																							num939 *= this.scale;
																							Lighting.AddLight(base.Center, 0.2f * num939, 0.275f * num939, 0.075f * num939);
																							this.localAI[0] += 1f;
																							if (this.localAI[0] >= 90f)
																							{
																								this.localAI[0] *= -1f;
																							}
																							if (this.localAI[0] >= 0f)
																							{
																								this.scale += 0.003f;
																							}
																							else
																							{
																								this.scale -= 0.003f;
																							}
																							this.rotation += 0.0025f * this.scale;
																							float num940 = 1f;
																							float num941 = 1f;
																							if (this.identity % 6 == 0)
																							{
																								num941 *= -1f;
																							}
																							if (this.identity % 6 == 1)
																							{
																								num940 *= -1f;
																							}
																							if (this.identity % 6 == 2)
																							{
																								num941 *= -1f;
																								num940 *= -1f;
																							}
																							if (this.identity % 6 == 3)
																							{
																								num941 = 0f;
																							}
																							if (this.identity % 6 == 4)
																							{
																								num940 = 0f;
																							}
																							this.localAI[1] += 1f;
																							if (this.localAI[1] > 60f)
																							{
																								this.localAI[1] = -180f;
																							}
																							if (this.localAI[1] >= -60f)
																							{
																								this.velocity.X = this.velocity.X + 0.002f * num941;
																								this.velocity.Y = this.velocity.Y + 0.002f * num940;
																							}
																							else
																							{
																								this.velocity.X = this.velocity.X - 0.002f * num941;
																								this.velocity.Y = this.velocity.Y - 0.002f * num940;
																							}
																							this.ai[0] += 1f;
																							if (this.ai[0] > 5400f)
																							{
																								this.damage = 0;
																								this.ai[1] = 1f;
																								if (this.alpha < 255)
																								{
																									this.alpha += 5;
																									if (this.alpha > 255)
																									{
																										this.alpha = 255;
																									}
																								}
																								else if (this.owner == Main.myPlayer)
																								{
																									this.Kill();
																								}
																							}
																							else
																							{
																								float num942 = (base.Center - Main.player[this.owner].Center).Length() / 100f;
																								if (num942 > 4f)
																								{
																									num942 *= 1.1f;
																								}
																								if (num942 > 5f)
																								{
																									num942 *= 1.2f;
																								}
																								if (num942 > 6f)
																								{
																									num942 *= 1.3f;
																								}
																								if (num942 > 7f)
																								{
																									num942 *= 1.4f;
																								}
																								if (num942 > 8f)
																								{
																									num942 *= 1.5f;
																								}
																								if (num942 > 9f)
																								{
																									num942 *= 1.6f;
																								}
																								if (num942 > 10f)
																								{
																									num942 *= 1.7f;
																								}
																								if (!Main.player[this.owner].sporeSac)
																								{
																									num942 += 100f;
																								}
																								this.ai[0] += num942;
																								if (this.alpha > 50)
																								{
																									this.alpha -= 10;
																									if (this.alpha < 50)
																									{
																										this.alpha = 50;
																									}
																								}
																							}
																							bool flag49 = false;
																							Vector2 center12 = new Vector2(0f, 0f);
																							float num943 = 280f;
																							for (int num944 = 0; num944 < 200; num944++)
																							{
																								if (Main.npc[num944].CanBeChasedBy(this, false))
																								{
																									float num945 = Main.npc[num944].position.X + (float)(Main.npc[num944].width / 2);
																									float num946 = Main.npc[num944].position.Y + (float)(Main.npc[num944].height / 2);
																									float num947 = Math.Abs(this.position.X + (float)(this.width / 2) - num945) + Math.Abs(this.position.Y + (float)(this.height / 2) - num946);
																									if (num947 < num943)
																									{
																										num943 = num947;
																										center12 = Main.npc[num944].Center;
																										flag49 = true;
																									}
																								}
																							}
																							if (flag49)
																							{
																								Vector2 vector102 = center12 - base.Center;
																								vector102.Normalize();
																								vector102 *= 0.75f;
																								this.velocity = (this.velocity * 10f + vector102) / 11f;
																								return;
																							}
																							if ((double)this.velocity.Length() > 0.2)
																							{
																								this.velocity *= 0.98f;
																								return;
																							}
																						}
																						else if (this.aiStyle == 106)
																						{
																							this.rotation += this.velocity.X * 0.02f;
																							if (this.velocity.X < 0f)
																							{
																								this.rotation -= Math.Abs(this.velocity.Y) * 0.02f;
																							}
																							else
																							{
																								this.rotation += Math.Abs(this.velocity.Y) * 0.02f;
																							}
																							this.velocity *= 0.98f;
																							this.ai[0] += 1f;
																							if (this.ai[0] >= 60f)
																							{
																								if (this.alpha < 255)
																								{
																									this.alpha += 5;
																									if (this.alpha > 255)
																									{
																										this.alpha = 255;
																										return;
																									}
																								}
																								else if (this.owner == Main.myPlayer)
																								{
																									this.Kill();
																									return;
																								}
																							}
																							else if (this.alpha > 80)
																							{
																								this.alpha -= 30;
																								if (this.alpha < 80)
																								{
																									this.alpha = 80;
																									return;
																								}
																							}
																						}
																						else if (this.aiStyle == 107)
																						{
																							float num948 = 10f;
																							float scaleFactor11 = 5f;
																							float num949 = 40f;
																							if (this.type == 575)
																							{
																								if (this.timeLeft > 30 && this.alpha > 0)
																								{
																									this.alpha -= 25;
																								}
																								if (this.timeLeft > 30 && this.alpha < 128 && Collision.SolidCollision(this.position, this.width, this.height))
																								{
																									this.alpha = 128;
																								}
																								if (this.alpha < 0)
																								{
																									this.alpha = 0;
																								}
																								if (++this.frameCounter > 4)
																								{
																									this.frameCounter = 0;
																									if (++this.frame >= 4)
																									{
																										this.frame = 0;
																									}
																								}
																								Lighting.AddLight(base.Center, 0.5f, 0.1f, 0.3f);
																							}
																							else if (this.type == 596)
																							{
																								num948 = 10f;
																								scaleFactor11 = 7.5f;
																								if (this.timeLeft > 30 && this.alpha > 0)
																								{
																									this.alpha -= 25;
																								}
																								if (this.timeLeft > 30 && this.alpha < 128 && Collision.SolidCollision(this.position, this.width, this.height))
																								{
																									this.alpha = 128;
																								}
																								if (this.alpha < 0)
																								{
																									this.alpha = 0;
																								}
																								if (++this.frameCounter > 4)
																								{
																									this.frameCounter = 0;
																									if (++this.frame >= 4)
																									{
																										this.frame = 0;
																									}
																								}
																								float num950 = 0.5f;
																								if (this.timeLeft < 120)
																								{
																									num950 = 1.1f;
																								}
																								if (this.timeLeft < 60)
																								{
																									num950 = 1.6f;
																								}
																								this.ai[1] += 1f;
																								float arg_286B4_0 = this.ai[1] / 180f;
																								for (float num951 = 0f; num951 < 3f; num951 += 1f)
																								{
																									if (Main.rand.Next(3) != 0)
																									{
																										return;
																									}
																									Dust dust11 = Main.dust[Dust.NewDust(base.Center, 0, 0, 27, 0f, -2f, 0, default(Color), 1f)];
																									dust11.position = base.Center + Vector2.UnitY.RotatedBy((double)(num951 * 6.28318548f / 3f + this.ai[1]), default(Vector2)) * 10f;
																									dust11.noGravity = true;
																									dust11.velocity = base.DirectionFrom(dust11.position);
																									dust11.scale = num950;
																									dust11.fadeIn = 0.5f;
																									dust11.alpha = 200;
																								}
																								if (this.timeLeft < 4)
																								{
																									int num952 = 40;
																									if (Main.expertMode)
																									{
																										num952 = 30;
																									}
																									this.position = base.Center;
																									this.width = (this.height = 60);
																									base.Center = this.position;
																									this.damage = num952;
																									for (int num953 = 0; num953 < 10; num953++)
																									{
																										Dust dust11 = Main.dust[Dust.NewDust(this.position, this.width, this.height, Utils.SelectRandom<int>(Main.rand, new int[]
																													{
																														27,
																														6
																													}), 0f, -2f, 0, default(Color), 1f)];
																										dust11.noGravity = true;
																										if (dust11.position != base.Center)
																										{
																											dust11.velocity = base.DirectionTo(dust11.position) * 3f;
																										}
																									}
																								}
																							}
																							int num954 = (int)this.ai[0];
																							if (num954 >= 0 && Main.player[num954].active && !Main.player[num954].dead)
																							{
																								if (base.Distance(Main.player[num954].Center) > num949)
																								{
																									Vector2 vector103 = base.DirectionTo(Main.player[num954].Center);
																									if (vector103.HasNaNs())
																									{
																										vector103 = Vector2.UnitY;
																									}
																									this.velocity = (this.velocity * (num948 - 1f) + vector103 * scaleFactor11) / num948;
																									return;
																								}
																							}
																							else
																							{
																								if (this.timeLeft > 30)
																								{
																									this.timeLeft = 30;
																								}
																								if (this.ai[0] != -1f)
																								{
																									this.ai[0] = -1f;
																									this.netUpdate = true;
																									return;
																								}
																							}
																						}
																						else if (this.aiStyle == 108)
																						{
																							if (this.type == 578 && this.localAI[0] == 0f)
																							{
																								this.localAI[0] = 1f;
																								int num955 = (int)Player.FindClosest(base.Center, 0, 0);
																								Vector2 vector104 = Main.player[num955].Center - base.Center;
																								if (vector104 == Vector2.Zero)
																								{
																									vector104 = Vector2.UnitY;
																								}
																								this.ai[1] = vector104.ToRotation();
																								this.netUpdate = true;
																							}
																							this.ai[0] += 1f;
																							if (this.ai[0] <= 50f)
																							{
																								if (this.type == 579)
																								{
																									if (Main.rand.Next(4) == 0)
																									{
																										Vector2 vector105 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
																										Dust dust12 = Main.dust[Dust.NewDust(base.Center - vector105 * 30f, 0, 0, 229, 0f, 0f, 0, default(Color), 1f)];
																										dust12.noGravity = true;
																										dust12.position = base.Center - vector105 * (float)Main.rand.Next(10, 21);
																										dust12.velocity = vector105.RotatedBy(1.5707963705062866, default(Vector2)) * 4f;
																										dust12.scale = 0.5f + Main.rand.NextFloat();
																										dust12.fadeIn = 0.5f;
																									}
																									if (Main.rand.Next(4) == 0)
																									{
																										Vector2 vector106 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
																										Dust dust13 = Main.dust[Dust.NewDust(base.Center - vector106 * 30f, 0, 0, 240, 0f, 0f, 0, default(Color), 1f)];
																										dust13.noGravity = true;
																										dust13.position = base.Center - vector106 * 30f;
																										dust13.velocity = vector106.RotatedBy(-1.5707963705062866, default(Vector2)) * 2f;
																										dust13.scale = 0.5f + Main.rand.NextFloat();
																										dust13.fadeIn = 0.5f;
																									}
																								}
																								if (this.type == 578 && Main.rand.Next(2) == 0)
																								{
																									Vector2 vector107 = this.ai[1].ToRotationVector2();
																									Vector2 vector108 = vector107.RotatedBy(1.5707963705062866, default(Vector2)) * (float)(Main.rand.Next(2) == 0).ToDirectionInt() * (float)Main.rand.Next(10, 21);
																									Vector2 value59 = vector107 * (float)Main.rand.Next(-80, 81);
																									Vector2 vector109 = value59 - vector108;
																									vector109 /= 10f;
																									int num956 = 229;
																									Dust dust14 = Main.dust[Dust.NewDust(base.Center, 0, 0, num956, 0f, 0f, 0, default(Color), 1f)];
																									dust14.noGravity = true;
																									dust14.position = base.Center + vector108;
																									dust14.velocity = vector109;
																									dust14.scale = 0.5f + Main.rand.NextFloat();
																									dust14.fadeIn = 0.5f;
																									value59 = vector107 * (float)Main.rand.Next(40, 121);
																									vector109 = value59 - vector108 / 2f;
																									vector109 /= 10f;
																									dust14 = Main.dust[Dust.NewDust(base.Center, 0, 0, num956, 0f, 0f, 0, default(Color), 1f)];
																									dust14.noGravity = true;
																									dust14.position = base.Center + vector108 / 2f;
																									dust14.velocity = vector109;
																									dust14.scale = 1f + Main.rand.NextFloat();
																									return;
																								}
																							}
																							else if (this.ai[0] <= 90f)
																							{
																								this.scale = (this.ai[0] - 50f) / 40f;
																								this.alpha = 255 - (int)(255f * this.scale);
																								this.rotation -= 0.157079637f;
																								if (this.type == 579)
																								{
																									if (Main.rand.Next(2) == 0)
																									{
																										Vector2 vector110 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
																										Dust dust15 = Main.dust[Dust.NewDust(base.Center - vector110 * 30f, 0, 0, 229, 0f, 0f, 0, default(Color), 1f)];
																										dust15.noGravity = true;
																										dust15.position = base.Center - vector110 * (float)Main.rand.Next(10, 21);
																										dust15.velocity = vector110.RotatedBy(1.5707963705062866, default(Vector2)) * 6f;
																										dust15.scale = 0.5f + Main.rand.NextFloat();
																										dust15.fadeIn = 0.5f;
																										dust15.customData = base.Center;
																									}
																									if (Main.rand.Next(2) == 0)
																									{
																										Vector2 vector111 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
																										Dust dust16 = Main.dust[Dust.NewDust(base.Center - vector111 * 30f, 0, 0, 240, 0f, 0f, 0, default(Color), 1f)];
																										dust16.noGravity = true;
																										dust16.position = base.Center - vector111 * 30f;
																										dust16.velocity = vector111.RotatedBy(-1.5707963705062866, default(Vector2)) * 3f;
																										dust16.scale = 0.5f + Main.rand.NextFloat();
																										dust16.fadeIn = 0.5f;
																										dust16.customData = base.Center;
																									}
																								}
																								if (this.type == 578)
																								{
																									Vector2 vector112 = this.ai[1].ToRotationVector2();
																									Vector2 value60 = vector112.RotatedBy(1.5707963705062866, default(Vector2)) * (float)(Main.rand.Next(2) == 0).ToDirectionInt() * (float)Main.rand.Next(10, 21);
																									vector112 *= (float)Main.rand.Next(-80, 81);
																									Vector2 vector113 = vector112 - value60;
																									vector113 /= 10f;
																									int num957 = Utils.SelectRandom<int>(Main.rand, new int[]
																										{
																											229,
																											229
																										});
																									Dust dust17 = Main.dust[Dust.NewDust(base.Center, 0, 0, num957, 0f, 0f, 0, default(Color), 1f)];
																									dust17.noGravity = true;
																									dust17.position = base.Center + value60;
																									dust17.velocity = vector113;
																									dust17.scale = 0.5f + Main.rand.NextFloat();
																									dust17.fadeIn = 0.5f;
																									if (this.ai[0] == 90f && Main.netMode != 1)
																									{
																										Vector2 vector114 = this.ai[1].ToRotationVector2() * 8f;
																										float ai2 = (float)Main.rand.Next(80);
																										Projectile.NewProjectile(base.Center.X - vector114.X, base.Center.Y - vector114.Y, vector114.X, vector114.Y, 580, 15, 1f, Main.myPlayer, this.ai[1], ai2);
																										return;
																									}
																								}
																								else if (this.type == 579 && this.ai[0] == 90f && Main.netMode != 1)
																								{
																									for (int num958 = 0; num958 < 2; num958++)
																									{
																										int num959 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 427, this.whoAmI, 0f, 0f, 0f, 0f, 255);
																										Main.npc[num959].velocity = -Vector2.UnitY.RotatedByRandom(6.2831854820251465) * (float)Main.rand.Next(4, 9) - Vector2.UnitY * 2f;
																										Main.npc[num959].netUpdate = true;
																									}
																									return;
																								}
																							}
																							else
																							{
																								if (this.ai[0] > 120f)
																								{
																									this.scale = 1f - (this.ai[0] - 120f) / 60f;
																									this.alpha = 255 - (int)(255f * this.scale);
																									this.rotation -= 0.104719758f;
																									if (this.alpha >= 255)
																									{
																										this.Kill();
																									}
																									for (int num960 = 0; num960 < 2; num960++)
																									{
																										int num961 = Main.rand.Next(3);
																										if (num961 == 0)
																										{
																											Vector2 vector115 = Vector2.UnitY.RotatedByRandom(6.2831854820251465) * this.scale;
																											Dust dust18 = Main.dust[Dust.NewDust(base.Center - vector115 * 30f, 0, 0, 229, 0f, 0f, 0, default(Color), 1f)];
																											dust18.noGravity = true;
																											dust18.position = base.Center - vector115 * (float)Main.rand.Next(10, 21);
																											dust18.velocity = vector115.RotatedBy(1.5707963705062866, default(Vector2)) * 6f;
																											dust18.scale = 0.5f + Main.rand.NextFloat();
																											dust18.fadeIn = 0.5f;
																											dust18.customData = base.Center;
																										}
																										else if (num961 == 1)
																										{
																											Vector2 vector116 = Vector2.UnitY.RotatedByRandom(6.2831854820251465) * this.scale;
																											Dust dust19 = Main.dust[Dust.NewDust(base.Center - vector116 * 30f, 0, 0, 240, 0f, 0f, 0, default(Color), 1f)];
																											dust19.noGravity = true;
																											dust19.position = base.Center - vector116 * 30f;
																											dust19.velocity = vector116.RotatedBy(-1.5707963705062866, default(Vector2)) * 3f;
																											dust19.scale = 0.5f + Main.rand.NextFloat();
																											dust19.fadeIn = 0.5f;
																											dust19.customData = base.Center;
																										}
																									}
																									return;
																								}
																								this.scale = 1f;
																								this.alpha = 0;
																								this.rotation -= 0.05235988f;
																								if (Main.rand.Next(2) == 0)
																								{
																									Vector2 vector117 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
																									Dust dust20 = Main.dust[Dust.NewDust(base.Center - vector117 * 30f, 0, 0, 229, 0f, 0f, 0, default(Color), 1f)];
																									dust20.noGravity = true;
																									dust20.position = base.Center - vector117 * (float)Main.rand.Next(10, 21);
																									dust20.velocity = vector117.RotatedBy(1.5707963705062866, default(Vector2)) * 6f;
																									dust20.scale = 0.5f + Main.rand.NextFloat();
																									dust20.fadeIn = 0.5f;
																									dust20.customData = base.Center;
																									return;
																								}
																								Vector2 vector118 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
																								Dust dust21 = Main.dust[Dust.NewDust(base.Center - vector118 * 30f, 0, 0, 240, 0f, 0f, 0, default(Color), 1f)];
																								dust21.noGravity = true;
																								dust21.position = base.Center - vector118 * 30f;
																								dust21.velocity = vector118.RotatedBy(-1.5707963705062866, default(Vector2)) * 3f;
																								dust21.scale = 0.5f + Main.rand.NextFloat();
																								dust21.fadeIn = 0.5f;
																								dust21.customData = base.Center;
																								return;
																							}
																						}
																						else
																						{
																							if (this.aiStyle == 109)
																							{
																								if (this.localAI[1] == 0f)
																								{
																									this.localAI[1] = this.velocity.Length();
																								}
																								if (this.ai[0] == 0f)
																								{
																									this.localAI[0] += 1f;
																									if (this.localAI[0] > 30f)
																									{
																										this.ai[0] = 1f;
																										this.localAI[0] = 0f;
																										return;
																									}
																								}
																								else if (this.ai[0] == 1f)
																								{
																									Vector2 value61 = Vector2.Zero;
																									if (this.type != 582 || !Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].type != 124)
																									{
																										this.Kill();
																										return;
																									}
																									value61 = Main.npc[(int)this.ai[1]].Center;
																									this.tileCollide = false;
																									float num962 = this.localAI[1];
																									Vector2 vector119 = value61 - base.Center;
																									if (vector119.Length() < num962)
																									{
																										this.Kill();
																										return;
																									}
																									vector119.Normalize();
																									vector119 *= num962;
																									this.velocity = Vector2.Lerp(this.velocity, vector119, 0.04f);
																								}
																								this.rotation += 0.314159274f;
																								return;
																							}
																							if (this.aiStyle == 110)
																							{
																								if (this.localAI[1] == 0f)
																								{
																									this.localAI[1] = this.velocity.Length();
																								}
																								Vector2 value62 = Vector2.Zero;
																								if (!Main.npc[(int)this.ai[0]].active || !Main.npc[(int)this.ai[0]].townNPC)
																								{
																									this.Kill();
																									return;
																								}
																								value62 = Main.npc[(int)this.ai[0]].Center;
																								float num963 = this.localAI[1];
																								Vector2 vector120 = value62 - base.Center;
																								if (vector120.Length() < num963 || base.Hitbox.Intersects(Main.npc[(int)this.ai[0]].Hitbox))
																								{
																									this.Kill();
																									int num964 = Main.npc[(int)this.ai[0]].lifeMax - Main.npc[(int)this.ai[0]].life;
																									if (num964 > 20)
																									{
																										num964 = 20;
																									}
																									if (num964 > 0)
																									{
																										Main.npc[(int)this.ai[0]].life += num964;
																										Main.npc[(int)this.ai[0]].HealEffect(num964, true);
																									}
																									return;
																								}
																								vector120.Normalize();
																								vector120 *= num963;
																								if (vector120.Y < this.velocity.Y)
																								{
																									vector120.Y = this.velocity.Y;
																								}
																								vector120.Y += 1f;
																								this.velocity = Vector2.Lerp(this.velocity, vector120, 0.04f);
																								this.rotation += this.velocity.X * 0.05f;
																								return;
																							}
																							else if (this.aiStyle == 111)
																							{
																								if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].type != 20 || Main.npc[(int)this.ai[1]].ai[0] != 14f)
																								{
																									this.Kill();
																									return;
																								}
																								this.ai[0] += 1f;
																								this.rotation += 0.0104719754f;
																								this.scale = this.ai[0] / 100f;
																								if (this.scale > 1f)
																								{
																									this.scale = 1f;
																								}
																								this.alpha = (int)(255f * (1f - this.scale));
																								float num965 = 300f;
																								if (this.ai[0] >= 100f)
																								{
																									num965 = MathHelper.Lerp(300f, 600f, (this.ai[0] - 100f) / 200f);
																								}
																								if (num965 > 600f)
																								{
																									num965 = 600f;
																								}
																								if (this.ai[0] >= 500f)
																								{
																									this.alpha = (int)MathHelper.Lerp(0f, 255f, (this.ai[0] - 500f) / 100f);
																									num965 = MathHelper.Lerp(600f, 1200f, (this.ai[0] - 500f) / 100f);
																									this.rotation += 0.0104719754f;
																								}
																								if (Main.rand.Next(4) == 0)
																								{
																									float scaleFactor12 = num965;
																									Vector2 value63 = new Vector2((float)Main.rand.Next(-10, 11), (float)Main.rand.Next(-10, 11));
																									float num966 = (float)Main.rand.Next(3, 9);
																									value63.Normalize();
																									int num967 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 163, 0f, 0f, 100, default(Color), 1f);
																									Main.dust[num967].noGravity = true;
																									Main.dust[num967].position = base.Center + value63 * scaleFactor12;
																									if (Main.rand.Next(8) == 0)
																									{
																										Main.dust[num967].velocity = value63 * -num966 * 3f;
																										Main.dust[num967].scale += 0.5f;
																									}
																									else
																									{
																										Main.dust[num967].velocity = value63 * -num966;
																									}
																								}
																								if (Main.rand.Next(2) == 0)
																								{
																									Vector2 value64 = new Vector2((float)Main.rand.Next(-10, 11), (float)Main.rand.Next(-10, 11));
																									float num968 = (float)Main.rand.Next(3, 9);
																									value64.Normalize();
																									int num969 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 163, 0f, 0f, 100, default(Color), 1.5f);
																									Main.dust[num969].noGravity = true;
																									Main.dust[num969].position = base.Center + value64 * 30f;
																									if (Main.rand.Next(8) == 0)
																									{
																										Main.dust[num969].velocity = value64 * -num968 * 3f;
																										Main.dust[num969].scale += 0.5f;
																									}
																									else
																									{
																										Main.dust[num969].velocity = value64 * -num968;
																									}
																								}
																								if (this.ai[0] >= 30f && Main.netMode != 2)
																								{
																									Player player6 = Main.player[Main.myPlayer];
																									if (player6.active && !player6.dead && base.Distance(player6.Center) <= num965 && player6.HasBuff(165) == -1)
																									{
																										player6.AddBuff(165, 120, true);
																									}
																								}
																								if (this.ai[0] >= 30f && this.ai[0] % 10f == 0f && Main.netMode != 1)
																								{
																									for (int num970 = 0; num970 < 200; num970++)
																									{
																										NPC nPC10 = Main.npc[num970];
																										if (nPC10.type != 488 && nPC10.active && base.Distance(nPC10.Center) <= num965)
																										{
																											if (nPC10.townNPC && (nPC10.HasBuff(165) == -1 || nPC10.buffTime[nPC10.HasBuff(165)] <= 20))
																											{
																												nPC10.AddBuff(165, 120, false);
																											}
																											else if (!nPC10.friendly && nPC10.lifeMax > 5 && !nPC10.dontTakeDamage && (nPC10.HasBuff(186) == -1 || nPC10.buffTime[nPC10.HasBuff(186)] <= 20) && (nPC10.dryadBane || Collision.CanHit(base.Center, 1, 1, nPC10.position, nPC10.width, nPC10.height)))
																											{
																												nPC10.AddBuff(186, 120, false);
																											}
																										}
																									}
																								}
																								if (this.ai[0] >= 570f)
																								{
																									this.Kill();
																									return;
																								}
																							}
																							else if (this.aiStyle == 112)
																							{
																								if (this.type == 590)
																								{
																									if (++this.frameCounter >= 4)
																									{
																										this.frameCounter = 0;
																										if (++this.frame >= 3)
																										{
																											this.frame = 0;
																										}
																									}
																									if (this.alpha > 0)
																									{
																										this.alpha -= 15;
																									}
																									if (this.alpha < 0)
																									{
																										this.alpha = 0;
																									}
																									if (this.alpha == 0)
																									{
																										float num971 = (float)Main.rand.Next(28, 42) * 0.005f;
																										num971 += (float)(270 - (int)Main.mouseTextColor) / 500f;
																										float num972 = 0.1f;
																										float num973 = 0.3f + num971 / 2f;
																										float num974 = 0.6f + num971;
																										float num975 = 0.35f;
																										num972 *= num975;
																										num973 *= num975;
																										num974 *= num975;
																										Lighting.AddLight(base.Center, num972, num973, num974);
																									}
																									this.velocity = new Vector2(0f, (float)Math.Sin((double)(6.28318548f * this.ai[0] / 180f)) * 0.15f);
																									this.ai[0] += 1f;
																									if (this.ai[0] >= 180f)
																									{
																										this.ai[0] = 0f;
																									}
																								}
																								if (this.type == 644)
																								{
																									Color newColor2 = Main.hslToRgb(this.ai[0], 1f, 0.5f);
																									int num976 = (int)this.ai[1];
																									if (num976 < 0 || num976 >= 1000 || (!Main.projectile[num976].active && Main.projectile[num976].type != 643))
																									{
																										this.ai[1] = -1f;
																									}
																									else
																									{
																										DelegateMethods.v3_1 = newColor2.ToVector3() * 0.5f;
																										Utils.PlotTileLine(base.Center, Main.projectile[num976].Center, 8f, new Utils.PerLinePoint(DelegateMethods.CastLight));
																									}
																									if (this.localAI[0] == 0f)
																									{
																										this.localAI[0] = Main.rand.NextFloat() * 0.8f + 0.8f;
																										this.direction = ((Main.rand.Next(2) > 0) ? 1 : -1);
																									}
																									this.rotation = this.localAI[1] / 40f * 6.28318548f * (float)this.direction;
																									if (this.alpha > 0)
																									{
																										this.alpha -= 8;
																									}
																									if (this.alpha < 0)
																									{
																										this.alpha = 0;
																									}
																									if (this.alpha == 0)
																									{
																										Lighting.AddLight(base.Center, newColor2.ToVector3() * 0.5f);
																									}
																									for (int num977 = 0; num977 < 2; num977++)
																									{
																										if (Main.rand.Next(10) == 0)
																										{
																											Vector2 value65 = Vector2.UnitY.RotatedBy((double)((float)num977 * 3.14159274f), default(Vector2)).RotatedBy((double)this.rotation, default(Vector2));
																											Dust dust22 = Main.dust[Dust.NewDust(base.Center, 0, 0, 267, 0f, 0f, 225, newColor2, 1.5f)];
																											dust22.noGravity = true;
																											dust22.noLight = true;
																											dust22.scale = this.Opacity * this.localAI[0];
																											dust22.position = base.Center;
																											dust22.velocity = value65 * 2.5f;
																										}
																									}
																									for (int num978 = 0; num978 < 2; num978++)
																									{
																										if (Main.rand.Next(10) == 0)
																										{
																											Vector2 value66 = Vector2.UnitY.RotatedBy((double)((float)num978 * 3.14159274f), default(Vector2));
																											Dust dust23 = Main.dust[Dust.NewDust(base.Center, 0, 0, 267, 0f, 0f, 225, newColor2, 1.5f)];
																											dust23.noGravity = true;
																											dust23.noLight = true;
																											dust23.scale = this.Opacity * this.localAI[0];
																											dust23.position = base.Center;
																											dust23.velocity = value66 * 2.5f;
																										}
																									}
																									if (Main.rand.Next(10) == 0)
																									{
																										float scaleFactor13 = 1f + Main.rand.NextFloat() * 2f;
																										float fadeIn = 1f + Main.rand.NextFloat();
																										float num979 = 1f + Main.rand.NextFloat();
																										Vector2 vector121 = Utils.RandomVector2(Main.rand, -1f, 1f);
																										if (vector121 != Vector2.Zero)
																										{
																											vector121.Normalize();
																										}
																										vector121 *= 20f + Main.rand.NextFloat() * 100f;
																										Vector2 vector122 = base.Center + vector121;
																										Point point3 = vector122.ToTileCoordinates();
																										bool flag50 = true;
																										if (!WorldGen.InWorld(point3.X, point3.Y, 0))
																										{
																											flag50 = false;
																										}
																										if (flag50 && WorldGen.SolidTile(point3.X, point3.Y))
																										{
																											flag50 = false;
																										}
																										if (flag50)
																										{
																											Dust dust24 = Main.dust[Dust.NewDust(vector122, 0, 0, 267, 0f, 0f, 127, newColor2, 1f)];
																											dust24.noGravity = true;
																											dust24.position = vector122;
																											dust24.velocity = -Vector2.UnitY * scaleFactor13 * (Main.rand.NextFloat() * 0.9f + 1.6f);
																											dust24.fadeIn = fadeIn;
																											dust24.scale = num979;
																											dust24.noLight = true;
																											Dust dust25 = Dust.CloneDust(dust24);
																											dust25.scale *= 0.65f;
																											dust25.fadeIn *= 0.65f;
																											dust25.color = new Color(255, 255, 255, 255);
																										}
																									}
																									this.scale = this.Opacity / 2f * this.localAI[0];
																									this.velocity = Vector2.Zero;
																									this.localAI[1] += 1f;
																									if (this.localAI[1] >= 60f)
																									{
																										this.Kill();
																										return;
																									}
																								}
																							}
																							else if (this.aiStyle == 113)
																							{
																								int num980 = 25;
																								if (this.type == 614)
																								{
																									num980 = 63;
																								}
																								if (this.alpha > 0)
																								{
																									this.alpha -= num980;
																								}
																								if (this.alpha < 0)
																								{
																									this.alpha = 0;
																								}
																								if (this.ai[0] == 0f)
																								{
																									bool flag51 = this.type == 614;
																									if (flag51)
																									{
																										int num981 = (int)this.ai[1];
																										if (!Main.npc[num981].active)
																										{
																											this.Kill();
																											return;
																										}
																										this.velocity.ToRotation();
																										Vector2 vector123 = Main.npc[num981].Center - base.Center;
																										if (vector123 != Vector2.Zero)
																										{
																											vector123.Normalize();
																											vector123 *= 14f;
																										}
																										float num982 = 5f;
																										this.velocity = (this.velocity * (num982 - 1f) + vector123) / num982;
																									}
																									else
																									{
																										this.ai[1] += 1f;
																										if (this.ai[1] >= 45f)
																										{
																											float num983 = 0.98f;
																											float num984 = 0.35f;
																											if (this.type == 636)
																											{
																												num983 = 0.995f;
																												num984 = 0.15f;
																											}
																											this.ai[1] = 45f;
																											this.velocity.X = this.velocity.X * num983;
																											this.velocity.Y = this.velocity.Y + num984;
																										}
																										this.rotation = this.velocity.ToRotation() + 1.57079637f;
																									}
																								}
																								if (this.ai[0] == 1f)
																								{
																									this.ignoreWater = true;
																									this.tileCollide = false;
																									int num985 = 15;
																									if (this.type == 636)
																									{
																										num985 = 5 * this.MaxUpdates;
																									}
																									bool flag52 = false;
																									bool flag53 = false;
																									this.localAI[0] += 1f;
																									if (this.localAI[0] % 30f == 0f)
																									{
																										flag53 = true;
																									}
																									int num986 = (int)this.ai[1];
																									if (this.localAI[0] >= (float)(60 * num985))
																									{
																										flag52 = true;
																									}
																									else if (num986 < 0 || num986 >= 200)
																									{
																										flag52 = true;
																									}
																									else if (Main.npc[num986].active && !Main.npc[num986].dontTakeDamage)
																									{
																										base.Center = Main.npc[num986].Center - this.velocity * 2f;
																										this.gfxOffY = Main.npc[num986].gfxOffY;
																										if (flag53)
																										{
																											Main.npc[num986].HitEffect(0, 1.0);
																										}
																									}
																									else
																									{
																										flag52 = true;
																									}
																									if (flag52)
																									{
																										this.Kill();
																									}
																								}
																								if (this.type == 614)
																								{
																									Lighting.AddLight(base.Center, 0.2f, 0.6f, 0.7f);
																								}
																								if (this.type == 636)
																								{
																									Lighting.AddLight(base.Center, 0.8f, 0.7f, 0.4f);
																									return;
																								}
																							}
																							else if (this.aiStyle == 114)
																							{
																								if (Main.netMode == 2 && this.localAI[0] == 0f)
																								{
																									PortalHelper.SyncPortalSections(base.Center, 1);
																									this.localAI[0] = 1f;
																								}
																								this.timeLeft = 3;
																								bool flag54 = false;
																								if (this.owner != 255 && (!Main.player[this.owner].active || Main.player[this.owner].dead || base.Distance(Main.player[this.owner].Center) > 12800f))
																								{
																									flag54 = true;
																								}
																								if (!flag54 && !WorldGen.InWorld((int)base.Center.X / 16, (int)base.Center.Y / 16, Lighting.offScreenTiles))
																								{
																									flag54 = true;
																								}
																								if (!flag54 && !PortalHelper.SupportedTilesAreFine(base.Center, this.ai[0]))
																								{
																									flag54 = true;
																								}
																								if (flag54)
																								{
																									this.Kill();
																									return;
																								}
																								Color portalColor = PortalHelper.GetPortalColor(this.owner, (int)this.ai[1]);
																								this.alpha -= 25;
																								if (this.alpha < 0)
																								{
																									this.alpha = 0;
																								}
																								if (this.alpha == 0)
																								{
																									Lighting.AddLight(base.Center + this.velocity * 3f, portalColor.ToVector3() * 0.5f);
																								}
																								if (++this.frameCounter >= 6)
																								{
																									this.frameCounter = 0;
																									if (++this.frame >= Main.projFrames[this.type])
																									{
																										this.frame = 0;
																									}
																								}
																								this.rotation = this.ai[0] - 1.57079637f;
																								return;
																							}
																							else if (this.aiStyle == 115)
																							{
																								Lighting.AddLight(base.Center, new Vector3(0.075f, 0.3f, 0.15f));
																								this.velocity *= 0.985f;
																								this.rotation += this.velocity.X * 0.2f;
																								if (this.velocity.X > 0f)
																								{
																									this.rotation += 0.08f;
																								}
																								else
																								{
																									this.rotation -= 0.08f;
																								}
																								this.ai[1] += 1f;
																								if (this.ai[1] > 30f)
																								{
																									this.alpha += 10;
																									if (this.alpha >= 255)
																									{
																										this.alpha = 255;
																										this.Kill();
																										return;
																									}
																								}
																							}
																							else
																							{
																								if (this.aiStyle == 116)
																								{
																									if (this.localAI[0] == 0f)
																									{
																										this.rotation = this.ai[1];
																										this.localAI[0] = 1f;
																									}
																									Player player7 = Main.player[this.owner];
																									if (player7.setSolar)
																									{
																										this.timeLeft = 2;
																									}
																									float num987 = (float)player7.miscCounter / 300f * 12.566371f + this.ai[1];
																									num987 = MathHelper.WrapAngle(num987);
																									this.rotation = this.rotation.AngleLerp(num987, 0.05f);
																									this.alpha -= 15;
																									if (this.alpha < 0)
																									{
																										this.alpha = 0;
																									}
																									this.velocity = this.rotation.ToRotationVector2() * 100f - player7.velocity;
																									base.Center = player7.Center - this.velocity;
																									return;
																								}
																								if (this.aiStyle == 117)
																								{
																									this.ai[1] += 0.01f;
																									this.scale = this.ai[1];
																									this.ai[0] += 1f;
																									if (this.ai[0] >= (float)(3 * Main.projFrames[this.type]))
																									{
																										this.Kill();
																										return;
																									}
																									if (++this.frameCounter >= 3)
																									{
																										this.frameCounter = 0;
																										if (++this.frame >= Main.projFrames[this.type])
																										{
																											this.hide = true;
																										}
																									}
																									this.alpha -= 63;
																									if (this.alpha < 0)
																									{
																										this.alpha = 0;
																									}
																									bool flag55 = this.type == 612;
																									bool flag56 = this.type == 624;
																									if (flag55)
																									{
																										Lighting.AddLight(base.Center, 0.9f, 0.8f, 0.6f);
																									}
																									if (this.ai[0] == 1f)
																									{
																										this.position = base.Center;
																										this.width = (this.height = (int)(52f * this.scale));
																										base.Center = this.position;
																										this.Damage();
																										if (flag55)
																										{
																											Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
																											for (int num988 = 0; num988 < 4; num988++)
																											{
																												int num989 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
																												Main.dust[num989].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
																											}
																											for (int num990 = 0; num990 < 10; num990++)
																											{
																												int num991 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 200, default(Color), 2.7f);
																												Main.dust[num991].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
																												Main.dust[num991].noGravity = true;
																												Main.dust[num991].velocity *= 3f;
																												num991 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
																												Main.dust[num991].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
																												Main.dust[num991].velocity *= 2f;
																												Main.dust[num991].noGravity = true;
																												Main.dust[num991].fadeIn = 2.5f;
																											}
																											for (int num992 = 0; num992 < 5; num992++)
																											{
																												int num993 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 0, default(Color), 2.7f);
																												Main.dust[num993].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
																												Main.dust[num993].noGravity = true;
																												Main.dust[num993].velocity *= 3f;
																											}
																											for (int num994 = 0; num994 < 10; num994++)
																											{
																												int num995 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
																												Main.dust[num995].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
																												Main.dust[num995].noGravity = true;
																												Main.dust[num995].velocity *= 3f;
																											}
																										}
																										if (flag56)
																										{
																											Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
																											for (int num996 = 0; num996 < 20; num996++)
																											{
																												int num997 = Dust.NewDust(this.position, this.width, this.height, 135, 0f, 0f, 100, default(Color), 1.5f);
																												Main.dust[num997].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
																												Main.dust[num997].velocity *= 2f;
																												Main.dust[num997].noGravity = true;
																												Main.dust[num997].fadeIn = 2.5f;
																												Main.dust[num997].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cPet, Main.player[this.owner]);
																											}
																											for (int num998 = 0; num998 < 15; num998++)
																											{
																												int num999 = Dust.NewDust(this.position, this.width, this.height, 135, 0f, 0f, 0, default(Color), 2.7f);
																												Main.dust[num999].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
																												Main.dust[num999].noGravity = true;
																												Main.dust[num999].velocity *= 3f;
																												Main.dust[num999].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cPet, Main.player[this.owner]);
																											}
																											float num1000 = (float)Main.rand.NextDouble() * 6.28318548f;
																											float num1001 = (float)Main.rand.NextDouble() * 6.28318548f;
																											float num1002 = (float)Main.rand.NextDouble() * 6.28318548f;
																											float num1003 = 7f + (float)Main.rand.NextDouble() * 7f;
																											float num1004 = 7f + (float)Main.rand.NextDouble() * 7f;
																											float num1005 = 7f + (float)Main.rand.NextDouble() * 7f;
																											float num1006 = num1003;
																											if (num1004 > num1006)
																											{
																												num1006 = num1004;
																											}
																											if (num1005 > num1006)
																											{
																												num1006 = num1005;
																											}
																											for (int num1007 = 0; num1007 < 200; num1007++)
																											{
																												int num1008 = 135;
																												float scaleFactor14 = num1006;
																												if (num1007 > 50)
																												{
																													scaleFactor14 = num1004;
																												}
																												if (num1007 > 100)
																												{
																													scaleFactor14 = num1003;
																												}
																												if (num1007 > 150)
																												{
																													scaleFactor14 = num1005;
																												}
																												int num1009 = Dust.NewDust(this.position, 6, 6, num1008, 0f, 0f, 100, default(Color), 1f);
																												Vector2 vector124 = Main.dust[num1009].velocity;
																												Main.dust[num1009].position = base.Center;
																												vector124.Normalize();
																												vector124 *= scaleFactor14;
																												if (num1007 > 150)
																												{
																													vector124.Y *= 0.5f;
																													vector124 = vector124.RotatedBy((double)num1002, default(Vector2));
																												}
																												else if (num1007 > 100)
																												{
																													vector124.X *= 0.5f;
																													vector124 = vector124.RotatedBy((double)num1000, default(Vector2));
																												}
																												else if (num1007 > 50)
																												{
																													vector124.Y *= 0.5f;
																													vector124 = vector124.RotatedBy((double)num1001, default(Vector2));
																												}
																												Main.dust[num1009].velocity *= 0.2f;
																												Main.dust[num1009].velocity += vector124;
																												Main.dust[num1009].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cPet, Main.player[this.owner]);
																												if (num1007 <= 200)
																												{
																													Main.dust[num1009].scale = 2f;
																													Main.dust[num1009].noGravity = true;
																													Main.dust[num1009].fadeIn = Main.rand.NextFloat() * 2f;
																													if (Main.rand.Next(4) == 0)
																													{
																														Main.dust[num1009].fadeIn = 2.5f;
																													}
																													Main.dust[num1009].noLight = true;
																													if (num1007 < 100)
																													{
																														Main.dust[num1009].position += Main.dust[num1009].velocity * 20f;
																														Main.dust[num1009].velocity *= -1f;
																													}
																												}
																											}
																											return;
																										}
																									}
																								}
																								else if (this.aiStyle == 118)
																								{
																									this.ai[0] += 1f;
																									int num1010 = 0;
																									if (this.velocity.Length() <= 4f)
																									{
																										num1010 = 1;
																									}
																									this.alpha -= 15;
																									if (this.alpha < 0)
																									{
																										this.alpha = 0;
																									}
																									if (num1010 == 0)
																									{
																										this.rotation -= 0.104719758f;
																										if (Main.rand.Next(3) == 0)
																										{
																											if (Main.rand.Next(2) == 0)
																											{
																												Vector2 vector125 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
																												Dust dust26 = Main.dust[Dust.NewDust(base.Center - vector125 * 30f, 0, 0, Utils.SelectRandom<int>(Main.rand, new int[]
																															{
																																86,
																																90
																															}), 0f, 0f, 0, default(Color), 1f)];
																												dust26.noGravity = true;
																												dust26.position = base.Center - vector125 * (float)Main.rand.Next(10, 21);
																												dust26.velocity = vector125.RotatedBy(1.5707963705062866, default(Vector2)) * 6f;
																												dust26.scale = 0.5f + Main.rand.NextFloat();
																												dust26.fadeIn = 0.5f;
																												dust26.customData = this;
																											}
																											else
																											{
																												Vector2 vector126 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
																												Dust dust27 = Main.dust[Dust.NewDust(base.Center - vector126 * 30f, 0, 0, 240, 0f, 0f, 0, default(Color), 1f)];
																												dust27.noGravity = true;
																												dust27.position = base.Center - vector126 * 30f;
																												dust27.velocity = vector126.RotatedBy(-1.5707963705062866, default(Vector2)) * 3f;
																												dust27.scale = 0.5f + Main.rand.NextFloat();
																												dust27.fadeIn = 0.5f;
																												dust27.customData = this;
																											}
																										}
																										if (this.ai[0] >= 30f)
																										{
																											this.velocity *= 0.98f;
																											this.scale += 0.00744680827f;
																											if (this.scale > 1.3f)
																											{
																												this.scale = 1.3f;
																											}
																											this.rotation -= 0.0174532924f;
																										}
																										if (this.velocity.Length() < 4.1f)
																										{
																											this.velocity.Normalize();
																											this.velocity *= 4f;
																											this.ai[0] = 0f;
																										}
																									}
																									else if (num1010 == 1)
																									{
																										this.rotation -= 0.104719758f;
																										for (int num1011 = 0; num1011 < 1; num1011++)
																										{
																											if (Main.rand.Next(2) == 0)
																											{
																												Vector2 vector127 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
																												Dust dust28 = Main.dust[Dust.NewDust(base.Center - vector127 * 30f, 0, 0, 86, 0f, 0f, 0, default(Color), 1f)];
																												dust28.noGravity = true;
																												dust28.position = base.Center - vector127 * (float)Main.rand.Next(10, 21);
																												dust28.velocity = vector127.RotatedBy(1.5707963705062866, default(Vector2)) * 6f;
																												dust28.scale = 0.9f + Main.rand.NextFloat();
																												dust28.fadeIn = 0.5f;
																												dust28.customData = this;
																												vector127 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
																												dust28 = Main.dust[Dust.NewDust(base.Center - vector127 * 30f, 0, 0, 90, 0f, 0f, 0, default(Color), 1f)];
																												dust28.noGravity = true;
																												dust28.position = base.Center - vector127 * (float)Main.rand.Next(10, 21);
																												dust28.velocity = vector127.RotatedBy(1.5707963705062866, default(Vector2)) * 6f;
																												dust28.scale = 0.9f + Main.rand.NextFloat();
																												dust28.fadeIn = 0.5f;
																												dust28.customData = this;
																												dust28.color = Color.Crimson;
																											}
																											else
																											{
																												Vector2 vector128 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
																												Dust dust29 = Main.dust[Dust.NewDust(base.Center - vector128 * 30f, 0, 0, 240, 0f, 0f, 0, default(Color), 1f)];
																												dust29.noGravity = true;
																												dust29.position = base.Center - vector128 * (float)Main.rand.Next(20, 31);
																												dust29.velocity = vector128.RotatedBy(-1.5707963705062866, default(Vector2)) * 5f;
																												dust29.scale = 0.9f + Main.rand.NextFloat();
																												dust29.fadeIn = 0.5f;
																												dust29.customData = this;
																											}
																										}
																										if (this.ai[0] % 30f == 0f && this.ai[0] < 241f && Main.myPlayer == this.owner)
																										{
																											Vector2 vector129 = Vector2.UnitY.RotatedByRandom(6.2831854820251465) * 12f;
																											Projectile.NewProjectile(base.Center.X, base.Center.Y, vector129.X, vector129.Y, 618, this.damage / 2, 0f, this.owner, 0f, (float)this.whoAmI);
																										}
																										Vector2 vector130 = base.Center;
																										float num1012 = 800f;
																										bool flag57 = false;
																										int num1013 = 0;
																										if (this.ai[1] == 0f)
																										{
																											for (int num1014 = 0; num1014 < 200; num1014++)
																											{
																												if (Main.npc[num1014].CanBeChasedBy(this, false))
																												{
																													Vector2 center13 = Main.npc[num1014].Center;
																													if (base.Distance(center13) < num1012 && Collision.CanHit(new Vector2(this.position.X + (float)(this.width / 2), this.position.Y + (float)(this.height / 2)), 1, 1, Main.npc[num1014].position, Main.npc[num1014].width, Main.npc[num1014].height))
																													{
																														num1012 = base.Distance(center13);
																														vector130 = center13;
																														flag57 = true;
																														num1013 = num1014;
																													}
																												}
																											}
																											if (flag57)
																											{
																												if (this.ai[1] != (float)(num1013 + 1))
																												{
																													this.netUpdate = true;
																												}
																												this.ai[1] = (float)(num1013 + 1);
																											}
																											flag57 = false;
																										}
																										if (this.ai[1] != 0f)
																										{
																											int num1015 = (int)(this.ai[1] - 1f);
																											if (Main.npc[num1015].active && Main.npc[num1015].CanBeChasedBy(this, true) && base.Distance(Main.npc[num1015].Center) < 1000f)
																											{
																												flag57 = true;
																												vector130 = Main.npc[num1015].Center;
																											}
																										}
																										if (!this.friendly)
																										{
																											flag57 = false;
																										}
																										if (flag57)
																										{
																											float num1016 = 4f;
																											int num1017 = 8;
																											Vector2 vector131 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
																											float num1018 = vector130.X - vector131.X;
																											float num1019 = vector130.Y - vector131.Y;
																											float num1020 = (float)Math.Sqrt((double)(num1018 * num1018 + num1019 * num1019));
																											num1020 = num1016 / num1020;
																											num1018 *= num1020;
																											num1019 *= num1020;
																											this.velocity.X = (this.velocity.X * (float)(num1017 - 1) + num1018) / (float)num1017;
																											this.velocity.Y = (this.velocity.Y * (float)(num1017 - 1) + num1019) / (float)num1017;
																										}
																									}
																									if (this.alpha < 150)
																									{
																										Lighting.AddLight(base.Center, 0.7f, 0.2f, 0.6f);
																									}
																									if (this.ai[0] >= 600f)
																									{
																										this.Kill();
																										return;
																									}
																								}
																								else if (this.aiStyle == 119)
																								{
																									int num1021 = 0;
																									float num1022 = 0f;
																									float x3 = 0f;
																									float y3 = 0f;
																									bool flag58 = false;
																									bool flag59 = false;
																									int num653 = this.type;
																									if (num653 == 618)
																									{
																										num1021 = 617;
																										num1022 = 420f;
																										x3 = 0.15f;
																										y3 = 0.15f;
																									}
																									if (flag59)
																									{
																										int num1023 = (int)this.ai[1];
																										if (!Main.projectile[num1023].active || Main.projectile[num1023].type != num1021)
																										{
																											this.Kill();
																											return;
																										}
																										this.timeLeft = 2;
																									}
																									this.ai[0] += 1f;
																									if (this.ai[0] < num1022)
																									{
																										bool flag60 = true;
																										int num1024 = (int)this.ai[1];
																										if (Main.projectile[num1024].active && Main.projectile[num1024].type == num1021)
																										{
																											if (!flag58 && Main.projectile[num1024].oldPos[1] != Vector2.Zero)
																											{
																												this.position += Main.projectile[num1024].position - Main.projectile[num1024].oldPos[1];
																											}
																											if (base.Center.HasNaNs())
																											{
																												this.Kill();
																												return;
																											}
																										}
																										else
																										{
																											this.ai[0] = num1022;
																											flag60 = false;
																											this.Kill();
																										}
																										if (flag60 && !flag58)
																										{
																											this.velocity += new Vector2((float)Math.Sign(Main.projectile[num1024].Center.X - base.Center.X), (float)Math.Sign(Main.projectile[num1024].Center.Y - base.Center.Y)) * new Vector2(x3, y3);
																											if (this.velocity.Length() > 6f)
																											{
																												this.velocity *= 6f / this.velocity.Length();
																											}
																										}
																										if (this.type == 618)
																										{
																											if (Main.rand.Next(2) == 0)
																											{
																												int num1025 = Dust.NewDust(base.Center, 8, 8, 86, 0f, 0f, 0, default(Color), 1f);
																												Main.dust[num1025].position = base.Center;
																												Main.dust[num1025].velocity = this.velocity;
																												Main.dust[num1025].noGravity = true;
																												Main.dust[num1025].scale = 1.5f;
																												if (flag60)
																												{
																													Main.dust[num1025].customData = Main.projectile[(int)this.ai[1]];
																												}
																											}
																											this.alpha = 255;
																											return;
																										}
																										this.Kill();
																										return;
																									}
																								}
																								else if (this.aiStyle == 120)
																								{
																									Player player8 = Main.player[this.owner];
																									if (!player8.active)
																									{
																										this.active = false;
																										return;
																									}
																									bool flag61 = this.type == 623;
																									Vector2 vector132 = player8.Center;
																									float num1026 = 100f;
																									float num1027 = 300f;
																									float num1028 = 100f;
																									float num1029 = 100f;
																									if (flag61)
																									{
																										if (player8.dead)
																										{
																											player8.stardustGuardian = false;
																										}
																										if (player8.stardustGuardian)
																										{
																											this.timeLeft = 2;
																										}
																										num1026 = 150f;
																										num1027 = 250f;
																										num1028 = 200f;
																										vector132.X -= (float)((5 + player8.width / 2) * player8.direction);
																										vector132.Y -= 25f;
																										Lighting.AddLight(base.Center, 0.9f, 0.9f, 0.7f);
																										if (this.ai[0] != 3f && this.alpha == 255)
																										{
																											this.alpha = 0;
																											for (int num1030 = 0; num1030 < 30; num1030++)
																											{
																												int num1031 = Dust.NewDust(this.position, this.width, this.height, 135, 0f, 0f, 200, default(Color), 1.7f);
																												Main.dust[num1031].noGravity = true;
																												Main.dust[num1031].velocity *= 3f;
																												Main.dust[num1031].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cPet, Main.player[this.owner]);
																												num1031 = Dust.NewDust(this.position, this.width, this.height, 135, 0f, 0f, 100, default(Color), 1f);
																												Main.dust[num1031].velocity *= 2f;
																												Main.dust[num1031].noGravity = true;
																												Main.dust[num1031].fadeIn = 2.5f;
																												Main.dust[num1031].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cPet, Main.player[this.owner]);
																											}
																										}
																										if (this.localAI[0] > 0f)
																										{
																											this.localAI[0] -= 1f;
																										}
																									}
																									if (this.ai[0] != 0f)
																									{
																										Main.player[this.owner].tankPet = this.whoAmI;
																										Main.player[this.owner].tankPetReset = false;
																									}
																									if (this.ai[0] == 0f)
																									{
																										if (player8.HasMinionTarget)
																										{
																											this.ai[0] = 3f;
																											this.netUpdate = true;
																										}
																										base.Center = Vector2.Lerp(base.Center, vector132, 0.2f);
																										this.velocity *= 0.8f;
																										this.direction = (this.spriteDirection = player8.direction);
																										if (flag61 && ++this.frameCounter >= 9)
																										{
																											this.frameCounter = 0;
																											if (++this.frame >= Main.projFrames[this.type] - 4)
																											{
																												this.frame = 0;
																											}
																										}
																									}
																									else if (this.ai[0] == 1f)
																									{
																										if (player8.HasMinionTarget)
																										{
																											vector132 = player8.MinionTargetPoint;
																										}
																										else
																										{
																											this.ai[0] = 0f;
																											this.netUpdate = true;
																										}
																										int num1032 = -1;
																										bool flag62 = true;
																										if (flag61 && Math.Abs(base.Center.X - vector132.X) > num1026 + 20f)
																										{
																											flag62 = false;
																										}
																										if (flag62)
																										{
																											for (int num1033 = 0; num1033 < 200; num1033++)
																											{
																												NPC nPC11 = Main.npc[num1033];
																												if (nPC11.CanBeChasedBy(this, false))
																												{
																													float num1034 = base.Distance(nPC11.Center);
																													if (num1034 < num1027)
																													{
																														num1032 = num1033;
																													}
																												}
																											}
																										}
																										if (num1032 != -1)
																										{
																											NPC nPC12 = Main.npc[num1032];
																											this.direction = (this.spriteDirection = (nPC12.Center.X > base.Center.X).ToDirectionInt());
																											float num1035 = Math.Abs(vector132.X - base.Center.X);
																											float num1036 = Math.Abs(nPC12.Center.X - base.Center.X);
																											float num1037 = Math.Abs(vector132.Y - base.Center.Y);
																											float num1038 = Math.Abs(nPC12.Center.Y - base.Bottom.Y);
																											float num1039 = (float)(nPC12.Center.Y > base.Bottom.Y).ToDirectionInt();
																											if ((num1035 < num1026 || (vector132.X - base.Center.X) * (float)this.direction < 0f) && num1036 > 20f && num1036 < num1026 - num1035 + 100f)
																											{
																												this.velocity.X = this.velocity.X + 0.1f * (float)this.direction;
																											}
																											else
																											{
																												this.velocity.X = this.velocity.X * 0.7f;
																											}
																											if ((num1037 < num1029 || (vector132.Y - base.Bottom.Y) * num1039 < 0f) && num1038 > 10f && num1038 < num1029 - num1037 + 10f)
																											{
																												this.velocity.Y = this.velocity.Y + 0.1f * num1039;
																											}
																											else
																											{
																												this.velocity.Y = this.velocity.Y * 0.7f;
																											}
																											if (this.localAI[0] == 0f && this.owner == Main.myPlayer && num1036 < num1028)
																											{
																												this.ai[1] = 0f;
																												this.ai[0] = 2f;
																												this.netUpdate = true;
																												this.localAI[0] = 90f;
																											}
																										}
																										else
																										{
																											if (Math.Abs(vector132.X - base.Center.X) > num1026 + 40f)
																											{
																												this.ai[0] = 3f;
																												this.netUpdate = true;
																											}
																											else if (Math.Abs(vector132.X - base.Center.X) > 20f)
																											{
																												this.direction = (this.spriteDirection = (vector132.X > base.Center.X).ToDirectionInt());
																												this.velocity.X = this.velocity.X + 0.06f * (float)this.direction;
																											}
																											else
																											{
																												this.velocity.X = this.velocity.X * 0.8f;
																												this.direction = (this.spriteDirection = (player8.Center.X < base.Center.X).ToDirectionInt());
																											}
																											if (Math.Abs(vector132.Y - base.Center.Y) > num1029)
																											{
																												this.ai[0] = 3f;
																												this.netUpdate = true;
																											}
																											else if (Math.Abs(vector132.Y - base.Center.Y) > 10f)
																											{
																												this.velocity.Y = this.velocity.Y + 0.06f * (float)Math.Sign(vector132.Y - base.Center.Y);
																											}
																											else
																											{
																												this.velocity.Y = this.velocity.Y * 0.8f;
																											}
																										}
																										if (flag61 && ++this.frameCounter >= 9)
																										{
																											this.frameCounter = 0;
																											if (++this.frame >= Main.projFrames[this.type] - 4)
																											{
																												this.frame = 0;
																											}
																										}
																									}
																									else if (this.ai[0] == 2f)
																									{
																										this.velocity.X = this.velocity.X * 0.9f;
																										this.ai[1] += 1f;
																										float num1040 = 0f;
																										if (flag61)
																										{
																											num1040 = 20f;
																											if (this.ai[1] == 10f && this.owner == Main.myPlayer)
																											{
																												int num1041 = (int)(20f * Main.player[this.owner].minionDamage);
																												Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 624, num1041, 6f, this.owner, 0f, 5f);
																											}
																										}
																										if (this.ai[1] >= num1040)
																										{
																											this.ai[1] = 0f;
																											this.ai[0] = 1f;
																											this.netUpdate = true;
																										}
																										if (flag61)
																										{
																											if (this.frame < Main.projFrames[this.type] - 4)
																											{
																												this.frame = Main.projFrames[this.type] - 1;
																												this.frameCounter = 0;
																											}
																											if (++this.frameCounter >= 5)
																											{
																												this.frameCounter = 0;
																												if (--this.frame < Main.projFrames[this.type] - 5)
																												{
																													this.frame = Main.projFrames[this.type] - 1;
																												}
																											}
																										}
																									}
																									if (this.ai[0] == 3f)
																									{
																										if (player8.HasMinionTarget)
																										{
																											vector132 = player8.MinionTargetPoint;
																										}
																										else
																										{
																											this.ai[0] = 0f;
																											this.netUpdate = true;
																										}
																										if (this.alpha == 0)
																										{
																											this.alpha = 255;
																											for (int num1042 = 0; num1042 < 30; num1042++)
																											{
																												int num1043 = Dust.NewDust(this.position, this.width, this.height, 135, 0f, 0f, 200, default(Color), 1.7f);
																												Main.dust[num1043].noGravity = true;
																												Main.dust[num1043].velocity *= 3f;
																												Main.dust[num1043].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cPet, Main.player[this.owner]);
																												num1043 = Dust.NewDust(this.position, this.width, this.height, 135, 0f, 0f, 100, default(Color), 1f);
																												Main.dust[num1043].velocity *= 2f;
																												Main.dust[num1043].noGravity = true;
																												Main.dust[num1043].fadeIn = 2.5f;
																												Main.dust[num1043].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cPet, Main.player[this.owner]);
																											}
																										}
																										else
																										{
																											for (int num1044 = 0; num1044 < 2; num1044++)
																											{
																												int num1045 = Dust.NewDust(this.position, this.width, this.height, 135, 0f, 0f, 200, default(Color), 1.7f);
																												Main.dust[num1045].noGravity = true;
																												Main.dust[num1045].velocity *= 3f;
																												Main.dust[num1045].noLight = true;
																												Main.dust[num1045].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cPet, Main.player[this.owner]);
																												num1045 = Dust.NewDust(this.position, this.width, this.height, 135, 0f, 0f, 100, default(Color), 1f);
																												Main.dust[num1045].velocity *= 2f;
																												Main.dust[num1045].noGravity = true;
																												Main.dust[num1045].fadeIn = 2.5f;
																												Main.dust[num1045].noLight = true;
																												Main.dust[num1045].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cPet, Main.player[this.owner]);
																											}
																										}
																										this.velocity *= 0.7f;
																										base.Center = Vector2.Lerp(base.Center, vector132, 0.2f);
																										if (base.Distance(vector132) < 10f)
																										{
																											this.ai[0] = 1f;
																											this.netUpdate = true;
																											return;
																										}
																									}
																								}
																								else if (this.aiStyle == 121)
																								{
																									Player player9 = Main.player[this.owner];
																									if ((int)Main.time % 120 == 0)
																									{
																										this.netUpdate = true;
																									}
																									if (!player9.active)
																									{
																										this.active = false;
																										return;
																									}
																									bool flag63 = this.type == 625;
																									bool flag64 = this.type == 625 || this.type == 626 || this.type == 627 || this.type == 628;
																									int num1046 = 10;
																									if (flag64)
																									{
																										if (player9.dead)
																										{
																											player9.stardustDragon = false;
																										}
																										if (player9.stardustDragon)
																										{
																											this.timeLeft = 2;
																										}
																										num1046 = 30;
																										if (Main.rand.Next(30) == 0)
																										{
																											int num1047 = Dust.NewDust(this.position, this.width, this.height, 135, 0f, 0f, 0, default(Color), 2f);
																											Main.dust[num1047].noGravity = true;
																											Main.dust[num1047].fadeIn = 2f;
																											Point point4 = Main.dust[num1047].position.ToTileCoordinates();
																											if (WorldGen.InWorld(point4.X, point4.Y, 5) && WorldGen.SolidTile(point4.X, point4.Y))
																											{
																												Main.dust[num1047].noLight = true;
																											}
																										}
																									}
																									if (flag63)
																									{
																										Vector2 center14 = player9.Center;
																										float num1048 = 700f;
																										float num1049 = 1000f;
																										int num1050 = -1;
																										if (base.Distance(center14) > 2000f)
																										{
																											base.Center = center14;
																											this.netUpdate = true;
																										}
																										bool flag65 = true;
																										if (flag65)
																										{
																											for (int num1051 = 0; num1051 < 200; num1051++)
																											{
																												NPC nPC13 = Main.npc[num1051];
																												if (nPC13.CanBeChasedBy(this, false) && player9.Distance(nPC13.Center) < num1049)
																												{
																													float num1052 = base.Distance(nPC13.Center);
																													if (num1052 < num1048)
																													{
																														num1050 = num1051;
																														bool arg_2DD18_0 = nPC13.boss;
																													}
																												}
																											}
																										}
																										if (num1050 != -1)
																										{
																											NPC nPC14 = Main.npc[num1050];
																											Vector2 vector133 = nPC14.Center - base.Center;
																											(vector133.X > 0f).ToDirectionInt();
																											(vector133.Y > 0f).ToDirectionInt();
																											float scaleFactor15 = 0.4f;
																											if (vector133.Length() < 600f)
																											{
																												scaleFactor15 = 0.6f;
																											}
																											if (vector133.Length() < 300f)
																											{
																												scaleFactor15 = 0.8f;
																											}
																											if (vector133.Length() > nPC14.Size.Length() * 0.75f)
																											{
																												this.velocity += Vector2.Normalize(vector133) * scaleFactor15 * 1.5f;
																												if (Vector2.Dot(this.velocity, vector133) < 0.25f)
																												{
																													this.velocity *= 0.8f;
																												}
																											}
																											float num1053 = 30f;
																											if (this.velocity.Length() > num1053)
																											{
																												this.velocity = Vector2.Normalize(this.velocity) * num1053;
																											}
																										}
																										else
																										{
																											float num1054 = 0.2f;
																											Vector2 vector134 = center14 - base.Center;
																											if (vector134.Length() < 200f)
																											{
																												num1054 = 0.12f;
																											}
																											if (vector134.Length() < 140f)
																											{
																												num1054 = 0.06f;
																											}
																											if (vector134.Length() > 100f)
																											{
																												if (Math.Abs(center14.X - base.Center.X) > 20f)
																												{
																													this.velocity.X = this.velocity.X + num1054 * (float)Math.Sign(center14.X - base.Center.X);
																												}
																												if (Math.Abs(center14.Y - base.Center.Y) > 10f)
																												{
																													this.velocity.Y = this.velocity.Y + num1054 * (float)Math.Sign(center14.Y - base.Center.Y);
																												}
																											}
																											else if (this.velocity.Length() > 2f)
																											{
																												this.velocity *= 0.96f;
																											}
																											if (Math.Abs(this.velocity.Y) < 1f)
																											{
																												this.velocity.Y = this.velocity.Y - 0.1f;
																											}
																											float num1055 = 15f;
																											if (this.velocity.Length() > num1055)
																											{
																												this.velocity = Vector2.Normalize(this.velocity) * num1055;
																											}
																										}
																										this.rotation = this.velocity.ToRotation() + 1.57079637f;
																										int direction = this.direction;
																										this.direction = (this.spriteDirection = ((this.velocity.X > 0f) ? 1 : -1));
																										if (direction != this.direction)
																										{
																											this.netUpdate = true;
																										}
																										float num1056 = MathHelper.Clamp(this.localAI[0], 0f, 50f);
																										this.position = base.Center;
																										this.scale = 1f + num1056 * 0.01f;
																										this.width = (this.height = (int)((float)num1046 * this.scale));
																										base.Center = this.position;
																										if (this.alpha > 0)
																										{
																											for (int num1057 = 0; num1057 < 2; num1057++)
																											{
																												int num1058 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 135, 0f, 0f, 100, default(Color), 2f);
																												Main.dust[num1058].noGravity = true;
																												Main.dust[num1058].noLight = true;
																											}
																											this.alpha -= 42;
																											if (this.alpha < 0)
																											{
																												this.alpha = 0;
																												return;
																											}
																										}
																									}
																									else
																									{
																										bool flag66 = false;
																										Vector2 value67 = Vector2.Zero;
																										Vector2 arg_2E1AF_0 = Vector2.Zero;
																										float num1059 = 0f;
																										float scaleFactor16 = 0f;
																										float scaleFactor17 = 1f;
																										if (this.ai[1] == 1f)
																										{
																											this.ai[1] = 0f;
																											this.netUpdate = true;
																										}
																										int byUUID = Projectile.GetByUUID(this.owner, (int)this.ai[0]);
																										if (flag64 && byUUID >= 0 && Main.projectile[byUUID].active && (Main.projectile[byUUID].type == 625 || Main.projectile[byUUID].type == 626 || Main.projectile[byUUID].type == 627))
																										{
																											flag66 = true;
																											value67 = Main.projectile[byUUID].Center;
																											Vector2 arg_2E2A1_0 = Main.projectile[byUUID].velocity;
																											num1059 = Main.projectile[byUUID].rotation;
																											float num1060 = MathHelper.Clamp(Main.projectile[byUUID].scale, 0f, 50f);
																											scaleFactor17 = num1060;
																											scaleFactor16 = 16f;
																											int arg_2E2F7_0 = Main.projectile[byUUID].alpha;
																											Main.projectile[byUUID].localAI[0] = this.localAI[0] + 1f;
																											if (Main.projectile[byUUID].type != 625)
																											{
																												Main.projectile[byUUID].localAI[1] = (float)this.whoAmI;
																											}
																											if (this.owner == Main.myPlayer && Main.projectile[byUUID].type == 625 && this.type == 628)
																											{
																												Main.projectile[byUUID].Kill();
																												this.Kill();
																												return;
																											}
																										}
																										if (!flag66)
																										{
																											return;
																										}
																										if (this.alpha > 0)
																										{
																											for (int num1061 = 0; num1061 < 2; num1061++)
																											{
																												int num1062 = Dust.NewDust(this.position, this.width, this.height, 135, 0f, 0f, 100, default(Color), 2f);
																												Main.dust[num1062].noGravity = true;
																												Main.dust[num1062].noLight = true;
																											}
																										}
																										this.alpha -= 42;
																										if (this.alpha < 0)
																										{
																											this.alpha = 0;
																										}
																										this.velocity = Vector2.Zero;
																										Vector2 vector135 = value67 - base.Center;
																										if (num1059 != this.rotation)
																										{
																											float num1063 = MathHelper.WrapAngle(num1059 - this.rotation);
																											vector135 = vector135.RotatedBy((double)(num1063 * 0.1f), default(Vector2));
																										}
																										this.rotation = vector135.ToRotation() + 1.57079637f;
																										this.position = base.Center;
																										this.scale = scaleFactor17;
																										this.width = (this.height = (int)((float)num1046 * this.scale));
																										base.Center = this.position;
																										if (vector135 != Vector2.Zero)
																										{
																											base.Center = value67 - Vector2.Normalize(vector135) * scaleFactor16 * scaleFactor17;
																										}
																										this.spriteDirection = ((vector135.X > 0f) ? 1 : -1);
																										return;
																									}
																								}
																								else if (this.aiStyle == 122)
																								{
																									int num1064 = (int)this.ai[0];
																									bool flag67 = false;
																									if (num1064 == -1 || !Main.npc[num1064].active)
																									{
																										flag67 = true;
																									}
																									if (flag67)
																									{
																										if (this.type == 629)
																										{
																											this.Kill();
																											return;
																										}
																										if (this.type == 631 && this.ai[0] != -1f)
																										{
																											this.ai[0] = -1f;
																											this.netUpdate = true;
																										}
																									}
																									if (!flag67 && base.Hitbox.Intersects(Main.npc[num1064].Hitbox))
																									{
																										this.Kill();
																										if (this.type == 631)
																										{
																											this.localAI[1] = 1f;
																											this.Damage();
																										}
																										return;
																									}
																									if (this.type == 629)
																									{
																										Vector2 value68 = Main.npc[num1064].Center - base.Center;
																										this.velocity = Vector2.Normalize(value68) * 5f;
																										Dust.QuickDust(base.Center, Color.Red);
																									}
																									if (this.type == 631)
																									{
																										if (this.ai[1] > 0f)
																										{
																											this.ai[1] -= 1f;
																											this.velocity = Vector2.Zero;
																											return;
																										}
																										if (flag67)
																										{
																											if (this.velocity == Vector2.Zero)
																											{
																												this.Kill();
																											}
																											this.tileCollide = true;
																											this.alpha += 10;
																											if (this.alpha > 255)
																											{
																												this.Kill();
																											}
																										}
																										else
																										{
																											Vector2 value69 = Main.npc[num1064].Center - base.Center;
																											this.velocity = Vector2.Normalize(value69) * 12f;
																											this.alpha -= 15;
																											if (this.alpha < 0)
																											{
																												this.alpha = 0;
																											}
																										}
																										this.rotation = this.velocity.ToRotation() - 1.57079637f;
																										return;
																									}
																								}
																								else if (this.aiStyle == 123)
																								{
																									bool flag68 = this.type == 641;
																									bool flag69 = this.type == 643;
																									float num1065 = 1000f;
																									this.velocity = Vector2.Zero;
																									if (flag68)
																									{
																										this.alpha -= 5;
																										if (this.alpha < 0)
																										{
																											this.alpha = 0;
																										}
																										if (this.direction == 0)
																										{
																											this.direction = Main.player[this.owner].direction;
																										}
																										this.rotation -= (float)this.direction * 6.28318548f / 120f;
																										this.scale = this.Opacity;
																										Lighting.AddLight(base.Center, new Vector3(0.3f, 0.9f, 0.7f) * this.Opacity);
																										if (Main.rand.Next(2) == 0)
																										{
																											Vector2 vector136 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
																											Dust dust30 = Main.dust[Dust.NewDust(base.Center - vector136 * 30f, 0, 0, 229, 0f, 0f, 0, default(Color), 1f)];
																											dust30.noGravity = true;
																											dust30.position = base.Center - vector136 * (float)Main.rand.Next(10, 21);
																											dust30.velocity = vector136.RotatedBy(1.5707963705062866, default(Vector2)) * 6f;
																											dust30.scale = 0.5f + Main.rand.NextFloat();
																											dust30.fadeIn = 0.5f;
																											dust30.customData = base.Center;
																										}
																										if (Main.rand.Next(2) == 0)
																										{
																											Vector2 vector137 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
																											Dust dust31 = Main.dust[Dust.NewDust(base.Center - vector137 * 30f, 0, 0, 240, 0f, 0f, 0, default(Color), 1f)];
																											dust31.noGravity = true;
																											dust31.position = base.Center - vector137 * 30f;
																											dust31.velocity = vector137.RotatedBy(-1.5707963705062866, default(Vector2)) * 3f;
																											dust31.scale = 0.5f + Main.rand.NextFloat();
																											dust31.fadeIn = 0.5f;
																											dust31.customData = base.Center;
																										}
																										if (this.ai[0] < 0f)
																										{
																											Vector2 center15 = base.Center;
																											int num1066 = Dust.NewDust(center15 - Vector2.One * 8f, 16, 16, 229, this.velocity.X / 2f, this.velocity.Y / 2f, 0, default(Color), 1f);
																											Main.dust[num1066].velocity *= 2f;
																											Main.dust[num1066].noGravity = true;
																											Main.dust[num1066].scale = Utils.SelectRandom<float>(Main.rand, new float[]
																												{
																													0.8f,
																													1.65f
																												});
																											Main.dust[num1066].customData = this;
																										}
																									}
																									if (flag69)
																									{
																										this.alpha -= 5;
																										if (this.alpha < 0)
																										{
																											this.alpha = 0;
																										}
																										if (this.direction == 0)
																										{
																											this.direction = Main.player[this.owner].direction;
																										}
																										if (++this.frameCounter >= 3)
																										{
																											this.frameCounter = 0;
																											if (++this.frame >= Main.projFrames[this.type])
																											{
																												this.frame = 0;
																											}
																										}
																										if (this.alpha == 0 && Main.rand.Next(15) == 0)
																										{
																											Dust dust32 = Main.dust[Dust.NewDust(base.Top, 0, 0, 261, 0f, 0f, 100, default(Color), 1f)];
																											dust32.velocity.X = 0f;
																											dust32.noGravity = true;
																											dust32.fadeIn = 1f;
																											dust32.position = base.Center + Vector2.UnitY.RotatedByRandom(6.2831854820251465) * (4f * Main.rand.NextFloat() + 26f);
																											dust32.scale = 0.5f;
																										}
																										this.localAI[0] += 1f;
																										if (this.localAI[0] >= 60f)
																										{
																											this.localAI[0] = 0f;
																										}
																									}
																									if (this.ai[0] < 0f)
																									{
																										this.ai[0] += 1f;
																										if (flag68)
																										{
																											this.ai[1] -= (float)this.direction * 0.3926991f / 50f;
																										}
																									}
																									if (this.ai[0] == 0f)
																									{
																										int num1067 = -1;
																										float num1068 = num1065;
																										for (int num1069 = 0; num1069 < 200; num1069++)
																										{
																											NPC nPC15 = Main.npc[num1069];
																											if (nPC15.CanBeChasedBy(this, false))
																											{
																												float num1070 = base.Distance(nPC15.Center);
																												if (num1070 < num1068 && Collision.CanHitLine(base.Center, 0, 0, nPC15.Center, 0, 0))
																												{
																													num1068 = num1070;
																													num1067 = num1069;
																												}
																											}
																										}
																										if (num1067 != -1)
																										{
																											this.ai[0] = 1f;
																											this.ai[1] = (float)num1067;
																											this.netUpdate = true;
																											return;
																										}
																									}
																									if (this.ai[0] > 0f)
																									{
																										int num1071 = (int)this.ai[1];
																										if (!Main.npc[num1071].CanBeChasedBy(this, false))
																										{
																											this.ai[0] = 0f;
																											this.ai[1] = 0f;
																											this.netUpdate = true;
																											return;
																										}
																										this.ai[0] += 1f;
																										float num1072 = 30f;
																										if (flag69)
																										{
																											num1072 = 5f;
																										}
																										if (this.ai[0] >= num1072)
																										{
																											Vector2 vector138 = base.DirectionTo(Main.npc[num1071].Center);
																											if (vector138.HasNaNs())
																											{
																												vector138 = Vector2.UnitY;
																											}
																											float num1073 = vector138.ToRotation();
																											int num1074 = (vector138.X > 0f) ? 1 : -1;
																											if (flag68)
																											{
																												this.direction = num1074;
																												this.ai[0] = -60f;
																												this.ai[1] = num1073 + (float)num1074 * 3.14159274f / 16f;
																												this.netUpdate = true;
																												if (this.owner == Main.myPlayer)
																												{
																													Projectile.NewProjectile(base.Center.X, base.Center.Y, vector138.X, vector138.Y, 642, this.damage, this.knockBack, this.owner, 0f, (float)this.whoAmI);
																												}
																											}
																											if (flag69)
																											{
																												this.direction = num1074;
																												this.ai[0] = -20f;
																												this.netUpdate = true;
																												if (this.owner == Main.myPlayer)
																												{
																													Vector2 vector139 = Main.npc[num1071].position + Main.npc[num1071].Size * Utils.RandomVector2(Main.rand, 0f, 1f) - base.Center;
																													for (int num1075 = 0; num1075 < 3; num1075++)
																													{
																														Vector2 vector140 = base.Center + vector139;
																														if (num1075 > 0)
																														{
																															vector140 = base.Center + vector139.RotatedByRandom(0.78539818525314331) * (Main.rand.NextFloat() * 0.5f + 0.75f);
																														}
																														float x4 = Main.rgbToHsl(new Color(Main.DiscoR, Main.DiscoG, Main.DiscoB)).X;
																														Projectile.NewProjectile(vector140.X, vector140.Y, 0f, 0f, 644, this.damage, this.knockBack, this.owner, x4, (float)this.whoAmI);
																													}
																													return;
																												}
																											}
																										}
																									}
																								}
																								else if (this.aiStyle == 124)
																								{
																									Player player10 = Main.player[this.owner];
																									if (player10.dead)
																									{
																										this.Kill();
																										return;
																									}
																									if (Main.myPlayer == this.owner && player10.suspiciouslookingTentacle)
																									{
																										this.timeLeft = 2;
																									}
																									this.direction = (this.spriteDirection = player10.direction);
																									Vector3 v3_ = new Vector3(0.5f, 0.9f, 1f) * 1.5f;
																									DelegateMethods.v3_1 = v3_;
																									Utils.PlotTileLine(base.Center, base.Center + this.velocity * 6f, 20f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
																									Utils.PlotTileLine(base.Left, base.Right, 20f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
																									Utils.PlotTileLine(player10.Center, player10.Center + player10.velocity * 6f, 40f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
																									Utils.PlotTileLine(player10.Left, player10.Right, 40f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
																									Vector2 value70 = new Vector2((float)(player10.direction * 30), -20f);
																									Vector2 vector141 = player10.MountedCenter + value70;
																									float num1076 = Vector2.Distance(base.Center, vector141);
																									if (num1076 > 1000f)
																									{
																										base.Center = player10.Center + value70;
																									}
																									Vector2 vector142 = vector141 - base.Center;
																									float num1077 = 4f;
																									if (num1076 < num1077)
																									{
																										this.velocity *= 0.25f;
																									}
																									if (vector142 != Vector2.Zero)
																									{
																										if (vector142.Length() < num1077)
																										{
																											this.velocity = vector142;
																										}
																										else
																										{
																											this.velocity = vector142 * 0.1f;
																										}
																									}
																									if (this.velocity.Length() > 6f)
																									{
																										float num1078 = this.velocity.ToRotation() + 1.57079637f;
																										if (Math.Abs(this.rotation - num1078) >= 3.14159274f)
																										{
																											if (num1078 < this.rotation)
																											{
																												this.rotation -= 6.28318548f;
																											}
																											else
																											{
																												this.rotation += 6.28318548f;
																											}
																										}
																										float num1079 = 12f;
																										this.rotation = (this.rotation * (num1079 - 1f) + num1078) / num1079;
																										if (++this.frameCounter >= 4)
																										{
																											this.frameCounter = 0;
																											if (++this.frame >= Main.projFrames[this.type])
																											{
																												this.frame = 0;
																											}
																										}
																									}
																									else
																									{
																										if (this.rotation > 3.14159274f)
																										{
																											this.rotation -= 6.28318548f;
																										}
																										if (this.rotation > -0.005f && this.rotation < 0.005f)
																										{
																											this.rotation = 0f;
																										}
																										else
																										{
																											this.rotation *= 0.96f;
																										}
																										if (++this.frameCounter >= 6)
																										{
																											this.frameCounter = 0;
																											if (++this.frame >= Main.projFrames[this.type])
																											{
																												this.frame = 0;
																											}
																										}
																									}
																									if (this.ai[0] > 0f && (this.ai[0] += 1f) >= 60f)
																									{
																										this.ai[0] = 0f;
																										this.ai[1] = 0f;
																									}
																									if (Main.rand.Next(15) == 0)
																									{
																										float num1080 = -1f;
																										int num1081 = 17;
																										if ((base.Center - player10.Center).Length() < (float)Main.screenWidth)
																										{
																											int num1082 = (int)base.Center.X / 16;
																											int num1083 = (int)base.Center.Y / 16;
																											num1082 = (int)MathHelper.Clamp((float)num1082, (float)(num1081 + 1), (float)(Main.maxTilesX - num1081 - 1));
																											num1083 = (int)MathHelper.Clamp((float)num1083, (float)(num1081 + 1), (float)(Main.maxTilesY - num1081 - 1));
																											for (int num1084 = num1082 - num1081; num1084 <= num1082 + num1081; num1084++)
																											{
																												for (int num1085 = num1083 - num1081; num1085 <= num1083 + num1081; num1085++)
																												{
																													int num1086 = Main.rand.Next(8);
																													if (num1086 < 4)
																													{
																														Vector2 vector143 = new Vector2((float)(num1082 - num1084), (float)(num1083 - num1085));
																														if (vector143.Length() < (float)num1081 && Main.tile[num1084, num1085] != null && Main.tile[num1084, num1085].active())
																														{
																															bool flag70 = false;
																															if (Main.tile[num1084, num1085].type == 185 && Main.tile[num1084, num1085].frameY == 18)
																															{
																																if (Main.tile[num1084, num1085].frameX >= 576 && Main.tile[num1084, num1085].frameX <= 882)
																																{
																																	flag70 = true;
																																}
																															}
																															else if (Main.tile[num1084, num1085].type == 186 && Main.tile[num1084, num1085].frameX >= 864 && Main.tile[num1084, num1085].frameX <= 1170)
																															{
																																flag70 = true;
																															}
																															if (flag70 || Main.tileSpelunker[(int)Main.tile[num1084, num1085].type] || (Main.tileAlch[(int)Main.tile[num1084, num1085].type] && Main.tile[num1084, num1085].type != 82))
																															{
																																float num1087 = base.Distance(new Vector2((float)(num1084 * 16 + 8), (float)(num1085 * 16 + 8)));
																																if (num1087 < num1080 || num1080 == -1f)
																																{
																																	num1080 = num1087;
																																	this.ai[0] = 1f;
																																	this.ai[1] = base.AngleTo(new Vector2((float)(num1084 * 16 + 8), (float)(num1085 * 16 + 8)));
																																}
																																if (num1086 < 2)
																																{
																																	int num1088 = Dust.NewDust(new Vector2((float)(num1084 * 16), (float)(num1085 * 16)), 16, 16, 204, 0f, 0f, 150, default(Color), 0.3f);
																																	Main.dust[num1088].fadeIn = 0.75f;
																																	Main.dust[num1088].velocity *= 0.1f;
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																									float f3 = this.localAI[0] % 6.28318548f - 3.14159274f;
																									float num1089 = (float)Math.IEEERemainder((double)this.localAI[1], 1.0);
																									if (num1089 < 0f)
																									{
																										num1089 += 1f;
																									}
																									float num1090 = (float)Math.Floor((double)this.localAI[1]);
																									float max = 0.999f;
																									int num1091 = 0;
																									float amount2 = 0.1f;
																									bool flag71 = player10.velocity.Length() > 3f;
																									int num1092 = -1;
																									int num1093 = -1;
																									float num1094 = 300f;
																									float num1095 = 500f;
																									for (int num1096 = 0; num1096 < 200; num1096++)
																									{
																										NPC nPC16 = Main.npc[num1096];
																										if (nPC16.active && nPC16.chaseable && !nPC16.dontTakeDamage && !nPC16.immortal)
																										{
																											float num1097 = base.Distance(nPC16.Center);
																											if (nPC16.friendly || nPC16.lifeMax <= 5)
																											{
																												if (num1097 < num1094 && !flag71)
																												{
																													num1094 = num1097;
																													num1093 = num1096;
																												}
																											}
																											else if (num1097 < num1095)
																											{
																												num1095 = num1097;
																												num1092 = num1096;
																											}
																										}
																									}
																									float num1098;
																									if (flag71)
																									{
																										num1098 = base.AngleTo(base.Center + player10.velocity);
																										num1091 = 1;
																										num1089 = MathHelper.Clamp(num1089 + 0.05f, 0f, max);
																										num1090 += (float)Math.Sign(-10f - num1090);
																									}
																									else if (num1092 != -1)
																									{
																										num1098 = base.AngleTo(Main.npc[num1092].Center);
																										num1091 = 2;
																										num1089 = MathHelper.Clamp(num1089 + 0.05f, 0f, max);
																										num1090 += (float)Math.Sign(-12f - num1090);
																									}
																									else if (num1093 != -1)
																									{
																										num1098 = base.AngleTo(Main.npc[num1093].Center);
																										num1091 = 3;
																										num1089 = MathHelper.Clamp(num1089 + 0.05f, 0f, max);
																										num1090 += (float)Math.Sign(6f - num1090);
																									}
																									else if (this.ai[0] > 0f)
																									{
																										num1098 = this.ai[1];
																										num1089 = MathHelper.Clamp(num1089 + (float)Math.Sign(0.75f - num1089) * 0.05f, 0f, max);
																										num1091 = 4;
																										num1090 += (float)Math.Sign(10f - num1090);
																										if (Main.rand.Next(10) == 0)
																										{
																											int num1099 = Dust.NewDust(base.Center + f3.ToRotationVector2() * 6f * num1089 - Vector2.One * 4f, 8, 8, 204, 0f, 0f, 150, default(Color), 0.3f);
																											Main.dust[num1099].fadeIn = 0.75f;
																											Main.dust[num1099].velocity *= 0.1f;
																										}
																									}
																									else
																									{
																										num1098 = ((player10.direction == 1) ? 0f : 3.14160275f);
																										num1089 = MathHelper.Clamp(num1089 + (float)Math.Sign(0.75f - num1089) * 0.05f, 0f, max);
																										num1090 += (float)Math.Sign(0f - num1090);
																										amount2 = 0.12f;
																									}
																									Vector2 value71 = num1098.ToRotationVector2();
																									num1098 = Vector2.Lerp(f3.ToRotationVector2(), value71, amount2).ToRotation();
																									this.localAI[0] = num1098 + (float)num1091 * 6.28318548f + 3.14159274f;
																									this.localAI[1] = num1090 + num1089;
																									return;
																								}
																								else
																								{
																									if (this.aiStyle == 125)
																									{
																										Player player11 = Main.player[this.owner];
																										if (Main.myPlayer == this.owner)
																										{
																											if (this.localAI[1] > 0f)
																											{
																												this.localAI[1] -= 1f;
																											}
																											if (player11.noItems || player11.CCed || player11.dead)
																											{
																												this.Kill();
																											}
																											else if (Main.mouseRight && Main.mouseRightRelease)
																											{
																												this.Kill();
																												player11.mouseInterface = true;
																												Main.blockMouse = true;
																											}
																											else if (!player11.channel)
																											{
																												if (this.localAI[0] == 0f)
																												{
																													this.localAI[0] = 1f;
																												}
																												this.Kill();
																											}
																											else if (this.localAI[1] == 0f)
																											{
																												Vector2 vector144 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY);
																												if (player11.gravDir == -1f)
																												{
																													vector144.Y = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y;
																												}
																												if (vector144 != base.Center)
																												{
																													this.netUpdate = true;
																													base.Center = vector144;
																													this.localAI[1] = 1f;
																												}
																												if (this.ai[0] == 0f && this.ai[1] == 0f)
																												{
																													this.ai[0] = (float)((int)base.Center.X / 16);
																													this.ai[1] = (float)((int)base.Center.Y / 16);
																													this.netUpdate = true;
																													this.velocity = Vector2.Zero;
																												}
																											}
																											this.velocity = Vector2.Zero;
																											Point point5 = new Vector2(this.ai[0], this.ai[1]).ToPoint();
																											Point point6 = base.Center.ToTileCoordinates();
																											Math.Abs(point5.X - point6.X);
																											Math.Abs(point5.Y - point6.Y);
																											int num1100 = Math.Sign(point6.X - point5.X);
																											int num1101 = Math.Sign(point6.Y - point5.Y);
																											Point point7 = default(Point);
																											bool flag72 = false;
																											bool flag73 = player11.direction == 1;
																											int num1102;
																											int num1103;
																											int num1104;
																											if (flag73)
																											{
																												point7.X = point5.X;
																												num1102 = point5.Y;
																												num1103 = point6.Y;
																												num1104 = num1101;
																											}
																											else
																											{
																												point7.Y = point5.Y;
																												num1102 = point5.X;
																												num1103 = point6.X;
																												num1104 = num1100;
																											}
																											int num1105 = num1102;
																											while (num1105 != num1103 && !flag72)
																											{
																												if (flag73)
																												{
																													point7.Y = num1105;
																												}
																												else
																												{
																													point7.X = num1105;
																												}
																												if (WorldGen.InWorld(point7.X, point7.Y, 1))
																												{
																													Tile tile2 = Main.tile[point7.X, point7.Y];
																												}
																												num1105 += num1104;
																											}
																											if (flag73)
																											{
																												point7.Y = point6.Y;
																												num1102 = point5.X;
																												num1103 = point6.X;
																												num1104 = num1100;
																											}
																											else
																											{
																												point7.X = point6.X;
																												num1102 = point5.Y;
																												num1103 = point6.Y;
																												num1104 = num1101;
																											}
																											int num1106 = num1102;
																											while (num1106 != num1103 && !flag72)
																											{
																												if (!flag73)
																												{
																													point7.Y = num1106;
																												}
																												else
																												{
																													point7.X = num1106;
																												}
																												if (WorldGen.InWorld(point7.X, point7.Y, 1))
																												{
																													Tile tile2 = Main.tile[point7.X, point7.Y];
																												}
																												num1106 += num1104;
																											}
																										}
																										int num1107 = Math.Sign(player11.velocity.X);
																										if (num1107 != 0)
																										{
																											player11.ChangeDir(num1107);
																										}
																										player11.heldProj = this.whoAmI;
																										player11.itemTime = 2;
																										player11.itemAnimation = 2;
																										player11.itemRotation = 0f;
																										return;
																									}
																									if (this.aiStyle == 126)
																									{
																										int num1108 = Math.Sign(this.velocity.Y);
																										int num1109 = (num1108 == -1) ? 0 : 1;
																										if (this.ai[0] == 0f)
																										{
																											if (!Collision.SolidCollision(this.position + new Vector2(0f, (float)((num1108 == -1) ? (this.height - 48) : 0)), this.width, 48) && !Collision.WetCollision(this.position + new Vector2(0f, (float)((num1108 == -1) ? (this.height - 20) : 0)), this.width, 20))
																											{
																												this.velocity = new Vector2(0f, (float)Math.Sign(this.velocity.Y) * 0.001f);
																												this.ai[0] = 1f;
																												this.ai[1] = 0f;
																												this.timeLeft = 60;
																											}
																											this.ai[1] += 1f;
																											if (this.ai[1] >= 60f)
																											{
																												this.Kill();
																											}
																											for (int num1110 = 0; num1110 < 3; num1110++)
																											{
																												int num1111 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 100, default(Color), 1f);
																												Main.dust[num1111].scale = 0.1f + (float)Main.rand.Next(5) * 0.1f;
																												Main.dust[num1111].fadeIn = 1.5f + (float)Main.rand.Next(5) * 0.1f;
																												Main.dust[num1111].noGravity = true;
																												Main.dust[num1111].position = base.Center + new Vector2(0f, (float)(-(float)this.height / 2)).RotatedBy((double)this.rotation, default(Vector2)) * 1.1f;
																											}
																										}
																										if (this.ai[0] == 1f)
																										{
																											this.velocity = new Vector2(0f, (float)Math.Sign(this.velocity.Y) * 0.001f);
																											if (num1108 != 0)
																											{
																												int num1112 = 16;
																												while (num1112 < 320 && !Collision.SolidCollision(this.position + new Vector2(0f, (float)((num1108 == -1) ? (this.height - num1112 - 16) : 0)), this.width, num1112 + 16))
																												{
																													num1112 += 16;
																												}
																												if (num1108 == -1)
																												{
																													this.position.Y = this.position.Y + (float)this.height;
																													this.height = num1112;
																													this.position.Y = this.position.Y - (float)num1112;
																												}
																												else
																												{
																													this.height = num1112;
																												}
																											}
																											this.ai[1] += 1f;
																											if (this.ai[1] >= 60f)
																											{
																												this.Kill();
																											}
																											if (this.localAI[0] == 0f)
																											{
																												this.localAI[0] = 1f;
																												int num1113 = 0;
																												while ((float)num1113 < 60f)
																												{
																													int num1114 = Utils.SelectRandom<int>(Main.rand, new int[]
																														{
																															6,
																															259,
																															158
																														});
																													int num1115 = Dust.NewDust(this.position, this.width, this.height, num1114, 0f, -2.5f * (float)(-(float)num1108), 0, default(Color), 1f);
																													Main.dust[num1115].alpha = 200;
																													Main.dust[num1115].velocity *= new Vector2(0.3f, 2f);
																													Dust expr_306BD_cp_0 = Main.dust[num1115];
																													expr_306BD_cp_0.velocity.Y = expr_306BD_cp_0.velocity.Y + (float)(2 * num1108);
																													Main.dust[num1115].scale += Main.rand.NextFloat();
																													Main.dust[num1115].position = new Vector2(base.Center.X, base.Center.Y + (float)this.height * 0.5f * (float)(-(float)num1108));
																													Main.dust[num1115].customData = num1109;
																													if (num1108 == -1 && Main.rand.Next(4) != 0)
																													{
																														Dust expr_3076A_cp_0 = Main.dust[num1115];
																														expr_3076A_cp_0.velocity.Y = expr_3076A_cp_0.velocity.Y - 0.2f;
																													}
																													num1113++;
																												}
																												Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 34);
																											}
																											if (num1108 == 1)
																											{
																												int num1116 = 0;
																												while ((float)num1116 < 9f)
																												{
																													int num1117 = Utils.SelectRandom<int>(Main.rand, new int[]
																														{
																															6,
																															259,
																															158
																														});
																													int num1118 = Dust.NewDust(this.position, this.width, this.height, num1117, 0f, -2.5f * (float)(-(float)num1108), 0, default(Color), 1f);
																													Main.dust[num1118].alpha = 200;
																													Main.dust[num1118].velocity *= new Vector2(0.3f, 2f);
																													Dust expr_30891_cp_0 = Main.dust[num1118];
																													expr_30891_cp_0.velocity.Y = expr_30891_cp_0.velocity.Y + (float)(2 * num1108);
																													Main.dust[num1118].scale += Main.rand.NextFloat();
																													Main.dust[num1118].position = new Vector2(base.Center.X, base.Center.Y + (float)this.height * 0.5f * (float)(-(float)num1108));
																													Main.dust[num1118].customData = num1109;
																													if (num1108 == -1 && Main.rand.Next(4) != 0)
																													{
																														Dust expr_3093E_cp_0 = Main.dust[num1118];
																														expr_3093E_cp_0.velocity.Y = expr_3093E_cp_0.velocity.Y - 0.2f;
																													}
																													num1116++;
																												}
																											}
																											int num1119 = (int)(this.ai[1] / 60f * (float)this.height) * 3;
																											if (num1119 > this.height)
																											{
																												num1119 = this.height;
																											}
																											Vector2 position = this.position + ((num1108 == -1) ? new Vector2(0f, (float)(this.height - num1119)) : Vector2.Zero);
																											Vector2 vector145 = this.position + ((num1108 == -1) ? new Vector2(0f, (float)this.height) : Vector2.Zero);
																											int num1120 = 0;
																											while ((float)num1120 < 6f)
																											{
																												if (Main.rand.Next(3) < 2)
																												{
																													int num1121 = Dust.NewDust(position, this.width, num1119, 6, 0f, 0f, 90, default(Color), 2.5f);
																													Main.dust[num1121].noGravity = true;
																													Main.dust[num1121].fadeIn = 1f;
																													if (Main.dust[num1121].velocity.Y > 0f)
																													{
																														Dust expr_30A9C_cp_0 = Main.dust[num1121];
																														expr_30A9C_cp_0.velocity.Y = expr_30A9C_cp_0.velocity.Y * -1f;
																													}
																													if (Main.rand.Next(6) < 3)
																													{
																														Main.dust[num1121].position.Y = MathHelper.Lerp(Main.dust[num1121].position.Y, vector145.Y, 0.5f);
																														Main.dust[num1121].velocity *= 5f;
																														Dust expr_30B27_cp_0 = Main.dust[num1121];
																														expr_30B27_cp_0.velocity.Y = expr_30B27_cp_0.velocity.Y - 3f;
																														Main.dust[num1121].position.X = base.Center.X;
																														Main.dust[num1121].noGravity = false;
																														Main.dust[num1121].noLight = true;
																														Main.dust[num1121].fadeIn = 0.4f;
																														Main.dust[num1121].scale *= 0.3f;
																													}
																													else
																													{
																														Main.dust[num1121].velocity = base.DirectionFrom(Main.dust[num1121].position) * Main.dust[num1121].velocity.Length() * 0.25f;
																													}
																													Dust expr_30BFE_cp_0 = Main.dust[num1121];
																													expr_30BFE_cp_0.velocity.Y = expr_30BFE_cp_0.velocity.Y * (float)(-(float)num1108);
																													Main.dust[num1121].customData = num1109;
																												}
																												num1120++;
																											}
																											int num1122 = 0;
																											while ((float)num1122 < 6f)
																											{
																												if (Main.rand.NextFloat() >= 0.5f)
																												{
																													int num1123 = Utils.SelectRandom<int>(Main.rand, new int[]
																														{
																															6,
																															259,
																															158
																														});
																													int num1124 = Dust.NewDust(position, this.width, num1119, num1123, 0f, -2.5f * (float)(-(float)num1108), 0, default(Color), 1f);
																													Main.dust[num1124].alpha = 200;
																													Main.dust[num1124].velocity *= new Vector2(0.6f, 1.5f);
																													Main.dust[num1124].scale += Main.rand.NextFloat();
																													if (num1108 == -1 && Main.rand.Next(4) != 0)
																													{
																														Dust expr_30D58_cp_0 = Main.dust[num1124];
																														expr_30D58_cp_0.velocity.Y = expr_30D58_cp_0.velocity.Y - 0.2f;
																													}
																													Main.dust[num1124].customData = num1109;
																												}
																												num1122++;
																											}
																											return;
																										}
																									}
																									else if (this.aiStyle == 127)
																									{
																										float num1125 = 900f;
																										if (this.type == 657)
																										{
																											num1125 = 300f;
																										}
																										if (this.soundDelay == 0)
																										{
																											this.soundDelay = -1;
																											Main.PlaySound(2, base.Center, 82);
																										}
																										this.ai[0] += 1f;
																										if (this.ai[0] >= num1125)
																										{
																											this.Kill();
																										}
																										if (this.type == 656 && this.localAI[0] >= 30f)
																										{
																											this.damage = 0;
																											if (this.ai[0] < num1125 - 120f)
																											{
																												float num1126 = this.ai[0] % 60f;
																												this.ai[0] = num1125 - 120f + num1126;
																												this.netUpdate = true;
																											}
																										}
																										float num1127 = 15f;
																										float num1128 = 15f;
																										Point point8 = base.Center.ToTileCoordinates();
																										int num1129;
																										int num1130;
																										Collision.ExpandVertically(point8.X, point8.Y, out num1129, out num1130, (int)num1127, (int)num1128);
																										num1129++;
																										num1130--;
																										Vector2 value72 = new Vector2((float)point8.X, (float)num1129) * 16f + new Vector2(8f);
																										Vector2 value73 = new Vector2((float)point8.X, (float)num1130) * 16f + new Vector2(8f);
																										Vector2 vector146 = Vector2.Lerp(value72, value73, 0.5f);
																										Vector2 value74 = new Vector2(0f, value73.Y - value72.Y);
																										value74.X = value74.Y * 0.2f;
																										this.width = (int)(value74.X * 0.65f);
																										this.height = (int)value74.Y;
																										base.Center = vector146;
																										if (this.type == 656 && this.owner == Main.myPlayer)
																										{
																											bool flag74 = false;
																											Vector2 center16 = Main.player[this.owner].Center;
																											Vector2 top = Main.player[this.owner].Top;
																											for (float num1131 = 0f; num1131 < 1f; num1131 += 0.05f)
																											{
																												Vector2 position2 = Vector2.Lerp(value72, value73, num1131);
																												if (Collision.CanHitLine(position2, 0, 0, center16, 0, 0) || Collision.CanHitLine(position2, 0, 0, top, 0, 0))
																												{
																													flag74 = true;
																													break;
																												}
																											}
																											if (!flag74 && this.ai[0] < num1125 - 120f)
																											{
																												float num1132 = this.ai[0] % 60f;
																												this.ai[0] = num1125 - 120f + num1132;
																												this.netUpdate = true;
																											}
																										}
																										if (this.ai[0] < num1125 - 120f)
																										{
																											for (int num1133 = 0; num1133 < 1; num1133++)
																											{
																												float value75 = -0.5f;
																												float value76 = 0.9f;
																												float amount3 = Main.rand.NextFloat();
																												Vector2 value77 = new Vector2(MathHelper.Lerp(0.1f, 1f, Main.rand.NextFloat()), MathHelper.Lerp(value75, value76, amount3));
																												value77.X *= MathHelper.Lerp(2.2f, 0.6f, amount3);
																												value77.X *= -1f;
																												Vector2 value78 = new Vector2(6f, 10f);
																												Vector2 position3 = vector146 + value74 * value77 * 0.5f + value78;
																												Dust dust33 = Main.dust[Dust.NewDust(position3, 0, 0, 269, 0f, 0f, 0, default(Color), 1f)];
																												dust33.position = position3;
																												dust33.customData = vector146 + value78;
																												dust33.fadeIn = 1f;
																												dust33.scale = 0.3f;
																												if (value77.X > -1.2f)
																												{
																													dust33.velocity.X = 1f + Main.rand.NextFloat();
																												}
																												dust33.velocity.Y = Main.rand.NextFloat() * -0.5f - 1f;
																											}
																											return;
																										}
																									}
																									else if (this.aiStyle == 128)
																									{
																										Color newColor3 = new Color(255, 255, 255);
																										if (this.soundDelay == 0)
																										{
																											this.soundDelay = -1;
																											Main.PlaySound(2, base.Center, 60);
																										}
																										if (this.localAI[1] < 30f)
																										{
																											for (int num1134 = 0; num1134 < 1; num1134++)
																											{
																												float value79 = -0.5f;
																												float value80 = 0.9f;
																												float amount4 = Main.rand.NextFloat();
																												Vector2 value81 = new Vector2(MathHelper.Lerp(0.1f, 1f, Main.rand.NextFloat()), MathHelper.Lerp(value79, value80, amount4));
																												value81.X *= MathHelper.Lerp(2.2f, 0.6f, amount4);
																												value81.X *= -1f;
																												Vector2 value82 = new Vector2(2f, 10f);
																												Vector2 position4 = base.Center + new Vector2(60f, 200f) * value81 * 0.5f + value82;
																												Dust dust34 = Main.dust[Dust.NewDust(position4, 0, 0, 269, 0f, 0f, 0, default(Color), 1f)];
																												dust34.position = position4;
																												dust34.customData = base.Center + value82;
																												dust34.fadeIn = 1f;
																												dust34.scale = 0.3f;
																												if (value81.X > -1.2f)
																												{
																													dust34.velocity.X = 1f + Main.rand.NextFloat();
																												}
																												dust34.velocity.Y = Main.rand.NextFloat() * -0.5f - 1f;
																											}
																										}
																										if (this.localAI[0] == 0f)
																										{
																											this.localAI[0] = 0.8f;
																											this.direction = 1;
																											Point point9 = base.Center.ToTileCoordinates();
																											base.Center = new Vector2((float)(point9.X * 16 + 8), (float)(point9.Y * 16 + 8));
																										}
																										this.rotation = this.localAI[1] / 40f * 6.28318548f * (float)this.direction;
																										if (this.localAI[1] < 33f)
																										{
																											if (this.alpha > 0)
																											{
																												this.alpha -= 8;
																											}
																											if (this.alpha < 0)
																											{
																												this.alpha = 0;
																											}
																										}
																										if (this.localAI[1] > 103f)
																										{
																											if (this.alpha < 255)
																											{
																												this.alpha += 16;
																											}
																											if (this.alpha > 255)
																											{
																												this.alpha = 255;
																											}
																										}
																										if (this.alpha == 0)
																										{
																											Lighting.AddLight(base.Center, newColor3.ToVector3() * 0.5f);
																										}
																										for (int num1135 = 0; num1135 < 2; num1135++)
																										{
																											if (Main.rand.Next(10) == 0)
																											{
																												Vector2 value83 = Vector2.UnitY.RotatedBy((double)((float)num1135 * 3.14159274f), default(Vector2)).RotatedBy((double)this.rotation, default(Vector2));
																												Dust dust35 = Main.dust[Dust.NewDust(base.Center, 0, 0, 267, 0f, 0f, 225, newColor3, 1.5f)];
																												dust35.noGravity = true;
																												dust35.noLight = true;
																												dust35.scale = this.Opacity * this.localAI[0];
																												dust35.position = base.Center;
																												dust35.velocity = value83 * 2.5f;
																											}
																										}
																										for (int num1136 = 0; num1136 < 2; num1136++)
																										{
																											if (Main.rand.Next(10) == 0)
																											{
																												Vector2 value84 = Vector2.UnitY.RotatedBy((double)((float)num1136 * 3.14159274f), default(Vector2));
																												Dust dust36 = Main.dust[Dust.NewDust(base.Center, 0, 0, 267, 0f, 0f, 225, newColor3, 1.5f)];
																												dust36.noGravity = true;
																												dust36.noLight = true;
																												dust36.scale = this.Opacity * this.localAI[0];
																												dust36.position = base.Center;
																												dust36.velocity = value84 * 2.5f;
																											}
																										}
																										if (this.localAI[1] < 33f || this.localAI[1] > 87f)
																										{
																											this.scale = this.Opacity / 2f * this.localAI[0];
																										}
																										this.velocity = Vector2.Zero;
																										this.localAI[1] += 1f;
																										if (this.localAI[1] == 60f && this.owner == Main.myPlayer)
																										{
																											int num1137 = 30;
																											if (Main.expertMode)
																											{
																												num1137 = 22;
																											}
																											Projectile.NewProjectile(base.Center, Vector2.Zero, 657, num1137, 3f, this.owner, 0f, 0f);
																										}
																										if (this.localAI[1] >= 120f)
																										{
																											this.Kill();
																											return;
																										}
																									}
																									else if (this.aiStyle == 129)
																									{
																										float num1138 = 10f;
																										float scaleFactor18 = 5f;
																										float num1139 = 40f;
																										if (this.type == 659)
																										{
																											num1138 = 3f;
																											scaleFactor18 = 7.5f;
																											num1139 = 1f;
																											if (this.localAI[0] > 0f)
																											{
																												this.localAI[0] -= 1f;
																											}
																											if (this.localAI[0] == 0f && this.ai[0] < 0f && this.owner == Main.myPlayer)
																											{
																												this.localAI[0] = 5f;
																												for (int num1140 = 0; num1140 < 200; num1140++)
																												{
																													NPC nPC17 = Main.npc[num1140];
																													if (nPC17.CanBeChasedBy(this, false))
																													{
																														bool flag75 = this.ai[0] < 0f || Main.npc[(int)this.ai[0]].Distance(base.Center) > nPC17.Distance(base.Center);
																														flag75 &= (nPC17.Distance(base.Center) < 400f);
																														if (flag75 && (Collision.CanHitLine(base.Center, 0, 0, nPC17.Center, 0, 0) || Collision.CanHitLine(base.Center, 0, 0, nPC17.Top, 0, 0)))
																														{
																															this.ai[0] = (float)num1140;
																														}
																													}
																												}
																												if (this.ai[0] >= 0f)
																												{
																													this.timeLeft = 300;
																													this.netUpdate = true;
																												}
																											}
																											if (this.timeLeft > 30 && this.alpha > 0)
																											{
																												this.alpha -= 12;
																											}
																											if (this.timeLeft > 30 && this.alpha < 128 && Collision.SolidCollision(this.position, this.width, this.height))
																											{
																												this.alpha = 128;
																											}
																											if (this.alpha < 0)
																											{
																												this.alpha = 0;
																											}
																											if (++this.frameCounter > 4)
																											{
																												this.frameCounter = 0;
																												if (++this.frame >= 4)
																												{
																													this.frame = 0;
																												}
																											}
																											float num1141 = 0.5f;
																											if (this.timeLeft < 120)
																											{
																												num1141 = 1.1f;
																											}
																											if (this.timeLeft < 60)
																											{
																												num1141 = 1.6f;
																											}
																											this.ai[1] += 1f;
																											float arg_31B42_0 = this.ai[1] / 180f;
																											for (float num1142 = 0f; num1142 < 3f; num1142 += 1f)
																											{
																												if (Main.rand.Next(3) == 0)
																												{
																													Dust dust37 = Main.dust[Dust.NewDust(base.Center, 0, 0, 27, 0f, -2f, 0, default(Color), 1f)];
																													dust37.position = base.Center + Vector2.UnitY.RotatedBy((double)(num1142 * 6.28318548f / 3f + this.ai[1]), default(Vector2)) * 10f;
																													dust37.noGravity = true;
																													dust37.velocity = base.DirectionFrom(dust37.position);
																													dust37.scale = num1141;
																													dust37.fadeIn = 0.5f;
																													dust37.alpha = 200;
																												}
																											}
																										}
																										if (this.timeLeft > 2 && Collision.SolidCollision(this.position, this.width, this.height))
																										{
																											this.timeLeft = 2;
																										}
																										int num1143 = (int)this.ai[0];
																										if (num1143 >= 0 && Main.npc[num1143].active)
																										{
																											if (base.Distance(Main.npc[num1143].Center) > num1139)
																											{
																												Vector2 vector147 = base.DirectionTo(Main.npc[num1143].Center);
																												if (vector147.HasNaNs())
																												{
																													vector147 = Vector2.UnitY;
																												}
																												this.velocity = (this.velocity * (num1138 - 1f) + vector147 * scaleFactor18) / num1138;
																												return;
																											}
																										}
																										else
																										{
																											if (this.ai[0] == -1f && this.timeLeft > 5)
																											{
																												this.timeLeft = 5;
																											}
																											if (this.ai[0] == -2f && this.timeLeft > 180)
																											{
																												this.timeLeft = 180;
																											}
																											if (this.ai[0] >= 0f)
																											{
																												this.ai[0] = -1f;
																												this.netUpdate = true;
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}

		private void AI_001()
		{
			if (this.type == 469 && this.wet && !this.honeyWet)
			{
				this.Kill();
			}
			if (this.type == 601)
			{
				Color portalColor = PortalHelper.GetPortalColor(this.owner, (int)this.ai[0]);
				Vector3 vector = portalColor.ToVector3();
				vector *= 0.5f;
				Lighting.AddLight(base.Center + this.velocity * 3f, vector);
				if (this.alpha > 0 && this.alpha <= 15)
				{
					Color color = portalColor;
					color.A = 255;
					for (int i = 0; i < 4; i++)
					{
						Dust dust = Main.dust[Dust.NewDust(base.Center, 0, 0, 264, 0f, 0f, 0, default(Color), 1f)];
						dust.position = base.Center;
						dust.velocity = this.velocity * 2f + Utils.RandomVector2(Main.rand, -1f, 1f);
						dust.color = color;
						dust.scale = 1.2f;
						dust.noLight = true;
						dust.noGravity = true;
						dust.customData = Main.player[this.owner];
					}
				}
				this.alpha -= 15;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				if (++this.frameCounter >= 4)
				{
					this.frameCounter = 0;
					if (++this.frame >= Main.projFrames[this.type])
					{
						this.frame = 0;
					}
				}
				if (this.alpha == 0)
				{
					Color color2 = portalColor;
					color2.A = 255;
					Dust dust2 = Main.dust[Dust.NewDust(base.Center, 0, 0, 263, 0f, 0f, 0, default(Color), 1f)];
					dust2.position = base.Center;
					dust2.velocity = this.velocity / 4f;
					dust2.color = color2;
					dust2.noGravity = true;
					dust2.scale = 0.6f;
				}
			}
			if (this.type == 472)
			{
				int num = Dust.NewDust(this.position, this.width, this.height, 30, 0f, 0f, 0, default(Color), 1f);
				Main.dust[num].noGravity = true;
				Main.dust[num].velocity *= 0.25f;
				Main.dust[num].velocity += this.velocity * 0.75f;
				if (this.localAI[0] == 0f)
				{
					this.localAI[0] = 1f;
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
					for (int j = 0; j < 20; j++)
					{
						num = Dust.NewDust(this.position, this.width, this.height, 30, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num].noGravity = true;
						Main.dust[num].velocity *= 0.25f;
						Main.dust[num].velocity += this.velocity;
						Dust expr_3D3_cp_0 = Main.dust[num];
						expr_3D3_cp_0.velocity.X = expr_3D3_cp_0.velocity.X * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
						Dust expr_407_cp_0 = Main.dust[num];
						expr_407_cp_0.velocity.Y = expr_407_cp_0.velocity.Y * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
					}
				}
			}
			if (this.type == 323)
			{
				this.alpha -= 50;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
			}
			if (this.type == 436)
			{
				if (this.ai[1] == 0f)
				{
					this.ai[1] = 1f;
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 12);
				}
				this.alpha -= 40;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				this.spriteDirection = this.direction;
				this.frameCounter++;
				if (this.frameCounter >= 3)
				{
					this.frame++;
					this.frameCounter = 0;
					if (this.frame >= 4)
					{
						this.frame = 0;
					}
				}
				Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.3f, 1.1f, 0.5f);
			}
			if (this.type == 467)
			{
				if (this.ai[1] == 0f)
				{
					this.ai[1] = 1f;
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 34);
				}
				else if (this.ai[1] == 1f && Main.netMode != 1)
				{
					int num2 = -1;
					float num3 = 2000f;
					for (int k = 0; k < 255; k++)
					{
						if (Main.player[k].active && !Main.player[k].dead)
						{
							Vector2 center = Main.player[k].Center;
							float num4 = Vector2.Distance(center, base.Center);
							if ((num4 < num3 || num2 == -1) && Collision.CanHit(base.Center, 1, 1, center, 1, 1))
							{
								num3 = num4;
								num2 = k;
							}
						}
					}
					if (num3 < 20f)
					{
						this.Kill();
						return;
					}
					if (num2 != -1)
					{
						this.ai[1] = 21f;
						this.ai[0] = (float)num2;
						this.netUpdate = true;
					}
				}
				else if (this.ai[1] > 20f && this.ai[1] < 200f)
				{
					this.ai[1] += 1f;
					int num5 = (int)this.ai[0];
					if (!Main.player[num5].active || Main.player[num5].dead)
					{
						this.ai[1] = 1f;
						this.ai[0] = 0f;
						this.netUpdate = true;
					}
					else
					{
						float num6 = this.velocity.ToRotation();
						Vector2 vector2 = Main.player[num5].Center - base.Center;
						if (vector2.Length() < 20f)
						{
							this.Kill();
							return;
						}
						float targetAngle = vector2.ToRotation();
						if (vector2 == Vector2.Zero)
						{
							targetAngle = num6;
						}
						float num7 = num6.AngleLerp(targetAngle, 0.008f);
						this.velocity = new Vector2(this.velocity.Length(), 0f).RotatedBy((double)num7, default(Vector2));
					}
				}
				if (this.ai[1] >= 1f && this.ai[1] < 20f)
				{
					this.ai[1] += 1f;
					if (this.ai[1] == 20f)
					{
						this.ai[1] = 1f;
					}
				}
				this.alpha -= 40;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				this.spriteDirection = this.direction;
				this.frameCounter++;
				if (this.frameCounter >= 3)
				{
					this.frame++;
					this.frameCounter = 0;
					if (this.frame >= 4)
					{
						this.frame = 0;
					}
				}
				Lighting.AddLight(base.Center, 1.1f, 0.9f, 0.4f);
				this.localAI[0] += 1f;
				if (this.localAI[0] == 12f)
				{
					this.localAI[0] = 0f;
					for (int l = 0; l < 12; l++)
					{
						Vector2 vector3 = Vector2.UnitX * (float)(-(float)this.width) / 2f;
						vector3 += -Vector2.UnitY.RotatedBy((double)((float)l * 3.14159274f / 6f), default(Vector2)) * new Vector2(8f, 16f);
						vector3 = vector3.RotatedBy((double)(this.rotation - 1.57079637f), default(Vector2));
						int num8 = Dust.NewDust(base.Center, 0, 0, 6, 0f, 0f, 160, default(Color), 1f);
						Main.dust[num8].scale = 1.1f;
						Main.dust[num8].noGravity = true;
						Main.dust[num8].position = base.Center + vector3;
						Main.dust[num8].velocity = this.velocity * 0.1f;
						Main.dust[num8].velocity = Vector2.Normalize(base.Center - this.velocity * 3f - Main.dust[num8].position) * 1.25f;
					}
				}
				if (Main.rand.Next(4) == 0)
				{
					for (int m = 0; m < 1; m++)
					{
						Vector2 value = -Vector2.UnitX.RotatedByRandom(0.19634954631328583).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
						int num9 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num9].velocity *= 0.1f;
						Main.dust[num9].position = base.Center + value * (float)this.width / 2f;
						Main.dust[num9].fadeIn = 0.9f;
					}
				}
				if (Main.rand.Next(32) == 0)
				{
					for (int n = 0; n < 1; n++)
					{
						Vector2 value2 = -Vector2.UnitX.RotatedByRandom(0.39269909262657166).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
						int num10 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 155, default(Color), 0.8f);
						Main.dust[num10].velocity *= 0.3f;
						Main.dust[num10].position = base.Center + value2 * (float)this.width / 2f;
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num10].fadeIn = 1.4f;
						}
					}
				}
				if (Main.rand.Next(2) == 0)
				{
					for (int num11 = 0; num11 < 2; num11++)
					{
						Vector2 value3 = -Vector2.UnitX.RotatedByRandom(0.78539818525314331).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
						int num12 = Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1.2f);
						Main.dust[num12].velocity *= 0.3f;
						Main.dust[num12].noGravity = true;
						Main.dust[num12].position = base.Center + value3 * (float)this.width / 2f;
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num12].fadeIn = 1.4f;
						}
					}
				}
			}
			if (this.type == 468)
			{
				if (this.ai[1] == 0f)
				{
					this.ai[1] = 1f;
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 34);
				}
				else if (this.ai[1] == 1f && Main.netMode != 1)
				{
					int num13 = -1;
					float num14 = 2000f;
					for (int num15 = 0; num15 < 255; num15++)
					{
						if (Main.player[num15].active && !Main.player[num15].dead)
						{
							Vector2 center2 = Main.player[num15].Center;
							float num16 = Vector2.Distance(center2, base.Center);
							if ((num16 < num14 || num13 == -1) && Collision.CanHit(base.Center, 1, 1, center2, 1, 1))
							{
								num14 = num16;
								num13 = num15;
							}
						}
					}
					if (num14 < 20f)
					{
						this.Kill();
						return;
					}
					if (num13 != -1)
					{
						this.ai[1] = 21f;
						this.ai[0] = (float)num13;
						this.netUpdate = true;
					}
				}
				else if (this.ai[1] > 20f && this.ai[1] < 200f)
				{
					this.ai[1] += 1f;
					int num17 = (int)this.ai[0];
					if (!Main.player[num17].active || Main.player[num17].dead)
					{
						this.ai[1] = 1f;
						this.ai[0] = 0f;
						this.netUpdate = true;
					}
					else
					{
						float num18 = this.velocity.ToRotation();
						Vector2 vector4 = Main.player[num17].Center - base.Center;
						if (vector4.Length() < 20f)
						{
							this.Kill();
							return;
						}
						float targetAngle2 = vector4.ToRotation();
						if (vector4 == Vector2.Zero)
						{
							targetAngle2 = num18;
						}
						float num19 = num18.AngleLerp(targetAngle2, 0.01f);
						this.velocity = new Vector2(this.velocity.Length(), 0f).RotatedBy((double)num19, default(Vector2));
					}
				}
				if (this.ai[1] >= 1f && this.ai[1] < 20f)
				{
					this.ai[1] += 1f;
					if (this.ai[1] == 20f)
					{
						this.ai[1] = 1f;
					}
				}
				this.alpha -= 40;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				this.spriteDirection = this.direction;
				this.frameCounter++;
				if (this.frameCounter >= 3)
				{
					this.frame++;
					this.frameCounter = 0;
					if (this.frame >= 4)
					{
						this.frame = 0;
					}
				}
				Lighting.AddLight(base.Center, 0.2f, 0.1f, 0.6f);
				this.localAI[0] += 1f;
				if (this.localAI[0] == 12f)
				{
					this.localAI[0] = 0f;
					for (int num20 = 0; num20 < 12; num20++)
					{
						Vector2 vector5 = Vector2.UnitX * (float)(-(float)this.width) / 2f;
						vector5 += -Vector2.UnitY.RotatedBy((double)((float)num20 * 3.14159274f / 6f), default(Vector2)) * new Vector2(8f, 16f);
						vector5 = vector5.RotatedBy((double)(this.rotation - 1.57079637f), default(Vector2));
						int num21 = Dust.NewDust(base.Center, 0, 0, 27, 0f, 0f, 160, default(Color), 1f);
						Main.dust[num21].scale = 1.1f;
						Main.dust[num21].noGravity = true;
						Main.dust[num21].position = base.Center + vector5;
						Main.dust[num21].velocity = this.velocity * 0.1f;
						Main.dust[num21].velocity = Vector2.Normalize(base.Center - this.velocity * 3f - Main.dust[num21].position) * 1.25f;
					}
				}
				if (Main.rand.Next(4) == 0)
				{
					for (int num22 = 0; num22 < 1; num22++)
					{
						Vector2 value4 = -Vector2.UnitX.RotatedByRandom(0.19634954631328583).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
						int num23 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num23].velocity *= 0.1f;
						Main.dust[num23].position = base.Center + value4 * (float)this.width / 2f;
						Main.dust[num23].fadeIn = 0.9f;
					}
				}
				if (Main.rand.Next(32) == 0)
				{
					for (int num24 = 0; num24 < 1; num24++)
					{
						Vector2 value5 = -Vector2.UnitX.RotatedByRandom(0.39269909262657166).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
						int num25 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 155, default(Color), 0.8f);
						Main.dust[num25].velocity *= 0.3f;
						Main.dust[num25].position = base.Center + value5 * (float)this.width / 2f;
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num25].fadeIn = 1.4f;
						}
					}
				}
				if (Main.rand.Next(2) == 0)
				{
					for (int num26 = 0; num26 < 2; num26++)
					{
						Vector2 value6 = -Vector2.UnitX.RotatedByRandom(0.78539818525314331).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
						int num27 = Dust.NewDust(this.position, this.width, this.height, 27, 0f, 0f, 0, default(Color), 1.2f);
						Main.dust[num27].velocity *= 0.3f;
						Main.dust[num27].noGravity = true;
						Main.dust[num27].position = base.Center + value6 * (float)this.width / 2f;
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num27].fadeIn = 1.4f;
						}
					}
				}
			}
			if (this.type == 634 || this.type == 635)
			{
				float num28 = 5f;
				float num29 = 250f;
				float scaleFactor = 6f;
				Vector2 value7 = new Vector2(8f, 10f);
				float num30 = 1.2f;
				Vector3 rgb = new Vector3(0.7f, 0.1f, 0.5f);
				int num31 = 4 * this.MaxUpdates;
				int num32 = Utils.SelectRandom<int>(Main.rand, new int[]
					{
						242,
						73,
						72,
						71,
						255
					});
				int num33 = 255;
				if (this.type == 635)
				{
					value7 = new Vector2(10f, 20f);
					num30 = 1f;
					num29 = 500f;
					num33 = 88;
					num31 = 3 * this.MaxUpdates;
					rgb = new Vector3(0.4f, 0.6f, 0.9f);
					num32 = Utils.SelectRandom<int>(Main.rand, new int[]
						{
							242,
							59,
							88
						});
				}
				if (this.ai[1] == 0f)
				{
					this.ai[1] = 1f;
					this.localAI[0] = (float)(-(float)Main.rand.Next(48));
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 34);
				}
				else if (this.ai[1] == 1f && this.owner == Main.myPlayer)
				{
					int num34 = -1;
					float num35 = num29;
					for (int num36 = 0; num36 < 200; num36++)
					{
						if (Main.npc[num36].active && Main.npc[num36].CanBeChasedBy(this, false))
						{
							Vector2 center3 = Main.npc[num36].Center;
							float num37 = Vector2.Distance(center3, base.Center);
							if (num37 < num35 && num34 == -1 && Collision.CanHitLine(base.Center, 1, 1, center3, 1, 1))
							{
								num35 = num37;
								num34 = num36;
							}
						}
					}
					if (num35 < 20f)
					{
						this.Kill();
						return;
					}
					if (num34 != -1)
					{
						this.ai[1] = num28 + 1f;
						this.ai[0] = (float)num34;
						this.netUpdate = true;
					}
				}
				else if (this.ai[1] > num28)
				{
					this.ai[1] += 1f;
					int num38 = (int)this.ai[0];
					if (!Main.npc[num38].active || !Main.npc[num38].CanBeChasedBy(this, false))
					{
						this.ai[1] = 1f;
						this.ai[0] = 0f;
						this.netUpdate = true;
					}
					else
					{
						this.velocity.ToRotation();
						Vector2 vector6 = Main.npc[num38].Center - base.Center;
						if (vector6.Length() < 20f)
						{
							this.Kill();
							return;
						}
						if (vector6 != Vector2.Zero)
						{
							vector6.Normalize();
							vector6 *= scaleFactor;
						}
						float num39 = 30f;
						this.velocity = (this.velocity * (num39 - 1f) + vector6) / num39;
					}
				}
				if (this.ai[1] >= 1f && this.ai[1] < num28)
				{
					this.ai[1] += 1f;
					if (this.ai[1] == num28)
					{
						this.ai[1] = 1f;
					}
				}
				this.alpha -= 40;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				this.spriteDirection = this.direction;
				this.frameCounter++;
				if (this.frameCounter >= num31)
				{
					this.frame++;
					this.frameCounter = 0;
					if (this.frame >= 4)
					{
						this.frame = 0;
					}
				}
				Lighting.AddLight(base.Center, rgb);
				this.rotation = this.velocity.ToRotation();
				this.localAI[0] += 1f;
				if (this.localAI[0] == 48f)
				{
					this.localAI[0] = 0f;
				}
				else if (this.alpha == 0)
				{
					for (int num40 = 0; num40 < 2; num40++)
					{
						Vector2 value8 = Vector2.UnitX * -30f;
						value8 = -Vector2.UnitY.RotatedBy((double)(this.localAI[0] * 0.1308997f + (float)num40 * 3.14159274f), default(Vector2)) * value7 - this.rotation.ToRotationVector2() * 10f;
						int num41 = Dust.NewDust(base.Center, 0, 0, num33, 0f, 0f, 160, default(Color), 1f);
						Main.dust[num41].scale = num30;
						Main.dust[num41].noGravity = true;
						Main.dust[num41].position = base.Center + value8 + this.velocity * 2f;
						Main.dust[num41].velocity = Vector2.Normalize(base.Center + this.velocity * 2f * 8f - Main.dust[num41].position) * 2f + this.velocity * 2f;
					}
				}
				if (Main.rand.Next(12) == 0)
				{
					for (int num42 = 0; num42 < 1; num42++)
					{
						Vector2 value9 = -Vector2.UnitX.RotatedByRandom(0.19634954631328583).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
						int num43 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num43].velocity *= 0.1f;
						Main.dust[num43].position = base.Center + value9 * (float)this.width / 2f + this.velocity * 2f;
						Main.dust[num43].fadeIn = 0.9f;
					}
				}
				if (Main.rand.Next(64) == 0)
				{
					for (int num44 = 0; num44 < 1; num44++)
					{
						Vector2 value10 = -Vector2.UnitX.RotatedByRandom(0.39269909262657166).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
						int num45 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 155, default(Color), 0.8f);
						Main.dust[num45].velocity *= 0.3f;
						Main.dust[num45].position = base.Center + value10 * (float)this.width / 2f;
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num45].fadeIn = 1.4f;
						}
					}
				}
				if (Main.rand.Next(4) == 0)
				{
					for (int num46 = 0; num46 < 2; num46++)
					{
						Vector2 value11 = -Vector2.UnitX.RotatedByRandom(0.78539818525314331).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
						int num47 = Dust.NewDust(this.position, this.width, this.height, num32, 0f, 0f, 0, default(Color), 1.2f);
						Main.dust[num47].velocity *= 0.3f;
						Main.dust[num47].noGravity = true;
						Main.dust[num47].position = base.Center + value11 * (float)this.width / 2f;
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num47].fadeIn = 1.4f;
						}
					}
				}
				if (Main.rand.Next(12) == 0 && this.type == 634)
				{
					Vector2 value12 = -Vector2.UnitX.RotatedByRandom(0.19634954631328583).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
					int num48 = Dust.NewDust(this.position, this.width, this.height, num33, 0f, 0f, 100, default(Color), 1f);
					Main.dust[num48].velocity *= 0.3f;
					Main.dust[num48].position = base.Center + value12 * (float)this.width / 2f;
					Main.dust[num48].fadeIn = 0.9f;
					Main.dust[num48].noGravity = true;
				}
				if (Main.rand.Next(3) == 0 && this.type == 635)
				{
					Vector2 value13 = -Vector2.UnitX.RotatedByRandom(0.19634954631328583).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
					int num49 = Dust.NewDust(this.position, this.width, this.height, num33, 0f, 0f, 100, default(Color), 1f);
					Main.dust[num49].velocity *= 0.3f;
					Main.dust[num49].position = base.Center + value13 * (float)this.width / 2f;
					Main.dust[num49].fadeIn = 1.2f;
					Main.dust[num49].scale = 1.5f;
					Main.dust[num49].noGravity = true;
				}
			}
			if (this.type == 459)
			{
				this.alpha -= 30;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				this.spriteDirection = this.direction;
				this.frameCounter++;
				if (this.frameCounter >= 3)
				{
					this.frame++;
					this.frameCounter = 0;
					if (this.frame >= 3)
					{
						this.frame = 0;
					}
				}
				this.position = base.Center;
				this.scale = this.ai[1];
				this.width = (this.height = (int)(22f * this.scale));
				base.Center = this.position;
				Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.4f, 0.85f, 0.9f);
				int num50;
				if ((double)this.scale < 0.85)
				{
					num50 = ((Main.rand.Next(3) == 0) ? 1 : 0);
				}
				else
				{
					num50 = 1;
					this.penetrate = -1;
					this.maxPenetrate = -1;
				}
				for (int num51 = 0; num51 < num50; num51++)
				{
					int num52 = Dust.NewDust(this.position, this.width, this.height, 226, this.velocity.X, 0f, 0, default(Color), 1f);
					Main.dust[num52].position -= Vector2.One * 3f;
					Main.dust[num52].scale = 0.5f;
					Main.dust[num52].noGravity = true;
					Main.dust[num52].velocity = this.velocity / 3f;
					Main.dust[num52].alpha = 255 - (int)(255f * this.scale);
				}
			}
			if (this.type == 442)
			{
				this.frame = 0;
				if (this.alpha != 0)
				{
					this.localAI[0] += 1f;
					if (this.localAI[0] >= 4f)
					{
						this.alpha -= 90;
						if (this.alpha < 0)
						{
							this.alpha = 0;
							this.localAI[0] = 2f;
						}
					}
				}
				if (Vector2.Distance(base.Center, new Vector2(this.ai[0], this.ai[1]) * 16f + Vector2.One * 8f) <= 16f)
				{
					this.Kill();
					return;
				}
				if (this.alpha == 0)
				{
					this.localAI[1] += 1f;
					if (this.localAI[1] >= 120f)
					{
						this.Kill();
						return;
					}
					Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.3f, 0.45f, 0.8f);
					this.localAI[0] += 1f;
					if (this.localAI[0] == 3f)
					{
						this.localAI[0] = 0f;
						for (int num53 = 0; num53 < 8; num53++)
						{
							Vector2 vector7 = Vector2.UnitX * -8f;
							vector7 += -Vector2.UnitY.RotatedBy((double)((float)num53 * 3.14159274f / 4f), default(Vector2)) * new Vector2(2f, 4f);
							vector7 = vector7.RotatedBy((double)(this.rotation - 1.57079637f), default(Vector2));
							int num54 = Dust.NewDust(base.Center, 0, 0, 135, 0f, 0f, 0, default(Color), 1f);
							Main.dust[num54].scale = 1.5f;
							Main.dust[num54].noGravity = true;
							Main.dust[num54].position = base.Center + vector7;
							Main.dust[num54].velocity = this.velocity * 0.66f;
						}
					}
				}
			}
			if (this.type == 440 || this.type == 449 || this.type == 606)
			{
				if (this.alpha > 0)
				{
					this.alpha -= 25;
				}
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				if (this.type == 440)
				{
					Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.25f, 0.4f, 0.7f);
				}
				if (this.type == 449)
				{
					Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.7f, 0.65f, 0.3f);
				}
				if (this.type == 606)
				{
					Lighting.AddLight(base.Center, 0.7f, 0.3f, 0.3f);
				}
				float num55 = 100f;
				float num56 = 3f;
				if (this.type == 606)
				{
					num55 = 150f;
					num56 = 5f;
				}
				if (this.ai[1] == 0f)
				{
					this.localAI[0] += num56;
					if (this.localAI[0] == num56 * 1f && this.type == 606)
					{
						for (int num57 = 0; num57 < 4; num57++)
						{
							int num58 = Dust.NewDust(base.Center - this.velocity / 2f, 0, 0, 182, 0f, 0f, 100, default(Color), 1.4f);
							Main.dust[num58].velocity *= 0.2f;
							Main.dust[num58].velocity += this.velocity / 10f;
							Main.dust[num58].noGravity = true;
						}
					}
					if (this.localAI[0] > num55)
					{
						this.localAI[0] = num55;
					}
				}
				else
				{
					this.localAI[0] -= num56;
					if (this.localAI[0] <= 0f)
					{
						this.Kill();
						return;
					}
				}
			}
			if (this.type == 438)
			{
				Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.4f, 0.1f, 0.2f);
			}
			if (this.type == 593)
			{
				Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.4f, 0.1f, 0.3f);
				if (++this.frameCounter >= 12)
				{
					if (++this.frame >= Main.projFrames[this.type])
					{
						this.frame = 0;
					}
					this.frameCounter = 0;
				}
				if (Main.rand.Next(2) == 0)
				{
					Vector2 vector8 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
					Dust dust3 = Main.dust[Dust.NewDust(base.Center - vector8 * 8f, 0, 0, 240, 0f, 0f, 0, default(Color), 1f)];
					dust3.noGravity = true;
					dust3.position = base.Center - vector8 * 8f * this.scale;
					dust3.velocity = vector8.RotatedBy(-1.5707963705062866, default(Vector2)) * 2f;
					dust3.velocity = Vector2.Zero;
					dust3.scale = 0.5f + Main.rand.NextFloat();
					dust3.fadeIn = 0.5f;
				}
			}
			if (this.type == 592)
			{
				Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.15f, 0.15f, 0.4f);
			}
			if (this.type == 462)
			{
				int num59 = Dust.NewDust(base.Center, 0, 0, 229, 0f, 0f, 100, default(Color), 1f);
				Main.dust[num59].noLight = true;
				Main.dust[num59].noGravity = true;
				Main.dust[num59].velocity = this.velocity;
				Main.dust[num59].position -= Vector2.One * 4f;
				Main.dust[num59].scale = 0.8f;
				if (++this.frameCounter >= 9)
				{
					this.frameCounter = 0;
					if (++this.frame >= 5)
					{
						this.frame = 0;
					}
				}
			}
			if (this.type == 437)
			{
				if (this.ai[1] == 0f)
				{
					this.ai[1] = 1f;
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 12);
				}
				if (this.localAI[0] == 0f)
				{
					this.localAI[0] = 1f;
					for (int num60 = 0; num60 < 4; num60++)
					{
						int num61 = Dust.NewDust(this.position, this.width, this.height, 226, this.velocity.X, 0f, 0, default(Color), 1f);
						Main.dust[num61].position = Vector2.Lerp(Main.dust[num61].position, base.Center, 0.25f);
						Main.dust[num61].scale = 0.5f;
						Main.dust[num61].noGravity = true;
						Main.dust[num61].velocity /= 2f;
						Main.dust[num61].velocity += this.velocity * 0.66f;
					}
				}
				if (this.ai[0] < 16f)
				{
					for (int num62 = 0; num62 < 2; num62++)
					{
						int num63 = Dust.NewDust(this.position, this.width, this.height, 226, this.velocity.X, 0f, 0, default(Color), 1f);
						Main.dust[num63].position = this.position + new Vector2((float)(((this.direction == 1) ? 1 : 0) * this.width), (float)(2 + (this.height - 4) * num62));
						Main.dust[num63].scale = 0.3f;
						Main.dust[num63].noGravity = true;
						Main.dust[num63].velocity = Vector2.Zero;
					}
				}
			}
			if (this.type == 435)
			{
				if (this.ai[1] == 0f)
				{
					this.ai[1] = 1f;
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 12);
				}
				this.alpha -= 40;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				this.spriteDirection = this.direction;
				this.frameCounter++;
				if (this.frameCounter >= 3)
				{
					this.frame++;
					this.frameCounter = 0;
					if (this.frame >= 4)
					{
						this.frame = 0;
					}
				}
				Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.3f, 0.8f, 1.1f);
			}
			if (this.type == 408)
			{
				this.alpha -= 40;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				this.spriteDirection = this.direction;
			}
			if (this.type == 282)
			{
				int num64 = Dust.NewDust(this.position, this.width, this.height, 171, 0f, 0f, 100, default(Color), 1f);
				Main.dust[num64].scale = (float)Main.rand.Next(1, 10) * 0.1f;
				Main.dust[num64].noGravity = true;
				Main.dust[num64].fadeIn = 1.5f;
				Main.dust[num64].velocity *= 0.25f;
				Main.dust[num64].velocity += this.velocity * 0.25f;
			}
			if (this.type == 275 || this.type == 276)
			{
				this.frameCounter++;
				if (this.frameCounter > 1)
				{
					this.frameCounter = 0;
					this.frame++;
					if (this.frame > 1)
					{
						this.frame = 0;
					}
				}
			}
			if (this.type == 225)
			{
				int num65 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 40, 0f, 0f, 0, default(Color), 1f);
				Main.dust[num65].noGravity = true;
				Main.dust[num65].scale = 1.3f;
				Main.dust[num65].velocity *= 0.5f;
			}
			if (this.type == 174)
			{
				if (this.alpha == 0)
				{
					int num66 = Dust.NewDust(this.oldPosition - this.velocity * 3f, this.width, this.height, 76, 0f, 0f, 50, default(Color), 1f);
					Main.dust[num66].noGravity = true;
					Main.dust[num66].noLight = true;
					Main.dust[num66].velocity *= 0.5f;
				}
				this.alpha -= 50;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				if (this.ai[1] == 0f)
				{
					this.ai[1] = 1f;
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
				}
			}
			else if (this.type == 605)
			{
				if (this.alpha == 0 && Main.rand.Next(3) == 0)
				{
					int num67 = Dust.NewDust(this.position - this.velocity * 3f, this.width, this.height, 4, 0f, 0f, 50, new Color(78, 136, 255, 150), 1.2f);
					Main.dust[num67].velocity *= 0.3f;
					Main.dust[num67].velocity += this.velocity * 0.3f;
					Main.dust[num67].noGravity = true;
				}
				this.alpha -= 50;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				if (this.ai[1] == 0f)
				{
					this.ai[1] = 1f;
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
				}
			}
			else if (this.type == 176)
			{
				if (this.alpha == 0)
				{
					int num68 = Dust.NewDust(this.oldPosition, this.width, this.height, 22, 0f, 0f, 100, default(Color), 0.5f);
					Main.dust[num68].noGravity = true;
					Main.dust[num68].noLight = true;
					Main.dust[num68].velocity *= 0.15f;
					Main.dust[num68].fadeIn = 0.8f;
				}
				this.alpha -= 50;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				if (this.ai[1] == 0f)
				{
					this.ai[1] = 1f;
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
				}
			}
			if (this.type == 350)
			{
				this.alpha -= 100;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.9f, 0.6f, 0.2f);
				if (this.alpha == 0)
				{
					int num69 = 2;
					if (Main.rand.Next(2) == 0)
					{
						int num70 = Dust.NewDust(new Vector2(base.Center.X - (float)num69, base.Center.Y - (float)num69 - 2f) - this.velocity * 0.5f, num69 * 2, num69 * 2, 6, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num70].scale *= 1.8f + (float)Main.rand.Next(10) * 0.1f;
						Main.dust[num70].velocity *= 0.2f;
						Main.dust[num70].noGravity = true;
					}
					if (Main.rand.Next(4) == 0)
					{
						int num71 = Dust.NewDust(new Vector2(base.Center.X - (float)num69, base.Center.Y - (float)num69 - 2f) - this.velocity * 0.5f, num69 * 2, num69 * 2, 31, 0f, 0f, 100, default(Color), 0.5f);
						Main.dust[num71].fadeIn = 1f + (float)Main.rand.Next(5) * 0.1f;
						Main.dust[num71].velocity *= 0.05f;
					}
				}
				if (this.ai[1] == 0f)
				{
					this.ai[1] = 1f;
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 42);
				}
			}
			if (this.type == 325)
			{
				this.alpha -= 100;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.9f, 0.6f, 0.2f);
				if (this.alpha == 0)
				{
					int num72 = 2;
					if (Main.rand.Next(2) == 0)
					{
						int num73 = Dust.NewDust(new Vector2(base.Center.X - (float)num72, base.Center.Y - (float)num72 - 2f) - this.velocity * 0.5f, num72 * 2, num72 * 2, 6, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num73].scale *= 1.8f + (float)Main.rand.Next(10) * 0.1f;
						Main.dust[num73].velocity *= 0.2f;
						Main.dust[num73].noGravity = true;
					}
					if (Main.rand.Next(4) == 0)
					{
						int num74 = Dust.NewDust(new Vector2(base.Center.X - (float)num72, base.Center.Y - (float)num72 - 2f) - this.velocity * 0.5f, num72 * 2, num72 * 2, 31, 0f, 0f, 100, default(Color), 0.5f);
						Main.dust[num74].fadeIn = 1f + (float)Main.rand.Next(5) * 0.1f;
						Main.dust[num74].velocity *= 0.05f;
					}
				}
				if (this.ai[1] == 0f)
				{
					this.ai[1] = 1f;
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 42);
				}
			}
			if (this.type == 469)
			{
				this.localAI[1] += 1f;
				if (this.localAI[1] > 2f)
				{
					this.alpha -= 50;
					if (this.alpha < 0)
					{
						this.alpha = 0;
					}
				}
			}
			else if (this.type == 83 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 33);
			}
			else if (this.type == 408 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 19);
			}
			else if (this.type == 259 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 33);
			}
			else if (this.type == 110 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 11);
			}
			else if (this.type == 302 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 11);
			}
			else if (this.type == 438 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 12);
			}
			else if (this.type == 593 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 11);
			}
			else if (this.type == 592 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 12);
			}
			else if (this.type == 462 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, Main.rand.Next(124, 126));
				Vector2 value14 = Vector2.Normalize(this.velocity);
				int num75 = Main.rand.Next(5, 10);
				for (int num76 = 0; num76 < num75; num76++)
				{
					int num77 = Dust.NewDust(base.Center, 0, 0, 229, 0f, 0f, 100, default(Color), 1f);
					Dust expr_3ABA_cp_0 = Main.dust[num77];
					expr_3ABA_cp_0.velocity.Y = expr_3ABA_cp_0.velocity.Y - 1f;
					Main.dust[num77].velocity += value14 * 2f;
					Main.dust[num77].position -= Vector2.One * 4f;
					Main.dust[num77].noGravity = true;
				}
			}
			else if (this.type == 84 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 12);
			}
			else if (this.type == 389 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 12);
			}
			else if (this.type == 257 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 12);
			}
			else if (this.type == 100 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 33);
			}
			else if (this.type == 98 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
			}
			else if (this.type == 184 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
			}
			else if (this.type == 195 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
			}
			else if (this.type == 275 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
			}
			else if (this.type == 276 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
			}
			else if ((this.type == 81 || this.type == 82) && this.ai[1] == 0f)
			{
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 5);
				this.ai[1] = 1f;
			}
			else if (this.type == 180 && this.ai[1] == 0f)
			{
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 11);
				this.ai[1] = 1f;
			}
			else if (this.type == 248 && this.ai[1] == 0f)
			{
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
				this.ai[1] = 1f;
			}
			else if (this.type == 576 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 12);
			}
			else if (this.type == 577 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 36);
			}
			else if (this.type == 639)
			{
				if (this.localAI[0] == 0f && this.localAI[1] == 0f)
				{
					this.localAI[0] = base.Center.X;
					this.localAI[1] = base.Center.Y;
					this.ai[0] = this.velocity.X;
					this.ai[1] = this.velocity.Y;
				}
				this.alpha -= 25;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
			}
			else if (this.type == 640)
			{
				this.alpha -= 25;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				if (this.velocity == Vector2.Zero)
				{
					this.ai[0] = 0f;
					bool flag = true;
					for (int num78 = 1; num78 < this.oldPos.Length; num78++)
					{
						if (this.oldPos[num78] != this.oldPos[0])
						{
							flag = false;
						}
					}
					if (flag)
					{
						this.Kill();
						return;
					}
					if (Main.rand.Next(this.extraUpdates) == 0 && (this.velocity != Vector2.Zero || Main.rand.Next((this.localAI[1] == 2f) ? 2 : 6) == 0))
					{
						for (int num79 = 0; num79 < 2; num79++)
						{
							float num80 = this.rotation + ((Main.rand.Next(2) == 1) ? -1f : 1f) * 1.57079637f;
							float num81 = (float)Main.rand.NextDouble() * 0.8f + 1f;
							Vector2 vector9 = new Vector2((float)Math.Cos((double)num80) * num81, (float)Math.Sin((double)num80) * num81);
							int num82 = Dust.NewDust(base.Center, 0, 0, 229, vector9.X, vector9.Y, 0, default(Color), 1f);
							Main.dust[num82].noGravity = true;
							Main.dust[num82].scale = 1.2f;
						}
						if (Main.rand.Next(10) == 0)
						{
							Vector2 value15 = this.velocity.RotatedBy(1.5707963705062866, default(Vector2)) * ((float)Main.rand.NextDouble() - 0.5f) * (float)this.width;
							int num83 = Dust.NewDust(base.Center + value15 - Vector2.One * 4f, 8, 8, 31, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num83].velocity *= 0.5f;
							Main.dust[num83].velocity.Y = -Math.Abs(Main.dust[num83].velocity.Y);
						}
					}
				}
				else if (this.numUpdates == 1)
				{
					float num84 = this.rotation + 1.57079637f + ((Main.rand.Next(2) == 1) ? -1f : 1f) * 1.57079637f;
					float num85 = (float)Main.rand.NextDouble() * 0.25f + 0.25f;
					Vector2 vector10 = new Vector2((float)Math.Cos((double)num84) * num85, (float)Math.Sin((double)num84) * num85);
					int num86 = Dust.NewDust(this.position, 0, 0, 229, vector10.X, vector10.Y, 0, default(Color), 1f);
					Main.dust[num86].noGravity = true;
					Main.dust[num86].scale = 1.2f;
				}
			}
			if (this.type == 41)
			{
				int num87 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.6f);
				Main.dust[num87].noGravity = true;
				num87 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2f);
				Main.dust[num87].noGravity = true;
			}
			else if (this.type == 55)
			{
				int num88 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 18, 0f, 0f, 0, default(Color), 0.9f);
				Main.dust[num88].noGravity = true;
			}
			else if (this.type == 374)
			{
				if (this.localAI[0] == 0f)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
					this.localAI[0] = 1f;
				}
				if (Main.rand.Next(2) == 0)
				{
					int num89 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 18, 0f, 0f, 0, default(Color), 0.9f);
					Main.dust[num89].noGravity = true;
					Main.dust[num89].velocity *= 0.5f;
				}
			}
			else if (this.type == 376)
			{
				if (this.localAI[0] == 0f)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 20);
				}
				this.localAI[0] += 1f;
				if (this.localAI[0] > 3f)
				{
					int num90 = 1;
					if (this.localAI[0] > 5f)
					{
						num90 = 2;
					}
					for (int num91 = 0; num91 < num90; num91++)
					{
						int num92 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2f);
						Main.dust[num92].noGravity = true;
						Dust expr_46AC_cp_0 = Main.dust[num92];
						expr_46AC_cp_0.velocity.X = expr_46AC_cp_0.velocity.X * 0.3f;
						Dust expr_46CA_cp_0 = Main.dust[num92];
						expr_46CA_cp_0.velocity.Y = expr_46CA_cp_0.velocity.Y * 0.3f;
						Main.dust[num92].noLight = true;
					}
					if (this.wet && !this.lavaWet)
					{
						this.Kill();
						return;
					}
				}
			}
			else if (this.type == 91 && Main.rand.Next(2) == 0)
			{
				int num93;
				if (Main.rand.Next(2) == 0)
				{
					num93 = 15;
				}
				else
				{
					num93 = 58;
				}
				int num94 = Dust.NewDust(this.position, this.width, this.height, num93, this.velocity.X * 0.25f, this.velocity.Y * 0.25f, 150, default(Color), 0.9f);
				Main.dust[num94].velocity *= 0.25f;
			}
			if (this.type == 163 || this.type == 310)
			{
				if (this.alpha > 0)
				{
					this.alpha -= 25;
				}
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
			}
			int num95 = this.type;
			if (num95 <= 100)
			{
				if (num95 <= 36)
				{
					if (num95 != 14 && num95 != 20 && num95 != 36)
					{
						goto IL_49A5;
					}
				}
				else
				{
					switch (num95)
					{
						case 83:
						case 84:
							break;
						default:
							if (num95 != 89 && num95 != 100)
							{
								goto IL_49A5;
							}
							break;
					}
				}
			}
			else if (num95 <= 161)
			{
				if (num95 != 104 && num95 != 110)
				{
					switch (num95)
					{
						case 158:
						case 159:
						case 160:
						case 161:
							break;
						default:
							goto IL_49A5;
					}
				}
			}
			else if (num95 <= 287)
			{
				if (num95 != 180)
				{
					switch (num95)
					{
						case 279:
						case 283:
						case 284:
						case 285:
						case 286:
						case 287:
							break;
						case 280:
						case 281:
						case 282:
							goto IL_49A5;
						default:
							goto IL_49A5;
					}
				}
			}
			else if (num95 != 389)
			{
				switch (num95)
				{
					case 576:
					case 577:
						this.localAI[1] += 1f;
						if (this.localAI[1] <= 2f)
						{
							goto IL_49A5;
						}
						if (this.alpha > 0)
						{
							this.alpha -= 15;
						}
						if (this.alpha < 0)
						{
							this.alpha = 0;
							goto IL_49A5;
						}
						goto IL_49A5;
					default:
						goto IL_49A5;
				}
			}
			if (this.alpha > 0)
			{
				this.alpha -= 15;
			}
			if (this.alpha < 0)
			{
				this.alpha = 0;
			}
			IL_49A5:
			if (this.type == 484)
			{
				int num96 = Dust.NewDust(this.position, this.width, this.height, 78, 0f, 0f, 0, default(Color), 1f);
				Main.dust[num96].noGravity = true;
				Main.dust[num96].velocity *= 0.1f;
				Main.dust[num96].scale = 0.75f;
				Main.dust[num96].position = (Main.dust[num96].position + base.Center) / 2f;
				Main.dust[num96].position += this.velocity * (float)Main.rand.Next(0, 101) * 0.01f;
			}
			if (this.type == 242 || this.type == 302 || this.type == 438 || this.type == 462 || this.type == 592)
			{
				float num97 = (float)Math.Sqrt((double)(this.velocity.X * this.velocity.X + this.velocity.Y * this.velocity.Y));
				if (this.alpha > 0)
				{
					this.alpha -= (int)((byte)((double)num97 * 0.9));
				}
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
			}
			if (this.type == 660)
			{
				DelegateMethods.v3_1 = new Vector3(0.6f, 1f, 1f) * 0.2f;
				Utils.PlotTileLine(base.Center, base.Center + this.velocity * 10f, 8f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
				if (this.alpha > 0)
				{
					Main.PlaySound(2, base.Center, 9);
					this.alpha = 0;
					this.scale = 1.1f;
					this.frame = Main.rand.Next(14);
					float num98 = 16f;
					int num99 = 0;
					while ((float)num99 < num98)
					{
						Vector2 vector11 = Vector2.UnitX * 0f;
						vector11 += -Vector2.UnitY.RotatedBy((double)((float)num99 * (6.28318548f / num98)), default(Vector2)) * new Vector2(1f, 4f);
						vector11 = vector11.RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
						int num100 = Dust.NewDust(base.Center, 0, 0, 180, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num100].scale = 1.5f;
						Main.dust[num100].noGravity = true;
						Main.dust[num100].position = base.Center + vector11;
						Main.dust[num100].velocity = this.velocity * 0f + vector11.SafeNormalize(Vector2.UnitY) * 1f;
						num99++;
					}
				}
			}
			if (this.type == 661)
			{
				if (this.alpha <= 0)
				{
					for (int num101 = 0; num101 < 3; num101++)
					{
						int num102 = Dust.NewDust(this.position, this.width, this.height, 240, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num102].noGravity = true;
						Main.dust[num102].velocity *= 0.3f;
						Main.dust[num102].noLight = true;
					}
				}
				if (this.alpha > 0)
				{
					this.alpha -= 55;
					this.scale = 1.3f;
					if (this.alpha < 0)
					{
						this.alpha = 0;
						float num103 = 16f;
						int num104 = 0;
						while ((float)num104 < num103)
						{
							Vector2 vector12 = Vector2.UnitX * 0f;
							vector12 += -Vector2.UnitY.RotatedBy((double)((float)num104 * (6.28318548f / num103)), default(Vector2)) * new Vector2(1f, 4f);
							vector12 = vector12.RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
							int num105 = Dust.NewDust(base.Center, 0, 0, 62, 0f, 0f, 0, default(Color), 1f);
							Main.dust[num105].scale = 1.5f;
							Main.dust[num105].noLight = true;
							Main.dust[num105].noGravity = true;
							Main.dust[num105].position = base.Center + vector12;
							Main.dust[num105].velocity = Main.dust[num105].velocity * 4f + this.velocity * 0.3f;
							num104++;
						}
					}
				}
			}
			if (this.type == 638)
			{
				float num106 = this.velocity.Length();
				if (this.alpha > 0)
				{
					this.alpha -= (int)((byte)((double)num106 * 0.3));
				}
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				Rectangle hitbox = base.Hitbox;
				hitbox.Offset((int)this.velocity.X, (int)this.velocity.Y);
				bool flag2 = false;
				for (int num107 = 0; num107 < 200; num107++)
				{
					if (Main.npc[num107].active && !Main.npc[num107].dontTakeDamage && Main.npc[num107].immune[this.owner] == 0 && this.npcImmune[num107] == 0 && Main.npc[num107].Hitbox.Intersects(hitbox))
					{
						flag2 = true;
						break;
					}
				}
				if (flag2)
				{
					int num108 = Main.rand.Next(15, 31);
					for (int num109 = 0; num109 < num108; num109++)
					{
						int num110 = Dust.NewDust(base.Center, 0, 0, 229, 0f, 0f, 100, default(Color), 0.8f);
						Main.dust[num110].velocity *= 1.6f;
						Dust expr_50BA_cp_0 = Main.dust[num110];
						expr_50BA_cp_0.velocity.Y = expr_50BA_cp_0.velocity.Y - 1f;
						Main.dust[num110].velocity += this.velocity;
						Main.dust[num110].noGravity = true;
					}
				}
			}
			if (this.type == 257 || this.type == 593)
			{
				if (this.alpha > 0)
				{
					this.alpha -= 10;
				}
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
			}
			if (this.type == 88)
			{
				if (this.alpha > 0)
				{
					this.alpha -= 10;
				}
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
			}
			if (this.type == 532)
			{
				this.ai[0] += 1f;
			}
			bool flag3 = true;
			num95 = this.type;
			if (num95 <= 302)
			{
				if (num95 <= 161)
				{
					if (num95 <= 55)
					{
						if (num95 <= 14)
						{
							if (num95 != 5 && num95 != 14)
							{
								goto IL_55CA;
							}
						}
						else if (num95 != 20)
						{
							switch (num95)
							{
								case 36:
								case 38:
									break;
								case 37:
									goto IL_55CA;
								default:
									if (num95 != 55)
									{
										goto IL_55CA;
									}
									break;
							}
						}
					}
					else if (num95 <= 100)
					{
						switch (num95)
						{
							case 83:
							case 84:
							case 88:
							case 89:
								break;
							case 85:
							case 86:
							case 87:
								goto IL_55CA;
							default:
								switch (num95)
								{
									case 98:
									case 100:
										break;
									case 99:
										goto IL_55CA;
									default:
										goto IL_55CA;
								}
								break;
						}
					}
					else if (num95 != 104 && num95 != 110)
					{
						switch (num95)
						{
							case 158:
							case 159:
							case 160:
							case 161:
								break;
							default:
								goto IL_55CA;
						}
					}
				}
				else if (num95 <= 259)
				{
					if (num95 <= 184)
					{
						if (num95 != 180 && num95 != 184)
						{
							goto IL_55CA;
						}
					}
					else if (num95 != 242 && num95 != 248)
					{
						switch (num95)
						{
							case 257:
							case 259:
								break;
							case 258:
								goto IL_55CA;
							default:
								goto IL_55CA;
						}
					}
				}
				else if (num95 <= 270)
				{
					if (num95 != 265 && num95 != 270)
					{
						goto IL_55CA;
					}
				}
				else
				{
					switch (num95)
					{
						case 279:
						case 283:
						case 284:
						case 285:
						case 286:
						case 287:
							break;
						case 280:
						case 281:
						case 282:
							goto IL_55CA;
						default:
							if (num95 != 299 && num95 != 302)
							{
								goto IL_55CA;
							}
							break;
					}
				}
			}
			else if (num95 <= 472)
			{
				if (num95 <= 389)
				{
					if (num95 <= 350)
					{
						switch (num95)
						{
							case 323:
							case 325:
								break;
							case 324:
								goto IL_55CA;
							default:
								switch (num95)
								{
									case 348:
									case 349:
									case 350:
										break;
									default:
										goto IL_55CA;
								}
								break;
						}
					}
					else if (num95 != 355)
					{
						switch (num95)
						{
							case 374:
							case 376:
								break;
							case 375:
								goto IL_55CA;
							default:
								if (num95 != 389)
								{
									goto IL_55CA;
								}
								break;
						}
					}
				}
				else if (num95 <= 449)
				{
					switch (num95)
					{
						case 435:
						case 436:
						case 438:
						case 440:
						case 442:
							break;
						case 437:
						case 439:
						case 441:
							goto IL_55CA;
						default:
							if (num95 != 449)
							{
								goto IL_55CA;
							}
							break;
					}
				}
				else if (num95 != 459 && num95 != 462)
				{
					switch (num95)
					{
						case 467:
						case 468:
						case 469:
						case 472:
							break;
						case 470:
						case 471:
							goto IL_55CA;
						default:
							goto IL_55CA;
					}
				}
			}
			else if (num95 <= 593)
			{
				if (num95 <= 498)
				{
					switch (num95)
					{
						case 483:
						case 484:
						case 485:
							break;
						default:
							if (num95 != 498)
							{
								goto IL_55CA;
							}
							break;
					}
				}
				else
				{
					switch (num95)
					{
						case 576:
						case 577:
							break;
						default:
							if (num95 != 585)
							{
								switch (num95)
								{
									case 592:
									case 593:
										break;
									default:
										goto IL_55CA;
								}
							}
							break;
					}
				}
			}
			else if (num95 <= 606)
			{
				if (num95 != 601 && num95 != 606)
				{
					goto IL_55CA;
				}
			}
			else if (num95 != 616)
			{
				switch (num95)
				{
					case 634:
					case 635:
					case 638:
					case 639:
						break;
					case 636:
					case 637:
						goto IL_55CA;
					default:
						switch (num95)
						{
							case 660:
							case 661:
								break;
							default:
								goto IL_55CA;
						}
						break;
				}
			}
			flag3 = false;
			IL_55CA:
			if (flag3)
			{
				this.ai[0] += 1f;
			}
			if (this.type == 270)
			{
				int num111 = (int)Player.FindClosest(base.Center, 1, 1);
				this.ai[1] += 1f;
				if (this.ai[1] < 110f && this.ai[1] > 30f)
				{
					float scaleFactor2 = this.velocity.Length();
					Vector2 vector13 = Main.player[num111].Center - base.Center;
					vector13.Normalize();
					vector13 *= scaleFactor2;
					this.velocity = (this.velocity * 24f + vector13) / 25f;
					this.velocity.Normalize();
					this.velocity *= scaleFactor2;
				}
				if (this.ai[0] < 0f)
				{
					if (this.velocity.Length() < 18f)
					{
						this.velocity *= 1.02f;
					}
					if (this.localAI[0] == 0f)
					{
						this.localAI[0] = 1f;
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
						for (int num112 = 0; num112 < 10; num112++)
						{
							int num113 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 5, this.velocity.X, this.velocity.Y, 0, default(Color), 2f);
							Main.dust[num113].noGravity = true;
							Main.dust[num113].velocity = base.Center - Main.dust[num113].position;
							Main.dust[num113].velocity.Normalize();
							Main.dust[num113].velocity *= -5f;
							Main.dust[num113].velocity += this.velocity / 2f;
						}
					}
					this.friendly = false;
					this.hostile = true;
				}
			}
			if (this.type == 585)
			{
				if (this.localAI[0] == 0f)
				{
					this.localAI[0] = 1f;
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
					for (int num114 = 0; num114 < 3; num114++)
					{
						int num115 = Dust.NewDust(this.position, this.width, this.height, 27, this.velocity.X, this.velocity.Y, 0, default(Color), 2f);
						Main.dust[num115].noGravity = true;
						Main.dust[num115].velocity = base.Center - Main.dust[num115].position;
						Main.dust[num115].velocity.Normalize();
						Main.dust[num115].velocity *= -5f;
						Main.dust[num115].velocity += this.velocity / 2f;
						Main.dust[num115].noLight = true;
					}
				}
				if (this.alpha > 0)
				{
					this.alpha -= 50;
				}
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				this.frameCounter++;
				if (this.frameCounter >= 12)
				{
					this.frameCounter = 0;
				}
				this.frame = this.frameCounter / 2;
				if (this.frame > 3)
				{
					this.frame = 6 - this.frame;
				}
				Vector3 vector14 = NPCID.Sets.MagicAuraColor[54].ToVector3();
				Lighting.AddLight(base.Center, vector14.X, vector14.Y, vector14.Z);
				if (Main.rand.Next(3) == 0)
				{
					int num116 = Dust.NewDust(new Vector2(this.position.X + 4f, this.position.Y + 4f), this.width - 8, this.height - 8, 27, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2f);
					Main.dust[num116].position -= this.velocity * 2f;
					Main.dust[num116].noLight = true;
					Main.dust[num116].noGravity = true;
					Dust expr_5B01_cp_0 = Main.dust[num116];
					expr_5B01_cp_0.velocity.X = expr_5B01_cp_0.velocity.X * 0.3f;
					Dust expr_5B1F_cp_0 = Main.dust[num116];
					expr_5B1F_cp_0.velocity.Y = expr_5B1F_cp_0.velocity.Y * 0.3f;
				}
			}
			if (this.type == 594)
			{
				int num117 = (int)(43f - this.ai[1]) / 13;
				if (num117 < 1)
				{
					num117 = 1;
				}
				int num118 = (this.ai[1] < 20f) ? 6 : 31;
				for (int num119 = 0; num119 < num117; num119++)
				{
					int num120 = Dust.NewDust(new Vector2(this.position.X + 4f, this.position.Y + 4f), this.width - 8, this.height - 8, num118, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 0, default(Color), 2f);
					Main.dust[num120].position -= this.velocity * 2f;
					Main.dust[num120].noLight = true;
					Main.dust[num120].noGravity = true;
					Dust expr_5C41_cp_0 = Main.dust[num120];
					expr_5C41_cp_0.velocity.X = expr_5C41_cp_0.velocity.X * 0.3f;
					Dust expr_5C5F_cp_0 = Main.dust[num120];
					expr_5C5F_cp_0.velocity.Y = expr_5C5F_cp_0.velocity.Y * 0.3f;
					if (num118 == 6)
					{
						Main.dust[num120].fadeIn = Main.rand.NextFloat() * 2f;
					}
				}
				this.ai[1] += 1f;
				if (this.ai[1] > (float)(43 * this.MaxUpdates))
				{
					this.Kill();
					return;
				}
			}
			if (this.type == 622)
			{
				int num121 = 229;
				if (Main.rand.Next(3) != 0)
				{
					int num122 = Dust.NewDust(new Vector2(this.position.X + 4f, this.position.Y + 4f), this.width - 8, this.height - 8, num121, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 0, default(Color), 1.2f);
					Main.dust[num122].position -= this.velocity * 2f;
					Main.dust[num122].noLight = true;
					Main.dust[num122].noGravity = true;
					Dust expr_5DC7_cp_0 = Main.dust[num122];
					expr_5DC7_cp_0.velocity.X = expr_5DC7_cp_0.velocity.X * 0.3f;
					Dust expr_5DE5_cp_0 = Main.dust[num122];
					expr_5DE5_cp_0.velocity.Y = expr_5DE5_cp_0.velocity.Y * 0.3f;
				}
				this.ai[1] += 1f;
				if (this.ai[1] > (float)(23 * this.MaxUpdates))
				{
					this.Kill();
					return;
				}
			}
			if (this.type == 587)
			{
				Color newColor = Main.hslToRgb(this.ai[1], 1f, 0.5f);
				newColor.A = 200;
				this.localAI[0] += 1f;
				if (this.localAI[0] >= 2f)
				{
					if (this.localAI[0] == 2f)
					{
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 5);
						for (int num123 = 0; num123 < 4; num123++)
						{
							int num124 = Dust.NewDust(this.position, this.width, this.height, 76, this.velocity.X, this.velocity.Y, 0, newColor, 1.1f);
							Main.dust[num124].noGravity = true;
							Main.dust[num124].velocity = base.Center - Main.dust[num124].position;
							Main.dust[num124].velocity.Normalize();
							Main.dust[num124].velocity *= -3f;
							Main.dust[num124].velocity += this.velocity / 2f;
						}
					}
					else
					{
						this.frame++;
						if (this.frame > 2)
						{
							this.frame = 0;
						}
						for (int num125 = 0; num125 < 1; num125++)
						{
							int num126 = Dust.NewDust(new Vector2(this.position.X + 4f, this.position.Y + 4f), this.width - 8, this.height - 8, 76, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 0, newColor, 0.9f);
							Main.dust[num126].position = base.Center;
							Main.dust[num126].noGravity = true;
							Main.dust[num126].velocity = this.velocity * 0.5f;
						}
					}
				}
			}
			if (this.type == 349)
			{
				this.frame = (int)this.ai[0];
				this.velocity.Y = this.velocity.Y + 0.2f;
				if (this.localAI[0] == 0f || this.localAI[0] == 2f)
				{
					this.scale += 0.01f;
					this.alpha -= 50;
					if (this.alpha <= 0)
					{
						this.localAI[0] = 1f;
						this.alpha = 0;
					}
				}
				else if (this.localAI[0] == 1f)
				{
					this.scale -= 0.01f;
					this.alpha += 50;
					if (this.alpha >= 255)
					{
						this.localAI[0] = 2f;
						this.alpha = 255;
					}
				}
			}
			if (this.type == 348)
			{
				if (this.localAI[1] == 0f)
				{
					this.localAI[1] = 1f;
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
				}
				if (this.ai[0] == 0f || this.ai[0] == 2f)
				{
					this.scale += 0.01f;
					this.alpha -= 50;
					if (this.alpha <= 0)
					{
						this.ai[0] = 1f;
						this.alpha = 0;
					}
				}
				else if (this.ai[0] == 1f)
				{
					this.scale -= 0.01f;
					this.alpha += 50;
					if (this.alpha >= 255)
					{
						this.ai[0] = 2f;
						this.alpha = 255;
					}
				}
			}
			if (this.type == 572)
			{
				if (this.localAI[0] == 0f)
				{
					this.localAI[0] = 1f;
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
				}
				for (int num127 = 0; num127 < 2; num127++)
				{
					int num128 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 40, this.velocity.X, this.velocity.Y, 100, default(Color), 1f);
					Main.dust[num128].velocity *= 0.5f;
					Main.dust[num128].velocity += this.velocity;
					Main.dust[num128].velocity *= 0.5f;
					Main.dust[num128].noGravity = true;
					Main.dust[num128].scale = 1.2f;
					Main.dust[num128].position = (base.Center + this.position) / 2f;
				}
			}
			if (this.type == 577)
			{
				Lighting.AddLight(base.Center, 0.1f, 0.3f, 0.4f);
			}
			else if (this.type == 576)
			{
				Lighting.AddLight(base.Center, 0.4f, 0.2f, 0.4f);
				for (int num129 = 0; num129 < 5; num129++)
				{
					Dust dust4 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 242, this.velocity.X, this.velocity.Y, 100, default(Color), 1f)];
					dust4.velocity = Vector2.Zero;
					dust4.position -= this.velocity / 5f * (float)num129;
					dust4.noGravity = true;
					dust4.scale = 0.8f;
					dust4.noLight = true;
				}
			}
			else if (this.type == 581)
			{
				if (this.localAI[0] == 0f)
				{
					this.localAI[0] = 1f;
					Main.PlaySound(2, (int)base.Center.X, (int)base.Center.Y, 17);
				}
				for (int num130 = 0; num130 < 2; num130++)
				{
					int num131 = Utils.SelectRandom<int>(Main.rand, new int[]
						{
							229,
							161,
							161
						});
					Dust dust5 = Main.dust[Dust.NewDust(this.position, this.width, this.height, num131, this.velocity.X, this.velocity.Y, 100, default(Color), 1f)];
					dust5.velocity = dust5.velocity / 4f + this.velocity / 2f;
					dust5.noGravity = true;
					dust5.scale = 1.2f;
					dust5.position = base.Center;
					dust5.noLight = true;
				}
			}
			if (this.type == 299)
			{
				if (this.localAI[0] == 6f)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
					for (int num132 = 0; num132 < 40; num132++)
					{
						int num133 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 181, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num133].velocity *= 3f;
						Main.dust[num133].velocity += this.velocity * 0.75f;
						Main.dust[num133].scale *= 1.2f;
						Main.dust[num133].noGravity = true;
					}
				}
				this.localAI[0] += 1f;
				if (this.localAI[0] > 6f)
				{
					for (int num134 = 0; num134 < 3; num134++)
					{
						int num135 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 181, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 1f);
						Main.dust[num135].velocity *= 0.6f;
						Main.dust[num135].scale *= 1.4f;
						Main.dust[num135].noGravity = true;
					}
				}
			}
			else if (this.type == 270)
			{
				if (this.ai[0] < 0f)
				{
					this.alpha = 0;
				}
				if (this.alpha > 0)
				{
					this.alpha -= 50;
				}
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				this.frame++;
				if (this.frame > 2)
				{
					this.frame = 0;
				}
				if (this.ai[0] < 0f)
				{
					for (int num136 = 0; num136 < 2; num136++)
					{
						int num137 = Dust.NewDust(new Vector2(this.position.X + 4f, this.position.Y + 4f), this.width - 8, this.height - 8, 5, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 1.5f);
						Main.dust[num137].position -= this.velocity;
						Main.dust[num137].noGravity = true;
						Dust expr_6955_cp_0 = Main.dust[num137];
						expr_6955_cp_0.velocity.X = expr_6955_cp_0.velocity.X * 0.3f;
						Dust expr_6973_cp_0 = Main.dust[num137];
						expr_6973_cp_0.velocity.Y = expr_6973_cp_0.velocity.Y * 0.3f;
					}
				}
				else
				{
					for (int num138 = 0; num138 < 2; num138++)
					{
						int num139 = Dust.NewDust(new Vector2(this.position.X + 4f, this.position.Y + 4f), this.width - 8, this.height - 8, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2f);
						Main.dust[num139].position -= this.velocity * 2f;
						Main.dust[num139].noGravity = true;
						Dust expr_6A58_cp_0 = Main.dust[num139];
						expr_6A58_cp_0.velocity.X = expr_6A58_cp_0.velocity.X * 0.3f;
						Dust expr_6A76_cp_0 = Main.dust[num139];
						expr_6A76_cp_0.velocity.Y = expr_6A76_cp_0.velocity.Y * 0.3f;
					}
				}
			}
			if (this.type == 259)
			{
				if (this.alpha > 0)
				{
					this.alpha -= 10;
				}
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
			}
			if (this.type == 265)
			{
				if (this.alpha > 0)
				{
					this.alpha -= 50;
				}
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				if (this.alpha == 0)
				{
					int num140 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 163, this.velocity.X, this.velocity.Y, 100, default(Color), 1.2f);
					Main.dust[num140].noGravity = true;
					Main.dust[num140].velocity *= 0.3f;
					Main.dust[num140].velocity -= this.velocity * 0.4f;
				}
			}
			if (this.type == 355)
			{
				if (this.alpha > 0)
				{
					this.alpha -= 50;
				}
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				if (this.alpha == 0)
				{
					int num141 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 205, this.velocity.X, this.velocity.Y, 100, default(Color), 1.2f);
					Main.dust[num141].noGravity = true;
					Main.dust[num141].velocity *= 0.3f;
					Main.dust[num141].velocity -= this.velocity * 0.4f;
				}
			}
			if (this.type == 357)
			{
				if (this.alpha < 170)
				{
					for (int num142 = 0; num142 < 10; num142++)
					{
						float x = this.position.X - this.velocity.X / 10f * (float)num142;
						float y = this.position.Y - this.velocity.Y / 10f * (float)num142;
						int num143 = Dust.NewDust(new Vector2(x, y), 1, 1, 206, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num143].alpha = this.alpha;
						Main.dust[num143].position.X = x;
						Main.dust[num143].position.Y = y;
						Main.dust[num143].velocity *= 0f;
						Main.dust[num143].noGravity = true;
					}
				}
				if (this.alpha > 0)
				{
					this.alpha -= 25;
				}
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
			}
			else if (this.type == 207)
			{
				if (this.alpha < 170)
				{
					for (int num144 = 0; num144 < 10; num144++)
					{
						float x2 = this.position.X - this.velocity.X / 10f * (float)num144;
						float y2 = this.position.Y - this.velocity.Y / 10f * (float)num144;
						int num145 = Dust.NewDust(new Vector2(x2, y2), 1, 1, 75, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num145].alpha = this.alpha;
						Main.dust[num145].position.X = x2;
						Main.dust[num145].position.Y = y2;
						Main.dust[num145].velocity *= 0f;
						Main.dust[num145].noGravity = true;
					}
				}
				float num146 = (float)Math.Sqrt((double)(this.velocity.X * this.velocity.X + this.velocity.Y * this.velocity.Y));
				float num147 = this.localAI[0];
				if (num147 == 0f)
				{
					this.localAI[0] = num146;
					num147 = num146;
				}
				if (this.alpha > 0)
				{
					this.alpha -= 25;
				}
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				float num148 = this.position.X;
				float num149 = this.position.Y;
				float num150 = 300f;
				bool flag4 = false;
				int num151 = 0;
				if (this.ai[1] == 0f)
				{
					for (int num152 = 0; num152 < 200; num152++)
					{
						if (Main.npc[num152].CanBeChasedBy(this, false) && (this.ai[1] == 0f || this.ai[1] == (float)(num152 + 1)))
						{
							float num153 = Main.npc[num152].position.X + (float)(Main.npc[num152].width / 2);
							float num154 = Main.npc[num152].position.Y + (float)(Main.npc[num152].height / 2);
							float num155 = Math.Abs(this.position.X + (float)(this.width / 2) - num153) + Math.Abs(this.position.Y + (float)(this.height / 2) - num154);
							if (num155 < num150 && Collision.CanHit(new Vector2(this.position.X + (float)(this.width / 2), this.position.Y + (float)(this.height / 2)), 1, 1, Main.npc[num152].position, Main.npc[num152].width, Main.npc[num152].height))
							{
								num150 = num155;
								num148 = num153;
								num149 = num154;
								flag4 = true;
								num151 = num152;
							}
						}
					}
					if (flag4)
					{
						this.ai[1] = (float)(num151 + 1);
					}
					flag4 = false;
				}
				if (this.ai[1] > 0f)
				{
					int num156 = (int)(this.ai[1] - 1f);
					if (Main.npc[num156].active && Main.npc[num156].CanBeChasedBy(this, true) && !Main.npc[num156].dontTakeDamage)
					{
						float num157 = Main.npc[num156].position.X + (float)(Main.npc[num156].width / 2);
						float num158 = Main.npc[num156].position.Y + (float)(Main.npc[num156].height / 2);
						float num159 = Math.Abs(this.position.X + (float)(this.width / 2) - num157) + Math.Abs(this.position.Y + (float)(this.height / 2) - num158);
						if (num159 < 1000f)
						{
							flag4 = true;
							num148 = Main.npc[num156].position.X + (float)(Main.npc[num156].width / 2);
							num149 = Main.npc[num156].position.Y + (float)(Main.npc[num156].height / 2);
						}
					}
					else
					{
						this.ai[1] = 0f;
					}
				}
				if (!this.friendly)
				{
					flag4 = false;
				}
				if (flag4)
				{
					float num160 = num147;
					Vector2 vector15 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num161 = num148 - vector15.X;
					float num162 = num149 - vector15.Y;
					float num163 = (float)Math.Sqrt((double)(num161 * num161 + num162 * num162));
					num163 = num160 / num163;
					num161 *= num163;
					num162 *= num163;
					int num164 = 8;
					this.velocity.X = (this.velocity.X * (float)(num164 - 1) + num161) / (float)num164;
					this.velocity.Y = (this.velocity.Y * (float)(num164 - 1) + num162) / (float)num164;
				}
			}
			else if (this.type == 81 || this.type == 91)
			{
				if (this.ai[0] >= 20f)
				{
					this.ai[0] = 20f;
					this.velocity.Y = this.velocity.Y + 0.07f;
				}
			}
			else if (this.type == 174 || this.type == 605)
			{
				if (this.ai[0] >= 5f)
				{
					this.ai[0] = 5f;
					this.velocity.Y = this.velocity.Y + 0.15f;
				}
			}
			else if (this.type == 337)
			{
				if (this.position.Y > Main.player[this.owner].position.Y - 300f)
				{
					this.tileCollide = true;
				}
				if ((double)this.position.Y < Main.worldSurface * 16.0)
				{
					this.tileCollide = true;
				}
				this.frame = (int)this.ai[1];
				if (Main.rand.Next(2) == 0)
				{
					int num165 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 197, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num165].velocity *= 0.5f;
					Main.dust[num165].noGravity = true;
				}
			}
			else if (this.type == 645)
			{
				if (this.ai[1] != -1f && this.position.Y > this.ai[1])
				{
					this.tileCollide = true;
				}
				if (this.position.HasNaNs())
				{
					this.Kill();
					return;
				}
				bool flag5 = WorldGen.SolidTile(Framing.GetTileSafely((int)this.position.X / 16, (int)this.position.Y / 16));
				Dust dust6 = Main.dust[Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
				dust6.position = base.Center;
				dust6.velocity = Vector2.Zero;
				dust6.noGravity = true;
				if (flag5)
				{
					dust6.noLight = true;
				}
				if (this.ai[1] == -1f)
				{
					this.ai[0] += 1f;
					this.velocity = Vector2.Zero;
					this.tileCollide = false;
					this.penetrate = -1;
					this.position = base.Center;
					this.width = (this.height = 140);
					base.Center = this.position;
					this.alpha -= 10;
					if (this.alpha < 0)
					{
						this.alpha = 0;
					}
					if (++this.frameCounter >= this.MaxUpdates * 3)
					{
						this.frameCounter = 0;
						this.frame++;
					}
					if (this.ai[0] >= (float)(Main.projFrames[this.type] * this.MaxUpdates * 3))
					{
						this.Kill();
					}
					return;
				}
				this.alpha = 255;
				if (this.numUpdates == 0)
				{
					int num166 = -1;
					float num167 = 60f;
					for (int num168 = 0; num168 < 200; num168++)
					{
						NPC nPC = Main.npc[num168];
						if (nPC.CanBeChasedBy(this, false))
						{
							float num169 = base.Distance(nPC.Center);
							if (num169 < num167 && Collision.CanHitLine(base.Center, 0, 0, nPC.Center, 0, 0))
							{
								num167 = num169;
								num166 = num168;
							}
						}
					}
					if (num166 != -1)
					{
						this.ai[0] = 0f;
						this.ai[1] = -1f;
						this.netUpdate = true;
						return;
					}
				}
			}
			else if (this.type >= 424 && this.type <= 426)
			{
				if (this.position.Y > Main.player[this.owner].position.Y - 300f)
				{
					this.tileCollide = true;
				}
				if ((double)this.position.Y < Main.worldSurface * 16.0)
				{
					this.tileCollide = true;
				}
				this.scale = this.ai[1];
				this.rotation += this.velocity.X * 2f;
				Vector2 position = base.Center + Vector2.Normalize(this.velocity) * 10f;
				Dust dust7 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f)];
				dust7.position = position;
				dust7.velocity = this.velocity.RotatedBy(1.5707963705062866, default(Vector2)) * 0.33f + this.velocity / 4f;
				dust7.position += this.velocity.RotatedBy(1.5707963705062866, default(Vector2));
				dust7.fadeIn = 0.5f;
				dust7.noGravity = true;
				dust7 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f)];
				dust7.position = position;
				dust7.velocity = this.velocity.RotatedBy(-1.5707963705062866, default(Vector2)) * 0.33f + this.velocity / 4f;
				dust7.position += this.velocity.RotatedBy(-1.5707963705062866, default(Vector2));
				dust7.fadeIn = 0.5f;
				dust7.noGravity = true;
				for (int num170 = 0; num170 < 1; num170++)
				{
					int num171 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num171].velocity *= 0.5f;
					Main.dust[num171].scale *= 1.3f;
					Main.dust[num171].fadeIn = 1f;
					Main.dust[num171].noGravity = true;
				}
			}
			else if (this.type == 344)
			{
				if (WorldGen.SolidTile((int)this.position.X / 16, (int)(this.position.Y + this.velocity.Y) / 16 + 1) || WorldGen.SolidTile((int)(this.position.X + (float)this.width) / 16, (int)(this.position.Y + this.velocity.Y) / 16 + 1))
				{
					this.Kill();
					return;
				}
				this.localAI[1] += 1f;
				if (this.localAI[1] > 5f)
				{
					this.alpha -= 50;
					if (this.alpha < 0)
					{
						this.alpha = 0;
					}
				}
				this.frame = (int)this.ai[1];
				if (this.localAI[1] > 20f)
				{
					this.localAI[1] = 20f;
					this.velocity.Y = this.velocity.Y + 0.15f;
				}
				this.rotation += Main.windSpeed * 0.2f;
				this.velocity.X = this.velocity.X + Main.windSpeed * 0.1f;
			}
			else if (this.type == 336 || this.type == 345)
			{
				if (this.type == 345 && this.localAI[0] == 0f)
				{
					this.localAI[0] = 1f;
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 1);
				}
				if (this.ai[0] >= 50f)
				{
					this.ai[0] = 50f;
					this.velocity.Y = this.velocity.Y + 0.5f;
				}
			}
			else if (this.type == 246)
			{
				this.alpha -= 20;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				if (this.ai[0] >= 60f)
				{
					this.ai[0] = 60f;
					this.velocity.Y = this.velocity.Y + 0.15f;
				}
			}
			else if (this.type == 311)
			{
				if (this.alpha > 0)
				{
					this.alpha -= 50;
				}
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				if (this.ai[0] >= 30f)
				{
					this.ai[0] = 30f;
					if (this.ai[1] == 0f)
					{
						this.ai[1] = 1f;
					}
					this.velocity.Y = this.velocity.Y + 0.5f;
				}
			}
			else if (this.type == 312)
			{
				if (this.ai[0] >= 5f)
				{
					this.alpha = 0;
				}
				if (this.ai[0] >= 20f)
				{
					this.ai[0] = 30f;
					this.velocity.Y = this.velocity.Y + 0.5f;
				}
			}
			else if (this.type != 239 && this.type != 264)
			{
				if (this.type == 176)
				{
					if (this.ai[0] >= 15f)
					{
						this.ai[0] = 15f;
						this.velocity.Y = this.velocity.Y + 0.05f;
					}
				}
				else if (this.type == 275 || this.type == 276)
				{
					if (this.alpha > 0)
					{
						this.alpha -= 30;
					}
					if (this.alpha < 0)
					{
						this.alpha = 0;
					}
					if (this.ai[0] >= 35f)
					{
						this.ai[0] = 35f;
						this.velocity.Y = this.velocity.Y + 0.025f;
					}
					if (Main.expertMode)
					{
						float scaleFactor3 = 18f;
						int num172 = (int)Player.FindClosest(base.Center, 1, 1);
						Vector2 vector16 = Main.player[num172].Center - base.Center;
						vector16.Normalize();
						vector16 *= scaleFactor3;
						int num173 = 70;
						this.velocity = (this.velocity * (float)(num173 - 1) + vector16) / (float)num173;
						if (this.velocity.Length() < 14f)
						{
							this.velocity.Normalize();
							this.velocity *= 14f;
						}
						this.tileCollide = false;
						if (this.timeLeft > 180)
						{
							this.timeLeft = 180;
						}
					}
				}
				else if (this.type == 172)
				{
					if (this.ai[0] >= 17f)
					{
						this.ai[0] = 17f;
						this.velocity.Y = this.velocity.Y + 0.085f;
					}
				}
				else if (this.type == 117)
				{
					if (this.ai[0] >= 35f)
					{
						this.ai[0] = 35f;
						this.velocity.Y = this.velocity.Y + 0.06f;
					}
				}
				else if (this.type == 120)
				{
					int num174 = Dust.NewDust(new Vector2(this.position.X - this.velocity.X, this.position.Y - this.velocity.Y), this.width, this.height, 67, this.velocity.X, this.velocity.Y, 100, default(Color), 1.2f);
					Main.dust[num174].noGravity = true;
					Main.dust[num174].velocity *= 0.3f;
					if (this.ai[0] >= 30f)
					{
						this.ai[0] = 30f;
						this.velocity.Y = this.velocity.Y + 0.05f;
					}
				}
				else if (this.type == 195)
				{
					if (this.ai[0] >= 20f)
					{
						this.ai[0] = 20f;
						this.velocity.Y = this.velocity.Y + 0.075f;
						this.tileCollide = true;
					}
					else
					{
						this.tileCollide = false;
					}
				}
				else if (this.type == 267 || this.type == 477 || this.type == 478 || this.type == 479)
				{
					this.localAI[0] += 1f;
					if (this.localAI[0] > 3f)
					{
						this.alpha = 0;
					}
					if (this.ai[0] >= 20f)
					{
						this.ai[0] = 20f;
						if (this.type != 477)
						{
							this.velocity.Y = this.velocity.Y + 0.075f;
						}
					}
					if (this.type == 479 && Main.myPlayer == this.owner)
					{
						if (this.ai[1] >= 0f)
						{
							this.penetrate = -1;
						}
						else if (this.penetrate < 0)
						{
							this.penetrate = 1;
						}
						if (this.ai[1] >= 0f)
						{
							this.ai[1] += 1f;
						}
						if (this.ai[1] > (float)Main.rand.Next(5, 30))
						{
							this.ai[1] = -1000f;
							float scaleFactor4 = this.velocity.Length();
							Vector2 velocity = this.velocity;
							velocity.Normalize();
							int num175 = Main.rand.Next(2, 4);
							if (Main.rand.Next(4) == 0)
							{
								num175++;
							}
							for (int num176 = 0; num176 < num175; num176++)
							{
								Vector2 vector17 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
								vector17.Normalize();
								vector17 += velocity * 2f;
								vector17.Normalize();
								vector17 *= scaleFactor4;
								Projectile.NewProjectile(base.Center.X, base.Center.Y, vector17.X, vector17.Y, this.type, this.damage, this.knockBack, this.owner, 0f, -1000f);
							}
						}
					}
					if (this.type == 478 && Main.myPlayer == this.owner)
					{
						this.ai[1] += 1f;
						if (this.ai[1] > (float)Main.rand.Next(5, 20))
						{
							if (this.timeLeft > 40)
							{
								this.timeLeft -= 20;
							}
							this.ai[1] = 0f;
							Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 480, (int)((double)this.damage * 0.8), this.knockBack * 0.5f, this.owner, 0f, 0f);
						}
					}
				}
				else if (this.type == 408)
				{
					if (this.ai[0] >= 45f)
					{
						this.ai[0] = 45f;
						this.velocity.Y = this.velocity.Y + 0.05f;
					}
				}
				else if (this.type == 616)
				{
					if (this.alpha < 170)
					{
						float num177 = 3f;
						int num178 = 0;
						while ((float)num178 < num177)
						{
							int num179 = Dust.NewDust(this.position, 1, 1, 229, 0f, 0f, 0, default(Color), 1f);
							Main.dust[num179].position = base.Center - this.velocity / num177 * (float)num178;
							Main.dust[num179].velocity *= 0f;
							Main.dust[num179].noGravity = true;
							Main.dust[num179].alpha = 200;
							Main.dust[num179].scale = 0.5f;
							num178++;
						}
					}
					float num180 = (float)Math.Sqrt((double)(this.velocity.X * this.velocity.X + this.velocity.Y * this.velocity.Y));
					float num181 = this.localAI[0];
					if (num181 == 0f)
					{
						this.localAI[0] = num180;
						num181 = num180;
					}
					if (this.alpha > 0)
					{
						this.alpha -= 25;
					}
					if (this.alpha < 0)
					{
						this.alpha = 0;
					}
					float num182 = this.position.X;
					float num183 = this.position.Y;
					float num184 = 800f;
					bool flag6 = false;
					int num185 = 0;
					this.ai[0] += 1f;
					if (this.ai[0] > 20f)
					{
						this.ai[0] -= 1f;
						if (this.ai[1] == 0f)
						{
							for (int num186 = 0; num186 < 200; num186++)
							{
								if (Main.npc[num186].CanBeChasedBy(this, false) && (this.ai[1] == 0f || this.ai[1] == (float)(num186 + 1)))
								{
									float num187 = Main.npc[num186].position.X + (float)(Main.npc[num186].width / 2);
									float num188 = Main.npc[num186].position.Y + (float)(Main.npc[num186].height / 2);
									float num189 = Math.Abs(this.position.X + (float)(this.width / 2) - num187) + Math.Abs(this.position.Y + (float)(this.height / 2) - num188);
									if (num189 < num184 && Collision.CanHit(new Vector2(this.position.X + (float)(this.width / 2), this.position.Y + (float)(this.height / 2)), 1, 1, Main.npc[num186].position, Main.npc[num186].width, Main.npc[num186].height))
									{
										num184 = num189;
										num182 = num187;
										num183 = num188;
										flag6 = true;
										num185 = num186;
									}
								}
							}
							if (flag6)
							{
								this.ai[1] = (float)(num185 + 1);
							}
							flag6 = false;
						}
						if (this.ai[1] != 0f)
						{
							int num190 = (int)(this.ai[1] - 1f);
							if (Main.npc[num190].active && Main.npc[num190].CanBeChasedBy(this, true))
							{
								float num191 = Main.npc[num190].position.X + (float)(Main.npc[num190].width / 2);
								float num192 = Main.npc[num190].position.Y + (float)(Main.npc[num190].height / 2);
								float num193 = Math.Abs(this.position.X + (float)(this.width / 2) - num191) + Math.Abs(this.position.Y + (float)(this.height / 2) - num192);
								if (num193 < 1000f)
								{
									flag6 = true;
									num182 = Main.npc[num190].position.X + (float)(Main.npc[num190].width / 2);
									num183 = Main.npc[num190].position.Y + (float)(Main.npc[num190].height / 2);
								}
							}
						}
						if (!this.friendly)
						{
							flag6 = false;
						}
						if (flag6)
						{
							float num194 = num181;
							Vector2 vector18 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num195 = num182 - vector18.X;
							float num196 = num183 - vector18.Y;
							float num197 = (float)Math.Sqrt((double)(num195 * num195 + num196 * num196));
							num197 = num194 / num197;
							num195 *= num197;
							num196 *= num197;
							int num198 = 8;
							this.velocity.X = (this.velocity.X * (float)(num198 - 1) + num195) / (float)num198;
							this.velocity.Y = (this.velocity.Y * (float)(num198 - 1) + num196) / (float)num198;
						}
					}
				}
				else if (this.type == 507 || this.type == 508)
				{
					if (this.ai[0] > 45f)
					{
						this.velocity.X = this.velocity.X * 0.98f;
						this.velocity.Y = this.velocity.Y + 0.3f;
					}
				}
				else if (this.type == 495)
				{
					int num199 = Dust.NewDust(new Vector2(this.position.X - this.velocity.X, this.position.Y - this.velocity.Y), this.width, this.height, 27, this.velocity.X, this.velocity.Y, 100, default(Color), 1.2f);
					Main.dust[num199].noGravity = true;
					Main.dust[num199].velocity *= 0.3f;
					if (this.ai[0] >= 30f)
					{
						this.ai[0] = 30f;
						this.velocity.Y = this.velocity.Y + 0.04f;
					}
				}
				else if (this.type == 498)
				{
					if (this.localAI[0] == 0f)
					{
						this.localAI[0] += 1f;
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
					}
					this.ai[0] += 1f;
					if (this.ai[0] >= 50f)
					{
						this.velocity.X = this.velocity.X * 0.98f;
						this.velocity.Y = this.velocity.Y + 0.15f;
						this.rotation += (float)this.direction * 0.5f;
					}
					else
					{
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
					}
				}
				else if (this.type == 437)
				{
					if (this.ai[0] >= 12f)
					{
						if (this.ai[0] >= 20f)
						{
							this.Kill();
						}
						this.alpha += 30;
					}
				}
				else if (this.type != 442 && this.type != 634 && this.type != 635)
				{
					if (this.type == 639)
					{
						if (this.timeLeft <= this.MaxUpdates * 45 - 14)
						{
							this.velocity.Y = this.velocity.Y + 0.1f;
						}
					}
					else if (this.ai[0] >= 15f)
					{
						this.ai[0] = 15f;
						this.velocity.Y = this.velocity.Y + 0.1f;
					}
				}
			}
			if (this.type == 248)
			{
				if (this.velocity.X < 0f)
				{
					this.rotation -= (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) * 0.05f;
				}
				else
				{
					this.rotation += (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) * 0.05f;
				}
			}
			else if (this.type == 270 || this.type == 585 || this.type == 601)
			{
				this.spriteDirection = this.direction;
				if (this.direction < 0)
				{
					this.rotation = (float)Math.Atan2((double)(-(double)this.velocity.Y), (double)(-(double)this.velocity.X));
				}
				else
				{
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
				}
			}
			else if (this.type == 311)
			{
				if (this.ai[1] != 0f)
				{
					this.rotation += this.velocity.X * 0.1f + (float)Main.rand.Next(-10, 11) * 0.025f;
				}
				else
				{
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
				}
			}
			else if (this.type == 312)
			{
				this.rotation += this.velocity.X * 0.02f;
			}
			else if (this.type == 408)
			{
				this.rotation = this.velocity.ToRotation();
				if (this.direction == -1)
				{
					this.rotation += 3.14159274f;
				}
			}
			else if (this.type == 435 || this.type == 459)
			{
				this.rotation = this.velocity.ToRotation();
				if (this.direction == -1)
				{
					this.rotation += 3.14159274f;
				}
			}
			else if (this.type == 660)
			{
				this.rotation = this.velocity.ToRotation() + 0.7853982f;
			}
			else if (this.type == 436)
			{
				this.rotation = this.velocity.ToRotation();
				this.rotation += 3.14159274f;
				if (this.direction == -1)
				{
					this.rotation += 3.14159274f;
				}
			}
			else if (this.type == 469)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = -1;
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
				}
				else
				{
					this.spriteDirection = 1;
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
				}
			}
			else if (this.type == 477)
			{
				if (this.localAI[1] < 5f)
				{
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
					this.localAI[1] += 1f;
				}
				else
				{
					this.rotation = (this.rotation * 2f + (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f) / 3f;
				}
			}
			else if (this.type == 532)
			{
				this.rotation += 0.2f + Math.Abs(this.velocity.X) * 0.1f;
			}
			else if (this.type == 483)
			{
				this.rotation += this.velocity.X * 0.05f;
			}
			else if (this.type == 485)
			{
				Vector2 value16 = new Vector2(this.ai[0], this.ai[1]);
				this.velocity = (this.velocity * 39f + value16) / 40f;
				int num200 = Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f);
				Main.dust[num200].noGravity = true;
				Main.dust[num200].velocity *= 0.2f;
				Main.dust[num200].position = (Main.dust[num200].position + base.Center) / 2f;
				this.frameCounter++;
				if (this.frameCounter >= 2)
				{
					this.frameCounter = 0;
					this.frame++;
					if (this.frame >= 5)
					{
						this.frame = 0;
					}
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
					this.rotation = (float)Math.Atan2((double)(-(double)this.velocity.Y), (double)(-(double)this.velocity.X));
				}
				else
				{
					this.spriteDirection = 1;
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
				}
			}
			else if (this.type == 640)
			{
				if (this.velocity != Vector2.Zero)
				{
					this.rotation = this.velocity.ToRotation() + 1.57079637f;
				}
			}
			else if (this.type != 344 && this.type != 498)
			{
				this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
			}
			if (this.velocity.Y > 16f)
			{
				this.velocity.Y = 16f;
			}
		}

		private void AI_026()
		{
			if (!Main.player[this.owner].active)
			{
				this.active = false;
				return;
			}
			bool flag = false;
			bool flag2 = false;
			bool flag3 = false;
			bool flag4 = false;
			int num = 85;
			bool flag5 = this.type >= 191 && this.type <= 194;
			if (this.type == 324)
			{
				num = 120;
			}
			if (this.type == 112)
			{
				num = 100;
			}
			if (this.type == 127)
			{
				num = 50;
			}
			if (flag5)
			{
				if (this.lavaWet)
				{
					this.ai[0] = 1f;
					this.ai[1] = 0f;
				}
				num = 60 + 30 * this.minionPos;
			}
			else if (this.type == 266)
			{
				num = 60 + 30 * this.minionPos;
			}
			if (this.type == 111)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].bunny = false;
				}
				if (Main.player[this.owner].bunny)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 112)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].penguin = false;
				}
				if (Main.player[this.owner].penguin)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 334)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].puppy = false;
				}
				if (Main.player[this.owner].puppy)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 353)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].grinch = false;
				}
				if (Main.player[this.owner].grinch)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 127)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].turtle = false;
				}
				if (Main.player[this.owner].turtle)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 175)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].eater = false;
				}
				if (Main.player[this.owner].eater)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 197)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].skeletron = false;
				}
				if (Main.player[this.owner].skeletron)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 198)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].hornet = false;
				}
				if (Main.player[this.owner].hornet)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 199)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].tiki = false;
				}
				if (Main.player[this.owner].tiki)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 200)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].lizard = false;
				}
				if (Main.player[this.owner].lizard)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 208)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].parrot = false;
				}
				if (Main.player[this.owner].parrot)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 209)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].truffle = false;
				}
				if (Main.player[this.owner].truffle)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 210)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].sapling = false;
				}
				if (Main.player[this.owner].sapling)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 324)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].cSapling = false;
				}
				if (Main.player[this.owner].cSapling)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 313)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].spider = false;
				}
				if (Main.player[this.owner].spider)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 314)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].squashling = false;
				}
				if (Main.player[this.owner].squashling)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 211)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].wisp = false;
				}
				if (Main.player[this.owner].wisp)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 236)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].dino = false;
				}
				if (Main.player[this.owner].dino)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 499)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].babyFaceMonster = false;
				}
				if (Main.player[this.owner].babyFaceMonster)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 266)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].slime = false;
				}
				if (Main.player[this.owner].slime)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 268)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].eyeSpring = false;
				}
				if (Main.player[this.owner].eyeSpring)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 269)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].snowman = false;
				}
				if (Main.player[this.owner].snowman)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 319)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].blackCat = false;
				}
				if (Main.player[this.owner].blackCat)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 380)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].zephyrfish = false;
				}
				if (Main.player[this.owner].zephyrfish)
				{
					this.timeLeft = 2;
				}
			}
			if (flag5)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].pygmy = false;
				}
				if (Main.player[this.owner].pygmy)
				{
					this.timeLeft = Main.rand.Next(2, 10);
				}
			}
			if (this.type >= 390 && this.type <= 392)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].spiderMinion = false;
				}
				if (Main.player[this.owner].spiderMinion)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 398)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].miniMinotaur = false;
				}
				if (Main.player[this.owner].miniMinotaur)
				{
					this.timeLeft = 2;
				}
			}
			if (flag5 || this.type == 266 || (this.type >= 390 && this.type <= 392))
			{
				num = 10;
				int num2 = 40 * (this.minionPos + 1) * Main.player[this.owner].direction;
				if (Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) < this.position.X + (float)(this.width / 2) - (float)num + (float)num2)
				{
					flag = true;
				}
				else if (Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) > this.position.X + (float)(this.width / 2) + (float)num + (float)num2)
				{
					flag2 = true;
				}
			}
			else if (Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) < this.position.X + (float)(this.width / 2) - (float)num)
			{
				flag = true;
			}
			else if (Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) > this.position.X + (float)(this.width / 2) + (float)num)
			{
				flag2 = true;
			}
			if (this.type == 175)
			{
				float num3 = 0.1f;
				this.tileCollide = false;
				int num4 = 300;
				Vector2 vector = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float num5 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector.X;
				float num6 = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - vector.Y;
				if (this.type == 127)
				{
					num6 = Main.player[this.owner].position.Y - vector.Y;
				}
				float num7 = (float)Math.Sqrt((double)(num5 * num5 + num6 * num6));
				float num8 = 7f;
				if (num7 < (float)num4 && Main.player[this.owner].velocity.Y == 0f && this.position.Y + (float)this.height <= Main.player[this.owner].position.Y + (float)Main.player[this.owner].height && !Collision.SolidCollision(this.position, this.width, this.height))
				{
					this.ai[0] = 0f;
					if (this.velocity.Y < -6f)
					{
						this.velocity.Y = -6f;
					}
				}
				if (num7 < 150f)
				{
					if (Math.Abs(this.velocity.X) > 2f || Math.Abs(this.velocity.Y) > 2f)
					{
						this.velocity *= 0.99f;
					}
					num3 = 0.01f;
					if (num5 < -2f)
					{
						num5 = -2f;
					}
					if (num5 > 2f)
					{
						num5 = 2f;
					}
					if (num6 < -2f)
					{
						num6 = -2f;
					}
					if (num6 > 2f)
					{
						num6 = 2f;
					}
				}
				else
				{
					if (num7 > 300f)
					{
						num3 = 0.2f;
					}
					num7 = num8 / num7;
					num5 *= num7;
					num6 *= num7;
				}
				if (Math.Abs(num5) > Math.Abs(num6) || num3 == 0.05f)
				{
					if (this.velocity.X < num5)
					{
						this.velocity.X = this.velocity.X + num3;
						if (num3 > 0.05f && this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X + num3;
						}
					}
					if (this.velocity.X > num5)
					{
						this.velocity.X = this.velocity.X - num3;
						if (num3 > 0.05f && this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X - num3;
						}
					}
				}
				if (Math.Abs(num5) <= Math.Abs(num6) || num3 == 0.05f)
				{
					if (this.velocity.Y < num6)
					{
						this.velocity.Y = this.velocity.Y + num3;
						if (num3 > 0.05f && this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y + num3;
						}
					}
					if (this.velocity.Y > num6)
					{
						this.velocity.Y = this.velocity.Y - num3;
						if (num3 > 0.05f && this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y - num3;
						}
					}
				}
				this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
				this.frameCounter++;
				if (this.frameCounter > 6)
				{
					this.frame++;
					this.frameCounter = 0;
				}
				if (this.frame > 1)
				{
					this.frame = 0;
					return;
				}
			}
			else if (this.type == 197)
			{
				float num9 = 0.1f;
				this.tileCollide = false;
				int num10 = 300;
				Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float num11 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector2.X;
				float num12 = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - vector2.Y;
				if (this.type == 127)
				{
					num12 = Main.player[this.owner].position.Y - vector2.Y;
				}
				float num13 = (float)Math.Sqrt((double)(num11 * num11 + num12 * num12));
				float num14 = 3f;
				if (num13 > 500f)
				{
					this.localAI[0] = 10000f;
				}
				if (this.localAI[0] >= 10000f)
				{
					num14 = 14f;
				}
				if (num13 < (float)num10 && Main.player[this.owner].velocity.Y == 0f && this.position.Y + (float)this.height <= Main.player[this.owner].position.Y + (float)Main.player[this.owner].height && !Collision.SolidCollision(this.position, this.width, this.height))
				{
					this.ai[0] = 0f;
					if (this.velocity.Y < -6f)
					{
						this.velocity.Y = -6f;
					}
				}
				if (num13 < 150f)
				{
					if (Math.Abs(this.velocity.X) > 2f || Math.Abs(this.velocity.Y) > 2f)
					{
						this.velocity *= 0.99f;
					}
					num9 = 0.01f;
					if (num11 < -2f)
					{
						num11 = -2f;
					}
					if (num11 > 2f)
					{
						num11 = 2f;
					}
					if (num12 < -2f)
					{
						num12 = -2f;
					}
					if (num12 > 2f)
					{
						num12 = 2f;
					}
				}
				else
				{
					if (num13 > 300f)
					{
						num9 = 0.2f;
					}
					num13 = num14 / num13;
					num11 *= num13;
					num12 *= num13;
				}
				if (this.velocity.X < num11)
				{
					this.velocity.X = this.velocity.X + num9;
					if (num9 > 0.05f && this.velocity.X < 0f)
					{
						this.velocity.X = this.velocity.X + num9;
					}
				}
				if (this.velocity.X > num11)
				{
					this.velocity.X = this.velocity.X - num9;
					if (num9 > 0.05f && this.velocity.X > 0f)
					{
						this.velocity.X = this.velocity.X - num9;
					}
				}
				if (this.velocity.Y < num12)
				{
					this.velocity.Y = this.velocity.Y + num9;
					if (num9 > 0.05f && this.velocity.Y < 0f)
					{
						this.velocity.Y = this.velocity.Y + num9;
					}
				}
				if (this.velocity.Y > num12)
				{
					this.velocity.Y = this.velocity.Y - num9;
					if (num9 > 0.05f && this.velocity.Y > 0f)
					{
						this.velocity.Y = this.velocity.Y - num9;
					}
				}
				this.localAI[0] += (float)Main.rand.Next(10);
				if (this.localAI[0] > 10000f)
				{
					if (this.localAI[1] == 0f)
					{
						if (this.velocity.X < 0f)
						{
							this.localAI[1] = -1f;
						}
						else
						{
							this.localAI[1] = 1f;
						}
					}
					this.rotation += 0.25f * this.localAI[1];
					if (this.localAI[0] > 12000f)
					{
						this.localAI[0] = 0f;
					}
				}
				else
				{
					this.localAI[1] = 0f;
					float num15 = this.velocity.X * 0.1f;
					if (this.rotation > num15)
					{
						this.rotation -= (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) * 0.01f;
						if (this.rotation < num15)
						{
							this.rotation = num15;
						}
					}
					if (this.rotation < num15)
					{
						this.rotation += (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) * 0.01f;
						if (this.rotation > num15)
						{
							this.rotation = num15;
						}
					}
				}
				if ((double)this.rotation > 6.28)
				{
					this.rotation -= 6.28f;
				}
				if ((double)this.rotation < -6.28)
				{
					this.rotation += 6.28f;
					return;
				}
			}
			else if (this.type == 198 || this.type == 380)
			{
				float num16 = 0.4f;
				if (this.type == 380)
				{
					num16 = 0.3f;
				}
				this.tileCollide = false;
				int num17 = 100;
				Vector2 vector3 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float num18 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector3.X;
				float num19 = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - vector3.Y;
				num19 += (float)Main.rand.Next(-10, 21);
				num18 += (float)Main.rand.Next(-10, 21);
				num18 += (float)(60 * -(float)Main.player[this.owner].direction);
				num19 -= 60f;
				if (this.type == 127)
				{
					num19 = Main.player[this.owner].position.Y - vector3.Y;
				}
				float num20 = (float)Math.Sqrt((double)(num18 * num18 + num19 * num19));
				float num21 = 14f;
				if (this.type == 380)
				{
					num21 = 6f;
				}
				if (num20 < (float)num17 && Main.player[this.owner].velocity.Y == 0f && this.position.Y + (float)this.height <= Main.player[this.owner].position.Y + (float)Main.player[this.owner].height && !Collision.SolidCollision(this.position, this.width, this.height))
				{
					this.ai[0] = 0f;
					if (this.velocity.Y < -6f)
					{
						this.velocity.Y = -6f;
					}
				}
				if (num20 < 50f)
				{
					if (Math.Abs(this.velocity.X) > 2f || Math.Abs(this.velocity.Y) > 2f)
					{
						this.velocity *= 0.99f;
					}
					num16 = 0.01f;
				}
				else
				{
					if (this.type == 380)
					{
						if (num20 < 100f)
						{
							num16 = 0.1f;
						}
						if (num20 > 300f)
						{
							num16 = 0.4f;
						}
					}
					else if (this.type == 198)
					{
						if (num20 < 100f)
						{
							num16 = 0.1f;
						}
						if (num20 > 300f)
						{
							num16 = 0.6f;
						}
					}
					num20 = num21 / num20;
					num18 *= num20;
					num19 *= num20;
				}
				if (this.velocity.X < num18)
				{
					this.velocity.X = this.velocity.X + num16;
					if (num16 > 0.05f && this.velocity.X < 0f)
					{
						this.velocity.X = this.velocity.X + num16;
					}
				}
				if (this.velocity.X > num18)
				{
					this.velocity.X = this.velocity.X - num16;
					if (num16 > 0.05f && this.velocity.X > 0f)
					{
						this.velocity.X = this.velocity.X - num16;
					}
				}
				if (this.velocity.Y < num19)
				{
					this.velocity.Y = this.velocity.Y + num16;
					if (num16 > 0.05f && this.velocity.Y < 0f)
					{
						this.velocity.Y = this.velocity.Y + num16 * 2f;
					}
				}
				if (this.velocity.Y > num19)
				{
					this.velocity.Y = this.velocity.Y - num16;
					if (num16 > 0.05f && this.velocity.Y > 0f)
					{
						this.velocity.Y = this.velocity.Y - num16 * 2f;
					}
				}
				if ((double)this.velocity.X > 0.25)
				{
					this.direction = -1;
				}
				else if ((double)this.velocity.X < -0.25)
				{
					this.direction = 1;
				}
				this.spriteDirection = this.direction;
				this.rotation = this.velocity.X * 0.05f;
				this.frameCounter++;
				int num22 = 2;
				if (this.type == 380)
				{
					num22 = 5;
				}
				if (this.frameCounter > num22)
				{
					this.frame++;
					this.frameCounter = 0;
				}
				if (this.frame > 3)
				{
					this.frame = 0;
					return;
				}
			}
			else if (this.type == 211)
			{
				float num23 = 0.2f;
				float num24 = 5f;
				this.tileCollide = false;
				Vector2 vector4 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float num25 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector4.X;
				float num26 = Main.player[this.owner].position.Y + Main.player[this.owner].gfxOffY + (float)(Main.player[this.owner].height / 2) - vector4.Y;
				if (Main.player[this.owner].controlLeft)
				{
					num25 -= 120f;
				}
				else if (Main.player[this.owner].controlRight)
				{
					num25 += 120f;
				}
				if (Main.player[this.owner].controlDown)
				{
					num26 += 120f;
				}
				else
				{
					if (Main.player[this.owner].controlUp)
					{
						num26 -= 120f;
					}
					num26 -= 60f;
				}
				float num27 = (float)Math.Sqrt((double)(num25 * num25 + num26 * num26));
				if (num27 > 1000f)
				{
					this.position.X = this.position.X + num25;
					this.position.Y = this.position.Y + num26;
				}
				if (this.localAI[0] == 1f)
				{
					if (num27 < 10f && Math.Abs(Main.player[this.owner].velocity.X) + Math.Abs(Main.player[this.owner].velocity.Y) < num24 && Main.player[this.owner].velocity.Y == 0f)
					{
						this.localAI[0] = 0f;
					}
					num24 = 12f;
					if (num27 < num24)
					{
						this.velocity.X = num25;
						this.velocity.Y = num26;
					}
					else
					{
						num27 = num24 / num27;
						this.velocity.X = num25 * num27;
						this.velocity.Y = num26 * num27;
					}
					if ((double)this.velocity.X > 0.5)
					{
						this.direction = -1;
					}
					else if ((double)this.velocity.X < -0.5)
					{
						this.direction = 1;
					}
					this.spriteDirection = this.direction;
					this.rotation -= (0.2f + Math.Abs(this.velocity.X) * 0.025f) * (float)this.direction;
					this.frameCounter++;
					if (this.frameCounter > 3)
					{
						this.frame++;
						this.frameCounter = 0;
					}
					if (this.frame < 5)
					{
						this.frame = 5;
					}
					if (this.frame > 9)
					{
						this.frame = 5;
					}
					for (int i = 0; i < 2; i++)
					{
						int num28 = Dust.NewDust(new Vector2(this.position.X + 3f, this.position.Y + 4f), 14, 14, 156, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num28].velocity *= 0.2f;
						Main.dust[num28].noGravity = true;
						Main.dust[num28].scale = 1.25f;
						Main.dust[num28].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cLight, Main.player[this.owner]);
					}
					return;
				}
				if (num27 > 200f)
				{
					this.localAI[0] = 1f;
				}
				if ((double)this.velocity.X > 0.5)
				{
					this.direction = -1;
				}
				else if ((double)this.velocity.X < -0.5)
				{
					this.direction = 1;
				}
				this.spriteDirection = this.direction;
				if (num27 < 10f)
				{
					this.velocity.X = num25;
					this.velocity.Y = num26;
					this.rotation = this.velocity.X * 0.05f;
					if (num27 < num24)
					{
						this.position += this.velocity;
						this.velocity *= 0f;
						num23 = 0f;
					}
					this.direction = -Main.player[this.owner].direction;
				}
				num27 = num24 / num27;
				num25 *= num27;
				num26 *= num27;
				if (this.velocity.X < num25)
				{
					this.velocity.X = this.velocity.X + num23;
					if (this.velocity.X < 0f)
					{
						this.velocity.X = this.velocity.X * 0.99f;
					}
				}
				if (this.velocity.X > num25)
				{
					this.velocity.X = this.velocity.X - num23;
					if (this.velocity.X > 0f)
					{
						this.velocity.X = this.velocity.X * 0.99f;
					}
				}
				if (this.velocity.Y < num26)
				{
					this.velocity.Y = this.velocity.Y + num23;
					if (this.velocity.Y < 0f)
					{
						this.velocity.Y = this.velocity.Y * 0.99f;
					}
				}
				if (this.velocity.Y > num26)
				{
					this.velocity.Y = this.velocity.Y - num23;
					if (this.velocity.Y > 0f)
					{
						this.velocity.Y = this.velocity.Y * 0.99f;
					}
				}
				if (this.velocity.X != 0f || this.velocity.Y != 0f)
				{
					this.rotation = this.velocity.X * 0.05f;
				}
				this.frameCounter++;
				if (this.frameCounter > 3)
				{
					this.frame++;
					this.frameCounter = 0;
				}
				if (this.frame > 4)
				{
					this.frame = 0;
					return;
				}
			}
			else if (this.type == 199)
			{
				float num29 = 0.1f;
				this.tileCollide = false;
				int num30 = 200;
				Vector2 vector5 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float num31 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector5.X;
				float num32 = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - vector5.Y;
				num32 -= 60f;
				num31 -= 2f;
				if (this.type == 127)
				{
					num32 = Main.player[this.owner].position.Y - vector5.Y;
				}
				float num33 = (float)Math.Sqrt((double)(num31 * num31 + num32 * num32));
				float num34 = 4f;
				float num35 = num33;
				if (num33 < (float)num30 && Main.player[this.owner].velocity.Y == 0f && this.position.Y + (float)this.height <= Main.player[this.owner].position.Y + (float)Main.player[this.owner].height && !Collision.SolidCollision(this.position, this.width, this.height))
				{
					this.ai[0] = 0f;
					if (this.velocity.Y < -6f)
					{
						this.velocity.Y = -6f;
					}
				}
				if (num33 < 4f)
				{
					this.velocity.X = num31;
					this.velocity.Y = num32;
					num29 = 0f;
				}
				else
				{
					if (num33 > 350f)
					{
						num29 = 0.2f;
						num34 = 10f;
					}
					num33 = num34 / num33;
					num31 *= num33;
					num32 *= num33;
				}
				if (this.velocity.X < num31)
				{
					this.velocity.X = this.velocity.X + num29;
					if (this.velocity.X < 0f)
					{
						this.velocity.X = this.velocity.X + num29;
					}
				}
				if (this.velocity.X > num31)
				{
					this.velocity.X = this.velocity.X - num29;
					if (this.velocity.X > 0f)
					{
						this.velocity.X = this.velocity.X - num29;
					}
				}
				if (this.velocity.Y < num32)
				{
					this.velocity.Y = this.velocity.Y + num29;
					if (this.velocity.Y < 0f)
					{
						this.velocity.Y = this.velocity.Y + num29;
					}
				}
				if (this.velocity.Y > num32)
				{
					this.velocity.Y = this.velocity.Y - num29;
					if (this.velocity.Y > 0f)
					{
						this.velocity.Y = this.velocity.Y - num29;
					}
				}
				this.direction = -Main.player[this.owner].direction;
				this.spriteDirection = 1;
				this.rotation = this.velocity.Y * 0.05f * (float)(-(float)this.direction);
				if (num35 >= 50f)
				{
					this.frameCounter++;
					if (this.frameCounter > 6)
					{
						this.frameCounter = 0;
						if (this.velocity.X < 0f)
						{
							if (this.frame < 2)
							{
								this.frame++;
							}
							if (this.frame > 2)
							{
								this.frame--;
								return;
							}
						}
						else
						{
							if (this.frame < 6)
							{
								this.frame++;
							}
							if (this.frame > 6)
							{
								this.frame--;
								return;
							}
						}
					}
				}
				else
				{
					this.frameCounter++;
					if (this.frameCounter > 6)
					{
						this.frame += this.direction;
						this.frameCounter = 0;
					}
					if (this.frame > 7)
					{
						this.frame = 0;
					}
					if (this.frame < 0)
					{
						this.frame = 7;
						return;
					}
				}
			}
			else
			{
				if (this.ai[1] == 0f)
				{
					int num36 = 500;
					if (this.type == 127)
					{
						num36 = 200;
					}
					if (this.type == 208)
					{
						num36 = 300;
					}
					if (flag5 || this.type == 266 || (this.type >= 390 && this.type <= 392))
					{
						num36 += 40 * this.minionPos;
						if (this.localAI[0] > 0f)
						{
							num36 += 500;
						}
						if (this.type == 266 && this.localAI[0] > 0f)
						{
							num36 += 100;
						}
						if (this.type >= 390 && this.type <= 392 && this.localAI[0] > 0f)
						{
							num36 += 400;
						}
					}
					if (Main.player[this.owner].rocketDelay2 > 0)
					{
						this.ai[0] = 1f;
					}
					Vector2 vector6 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num37 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector6.X;
					float num38 = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - vector6.Y;
					float num39 = (float)Math.Sqrt((double)(num37 * num37 + num38 * num38));
					if (num39 > 2000f)
					{
						this.position.X = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - (float)(this.width / 2);
						this.position.Y = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - (float)(this.height / 2);
					}
					else if (num39 > (float)num36 || (Math.Abs(num38) > 300f && ((!flag5 && this.type != 266 && (this.type < 390 || this.type > 392)) || this.localAI[0] <= 0f)))
					{
						if (this.type != 324)
						{
							if (num38 > 0f && this.velocity.Y < 0f)
							{
								this.velocity.Y = 0f;
							}
							if (num38 < 0f && this.velocity.Y > 0f)
							{
								this.velocity.Y = 0f;
							}
						}
						this.ai[0] = 1f;
					}
				}
				if (this.type == 209 && this.ai[0] != 0f)
				{
					if (Main.player[this.owner].velocity.Y == 0f && this.alpha >= 100)
					{
						this.position.X = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - (float)(this.width / 2);
						this.position.Y = Main.player[this.owner].position.Y + (float)Main.player[this.owner].height - (float)this.height;
						this.ai[0] = 0f;
						return;
					}
					this.velocity.X = 0f;
					this.velocity.Y = 0f;
					this.alpha += 5;
					if (this.alpha > 255)
					{
						this.alpha = 255;
						return;
					}
				}
				else if (this.ai[0] != 0f)
				{
					float num40 = 0.2f;
					int num41 = 200;
					if (this.type == 127)
					{
						num41 = 100;
					}
					if (flag5)
					{
						num40 = 0.5f;
						num41 = 100;
					}
					this.tileCollide = false;
					Vector2 vector7 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num42 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector7.X;
					if (flag5 || this.type == 266 || (this.type >= 390 && this.type <= 392))
					{
						num42 -= (float)(40 * Main.player[this.owner].direction);
						float num43 = 700f;
						if (flag5)
						{
							num43 += 100f;
						}
						bool flag6 = false;
						int num44 = -1;
						for (int j = 0; j < 200; j++)
						{
							if (Main.npc[j].CanBeChasedBy(this, false))
							{
								float num45 = Main.npc[j].position.X + (float)(Main.npc[j].width / 2);
								float num46 = Main.npc[j].position.Y + (float)(Main.npc[j].height / 2);
								float num47 = Math.Abs(Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - num45) + Math.Abs(Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - num46);
								if (num47 < num43)
								{
									if (Collision.CanHit(this.position, this.width, this.height, Main.npc[j].position, Main.npc[j].width, Main.npc[j].height))
									{
										num44 = j;
									}
									flag6 = true;
									break;
								}
							}
						}
						if (!flag6)
						{
							num42 -= (float)(40 * this.minionPos * Main.player[this.owner].direction);
						}
						if (flag6 && num44 >= 0)
						{
							this.ai[0] = 0f;
						}
					}
					float num48 = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - vector7.Y;
					if (this.type == 127)
					{
						num48 = Main.player[this.owner].position.Y - vector7.Y;
					}
					float num49 = (float)Math.Sqrt((double)(num42 * num42 + num48 * num48));
					float num50 = 10f;
					float num51 = num49;
					if (this.type == 111)
					{
						num50 = 11f;
					}
					if (this.type == 127)
					{
						num50 = 9f;
					}
					if (this.type == 324)
					{
						num50 = 20f;
					}
					if (flag5)
					{
						num40 = 0.4f;
						num50 = 12f;
						if (num50 < Math.Abs(Main.player[this.owner].velocity.X) + Math.Abs(Main.player[this.owner].velocity.Y))
						{
							num50 = Math.Abs(Main.player[this.owner].velocity.X) + Math.Abs(Main.player[this.owner].velocity.Y);
						}
					}
					if (this.type == 208 && Math.Abs(Main.player[this.owner].velocity.X) + Math.Abs(Main.player[this.owner].velocity.Y) > 4f)
					{
						num41 = -1;
					}
					if (num49 < (float)num41 && Main.player[this.owner].velocity.Y == 0f && this.position.Y + (float)this.height <= Main.player[this.owner].position.Y + (float)Main.player[this.owner].height && !Collision.SolidCollision(this.position, this.width, this.height))
					{
						this.ai[0] = 0f;
						if (this.velocity.Y < -6f)
						{
							this.velocity.Y = -6f;
						}
					}
					if (num49 < 60f)
					{
						num42 = this.velocity.X;
						num48 = this.velocity.Y;
					}
					else
					{
						num49 = num50 / num49;
						num42 *= num49;
						num48 *= num49;
					}
					if (this.type == 324)
					{
						if (num51 > 1000f)
						{
							if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)num50 - 1.25)
							{
								this.velocity *= 1.025f;
							}
							if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) > (double)num50 + 1.25)
							{
								this.velocity *= 0.975f;
							}
						}
						else if (num51 > 600f)
						{
							if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) < num50 - 1f)
							{
								this.velocity *= 1.05f;
							}
							if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) > num50 + 1f)
							{
								this.velocity *= 0.95f;
							}
						}
						else if (num51 > 400f)
						{
							if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)num50 - 0.5)
							{
								this.velocity *= 1.075f;
							}
							if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) > (double)num50 + 0.5)
							{
								this.velocity *= 0.925f;
							}
						}
						else
						{
							if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)num50 - 0.25)
							{
								this.velocity *= 1.1f;
							}
							if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) > (double)num50 + 0.25)
							{
								this.velocity *= 0.9f;
							}
						}
						this.velocity.X = (this.velocity.X * 34f + num42) / 35f;
						this.velocity.Y = (this.velocity.Y * 34f + num48) / 35f;
					}
					else
					{
						if (this.velocity.X < num42)
						{
							this.velocity.X = this.velocity.X + num40;
							if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X + num40 * 1.5f;
							}
						}
						if (this.velocity.X > num42)
						{
							this.velocity.X = this.velocity.X - num40;
							if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X - num40 * 1.5f;
							}
						}
						if (this.velocity.Y < num48)
						{
							this.velocity.Y = this.velocity.Y + num40;
							if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y + num40 * 1.5f;
							}
						}
						if (this.velocity.Y > num48)
						{
							this.velocity.Y = this.velocity.Y - num40;
							if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y - num40 * 1.5f;
							}
						}
					}
					if (this.type == 111)
					{
						this.frame = 7;
					}
					if (this.type == 112)
					{
						this.frame = 2;
					}
					if (flag5 && this.frame < 12)
					{
						this.frame = Main.rand.Next(12, 18);
						this.frameCounter = 0;
					}
					if (this.type != 313)
					{
						if ((double)this.velocity.X > 0.5)
						{
							this.spriteDirection = -1;
						}
						else if ((double)this.velocity.X < -0.5)
						{
							this.spriteDirection = 1;
						}
					}
					if (this.type == 398)
					{
						if ((double)this.velocity.X > 0.5)
						{
							this.spriteDirection = 1;
						}
						else if ((double)this.velocity.X < -0.5)
						{
							this.spriteDirection = -1;
						}
					}
					if (this.type == 112)
					{
						if (this.spriteDirection == -1)
						{
							this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
						}
						else
						{
							this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
						}
					}
					else if (this.type >= 390 && this.type <= 392)
					{
						int num52 = (int)(base.Center.X / 16f);
						int num53 = (int)(base.Center.Y / 16f);
						if (Main.tile[num52, num53] != null && Main.tile[num52, num53].wall > 0)
						{
							this.rotation = this.velocity.ToRotation() + 1.57079637f;
							this.frameCounter += (int)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y));
							if (this.frameCounter > 5)
							{
								this.frame++;
								this.frameCounter = 0;
							}
							if (this.frame > 7)
							{
								this.frame = 4;
							}
							if (this.frame < 4)
							{
								this.frame = 7;
							}
						}
						else
						{
							this.frameCounter++;
							if (this.frameCounter > 2)
							{
								this.frame++;
								this.frameCounter = 0;
							}
							if (this.frame < 8 || this.frame > 10)
							{
								this.frame = 8;
							}
							this.rotation = this.velocity.X * 0.1f;
						}
					}
					else if (this.type == 334)
					{
						this.frameCounter++;
						if (this.frameCounter > 1)
						{
							this.frame++;
							this.frameCounter = 0;
						}
						if (this.frame < 7 || this.frame > 10)
						{
							this.frame = 7;
						}
						this.rotation = this.velocity.X * 0.1f;
					}
					else if (this.type == 353)
					{
						this.frameCounter++;
						if (this.frameCounter > 6)
						{
							this.frame++;
							this.frameCounter = 0;
						}
						if (this.frame < 10 || this.frame > 13)
						{
							this.frame = 10;
						}
						this.rotation = this.velocity.X * 0.05f;
					}
					else if (this.type == 127)
					{
						this.frameCounter += 3;
						if (this.frameCounter > 6)
						{
							this.frame++;
							this.frameCounter = 0;
						}
						if (this.frame <= 5 || this.frame > 15)
						{
							this.frame = 6;
						}
						this.rotation = this.velocity.X * 0.1f;
					}
					else if (this.type == 269)
					{
						if (this.frame == 6)
						{
							this.frameCounter = 0;
						}
						else if (this.frame < 4 || this.frame > 6)
						{
							this.frameCounter = 0;
							this.frame = 4;
						}
						else
						{
							this.frameCounter++;
							if (this.frameCounter > 6)
							{
								this.frame++;
								this.frameCounter = 0;
							}
						}
						this.rotation = this.velocity.X * 0.05f;
					}
					else if (this.type == 266)
					{
						this.frameCounter++;
						if (this.frameCounter > 6)
						{
							this.frame++;
							this.frameCounter = 0;
						}
						if (this.frame < 2 || this.frame > 5)
						{
							this.frame = 2;
						}
						this.rotation = this.velocity.X * 0.1f;
					}
					else if (this.type == 324)
					{
						this.frameCounter++;
						if (this.frameCounter > 1)
						{
							this.frame++;
							this.frameCounter = 0;
						}
						if (this.frame < 6 || this.frame > 9)
						{
							this.frame = 6;
						}
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.58f;
						Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.9f, 0.6f, 0.2f);
						for (int k = 0; k < 2; k++)
						{
							int num54 = 4;
							int num55 = Dust.NewDust(new Vector2(base.Center.X - (float)num54, base.Center.Y - (float)num54) - this.velocity * 0f, num54 * 2, num54 * 2, 6, 0f, 0f, 100, default(Color), 1f);
							Main.dust[num55].scale *= 1.8f + (float)Main.rand.Next(10) * 0.1f;
							Main.dust[num55].velocity *= 0.2f;
							if (k == 1)
							{
								Main.dust[num55].position -= this.velocity * 0.5f;
							}
							Main.dust[num55].noGravity = true;
							num55 = Dust.NewDust(new Vector2(base.Center.X - (float)num54, base.Center.Y - (float)num54) - this.velocity * 0f, num54 * 2, num54 * 2, 31, 0f, 0f, 100, default(Color), 0.5f);
							Main.dust[num55].fadeIn = 1f + (float)Main.rand.Next(5) * 0.1f;
							Main.dust[num55].velocity *= 0.05f;
							if (k == 1)
							{
								Main.dust[num55].position -= this.velocity * 0.5f;
							}
						}
					}
					else if (this.type == 268)
					{
						this.frameCounter++;
						if (this.frameCounter > 4)
						{
							this.frame++;
							this.frameCounter = 0;
						}
						if (this.frame < 6 || this.frame > 7)
						{
							this.frame = 6;
						}
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.58f;
					}
					else if (this.type == 200)
					{
						this.frameCounter += 3;
						if (this.frameCounter > 6)
						{
							this.frame++;
							this.frameCounter = 0;
						}
						if (this.frame <= 5 || this.frame > 9)
						{
							this.frame = 6;
						}
						this.rotation = this.velocity.X * 0.1f;
					}
					else if (this.type == 208)
					{
						this.rotation = this.velocity.X * 0.075f;
						this.frameCounter++;
						if (this.frameCounter > 6)
						{
							this.frame++;
							this.frameCounter = 0;
						}
						if (this.frame > 4)
						{
							this.frame = 1;
						}
						if (this.frame < 1)
						{
							this.frame = 1;
						}
					}
					else if (this.type == 236)
					{
						this.rotation = this.velocity.Y * 0.05f * (float)this.direction;
						if (this.velocity.Y < 0f)
						{
							this.frameCounter += 2;
						}
						else
						{
							this.frameCounter++;
						}
						if (this.frameCounter >= 6)
						{
							this.frame++;
							this.frameCounter = 0;
						}
						if (this.frame > 12)
						{
							this.frame = 9;
						}
						if (this.frame < 9)
						{
							this.frame = 9;
						}
					}
					else if (this.type == 499)
					{
						this.rotation = this.velocity.Y * 0.05f * (float)this.direction;
						if (this.velocity.Y < 0f)
						{
							this.frameCounter += 2;
						}
						else
						{
							this.frameCounter++;
						}
						if (this.frameCounter >= 6)
						{
							this.frame++;
							this.frameCounter = 0;
						}
						if (this.frame >= 12)
						{
							this.frame = 8;
						}
						if (this.frame < 8)
						{
							this.frame = 8;
						}
					}
					else if (this.type == 314)
					{
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.58f;
						this.frameCounter++;
						if (this.frameCounter >= 3)
						{
							this.frame++;
							this.frameCounter = 0;
						}
						if (this.frame > 12)
						{
							this.frame = 7;
						}
						if (this.frame < 7)
						{
							this.frame = 7;
						}
					}
					else if (this.type == 319)
					{
						this.rotation = this.velocity.X * 0.05f;
						this.frameCounter++;
						if (this.frameCounter >= 6)
						{
							this.frame++;
							this.frameCounter = 0;
						}
						if (this.frame > 10)
						{
							this.frame = 6;
						}
						if (this.frame < 6)
						{
							this.frame = 6;
						}
					}
					else if (this.type == 210)
					{
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.58f;
						this.frameCounter += 3;
						if (this.frameCounter > 6)
						{
							this.frame++;
							this.frameCounter = 0;
						}
						if (this.frame > 11)
						{
							this.frame = 7;
						}
						if (this.frame < 7)
						{
							this.frame = 7;
						}
					}
					else if (this.type == 313)
					{
						this.position.Y = this.position.Y + (float)this.height;
						this.height = 54;
						this.position.Y = this.position.Y - (float)this.height;
						this.position.X = this.position.X + (float)(this.width / 2);
						this.width = 54;
						this.position.X = this.position.X - (float)(this.width / 2);
						this.rotation += this.velocity.X * 0.01f;
						this.frameCounter = 0;
						this.frame = 11;
					}
					else if (this.type == 398)
					{
						this.frameCounter++;
						if (this.frameCounter > 1)
						{
							this.frame++;
							this.frameCounter = 0;
						}
						if (this.frame < 6 || this.frame > 9)
						{
							this.frame = 6;
						}
						this.rotation = this.velocity.X * 0.1f;
					}
					else if (this.spriteDirection == -1)
					{
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
					}
					else
					{
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 3.14f;
					}
					if (flag5)
					{
						return;
					}
					if (this.type == 499)
					{
						return;
					}
					if (this.type != 398 && this.type != 390 && this.type != 391 && this.type != 392 && this.type != 127 && this.type != 200 && this.type != 208 && this.type != 210 && this.type != 236 && this.type != 266 && this.type != 268 && this.type != 269 && this.type != 313 && this.type != 314 && this.type != 319 && this.type != 324 && this.type != 334 && this.type != 353)
					{
						int num56 = Dust.NewDust(new Vector2(this.position.X + (float)(this.width / 2) - 4f, this.position.Y + (float)(this.height / 2) - 4f) - this.velocity, 8, 8, 16, -this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 50, default(Color), 1.7f);
						Main.dust[num56].velocity.X = Main.dust[num56].velocity.X * 0.2f;
						Main.dust[num56].velocity.Y = Main.dust[num56].velocity.Y * 0.2f;
						Main.dust[num56].noGravity = true;
						return;
					}
				}
				else
				{
					if (flag5)
					{
						float num57 = (float)(40 * this.minionPos);
						int num58 = 30;
						int num59 = 60;
						this.localAI[0] -= 1f;
						if (this.localAI[0] < 0f)
						{
							this.localAI[0] = 0f;
						}
						if (this.ai[1] > 0f)
						{
							this.ai[1] -= 1f;
						}
						else
						{
							float num60 = this.position.X;
							float num61 = this.position.Y;
							float num62 = 100000f;
							float num63 = num62;
							int num64 = -1;
							for (int l = 0; l < 200; l++)
							{
								if (Main.npc[l].CanBeChasedBy(this, false))
								{
									float num65 = Main.npc[l].position.X + (float)(Main.npc[l].width / 2);
									float num66 = Main.npc[l].position.Y + (float)(Main.npc[l].height / 2);
									float num67 = Math.Abs(this.position.X + (float)(this.width / 2) - num65) + Math.Abs(this.position.Y + (float)(this.height / 2) - num66);
									if (num67 < num62)
									{
										if (num64 == -1 && num67 <= num63)
										{
											num63 = num67;
											num60 = num65;
											num61 = num66;
										}
										if (Collision.CanHit(this.position, this.width, this.height, Main.npc[l].position, Main.npc[l].width, Main.npc[l].height))
										{
											num62 = num67;
											num60 = num65;
											num61 = num66;
											num64 = l;
										}
									}
								}
							}
							if (num64 == -1 && num63 < num62)
							{
								num62 = num63;
							}
							float num68 = 400f;
							if ((double)this.position.Y > Main.worldSurface * 16.0)
							{
								num68 = 200f;
							}
							if (num62 < num68 + num57 && num64 == -1)
							{
								float num69 = num60 - (this.position.X + (float)(this.width / 2));
								if (num69 < -5f)
								{
									flag = true;
									flag2 = false;
								}
								else if (num69 > 5f)
								{
									flag2 = true;
									flag = false;
								}
							}
							else if (num64 >= 0 && num62 < 800f + num57)
							{
								this.localAI[0] = (float)num59;
								float num70 = num60 - (this.position.X + (float)(this.width / 2));
								if (num70 > 300f || num70 < -300f)
								{
									if (num70 < -50f)
									{
										flag = true;
										flag2 = false;
									}
									else if (num70 > 50f)
									{
										flag2 = true;
										flag = false;
									}
								}
								else if (this.owner == Main.myPlayer)
								{
									this.ai[1] = (float)num58;
									float num71 = 12f;
									Vector2 vector8 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)(this.height / 2) - 8f);
									float num72 = num60 - vector8.X + (float)Main.rand.Next(-20, 21);
									float num73 = Math.Abs(num72) * 0.1f;
									num73 = num73 * (float)Main.rand.Next(0, 100) * 0.001f;
									float num74 = num61 - vector8.Y + (float)Main.rand.Next(-20, 21) - num73;
									float num75 = (float)Math.Sqrt((double)(num72 * num72 + num74 * num74));
									num75 = num71 / num75;
									num72 *= num75;
									num74 *= num75;
									int num76 = this.damage;
									int num77 = 195;
									int num78 = Projectile.NewProjectile(vector8.X, vector8.Y, num72, num74, num77, num76, this.knockBack, Main.myPlayer, 0f, 0f);
									Main.projectile[num78].timeLeft = 300;
									if (num72 < 0f)
									{
										this.direction = -1;
									}
									if (num72 > 0f)
									{
										this.direction = 1;
									}
									this.netUpdate = true;
								}
							}
						}
					}
					bool flag7 = false;
					Vector2 vector9 = Vector2.Zero;
					bool flag8 = false;
					if (this.type == 266 || (this.type >= 390 && this.type <= 392))
					{
						float num79 = (float)(40 * this.minionPos);
						int num80 = 60;
						this.localAI[0] -= 1f;
						if (this.localAI[0] < 0f)
						{
							this.localAI[0] = 0f;
						}
						if (this.ai[1] > 0f)
						{
							this.ai[1] -= 1f;
						}
						else
						{
							float num81 = this.position.X;
							float num82 = this.position.Y;
							float num83 = 100000f;
							float num84 = num83;
							int num85 = -1;
							for (int m = 0; m < 200; m++)
							{
								if (Main.npc[m].CanBeChasedBy(this, false))
								{
									float num86 = Main.npc[m].position.X + (float)(Main.npc[m].width / 2);
									float num87 = Main.npc[m].position.Y + (float)(Main.npc[m].height / 2);
									float num88 = Math.Abs(this.position.X + (float)(this.width / 2) - num86) + Math.Abs(this.position.Y + (float)(this.height / 2) - num87);
									if (num88 < num83)
									{
										if (num85 == -1 && num88 <= num84)
										{
											num84 = num88;
											num81 = num86;
											num82 = num87;
										}
										if (Collision.CanHit(this.position, this.width, this.height, Main.npc[m].position, Main.npc[m].width, Main.npc[m].height))
										{
											num83 = num88;
											num81 = num86;
											num82 = num87;
											num85 = m;
										}
									}
								}
							}
							if (this.type >= 390 && this.type <= 392 && !Collision.SolidCollision(this.position, this.width, this.height))
							{
								this.tileCollide = true;
							}
							if (num85 == -1 && num84 < num83)
							{
								num83 = num84;
							}
							else if (num85 >= 0)
							{
								flag7 = true;
								vector9 = new Vector2(num81, num82) - base.Center;
								if (this.type >= 390 && this.type <= 392)
								{
									if (Main.npc[num85].position.Y > this.position.Y + (float)this.height)
									{
										int num89 = (int)(base.Center.X / 16f);
										int num90 = (int)((this.position.Y + (float)this.height + 1f) / 16f);
										if (Main.tile[num89, num90] != null && Main.tile[num89, num90].active() && TileID.Sets.Platforms[(int)Main.tile[num89, num90].type])
										{
											this.tileCollide = false;
										}
									}
									Rectangle rectangle = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
									Rectangle value = new Rectangle((int)Main.npc[num85].position.X, (int)Main.npc[num85].position.Y, Main.npc[num85].width, Main.npc[num85].height);
									int num91 = 10;
									value.X -= num91;
									value.Y -= num91;
									value.Width += num91 * 2;
									value.Height += num91 * 2;
									if (rectangle.Intersects(value))
									{
										flag8 = true;
										Vector2 vector10 = Main.npc[num85].Center - base.Center;
										if (this.velocity.Y > 0f && vector10.Y < 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.5f;
										}
										if (this.velocity.Y < 0f && vector10.Y > 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.5f;
										}
										if (this.velocity.X > 0f && vector10.X < 0f)
										{
											this.velocity.X = this.velocity.X * 0.5f;
										}
										if (this.velocity.X < 0f && vector10.X > 0f)
										{
											this.velocity.X = this.velocity.X * 0.5f;
										}
										if (vector10.Length() > 14f)
										{
											vector10.Normalize();
											vector10 *= 14f;
										}
										this.rotation = (this.rotation * 5f + vector10.ToRotation() + 1.57079637f) / 6f;
										this.velocity = (this.velocity * 9f + vector10) / 10f;
										for (int n = 0; n < 1000; n++)
										{
											if (this.whoAmI != n && this.owner == Main.projectile[n].owner && Main.projectile[n].type >= 390 && Main.projectile[n].type <= 392 && (Main.projectile[n].Center - base.Center).Length() < 15f)
											{
												float num92 = 0.5f;
												if (base.Center.Y > Main.projectile[n].Center.Y)
												{
													Projectile expr_4BA2_cp_0 = Main.projectile[n];
													expr_4BA2_cp_0.velocity.Y = expr_4BA2_cp_0.velocity.Y - num92;
													this.velocity.Y = this.velocity.Y + num92;
												}
												else
												{
													Projectile expr_4BD3_cp_0 = Main.projectile[n];
													expr_4BD3_cp_0.velocity.Y = expr_4BD3_cp_0.velocity.Y + num92;
													this.velocity.Y = this.velocity.Y - num92;
												}
												if (base.Center.X > Main.projectile[n].Center.X)
												{
													this.velocity.X = this.velocity.X + num92;
													Projectile expr_4C35_cp_0 = Main.projectile[n];
													expr_4C35_cp_0.velocity.X = expr_4C35_cp_0.velocity.X - num92;
												}
												else
												{
													this.velocity.X = this.velocity.X - num92;
													Projectile expr_4C66_cp_0 = Main.projectile[n];
													expr_4C66_cp_0.velocity.Y = expr_4C66_cp_0.velocity.Y + num92;
												}
											}
										}
									}
								}
							}
							float num93 = 300f;
							if ((double)this.position.Y > Main.worldSurface * 16.0)
							{
								num93 = 150f;
							}
							if (this.type >= 390 && this.type <= 392)
							{
								num93 = 500f;
								if ((double)this.position.Y > Main.worldSurface * 16.0)
								{
									num93 = 250f;
								}
							}
							if (num83 < num93 + num79 && num85 == -1)
							{
								float num94 = num81 - (this.position.X + (float)(this.width / 2));
								if (num94 < -5f)
								{
									flag = true;
									flag2 = false;
								}
								else if (num94 > 5f)
								{
									flag2 = true;
									flag = false;
								}
							}
							bool flag9 = false;
							if (this.type >= 390 && this.type <= 392 && this.localAI[1] > 0f)
							{
								flag9 = true;
								this.localAI[1] -= 1f;
							}
							if (num85 >= 0 && num83 < 800f + num79)
							{
								this.friendly = true;
								this.localAI[0] = (float)num80;
								float num95 = num81 - (this.position.X + (float)(this.width / 2));
								if (num95 < -10f)
								{
									flag = true;
									flag2 = false;
								}
								else if (num95 > 10f)
								{
									flag2 = true;
									flag = false;
								}
								if (num82 < base.Center.Y - 100f && num95 > -50f && num95 < 50f && this.velocity.Y == 0f)
								{
									float num96 = Math.Abs(num82 - base.Center.Y);
									if (num96 < 120f)
									{
										this.velocity.Y = -10f;
									}
									else if (num96 < 210f)
									{
										this.velocity.Y = -13f;
									}
									else if (num96 < 270f)
									{
										this.velocity.Y = -15f;
									}
									else if (num96 < 310f)
									{
										this.velocity.Y = -17f;
									}
									else if (num96 < 380f)
									{
										this.velocity.Y = -18f;
									}
								}
								if (flag9)
								{
									this.friendly = false;
									if (this.velocity.X < 0f)
									{
										flag = true;
									}
									else if (this.velocity.X > 0f)
									{
										flag2 = true;
									}
								}
							}
							else
							{
								this.friendly = false;
							}
						}
					}
					if (this.ai[1] != 0f)
					{
						flag = false;
						flag2 = false;
					}
					else if (flag5 && this.localAI[0] == 0f)
					{
						this.direction = Main.player[this.owner].direction;
					}
					else if (this.type >= 390 && this.type <= 392)
					{
						int num97 = (int)(base.Center.X / 16f);
						int num98 = (int)(base.Center.Y / 16f);
						if (Main.tile[num97, num98] != null && Main.tile[num97, num98].wall > 0)
						{
							flag2 = (flag = false);
						}
					}
					if (this.type == 127)
					{
						if ((double)this.rotation > -0.1 && (double)this.rotation < 0.1)
						{
							this.rotation = 0f;
						}
						else if (this.rotation < 0f)
						{
							this.rotation += 0.1f;
						}
						else
						{
							this.rotation -= 0.1f;
						}
					}
					else if (this.type != 313 && !flag8)
					{
						this.rotation = 0f;
					}
					if (this.type < 390 || this.type > 392)
					{
						this.tileCollide = true;
					}
					float num99 = 0.08f;
					float num100 = 6.5f;
					if (this.type == 127)
					{
						num100 = 2f;
						num99 = 0.04f;
					}
					if (this.type == 112)
					{
						num100 = 6f;
						num99 = 0.06f;
					}
					if (this.type == 334)
					{
						num100 = 8f;
						num99 = 0.08f;
					}
					if (this.type == 268)
					{
						num100 = 8f;
						num99 = 0.4f;
					}
					if (this.type == 324)
					{
						num99 = 0.1f;
						num100 = 3f;
					}
					if (flag5 || this.type == 266 || (this.type >= 390 && this.type <= 392))
					{
						num100 = 6f;
						num99 = 0.2f;
						if (num100 < Math.Abs(Main.player[this.owner].velocity.X) + Math.Abs(Main.player[this.owner].velocity.Y))
						{
							num100 = Math.Abs(Main.player[this.owner].velocity.X) + Math.Abs(Main.player[this.owner].velocity.Y);
							num99 = 0.3f;
						}
					}
					if (this.type >= 390 && this.type <= 392)
					{
						num99 *= 2f;
					}
					if (flag)
					{
						if ((double)this.velocity.X > -3.5)
						{
							this.velocity.X = this.velocity.X - num99;
						}
						else
						{
							this.velocity.X = this.velocity.X - num99 * 0.25f;
						}
					}
					else if (flag2)
					{
						if ((double)this.velocity.X < 3.5)
						{
							this.velocity.X = this.velocity.X + num99;
						}
						else
						{
							this.velocity.X = this.velocity.X + num99 * 0.25f;
						}
					}
					else
					{
						this.velocity.X = this.velocity.X * 0.9f;
						if (this.velocity.X >= -num99 && this.velocity.X <= num99)
						{
							this.velocity.X = 0f;
						}
					}
					if (this.type == 208)
					{
						this.velocity.X = this.velocity.X * 0.95f;
						if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
						{
							this.velocity.X = 0f;
						}
						flag = false;
						flag2 = false;
					}
					if (flag || flag2)
					{
						int num101 = (int)(this.position.X + (float)(this.width / 2)) / 16;
						int j2 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
						if (this.type == 236)
						{
							num101 += this.direction;
						}
						if (flag)
						{
							num101--;
						}
						if (flag2)
						{
							num101++;
						}
						num101 += (int)this.velocity.X;
						if (WorldGen.SolidTile(num101, j2))
						{
							flag4 = true;
						}
					}
					if (Main.player[this.owner].position.Y + (float)Main.player[this.owner].height - 8f > this.position.Y + (float)this.height)
					{
						flag3 = true;
					}
					if (this.type == 268 && this.frameCounter < 10)
					{
						flag4 = false;
					}
					Collision.StepUp(ref this.position, ref this.velocity, this.width, this.height, ref this.stepSpeed, ref this.gfxOffY, 1, false, 0);
					if (this.velocity.Y == 0f || this.type == 200)
					{
						if (!flag3 && (this.velocity.X < 0f || this.velocity.X > 0f))
						{
							int num102 = (int)(this.position.X + (float)(this.width / 2)) / 16;
							int j3 = (int)(this.position.Y + (float)(this.height / 2)) / 16 + 1;
							if (flag)
							{
								num102--;
							}
							if (flag2)
							{
								num102++;
							}
							WorldGen.SolidTile(num102, j3);
						}
						if (flag4)
						{
							int num103 = (int)(this.position.X + (float)(this.width / 2)) / 16;
							int num104 = (int)(this.position.Y + (float)this.height) / 16 + 1;
							if (WorldGen.SolidTile(num103, num104) || Main.tile[num103, num104].halfBrick() || Main.tile[num103, num104].slope() > 0 || this.type == 200)
							{
								if (this.type == 200)
								{
									this.velocity.Y = -3.1f;
								}
								else
								{
									try
									{
										num103 = (int)(this.position.X + (float)(this.width / 2)) / 16;
										num104 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
										if (flag)
										{
											num103--;
										}
										if (flag2)
										{
											num103++;
										}
										num103 += (int)this.velocity.X;
										if (!WorldGen.SolidTile(num103, num104 - 1) && !WorldGen.SolidTile(num103, num104 - 2))
										{
											this.velocity.Y = -5.1f;
										}
										else if (!WorldGen.SolidTile(num103, num104 - 2))
										{
											this.velocity.Y = -7.1f;
										}
										else if (WorldGen.SolidTile(num103, num104 - 5))
										{
											this.velocity.Y = -11.1f;
										}
										else if (WorldGen.SolidTile(num103, num104 - 4))
										{
											this.velocity.Y = -10.1f;
										}
										else
										{
											this.velocity.Y = -9.1f;
										}
									}
									catch
									{
										this.velocity.Y = -9.1f;
									}
								}
								if (this.type == 127)
								{
									this.ai[0] = 1f;
								}
							}
						}
						else if (this.type == 266 && (flag || flag2))
						{
							this.velocity.Y = this.velocity.Y - 6f;
						}
					}
					if (this.velocity.X > num100)
					{
						this.velocity.X = num100;
					}
					if (this.velocity.X < -num100)
					{
						this.velocity.X = -num100;
					}
					if (this.velocity.X < 0f)
					{
						this.direction = -1;
					}
					if (this.velocity.X > 0f)
					{
						this.direction = 1;
					}
					if (this.velocity.X > num99 && flag2)
					{
						this.direction = 1;
					}
					if (this.velocity.X < -num99 && flag)
					{
						this.direction = -1;
					}
					if (this.type != 313)
					{
						if (this.direction == -1)
						{
							this.spriteDirection = 1;
						}
						if (this.direction == 1)
						{
							this.spriteDirection = -1;
						}
					}
					if (this.type == 398)
					{
						this.spriteDirection = this.direction;
					}
					if (flag5)
					{
						if (this.ai[1] > 0f)
						{
							if (this.localAI[1] == 0f)
							{
								this.localAI[1] = 1f;
								this.frame = 1;
							}
							if (this.frame != 0)
							{
								this.frameCounter++;
								if (this.frameCounter > 4)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame == 4)
								{
									this.frame = 0;
								}
							}
						}
						else if (this.velocity.Y == 0f)
						{
							this.localAI[1] = 0f;
							if (this.velocity.X == 0f)
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
							else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
							{
								this.frameCounter += (int)Math.Abs(this.velocity.X);
								this.frameCounter++;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame < 5)
								{
									this.frame = 5;
								}
								if (this.frame >= 11)
								{
									this.frame = 5;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else if (this.velocity.Y < 0f)
						{
							this.frameCounter = 0;
							this.frame = 4;
						}
						else if (this.velocity.Y > 0f)
						{
							this.frameCounter = 0;
							this.frame = 4;
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
						}
						float arg_5995_0 = this.velocity.Y;
						return;
					}
					if (this.type == 268)
					{
						if (this.velocity.Y == 0f)
						{
							if (this.frame > 5)
							{
								this.frameCounter = 0;
							}
							if (this.velocity.X == 0f)
							{
								int num105 = 3;
								this.frameCounter++;
								if (this.frameCounter < num105)
								{
									this.frame = 0;
								}
								else if (this.frameCounter < num105 * 2)
								{
									this.frame = 1;
								}
								else if (this.frameCounter < num105 * 3)
								{
									this.frame = 2;
								}
								else if (this.frameCounter < num105 * 4)
								{
									this.frame = 3;
								}
								else
								{
									this.frameCounter = num105 * 4;
								}
							}
							else
							{
								this.velocity.X = this.velocity.X * 0.8f;
								this.frameCounter++;
								int num106 = 3;
								if (this.frameCounter < num106)
								{
									this.frame = 0;
								}
								else if (this.frameCounter < num106 * 2)
								{
									this.frame = 1;
								}
								else if (this.frameCounter < num106 * 3)
								{
									this.frame = 2;
								}
								else if (this.frameCounter < num106 * 4)
								{
									this.frame = 3;
								}
								else if (flag || flag2)
								{
									this.velocity.X = this.velocity.X * 2f;
									this.frame = 4;
									this.velocity.Y = -6.1f;
									this.frameCounter = 0;
									for (int num107 = 0; num107 < 4; num107++)
									{
										int num108 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height - 2f), this.width, 4, 5, 0f, 0f, 0, default(Color), 1f);
										Main.dust[num108].velocity += this.velocity;
										Main.dust[num108].velocity *= 0.4f;
									}
								}
								else
								{
									this.frameCounter = num106 * 4;
								}
							}
						}
						else if (this.velocity.Y < 0f)
						{
							this.frameCounter = 0;
							this.frame = 5;
						}
						else
						{
							this.frame = 4;
							this.frameCounter = 3;
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
							return;
						}
					}
					else if (this.type == 269)
					{
						if (this.velocity.Y >= 0f && (double)this.velocity.Y <= 0.8)
						{
							if (this.velocity.X == 0f)
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
							else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
							{
								int num109 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height - 2f), this.width, 6, 76, 0f, 0f, 0, default(Color), 1f);
								Main.dust[num109].noGravity = true;
								Main.dust[num109].velocity *= 0.3f;
								Main.dust[num109].noLight = true;
								this.frameCounter += (int)Math.Abs(this.velocity.X);
								this.frameCounter++;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame > 3)
								{
									this.frame = 0;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else
						{
							this.frameCounter = 0;
							this.frame = 2;
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
							return;
						}
					}
					else if (this.type == 313)
					{
						int num110 = (int)(base.Center.X / 16f);
						int num111 = (int)(base.Center.Y / 16f);
						if (Main.tile[num110, num111] != null && Main.tile[num110, num111].wall > 0)
						{
							this.position.Y = this.position.Y + (float)this.height;
							this.height = 34;
							this.position.Y = this.position.Y - (float)this.height;
							this.position.X = this.position.X + (float)(this.width / 2);
							this.width = 34;
							this.position.X = this.position.X - (float)(this.width / 2);
							float num112 = 4f;
							Vector2 vector11 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num113 = Main.player[this.owner].Center.X - vector11.X;
							float num114 = Main.player[this.owner].Center.Y - vector11.Y;
							float num115 = (float)Math.Sqrt((double)(num113 * num113 + num114 * num114));
							float num116 = num112 / num115;
							num113 *= num116;
							num114 *= num116;
							if (num115 < 120f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
								this.velocity.Y = this.velocity.Y * 0.9f;
								if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < 0.1)
								{
									this.velocity *= 0f;
								}
							}
							else
							{
								this.velocity.X = (this.velocity.X * 9f + num113) / 10f;
								this.velocity.Y = (this.velocity.Y * 9f + num114) / 10f;
							}
							if (num115 >= 120f)
							{
								this.spriteDirection = this.direction;
								this.rotation = (float)Math.Atan2((double)(this.velocity.Y * (float)(-(float)this.direction)), (double)(this.velocity.X * (float)(-(float)this.direction)));
							}
							this.frameCounter += (int)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y));
							if (this.frameCounter > 6)
							{
								this.frame++;
								this.frameCounter = 0;
							}
							if (this.frame > 10)
							{
								this.frame = 5;
							}
							if (this.frame < 5)
							{
								this.frame = 10;
								return;
							}
						}
						else
						{
							this.rotation = 0f;
							if (this.direction == -1)
							{
								this.spriteDirection = 1;
							}
							if (this.direction == 1)
							{
								this.spriteDirection = -1;
							}
							this.position.Y = this.position.Y + (float)this.height;
							this.height = 30;
							this.position.Y = this.position.Y - (float)this.height;
							this.position.X = this.position.X + (float)(this.width / 2);
							this.width = 30;
							this.position.X = this.position.X - (float)(this.width / 2);
							if (this.velocity.Y >= 0f && (double)this.velocity.Y <= 0.8)
							{
								if (this.velocity.X == 0f)
								{
									this.frame = 0;
									this.frameCounter = 0;
								}
								else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
								{
									this.frameCounter += (int)Math.Abs(this.velocity.X);
									this.frameCounter++;
									if (this.frameCounter > 6)
									{
										this.frame++;
										this.frameCounter = 0;
									}
									if (this.frame > 3)
									{
										this.frame = 0;
									}
								}
								else
								{
									this.frame = 0;
									this.frameCounter = 0;
								}
							}
							else
							{
								this.frameCounter = 0;
								this.frame = 4;
							}
							this.velocity.Y = this.velocity.Y + 0.4f;
							if (this.velocity.Y > 10f)
							{
								this.velocity.Y = 10f;
								return;
							}
						}
					}
					else if (this.type >= 390 && this.type <= 392)
					{
						int num117 = (int)(base.Center.X / 16f);
						int num118 = (int)(base.Center.Y / 16f);
						if (Main.tile[num117, num118] != null && Main.tile[num117, num118].wall > 0)
						{
							this.position.Y = this.position.Y + (float)this.height;
							this.height = 34;
							this.position.Y = this.position.Y - (float)this.height;
							this.position.X = this.position.X + (float)(this.width / 2);
							this.width = 34;
							this.position.X = this.position.X - (float)(this.width / 2);
							float scaleFactor = 9f;
							float num119 = (float)(40 * (this.minionPos + 1));
							Vector2 vector12 = Main.player[this.owner].Center - base.Center;
							if (flag7)
							{
								vector12 = vector9;
								num119 = 10f;
							}
							else if (!Collision.CanHitLine(base.Center, 1, 1, Main.player[this.owner].Center, 1, 1))
							{
								this.ai[0] = 1f;
							}
							if (vector12.Length() < num119)
							{
								this.velocity *= 0.9f;
								if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < 0.1)
								{
									this.velocity *= 0f;
								}
							}
							else if (vector12.Length() < 800f || !flag7)
							{
								this.velocity = (this.velocity * 9f + Vector2.Normalize(vector12) * scaleFactor) / 10f;
							}
							if (vector12.Length() >= num119)
							{
								this.spriteDirection = this.direction;
								this.rotation = this.velocity.ToRotation() + 1.57079637f;
							}
							else
							{
								this.rotation = vector12.ToRotation() + 1.57079637f;
							}
							this.frameCounter += (int)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y));
							if (this.frameCounter > 5)
							{
								this.frame++;
								this.frameCounter = 0;
							}
							if (this.frame > 7)
							{
								this.frame = 4;
							}
							if (this.frame < 4)
							{
								this.frame = 7;
								return;
							}
						}
						else
						{
							if (!flag8)
							{
								this.rotation = 0f;
							}
							if (this.direction == -1)
							{
								this.spriteDirection = 1;
							}
							if (this.direction == 1)
							{
								this.spriteDirection = -1;
							}
							this.position.Y = this.position.Y + (float)this.height;
							this.height = 30;
							this.position.Y = this.position.Y - (float)this.height;
							this.position.X = this.position.X + (float)(this.width / 2);
							this.width = 30;
							this.position.X = this.position.X - (float)(this.width / 2);
							if (!flag7 && !Collision.CanHitLine(base.Center, 1, 1, Main.player[this.owner].Center, 1, 1))
							{
								this.ai[0] = 1f;
							}
							if (!flag8 && this.frame >= 4 && this.frame <= 7)
							{
								Vector2 vector13 = Main.player[this.owner].Center - base.Center;
								if (flag7)
								{
									vector13 = vector9;
								}
								float num120 = -vector13.Y;
								if (vector13.Y <= 0f)
								{
									if (num120 < 120f)
									{
										this.velocity.Y = -10f;
									}
									else if (num120 < 210f)
									{
										this.velocity.Y = -13f;
									}
									else if (num120 < 270f)
									{
										this.velocity.Y = -15f;
									}
									else if (num120 < 310f)
									{
										this.velocity.Y = -17f;
									}
									else if (num120 < 380f)
									{
										this.velocity.Y = -18f;
									}
								}
							}
							if (flag8)
							{
								this.frameCounter++;
								if (this.frameCounter > 3)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame >= 8)
								{
									this.frame = 4;
								}
								if (this.frame <= 3)
								{
									this.frame = 7;
								}
							}
							else if (this.velocity.Y >= 0f && (double)this.velocity.Y <= 0.8)
							{
								if (this.velocity.X == 0f)
								{
									this.frame = 0;
									this.frameCounter = 0;
								}
								else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
								{
									this.frameCounter += (int)Math.Abs(this.velocity.X);
									this.frameCounter++;
									if (this.frameCounter > 5)
									{
										this.frame++;
										this.frameCounter = 0;
									}
									if (this.frame > 2)
									{
										this.frame = 0;
									}
								}
								else
								{
									this.frame = 0;
									this.frameCounter = 0;
								}
							}
							else
							{
								this.frameCounter = 0;
								this.frame = 3;
							}
							this.velocity.Y = this.velocity.Y + 0.4f;
							if (this.velocity.Y > 10f)
							{
								this.velocity.Y = 10f;
								return;
							}
						}
					}
					else if (this.type == 314)
					{
						if (this.velocity.Y >= 0f && (double)this.velocity.Y <= 0.8)
						{
							if (this.velocity.X == 0f)
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
							else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
							{
								this.frameCounter += (int)Math.Abs(this.velocity.X);
								this.frameCounter++;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame > 6)
								{
									this.frame = 1;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else
						{
							this.frameCounter = 0;
							this.frame = 7;
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
							return;
						}
					}
					else if (this.type == 319)
					{
						if (this.velocity.Y >= 0f && (double)this.velocity.Y <= 0.8)
						{
							if (this.velocity.X == 0f)
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
							else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
							{
								this.frameCounter += (int)Math.Abs(this.velocity.X);
								this.frameCounter++;
								if (this.frameCounter > 8)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame > 5)
								{
									this.frame = 2;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else
						{
							this.frameCounter = 0;
							this.frame = 1;
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
							return;
						}
					}
					else if (this.type == 236)
					{
						if (this.velocity.Y >= 0f && (double)this.velocity.Y <= 0.8)
						{
							if (this.velocity.X == 0f)
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
							else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
							{
								if (this.frame < 2)
								{
									this.frame = 2;
								}
								this.frameCounter += (int)Math.Abs(this.velocity.X);
								this.frameCounter++;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame > 8)
								{
									this.frame = 2;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else
						{
							this.frameCounter = 0;
							this.frame = 1;
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
							return;
						}
					}
					else if (this.type == 499)
					{
						if (this.velocity.Y >= 0f && (double)this.velocity.Y <= 0.8)
						{
							if (this.velocity.X == 0f)
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
							else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
							{
								if (this.frame < 2)
								{
									this.frame = 2;
								}
								this.frameCounter += (int)Math.Abs(this.velocity.X);
								this.frameCounter++;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame >= 8)
								{
									this.frame = 2;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else
						{
							this.frameCounter = 0;
							this.frame = 1;
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
							return;
						}
					}
					else if (this.type == 266)
					{
						if (this.velocity.Y >= 0f && (double)this.velocity.Y <= 0.8)
						{
							if (this.velocity.X == 0f)
							{
								this.frameCounter++;
							}
							else
							{
								this.frameCounter += 3;
							}
						}
						else
						{
							this.frameCounter += 5;
						}
						if (this.frameCounter >= 20)
						{
							this.frameCounter -= 20;
							this.frame++;
						}
						if (this.frame > 1)
						{
							this.frame = 0;
						}
						if (this.wet && Main.player[this.owner].position.Y + (float)Main.player[this.owner].height < this.position.Y + (float)this.height && this.localAI[0] == 0f)
						{
							if (this.velocity.Y > -4f)
							{
								this.velocity.Y = this.velocity.Y - 0.2f;
							}
							if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.95f;
							}
						}
						else
						{
							this.velocity.Y = this.velocity.Y + 0.4f;
						}
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
							return;
						}
					}
					else if (this.type == 334)
					{
						if (this.velocity.Y == 0f)
						{
							if (this.velocity.X == 0f)
							{
								if (this.frame > 0)
								{
									this.frameCounter += 2;
									if (this.frameCounter > 6)
									{
										this.frame++;
										this.frameCounter = 0;
									}
									if (this.frame >= 7)
									{
										this.frame = 0;
									}
								}
								else
								{
									this.frame = 0;
									this.frameCounter = 0;
								}
							}
							else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
							{
								this.frameCounter += (int)Math.Abs((double)this.velocity.X * 0.75);
								this.frameCounter++;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame >= 7 || this.frame < 1)
								{
									this.frame = 1;
								}
							}
							else if (this.frame > 0)
							{
								this.frameCounter += 2;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame >= 7)
								{
									this.frame = 0;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else if (this.velocity.Y < 0f)
						{
							this.frameCounter = 0;
							this.frame = 2;
						}
						else if (this.velocity.Y > 0f)
						{
							this.frameCounter = 0;
							this.frame = 4;
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
							return;
						}
					}
					else if (this.type == 353)
					{
						if (this.velocity.Y == 0f)
						{
							if (this.velocity.X == 0f)
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
							else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
							{
								this.frameCounter += (int)Math.Abs(this.velocity.X);
								this.frameCounter++;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame > 9)
								{
									this.frame = 2;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else if (this.velocity.Y < 0f)
						{
							this.frameCounter = 0;
							this.frame = 1;
						}
						else if (this.velocity.Y > 0f)
						{
							this.frameCounter = 0;
							this.frame = 1;
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
							return;
						}
					}
					else if (this.type == 111)
					{
						if (this.velocity.Y == 0f)
						{
							if (this.velocity.X == 0f)
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
							else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
							{
								this.frameCounter += (int)Math.Abs(this.velocity.X);
								this.frameCounter++;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame >= 7)
								{
									this.frame = 0;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else if (this.velocity.Y < 0f)
						{
							this.frameCounter = 0;
							this.frame = 4;
						}
						else if (this.velocity.Y > 0f)
						{
							this.frameCounter = 0;
							this.frame = 6;
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
							return;
						}
					}
					else if (this.type == 112)
					{
						if (this.velocity.Y == 0f)
						{
							if (this.velocity.X == 0f)
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
							else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
							{
								this.frameCounter += (int)Math.Abs(this.velocity.X);
								this.frameCounter++;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame >= 3)
								{
									this.frame = 0;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else if (this.velocity.Y < 0f)
						{
							this.frameCounter = 0;
							this.frame = 2;
						}
						else if (this.velocity.Y > 0f)
						{
							this.frameCounter = 0;
							this.frame = 2;
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
							return;
						}
					}
					else if (this.type == 127)
					{
						if (this.velocity.Y == 0f)
						{
							if (this.velocity.X == 0f)
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
							else if ((double)this.velocity.X < -0.1 || (double)this.velocity.X > 0.1)
							{
								this.frameCounter += (int)Math.Abs(this.velocity.X);
								this.frameCounter++;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame > 5)
								{
									this.frame = 0;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else
						{
							this.frame = 0;
							this.frameCounter = 0;
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
							return;
						}
					}
					else if (this.type == 200)
					{
						if (this.velocity.Y == 0f)
						{
							if (this.velocity.X == 0f)
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
							else if ((double)this.velocity.X < -0.1 || (double)this.velocity.X > 0.1)
							{
								this.frameCounter += (int)Math.Abs(this.velocity.X);
								this.frameCounter++;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame > 5)
								{
									this.frame = 0;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else
						{
							this.rotation = this.velocity.X * 0.1f;
							this.frameCounter++;
							if (this.velocity.Y < 0f)
							{
								this.frameCounter += 2;
							}
							if (this.frameCounter > 6)
							{
								this.frame++;
								this.frameCounter = 0;
							}
							if (this.frame > 9)
							{
								this.frame = 6;
							}
							if (this.frame < 6)
							{
								this.frame = 6;
							}
						}
						this.velocity.Y = this.velocity.Y + 0.1f;
						if (this.velocity.Y > 4f)
						{
							this.velocity.Y = 4f;
							return;
						}
					}
					else if (this.type == 208)
					{
						if (this.velocity.Y == 0f && this.velocity.X == 0f)
						{
							if (Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) < this.position.X + (float)(this.width / 2))
							{
								this.direction = -1;
							}
							else if (Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) > this.position.X + (float)(this.width / 2))
							{
								this.direction = 1;
							}
							this.rotation = 0f;
							this.frame = 0;
						}
						else
						{
							this.rotation = this.velocity.X * 0.075f;
							this.frameCounter++;
							if (this.frameCounter > 6)
							{
								this.frame++;
								this.frameCounter = 0;
							}
							if (this.frame > 4)
							{
								this.frame = 1;
							}
							if (this.frame < 1)
							{
								this.frame = 1;
							}
						}
						this.velocity.Y = this.velocity.Y + 0.1f;
						if (this.velocity.Y > 4f)
						{
							this.velocity.Y = 4f;
							return;
						}
					}
					else if (this.type == 209)
					{
						if (this.alpha > 0)
						{
							this.alpha -= 5;
							if (this.alpha < 0)
							{
								this.alpha = 0;
							}
						}
						if (this.velocity.Y == 0f)
						{
							if (this.velocity.X == 0f)
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
							else if ((double)this.velocity.X < -0.1 || (double)this.velocity.X > 0.1)
							{
								this.frameCounter += (int)Math.Abs(this.velocity.X);
								this.frameCounter++;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame > 11)
								{
									this.frame = 2;
								}
								if (this.frame < 2)
								{
									this.frame = 2;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else
						{
							this.frame = 1;
							this.frameCounter = 0;
							this.rotation = 0f;
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
							return;
						}
					}
					else if (this.type == 324)
					{
						if (this.velocity.Y == 0f)
						{
							if ((double)this.velocity.X < -0.1 || (double)this.velocity.X > 0.1)
							{
								this.frameCounter += (int)Math.Abs(this.velocity.X);
								this.frameCounter++;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame > 5)
								{
									this.frame = 2;
								}
								if (this.frame < 2)
								{
									this.frame = 2;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else
						{
							this.frameCounter = 0;
							this.frame = 1;
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 14f)
						{
							this.velocity.Y = 14f;
							return;
						}
					}
					else if (this.type == 210)
					{
						if (this.velocity.Y == 0f)
						{
							if ((double)this.velocity.X < -0.1 || (double)this.velocity.X > 0.1)
							{
								this.frameCounter += (int)Math.Abs(this.velocity.X);
								this.frameCounter++;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame > 6)
								{
									this.frame = 0;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else
						{
							this.rotation = this.velocity.X * 0.05f;
							this.frameCounter++;
							if (this.frameCounter > 6)
							{
								this.frame++;
								this.frameCounter = 0;
							}
							if (this.frame > 11)
							{
								this.frame = 7;
							}
							if (this.frame < 7)
							{
								this.frame = 7;
							}
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
							return;
						}
					}
					else if (this.type == 398)
					{
						if (this.velocity.Y == 0f)
						{
							if (this.velocity.X == 0f)
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
							else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
							{
								this.frameCounter += (int)Math.Abs(this.velocity.X);
								this.frameCounter++;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame >= 5)
								{
									this.frame = 0;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else if (this.velocity.Y != 0f)
						{
							this.frameCounter = 0;
							this.frame = 5;
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
						}
					}
				}
			}
		}

		private void AI_062()
		{
			if (this.type == 373)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].hornetMinion = false;
				}
				if (Main.player[this.owner].hornetMinion)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 375)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].impMinion = false;
				}
				if (Main.player[this.owner].impMinion)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 407)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].sharknadoMinion = false;
				}
				if (Main.player[this.owner].sharknadoMinion)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 423)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].UFOMinion = false;
				}
				if (Main.player[this.owner].UFOMinion)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 613)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].stardustMinion = false;
				}
				if (Main.player[this.owner].stardustMinion)
				{
					this.timeLeft = 2;
				}
				Lighting.AddLight(base.Center, 0.2f, 0.6f, 0.7f);
				if (this.localAI[1] > 0f)
				{
					this.localAI[1] -= 1f;
				}
			}
			if (this.type == 423)
			{
				if (this.ai[0] == 2f)
				{
					this.ai[1] -= 1f;
					this.tileCollide = false;
					if (this.ai[1] > 3f)
					{
						int num = Dust.NewDust(base.Center, 0, 0, 220 + Main.rand.Next(2), this.velocity.X, this.velocity.Y, 100, default(Color), 1f);
						Main.dust[num].scale = 0.5f + (float)Main.rand.NextDouble() * 0.3f;
						Main.dust[num].velocity /= 2.5f;
						Main.dust[num].noGravity = true;
						Main.dust[num].noLight = true;
						Main.dust[num].frame.Y = 80;
					}
					if (this.ai[1] != 0f)
					{
						return;
					}
					this.ai[1] = 30f;
					this.ai[0] = 0f;
					this.velocity /= 5f;
					this.velocity.Y = 0f;
					this.extraUpdates = 0;
					this.numUpdates = 0;
					this.netUpdate = true;
					this.extraUpdates = 0;
					this.numUpdates = 0;
				}
				if (this.extraUpdates > 1)
				{
					this.extraUpdates = 0;
				}
				if (this.numUpdates > 1)
				{
					this.numUpdates = 0;
				}
			}
			if (this.type == 613)
			{
				if (this.ai[0] == 2f)
				{
					this.ai[1] -= 1f;
					this.tileCollide = false;
					if (this.ai[1] > 3f)
					{
						if (this.numUpdates < 20)
						{
							for (int i = 0; i < 3; i++)
							{
								Dust dust = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
								dust.noGravity = true;
								dust.position = base.Center;
								dust.velocity *= 3f;
								dust.velocity += this.velocity * 3f;
								dust.fadeIn = 1f;
							}
						}
						float num2 = 2f - (float)this.numUpdates / 30f;
						if (this.scale > 0f)
						{
							float num3 = 2f;
							int num4 = 0;
							while ((float)num4 < num3)
							{
								Dust dust2 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
								dust2.noGravity = true;
								dust2.position = base.Center + Vector2.UnitY.RotatedBy((double)((float)this.numUpdates * 0.104719758f + (float)this.whoAmI * 0.7853982f + 1.57079637f), default(Vector2)) * (float)(this.height / 2) - this.velocity * ((float)num4 / num3);
								dust2.velocity = this.velocity / 3f;
								dust2.fadeIn = num2 / 2f;
								dust2.scale = num2;
								num4++;
							}
						}
					}
					if (this.ai[1] != 0f)
					{
						return;
					}
					this.ai[1] = 30f;
					this.ai[0] = 0f;
					this.velocity /= 5f;
					this.velocity.Y = 0f;
					this.extraUpdates = 0;
					this.numUpdates = 0;
					this.netUpdate = true;
					float num5 = 15f;
					int num6 = 0;
					while ((float)num6 < num5)
					{
						Dust dust3 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
						dust3.noGravity = true;
						dust3.position = base.Center - this.velocity * 5f;
						dust3.velocity *= 3f;
						dust3.velocity += this.velocity * 3f;
						dust3.fadeIn = 1f;
						if (Main.rand.Next(3) != 0)
						{
							dust3.fadeIn = 2f;
							dust3.scale = 2f;
							dust3.velocity /= 8f;
						}
						num6++;
					}
					int num7 = 0;
					while ((float)num7 < num5)
					{
						Dust dust4 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
						dust4.noGravity = true;
						dust4.position = base.Center;
						dust4.velocity *= 3f;
						dust4.velocity += this.velocity * 3f;
						dust4.fadeIn = 1f;
						if (Main.rand.Next(3) != 0)
						{
							dust4.fadeIn = 2f;
							dust4.scale = 2f;
							dust4.velocity /= 8f;
						}
						num7++;
					}
					this.extraUpdates = 0;
					this.numUpdates = 0;
				}
				if (this.extraUpdates > 1)
				{
					this.extraUpdates = 0;
				}
				if (this.numUpdates > 1)
				{
					this.numUpdates = 0;
				}
			}
			if (this.type == 423 && this.localAI[0] > 0f)
			{
				this.localAI[0] -= 1f;
			}
			if (this.type == 613 && this.localAI[0] > 0f)
			{
				this.localAI[0] -= 1f;
			}
			float num8 = 0.05f;
			float num9 = (float)this.width;
			if (this.type == 407)
			{
				num8 = 0.1f;
				num9 *= 2f;
			}
			for (int j = 0; j < 1000; j++)
			{
				if (j != this.whoAmI && Main.projectile[j].active && Main.projectile[j].owner == this.owner && Main.projectile[j].type == this.type && Math.Abs(this.position.X - Main.projectile[j].position.X) + Math.Abs(this.position.Y - Main.projectile[j].position.Y) < num9)
				{
					if (this.position.X < Main.projectile[j].position.X)
					{
						this.velocity.X = this.velocity.X - num8;
					}
					else
					{
						this.velocity.X = this.velocity.X + num8;
					}
					if (this.position.Y < Main.projectile[j].position.Y)
					{
						this.velocity.Y = this.velocity.Y - num8;
					}
					else
					{
						this.velocity.Y = this.velocity.Y + num8;
					}
				}
			}
			Vector2 vector = this.position;
			float num10 = 400f;
			if (this.type == 423)
			{
				num10 = 300f;
			}
			if (this.type == 613)
			{
				num10 = 300f;
			}
			bool flag = false;
			int num11 = -1;
			this.tileCollide = true;
			if (this.type == 407)
			{
				this.tileCollide = false;
				if (Collision.SolidCollision(this.position, this.width, this.height))
				{
					this.alpha += 20;
					if (this.alpha > 150)
					{
						this.alpha = 150;
					}
				}
				else
				{
					this.alpha -= 50;
					if (this.alpha < 60)
					{
						this.alpha = 60;
					}
				}
			}
			if (this.type == 407 || this.type == 613 || this.type == 423)
			{
				Vector2 center = Main.player[this.owner].Center;
				Vector2 value = new Vector2(0.5f);
				if (this.type == 423)
				{
					value.Y = 0f;
				}
				for (int k = 0; k < 200; k++)
				{
					NPC nPC = Main.npc[k];
					if (nPC.CanBeChasedBy(this, false))
					{
						Vector2 vector2 = nPC.position + nPC.Size * value;
						float num12 = Vector2.Distance(vector2, center);
						if (((Vector2.Distance(center, vector) > num12 && num12 < num10) || !flag) && Collision.CanHitLine(this.position, this.width, this.height, nPC.position, nPC.width, nPC.height))
						{
							num10 = num12;
							vector = vector2;
							flag = true;
							num11 = k;
						}
					}
				}
			}
			else
			{
				for (int l = 0; l < 200; l++)
				{
					NPC nPC2 = Main.npc[l];
					if (nPC2.CanBeChasedBy(this, false))
					{
						float num13 = Vector2.Distance(nPC2.Center, base.Center);
						if (((Vector2.Distance(base.Center, vector) > num13 && num13 < num10) || !flag) && Collision.CanHitLine(this.position, this.width, this.height, nPC2.position, nPC2.width, nPC2.height))
						{
							num10 = num13;
							vector = nPC2.Center;
							flag = true;
							num11 = l;
						}
					}
				}
			}
			int num14 = 500;
			if (flag)
			{
				num14 = 1000;
			}
			if (flag && this.type == 423)
			{
				num14 = 1200;
			}
			if (flag && this.type == 613)
			{
				num14 = 1350;
			}
			Player player = Main.player[this.owner];
			float num15 = Vector2.Distance(player.Center, base.Center);
			if (num15 > (float)num14)
			{
				this.ai[0] = 1f;
				this.netUpdate = true;
			}
			if (this.ai[0] == 1f)
			{
				this.tileCollide = false;
			}
			if (flag && this.ai[0] == 0f)
			{
				Vector2 vector3 = vector - base.Center;
				float num16 = vector3.Length();
				vector3.Normalize();
				if (this.type == 423)
				{
					vector3 = vector - Vector2.UnitY * 80f;
					int num17 = (int)vector3.Y / 16;
					if (num17 < 0)
					{
						num17 = 0;
					}
					Tile tile = Main.tile[(int)vector3.X / 16, num17];
					if (tile != null && tile.active() && Main.tileSolid[(int)tile.type] && !Main.tileSolidTop[(int)tile.type])
					{
						vector3 += Vector2.UnitY * 16f;
						tile = Main.tile[(int)vector3.X / 16, (int)vector3.Y / 16];
						if (tile != null && tile.active() && Main.tileSolid[(int)tile.type] && !Main.tileSolidTop[(int)tile.type])
						{
							vector3 += Vector2.UnitY * 16f;
						}
					}
					vector3 -= base.Center;
					num16 = vector3.Length();
					vector3.Normalize();
					if (num16 > 300f && num16 <= 800f && this.localAI[0] == 0f)
					{
						this.ai[0] = 2f;
						this.ai[1] = (float)((int)(num16 / 10f));
						this.extraUpdates = (int)this.ai[1];
						this.velocity = vector3 * 10f;
						this.localAI[0] = 60f;
						return;
					}
				}
				if (this.type == 613)
				{
					vector3 = vector;
					Vector2 vector4 = base.Center - vector3;
					if (vector4 == Vector2.Zero)
					{
						vector4 = -Vector2.UnitY;
					}
					vector4.Normalize();
					vector3 += vector4 * 60f;
					int num18 = (int)vector3.Y / 16;
					if (num18 < 0)
					{
						num18 = 0;
					}
					Tile tile2 = Main.tile[(int)vector3.X / 16, num18];
					if (tile2 != null && tile2.active() && Main.tileSolid[(int)tile2.type] && !Main.tileSolidTop[(int)tile2.type])
					{
						vector3 += Vector2.UnitY * 16f;
						tile2 = Main.tile[(int)vector3.X / 16, (int)vector3.Y / 16];
						if (tile2 != null && tile2.active() && Main.tileSolid[(int)tile2.type] && !Main.tileSolidTop[(int)tile2.type])
						{
							vector3 += Vector2.UnitY * 16f;
						}
					}
					vector3 -= base.Center;
					num16 = vector3.Length();
					vector3.Normalize();
					if (num16 > 400f && num16 <= 800f && this.localAI[0] == 0f)
					{
						this.ai[0] = 2f;
						this.ai[1] = (float)((int)(num16 / 10f));
						this.extraUpdates = (int)this.ai[1];
						this.velocity = vector3 * 10f;
						this.localAI[0] = 60f;
						return;
					}
				}
				if (this.type == 407)
				{
					if (num16 > 400f)
					{
						float scaleFactor = 2f;
						vector3 *= scaleFactor;
						this.velocity = (this.velocity * 20f + vector3) / 21f;
					}
					else
					{
						this.velocity *= 0.96f;
					}
				}
				if (num16 > 200f)
				{
					float scaleFactor2 = 6f;
					vector3 *= scaleFactor2;
					this.velocity.X = (this.velocity.X * 40f + vector3.X) / 41f;
					this.velocity.Y = (this.velocity.Y * 40f + vector3.Y) / 41f;
				}
				else if (this.type == 423 || this.type == 613)
				{
					if (num16 > 70f && num16 < 130f)
					{
						float scaleFactor3 = 7f;
						if (num16 < 100f)
						{
							scaleFactor3 = -3f;
						}
						vector3 *= scaleFactor3;
						this.velocity = (this.velocity * 20f + vector3) / 21f;
						if (Math.Abs(vector3.X) > Math.Abs(vector3.Y))
						{
							this.velocity.X = (this.velocity.X * 10f + vector3.X) / 11f;
						}
					}
					else
					{
						this.velocity *= 0.97f;
					}
				}
				else if (this.type == 375)
				{
					if (num16 < 150f)
					{
						float num19 = 4f;
						vector3 *= -num19;
						this.velocity.X = (this.velocity.X * 40f + vector3.X) / 41f;
						this.velocity.Y = (this.velocity.Y * 40f + vector3.Y) / 41f;
					}
					else
					{
						this.velocity *= 0.97f;
					}
				}
				else if (this.velocity.Y > -1f)
				{
					this.velocity.Y = this.velocity.Y - 0.1f;
				}
			}
			else
			{
				if (!Collision.CanHitLine(base.Center, 1, 1, Main.player[this.owner].Center, 1, 1))
				{
					this.ai[0] = 1f;
				}
				float num20 = 6f;
				if (this.ai[0] == 1f)
				{
					num20 = 15f;
				}
				if (this.type == 407)
				{
					num20 = 9f;
				}
				Vector2 center2 = base.Center;
				Vector2 vector5 = player.Center - center2 + new Vector2(0f, -60f);
				if (this.type == 407)
				{
					vector5 += new Vector2(0f, 40f);
				}
				if (this.type == 375)
				{
					this.ai[1] = 3600f;
					this.netUpdate = true;
					vector5 = player.Center - center2;
					int num21 = 1;
					for (int m = 0; m < this.whoAmI; m++)
					{
						if (Main.projectile[m].active && Main.projectile[m].owner == this.owner && Main.projectile[m].type == this.type)
						{
							num21++;
						}
					}
					vector5.X -= (float)(10 * Main.player[this.owner].direction);
					vector5.X -= (float)(num21 * 40 * Main.player[this.owner].direction);
					vector5.Y -= 10f;
				}
				float num22 = vector5.Length();
				if (num22 > 200f && num20 < 9f)
				{
					num20 = 9f;
				}
				if (this.type == 375)
				{
					num20 = (float)((int)((double)num20 * 0.75));
				}
				if (num22 < 100f && this.ai[0] == 1f && !Collision.SolidCollision(this.position, this.width, this.height))
				{
					this.ai[0] = 0f;
					this.netUpdate = true;
				}
				if (num22 > 2000f)
				{
					this.position.X = Main.player[this.owner].Center.X - (float)(this.width / 2);
					this.position.Y = Main.player[this.owner].Center.Y - (float)(this.width / 2);
				}
				if (this.type == 375)
				{
					if (num22 > 10f)
					{
						vector5.Normalize();
						if (num22 < 50f)
						{
							num20 /= 2f;
						}
						vector5 *= num20;
						this.velocity = (this.velocity * 20f + vector5) / 21f;
					}
					else
					{
						this.direction = Main.player[this.owner].direction;
						this.velocity *= 0.9f;
					}
				}
				else if (this.type == 407)
				{
					if (Math.Abs(vector5.X) > 40f || Math.Abs(vector5.Y) > 10f)
					{
						vector5.Normalize();
						vector5 *= num20;
						vector5 *= new Vector2(1.25f, 0.65f);
						this.velocity = (this.velocity * 20f + vector5) / 21f;
					}
					else
					{
						if (this.velocity.X == 0f && this.velocity.Y == 0f)
						{
							this.velocity.X = -0.15f;
							this.velocity.Y = -0.05f;
						}
						this.velocity *= 1.01f;
					}
				}
				else if (num22 > 70f)
				{
					vector5.Normalize();
					vector5 *= num20;
					this.velocity = (this.velocity * 20f + vector5) / 21f;
				}
				else
				{
					if (this.velocity.X == 0f && this.velocity.Y == 0f)
					{
						this.velocity.X = -0.15f;
						this.velocity.Y = -0.05f;
					}
					this.velocity *= 1.01f;
				}
			}
			this.rotation = this.velocity.X * 0.05f;
			this.frameCounter++;
			if (this.type == 373)
			{
				if (this.frameCounter > 1)
				{
					this.frame++;
					this.frameCounter = 0;
				}
				if (this.frame > 2)
				{
					this.frame = 0;
				}
			}
			if (this.type == 375)
			{
				if (this.frameCounter >= 16)
				{
					this.frameCounter = 0;
				}
				this.frame = this.frameCounter / 4;
				if (this.ai[1] > 0f && this.ai[1] < 16f)
				{
					this.frame += 4;
				}
				if (Main.rand.Next(6) == 0)
				{
					int num23 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2f);
					Main.dust[num23].velocity *= 0.3f;
					Main.dust[num23].noGravity = true;
					Main.dust[num23].noLight = true;
				}
			}
			if (this.type == 407)
			{
				int num24 = 2;
				if (this.frameCounter >= 6 * num24)
				{
					this.frameCounter = 0;
				}
				this.frame = this.frameCounter / num24;
				if (Main.rand.Next(5) == 0)
				{
					int num25 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 217, 0f, 0f, 100, default(Color), 2f);
					Main.dust[num25].velocity *= 0.3f;
					Main.dust[num25].noGravity = true;
					Main.dust[num25].noLight = true;
				}
			}
			if (this.type == 423 || this.type == 613)
			{
				int num26 = 3;
				if (this.frameCounter >= 4 * num26)
				{
					this.frameCounter = 0;
				}
				this.frame = this.frameCounter / num26;
			}
			if (this.velocity.X > 0f)
			{
				this.spriteDirection = (this.direction = -1);
			}
			else if (this.velocity.X < 0f)
			{
				this.spriteDirection = (this.direction = 1);
			}
			if (this.type == 373)
			{
				if (this.ai[1] > 0f)
				{
					this.ai[1] += (float)Main.rand.Next(1, 4);
				}
				if (this.ai[1] > 90f)
				{
					this.ai[1] = 0f;
					this.netUpdate = true;
				}
			}
			else if (this.type == 375)
			{
				if (this.ai[1] > 0f)
				{
					this.ai[1] += 1f;
					if (Main.rand.Next(3) == 0)
					{
						this.ai[1] += 1f;
					}
				}
				if (this.ai[1] > (float)Main.rand.Next(180, 900))
				{
					this.ai[1] = 0f;
					this.netUpdate = true;
				}
			}
			else if (this.type == 407)
			{
				if (this.ai[1] > 0f)
				{
					this.ai[1] += 1f;
					if (Main.rand.Next(3) != 0)
					{
						this.ai[1] += 1f;
					}
				}
				if (this.ai[1] > 60f)
				{
					this.ai[1] = 0f;
					this.netUpdate = true;
				}
			}
			else if (this.type == 423)
			{
				if (this.ai[1] > 0f)
				{
					this.ai[1] += 1f;
					if (Main.rand.Next(3) != 0)
					{
						this.ai[1] += 1f;
					}
				}
				if (this.ai[1] > 30f)
				{
					this.ai[1] = 0f;
					this.netUpdate = true;
				}
			}
			else if (this.type == 613)
			{
				if (this.ai[1] > 0f)
				{
					this.ai[1] += 1f;
					if (Main.rand.Next(3) != 0)
					{
						this.ai[1] += 1f;
					}
				}
				if (this.ai[1] > 60f)
				{
					this.ai[1] = 0f;
					this.netUpdate = true;
				}
			}
			if (this.ai[0] == 0f)
			{
				float scaleFactor4 = 0f;
				int num27 = 0;
				if (this.type == 373)
				{
					scaleFactor4 = 10f;
					num27 = 374;
				}
				else if (this.type == 375)
				{
					scaleFactor4 = 11f;
					num27 = 376;
				}
				else if (this.type == 407)
				{
					scaleFactor4 = 14f;
					num27 = 408;
				}
				else if (this.type == 423)
				{
					scaleFactor4 = 4f;
					num27 = 433;
				}
				else if (this.type == 613)
				{
					scaleFactor4 = 14f;
					num27 = 614;
				}
				if (flag)
				{
					if (this.type == 375)
					{
						if ((vector - base.Center).X > 0f)
						{
							this.spriteDirection = (this.direction = -1);
						}
						else if ((vector - base.Center).X < 0f)
						{
							this.spriteDirection = (this.direction = 1);
						}
					}
					if (this.type == 407 && Collision.SolidCollision(this.position, this.width, this.height))
					{
						return;
					}
					if (this.type == 423)
					{
						if (Math.Abs((vector - base.Center).ToRotation() - 1.57079637f) > 0.7853982f)
						{
							this.velocity += Vector2.Normalize(vector - base.Center - Vector2.UnitY * 80f);
							return;
						}
						if ((vector - base.Center).Length() > 400f)
						{
							return;
						}
						if (this.ai[1] == 0f)
						{
							this.ai[1] += 1f;
							if (Main.myPlayer == this.owner)
							{
								Vector2 value2 = vector - base.Center;
								value2.Normalize();
								value2 *= scaleFactor4;
								Projectile.NewProjectile(base.Center.X, base.Center.Y, value2.X, value2.Y, num27, this.damage, 0f, Main.myPlayer, 0f, 0f);
								this.netUpdate = true;
								return;
							}
						}
					}
					else if (this.ai[1] == 0f && this.type == 613)
					{
						if ((vector - base.Center).Length() > 500f)
						{
							return;
						}
						if (this.ai[1] == 0f)
						{
							this.ai[1] += 1f;
							if (Main.myPlayer == this.owner)
							{
								Vector2 vector6 = vector - base.Center;
								vector6.Normalize();
								vector6 *= scaleFactor4;
								int num28 = Projectile.NewProjectile(base.Center.X, base.Center.Y, vector6.X, vector6.Y, num27, this.damage, 0f, Main.myPlayer, 0f, (float)num11);
								Main.projectile[num28].timeLeft = 300;
								Main.projectile[num28].netUpdate = true;
								this.velocity -= vector6 / 3f;
								this.netUpdate = true;
							}
							for (int n = 0; n < 5; n++)
							{
								int num29 = this.width / 4;
								Vector2 _ = ((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * (float)Main.rand.Next(24, 41) / 8f;
								int num30 = Dust.NewDust(base.Center - Vector2.One * (float)num29, num29 * 2, num29 * 2, 88, 0f, 0f, 0, default(Color), 1f);
								Dust dust5 = Main.dust[num30];
								Vector2 value3 = Vector2.Normalize(dust5.position - base.Center);
								dust5.position = base.Center + value3 * (float)num29 * this.scale - new Vector2(4f);
								if (n < 30)
								{
									dust5.velocity = value3 * dust5.velocity.Length() * 2f;
								}
								else
								{
									dust5.velocity = 2f * value3 * (float)Main.rand.Next(45, 91) / 10f;
								}
								dust5.noGravity = true;
								dust5.scale = 0.7f + Main.rand.NextFloat();
							}
							return;
						}
					}
					else if (this.ai[1] == 0f)
					{
						this.ai[1] += 1f;
						if (Main.myPlayer == this.owner)
						{
							Vector2 value4 = vector - base.Center;
							value4.Normalize();
							value4 *= scaleFactor4;
							int num31 = Projectile.NewProjectile(base.Center.X, base.Center.Y, value4.X, value4.Y, num27, this.damage, 0f, Main.myPlayer, 0f, 0f);
							Main.projectile[num31].timeLeft = 300;
							Main.projectile[num31].netUpdate = true;
							this.netUpdate = true;
						}
					}
				}
			}
		}

		private void AI_075()
		{
			Player player = Main.player[this.owner];
			float num = 1.57079637f;
			Vector2 vector = player.RotatedRelativePoint(player.MountedCenter, true);
			if (this.type == 439)
			{
				this.ai[0] += 1f;
				int num2 = 0;
				if (this.ai[0] >= 40f)
				{
					num2++;
				}
				if (this.ai[0] >= 80f)
				{
					num2++;
				}
				if (this.ai[0] >= 120f)
				{
					num2++;
				}
				int num3 = 24;
				int num4 = 6;
				this.ai[1] += 1f;
				bool flag = false;
				if (this.ai[1] >= (float)(num3 - num4 * num2))
				{
					this.ai[1] = 0f;
					flag = true;
				}
				this.frameCounter += 1 + num2;
				if (this.frameCounter >= 4)
				{
					this.frameCounter = 0;
					this.frame++;
					if (this.frame >= 6)
					{
						this.frame = 0;
					}
				}
				if (this.soundDelay <= 0)
				{
					this.soundDelay = num3 - num4 * num2;
					if (this.ai[0] != 1f)
					{
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 91);
					}
				}
				if (this.ai[1] == 1f && this.ai[0] != 1f)
				{
					Vector2 vector2 = Vector2.UnitX * 24f;
					vector2 = vector2.RotatedBy((double)(this.rotation - 1.57079637f), default(Vector2));
					Vector2 value = base.Center + vector2;
					for (int i = 0; i < 2; i++)
					{
						int num5 = Dust.NewDust(value - Vector2.One * 8f, 16, 16, 135, this.velocity.X / 2f, this.velocity.Y / 2f, 100, default(Color), 1f);
						Main.dust[num5].velocity *= 0.66f;
						Main.dust[num5].noGravity = true;
						Main.dust[num5].scale = 1.4f;
					}
				}
				if (flag && Main.myPlayer == this.owner)
				{
					bool flag2 = player.channel && player.CheckMana(player.inventory[player.selectedItem].mana, true, false) && !player.noItems && !player.CCed;
					if (flag2)
					{
						float scaleFactor = player.inventory[player.selectedItem].shootSpeed * this.scale;
						Vector2 value2 = vector;
						Vector2 value3 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - value2;
						if (player.gravDir == -1f)
						{
							value3.Y = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - value2.Y;
						}
						Vector2 vector3 = Vector2.Normalize(value3);
						if (float.IsNaN(vector3.X) || float.IsNaN(vector3.Y))
						{
							vector3 = -Vector2.UnitY;
						}
						vector3 *= scaleFactor;
						if (vector3.X != this.velocity.X || vector3.Y != this.velocity.Y)
						{
							this.netUpdate = true;
						}
						this.velocity = vector3;
						int num6 = 440;
						float scaleFactor2 = 14f;
						int num7 = 7;
						for (int j = 0; j < 2; j++)
						{
							value2 = base.Center + new Vector2((float)Main.rand.Next(-num7, num7 + 1), (float)Main.rand.Next(-num7, num7 + 1));
							Vector2 spinningpoint = Vector2.Normalize(this.velocity) * scaleFactor2;
							spinningpoint = spinningpoint.RotatedBy(Main.rand.NextDouble() * 0.19634954631328583 - 0.098174773156642914, default(Vector2));
							if (float.IsNaN(spinningpoint.X) || float.IsNaN(spinningpoint.Y))
							{
								spinningpoint = -Vector2.UnitY;
							}
							Projectile.NewProjectile(value2.X, value2.Y, spinningpoint.X, spinningpoint.Y, num6, this.damage, this.knockBack, this.owner, 0f, 0f);
						}
					}
					else
					{
						this.Kill();
					}
				}
			}
			if (this.type == 445)
			{
				this.localAI[0] += 1f;
				if (this.localAI[0] >= 60f)
				{
					this.localAI[0] = 0f;
				}
				if (Vector2.Distance(vector, base.Center) >= 5f)
				{
					float num8 = this.localAI[0] / 60f;
					if (num8 > 0.5f)
					{
						num8 = 1f - num8;
					}
					Vector3 value4 = new Vector3(0f, 1f, 0.7f);
					Vector3 value5 = new Vector3(0f, 0.7f, 1f);
					Vector3 value6 = Vector3.Lerp(value4, value5, 1f - num8 * 2f) * 0.5f;
					if (Vector2.Distance(vector, base.Center) >= 30f)
					{
						Vector2 vector4 = base.Center - vector;
						vector4.Normalize();
						vector4 *= Vector2.Distance(vector, base.Center) - 30f;
						DelegateMethods.v3_1 = value6 * 0.8f;
						Utils.PlotTileLine(base.Center - vector4, base.Center, 8f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
					}
					Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, value6.X, value6.Y, value6.Z);
				}
				if (Main.myPlayer == this.owner)
				{
					if (this.localAI[1] > 0f)
					{
						this.localAI[1] -= 1f;
					}
					if (!player.channel || player.noItems || player.CCed)
					{
						this.Kill();
					}
					else if (this.localAI[1] == 0f)
					{
						Vector2 value7 = vector;
						Vector2 vector5 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - value7;
						if (player.gravDir == -1f)
						{
							vector5.Y = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - value7.Y;
						}
						Tile tile = Main.tile[Player.tileTargetX, Player.tileTargetY];
						if (tile.active())
						{
							vector5 = new Vector2((float)Player.tileTargetX, (float)Player.tileTargetY) * 16f + Vector2.One * 8f - value7;
							this.localAI[1] = 2f;
						}
						vector5 = Vector2.Lerp(vector5, this.velocity, 0.7f);
						if (float.IsNaN(vector5.X) || float.IsNaN(vector5.Y))
						{
							vector5 = -Vector2.UnitY;
						}
						float num9 = 30f;
						if (vector5.Length() < num9)
						{
							vector5 = Vector2.Normalize(vector5) * num9;
						}
						int tileBoost = player.inventory[player.selectedItem].tileBoost;
						int num10 = -Player.tileRangeX - tileBoost + 1;
						int num11 = Player.tileRangeX + tileBoost - 1;
						int num12 = -Player.tileRangeY - tileBoost;
						int num13 = Player.tileRangeY + tileBoost - 1;
						int num14 = 12;
						bool flag3 = false;
						if (vector5.X < (float)(num10 * 16 - num14))
						{
							flag3 = true;
						}
						if (vector5.Y < (float)(num12 * 16 - num14))
						{
							flag3 = true;
						}
						if (vector5.X > (float)(num11 * 16 + num14))
						{
							flag3 = true;
						}
						if (vector5.Y > (float)(num13 * 16 + num14))
						{
							flag3 = true;
						}
						if (flag3)
						{
							Vector2 value8 = Vector2.Normalize(vector5);
							float num15 = -1f;
							if (value8.X < 0f && ((float)(num10 * 16 - num14) / value8.X < num15 || num15 == -1f))
							{
								num15 = (float)(num10 * 16 - num14) / value8.X;
							}
							if (value8.X > 0f && ((float)(num11 * 16 + num14) / value8.X < num15 || num15 == -1f))
							{
								num15 = (float)(num11 * 16 + num14) / value8.X;
							}
							if (value8.Y < 0f && ((float)(num12 * 16 - num14) / value8.Y < num15 || num15 == -1f))
							{
								num15 = (float)(num12 * 16 - num14) / value8.Y;
							}
							if (value8.Y > 0f && ((float)(num13 * 16 + num14) / value8.Y < num15 || num15 == -1f))
							{
								num15 = (float)(num13 * 16 + num14) / value8.Y;
							}
							vector5 = value8 * num15;
						}
						if (vector5.X != this.velocity.X || vector5.Y != this.velocity.Y)
						{
							this.netUpdate = true;
						}
						this.velocity = vector5;
					}
				}
			}
			if (this.type == 460)
			{
				this.ai[0] += 1f;
				int num16 = 0;
				if (this.ai[0] >= 60f)
				{
					num16++;
				}
				if (this.ai[0] >= 180f)
				{
					num16++;
				}
				bool flag4 = false;
				if (this.ai[0] == 60f || this.ai[0] == 180f || (this.ai[0] > 180f && this.ai[0] % 20f == 0f))
				{
					flag4 = true;
				}
				bool flag5 = this.ai[0] >= 180f;
				int num17 = 10;
				if (!flag5)
				{
					this.ai[1] += 1f;
				}
				bool flag6 = false;
				if (flag5 && this.ai[0] % 20f == 0f)
				{
					flag6 = true;
				}
				if (this.ai[1] >= (float)num17 && !flag5)
				{
					this.ai[1] = 0f;
					flag6 = true;
					if (!flag5)
					{
						float scaleFactor3 = player.inventory[player.selectedItem].shootSpeed * this.scale;
						Vector2 value9 = vector;
						Vector2 value10 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - value9;
						if (player.gravDir == -1f)
						{
							value10.Y = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - value9.Y;
						}
						Vector2 vector6 = Vector2.Normalize(value10);
						if (float.IsNaN(vector6.X) || float.IsNaN(vector6.Y))
						{
							vector6 = -Vector2.UnitY;
						}
						vector6 *= scaleFactor3;
						if (vector6.X != this.velocity.X || vector6.Y != this.velocity.Y)
						{
							this.netUpdate = true;
						}
						this.velocity = vector6;
					}
				}
				if (this.soundDelay <= 0 && !flag5)
				{
					this.soundDelay = num17 - num16;
					this.soundDelay *= 2;
					if (this.ai[0] != 1f)
					{
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 15);
					}
				}
				if (this.ai[0] > 10f && !flag5)
				{
					Vector2 vector7 = Vector2.UnitX * 18f;
					vector7 = vector7.RotatedBy((double)(this.rotation - 1.57079637f), default(Vector2));
					Vector2 value11 = base.Center + vector7;
					for (int k = 0; k < num16 + 1; k++)
					{
						int num18 = 226;
						float num19 = 0.4f;
						if (k % 2 == 1)
						{
							num18 = 226;
							num19 = 0.65f;
						}
						Vector2 vector8 = value11 + ((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * (12f - (float)(num16 * 2));
						int num20 = Dust.NewDust(vector8 - Vector2.One * 8f, 16, 16, num18, this.velocity.X / 2f, this.velocity.Y / 2f, 0, default(Color), 1f);
						Main.dust[num20].velocity = Vector2.Normalize(value11 - vector8) * 1.5f * (10f - (float)num16 * 2f) / 10f;
						Main.dust[num20].noGravity = true;
						Main.dust[num20].scale = num19;
						Main.dust[num20].customData = player;
					}
				}
				if (flag6 && Main.myPlayer == this.owner)
				{
					bool flag7 = !flag4 || player.CheckMana(player.inventory[player.selectedItem].mana, true, false);
					bool flag8 = player.channel && flag7 && !player.noItems && !player.CCed;
					if (flag8)
					{
						if (this.ai[0] == 180f)
						{
							Vector2 center = base.Center;
							Vector2 vector9 = Vector2.Normalize(this.velocity);
							if (float.IsNaN(vector9.X) || float.IsNaN(vector9.Y))
							{
								vector9 = -Vector2.UnitY;
							}
							int num21 = (int)((float)this.damage * 3f);
							int num22 = Projectile.NewProjectile(center.X, center.Y, vector9.X, vector9.Y, 461, num21, this.knockBack, this.owner, 0f, (float)this.whoAmI);
							this.ai[1] = (float)num22;
							this.netUpdate = true;
						}
						else if (flag5)
						{
							Projectile projectile = Main.projectile[(int)this.ai[1]];
							if (!projectile.active || projectile.type != 461)
							{
								this.Kill();
								return;
							}
						}
					}
					else
					{
						if (!flag5)
						{
							int num23 = 459;
							float scaleFactor4 = 10f;
							Vector2 center2 = base.Center;
							Vector2 vector10 = Vector2.Normalize(this.velocity) * scaleFactor4;
							if (float.IsNaN(vector10.X) || float.IsNaN(vector10.Y))
							{
								vector10 = -Vector2.UnitY;
							}
							float num24 = 0.7f + (float)num16 * 0.3f;
							int num25 = (num24 < 1f) ? this.damage : ((int)((float)this.damage * 2f));
							Projectile.NewProjectile(center2.X, center2.Y, vector10.X, vector10.Y, num23, num25, this.knockBack, this.owner, 0f, num24);
						}
						this.Kill();
					}
				}
			}
			if (this.type == 633)
			{
				float num26 = 30f;
				if (this.ai[0] > 90f)
				{
					num26 = 15f;
				}
				if (this.ai[0] > 120f)
				{
					num26 = 5f;
				}
				this.damage = (int)((float)player.inventory[player.selectedItem].damage * player.magicDamage);
				this.ai[0] += 1f;
				this.ai[1] += 1f;
				bool flag9 = false;
				if (this.ai[0] % num26 == 0f)
				{
					flag9 = true;
				}
				int num27 = 10;
				bool flag10 = false;
				if (this.ai[0] % num26 == 0f)
				{
					flag10 = true;
				}
				if (this.ai[1] >= 1f)
				{
					this.ai[1] = 0f;
					flag10 = true;
					if (Main.myPlayer == this.owner)
					{
						float scaleFactor5 = player.inventory[player.selectedItem].shootSpeed * this.scale;
						Vector2 value12 = vector;
						Vector2 value13 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - value12;
						if (player.gravDir == -1f)
						{
							value13.Y = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - value12.Y;
						}
						Vector2 vector11 = Vector2.Normalize(value13);
						if (float.IsNaN(vector11.X) || float.IsNaN(vector11.Y))
						{
							vector11 = -Vector2.UnitY;
						}
						vector11 = Vector2.Normalize(Vector2.Lerp(vector11, Vector2.Normalize(this.velocity), 0.92f));
						vector11 *= scaleFactor5;
						if (vector11.X != this.velocity.X || vector11.Y != this.velocity.Y)
						{
							this.netUpdate = true;
						}
						this.velocity = vector11;
					}
				}
				this.frameCounter++;
				int num28 = (this.ai[0] < 120f) ? 4 : 1;
				if (this.frameCounter >= num28)
				{
					this.frameCounter = 0;
					if (++this.frame >= 5)
					{
						this.frame = 0;
					}
				}
				if (this.soundDelay <= 0)
				{
					this.soundDelay = num27;
					this.soundDelay *= 2;
					if (this.ai[0] != 1f)
					{
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 15);
					}
				}
				if (flag10 && Main.myPlayer == this.owner)
				{
					bool flag11 = !flag9 || player.CheckMana(player.inventory[player.selectedItem].mana, true, false);
					bool flag12 = player.channel && flag11 && !player.noItems && !player.CCed;
					if (flag12)
					{
						if (this.ai[0] == 1f)
						{
							Vector2 center3 = base.Center;
							Vector2 vector12 = Vector2.Normalize(this.velocity);
							if (float.IsNaN(vector12.X) || float.IsNaN(vector12.Y))
							{
								vector12 = -Vector2.UnitY;
							}
							int num29 = this.damage;
							for (int l = 0; l < 6; l++)
							{
								Projectile.NewProjectile(center3.X, center3.Y, vector12.X, vector12.Y, 632, num29, this.knockBack, this.owner, (float)l, (float)this.whoAmI);
							}
							this.netUpdate = true;
						}
					}
					else
					{
						this.Kill();
					}
				}
			}
			if (this.type == 595)
			{
				num = 0f;
				if (this.spriteDirection == -1)
				{
					num = 3.14159274f;
				}
				if (++this.frame >= Main.projFrames[this.type])
				{
					this.frame = 0;
				}
				this.soundDelay--;
				if (this.soundDelay <= 0)
				{
					Main.PlaySound(2, (int)base.Center.X, (int)base.Center.Y, 1);
					this.soundDelay = 12;
				}
				if (Main.myPlayer == this.owner)
				{
					if (player.channel && !player.noItems && !player.CCed)
					{
						float scaleFactor6 = 1f;
						if (player.inventory[player.selectedItem].shoot == this.type)
						{
							scaleFactor6 = player.inventory[player.selectedItem].shootSpeed * this.scale;
						}
						Vector2 vector13 = Main.MouseWorld - vector;
						vector13.Normalize();
						if (vector13.HasNaNs())
						{
							vector13 = Vector2.UnitX * (float)player.direction;
						}
						vector13 *= scaleFactor6;
						if (vector13.X != this.velocity.X || vector13.Y != this.velocity.Y)
						{
							this.netUpdate = true;
						}
						this.velocity = vector13;
					}
					else
					{
						this.Kill();
					}
				}
				Vector2 vector14 = base.Center + this.velocity * 3f;
				Lighting.AddLight(vector14, 0.8f, 0.8f, 0.8f);
				if (Main.rand.Next(3) == 0)
				{
					int num30 = Dust.NewDust(vector14 - base.Size / 2f, this.width, this.height, 63, this.velocity.X, this.velocity.Y, 100, default(Color), 2f);
					Main.dust[num30].noGravity = true;
					Main.dust[num30].position -= this.velocity;
				}
			}
			if (this.type == 600)
			{
				if (this.ai[0] == 0f)
				{
					if (this.ai[1] != 0f)
					{
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 114);
					}
					else
					{
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 115);
					}
				}
				this.ai[0] += 1f;
				if (Main.myPlayer == this.owner && this.ai[0] == 1f)
				{
					float scaleFactor7 = player.inventory[player.selectedItem].shootSpeed * this.scale;
					Vector2 value14 = vector;
					Vector2 value15 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - value14;
					if (player.gravDir == -1f)
					{
						value15.Y = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - value14.Y;
					}
					Vector2 vector15 = Vector2.Normalize(value15);
					if (float.IsNaN(vector15.X) || float.IsNaN(vector15.Y))
					{
						vector15 = -Vector2.UnitY;
					}
					vector15 *= scaleFactor7;
					if (vector15.X != this.velocity.X || vector15.Y != this.velocity.Y)
					{
						this.netUpdate = true;
					}
					this.velocity = vector15;
					int num31 = 601;
					float scaleFactor8 = 3f;
					value14 = base.Center;
					Vector2 vector16 = Vector2.Normalize(this.velocity) * scaleFactor8;
					if (float.IsNaN(vector16.X) || float.IsNaN(vector16.Y))
					{
						vector16 = -Vector2.UnitY;
					}
					Projectile.NewProjectile(value14.X, value14.Y, vector16.X, vector16.Y, num31, this.damage, this.knockBack, this.owner, this.ai[1], 0f);
				}
				if (this.ai[0] >= 30f)
				{
					this.Kill();
				}
			}
			if (this.type == 611)
			{
				if (this.localAI[1] > 0f)
				{
					this.localAI[1] -= 1f;
				}
				this.alpha -= 42;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				if (this.localAI[0] == 0f)
				{
					this.localAI[0] = this.velocity.ToRotation();
				}
				float num32 = (float)((this.localAI[0].ToRotationVector2().X >= 0f) ? 1 : -1);
				if (this.ai[1] <= 0f)
				{
					num32 *= -1f;
				}
				Vector2 vector17 = (num32 * (this.ai[0] / 30f * 6.28318548f - 1.57079637f)).ToRotationVector2();
				vector17.Y *= (float)Math.Sin((double)this.ai[1]);
				if (this.ai[1] <= 0f)
				{
					vector17.Y *= -1f;
				}
				vector17 = vector17.RotatedBy((double)this.localAI[0], default(Vector2));
				this.ai[0] += 1f;
				if (this.ai[0] < 30f)
				{
					this.velocity += 48f * vector17;
				}
				else
				{
					this.Kill();
				}
			}
			if (this.type == 615)
			{
				num = 0f;
				if (this.spriteDirection == -1)
				{
					num = 3.14159274f;
				}
				this.ai[0] += 1f;
				int num33 = 0;
				if (this.ai[0] >= 40f)
				{
					num33++;
				}
				if (this.ai[0] >= 80f)
				{
					num33++;
				}
				if (this.ai[0] >= 120f)
				{
					num33++;
				}
				int num34 = 5;
				int num35 = 0;
				this.ai[1] -= 1f;
				bool flag13 = false;
				int num36 = -1;
				if (this.ai[1] <= 0f)
				{
					this.ai[1] = (float)(num34 - num35 * num33);
					flag13 = true;
					int num37 = (int)this.ai[0] / (num34 - num35 * num33);
					if (num37 % 7 == 0)
					{
						num36 = 0;
					}
				}
				this.frameCounter += 1 + num33;
				if (this.frameCounter >= 4)
				{
					this.frameCounter = 0;
					this.frame++;
					if (this.frame >= Main.projFrames[this.type])
					{
						this.frame = 0;
					}
				}
				if (this.soundDelay <= 0)
				{
					this.soundDelay = num34 - num35 * num33;
					if (this.ai[0] != 1f)
					{
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 36);
					}
				}
				if (flag13 && Main.myPlayer == this.owner)
				{
					bool flag14 = player.channel && player.HasAmmo(player.inventory[player.selectedItem], true) && !player.noItems && !player.CCed;
					int num38 = 14;
					float scaleFactor9 = 14f;
					int weaponDamage = player.GetWeaponDamage(player.inventory[player.selectedItem]);
					float weaponKnockback = player.inventory[player.selectedItem].knockBack;
					if (flag14)
					{
						player.PickAmmo(player.inventory[player.selectedItem], ref num38, ref scaleFactor9, ref flag14, ref weaponDamage, ref weaponKnockback, false);
						weaponKnockback = player.GetWeaponKnockback(player.inventory[player.selectedItem], weaponKnockback);
						float scaleFactor10 = player.inventory[player.selectedItem].shootSpeed * this.scale;
						Vector2 value16 = vector;
						Vector2 value17 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - value16;
						if (player.gravDir == -1f)
						{
							value17.Y = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - value16.Y;
						}
						Vector2 vector18 = Vector2.Normalize(value17);
						if (float.IsNaN(vector18.X) || float.IsNaN(vector18.Y))
						{
							vector18 = -Vector2.UnitY;
						}
						vector18 *= scaleFactor10;
						vector18 = vector18.RotatedBy(Main.rand.NextDouble() * 0.13089969754219055 - 0.065449848771095276, default(Vector2));
						if (vector18.X != this.velocity.X || vector18.Y != this.velocity.Y)
						{
							this.netUpdate = true;
						}
						this.velocity = vector18;
						for (int m = 0; m < 1; m++)
						{
							Vector2 spinningpoint2 = Vector2.Normalize(this.velocity) * scaleFactor9;
							spinningpoint2 = spinningpoint2.RotatedBy(Main.rand.NextDouble() * 0.19634954631328583 - 0.098174773156642914, default(Vector2));
							if (float.IsNaN(spinningpoint2.X) || float.IsNaN(spinningpoint2.Y))
							{
								spinningpoint2 = -Vector2.UnitY;
							}
							Projectile.NewProjectile(value16.X, value16.Y, spinningpoint2.X, spinningpoint2.Y, num38, weaponDamage, weaponKnockback, this.owner, 0f, 0f);
						}
						if (num36 == 0)
						{
							num38 = 616;
							scaleFactor9 = 8f;
							for (int n = 0; n < 1; n++)
							{
								Vector2 spinningpoint3 = Vector2.Normalize(this.velocity) * scaleFactor9;
								spinningpoint3 = spinningpoint3.RotatedBy(Main.rand.NextDouble() * 0.39269909262657166 - 0.19634954631328583, default(Vector2));
								if (float.IsNaN(spinningpoint3.X) || float.IsNaN(spinningpoint3.Y))
								{
									spinningpoint3 = -Vector2.UnitY;
								}
								Projectile.NewProjectile(value16.X, value16.Y, spinningpoint3.X, spinningpoint3.Y, num38, weaponDamage + 20, weaponKnockback * 1.25f, this.owner, 0f, 0f);
							}
						}
					}
					else
					{
						this.Kill();
					}
				}
			}
			if (this.type == 630)
			{
				num = 0f;
				if (this.spriteDirection == -1)
				{
					num = 3.14159274f;
				}
				this.ai[0] += 1f;
				int num39 = 0;
				if (this.ai[0] >= 40f)
				{
					num39++;
				}
				if (this.ai[0] >= 80f)
				{
					num39++;
				}
				if (this.ai[0] >= 120f)
				{
					num39++;
				}
				int num40 = 24;
				int num41 = 2;
				this.ai[1] -= 1f;
				bool flag15 = false;
				if (this.ai[1] <= 0f)
				{
					this.ai[1] = (float)(num40 - num41 * num39);
					flag15 = true;
					int arg_1F5C_0 = (int)this.ai[0] / (num40 - num41 * num39);
				}
				bool flag16 = player.channel && player.HasAmmo(player.inventory[player.selectedItem], true) && !player.noItems && !player.CCed;
				if (this.localAI[0] > 0f)
				{
					this.localAI[0] -= 1f;
				}
				if (this.soundDelay <= 0 && flag16)
				{
					this.soundDelay = num40 - num41 * num39;
					if (this.ai[0] != 1f)
					{
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 5);
					}
					this.localAI[0] = 12f;
				}
				player.phantasmTime = 2;
				if (flag15 && Main.myPlayer == this.owner)
				{
					int num42 = 14;
					float scaleFactor11 = 14f;
					int weaponDamage2 = player.GetWeaponDamage(player.inventory[player.selectedItem]);
					float weaponKnockback2 = player.inventory[player.selectedItem].knockBack;
					if (flag16)
					{
						player.PickAmmo(player.inventory[player.selectedItem], ref num42, ref scaleFactor11, ref flag16, ref weaponDamage2, ref weaponKnockback2, false);
						weaponKnockback2 = player.GetWeaponKnockback(player.inventory[player.selectedItem], weaponKnockback2);
						float scaleFactor12 = player.inventory[player.selectedItem].shootSpeed * this.scale;
						Vector2 vector19 = vector;
						Vector2 value18 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - vector19;
						if (player.gravDir == -1f)
						{
							value18.Y = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - vector19.Y;
						}
						Vector2 value19 = Vector2.Normalize(value18);
						if (float.IsNaN(value19.X) || float.IsNaN(value19.Y))
						{
							value19 = -Vector2.UnitY;
						}
						value19 *= scaleFactor12;
						if (value19.X != this.velocity.X || value19.Y != this.velocity.Y)
						{
							this.netUpdate = true;
						}
						this.velocity = value19 * 0.55f;
						for (int num43 = 0; num43 < 4; num43++)
						{
							Vector2 vector20 = Vector2.Normalize(this.velocity) * scaleFactor11 * (0.6f + Main.rand.NextFloat() * 0.8f);
							if (float.IsNaN(vector20.X) || float.IsNaN(vector20.Y))
							{
								vector20 = -Vector2.UnitY;
							}
							Vector2 vector21 = vector19 + Utils.RandomVector2(Main.rand, -15f, 15f);
							int num44 = Projectile.NewProjectile(vector21.X, vector21.Y, vector20.X, vector20.Y, num42, weaponDamage2, weaponKnockback2, this.owner, 0f, 0f);
							Main.projectile[num44].noDropItem = true;
						}
					}
					else
					{
						this.Kill();
					}
				}
			}
			this.position = player.RotatedRelativePoint(player.MountedCenter, true) - base.Size / 2f;
			this.rotation = this.velocity.ToRotation() + num;
			this.spriteDirection = this.direction;
			this.timeLeft = 2;
			player.ChangeDir(this.direction);
			player.heldProj = this.whoAmI;
			player.itemTime = 2;
			player.itemAnimation = 2;
			player.itemRotation = (float)Math.Atan2((double)(this.velocity.Y * (float)this.direction), (double)(this.velocity.X * (float)this.direction));
			if (this.type == 460 || this.type == 611)
			{
				Vector2 vector22 = Main.OffsetsPlayerOnhand[player.bodyFrame.Y / 56] * 2f;
				if (player.direction != 1)
				{
					vector22.X = (float)player.bodyFrame.Width - vector22.X;
				}
				if (player.gravDir != 1f)
				{
					vector22.Y = (float)player.bodyFrame.Height - vector22.Y;
				}
				vector22 -= new Vector2((float)(player.bodyFrame.Width - player.width), (float)(player.bodyFrame.Height - 42)) / 2f;
				base.Center = player.RotatedRelativePoint(player.position + vector22, true) - this.velocity;
			}
			if (this.type == 615)
			{
				this.position.Y = this.position.Y + player.gravDir * 2f;
			}
			if (this.type == 611 && this.alpha == 0)
			{
				for (int num45 = 0; num45 < 2; num45++)
				{
					Dust dust = Main.dust[Dust.NewDust(this.position + this.velocity * 2f, this.width, this.height, 6, 0f, 0f, 100, Color.Transparent, 2f)];
					dust.noGravity = true;
					dust.velocity *= 2f;
					dust.velocity += this.localAI[0].ToRotationVector2();
					dust.fadeIn = 1.5f;
				}
				float num46 = 18f;
				int num47 = 0;
				while ((float)num47 < num46)
				{
					if (Main.rand.Next(4) == 0)
					{
						Vector2 position = this.position + this.velocity + this.velocity * ((float)num47 / num46);
						Dust dust2 = Main.dust[Dust.NewDust(position, this.width, this.height, 6, 0f, 0f, 100, Color.Transparent, 1f)];
						dust2.noGravity = true;
						dust2.fadeIn = 0.5f;
						dust2.velocity += this.localAI[0].ToRotationVector2();
						dust2.noLight = true;
					}
					num47++;
				}
			}
		}

		private void AI_099_1()
		{
			this.timeLeft = 6;
			bool flag = true;
			float num = 250f;
			float scaleFactor = 0.1f;
			float num2 = 15f;
			float num3 = 12f;
			num *= 0.5f;
			num2 *= 0.8f;
			num3 *= 1.5f;
			if (this.owner == Main.myPlayer)
			{
				bool flag2 = false;
				for (int i = 0; i < 1000; i++)
				{
					if (Main.projectile[i].active && Main.projectile[i].owner == this.owner && Main.projectile[i].aiStyle == 99 && (Main.projectile[i].type < 556 || Main.projectile[i].type > 561))
					{
						flag2 = true;
					}
				}
				if (!flag2)
				{
					this.ai[0] = -1f;
					this.netUpdate = true;
				}
			}
			if (Main.player[this.owner].yoyoString)
			{
				num += num * 0.25f + 10f;
			}
			this.rotation += 0.5f;
			if (Main.player[this.owner].dead)
			{
				this.Kill();
				return;
			}
			if (!flag)
			{
				Main.player[this.owner].heldProj = this.whoAmI;
				Main.player[this.owner].itemAnimation = 2;
				Main.player[this.owner].itemTime = 2;
				if (this.position.X + (float)(this.width / 2) > Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2))
				{
					Main.player[this.owner].ChangeDir(1);
					this.direction = 1;
				}
				else
				{
					Main.player[this.owner].ChangeDir(-1);
					this.direction = -1;
				}
			}
			if (this.ai[0] == 0f || this.ai[0] == 1f)
			{
				if (this.ai[0] == 1f)
				{
					num *= 0.75f;
				}
				num3 *= 0.5f;
				bool flag3 = false;
				Vector2 vector = Main.player[this.owner].Center - base.Center;
				if ((double)vector.Length() > (double)num * 0.9)
				{
					flag3 = true;
				}
				if (vector.Length() > num)
				{
					float num4 = vector.Length() - num;
					Vector2 value;
					value.X = vector.Y;
					value.Y = vector.X;
					vector.Normalize();
					vector *= num;
					this.position = Main.player[this.owner].Center - vector;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y - (float)(this.height / 2);
					float num5 = this.velocity.Length();
					this.velocity.Normalize();
					if (num4 > num5 - 1f)
					{
						num4 = num5 - 1f;
					}
					this.velocity *= num5 - num4;
					num5 = this.velocity.Length();
					Vector2 vector2 = new Vector2(base.Center.X, base.Center.Y);
					Vector2 vector3 = new Vector2(Main.player[this.owner].Center.X, Main.player[this.owner].Center.Y);
					if (vector2.Y < vector3.Y)
					{
						value.Y = Math.Abs(value.Y);
					}
					else if (vector2.Y > vector3.Y)
					{
						value.Y = -Math.Abs(value.Y);
					}
					if (vector2.X < vector3.X)
					{
						value.X = Math.Abs(value.X);
					}
					else if (vector2.X > vector3.X)
					{
						value.X = -Math.Abs(value.X);
					}
					value.Normalize();
					value *= this.velocity.Length();
					new Vector2(value.X, value.Y);
					if (Math.Abs(this.velocity.X) > Math.Abs(this.velocity.Y))
					{
						Vector2 vector4 = this.velocity;
						vector4.Y += value.Y;
						vector4.Normalize();
						vector4 *= this.velocity.Length();
						if ((double)Math.Abs(value.X) < 0.1 || (double)Math.Abs(value.Y) < 0.1)
						{
							this.velocity = vector4;
						}
						else
						{
							this.velocity = (vector4 + this.velocity * 2f) / 3f;
						}
					}
					else
					{
						Vector2 vector5 = this.velocity;
						vector5.X += value.X;
						vector5.Normalize();
						vector5 *= this.velocity.Length();
						if ((double)Math.Abs(value.X) < 0.2 || (double)Math.Abs(value.Y) < 0.2)
						{
							this.velocity = vector5;
						}
						else
						{
							this.velocity = (vector5 + this.velocity * 2f) / 3f;
						}
					}
				}
				if (Main.myPlayer == this.owner)
				{
					if (Main.player[this.owner].channel)
					{
						Vector2 value2 = new Vector2((float)(Main.mouseX - Main.lastMouseX), (float)(Main.mouseY - Main.lastMouseY));
						if (this.velocity.X != 0f || this.velocity.Y != 0f)
						{
							if (flag)
							{
								value2 *= -1f;
							}
							if (flag3)
							{
								if (base.Center.X < Main.player[this.owner].Center.X && value2.X < 0f)
								{
									value2.X = 0f;
								}
								if (base.Center.X > Main.player[this.owner].Center.X && value2.X > 0f)
								{
									value2.X = 0f;
								}
								if (base.Center.Y < Main.player[this.owner].Center.Y && value2.Y < 0f)
								{
									value2.Y = 0f;
								}
								if (base.Center.Y > Main.player[this.owner].Center.Y && value2.Y > 0f)
								{
									value2.Y = 0f;
								}
							}
							this.velocity += value2 * scaleFactor;
							this.netUpdate = true;
						}
					}
					else
					{
						this.ai[0] = 10f;
						this.netUpdate = true;
					}
				}
				if (flag || this.type == 562 || this.type == 547 || this.type == 555 || this.type == 564 || this.type == 552 || this.type == 563 || this.type == 549 || this.type == 550 || this.type == 554 || this.type == 553 || this.type == 603)
				{
					float num6 = 800f;
					Vector2 vector6 = default(Vector2);
					bool flag4 = false;
					if (this.type == 549)
					{
						num6 = 200f;
					}
					if (this.type == 554)
					{
						num6 = 400f;
					}
					if (this.type == 553)
					{
						num6 = 250f;
					}
					if (this.type == 603)
					{
						num6 = 320f;
					}
					for (int j = 0; j < 200; j++)
					{
						if (Main.npc[j].CanBeChasedBy(this, false))
						{
							float num7 = Main.npc[j].position.X + (float)(Main.npc[j].width / 2);
							float num8 = Main.npc[j].position.Y + (float)(Main.npc[j].height / 2);
							float num9 = Math.Abs(this.position.X + (float)(this.width / 2) - num7) + Math.Abs(this.position.Y + (float)(this.height / 2) - num8);
							if (num9 < num6 && (this.type != 563 || num9 >= 200f) && Collision.CanHit(this.position, this.width, this.height, Main.npc[j].position, Main.npc[j].width, Main.npc[j].height) && (double)(Main.npc[j].Center - Main.player[this.owner].Center).Length() < (double)num * 0.9)
							{
								num6 = num9;
								vector6.X = num7;
								vector6.Y = num8;
								flag4 = true;
							}
						}
					}
					if (flag4)
					{
						vector6 -= base.Center;
						vector6.Normalize();
						if (this.type == 563)
						{
							vector6 *= 4f;
							this.velocity = (this.velocity * 14f + vector6) / 15f;
						}
						else if (this.type == 553)
						{
							vector6 *= 5f;
							this.velocity = (this.velocity * 12f + vector6) / 13f;
						}
						else if (this.type == 603)
						{
							vector6 *= 16f;
							this.velocity = (this.velocity * 9f + vector6) / 10f;
						}
						else if (this.type == 554)
						{
							vector6 *= 8f;
							this.velocity = (this.velocity * 6f + vector6) / 7f;
						}
						else
						{
							vector6 *= 6f;
							this.velocity = (this.velocity * 7f + vector6) / 8f;
						}
					}
				}
				if (this.velocity.Length() > num2)
				{
					this.velocity.Normalize();
					this.velocity *= num2;
				}
				if (this.velocity.Length() < num3)
				{
					this.velocity.Normalize();
					this.velocity *= num3;
					return;
				}
			}
			else
			{
				this.tileCollide = false;
				Vector2 vector7 = Main.player[this.owner].Center - base.Center;
				if (vector7.Length() < 40f || vector7.HasNaNs())
				{
					this.Kill();
					return;
				}
				float num10 = num2 * 1.5f;
				if (this.type == 546)
				{
					num10 *= 1.5f;
				}
				if (this.type == 554)
				{
					num10 *= 1.25f;
				}
				if (this.type == 555)
				{
					num10 *= 1.35f;
				}
				if (this.type == 562)
				{
					num10 *= 1.25f;
				}
				float num11 = 12f;
				vector7.Normalize();
				vector7 *= num10;
				this.velocity = (this.velocity * (num11 - 1f) + vector7) / num11;
			}
		}

		private void AI_099_2()
		{
			bool flag = false;
			for (int i = 0; i < this.whoAmI; i++)
			{
				if (Main.projectile[i].active && Main.projectile[i].owner == this.owner && Main.projectile[i].type == this.type)
				{
					flag = true;
				}
			}
			if (this.owner == Main.myPlayer)
			{
				this.localAI[0] += 1f;
				if (flag)
				{
					this.localAI[0] += (float)Main.rand.Next(10, 31) * 0.1f;
				}
				float num = this.localAI[0] / 60f;
				num /= (1f + Main.player[this.owner].meleeSpeed) / 2f;
				if (this.type == 541 && num > 3f)
				{
					this.ai[0] = -1f;
				}
				if (this.type == 548 && num > 5f)
				{
					this.ai[0] = -1f;
				}
				if (this.type == 542 && num > 7f)
				{
					this.ai[0] = -1f;
				}
				if (this.type == 543 && num > 6f)
				{
					this.ai[0] = -1f;
				}
				if (this.type == 544 && num > 8f)
				{
					this.ai[0] = -1f;
				}
				if (this.type == 534 && num > 9f)
				{
					this.ai[0] = -1f;
				}
				if (this.type == 564 && num > 11f)
				{
					this.ai[0] = -1f;
				}
				if (this.type == 545 && num > 13f)
				{
					this.ai[0] = -1f;
				}
				if (this.type == 563 && num > 10f)
				{
					this.ai[0] = -1f;
				}
				if (this.type == 562 && num > 8f)
				{
					this.ai[0] = -1f;
				}
				if (this.type == 553 && num > 12f)
				{
					this.ai[0] = -1f;
				}
				if (this.type == 546 && num > 16f)
				{
					this.ai[0] = -1f;
				}
				if (this.type == 552 && num > 15f)
				{
					this.ai[0] = -1f;
				}
				if (this.type == 549 && num > 14f)
				{
					this.ai[0] = -1f;
				}
			}
			if (this.type == 603 && this.owner == Main.myPlayer)
			{
				this.localAI[1] += 1f;
				if (this.localAI[1] >= 6f)
				{
					float num2 = 400f;
					Vector2 vector = this.velocity;
					Vector2 vector2 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
					vector2.Normalize();
					vector2 *= (float)Main.rand.Next(10, 41) * 0.1f;
					if (Main.rand.Next(3) == 0)
					{
						vector2 *= 2f;
					}
					vector *= 0.25f;
					vector += vector2;
					for (int j = 0; j < 200; j++)
					{
						if (Main.npc[j].CanBeChasedBy(this, false))
						{
							float num3 = Main.npc[j].position.X + (float)(Main.npc[j].width / 2);
							float num4 = Main.npc[j].position.Y + (float)(Main.npc[j].height / 2);
							float num5 = Math.Abs(this.position.X + (float)(this.width / 2) - num3) + Math.Abs(this.position.Y + (float)(this.height / 2) - num4);
							if (num5 < num2 && Collision.CanHit(this.position, this.width, this.height, Main.npc[j].position, Main.npc[j].width, Main.npc[j].height))
							{
								num2 = num5;
								vector.X = num3;
								vector.Y = num4;
								vector -= base.Center;
								vector.Normalize();
								vector *= 8f;
							}
						}
					}
					vector *= 0.8f;
					Projectile.NewProjectile(base.Center.X - vector.X, base.Center.Y - vector.Y, vector.X, vector.Y, 604, this.damage, this.knockBack, this.owner, 0f, 0f);
					this.localAI[1] = 0f;
				}
			}
			bool flag2 = false;
			if (this.type >= 556 && this.type <= 561)
			{
				flag2 = true;
			}
			if (Main.player[this.owner].dead)
			{
				this.Kill();
				return;
			}
			if (!flag2 && !flag)
			{
				Main.player[this.owner].heldProj = this.whoAmI;
				Main.player[this.owner].itemAnimation = 2;
				Main.player[this.owner].itemTime = 2;
				if (this.position.X + (float)(this.width / 2) > Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2))
				{
					Main.player[this.owner].ChangeDir(1);
					this.direction = 1;
				}
				else
				{
					Main.player[this.owner].ChangeDir(-1);
					this.direction = -1;
				}
			}
			if (this.velocity.HasNaNs())
			{
				this.Kill();
			}
			this.timeLeft = 6;
			float num6 = 10f;
			float num7 = 200f;
			if (this.type == 541)
			{
				num7 = 130f;
				num6 = 9f;
			}
			else if (this.type == 548)
			{
				num7 = 170f;
				num6 = 11f;
			}
			else if (this.type == 542)
			{
				num7 = 195f;
				num6 = 12.5f;
			}
			else if (this.type == 543)
			{
				num7 = 207f;
				num6 = 12f;
			}
			else if (this.type == 544)
			{
				num7 = 215f;
				num6 = 13f;
			}
			else if (this.type == 534)
			{
				num7 = 220f;
				num6 = 13f;
			}
			else if (this.type == 564)
			{
				num7 = 225f;
				num6 = 14f;
			}
			else if (this.type == 545)
			{
				if (Main.rand.Next(6) == 0)
				{
					int num8 = Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num8].noGravity = true;
				}
				num7 = 235f;
				num6 = 14f;
			}
			else if (this.type == 562)
			{
				num7 = 235f;
				num6 = 15f;
			}
			else if (this.type == 563)
			{
				num7 = 250f;
				num6 = 12f;
			}
			else if (this.type == 546)
			{
				num7 = 275f;
				num6 = 17f;
			}
			else if (this.type == 552)
			{
				num7 = 270f;
				num6 = 14f;
			}
			else if (this.type == 553)
			{
				if (Main.rand.Next(2) == 0)
				{
					int num9 = Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num9].noGravity = true;
					Main.dust[num9].scale = 1.6f;
				}
				num7 = 275f;
				num6 = 15f;
			}
			else if (this.type == 547)
			{
				num7 = 280f;
				num6 = 17f;
			}
			else if (this.type == 549)
			{
				num7 = 290f;
				num6 = 16f;
			}
			else if (this.type == 554)
			{
				num7 = 340f;
				num6 = 16f;
			}
			else if (this.type == 550 || this.type == 551)
			{
				num7 = 370f;
				num6 = 16f;
			}
			else if (this.type == 555)
			{
				num7 = 360f;
				num6 = 16.5f;
			}
			else if (this.type == 603)
			{
				num7 = 400f;
				num6 = 17.5f;
			}
			if (Main.player[this.owner].yoyoString)
			{
				num7 = num7 * 1.25f + 30f;
			}
			num7 /= (1f + Main.player[this.owner].meleeSpeed * 3f) / 4f;
			num6 /= (1f + Main.player[this.owner].meleeSpeed * 3f) / 4f;
			float num10 = 14f - num6 / 2f;
			float num11 = 5f + num6 / 2f;
			if (flag)
			{
				num11 += 20f;
			}
			if (this.ai[0] >= 0f)
			{
				if (this.velocity.Length() > num6)
				{
					this.velocity *= 0.98f;
				}
				bool flag3 = false;
				bool flag4 = false;
				Vector2 vector3 = Main.player[this.owner].Center - base.Center;
				if (vector3.Length() > num7)
				{
					flag3 = true;
					if ((double)vector3.Length() > (double)num7 * 1.3)
					{
						flag4 = true;
					}
				}
				if (this.owner == Main.myPlayer)
				{
					if (!Main.player[this.owner].channel || Main.player[this.owner].stoned || Main.player[this.owner].frozen)
					{
						this.ai[0] = -1f;
						this.ai[1] = 0f;
						this.netUpdate = true;
					}
					else
					{
						Vector2 vector4 = Main.ReverseGravitySupport(Main.MouseScreen, 0f) + Main.screenPosition;
						float x = vector4.X;
						float y = vector4.Y;
						Vector2 vector5 = new Vector2(x, y) - Main.player[this.owner].Center;
						if (vector5.Length() > num7)
						{
							vector5.Normalize();
							vector5 *= num7;
							vector5 = Main.player[this.owner].Center + vector5;
							x = vector5.X;
							y = vector5.Y;
						}
						if (this.ai[0] != x || this.ai[1] != y)
						{
							Vector2 value = new Vector2(x, y);
							Vector2 vector6 = value - Main.player[this.owner].Center;
							if (vector6.Length() > num7 - 1f)
							{
								vector6.Normalize();
								vector6 *= num7 - 1f;
								value = Main.player[this.owner].Center + vector6;
								x = value.X;
								y = value.Y;
							}
							this.ai[0] = x;
							this.ai[1] = y;
							this.netUpdate = true;
						}
					}
				}
				if (flag4 && this.owner == Main.myPlayer)
				{
					this.ai[0] = -1f;
					this.netUpdate = true;
				}
				if (this.ai[0] >= 0f)
				{
					if (flag3)
					{
						num10 /= 2f;
						num6 *= 2f;
						if (base.Center.X > Main.player[this.owner].Center.X && this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X * 0.5f;
						}
						if (base.Center.Y > Main.player[this.owner].Center.Y && this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y * 0.5f;
						}
						if (base.Center.X < Main.player[this.owner].Center.X && this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X * 0.5f;
						}
						if (base.Center.Y < Main.player[this.owner].Center.Y && this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y * 0.5f;
						}
					}
					Vector2 value2 = new Vector2(this.ai[0], this.ai[1]);
					Vector2 vector7 = value2 - base.Center;
					this.velocity.Length();
					float num12 = vector7.Length();
					if (num12 > num11)
					{
						vector7.Normalize();
						float scaleFactor = (num12 > num6 * 2f) ? num6 : (num12 / 2f);
						vector7 *= scaleFactor;
						this.velocity = (this.velocity * (num10 - 1f) + vector7) / num10;
					}
					else if (flag)
					{
						if ((double)this.velocity.Length() < (double)num6 * 0.6)
						{
							vector7 = this.velocity;
							vector7.Normalize();
							vector7 *= num6 * 0.6f;
							this.velocity = (this.velocity * (num10 - 1f) + vector7) / num10;
						}
					}
					else
					{
						this.velocity *= 0.8f;
					}
					if (flag && !flag3 && (double)this.velocity.Length() < (double)num6 * 0.6)
					{
						this.velocity.Normalize();
						this.velocity *= num6 * 0.6f;
					}
				}
			}
			else
			{
				num10 = (float)((int)((double)num10 * 0.8));
				num6 *= 1.5f;
				this.tileCollide = false;
				Vector2 vector8 = Main.player[this.owner].position - base.Center;
				float num13 = vector8.Length();
				if (num13 < num6 + 10f || num13 == 0f)
				{
					this.Kill();
				}
				else
				{
					vector8.Normalize();
					vector8 *= num6;
					this.velocity = (this.velocity * (num10 - 1f) + vector8) / num10;
				}
			}
			this.rotation += 0.45f;
		}

		public void Kill()
		{
			if (!this.active)
			{
				return;
			}
			Main.projectileIdentity[this.owner, this.identity] = -1;
			int num = this.timeLeft;
			this.timeLeft = 0;
			if (!ProjectileLoader.PreKill(this, num))
			{
				this.active = false;
				return;
			}
			if (this.type == 634 || this.type == 635)
			{
				int num2 = Utils.SelectRandom<int>(Main.rand, new int[]
					{
						242,
						73,
						72,
						71,
						255
					});
				int num3 = 255;
				int num4 = 255;
				int height = 50;
				float num5 = 1.7f;
				float num6 = 0.8f;
				float num7 = 2f;
				Vector2 value = (this.rotation - 1.57079637f).ToRotationVector2();
				Vector2 value2 = value * this.velocity.Length() * (float)this.MaxUpdates;
				if (this.type == 635)
				{
					num3 = 88;
					num4 = 88;
					num2 = Utils.SelectRandom<int>(Main.rand, new int[]
						{
							242,
							59,
							88
						});
					num5 = 3.7f;
					num6 = 1.5f;
					num7 = 2.2f;
					value2 *= 0.5f;
				}
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
				this.position = base.Center;
				this.width = (this.height = height);
				base.Center = this.position;
				this.maxPenetrate = -1;
				this.penetrate = -1;
				this.Damage();
				for (int i = 0; i < 40; i++)
				{
					num2 = Utils.SelectRandom<int>(Main.rand, new int[]
						{
							242,
							73,
							72,
							71,
							255
						});
					if (this.type == 635)
					{
						num2 = Utils.SelectRandom<int>(Main.rand, new int[]
							{
								242,
								59,
								88
							});
					}
					int num8 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num2, 0f, 0f, 200, default(Color), num5);
					Main.dust[num8].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.dust[num8].noGravity = true;
					Main.dust[num8].velocity *= 3f;
					Main.dust[num8].velocity += value2 * Main.rand.NextFloat();
					num8 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num3, 0f, 0f, 100, default(Color), num6);
					Main.dust[num8].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.dust[num8].velocity *= 2f;
					Main.dust[num8].noGravity = true;
					Main.dust[num8].fadeIn = 1f;
					Main.dust[num8].color = Color.Crimson * 0.5f;
					Main.dust[num8].velocity += value2 * Main.rand.NextFloat();
				}
				for (int j = 0; j < 20; j++)
				{
					int num9 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num4, 0f, 0f, 0, default(Color), num7);
					Main.dust[num9].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 3f;
					Main.dust[num9].noGravity = true;
					Main.dust[num9].velocity *= 0.5f;
					Main.dust[num9].velocity += value2 * (0.6f + 0.6f * Main.rand.NextFloat());
				}
			}
			else if (this.type == 651)
			{
				if (this.localAI[0] == 1f && this.owner == Main.myPlayer)
				{
					Player master = Main.player[this.owner];
					Point ps = new Vector2(this.ai[0], this.ai[1]).ToPoint();
					Point pe = base.Center.ToTileCoordinates();
					if (Main.netMode == 1)
					{
						NetMessage.SendData(109, -1, -1, "", ps.X, (float)ps.Y, (float)pe.X, (float)pe.Y, (int)WiresUI.Settings.ToolMode, 0, 0);
					}
					else
					{
						Wiring.MassWireOperation(ps, pe, master);
					}
				}
			}
			else if (this.type == 641)
			{
				if (this.owner == Main.myPlayer)
				{
					for (int k = 0; k < 1000; k++)
					{
						if (Main.projectile[k].active && Main.projectile[k].owner == this.owner && Main.projectile[k].type == 642)
						{
							Main.projectile[k].Kill();
						}
					}
				}
			}
			else if (this.type == 643)
			{
				if (this.owner == Main.myPlayer)
				{
					for (int l = 0; l < 1000; l++)
					{
						if (Main.projectile[l].active && Main.projectile[l].owner == this.owner && Main.projectile[l].type == 644)
						{
							Main.projectile[l].Kill();
						}
					}
				}
			}
			else if (this.type == 645)
			{
				bool flag = WorldGen.SolidTile(Framing.GetTileSafely((int)this.position.X / 16, (int)this.position.Y / 16));
				for (int m = 0; m < 4; m++)
				{
					Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
				}
				for (int n = 0; n < 4; n++)
				{
					int num10 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 229, 0f, 0f, 0, default(Color), 2.5f);
					Main.dust[num10].noGravity = true;
					Main.dust[num10].velocity *= 3f;
					if (flag)
					{
						Main.dust[num10].noLight = true;
					}
					num10 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 229, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num10].velocity *= 2f;
					Main.dust[num10].noGravity = true;
					if (flag)
					{
						Main.dust[num10].noLight = true;
					}
				}
				for (int num11 = 0; num11 < 1; num11++)
				{
					int num12 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num12].velocity *= 0.3f;
					Gore expr_9BA_cp_0 = Main.gore[num12];
					expr_9BA_cp_0.velocity.X = expr_9BA_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.05f;
					Gore expr_9E8_cp_0 = Main.gore[num12];
					expr_9E8_cp_0.velocity.Y = expr_9E8_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.05f;
				}
			}
			else if (this.type == 636)
			{
				Rectangle hitbox = base.Hitbox;
				for (int num13 = 0; num13 < 6; num13 += 3)
				{
					hitbox.X = (int)this.oldPos[num13].X;
					hitbox.Y = (int)this.oldPos[num13].Y;
					for (int num14 = 0; num14 < 5; num14++)
					{
						int num15 = Utils.SelectRandom<int>(Main.rand, new int[]
							{
								6,
								259,
								158
							});
						int num16 = Dust.NewDust(hitbox.TopLeft(), this.width, this.height, num15, 2.5f * (float)this.direction, -2.5f, 0, default(Color), 1f);
						Main.dust[num16].alpha = 200;
						Main.dust[num16].velocity *= 2.4f;
						Main.dust[num16].scale += Main.rand.NextFloat();
					}
				}
			}
			else if (this.type == 614)
			{
				for (int num17 = 0; num17 < 10; num17++)
				{
					Dust dust = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
					dust.noGravity = true;
					dust.velocity *= 3f;
				}
			}
			if (this.type == 644)
			{
				Vector2 spinningpoint = new Vector2(0f, -3f).RotatedByRandom(3.1415927410125732);
				float num18 = (float)Main.rand.Next(7, 13);
				Vector2 value3 = new Vector2(2.1f, 2f);
				Color newColor = Main.hslToRgb(this.ai[0], 1f, 0.5f);
				newColor.A = 255;
				for (float num19 = 0f; num19 < num18; num19 += 1f)
				{
					int num20 = Dust.NewDust(base.Center, 0, 0, 267, 0f, 0f, 0, newColor, 1f);
					Main.dust[num20].position = base.Center;
					Main.dust[num20].velocity = spinningpoint.RotatedBy((double)(6.28318548f * num19 / num18), default(Vector2)) * value3 * (0.8f + Main.rand.NextFloat() * 0.4f);
					Main.dust[num20].noGravity = true;
					Main.dust[num20].scale = 2f;
					Main.dust[num20].fadeIn = Main.rand.NextFloat() * 2f;
					Dust dust2 = Dust.CloneDust(num20);
					dust2.scale /= 2f;
					dust2.fadeIn /= 2f;
					dust2.color = new Color(255, 255, 255, 255);
				}
				for (float num21 = 0f; num21 < num18; num21 += 1f)
				{
					int num22 = Dust.NewDust(base.Center, 0, 0, 267, 0f, 0f, 0, newColor, 1f);
					Main.dust[num22].position = base.Center;
					Main.dust[num22].velocity = spinningpoint.RotatedBy((double)(6.28318548f * num21 / num18), default(Vector2)) * value3 * (0.8f + Main.rand.NextFloat() * 0.4f);
					Main.dust[num22].velocity *= Main.rand.NextFloat() * 0.8f;
					Main.dust[num22].noGravity = true;
					Main.dust[num22].scale = Main.rand.NextFloat() * 1f;
					Main.dust[num22].fadeIn = Main.rand.NextFloat() * 2f;
					Dust dust3 = Dust.CloneDust(num22);
					dust3.scale /= 2f;
					dust3.fadeIn /= 2f;
					dust3.color = new Color(255, 255, 255, 255);
				}
				if (Main.myPlayer == this.owner)
				{
					this.friendly = true;
					int width = this.width;
					int height2 = this.height;
					int num23 = this.penetrate;
					this.position = base.Center;
					this.width = (this.height = 60);
					base.Center = this.position;
					this.penetrate = -1;
					this.maxPenetrate = -1;
					this.Damage();
					this.penetrate = num23;
					this.position = base.Center;
					this.width = width;
					this.height = height2;
					base.Center = this.position;
				}
			}
			if (this.type == 608)
			{
				this.maxPenetrate = -1;
				this.penetrate = -1;
				this.Damage();
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
				for (int num24 = 0; num24 < 4; num24++)
				{
					int num25 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num25].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
				}
				for (int num26 = 0; num26 < 30; num26++)
				{
					int num27 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 200, default(Color), 3.7f);
					Main.dust[num27].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.dust[num27].noGravity = true;
					Main.dust[num27].velocity *= 3f;
					Main.dust[num27].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].ArmorSetDye(), Main.player[this.owner]);
					num27 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num27].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.dust[num27].velocity *= 2f;
					Main.dust[num27].noGravity = true;
					Main.dust[num27].fadeIn = 2.5f;
					Main.dust[num27].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].ArmorSetDye(), Main.player[this.owner]);
				}
				for (int num28 = 0; num28 < 10; num28++)
				{
					int num29 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 0, default(Color), 2.7f);
					Main.dust[num29].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
					Main.dust[num29].noGravity = true;
					Main.dust[num29].velocity *= 3f;
					Main.dust[num29].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].ArmorSetDye(), Main.player[this.owner]);
				}
				for (int num30 = 0; num30 < 10; num30++)
				{
					int num31 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
					Main.dust[num31].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
					Main.dust[num31].noGravity = true;
					Main.dust[num31].velocity *= 3f;
				}
				for (int num32 = 0; num32 < 2; num32++)
				{
					int num33 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num33].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.gore[num33].velocity *= 0.3f;
					Gore expr_15C5_cp_0 = Main.gore[num33];
					expr_15C5_cp_0.velocity.X = expr_15C5_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.05f;
					Gore expr_15F3_cp_0 = Main.gore[num33];
					expr_15F3_cp_0.velocity.Y = expr_15F3_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.05f;
				}
			}
			else if (this.type == 661)
			{
				this.position = base.Center;
				this.width = (this.height = 160);
				base.Center = this.position;
				this.maxPenetrate = -1;
				this.penetrate = -1;
				this.Damage();
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
				Vector2 position = base.Center + Vector2.One * -20f;
				int num34 = 40;
				int height3 = num34;
				for (int num35 = 0; num35 < 4; num35++)
				{
					int num36 = Dust.NewDust(position, num34, height3, 240, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num36].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)num34 / 2f;
				}
				for (int num37 = 0; num37 < 20; num37++)
				{
					int num38 = Dust.NewDust(position, num34, height3, 62, 0f, 0f, 200, default(Color), 3.7f);
					Main.dust[num38].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)num34 / 2f;
					Main.dust[num38].noGravity = true;
					Main.dust[num38].noLight = true;
					Main.dust[num38].velocity *= 3f;
					Main.dust[num38].velocity += base.DirectionTo(Main.dust[num38].position) * (2f + Main.rand.NextFloat() * 4f);
					num38 = Dust.NewDust(position, num34, height3, 62, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num38].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)num34 / 2f;
					Main.dust[num38].velocity *= 2f;
					Main.dust[num38].noGravity = true;
					Main.dust[num38].fadeIn = 1f;
					Main.dust[num38].color = Color.Crimson * 0.5f;
					Main.dust[num38].noLight = true;
					Main.dust[num38].velocity += base.DirectionTo(Main.dust[num38].position) * 8f;
				}
				for (int num39 = 0; num39 < 20; num39++)
				{
					int num40 = Dust.NewDust(position, num34, height3, 62, 0f, 0f, 0, default(Color), 2.7f);
					Main.dust[num40].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)num34 / 2f;
					Main.dust[num40].noGravity = true;
					Main.dust[num40].noLight = true;
					Main.dust[num40].velocity *= 3f;
					Main.dust[num40].velocity += base.DirectionTo(Main.dust[num40].position) * 2f;
				}
				for (int num41 = 0; num41 < 70; num41++)
				{
					int num42 = Dust.NewDust(position, num34, height3, 240, 0f, 0f, 0, default(Color), 1.5f);
					Main.dust[num42].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)num34 / 2f;
					Main.dust[num42].noGravity = true;
					Main.dust[num42].velocity *= 3f;
					Main.dust[num42].velocity += base.DirectionTo(Main.dust[num42].position) * 3f;
				}
			}
			else if (this.type == 617)
			{
				this.position = base.Center;
				this.width = (this.height = 176);
				base.Center = this.position;
				this.maxPenetrate = -1;
				this.penetrate = -1;
				this.Damage();
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
				for (int num43 = 0; num43 < 4; num43++)
				{
					int num44 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 240, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num44].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
				}
				for (int num45 = 0; num45 < 30; num45++)
				{
					int num46 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 62, 0f, 0f, 200, default(Color), 3.7f);
					Main.dust[num46].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.dust[num46].noGravity = true;
					Main.dust[num46].velocity *= 3f;
					num46 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 90, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num46].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.dust[num46].velocity *= 2f;
					Main.dust[num46].noGravity = true;
					Main.dust[num46].fadeIn = 1f;
					Main.dust[num46].color = Color.Crimson * 0.5f;
				}
				for (int num47 = 0; num47 < 10; num47++)
				{
					int num48 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 62, 0f, 0f, 0, default(Color), 2.7f);
					Main.dust[num48].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
					Main.dust[num48].noGravity = true;
					Main.dust[num48].velocity *= 3f;
				}
				for (int num49 = 0; num49 < 10; num49++)
				{
					int num50 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 240, 0f, 0f, 0, default(Color), 1.5f);
					Main.dust[num50].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
					Main.dust[num50].noGravity = true;
					Main.dust[num50].velocity *= 3f;
				}
				for (int num51 = 0; num51 < 2; num51++)
				{
					int num52 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num52].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.gore[num52].velocity *= 0.3f;
					Gore expr_2189_cp_0 = Main.gore[num52];
					expr_2189_cp_0.velocity.X = expr_2189_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.05f;
					Gore expr_21B7_cp_0 = Main.gore[num52];
					expr_21B7_cp_0.velocity.Y = expr_21B7_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.05f;
				}
				if (Main.myPlayer == this.owner)
				{
					for (int num53 = 0; num53 < 1000; num53++)
					{
						if (Main.projectile[num53].active && Main.projectile[num53].type == 618 && Main.projectile[num53].ai[1] == (float)this.whoAmI)
						{
							Main.projectile[num53].Kill();
						}
					}
					int num54 = Main.rand.Next(5, 9);
					int num55 = Main.rand.Next(5, 9);
					int num56 = Utils.SelectRandom<int>(Main.rand, new int[]
						{
							86,
							90
						});
					int num57 = (num56 == 86) ? 90 : 86;
					for (int num58 = 0; num58 < num54; num58++)
					{
						Vector2 vector = base.Center + Utils.RandomVector2(Main.rand, -30f, 30f);
						Vector2 value4 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
						while (value4.X == 0f && value4.Y == 0f)
						{
							value4 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
						}
						value4.Normalize();
						if (value4.Y > 0.2f)
						{
							value4.Y *= -1f;
						}
						value4 *= (float)Main.rand.Next(70, 101) * 0.1f;
						Projectile.NewProjectile(vector.X, vector.Y, value4.X, value4.Y, 620, (int)((double)this.damage * 0.65), this.knockBack * 0.8f, this.owner, (float)num56, 0f);
					}
					for (int num59 = 0; num59 < num55; num59++)
					{
						Vector2 vector2 = base.Center + Utils.RandomVector2(Main.rand, -30f, 30f);
						Vector2 value5 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
						while (value5.X == 0f && value5.Y == 0f)
						{
							value5 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
						}
						value5.Normalize();
						if (value5.Y > 0.4f)
						{
							value5.Y *= -1f;
						}
						value5 *= (float)Main.rand.Next(40, 81) * 0.1f;
						Projectile.NewProjectile(vector2.X, vector2.Y, value5.X, value5.Y, 620, (int)((double)this.damage * 0.65), this.knockBack * 0.8f, this.owner, (float)num57, 0f);
					}
				}
			}
			else if (this.type == 658)
			{
				for (int num60 = 0; num60 < 10; num60++)
				{
					int num61 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 269, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 0, default(Color), 0.5f);
					if (Main.rand.Next(3) == 0)
					{
						Main.dust[num61].fadeIn = 0.75f + (float)Main.rand.Next(-10, 11) * 0.01f;
						Main.dust[num61].scale = 0.25f + (float)Main.rand.Next(-10, 11) * 0.005f;
						Main.dust[num61].type++;
					}
					else
					{
						Main.dust[num61].scale = 1f + (float)Main.rand.Next(-10, 11) * 0.01f;
					}
					Main.dust[num61].noGravity = true;
					Main.dust[num61].velocity *= 1.25f;
					Main.dust[num61].velocity -= this.oldVelocity / 10f;
				}
			}
			else if (this.type == 620 || this.type == 618)
			{
				if (this.type == 618)
				{
					this.ai[0] = 86f;
				}
				for (int num62 = 0; num62 < 10; num62++)
				{
					int num63 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, (int)this.ai[0], this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 0, default(Color), 0.5f);
					if (Main.rand.Next(3) == 0)
					{
						Main.dust[num63].fadeIn = 0.75f + (float)Main.rand.Next(-10, 11) * 0.01f;
						Main.dust[num63].scale = 0.25f + (float)Main.rand.Next(-10, 11) * 0.005f;
						Main.dust[num63].type++;
					}
					else
					{
						Main.dust[num63].scale = 1f + (float)Main.rand.Next(-10, 11) * 0.01f;
					}
					Main.dust[num63].noGravity = true;
					Main.dust[num63].velocity *= 1.25f;
					Main.dust[num63].velocity -= this.oldVelocity / 10f;
				}
			}
			else if (this.type == 619)
			{
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 50);
				for (int num64 = 0; num64 < 20; num64++)
				{
					int num65 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, (int)this.ai[0], this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 0, default(Color), 0.5f);
					if (Main.rand.Next(3) == 0)
					{
						Main.dust[num65].fadeIn = 1.1f + (float)Main.rand.Next(-10, 11) * 0.01f;
						Main.dust[num65].scale = 0.35f + (float)Main.rand.Next(-10, 11) * 0.01f;
						Main.dust[num65].type++;
					}
					else
					{
						Main.dust[num65].scale = 1.2f + (float)Main.rand.Next(-10, 11) * 0.01f;
					}
					Main.dust[num65].noGravity = true;
					Main.dust[num65].velocity *= 2.5f;
					Main.dust[num65].velocity -= this.oldVelocity / 10f;
				}
				if (Main.myPlayer == this.owner)
				{
					int num66 = Main.rand.Next(3, 6);
					for (int num67 = 0; num67 < num66; num67++)
					{
						Vector2 value6 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
						while (value6.X == 0f && value6.Y == 0f)
						{
							value6 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
						}
						value6.Normalize();
						value6 *= (float)Main.rand.Next(70, 101) * 0.1f;
						Projectile.NewProjectile(this.oldPosition.X + (float)(this.width / 2), this.oldPosition.Y + (float)(this.height / 2), value6.X, value6.Y, 620, (int)((double)this.damage * 0.8), this.knockBack * 0.8f, this.owner, this.ai[0], 0f);
					}
				}
			}
			if (this.type == 601)
			{
				Color portalColor = PortalHelper.GetPortalColor(this.owner, (int)this.ai[0]);
				Color color = portalColor;
				color.A = 255;
				for (int num68 = 0; num68 < 6; num68++)
				{
					Vector2 value7 = Vector2.UnitY.RotatedByRandom(6.2831854820251465) * (3f * Main.rand.NextFloat());
					Dust dust4 = Main.dust[Dust.NewDust(base.Center, 0, 0, 263, 0f, 0f, 0, default(Color), 1f)];
					dust4.position = base.Center;
					dust4.velocity = value7 + this.velocity / 5f;
					dust4.color = color;
					dust4.scale = 2f;
					dust4.noLight = true;
					dust4.noGravity = true;
				}
			}
			if (this.type == 596)
			{
				this.position = base.Center;
				this.width = (this.height = 60);
				base.Center = this.position;
				int num69 = 40;
				if (Main.expertMode)
				{
					num69 = 30;
				}
				this.damage = num69;
				this.Damage();
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
				for (int num70 = 0; num70 < 4; num70++)
				{
					int num71 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num71].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
				}
				for (int num72 = 0; num72 < 20; num72++)
				{
					int num73 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, 0f, 0f, 0, default(Color), 2.5f);
					Main.dust[num73].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.dust[num73].noGravity = true;
					Main.dust[num73].velocity *= 2f;
				}
				for (int num74 = 0; num74 < 10; num74++)
				{
					int num75 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
					Main.dust[num75].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
					Main.dust[num75].noGravity = true;
					Main.dust[num75].velocity *= 2f;
				}
			}
			if (this.type == 659)
			{
				if (this.ai[0] >= 0f)
				{
					this.position = base.Center;
					this.width = (this.height = 40);
					base.Center = this.position;
					this.Damage();
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
					for (int num76 = 0; num76 < 2; num76++)
					{
						int num77 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num77].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					}
					for (int num78 = 0; num78 < 10; num78++)
					{
						int num79 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, 0f, 0f, 0, default(Color), 2.5f);
						Main.dust[num79].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
						Main.dust[num79].noGravity = true;
						Main.dust[num79].velocity *= 2f;
					}
					for (int num80 = 0; num80 < 5; num80++)
					{
						int num81 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
						Main.dust[num81].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
						Main.dust[num81].noGravity = true;
						Main.dust[num81].velocity *= 2f;
					}
				}
			}
			else if (this.type >= 625 && this.type <= 628)
			{
				for (int num82 = 0; num82 < 6; num82++)
				{
					int num83 = Dust.NewDust(this.position, this.width, this.height, 135, 0f, 0f, 100, default(Color), 2f);
					Main.dust[num83].noGravity = true;
					Main.dust[num83].noLight = true;
				}
			}
			if (this.type == 631)
			{
				int num84 = Main.rand.Next(5, 10);
				for (int num85 = 0; num85 < num84; num85++)
				{
					int num86 = Dust.NewDust(base.Center, 0, 0, 229, 0f, 0f, 100, default(Color), 1f);
					Main.dust[num86].velocity *= 1.6f;
					Dust expr_3335_cp_0 = Main.dust[num86];
					expr_3335_cp_0.velocity.Y = expr_3335_cp_0.velocity.Y - 1f;
					Main.dust[num86].position -= Vector2.One * 4f;
					Main.dust[num86].position = Vector2.Lerp(Main.dust[num86].position, base.Center, 0.5f);
					Main.dust[num86].noGravity = true;
				}
			}
			if (this.type == 539)
			{
				this.position = base.Center;
				this.width = (this.height = 80);
				base.Center = this.position;
				this.Damage();
				Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 7);
				for (int num87 = 0; num87 < 4; num87++)
				{
					int num88 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num88].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
				}
				for (int num89 = 0; num89 < 20; num89++)
				{
					int num90 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 176, 0f, 0f, 200, default(Color), 3.7f);
					Main.dust[num90].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.dust[num90].noGravity = true;
					Main.dust[num90].velocity *= 3f;
				}
				for (int num91 = 0; num91 < 20; num91++)
				{
					int num92 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 180, 0f, 0f, 0, default(Color), 2.7f);
					Main.dust[num92].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
					Main.dust[num92].noGravity = true;
					Main.dust[num92].velocity *= 3f;
				}
				for (int num93 = 0; num93 < 10; num93++)
				{
					int num94 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
					Main.dust[num94].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
					Main.dust[num94].noGravity = true;
					Main.dust[num94].velocity *= 3f;
				}
			}
			else if (this.type == 585)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 27);
				for (int num95 = 0; num95 < 20; num95++)
				{
					int num96 = Dust.NewDust(this.position, this.width, this.height, 26, 0f, 0f, 100, default(Color), 1f);
					Main.dust[num96].noGravity = true;
					Main.dust[num96].velocity *= 1.2f;
					Main.dust[num96].scale = 1.3f;
					Main.dust[num96].velocity -= this.oldVelocity * 0.3f;
					num96 = Dust.NewDust(new Vector2(this.position.X + 4f, this.position.Y + 4f), this.width - 8, this.height - 8, 27, 0f, 0f, 100, default(Color), 2f);
					Main.dust[num96].noGravity = true;
					Main.dust[num96].velocity *= 3f;
				}
			}
			else if (this.type == 590)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 27);
				for (int num97 = 0; num97 < 10; num97++)
				{
					int num98 = Dust.NewDust(this.position, this.width, this.height, 165, 0f, 0f, 50, default(Color), 1.5f);
					Main.dust[num98].velocity *= 2f;
					Main.dust[num98].noGravity = true;
				}
				float num99 = 0.6f + Main.rand.NextFloat() * 0.4f;
				int num100 = Gore.NewGore(this.position, Vector2.Zero, 375, num99);
				Main.gore[num100].velocity *= 0.3f;
				num100 = Gore.NewGore(this.position, Vector2.Zero, 376, num99);
				Main.gore[num100].velocity *= 0.3f;
				num100 = Gore.NewGore(this.position, Vector2.Zero, 377, num99);
				Main.gore[num100].velocity *= 0.3f;
			}
			else if (this.type == 587)
			{
				Color newColor2 = Main.hslToRgb(this.ai[1], 1f, 0.5f);
				newColor2.A = 200;
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
				for (int num101 = 0; num101 < 10; num101++)
				{
					int num102 = Dust.NewDust(this.position, this.width, this.height, 76, 0f, 0f, 0, newColor2, 1f);
					Main.dust[num102].noGravity = true;
					Main.dust[num102].velocity *= 1.2f;
					Main.dust[num102].scale = 0.9f;
					Main.dust[num102].velocity -= this.oldVelocity * 0.3f;
					num102 = Dust.NewDust(new Vector2(this.position.X + 4f, this.position.Y + 4f), this.width - 8, this.height - 8, 76, 0f, 0f, 0, newColor2, 1.1f);
					Main.dust[num102].noGravity = true;
					Main.dust[num102].velocity *= 2f;
				}
			}
			else if (this.type == 572)
			{
				for (int num103 = 0; num103 < 15; num103++)
				{
					int num104 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 40, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 100, default(Color), 1f);
					Main.dust[num104].velocity *= 3f;
					Main.dust[num104].noGravity = true;
					Main.dust[num104].scale = 1.25f;
					Main.dust[num104].position = (base.Center + this.position) / 2f;
				}
			}
			else if (this.type == 581)
			{
				for (int num105 = 0; num105 < 30; num105++)
				{
					int num106 = Utils.SelectRandom<int>(Main.rand, new int[]
						{
							229,
							229,
							161
						});
					Dust dust5 = Main.dust[Dust.NewDust(this.position, this.width, this.height, num106, 0f, 0f, 0, default(Color), 1f)];
					dust5.noGravity = true;
					dust5.scale = 1.25f + Main.rand.NextFloat();
					dust5.fadeIn = 0.25f;
					dust5.velocity *= 2f;
					dust5.noLight = true;
				}
			}
			if (this.type == 405)
			{
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 54);
				Vector2 arg_3E13_0 = base.Center;
				for (int num107 = 0; num107 < 20; num107++)
				{
					int num108 = 10;
					int num109 = Dust.NewDust(base.Center - Vector2.One * (float)num108, num108 * 2, num108 * 2, 212, 0f, 0f, 0, default(Color), 1f);
					Dust dust6 = Main.dust[num109];
					Vector2 value8 = Vector2.Normalize(dust6.position - base.Center);
					dust6.position = base.Center + value8 * (float)num108 * this.scale;
					if (num107 < 30)
					{
						dust6.velocity = value8 * dust6.velocity.Length();
					}
					else
					{
						dust6.velocity = value8 * (float)Main.rand.Next(45, 91) / 10f;
					}
					dust6.color = Main.hslToRgb((float)(0.40000000596046448 + Main.rand.NextDouble() * 0.20000000298023224), 0.9f, 0.5f);
					dust6.color = Color.Lerp(dust6.color, Color.White, 0.3f);
					dust6.noGravity = true;
					dust6.scale = 0.7f;
				}
			}
			if (this.type == 501)
			{
				Main.PlaySound(13, (int)this.position.X, (int)this.position.Y, 1);
				int num110 = 20;
				this.position.X = this.position.X - (float)num110;
				this.position.Y = this.position.Y - (float)num110;
				this.width += num110 * 2;
				this.height += num110 * 2;
				num110 += 20;
				for (int num111 = 0; num111 < 20; num111++)
				{
					int num112 = Dust.NewDust(this.position, this.width, this.height, 188, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num112].velocity *= 0.5f;
				}
				for (int num113 = 0; num113 < 5; num113++)
				{
					int num114 = Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), default(Vector2), Main.rand.Next(435, 438), 1f);
					Main.gore[num114].velocity *= 0.5f;
					if (num113 == 0)
					{
						Gore expr_4107_cp_0 = Main.gore[num114];
						expr_4107_cp_0.velocity.X = expr_4107_cp_0.velocity.X + 1f;
						Gore expr_4125_cp_0 = Main.gore[num114];
						expr_4125_cp_0.velocity.Y = expr_4125_cp_0.velocity.Y + 1f;
					}
					else if (num113 == 1)
					{
						Gore expr_414D_cp_0 = Main.gore[num114];
						expr_414D_cp_0.velocity.X = expr_414D_cp_0.velocity.X - 1f;
						Gore expr_416B_cp_0 = Main.gore[num114];
						expr_416B_cp_0.velocity.Y = expr_416B_cp_0.velocity.Y + 1f;
					}
					else if (num113 == 2)
					{
						Gore expr_4190_cp_0 = Main.gore[num114];
						expr_4190_cp_0.velocity.X = expr_4190_cp_0.velocity.X + 1f;
						Gore expr_41AE_cp_0 = Main.gore[num114];
						expr_41AE_cp_0.velocity.Y = expr_41AE_cp_0.velocity.Y - 1f;
					}
					else
					{
						Gore expr_41CE_cp_0 = Main.gore[num114];
						expr_41CE_cp_0.velocity.X = expr_41CE_cp_0.velocity.X - 1f;
						Gore expr_41EC_cp_0 = Main.gore[num114];
						expr_41EC_cp_0.velocity.Y = expr_41EC_cp_0.velocity.Y - 1f;
					}
					Main.gore[num114].velocity *= 0.5f;
				}
				this.position.X = this.position.X - (float)num110;
				this.position.Y = this.position.Y - (float)num110;
				this.width += num110 * 2;
				this.height += num110 * 2;
				this.Damage();
			}
			if (this.type == 410)
			{
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 54);
				Vector2 arg_42B0_0 = base.Center;
				for (int num115 = 0; num115 < 10; num115++)
				{
					int num116 = (int)(10f * this.ai[1]);
					int num117 = Dust.NewDust(base.Center - Vector2.One * (float)num116, num116 * 2, num116 * 2, 212, 0f, 0f, 0, default(Color), 1f);
					Dust dust7 = Main.dust[num117];
					Vector2 value9 = Vector2.Normalize(dust7.position - base.Center);
					dust7.position = base.Center + value9 * (float)num116 * this.scale;
					if (num115 < 30)
					{
						dust7.velocity = value9 * dust7.velocity.Length();
					}
					else
					{
						dust7.velocity = value9 * (float)Main.rand.Next(45, 91) / 10f;
					}
					dust7.color = Main.hslToRgb((float)(0.40000000596046448 + Main.rand.NextDouble() * 0.20000000298023224), 0.9f, 0.5f);
					dust7.color = Color.Lerp(dust7.color, Color.White, 0.3f);
					dust7.noGravity = true;
					dust7.scale = 0.7f;
				}
			}
			if (this.type == 629 && Main.netMode != 1)
			{
				int num118 = Main.npc[(int)this.ai[0]].type;
				if (num118 <= 493)
				{
					if (num118 != 422)
					{
						if (num118 == 493)
						{
							if (NPC.ShieldStrengthTowerStardust != 0)
							{
								Main.npc[(int)this.ai[0]].ai[3] = 1f;
							}
							NPC.ShieldStrengthTowerStardust = (int)MathHelper.Clamp((float)(NPC.ShieldStrengthTowerStardust - 1), 0f, (float)NPC.ShieldStrengthTowerMax);
						}
					}
					else
					{
						if (NPC.ShieldStrengthTowerVortex != 0)
						{
							Main.npc[(int)this.ai[0]].ai[3] = 1f;
						}
						NPC.ShieldStrengthTowerVortex = (int)MathHelper.Clamp((float)(NPC.ShieldStrengthTowerVortex - 1), 0f, (float)NPC.ShieldStrengthTowerMax);
					}
				}
				else if (num118 != 507)
				{
					if (num118 == 517)
					{
						if (NPC.ShieldStrengthTowerSolar != 0)
						{
							Main.npc[(int)this.ai[0]].ai[3] = 1f;
						}
						NPC.ShieldStrengthTowerSolar = (int)MathHelper.Clamp((float)(NPC.ShieldStrengthTowerSolar - 1), 0f, (float)NPC.ShieldStrengthTowerMax);
					}
				}
				else
				{
					if (NPC.ShieldStrengthTowerNebula != 0)
					{
						Main.npc[(int)this.ai[0]].ai[3] = 1f;
					}
					NPC.ShieldStrengthTowerNebula = (int)MathHelper.Clamp((float)(NPC.ShieldStrengthTowerNebula - 1), 0f, (float)NPC.ShieldStrengthTowerMax);
				}
				Main.npc[(int)this.ai[0]].netUpdate = true;
				NetMessage.SendData(101, -1, -1, "", 0, 0f, 0f, 0f, 0, 0, 0);
			}
			if (this.aiStyle == 105 && this.owner == Main.myPlayer && this.ai[1] == 0f)
			{
				Vector2 value10 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
				value10.Normalize();
				value10 *= 0.3f;
				Projectile.NewProjectile(base.Center.X, base.Center.Y, value10.X, value10.Y, Main.rand.Next(569, 572), this.damage, 0f, this.owner, 0f, 0f);
			}
			if (this.type == 452)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 103);
				this.position = base.Center;
				this.width = (this.height = 144);
				this.position.X = this.position.X - (float)(this.width / 2);
				this.position.Y = this.position.Y - (float)(this.height / 2);
				for (int num119 = 0; num119 < 4; num119++)
				{
					Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
				}
				for (int num120 = 0; num120 < 40; num120++)
				{
					int num121 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 229, 0f, 0f, 0, default(Color), 2.5f);
					Main.dust[num121].noGravity = true;
					Main.dust[num121].velocity *= 3f;
					num121 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 229, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num121].velocity *= 2f;
					Main.dust[num121].noGravity = true;
				}
				for (int num122 = 0; num122 < 1; num122++)
				{
					int num123 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num123].velocity *= 0.3f;
					Gore expr_4945_cp_0 = Main.gore[num123];
					expr_4945_cp_0.velocity.X = expr_4945_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.05f;
					Gore expr_4973_cp_0 = Main.gore[num123];
					expr_4973_cp_0.velocity.Y = expr_4973_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.05f;
				}
				this.Damage();
			}
			if (this.type == 454)
			{
				Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 6);
				this.position = base.Center;
				this.width = (this.height = 208);
				this.position.X = this.position.X - (float)(this.width / 2);
				this.position.Y = this.position.Y - (float)(this.height / 2);
				for (int num124 = 0; num124 < 7; num124++)
				{
					int num125 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num125].position = new Vector2((float)(this.width / 2), 0f).RotatedBy(6.2831854820251465 * Main.rand.NextDouble(), default(Vector2)) * (float)Main.rand.NextDouble() + base.Center;
				}
				for (int num126 = 0; num126 < 60; num126++)
				{
					int num127 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 229, 0f, 0f, 0, default(Color), 2.5f);
					Main.dust[num127].position = new Vector2((float)(this.width / 2), 0f).RotatedBy(6.2831854820251465 * Main.rand.NextDouble(), default(Vector2)) * (float)Main.rand.NextDouble() + base.Center;
					Main.dust[num127].noGravity = true;
					Main.dust[num127].velocity *= 1f;
					num127 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 229, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num127].position = new Vector2((float)(this.width / 2), 0f).RotatedBy(6.2831854820251465 * Main.rand.NextDouble(), default(Vector2)) * (float)Main.rand.NextDouble() + base.Center;
					Main.dust[num127].velocity *= 1f;
					Main.dust[num127].noGravity = true;
				}
				for (int num128 = 0; num128 < 3; num128++)
				{
					int num129 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num129].velocity *= 0.3f;
					Gore expr_4D80_cp_0 = Main.gore[num129];
					expr_4D80_cp_0.velocity.X = expr_4D80_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.05f;
					Gore expr_4DAE_cp_0 = Main.gore[num129];
					expr_4DAE_cp_0.velocity.Y = expr_4DAE_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.05f;
				}
				this.Damage();
			}
			if (this.type == 467)
			{
				this.position = base.Center;
				this.width = (this.height = 176);
				base.Center = this.position;
				this.Damage();
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
				for (int num130 = 0; num130 < 4; num130++)
				{
					int num131 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num131].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
				}
				for (int num132 = 0; num132 < 30; num132++)
				{
					int num133 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 200, default(Color), 3.7f);
					Main.dust[num133].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.dust[num133].noGravity = true;
					Main.dust[num133].velocity *= 3f;
					num133 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num133].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.dust[num133].velocity *= 2f;
					Main.dust[num133].noGravity = true;
					Main.dust[num133].fadeIn = 2.5f;
				}
				for (int num134 = 0; num134 < 10; num134++)
				{
					int num135 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 0, default(Color), 2.7f);
					Main.dust[num135].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
					Main.dust[num135].noGravity = true;
					Main.dust[num135].velocity *= 3f;
				}
				for (int num136 = 0; num136 < 10; num136++)
				{
					int num137 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
					Main.dust[num137].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
					Main.dust[num137].noGravity = true;
					Main.dust[num137].velocity *= 3f;
				}
				for (int num138 = 0; num138 < 2; num138++)
				{
					int num139 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num139].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.gore[num139].velocity *= 0.3f;
					Gore expr_53A3_cp_0 = Main.gore[num139];
					expr_53A3_cp_0.velocity.X = expr_53A3_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.05f;
					Gore expr_53D1_cp_0 = Main.gore[num139];
					expr_53D1_cp_0.velocity.Y = expr_53D1_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.05f;
				}
			}
			if (this.type == 468)
			{
				this.position = base.Center;
				this.width = (this.height = 176);
				base.Center = this.position;
				this.Damage();
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
				for (int num140 = 0; num140 < 4; num140++)
				{
					int num141 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num141].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
				}
				for (int num142 = 0; num142 < 20; num142++)
				{
					int num143 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, 0f, 0f, 200, default(Color), 3.7f);
					Main.dust[num143].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.dust[num143].noGravity = true;
					Main.dust[num143].velocity *= 3f;
					num143 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num143].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.dust[num143].velocity *= 2f;
					Main.dust[num143].noGravity = true;
					Main.dust[num143].fadeIn = 2.5f;
				}
				for (int num144 = 0; num144 < 10; num144++)
				{
					int num145 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, 0f, 0f, 0, default(Color), 2.7f);
					Main.dust[num145].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
					Main.dust[num145].noGravity = true;
					Main.dust[num145].velocity *= 3f;
				}
				for (int num146 = 0; num146 < 10; num146++)
				{
					int num147 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
					Main.dust[num147].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
					Main.dust[num147].noGravity = true;
					Main.dust[num147].velocity *= 3f;
				}
				for (int num148 = 0; num148 < 2; num148++)
				{
					int num149 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num149].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.gore[num149].velocity *= 0.3f;
					Gore expr_59C3_cp_0 = Main.gore[num149];
					expr_59C3_cp_0.velocity.X = expr_59C3_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.05f;
					Gore expr_59F1_cp_0 = Main.gore[num149];
					expr_59F1_cp_0.velocity.Y = expr_59F1_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.05f;
				}
			}
			if (this.type == 485)
			{
				for (int num150 = 0; num150 < 15; num150++)
				{
					int num151 = Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num151].noGravity = true;
					Main.dust[num151].velocity -= this.oldVelocity * (float)Main.rand.Next(20, 60) * 0.01f;
				}
			}
			else if (this.type == 484)
			{
				for (int num152 = 0; num152 < 5; num152++)
				{
					int num153 = Dust.NewDust(this.position, this.width, this.height, 78, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num153].noGravity = true;
					Main.dust[num153].velocity -= this.oldVelocity / 5f;
					Main.dust[num153].scale = 0.85f;
				}
			}
			else if (this.type == 483)
			{
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
				if (this.owner == Main.myPlayer)
				{
					int num154 = Main.rand.Next(4, 8);
					int[] array = new int[num154];
					int num155 = 0;
					for (int num156 = 0; num156 < 200; num156++)
					{
						if (Main.npc[num156].CanBeChasedBy(this, true) && Collision.CanHitLine(this.position, this.width, this.height, Main.npc[num156].position, Main.npc[num156].width, Main.npc[num156].height))
						{
							array[num155] = num156;
							num155++;
							if (num155 == num154)
							{
								break;
							}
						}
					}
					if (num155 > 1)
					{
						for (int num157 = 0; num157 < 100; num157++)
						{
							int num158 = Main.rand.Next(num155);
							int num159;
							for (num159 = num158; num159 == num158; num159 = Main.rand.Next(num155))
							{
							}
							int num160 = array[num158];
							array[num158] = array[num159];
							array[num159] = num160;
						}
					}
					Vector2 vector3 = new Vector2(-1f, -1f);
					for (int num161 = 0; num161 < num155; num161++)
					{
						Vector2 value11 = Main.npc[array[num161]].Center - base.Center;
						value11.Normalize();
						vector3 += value11;
					}
					vector3.Normalize();
					for (int num162 = 0; num162 < num154; num162++)
					{
						float scaleFactor = (float)Main.rand.Next(8, 15);
						Vector2 vector4 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
						vector4.Normalize();
						if (num155 > 0)
						{
							vector4 += vector3;
							vector4.Normalize();
						}
						vector4 *= scaleFactor;
						if (num155 > 0)
						{
							num155--;
							vector4 = Main.npc[array[num155]].Center - base.Center;
							vector4.Normalize();
							vector4 *= scaleFactor;
						}
						Projectile.NewProjectile(base.Center.X, base.Center.Y, vector4.X, vector4.Y, 484, (int)((double)this.damage * 0.7), this.knockBack * 0.7f, this.owner, 0f, 0f);
					}
				}
				for (int num163 = 0; num163 < 20; num163++)
				{
					int num164 = Dust.NewDust(this.position, this.width, this.height, 78, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num164].noGravity = true;
					Main.dust[num164].velocity *= 4f;
				}
				for (int num165 = 0; num165 < 7; num165++)
				{
					int num166 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num166].velocity *= 0.9f;
					Main.dust[num166].scale = 0.9f;
				}
				for (int num167 = 0; num167 < 3; num167++)
				{
					int num168 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
					Main.dust[num168].noGravity = true;
					Main.dust[num168].velocity *= 3f;
					num168 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num168].velocity *= 2f;
				}
				int num169 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
				Main.gore[num169].velocity *= 0.3f;
				Gore expr_6076_cp_0 = Main.gore[num169];
				expr_6076_cp_0.velocity.X = expr_6076_cp_0.velocity.X + (float)Main.rand.Next(-1, 2);
				Gore expr_609C_cp_0 = Main.gore[num169];
				expr_609C_cp_0.velocity.Y = expr_609C_cp_0.velocity.Y + (float)Main.rand.Next(-1, 2);
				if (this.owner == Main.myPlayer)
				{
					int num170 = 100;
					this.position.X = this.position.X - (float)(num170 / 2);
					this.position.Y = this.position.Y - (float)(num170 / 2);
					this.width += num170;
					this.height++;
					this.penetrate = -1;
					this.Damage();
				}
			}
			if (this.type == 523)
			{
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 54);
				for (int num171 = 0; num171 < 25; num171++)
				{
					int num172 = Dust.NewDust(this.position, this.width, this.height, 256, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num172].noGravity = true;
					Main.dust[num172].position = (Main.dust[num172].position + this.position) / 2f;
					Main.dust[num172].velocity = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
					Main.dust[num172].velocity.Normalize();
					Main.dust[num172].velocity *= (float)Main.rand.Next(1, 30) * 0.1f;
					Main.dust[num172].alpha = this.alpha;
				}
			}
			else if (this.type == 522)
			{
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 118);
				for (int num173 = 0; num173 < 10; num173++)
				{
					int num174 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 254, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 0, default(Color), 0.5f);
					if (Main.rand.Next(3) == 0)
					{
						Main.dust[num174].fadeIn = 0.75f + (float)Main.rand.Next(-10, 11) * 0.01f;
						Main.dust[num174].scale = 0.25f + (float)Main.rand.Next(-10, 11) * 0.005f;
						Main.dust[num174].type++;
					}
					else
					{
						Main.dust[num174].scale = 1f + (float)Main.rand.Next(-10, 11) * 0.01f;
					}
					Main.dust[num174].noGravity = true;
					Main.dust[num174].velocity *= 1.25f;
					Main.dust[num174].velocity -= this.oldVelocity / 10f;
				}
			}
			else if (this.type == 521)
			{
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 110);
				for (int num175 = 0; num175 < 20; num175++)
				{
					int num176 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 254, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 0, default(Color), 0.5f);
					if (Main.rand.Next(3) == 0)
					{
						Main.dust[num176].fadeIn = 1.1f + (float)Main.rand.Next(-10, 11) * 0.01f;
						Main.dust[num176].scale = 0.35f + (float)Main.rand.Next(-10, 11) * 0.01f;
						Main.dust[num176].type++;
					}
					else
					{
						Main.dust[num176].scale = 1.2f + (float)Main.rand.Next(-10, 11) * 0.01f;
					}
					Main.dust[num176].noGravity = true;
					Main.dust[num176].velocity *= 2.5f;
					Main.dust[num176].velocity -= this.oldVelocity / 10f;
				}
				if (Main.myPlayer == this.owner)
				{
					int num177 = Main.rand.Next(3, 6);
					for (int num178 = 0; num178 < num177; num178++)
					{
						Vector2 value12 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
						while (value12.X == 0f && value12.Y == 0f)
						{
							value12 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
						}
						value12.Normalize();
						value12 *= (float)Main.rand.Next(70, 101) * 0.1f;
						Projectile.NewProjectile(this.oldPosition.X + (float)(this.width / 2), this.oldPosition.Y + (float)(this.height / 2), value12.X, value12.Y, 522, (int)((double)this.damage * 0.8), this.knockBack * 0.8f, this.owner, 0f, 0f);
					}
				}
			}
			if (this.type == 520)
			{
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 50);
				for (int num179 = 0; num179 < 10; num179++)
				{
					int num180 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 252, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 0, default(Color), 0.75f);
					Main.dust[num180].noGravity = true;
					Main.dust[num180].velocity -= this.oldVelocity / 3f;
				}
			}
			if (this.type == 459)
			{
				int num181 = 3;
				int num182 = 10;
				int num183 = 0;
				if (this.scale >= 1f)
				{
					this.position = base.Center;
					this.width = (this.height = 144);
					base.Center = this.position;
					num181 = 7;
					num182 = 30;
					num183 = 2;
					this.Damage();
				}
				for (int num184 = 0; num184 < num181; num184++)
				{
					int num185 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num185].position = new Vector2((float)(this.width / 2), 0f).RotatedBy(6.2831854820251465 * Main.rand.NextDouble(), default(Vector2)) * (float)Main.rand.NextDouble() + base.Center;
				}
				for (int num186 = 0; num186 < num182; num186++)
				{
					int num187 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 226, 0f, 0f, 0, default(Color), 1.5f);
					Main.dust[num187].position = new Vector2((float)(this.width / 2), 0f).RotatedBy(6.2831854820251465 * Main.rand.NextDouble(), default(Vector2)) * (float)Main.rand.NextDouble() + base.Center;
					Main.dust[num187].noGravity = true;
					Main.dust[num187].velocity *= 1f;
				}
				for (int num188 = 0; num188 < num183; num188++)
				{
					int num189 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num189].velocity *= 0.3f;
					Gore expr_6A98_cp_0 = Main.gore[num189];
					expr_6A98_cp_0.velocity.X = expr_6A98_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.05f;
					Gore expr_6AC6_cp_0 = Main.gore[num189];
					expr_6AC6_cp_0.velocity.Y = expr_6AC6_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.05f;
				}
			}
			if (this.owner != Main.myPlayer && this.type == 453 && Main.player[this.owner].mount.AbilityActive)
			{
				Main.player[this.owner].mount.UseAbility(Main.player[this.owner], this.position, false);
			}
			if (this.type == 441)
			{
				Main.player[this.owner].mount.StopAbilityCharge();
			}
			if (this.type == 444)
			{
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 96);
				int num190 = Main.rand.Next(5, 9);
				for (int num191 = 0; num191 < num190; num191++)
				{
					int num192 = Dust.NewDust(base.Center, 0, 0, 171, 0f, 0f, 100, default(Color), 1.4f);
					Main.dust[num192].velocity *= 0.8f;
					Main.dust[num192].position = Vector2.Lerp(Main.dust[num192].position, base.Center, 0.5f);
					Main.dust[num192].noGravity = true;
				}
				if (this.owner == Main.myPlayer)
				{
					Vector2 value13 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY);
					if (Main.player[this.owner].gravDir == -1f)
					{
						value13.Y = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y;
					}
					Vector2 value14 = Vector2.Normalize(value13 - base.Center);
					value14 *= this.localAI[1];
					Projectile.NewProjectile(base.Center.X, base.Center.Y, value14.X, value14.Y, (int)this.localAI[0], this.damage, this.knockBack, this.owner, 0f, 0f);
				}
			}
			if (this.type == 472)
			{
				for (int num193 = 0; num193 < 20; num193++)
				{
					int num194 = Dust.NewDust(this.position, this.width, this.height, 30, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num194].noGravity = true;
					Main.dust[num194].velocity *= 0.45f;
					Main.dust[num194].velocity += this.velocity * 0.9f;
				}
			}
			if (this.type == 639 || this.type == 640)
			{
				int num195 = Main.rand.Next(5, 10);
				for (int num196 = 0; num196 < num195; num196++)
				{
					int num197 = Dust.NewDust(base.Center, 0, 0, 220, 0f, 0f, 100, default(Color), 0.5f);
					Main.dust[num197].velocity *= 1.6f;
					Dust expr_6E6D_cp_0 = Main.dust[num197];
					expr_6E6D_cp_0.velocity.Y = expr_6E6D_cp_0.velocity.Y - 1f;
					Main.dust[num197].position = Vector2.Lerp(Main.dust[num197].position, base.Center, 0.5f);
					Main.dust[num197].noGravity = true;
				}
				if (this.owner == Main.myPlayer && this.type == 639)
				{
					int num198 = num + 1;
					int nextSlot = Projectile.GetNextSlot();
					if (Main.ProjectileUpdateLoopIndex < nextSlot && Main.ProjectileUpdateLoopIndex != -1)
					{
						num198++;
					}
					Vector2 vector5 = new Vector2(this.ai[0], this.ai[1]);
					Projectile.NewProjectile(this.localAI[0], this.localAI[1], vector5.X, vector5.Y, 640, this.damage, this.knockBack, this.owner, 0f, (float)num198);
				}
			}
			if (this.type == 435)
			{
				int num199 = Main.rand.Next(5, 10);
				for (int num200 = 0; num200 < num199; num200++)
				{
					int num201 = Dust.NewDust(base.Center, 0, 0, 226, 0f, 0f, 100, default(Color), 0.5f);
					Main.dust[num201].velocity *= 1.6f;
					Dust expr_6FE3_cp_0 = Main.dust[num201];
					expr_6FE3_cp_0.velocity.Y = expr_6FE3_cp_0.velocity.Y - 1f;
					Main.dust[num201].position = Vector2.Lerp(Main.dust[num201].position, base.Center, 0.5f);
					Main.dust[num201].noGravity = true;
				}
			}
			if (this.type == 436)
			{
				int num202 = Main.rand.Next(5, 10);
				for (int num203 = 0; num203 < num202; num203++)
				{
					int num204 = Dust.NewDust(base.Center, 0, 0, 220, 0f, 0f, 100, default(Color), 0.5f);
					Main.dust[num204].velocity *= 1.6f;
					Dust expr_70BF_cp_0 = Main.dust[num204];
					expr_70BF_cp_0.velocity.Y = expr_70BF_cp_0.velocity.Y - 1f;
					Main.dust[num204].position = Vector2.Lerp(Main.dust[num204].position, base.Center, 0.5f);
					Main.dust[num204].noGravity = true;
				}
			}
			if (this.type == 462)
			{
				int num205 = Main.rand.Next(5, 10);
				for (int num206 = 0; num206 < num205; num206++)
				{
					int num207 = Dust.NewDust(base.Center, 0, 0, 229, 0f, 0f, 100, default(Color), 0.5f);
					Main.dust[num207].velocity *= 1.6f;
					Dust expr_719B_cp_0 = Main.dust[num207];
					expr_719B_cp_0.velocity.Y = expr_719B_cp_0.velocity.Y - 1f;
					Main.dust[num207].position -= Vector2.One * 4f;
					Main.dust[num207].position = Vector2.Lerp(Main.dust[num207].position, base.Center, 0.5f);
					Main.dust[num207].noGravity = true;
				}
			}
			if (this.type == 442)
			{
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 94);
				int num208 = Main.rand.Next(3, 7);
				for (int num209 = 0; num209 < num208; num209++)
				{
					int num210 = Dust.NewDust(this.position, this.width, this.height, 135, 0f, 0f, 100, default(Color), 2.1f);
					Main.dust[num210].velocity *= 2f;
					Main.dust[num210].noGravity = true;
				}
				if (Main.myPlayer == this.owner)
				{
					Rectangle value15 = new Rectangle((int)base.Center.X - 40, (int)base.Center.Y - 40, 80, 80);
					for (int num211 = 0; num211 < 1000; num211++)
					{
						if (num211 != this.whoAmI && Main.projectile[num211].active && Main.projectile[num211].owner == this.owner && Main.projectile[num211].type == 443 && Main.projectile[num211].getRect().Intersects(value15))
						{
							Main.projectile[num211].ai[1] = 1f;
							Main.projectile[num211].velocity = (base.Center - Main.projectile[num211].Center) / 5f;
							Main.projectile[num211].netUpdate = true;
						}
					}
					Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 443, this.damage, 0f, this.owner, 0f, 0f);
				}
			}
			if (this.type == 440)
			{
				int num212 = Main.rand.Next(3, 7);
				for (int num213 = 0; num213 < num212; num213++)
				{
					int num214 = Dust.NewDust(base.Center - this.velocity / 2f, 0, 0, 135, 0f, 0f, 100, default(Color), 2.1f);
					Main.dust[num214].velocity *= 2f;
					Main.dust[num214].noGravity = true;
				}
			}
			if (this.type == 606)
			{
				int num215 = Main.rand.Next(3, 7);
				for (int num216 = 0; num216 < num215; num216++)
				{
					int num217 = Dust.NewDust(base.Center - this.velocity / 2f, 0, 0, 182, 0f, 0f, 100, default(Color), 1.6f);
					Main.dust[num217].velocity *= 1.5f;
					Main.dust[num217].noGravity = true;
				}
			}
			if (this.type == 449)
			{
				int num218 = Main.rand.Next(3, 7);
				for (int num219 = 0; num219 < num218; num219++)
				{
					int num220 = Dust.NewDust(base.Center - this.velocity / 2f, 0, 0, 228, 0f, 0f, 100, default(Color), 2.1f);
					Main.dust[num220].velocity *= 2f;
					Main.dust[num220].noGravity = true;
				}
			}
			if (this.type == 495)
			{
				for (int num221 = 0; num221 < 15; num221++)
				{
					int num222 = Dust.NewDust(base.Center, 10, 10, 27, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num222].noGravity = true;
					Main.dust[num222].velocity -= this.oldVelocity * 0.3f;
				}
			}
			if (this.type == 497)
			{
				for (int num223 = 0; num223 < 15; num223++)
				{
					int num224 = Dust.NewDust(base.Center, 10, 10, 27, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num224].noGravity = true;
					Main.dust[num224].velocity *= 2f;
					Main.dust[num224].velocity -= this.oldVelocity * 0.3f;
					Main.dust[num224].scale += (float)Main.rand.Next(150) * 0.001f;
				}
			}
			if (this.type == 448)
			{
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
				this.position = base.Center;
				this.width = (this.height = 112);
				this.position.X = this.position.X - (float)(this.width / 2);
				this.position.Y = this.position.Y - (float)(this.height / 2);
				for (int num225 = 0; num225 < 4; num225++)
				{
					Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
				}
				for (int num226 = 0; num226 < 40; num226++)
				{
					int num227 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 228, 0f, 0f, 0, default(Color), 2.5f);
					Main.dust[num227].noGravity = true;
					Main.dust[num227].velocity *= 3f;
					num227 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 228, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num227].velocity *= 2f;
					Main.dust[num227].noGravity = true;
				}
				for (int num228 = 0; num228 < 1; num228++)
				{
					int num229 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num229].velocity *= 0.3f;
					Gore expr_7ACF_cp_0 = Main.gore[num229];
					expr_7ACF_cp_0.velocity.X = expr_7ACF_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.05f;
					Gore expr_7AFF_cp_0 = Main.gore[num229];
					expr_7AFF_cp_0.velocity.Y = expr_7AFF_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.05f;
				}
				this.Damage();
			}
			if (this.type == 616)
			{
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
				this.position = base.Center;
				this.width = (this.height = 80);
				this.position.X = this.position.X - (float)(this.width / 2);
				this.position.Y = this.position.Y - (float)(this.height / 2);
				for (int num230 = 0; num230 < 4; num230++)
				{
					Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
				}
				for (int num231 = 0; num231 < 40; num231++)
				{
					int num232 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 229, 0f, 0f, 200, default(Color), 2.5f);
					Main.dust[num232].noGravity = true;
					Main.dust[num232].velocity *= 2f;
					num232 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 229, 0f, 0f, 200, default(Color), 1.5f);
					Main.dust[num232].velocity *= 1.2f;
					Main.dust[num232].noGravity = true;
				}
				for (int num233 = 0; num233 < 1; num233++)
				{
					int num234 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num234].velocity *= 0.3f;
					Gore expr_7E0E_cp_0 = Main.gore[num234];
					expr_7E0E_cp_0.velocity.X = expr_7E0E_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.05f;
					Gore expr_7E3E_cp_0 = Main.gore[num234];
					expr_7E3E_cp_0.velocity.Y = expr_7E3E_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.05f;
				}
				this.Damage();
			}
			if (this.type == 502)
			{
				Vector2 value16 = new Vector2((float)this.width, (float)this.height) / 2f;
				for (int num235 = 0; num235 < this.oldPos.Length; num235++)
				{
					if (!(this.oldPos[num235] == Vector2.Zero))
					{
						int num236 = Dust.NewDust(this.oldPos[num235] + value16, 0, 0, 66, 0f, 0f, 150, Color.Transparent, 0.7f);
						Main.dust[num236].color = Main.hslToRgb(Main.rand.NextFloat(), 1f, 0.5f);
						Main.dust[num236].noGravity = true;
					}
				}
			}
			if (this.type == 510)
			{
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 107);
				Gore.NewGore(base.Center, -this.oldVelocity * 0.2f, 704, 1f);
				Gore.NewGore(base.Center, -this.oldVelocity * 0.2f, 705, 1f);
				if (this.owner == Main.myPlayer)
				{
					int num237 = Main.rand.Next(20, 31);
					for (int num238 = 0; num238 < num237; num238++)
					{
						Vector2 value17 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
						value17.Normalize();
						value17 *= (float)Main.rand.Next(10, 201) * 0.01f;
						Projectile.NewProjectile(base.Center.X, base.Center.Y, value17.X, value17.Y, 511 + Main.rand.Next(3), this.damage, 1f, this.owner, 0f, (float)Main.rand.Next(-45, 1));
					}
				}
			}
			if (this.type == 408)
			{
				for (int num239 = 0; num239 < 15; num239++)
				{
					int num240 = Dust.NewDust(base.Center - Vector2.One * 10f, 50, 50, 5, 0f, -2f, 0, default(Color), 1f);
					Main.dust[num240].velocity /= 2f;
				}
				int num241 = 10;
				int num242 = Gore.NewGore(base.Center, this.velocity * 0.8f, 584, 1f);
				Main.gore[num242].timeLeft /= num241;
				num242 = Gore.NewGore(base.Center, this.velocity * 0.9f, 585, 1f);
				Main.gore[num242].timeLeft /= num241;
				num242 = Gore.NewGore(base.Center, this.velocity * 1f, 586, 1f);
				Main.gore[num242].timeLeft /= num241;
			}
			if (this.type == 385)
			{
				Main.PlaySound(4, (int)base.Center.X, (int)base.Center.Y, 19);
				int num243 = 36;
				for (int num244 = 0; num244 < num243; num244++)
				{
					Vector2 vector6 = Vector2.Normalize(this.velocity) * new Vector2((float)this.width / 2f, (float)this.height) * 0.75f;
					vector6 = vector6.RotatedBy((double)((float)(num244 - (num243 / 2 - 1)) * 6.28318548f / (float)num243), default(Vector2)) + base.Center;
					Vector2 vector7 = vector6 - base.Center;
					int num245 = Dust.NewDust(vector6 + vector7, 0, 0, 172, vector7.X * 2f, vector7.Y * 2f, 100, default(Color), 1.4f);
					Main.dust[num245].noGravity = true;
					Main.dust[num245].noLight = true;
					Main.dust[num245].velocity = vector7;
				}
				if (this.owner == Main.myPlayer)
				{
					if (this.ai[1] < 1f)
					{
						int num246 = Main.expertMode ? 25 : 40;
						int num247 = Projectile.NewProjectile(base.Center.X - (float)(this.direction * 30), base.Center.Y - 4f, (float)(-(float)this.direction) * 0.01f, 0f, 384, num246, 4f, this.owner, 16f, 15f);
						Main.projectile[num247].netUpdate = true;
					}
					else
					{
						int num248 = (int)(base.Center.Y / 16f);
						int num249 = (int)(base.Center.X / 16f);
						int num250 = 100;
						if (num249 < 10)
						{
							num249 = 10;
						}
						if (num249 > Main.maxTilesX - 10)
						{
							num249 = Main.maxTilesX - 10;
						}
						if (num248 < 10)
						{
							num248 = 10;
						}
						if (num248 > Main.maxTilesY - num250 - 10)
						{
							num248 = Main.maxTilesY - num250 - 10;
						}
						for (int num251 = num248; num251 < num248 + num250; num251++)
						{
							Tile tile = Main.tile[num249, num251];
							if (tile.active() && (Main.tileSolid[(int)tile.type] || tile.liquid != 0))
							{
								num248 = num251;
								break;
							}
						}
						int num252 = Main.expertMode ? 50 : 80;
						int num253 = Projectile.NewProjectile((float)(num249 * 16 + 8), (float)(num248 * 16 - 24), 0f, 0f, 386, num252, 4f, Main.myPlayer, 16f, 24f);
						Main.projectile[num253].netUpdate = true;
					}
				}
			}
			else if (this.type >= 424 && this.type <= 426)
			{
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 89);
				this.position.X = this.position.X + (float)(this.width / 2);
				this.position.Y = this.position.Y + (float)(this.height / 2);
				this.width = (int)(128f * this.scale);
				this.height = (int)(128f * this.scale);
				this.position.X = this.position.X - (float)(this.width / 2);
				this.position.Y = this.position.Y - (float)(this.height / 2);
				for (int num254 = 0; num254 < 8; num254++)
				{
					Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
				}
				for (int num255 = 0; num255 < 32; num255++)
				{
					int num256 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
					Main.dust[num256].noGravity = true;
					Main.dust[num256].velocity *= 3f;
					num256 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num256].velocity *= 2f;
					Main.dust[num256].noGravity = true;
				}
				for (int num257 = 0; num257 < 2; num257++)
				{
					int num258 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num258].velocity *= 0.3f;
					Gore expr_88CB_cp_0 = Main.gore[num258];
					expr_88CB_cp_0.velocity.X = expr_88CB_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.05f;
					Gore expr_88FB_cp_0 = Main.gore[num258];
					expr_88FB_cp_0.velocity.Y = expr_88FB_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.05f;
				}
				if (this.owner == Main.myPlayer)
				{
					this.localAI[1] = -1f;
					this.maxPenetrate = 0;
					this.Damage();
				}
				for (int num259 = 0; num259 < 5; num259++)
				{
					int num260 = Utils.SelectRandom<int>(Main.rand, new int[]
						{
							6,
							259,
							158
						});
					int num261 = Dust.NewDust(this.position, this.width, this.height, num260, 2.5f * (float)this.direction, -2.5f, 0, default(Color), 1f);
					Main.dust[num261].alpha = 200;
					Main.dust[num261].velocity *= 2.4f;
					Main.dust[num261].scale += Main.rand.NextFloat();
				}
			}
			if (this.type == 399)
			{
				Main.PlaySound(13, (int)this.position.X, (int)this.position.Y, 1);
				Vector2 value18 = new Vector2(20f, 20f);
				for (int num262 = 0; num262 < 5; num262++)
				{
					Dust.NewDust(base.Center - value18 / 2f, (int)value18.X, (int)value18.Y, 12, 0f, 0f, 0, Color.Red, 1f);
				}
				for (int num263 = 0; num263 < 10; num263++)
				{
					int num264 = Dust.NewDust(base.Center - value18 / 2f, (int)value18.X, (int)value18.Y, 31, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num264].velocity *= 1.4f;
				}
				for (int num265 = 0; num265 < 20; num265++)
				{
					int num266 = Dust.NewDust(base.Center - value18 / 2f, (int)value18.X, (int)value18.Y, 6, 0f, 0f, 100, default(Color), 2.5f);
					Main.dust[num266].noGravity = true;
					Main.dust[num266].velocity *= 5f;
					num266 = Dust.NewDust(base.Center - value18 / 2f, (int)value18.X, (int)value18.Y, 6, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num266].velocity *= 3f;
				}
				if (Main.myPlayer == this.owner)
				{
					for (int num267 = 0; num267 < 6; num267++)
					{
						float num268 = -this.velocity.X * (float)Main.rand.Next(20, 50) * 0.01f + (float)Main.rand.Next(-20, 21) * 0.4f;
						float num269 = -Math.Abs(this.velocity.Y) * (float)Main.rand.Next(30, 50) * 0.01f + (float)Main.rand.Next(-20, 5) * 0.4f;
						Projectile.NewProjectile(base.Center.X + num268, base.Center.Y + num269, num268, num269, 400 + Main.rand.Next(3), (int)((double)this.damage * 0.5), 0f, this.owner, 0f, 0f);
					}
				}
			}
			if (this.type == 384 || this.type == 386)
			{
				for (int num270 = 0; num270 < 20; num270++)
				{
					int num271 = Dust.NewDust(this.position, this.width, this.height, 212, (float)(this.direction * 2), 0f, 100, default(Color), 1.4f);
					Dust dust8 = Main.dust[num271];
					dust8.color = Color.CornflowerBlue;
					dust8.color = Color.Lerp(dust8.color, Color.White, 0.3f);
					dust8.noGravity = true;
				}
			}
			if (this.type == 507 || this.type == 508)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
				Vector2 vector8 = this.position;
				Vector2 oldVelocity = this.oldVelocity;
				oldVelocity.Normalize();
				vector8 += oldVelocity * 16f;
				for (int num272 = 0; num272 < 20; num272++)
				{
					int num273 = Dust.NewDust(vector8, this.width, this.height, 81, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num273].position = (Main.dust[num273].position + base.Center) / 2f;
					Main.dust[num273].velocity += this.oldVelocity * 0.4f;
					Main.dust[num273].velocity *= 0.5f;
					Main.dust[num273].noGravity = true;
					vector8 -= oldVelocity * 8f;
				}
			}
			if (this.type == 598)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
				Vector2 vector9 = this.position;
				Vector2 value19 = (this.rotation - 1.57079637f).ToRotationVector2();
				vector9 += value19 * 16f;
				for (int num274 = 0; num274 < 20; num274++)
				{
					int num275 = Dust.NewDust(vector9, this.width, this.height, 81, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num275].position = (Main.dust[num275].position + base.Center) / 2f;
					Main.dust[num275].velocity += value19 * 2f;
					Main.dust[num275].velocity *= 0.5f;
					Main.dust[num275].noGravity = true;
					vector9 -= value19 * 8f;
				}
			}
			if (this.type == 1 || this.type == 81 || this.type == 98)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
				for (int num276 = 0; num276 < 10; num276++)
				{
					Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 7, 0f, 0f, 0, default(Color), 1f);
				}
			}
			if (this.type == 336 || this.type == 345)
			{
				for (int num277 = 0; num277 < 6; num277++)
				{
					int num278 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 196, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num278].noGravity = true;
					Main.dust[num278].scale = this.scale;
				}
			}
			if (this.type == 358)
			{
				this.velocity = this.oldVelocity * 0.2f;
				for (int num279 = 0; num279 < 100; num279++)
				{
					int num280 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 211, 0f, 0f, 75, default(Color), 1.2f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num280].alpha += 25;
					}
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num280].alpha += 25;
					}
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num280].alpha += 25;
					}
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num280].scale = 0.6f;
					}
					else
					{
						Main.dust[num280].noGravity = true;
					}
					Main.dust[num280].velocity *= 0.3f;
					Main.dust[num280].velocity += this.velocity;
					Main.dust[num280].velocity *= 1f + (float)Main.rand.Next(-100, 101) * 0.01f;
					Dust expr_9448_cp_0 = Main.dust[num280];
					expr_9448_cp_0.velocity.X = expr_9448_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.015f;
					Dust expr_9478_cp_0 = Main.dust[num280];
					expr_9478_cp_0.velocity.Y = expr_9478_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.015f;
					Main.dust[num280].position = base.Center;
				}
			}
			if (this.type == 406)
			{
				int num281 = 175;
				Color newColor3 = new Color(0, 80, 255, 100);
				this.velocity = this.oldVelocity * 0.2f;
				for (int num282 = 0; num282 < 40; num282++)
				{
					int num283 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 4, 0f, 0f, num281, newColor3, 1.6f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num283].alpha += 25;
					}
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num283].alpha += 25;
					}
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num283].alpha += 25;
					}
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num283].scale = 0.6f;
					}
					else
					{
						Main.dust[num283].noGravity = true;
					}
					Main.dust[num283].velocity *= 0.3f;
					Main.dust[num283].velocity += this.velocity;
					Main.dust[num283].velocity *= 1f + (float)Main.rand.Next(-100, 101) * 0.01f;
					Dust expr_967C_cp_0 = Main.dust[num283];
					expr_967C_cp_0.velocity.X = expr_967C_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.015f;
					Dust expr_96AC_cp_0 = Main.dust[num283];
					expr_96AC_cp_0.velocity.Y = expr_96AC_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.015f;
					Main.dust[num283].position = base.Center;
				}
			}
			if (this.type == 344)
			{
				for (int num284 = 0; num284 < 3; num284++)
				{
					int num285 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 197, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num285].noGravity = true;
					Main.dust[num285].scale = this.scale;
				}
			}
			else if (this.type == 343)
			{
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 27);
				for (int num286 = 4; num286 < 31; num286++)
				{
					float num287 = this.oldVelocity.X * (30f / (float)num286);
					float num288 = this.oldVelocity.Y * (30f / (float)num286);
					int num289 = Dust.NewDust(new Vector2(this.oldPosition.X - num287, this.oldPosition.Y - num288), 8, 8, 197, this.oldVelocity.X, this.oldVelocity.Y, 100, default(Color), 1.2f);
					Main.dust[num289].noGravity = true;
					Main.dust[num289].velocity *= 0.5f;
				}
			}
			else if (this.type == 349)
			{
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 27);
				for (int num290 = 0; num290 < 3; num290++)
				{
					int num291 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 76, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num291].noGravity = true;
					Main.dust[num291].noLight = true;
					Main.dust[num291].scale = 0.7f;
				}
			}
			if (this.type == 323)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
				for (int num292 = 0; num292 < 20; num292++)
				{
					int num293 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 7, 0f, 0f, 0, default(Color), 1f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num293].noGravity = true;
						Main.dust[num293].scale = 1.3f;
						Main.dust[num293].velocity *= 1.5f;
						Main.dust[num293].velocity -= this.oldVelocity * 0.5f;
						Main.dust[num293].velocity *= 1.5f;
					}
					else
					{
						Main.dust[num293].velocity *= 0.75f;
						Main.dust[num293].velocity -= this.oldVelocity * 0.25f;
						Main.dust[num293].scale = 0.8f;
					}
				}
			}
			if (this.type == 589)
			{
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 27);
				Color newColor4 = Color.Red;
				if (this.ai[1] == 1f)
				{
					newColor4 = Color.Green;
				}
				if (this.ai[1] == 2f)
				{
					newColor4 = Color.Purple;
				}
				if (this.ai[1] == 3f)
				{
					newColor4 = Color.Gold;
				}
				if (this.ai[1] == 4f)
				{
					newColor4 = Color.White;
				}
				newColor4.A = 100;
				for (int num294 = 0; num294 < 30; num294++)
				{
					int num295 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 11, 0f, 0f, 0, newColor4, 1f);
					Main.dust[num295].velocity *= 1f + Main.rand.NextFloat() * 1f;
					if (num294 < 10)
					{
						Main.dust[num295].noGravity = true;
						Main.dust[num295].velocity *= 0.5f;
					}
				}
			}
			if (this.type == 346)
			{
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 27);
				for (int num296 = 0; num296 < 10; num296++)
				{
					int num297 = 10;
					if (this.ai[1] == 1f)
					{
						num297 = 4;
					}
					int num298 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num297, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num298].noGravity = true;
				}
			}
			if (this.type == 335)
			{
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 27);
				for (int num299 = 0; num299 < 10; num299++)
				{
					int num300 = 90 - (int)this.ai[1];
					int num301 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num300, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num301].noLight = true;
					Main.dust[num301].scale = 0.8f;
				}
			}
			if (this.type == 318)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
				for (int num302 = 0; num302 < 10; num302++)
				{
					int num303 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 30, 0f, 0f, 0, default(Color), 1f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num303].noGravity = true;
					}
				}
			}
			if (this.type == 378)
			{
				for (int num304 = 0; num304 < 10; num304++)
				{
					int num305 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 30, 0f, 0f, 0, default(Color), 1f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num305].noGravity = true;
					}
				}
			}
			else if (this.type == 311)
			{
				for (int num306 = 0; num306 < 5; num306++)
				{
					int num307 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 189, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num307].scale = 0.85f;
					Main.dust[num307].noGravity = true;
					Main.dust[num307].velocity += this.velocity * 0.5f;
				}
			}
			else if (this.type == 316)
			{
				for (int num308 = 0; num308 < 5; num308++)
				{
					int num309 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 195, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num309].scale = 0.85f;
					Main.dust[num309].noGravity = true;
					Main.dust[num309].velocity += this.velocity * 0.5f;
				}
			}
			else if (this.type == 184 || this.type == 195)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
				for (int num310 = 0; num310 < 5; num310++)
				{
					Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 7, 0f, 0f, 0, default(Color), 1f);
				}
			}
			else if (this.type == 275 || this.type == 276)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
				for (int num311 = 0; num311 < 5; num311++)
				{
					Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 7, 0f, 0f, 0, default(Color), 1f);
				}
			}
			else if (this.type == 291)
			{
				if (this.owner == Main.myPlayer)
				{
					Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 292, this.damage, this.knockBack, this.owner, 0f, 0f);
				}
			}
			else if (this.type == 295)
			{
				if (this.owner == Main.myPlayer)
				{
					Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 296, (int)((double)this.damage * 0.65), this.knockBack, this.owner, 0f, 0f);
				}
			}
			else if (this.type == 270)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 27);
				if (this.ai[0] < 0f)
				{
					for (int num312 = 0; num312 < 20; num312++)
					{
						int num313 = Dust.NewDust(this.position, this.width, this.height, 26, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num313].noGravity = true;
						Main.dust[num313].velocity *= 1.2f;
						Main.dust[num313].scale = 1.3f;
						Main.dust[num313].velocity -= this.oldVelocity * 0.3f;
						num313 = Dust.NewDust(new Vector2(this.position.X + 4f, this.position.Y + 4f), this.width - 8, this.height - 8, 5, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num313].noGravity = true;
						Main.dust[num313].velocity *= 3f;
					}
				}
				else
				{
					for (int num314 = 0; num314 < 20; num314++)
					{
						int num315 = Dust.NewDust(this.position, this.width, this.height, 26, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num315].noGravity = true;
						Main.dust[num315].velocity *= 1.2f;
						Main.dust[num315].scale = 1.3f;
						Main.dust[num315].velocity -= this.oldVelocity * 0.3f;
						num315 = Dust.NewDust(new Vector2(this.position.X + 4f, this.position.Y + 4f), this.width - 8, this.height - 8, 6, 0f, 0f, 100, default(Color), 2f);
						Main.dust[num315].noGravity = true;
						Main.dust[num315].velocity *= 3f;
					}
				}
			}
			else if (this.type == 265)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 27);
				for (int num316 = 0; num316 < 15; num316++)
				{
					int num317 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 163, 0f, 0f, 100, default(Color), 1.2f);
					Main.dust[num317].noGravity = true;
					Main.dust[num317].velocity *= 1.2f;
					Main.dust[num317].velocity -= this.oldVelocity * 0.3f;
				}
			}
			else if (this.type == 355)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 27);
				for (int num318 = 0; num318 < 15; num318++)
				{
					int num319 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 205, 0f, 0f, 100, default(Color), 1.2f);
					Main.dust[num319].noGravity = true;
					Main.dust[num319].velocity *= 1.2f;
					Main.dust[num319].velocity -= this.oldVelocity * 0.3f;
				}
			}
			else if (this.type == 304)
			{
				for (int num320 = 0; num320 < 3; num320++)
				{
					int num321 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 182, 0f, 0f, 100, default(Color), 0.8f);
					Main.dust[num321].noGravity = true;
					Main.dust[num321].velocity *= 1.2f;
					Main.dust[num321].velocity -= this.oldVelocity * 0.3f;
				}
			}
			else if (this.type == 263)
			{
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 27);
				for (int num322 = 0; num322 < 15; num322++)
				{
					int num323 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 92, this.velocity.X, this.velocity.Y, Main.rand.Next(0, 101), default(Color), 1f + (float)Main.rand.Next(40) * 0.01f);
					Main.dust[num323].noGravity = true;
					Main.dust[num323].velocity *= 2f;
				}
			}
			else if (this.type == 261)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
				for (int num324 = 0; num324 < 5; num324++)
				{
					Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 148, 0f, 0f, 0, default(Color), 1f);
				}
			}
			else if (this.type == 229)
			{
				for (int num325 = 0; num325 < 25; num325++)
				{
					int num326 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 157, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num326].noGravity = true;
					Main.dust[num326].velocity *= 1.5f;
					Main.dust[num326].scale = 1.5f;
				}
			}
			else if (this.type == 239)
			{
				int num327 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height - 2f), 2, 2, 154, 0f, 0f, 0, default(Color), 1f);
				Dust expr_AC0C_cp_0 = Main.dust[num327];
				expr_AC0C_cp_0.position.X = expr_AC0C_cp_0.position.X - 2f;
				Main.dust[num327].alpha = 38;
				Main.dust[num327].velocity *= 0.1f;
				Main.dust[num327].velocity += -this.oldVelocity * 0.25f;
				Main.dust[num327].scale = 0.95f;
			}
			else if (this.type == 245)
			{
				int num328 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height - 2f), 2, 2, 114, 0f, 0f, 0, default(Color), 1f);
				Main.dust[num328].noGravity = true;
				Dust expr_AD18_cp_0 = Main.dust[num328];
				expr_AD18_cp_0.position.X = expr_AD18_cp_0.position.X - 2f;
				Main.dust[num328].alpha = 38;
				Main.dust[num328].velocity *= 0.1f;
				Main.dust[num328].velocity += -this.oldVelocity * 0.25f;
				Main.dust[num328].scale = 0.95f;
			}
			else if (this.type == 264)
			{
				int num329 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height - 2f), 2, 2, 54, 0f, 0f, 0, default(Color), 1f);
				Main.dust[num329].noGravity = true;
				Dust expr_AE24_cp_0 = Main.dust[num329];
				expr_AE24_cp_0.position.X = expr_AE24_cp_0.position.X - 2f;
				Main.dust[num329].alpha = 38;
				Main.dust[num329].velocity *= 0.1f;
				Main.dust[num329].velocity += -this.oldVelocity * 0.25f;
				Main.dust[num329].scale = 0.95f;
			}
			else if (this.type == 206 || this.type == 225)
			{
				Main.PlaySound(6, (int)this.position.X, (int)this.position.Y, 1);
				for (int num330 = 0; num330 < 5; num330++)
				{
					Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 40, 0f, 0f, 0, default(Color), 1f);
				}
			}
			else if (this.type == 227)
			{
				Main.PlaySound(6, (int)this.position.X, (int)this.position.Y, 1);
				for (int num331 = 0; num331 < 15; num331++)
				{
					int num332 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 157, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num332].noGravity = true;
					Main.dust[num332].velocity += this.oldVelocity;
					Main.dust[num332].scale = 1.5f;
				}
			}
			else if (this.type == 237 && this.owner == Main.myPlayer)
			{
				Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 238, this.damage, this.knockBack, this.owner, 0f, 0f);
			}
			else if (this.type == 243 && this.owner == Main.myPlayer)
			{
				Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 244, this.damage, this.knockBack, this.owner, 0f, 0f);
			}
			else if (this.type == 120)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
				for (int num333 = 0; num333 < 10; num333++)
				{
					int num334 = Dust.NewDust(new Vector2(this.position.X - this.velocity.X, this.position.Y - this.velocity.Y), this.width, this.height, 67, this.velocity.X, this.velocity.Y, 100, default(Color), 1f);
					if (num333 < 5)
					{
						Main.dust[num334].noGravity = true;
					}
					Main.dust[num334].velocity *= 0.2f;
				}
			}
			else if (this.type == 181 || this.type == 189 || this.type == 566)
			{
				for (int num335 = 0; num335 < 6; num335++)
				{
					int num336 = Dust.NewDust(this.position, this.width, this.height, 150, this.velocity.X, this.velocity.Y, 50, default(Color), 1f);
					Main.dust[num336].noGravity = true;
					Main.dust[num336].scale = 1f;
				}
			}
			else if (this.type == 178)
			{
				for (int num337 = 0; num337 < 85; num337++)
				{
					int num338 = Main.rand.Next(139, 143);
					int num339 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num338, this.velocity.X, this.velocity.Y, 0, default(Color), 1.2f);
					Dust expr_B359_cp_0 = Main.dust[num339];
					expr_B359_cp_0.velocity.X = expr_B359_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.01f;
					Dust expr_B389_cp_0 = Main.dust[num339];
					expr_B389_cp_0.velocity.Y = expr_B389_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.01f;
					Dust expr_B3B9_cp_0 = Main.dust[num339];
					expr_B3B9_cp_0.velocity.X = expr_B3B9_cp_0.velocity.X * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
					Dust expr_B3EF_cp_0 = Main.dust[num339];
					expr_B3EF_cp_0.velocity.Y = expr_B3EF_cp_0.velocity.Y * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
					Dust expr_B425_cp_0 = Main.dust[num339];
					expr_B425_cp_0.velocity.X = expr_B425_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.05f;
					Dust expr_B455_cp_0 = Main.dust[num339];
					expr_B455_cp_0.velocity.Y = expr_B455_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.05f;
					Main.dust[num339].scale *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
				}
				for (int num340 = 0; num340 < 40; num340++)
				{
					int num341 = Main.rand.Next(276, 283);
					int num342 = Gore.NewGore(this.position, this.velocity, num341, 1f);
					Gore expr_B50B_cp_0 = Main.gore[num342];
					expr_B50B_cp_0.velocity.X = expr_B50B_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.01f;
					Gore expr_B53B_cp_0 = Main.gore[num342];
					expr_B53B_cp_0.velocity.Y = expr_B53B_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.01f;
					Gore expr_B56B_cp_0 = Main.gore[num342];
					expr_B56B_cp_0.velocity.X = expr_B56B_cp_0.velocity.X * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
					Gore expr_B5A1_cp_0 = Main.gore[num342];
					expr_B5A1_cp_0.velocity.Y = expr_B5A1_cp_0.velocity.Y * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
					Main.gore[num342].scale *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
					Gore expr_B608_cp_0 = Main.gore[num342];
					expr_B608_cp_0.velocity.X = expr_B608_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.05f;
					Gore expr_B638_cp_0 = Main.gore[num342];
					expr_B638_cp_0.velocity.Y = expr_B638_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.05f;
				}
			}
			else if (this.type == 289)
			{
				for (int num343 = 0; num343 < 30; num343++)
				{
					int num344 = Main.rand.Next(139, 143);
					int num345 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num344, this.velocity.X, this.velocity.Y, 0, default(Color), 1.2f);
					Dust expr_B712_cp_0 = Main.dust[num345];
					expr_B712_cp_0.velocity.X = expr_B712_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.01f;
					Dust expr_B742_cp_0 = Main.dust[num345];
					expr_B742_cp_0.velocity.Y = expr_B742_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.01f;
					Dust expr_B772_cp_0 = Main.dust[num345];
					expr_B772_cp_0.velocity.X = expr_B772_cp_0.velocity.X * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
					Dust expr_B7A8_cp_0 = Main.dust[num345];
					expr_B7A8_cp_0.velocity.Y = expr_B7A8_cp_0.velocity.Y * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
					Dust expr_B7DE_cp_0 = Main.dust[num345];
					expr_B7DE_cp_0.velocity.X = expr_B7DE_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.05f;
					Dust expr_B80E_cp_0 = Main.dust[num345];
					expr_B80E_cp_0.velocity.Y = expr_B80E_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.05f;
					Main.dust[num345].scale *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
				}
				for (int num346 = 0; num346 < 15; num346++)
				{
					int num347 = Main.rand.Next(276, 283);
					int num348 = Gore.NewGore(this.position, this.velocity, num347, 1f);
					Gore expr_B8C4_cp_0 = Main.gore[num348];
					expr_B8C4_cp_0.velocity.X = expr_B8C4_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.01f;
					Gore expr_B8F4_cp_0 = Main.gore[num348];
					expr_B8F4_cp_0.velocity.Y = expr_B8F4_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.01f;
					Gore expr_B924_cp_0 = Main.gore[num348];
					expr_B924_cp_0.velocity.X = expr_B924_cp_0.velocity.X * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
					Gore expr_B95A_cp_0 = Main.gore[num348];
					expr_B95A_cp_0.velocity.Y = expr_B95A_cp_0.velocity.Y * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
					Main.gore[num348].scale *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
					Gore expr_B9C1_cp_0 = Main.gore[num348];
					expr_B9C1_cp_0.velocity.X = expr_B9C1_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.05f;
					Gore expr_B9F1_cp_0 = Main.gore[num348];
					expr_B9F1_cp_0.velocity.Y = expr_B9F1_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.05f;
				}
			}
			else if (this.type == 475 || this.type == 505 || this.type == 506)
			{
				if (this.ai[1] == 0f)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
				}
				if (this.ai[1] < 10f)
				{
					Vector2 position2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num349 = -this.velocity.X;
					float num350 = -this.velocity.Y;
					float num351 = 1f;
					if (this.ai[0] <= 17f)
					{
						num351 = this.ai[0] / 17f;
					}
					int num352 = (int)(30f * num351);
					float num353 = 1f;
					if (this.ai[0] <= 30f)
					{
						num353 = this.ai[0] / 30f;
					}
					float num354 = 0.4f * num353;
					float num355 = num354;
					num350 += num355;
					for (int num356 = 0; num356 < num352; num356++)
					{
						float num357 = (float)Math.Sqrt((double)(num349 * num349 + num350 * num350));
						float num358 = 5.6f;
						if (Math.Abs(num349) + Math.Abs(num350) < 1f)
						{
							num358 *= Math.Abs(num349) + Math.Abs(num350) / 1f;
						}
						num357 = num358 / num357;
						num349 *= num357;
						num350 *= num357;
						Math.Atan2((double)num350, (double)num349);
						int num359 = 3;
						if (this.type == 506)
						{
							num359 = 30;
						}
						if (this.type == 505)
						{
							num359 = 239;
						}
						if ((float)num356 > this.ai[1])
						{
							for (int num360 = 0; num360 < 4; num360++)
							{
								int num361 = Dust.NewDust(position2, this.width, this.height, num359, 0f, 0f, 0, default(Color), 1f);
								Main.dust[num361].noGravity = true;
								Main.dust[num361].velocity *= 0.3f;
							}
						}
						position2.X += num349;
						position2.Y += num350;
						num349 = -this.velocity.X;
						num350 = -this.velocity.Y;
						num355 += num354;
						num350 += num355;
					}
				}
			}
			else if (this.type == 171)
			{
				if (this.ai[1] == 0f)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
				}
				if (this.ai[1] < 10f)
				{
					Vector2 position3 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num362 = -this.velocity.X;
					float num363 = -this.velocity.Y;
					float num364 = 1f;
					if (this.ai[0] <= 17f)
					{
						num364 = this.ai[0] / 17f;
					}
					int num365 = (int)(30f * num364);
					float num366 = 1f;
					if (this.ai[0] <= 30f)
					{
						num366 = this.ai[0] / 30f;
					}
					float num367 = 0.4f * num366;
					float num368 = num367;
					num363 += num368;
					for (int num369 = 0; num369 < num365; num369++)
					{
						float num370 = (float)Math.Sqrt((double)(num362 * num362 + num363 * num363));
						float num371 = 5.6f;
						if (Math.Abs(num362) + Math.Abs(num363) < 1f)
						{
							num371 *= Math.Abs(num362) + Math.Abs(num363) / 1f;
						}
						num370 = num371 / num370;
						num362 *= num370;
						num363 *= num370;
						Math.Atan2((double)num363, (double)num362);
						if ((float)num369 > this.ai[1])
						{
							for (int num372 = 0; num372 < 4; num372++)
							{
								int num373 = Dust.NewDust(position3, this.width, this.height, 129, 0f, 0f, 0, default(Color), 1f);
								Main.dust[num373].noGravity = true;
								Main.dust[num373].velocity *= 0.3f;
							}
						}
						position3.X += num362;
						position3.Y += num363;
						num362 = -this.velocity.X;
						num363 = -this.velocity.Y;
						num368 += num367;
						num363 += num368;
					}
				}
			}
			else if (this.type == 117)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
				for (int num374 = 0; num374 < 10; num374++)
				{
					Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 26, 0f, 0f, 0, default(Color), 1f);
				}
			}
			else if (this.type == 166)
			{
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 51);
				for (int num375 = 0; num375 < 10; num375++)
				{
					int num376 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 76, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num376].noGravity = true;
					Main.dust[num376].velocity -= this.oldVelocity * 0.25f;
				}
			}
			else if (this.type == 158)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
				for (int num377 = 0; num377 < 10; num377++)
				{
					int num378 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 9, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num378].noGravity = true;
					Main.dust[num378].velocity -= this.velocity * 0.5f;
				}
			}
			else if (this.type == 159)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
				for (int num379 = 0; num379 < 10; num379++)
				{
					int num380 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 11, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num380].noGravity = true;
					Main.dust[num380].velocity -= this.velocity * 0.5f;
				}
			}
			else if (this.type == 160)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
				for (int num381 = 0; num381 < 10; num381++)
				{
					int num382 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 19, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num382].noGravity = true;
					Main.dust[num382].velocity -= this.velocity * 0.5f;
				}
			}
			else if (this.type == 161)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
				for (int num383 = 0; num383 < 10; num383++)
				{
					int num384 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 11, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num384].noGravity = true;
					Main.dust[num384].velocity -= this.velocity * 0.5f;
				}
			}
			else if (this.type >= 191 && this.type <= 194)
			{
				int num385 = Gore.NewGore(new Vector2(this.position.X - (float)(this.width / 2), this.position.Y - (float)(this.height / 2)), new Vector2(0f, 0f), Main.rand.Next(61, 64), this.scale);
				Main.gore[num385].velocity *= 0.1f;
			}
			else if (!Main.projPet[this.type])
			{
				if (this.type == 93)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
					for (int num386 = 0; num386 < 10; num386++)
					{
						int num387 = Dust.NewDust(this.position, this.width, this.height, 57, 0f, 0f, 100, default(Color), 0.5f);
						Dust expr_C65A_cp_0 = Main.dust[num387];
						expr_C65A_cp_0.velocity.X = expr_C65A_cp_0.velocity.X * 2f;
						Dust expr_C67A_cp_0 = Main.dust[num387];
						expr_C67A_cp_0.velocity.Y = expr_C67A_cp_0.velocity.Y * 2f;
					}
				}
				else if (this.type == 99)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
					for (int num388 = 0; num388 < 30; num388++)
					{
						int num389 = Dust.NewDust(this.position, this.width, this.height, 1, 0f, 0f, 0, default(Color), 1f);
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num389].scale *= 1.4f;
						}
						this.velocity *= 1.9f;
					}
				}
				else if (this.type == 655)
				{
					Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 1);
					for (int num390 = 0; num390 < 30; num390++)
					{
						int num391 = Dust.NewDust(this.position, this.width, this.height, 147, 0f, 0f, 0, default(Color), 1f);
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num391].scale *= 1.4f;
						}
						this.velocity *= 1.9f;
					}
					if (Main.netMode != 1 && !this.wet)
					{
						int num392 = 2;
						if (Main.rand.Next(3) == 0)
						{
							num392++;
						}
						if (Main.rand.Next(3) == 0)
						{
							num392++;
						}
						if (Main.rand.Next(3) == 0)
						{
							num392++;
						}
						for (int num393 = 0; num393 < num392; num393++)
						{
							int num394 = Main.rand.Next(210, 212);
							int num395 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, num394, 1, 0f, 0f, 0f, 0f, 255);
							Main.npc[num395].velocity.X = (float)Main.rand.Next(-200, 201) * 0.002f;
							Main.npc[num395].velocity.Y = (float)Main.rand.Next(-200, 201) * 0.002f;
							Main.npc[num395].netUpdate = true;
						}
						if (Main.rand.Next(4) == 0)
						{
							int num396 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 42, 1, 0f, 0f, 0f, 0f, 255);
							Main.npc[num396].netDefaults(-16);
							Main.npc[num396].velocity.X = (float)Main.rand.Next(-200, 201) * 0.001f;
							Main.npc[num396].velocity.Y = (float)Main.rand.Next(-200, 201) * 0.001f;
							Main.npc[num396].netUpdate = true;
						}
					}
				}
				else if (this.type == 91 || this.type == 92)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
					for (int num397 = 0; num397 < 10; num397++)
					{
						Dust.NewDust(this.position, this.width, this.height, 58, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 150, default(Color), 1.2f);
					}
					for (int num398 = 0; num398 < 3; num398++)
					{
						Gore.NewGore(this.position, new Vector2(this.velocity.X * 0.05f, this.velocity.Y * 0.05f), Main.rand.Next(16, 18), 1f);
					}
					if (this.type == 12 && this.damage < 500)
					{
						for (int num399 = 0; num399 < 10; num399++)
						{
							Dust.NewDust(this.position, this.width, this.height, 57, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 150, default(Color), 1.2f);
						}
						for (int num400 = 0; num400 < 3; num400++)
						{
							Gore.NewGore(this.position, new Vector2(this.velocity.X * 0.05f, this.velocity.Y * 0.05f), Main.rand.Next(16, 18), 1f);
						}
					}
					if ((this.type == 91 || (this.type == 92 && this.ai[0] > 0f)) && this.owner == Main.myPlayer)
					{
						float x = this.position.X + (float)Main.rand.Next(-400, 400);
						float y = this.position.Y - (float)Main.rand.Next(600, 900);
						Vector2 vector10 = new Vector2(x, y);
						float num401 = this.position.X + (float)(this.width / 2) - vector10.X;
						float num402 = this.position.Y + (float)(this.height / 2) - vector10.Y;
						int num403 = 22;
						float num404 = (float)Math.Sqrt((double)(num401 * num401 + num402 * num402));
						num404 = (float)num403 / num404;
						num401 *= num404;
						num402 *= num404;
						int num405 = this.damage;
						int num406 = Projectile.NewProjectile(x, y, num401, num402, 92, num405, this.knockBack, this.owner, 0f, 0f);
						if (this.type == 91)
						{
							Main.projectile[num406].ai[1] = this.position.Y;
							Main.projectile[num406].ai[0] = 1f;
						}
						else
						{
							Main.projectile[num406].ai[1] = this.position.Y;
						}
					}
				}
				else if (this.type == 89)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
					for (int num407 = 0; num407 < 5; num407++)
					{
						int num408 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 68, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num408].noGravity = true;
						Main.dust[num408].velocity *= 1.5f;
						Main.dust[num408].scale *= 0.9f;
					}
					if (this.type == 89 && this.owner == Main.myPlayer)
					{
						for (int num409 = 0; num409 < 3; num409++)
						{
							float num410 = -this.velocity.X * (float)Main.rand.Next(40, 70) * 0.01f + (float)Main.rand.Next(-20, 21) * 0.4f;
							float num411 = -this.velocity.Y * (float)Main.rand.Next(40, 70) * 0.01f + (float)Main.rand.Next(-20, 21) * 0.4f;
							Projectile.NewProjectile(this.position.X + num410, this.position.Y + num411, num410, num411, 90, (int)((double)this.damage * 0.5), 0f, this.owner, 0f, 0f);
						}
					}
				}
				else if (this.type == 177)
				{
					for (int num412 = 0; num412 < 20; num412++)
					{
						int num413 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 137, 0f, 0f, Main.rand.Next(0, 101), default(Color), 1f + (float)Main.rand.Next(-20, 40) * 0.01f);
						Main.dust[num413].velocity -= this.oldVelocity * 0.2f;
						if (Main.rand.Next(3) == 0)
						{
							Main.dust[num413].scale *= 0.8f;
							Main.dust[num413].velocity *= 0.5f;
						}
						else
						{
							Main.dust[num413].noGravity = true;
						}
					}
				}
				else if (this.type == 119 || this.type == 118 || this.type == 128 || this.type == 359)
				{
					int num414 = 10;
					if (this.type == 119 || this.type == 359)
					{
						num414 = 20;
					}
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 27);
					for (int num415 = 0; num415 < num414; num415++)
					{
						int num416 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 92, 0f, 0f, 0, default(Color), 1f);
						if (Main.rand.Next(3) != 0)
						{
							Main.dust[num416].velocity *= 2f;
							Main.dust[num416].noGravity = true;
							Main.dust[num416].scale *= 1.75f;
						}
						else
						{
							Main.dust[num416].scale *= 0.5f;
						}
					}
				}
				else if (this.type == 309)
				{
					int num417 = 10;
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 27);
					for (int num418 = 0; num418 < num417; num418++)
					{
						int num419 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 185, 0f, 0f, 0, default(Color), 1f);
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num419].velocity *= 2f;
							Main.dust[num419].noGravity = true;
							Main.dust[num419].scale *= 1.75f;
						}
					}
				}
				else if (this.type == 308)
				{
					int num420 = 80;
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 27);
					for (int num421 = 0; num421 < num420; num421++)
					{
						int num422 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 16f), this.width, this.height - 16, 185, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num422].velocity *= 2f;
						Main.dust[num422].noGravity = true;
						Main.dust[num422].scale *= 1.15f;
					}
				}
				else if (this.aiStyle == 29 && this.type <= 126)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
					int num423 = this.type - 121 + 86;
					for (int num424 = 0; num424 < 15; num424++)
					{
						int num425 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num423, this.oldVelocity.X, this.oldVelocity.Y, 50, default(Color), 1.2f);
						Main.dust[num425].noGravity = true;
						Main.dust[num425].scale *= 1.25f;
						Main.dust[num425].velocity *= 0.5f;
					}
				}
				else if (this.type == 597)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
					for (int num426 = 0; num426 < 15; num426++)
					{
						int num427 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 262, this.oldVelocity.X, this.oldVelocity.Y, 50, default(Color), 1.2f);
						Main.dust[num427].noGravity = true;
						Main.dust[num427].scale *= 1.25f;
						Main.dust[num427].velocity *= 0.5f;
					}
				}
				else if (this.type == 337)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 27);
					for (int num428 = 0; num428 < 10; num428++)
					{
						int num429 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 197, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num429].noGravity = true;
					}
				}
				else if (this.type == 379 || this.type == 377)
				{
					for (int num430 = 0; num430 < 5; num430++)
					{
						int num431 = Dust.NewDust(this.position, this.width, this.height, 171, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num431].scale = (float)Main.rand.Next(1, 10) * 0.1f;
						Main.dust[num431].noGravity = true;
						Main.dust[num431].fadeIn = 1.5f;
						Main.dust[num431].velocity *= 0.75f;
					}
				}
				else if (this.type == 80)
				{
					if (this.ai[0] >= 0f)
					{
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 27);
						for (int num432 = 0; num432 < 10; num432++)
						{
							Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 67, 0f, 0f, 0, default(Color), 1f);
						}
					}
					int num433 = (int)this.position.X / 16;
					int num434 = (int)this.position.Y / 16;
					if (Main.tile[num433, num434] == null)
					{
						Main.tile[num433, num434] = new Tile();
					}
					if (Main.tile[num433, num434].type == 127 && Main.tile[num433, num434].active())
					{
						WorldGen.KillTile(num433, num434, false, false, false);
					}
				}
				else if (this.type == 76 || this.type == 77 || this.type == 78)
				{
					for (int num435 = 0; num435 < 5; num435++)
					{
						int num436 = Dust.NewDust(this.position, this.width, this.height, 27, 0f, 0f, 80, default(Color), 1.5f);
						Main.dust[num436].noGravity = true;
					}
				}
				else if (this.type == 55)
				{
					for (int num437 = 0; num437 < 5; num437++)
					{
						int num438 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 18, 0f, 0f, 0, default(Color), 1.5f);
						Main.dust[num438].noGravity = true;
					}
				}
				else if (this.type == 51 || this.type == 267)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
					for (int num439 = 0; num439 < 5; num439++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 0, 0f, 0f, 0, default(Color), 0.7f);
					}
				}
				else if (this.type == 478)
				{
					if (this.owner == Main.myPlayer)
					{
						Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 480, (int)((double)this.damage * 0.8), this.knockBack * 0.5f, this.owner, 0f, 0f);
					}
				}
				else if (this.type == 477 || this.type == 479)
				{
					for (int num440 = 0; num440 < 5; num440++)
					{
					}
					Collision.HitTiles(this.position, this.velocity, this.width, this.height);
				}
				else if (this.type == 2 || this.type == 82)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
					for (int num441 = 0; num441 < 10; num441++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1f);
					}
				}
				else if (this.type == 474)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
					for (int num442 = 0; num442 < 20; num442++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 26, 0f, 0f, 0, default(Color), 0.9f);
					}
				}
				else if (this.type == 172)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
					for (int num443 = 0; num443 < 20; num443++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 135, 0f, 0f, 100, default(Color), 1f);
					}
				}
				else if (this.type == 103)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
					for (int num444 = 0; num444 < 20; num444++)
					{
						int num445 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 75, 0f, 0f, 100, default(Color), 1f);
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num445].scale *= 2.5f;
							Main.dust[num445].noGravity = true;
							Main.dust[num445].velocity *= 5f;
						}
					}
				}
				else if (this.type == 278)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
					for (int num446 = 0; num446 < 20; num446++)
					{
						int num447 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 169, 0f, 0f, 100, default(Color), 1f);
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num447].scale *= 1.5f;
							Main.dust[num447].noGravity = true;
							Main.dust[num447].velocity *= 5f;
						}
					}
				}
				else if (this.type == 3 || this.type == 48 || this.type == 54 || this.type == 599)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
					for (int num448 = 0; num448 < 10; num448++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 1, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 0, default(Color), 0.75f);
					}
				}
				else if (this.type == 330)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
					for (int num449 = 0; num449 < 10; num449++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 0, this.velocity.X * 0.4f, this.velocity.Y * 0.4f, 0, default(Color), 0.75f);
					}
				}
				else if (this.type == 4)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
					for (int num450 = 0; num450 < 10; num450++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 14, 0f, 0f, 150, default(Color), 1.1f);
					}
				}
				else if (this.type == 5)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
					for (int num451 = 0; num451 < 60; num451++)
					{
						int num452 = Main.rand.Next(3);
						if (num452 == 0)
						{
							num452 = 15;
						}
						else if (num452 == 1)
						{
							num452 = 57;
						}
						else
						{
							num452 = 58;
						}
						Dust.NewDust(this.position, this.width, this.height, num452, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 150, default(Color), 1.5f);
					}
				}
				else if (this.type == 9 || this.type == 12 || this.type == 503)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
					int num453 = 10;
					int num454 = 3;
					if (this.type == 503)
					{
						num453 = 40;
						num454 = 2;
						this.velocity /= 2f;
					}
					for (int num455 = 0; num455 < num453; num455++)
					{
						Dust.NewDust(this.position, this.width, this.height, 58, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 150, default(Color), 1.2f);
					}
					for (int num456 = 0; num456 < num454; num456++)
					{
						int num457 = Main.rand.Next(16, 18);
						if (this.type == 503)
						{
							num457 = 16;
						}
						Gore.NewGore(this.position, new Vector2(this.velocity.X * 0.05f, this.velocity.Y * 0.05f), num457, 1f);
					}
					if (this.type == 12 && this.damage < 100)
					{
						for (int num458 = 0; num458 < 10; num458++)
						{
							Dust.NewDust(this.position, this.width, this.height, 57, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 150, default(Color), 1.2f);
						}
						for (int num459 = 0; num459 < 3; num459++)
						{
							Gore.NewGore(this.position, new Vector2(this.velocity.X * 0.05f, this.velocity.Y * 0.05f), Main.rand.Next(16, 18), 1f);
						}
					}
				}
				else if (this.type == 281)
				{
					Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 1);
					int num460 = Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-20, 21) * 0.2f, (float)Main.rand.Next(-20, 21) * 0.2f), 76, 1f);
					Main.gore[num460].velocity -= this.velocity * 0.5f;
					num460 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2((float)Main.rand.Next(-20, 21) * 0.2f, (float)Main.rand.Next(-20, 21) * 0.2f), 77, 1f);
					Main.gore[num460].velocity -= this.velocity * 0.5f;
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
					for (int num461 = 0; num461 < 20; num461++)
					{
						int num462 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num462].velocity *= 1.4f;
					}
					for (int num463 = 0; num463 < 10; num463++)
					{
						int num464 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
						Main.dust[num464].noGravity = true;
						Main.dust[num464].velocity *= 5f;
						num464 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num464].velocity *= 3f;
					}
					num460 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num460].velocity *= 0.4f;
					Gore expr_E850_cp_0 = Main.gore[num460];
					expr_E850_cp_0.velocity.X = expr_E850_cp_0.velocity.X + 1f;
					Gore expr_E870_cp_0 = Main.gore[num460];
					expr_E870_cp_0.velocity.Y = expr_E870_cp_0.velocity.Y + 1f;
					num460 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num460].velocity *= 0.4f;
					Gore expr_E8F4_cp_0 = Main.gore[num460];
					expr_E8F4_cp_0.velocity.X = expr_E8F4_cp_0.velocity.X - 1f;
					Gore expr_E914_cp_0 = Main.gore[num460];
					expr_E914_cp_0.velocity.Y = expr_E914_cp_0.velocity.Y + 1f;
					num460 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num460].velocity *= 0.4f;
					Gore expr_E998_cp_0 = Main.gore[num460];
					expr_E998_cp_0.velocity.X = expr_E998_cp_0.velocity.X + 1f;
					Gore expr_E9B8_cp_0 = Main.gore[num460];
					expr_E9B8_cp_0.velocity.Y = expr_E9B8_cp_0.velocity.Y - 1f;
					num460 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num460].velocity *= 0.4f;
					Gore expr_EA3C_cp_0 = Main.gore[num460];
					expr_EA3C_cp_0.velocity.X = expr_EA3C_cp_0.velocity.X - 1f;
					Gore expr_EA5C_cp_0 = Main.gore[num460];
					expr_EA5C_cp_0.velocity.Y = expr_EA5C_cp_0.velocity.Y - 1f;
					this.position.X = this.position.X + (float)(this.width / 2);
					this.position.Y = this.position.Y + (float)(this.height / 2);
					this.width = 128;
					this.height = 128;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y - (float)(this.height / 2);
					this.Damage();
				}
				else if (this.type == 162)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
					for (int num465 = 0; num465 < 20; num465++)
					{
						int num466 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num466].velocity *= 1.4f;
					}
					for (int num467 = 0; num467 < 10; num467++)
					{
						int num468 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
						Main.dust[num468].noGravity = true;
						Main.dust[num468].velocity *= 5f;
						num468 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num468].velocity *= 3f;
					}
					int num469 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num469].velocity *= 0.4f;
					Gore expr_ED36_cp_0 = Main.gore[num469];
					expr_ED36_cp_0.velocity.X = expr_ED36_cp_0.velocity.X + 1f;
					Gore expr_ED56_cp_0 = Main.gore[num469];
					expr_ED56_cp_0.velocity.Y = expr_ED56_cp_0.velocity.Y + 1f;
					num469 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num469].velocity *= 0.4f;
					Gore expr_EDDA_cp_0 = Main.gore[num469];
					expr_EDDA_cp_0.velocity.X = expr_EDDA_cp_0.velocity.X - 1f;
					Gore expr_EDFA_cp_0 = Main.gore[num469];
					expr_EDFA_cp_0.velocity.Y = expr_EDFA_cp_0.velocity.Y + 1f;
					num469 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num469].velocity *= 0.4f;
					Gore expr_EE7E_cp_0 = Main.gore[num469];
					expr_EE7E_cp_0.velocity.X = expr_EE7E_cp_0.velocity.X + 1f;
					Gore expr_EE9E_cp_0 = Main.gore[num469];
					expr_EE9E_cp_0.velocity.Y = expr_EE9E_cp_0.velocity.Y - 1f;
					num469 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num469].velocity *= 0.4f;
					Gore expr_EF22_cp_0 = Main.gore[num469];
					expr_EF22_cp_0.velocity.X = expr_EF22_cp_0.velocity.X - 1f;
					Gore expr_EF42_cp_0 = Main.gore[num469];
					expr_EF42_cp_0.velocity.Y = expr_EF42_cp_0.velocity.Y - 1f;
					this.position.X = this.position.X + (float)(this.width / 2);
					this.position.Y = this.position.Y + (float)(this.height / 2);
					this.width = 128;
					this.height = 128;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y - (float)(this.height / 2);
					this.Damage();
				}
				else if (this.type == 240)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
					for (int num470 = 0; num470 < 20; num470++)
					{
						int num471 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num471].velocity *= 1.4f;
					}
					for (int num472 = 0; num472 < 10; num472++)
					{
						int num473 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
						Main.dust[num473].noGravity = true;
						Main.dust[num473].velocity *= 5f;
						num473 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num473].velocity *= 3f;
					}
					int num474 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num474].velocity *= 0.4f;
					Gore expr_F21C_cp_0 = Main.gore[num474];
					expr_F21C_cp_0.velocity.X = expr_F21C_cp_0.velocity.X + 1f;
					Gore expr_F23C_cp_0 = Main.gore[num474];
					expr_F23C_cp_0.velocity.Y = expr_F23C_cp_0.velocity.Y + 1f;
					num474 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num474].velocity *= 0.4f;
					Gore expr_F2C0_cp_0 = Main.gore[num474];
					expr_F2C0_cp_0.velocity.X = expr_F2C0_cp_0.velocity.X - 1f;
					Gore expr_F2E0_cp_0 = Main.gore[num474];
					expr_F2E0_cp_0.velocity.Y = expr_F2E0_cp_0.velocity.Y + 1f;
					num474 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num474].velocity *= 0.4f;
					Gore expr_F364_cp_0 = Main.gore[num474];
					expr_F364_cp_0.velocity.X = expr_F364_cp_0.velocity.X + 1f;
					Gore expr_F384_cp_0 = Main.gore[num474];
					expr_F384_cp_0.velocity.Y = expr_F384_cp_0.velocity.Y - 1f;
					num474 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num474].velocity *= 0.4f;
					Gore expr_F408_cp_0 = Main.gore[num474];
					expr_F408_cp_0.velocity.X = expr_F408_cp_0.velocity.X - 1f;
					Gore expr_F428_cp_0 = Main.gore[num474];
					expr_F428_cp_0.velocity.Y = expr_F428_cp_0.velocity.Y - 1f;
					this.position.X = this.position.X + (float)(this.width / 2);
					this.position.Y = this.position.Y + (float)(this.height / 2);
					this.width = 96;
					this.height = 96;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y - (float)(this.height / 2);
					this.Damage();
				}
				else if (this.type == 283 || this.type == 282)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
					for (int num475 = 0; num475 < 10; num475++)
					{
						int num476 = Dust.NewDust(this.position, this.width, this.height, 171, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num476].scale = (float)Main.rand.Next(1, 10) * 0.1f;
						Main.dust[num476].noGravity = true;
						Main.dust[num476].fadeIn = 1.5f;
						Main.dust[num476].velocity *= 0.75f;
					}
				}
				else if (this.type == 284)
				{
					for (int num477 = 0; num477 < 10; num477++)
					{
						int num478 = Main.rand.Next(139, 143);
						int num479 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num478, -this.velocity.X * 0.3f, -this.velocity.Y * 0.3f, 0, default(Color), 1.2f);
						Dust expr_F673_cp_0 = Main.dust[num479];
						expr_F673_cp_0.velocity.X = expr_F673_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.01f;
						Dust expr_F6A3_cp_0 = Main.dust[num479];
						expr_F6A3_cp_0.velocity.Y = expr_F6A3_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.01f;
						Dust expr_F6D3_cp_0 = Main.dust[num479];
						expr_F6D3_cp_0.velocity.X = expr_F6D3_cp_0.velocity.X * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
						Dust expr_F709_cp_0 = Main.dust[num479];
						expr_F709_cp_0.velocity.Y = expr_F709_cp_0.velocity.Y * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
						Dust expr_F73F_cp_0 = Main.dust[num479];
						expr_F73F_cp_0.velocity.X = expr_F73F_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.05f;
						Dust expr_F76F_cp_0 = Main.dust[num479];
						expr_F76F_cp_0.velocity.Y = expr_F76F_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.05f;
						Main.dust[num479].scale *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
					}
					for (int num480 = 0; num480 < 5; num480++)
					{
						int num481 = Main.rand.Next(276, 283);
						int num482 = Gore.NewGore(this.position, -this.velocity * 0.3f, num481, 1f);
						Gore expr_F834_cp_0 = Main.gore[num482];
						expr_F834_cp_0.velocity.X = expr_F834_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.01f;
						Gore expr_F864_cp_0 = Main.gore[num482];
						expr_F864_cp_0.velocity.Y = expr_F864_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.01f;
						Gore expr_F894_cp_0 = Main.gore[num482];
						expr_F894_cp_0.velocity.X = expr_F894_cp_0.velocity.X * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
						Gore expr_F8CA_cp_0 = Main.gore[num482];
						expr_F8CA_cp_0.velocity.Y = expr_F8CA_cp_0.velocity.Y * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
						Main.gore[num482].scale *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
						Gore expr_F931_cp_0 = Main.gore[num482];
						expr_F931_cp_0.velocity.X = expr_F931_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.05f;
						Gore expr_F961_cp_0 = Main.gore[num482];
						expr_F961_cp_0.velocity.Y = expr_F961_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.05f;
					}
				}
				else if (this.type == 286)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
					for (int num483 = 0; num483 < 7; num483++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
					}
					for (int num484 = 0; num484 < 3; num484++)
					{
						int num485 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
						Main.dust[num485].noGravity = true;
						Main.dust[num485].velocity *= 3f;
						num485 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num485].velocity *= 2f;
					}
					int num486 = Gore.NewGore(new Vector2(this.position.X - 10f, this.position.Y - 10f), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num486].velocity *= 0.3f;
					Gore expr_FBBC_cp_0 = Main.gore[num486];
					expr_FBBC_cp_0.velocity.X = expr_FBBC_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.05f;
					Gore expr_FBEC_cp_0 = Main.gore[num486];
					expr_FBEC_cp_0.velocity.Y = expr_FBEC_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.05f;
					if (this.owner == Main.myPlayer)
					{
						this.localAI[1] = -1f;
						this.maxPenetrate = 0;
						this.position.X = this.position.X + (float)(this.width / 2);
						this.position.Y = this.position.Y + (float)(this.height / 2);
						this.width = 80;
						this.height = 80;
						this.position.X = this.position.X - (float)(this.width / 2);
						this.position.Y = this.position.Y - (float)(this.height / 2);
						this.Damage();
					}
				}
				else if (this.type == 14 || this.type == 20 || this.type == 36 || this.type == 83 || this.type == 84 || this.type == 389 || this.type == 104 || this.type == 279 || this.type == 100 || this.type == 110 || this.type == 180 || this.type == 207 || this.type == 357 || this.type == 242 || this.type == 302 || this.type == 257 || this.type == 259 || this.type == 285 || this.type == 287 || this.type == 576 || this.type == 577)
				{
					Collision.HitTiles(this.position, this.velocity, this.width, this.height);
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
				}
				else if (this.type == 660)
				{
					Collision.HitTiles(this.position, this.velocity, this.width, this.height);
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
					int num487 = Main.rand.Next(4, 10);
					for (int num488 = 0; num488 < num487; num488++)
					{
						int num489 = Dust.NewDust(base.Center, 0, 0, 180, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num489].velocity *= 1.6f;
						Dust expr_FEDF_cp_0 = Main.dust[num489];
						expr_FEDF_cp_0.velocity.Y = expr_FEDF_cp_0.velocity.Y - 1f;
						Main.dust[num489].velocity += -this.velocity * (Main.rand.NextFloat() * 2f - 1f) * 0.5f;
						Main.dust[num489].scale = 2f;
						Main.dust[num489].fadeIn = 0.5f;
						Main.dust[num489].noGravity = true;
					}
				}
				else if (this.type == 638)
				{
					Collision.HitTiles(this.position, this.velocity, this.width, this.height);
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
					int num490 = Main.rand.Next(2, 5);
					for (int num491 = 0; num491 < num490; num491++)
					{
						int num492 = Dust.NewDust(base.Center, 0, 0, 229, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num492].velocity *= 1.6f;
						Dust expr_10058_cp_0 = Main.dust[num492];
						expr_10058_cp_0.velocity.Y = expr_10058_cp_0.velocity.Y - 1f;
						Main.dust[num492].position -= Vector2.One * 4f;
						Main.dust[num492].position = Vector2.Lerp(Main.dust[num492].position, base.Center, 0.5f);
						Main.dust[num492].noGravity = true;
					}
				}
				else if (this.type == 15 || this.type == 34 || this.type == 321)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
					for (int num493 = 0; num493 < 20; num493++)
					{
						int num494 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 2f);
						Main.dust[num494].noGravity = true;
						Main.dust[num494].velocity *= 2f;
						num494 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1f);
						Main.dust[num494].velocity *= 2f;
					}
				}
				else if (this.type == 253)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
					for (int num495 = 0; num495 < 20; num495++)
					{
						int num496 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 135, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 2f);
						Main.dust[num496].noGravity = true;
						Main.dust[num496].velocity *= 2f;
						num496 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 135, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1f);
						Main.dust[num496].velocity *= 2f;
					}
				}
				else if (this.type == 95 || this.type == 96)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
					for (int num497 = 0; num497 < 20; num497++)
					{
						int num498 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 75, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 2f * this.scale);
						Main.dust[num498].noGravity = true;
						Main.dust[num498].velocity *= 2f;
						num498 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 75, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1f * this.scale);
						Main.dust[num498].velocity *= 2f;
					}
				}
				else if (this.type == 79)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
					for (int num499 = 0; num499 < 20; num499++)
					{
						int num500 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 66, 0f, 0f, 100, new Color(Main.DiscoR, Main.DiscoG, Main.DiscoB), 2f);
						Main.dust[num500].noGravity = true;
						Main.dust[num500].velocity *= 4f;
					}
				}
				else if (this.type == 16)
				{
					if (this.type == 16 && this.penetrate == 1)
					{
						this.maxPenetrate = -1;
						this.penetrate = -1;
						int num501 = 60;
						this.position.X = this.position.X - (float)(num501 / 2);
						this.position.Y = this.position.Y - (float)(num501 / 2);
						this.width += num501;
						this.height += num501;
						this.tileCollide = false;
						this.velocity *= 0.01f;
						this.Damage();
						this.scale = 0.01f;
					}
					this.position.X = this.position.X + (float)(this.width / 2);
					this.width = 10;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y + (float)(this.height / 2);
					this.height = 10;
					this.position.Y = this.position.Y - (float)(this.height / 2);
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
					for (int num502 = 0; num502 < 20; num502++)
					{
						int num503 = Dust.NewDust(new Vector2(this.position.X - this.velocity.X, this.position.Y - this.velocity.Y), this.width, this.height, 15, 0f, 0f, 100, default(Color), 2f);
						Main.dust[num503].noGravity = true;
						Main.dust[num503].velocity *= 2f;
						num503 = Dust.NewDust(new Vector2(this.position.X - this.velocity.X, this.position.Y - this.velocity.Y), this.width, this.height, 15, 0f, 0f, 100, default(Color), 1f);
					}
				}
				else if (this.type == 17)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
					for (int num504 = 0; num504 < 5; num504++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 0, 0f, 0f, 0, default(Color), 1f);
					}
				}
				else if (this.type == 31 || this.type == 42)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
					for (int num505 = 0; num505 < 5; num505++)
					{
						int num506 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 32, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num506].velocity *= 0.6f;
					}
				}
				else if (this.type >= 411 && this.type <= 414)
				{
					int num507 = 9;
					if (this.type == 412 || this.type == 414)
					{
						num507 = 11;
					}
					if (this.type == 413)
					{
						num507 = 19;
					}
					for (int num508 = 0; num508 < 5; num508++)
					{
						int num509 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num507, 0f, this.velocity.Y / 2f, 0, default(Color), 1f);
						Main.dust[num509].noGravity = true;
						Main.dust[num509].velocity -= this.velocity * 0.5f;
					}
				}
				else if (this.type == 109)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
					for (int num510 = 0; num510 < 5; num510++)
					{
						int num511 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 51, 0f, 0f, 0, default(Color), 0.6f);
						Main.dust[num511].velocity *= 0.6f;
					}
				}
				else if (this.type == 39)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
					for (int num512 = 0; num512 < 5; num512++)
					{
						int num513 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 38, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num513].velocity *= 0.6f;
					}
				}
				else if (this.type == 71)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
					for (int num514 = 0; num514 < 5; num514++)
					{
						int num515 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 53, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num515].velocity *= 0.6f;
					}
				}
				else if (this.type == 40)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
					for (int num516 = 0; num516 < 5; num516++)
					{
						int num517 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 36, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num517].velocity *= 0.6f;
					}
				}
				else if (this.type == 21 || this.type == 471 || this.type == 532)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
					for (int num518 = 0; num518 < 10; num518++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 26, 0f, 0f, 0, default(Color), 0.8f);
					}
				}
				else if (this.type == 583)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
					for (int num519 = 0; num519 < 10; num519++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 4, 0f, 0f, 100, new Color(20, 250, 20, 240), 0.8f);
					}
				}
				else if (this.type == 584)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
					for (int num520 = 0; num520 < 10; num520++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 4, 0f, 0f, 100, new Color(250, 20, 120, 240), 0.8f);
					}
				}
				else if (this.type == 24)
				{
					for (int num521 = 0; num521 < 10; num521++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 1, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 0, default(Color), 0.75f);
					}
				}
				else if (this.type == 27)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
					for (int num522 = 0; num522 < 30; num522++)
					{
						int num523 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 172, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 100, default(Color), 1f);
						Main.dust[num523].noGravity = true;
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 172, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 100, default(Color), 0.5f);
					}
				}
				else if (this.type == 38)
				{
					for (int num524 = 0; num524 < 10; num524++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 42, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 0, default(Color), 1f);
					}
				}
				else if (this.type == 44 || this.type == 45)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
					for (int num525 = 0; num525 < 30; num525++)
					{
						int num526 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, this.velocity.X, this.velocity.Y, 100, default(Color), 1.7f);
						Main.dust[num526].noGravity = true;
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, this.velocity.X, this.velocity.Y, 100, default(Color), 1f);
					}
				}
				else if (this.type == 41)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
					for (int num527 = 0; num527 < 10; num527++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
					}
					for (int num528 = 0; num528 < 5; num528++)
					{
						int num529 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
						Main.dust[num529].noGravity = true;
						Main.dust[num529].velocity *= 3f;
						num529 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num529].velocity *= 2f;
					}
					int num530 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num530].velocity *= 0.4f;
					Gore expr_11599_cp_0 = Main.gore[num530];
					expr_11599_cp_0.velocity.X = expr_11599_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.1f;
					Gore expr_115C9_cp_0 = Main.gore[num530];
					expr_115C9_cp_0.velocity.Y = expr_115C9_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.1f;
					num530 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num530].velocity *= 0.4f;
					Gore expr_1165D_cp_0 = Main.gore[num530];
					expr_1165D_cp_0.velocity.X = expr_1165D_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.1f;
					Gore expr_1168D_cp_0 = Main.gore[num530];
					expr_1168D_cp_0.velocity.Y = expr_1168D_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.1f;
					if (this.owner == Main.myPlayer)
					{
						this.penetrate = -1;
						this.position.X = this.position.X + (float)(this.width / 2);
						this.position.Y = this.position.Y + (float)(this.height / 2);
						this.width = 64;
						this.height = 64;
						this.position.X = this.position.X - (float)(this.width / 2);
						this.position.Y = this.position.Y - (float)(this.height / 2);
						this.Damage();
					}
				}
				else if (this.type == 514)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
					for (int num531 = 0; num531 < 10; num531++)
					{
						int num532 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.3f);
						Main.dust[num532].velocity *= 1.4f;
					}
					for (int num533 = 0; num533 < 6; num533++)
					{
						int num534 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.1f);
						Main.dust[num534].noGravity = true;
						Main.dust[num534].velocity *= 4.6f;
						num534 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.3f);
						Main.dust[num534].velocity *= 3.3f;
						if (Main.rand.Next(2) == 0)
						{
							num534 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.1f);
							Main.dust[num534].velocity *= 2.7f;
						}
					}
					if (this.owner == Main.myPlayer)
					{
						this.penetrate = -1;
						this.position.X = this.position.X + (float)(this.width / 2);
						this.position.Y = this.position.Y + (float)(this.height / 2);
						this.width = 112;
						this.height = 112;
						this.position.X = this.position.X - (float)(this.width / 2);
						this.position.Y = this.position.Y - (float)(this.height / 2);
						this.ai[0] = 2f;
						this.Damage();
					}
				}
				else if (this.type == 306)
				{
					Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, 1);
					for (int num535 = 0; num535 < 20; num535++)
					{
						int num536 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 184, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num536].scale *= 1.1f;
						Main.dust[num536].noGravity = true;
					}
					for (int num537 = 0; num537 < 30; num537++)
					{
						int num538 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 184, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num538].velocity *= 2.5f;
						Main.dust[num538].scale *= 0.8f;
						Main.dust[num538].noGravity = true;
					}
					if (this.owner == Main.myPlayer)
					{
						int num539 = 2;
						if (Main.rand.Next(10) == 0)
						{
							num539++;
						}
						if (Main.rand.Next(10) == 0)
						{
							num539++;
						}
						if (Main.rand.Next(10) == 0)
						{
							num539++;
						}
						for (int num540 = 0; num540 < num539; num540++)
						{
							float num541 = (float)Main.rand.Next(-35, 36) * 0.02f;
							float num542 = (float)Main.rand.Next(-35, 36) * 0.02f;
							num541 *= 10f;
							num542 *= 10f;
							Projectile.NewProjectile(this.position.X, this.position.Y, num541, num542, 307, (int)((double)this.damage * 0.7), (float)((int)((double)this.knockBack * 0.35)), Main.myPlayer, 0f, 0f);
						}
					}
				}
				else if (this.type == 469)
				{
					if (this.owner == Main.myPlayer)
					{
						int num543 = 6;
						for (int num544 = 0; num544 < num543; num544++)
						{
							if (num544 % 2 != 1 || Main.rand.Next(3) == 0)
							{
								Vector2 value20 = this.position;
								Vector2 value21 = this.oldVelocity;
								value21.Normalize();
								value21 *= 8f;
								float num545 = (float)Main.rand.Next(-35, 36) * 0.01f;
								float num546 = (float)Main.rand.Next(-35, 36) * 0.01f;
								value20 -= value21 * (float)num544;
								num545 += this.oldVelocity.X / 6f;
								num546 += this.oldVelocity.Y / 6f;
								int num547 = Projectile.NewProjectile(value20.X, value20.Y, num545, num546, Main.player[this.owner].beeType(), Main.player[this.owner].beeDamage(this.damage / 3), Main.player[this.owner].beeKB(0f), Main.myPlayer, 0f, 0f);
								Main.projectile[num547].magic = false;
								Main.projectile[num547].ranged = true;
								Main.projectile[num547].penetrate = 2;
							}
						}
					}
				}
				else if (this.type == 183)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
					for (int num548 = 0; num548 < 20; num548++)
					{
						int num549 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num549].velocity *= 1f;
					}
					int num550 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Gore expr_11FB7_cp_0 = Main.gore[num550];
					expr_11FB7_cp_0.velocity.X = expr_11FB7_cp_0.velocity.X + 1f;
					Gore expr_11FD7_cp_0 = Main.gore[num550];
					expr_11FD7_cp_0.velocity.Y = expr_11FD7_cp_0.velocity.Y + 1f;
					Main.gore[num550].velocity *= 0.3f;
					num550 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Gore expr_1205B_cp_0 = Main.gore[num550];
					expr_1205B_cp_0.velocity.X = expr_1205B_cp_0.velocity.X - 1f;
					Gore expr_1207B_cp_0 = Main.gore[num550];
					expr_1207B_cp_0.velocity.Y = expr_1207B_cp_0.velocity.Y + 1f;
					Main.gore[num550].velocity *= 0.3f;
					num550 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Gore expr_120FF_cp_0 = Main.gore[num550];
					expr_120FF_cp_0.velocity.X = expr_120FF_cp_0.velocity.X + 1f;
					Gore expr_1211F_cp_0 = Main.gore[num550];
					expr_1211F_cp_0.velocity.Y = expr_1211F_cp_0.velocity.Y - 1f;
					Main.gore[num550].velocity *= 0.3f;
					num550 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Gore expr_121A3_cp_0 = Main.gore[num550];
					expr_121A3_cp_0.velocity.X = expr_121A3_cp_0.velocity.X - 1f;
					Gore expr_121C3_cp_0 = Main.gore[num550];
					expr_121C3_cp_0.velocity.Y = expr_121C3_cp_0.velocity.Y - 1f;
					Main.gore[num550].velocity *= 0.3f;
					if (this.owner == Main.myPlayer)
					{
						int num551 = Main.rand.Next(15, 25);
						for (int num552 = 0; num552 < num551; num552++)
						{
							float speedX = (float)Main.rand.Next(-35, 36) * 0.02f;
							float speedY = (float)Main.rand.Next(-35, 36) * 0.02f;
							Projectile.NewProjectile(this.position.X, this.position.Y, speedX, speedY, Main.player[this.owner].beeType(), Main.player[this.owner].beeDamage(this.damage), Main.player[this.owner].beeKB(0f), Main.myPlayer, 0f, 0f);
						}
					}
				}
				else if (this.aiStyle == 34)
				{
					if (this.owner != Main.myPlayer)
					{
						this.timeLeft = 60;
					}
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
					if (this.type == 167)
					{
						for (int num553 = 0; num553 < 400; num553++)
						{
							float num554 = 16f;
							if (num553 < 300)
							{
								num554 = 12f;
							}
							if (num553 < 200)
							{
								num554 = 8f;
							}
							if (num553 < 100)
							{
								num554 = 4f;
							}
							int num555 = 130;
							int num556 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, num555, 0f, 0f, 100, default(Color), 1f);
							float num557 = Main.dust[num556].velocity.X;
							float num558 = Main.dust[num556].velocity.Y;
							if (num557 == 0f && num558 == 0f)
							{
								num557 = 1f;
							}
							float num559 = (float)Math.Sqrt((double)(num557 * num557 + num558 * num558));
							num559 = num554 / num559;
							num557 *= num559;
							num558 *= num559;
							Main.dust[num556].velocity *= 0.5f;
							Dust expr_12490_cp_0 = Main.dust[num556];
							expr_12490_cp_0.velocity.X = expr_12490_cp_0.velocity.X + num557;
							Dust expr_124AF_cp_0 = Main.dust[num556];
							expr_124AF_cp_0.velocity.Y = expr_124AF_cp_0.velocity.Y + num558;
							Main.dust[num556].scale = 1.3f;
							Main.dust[num556].noGravity = true;
						}
					}
					if (this.type == 168)
					{
						for (int num560 = 0; num560 < 400; num560++)
						{
							float num561 = 2f * ((float)num560 / 100f);
							if (num560 > 100)
							{
								num561 = 10f;
							}
							if (num560 > 250)
							{
								num561 = 13f;
							}
							int num562 = 131;
							int num563 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, num562, 0f, 0f, 100, default(Color), 1f);
							float num564 = Main.dust[num563].velocity.X;
							float num565 = Main.dust[num563].velocity.Y;
							if (num564 == 0f && num565 == 0f)
							{
								num564 = 1f;
							}
							float num566 = (float)Math.Sqrt((double)(num564 * num564 + num565 * num565));
							num566 = num561 / num566;
							if (num560 <= 200)
							{
								num564 *= num566;
								num565 *= num566;
							}
							else
							{
								num564 = num564 * num566 * 1.25f;
								num565 = num565 * num566 * 0.75f;
							}
							Main.dust[num563].velocity *= 0.5f;
							Dust expr_12696_cp_0 = Main.dust[num563];
							expr_12696_cp_0.velocity.X = expr_12696_cp_0.velocity.X + num564;
							Dust expr_126B5_cp_0 = Main.dust[num563];
							expr_126B5_cp_0.velocity.Y = expr_126B5_cp_0.velocity.Y + num565;
							if (num560 > 100)
							{
								Main.dust[num563].scale = 1.3f;
								Main.dust[num563].noGravity = true;
							}
						}
					}
					if (this.type == 169)
					{
						Vector2 vector11 = ((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2();
						float num567 = (float)Main.rand.Next(5, 9);
						float num568 = (float)Main.rand.Next(12, 17);
						float value22 = (float)Main.rand.Next(3, 7);
						float num569 = 20f;
						for (float num570 = 0f; num570 < num567; num570 += 1f)
						{
							for (int num571 = 0; num571 < 2; num571++)
							{
								Vector2 value23 = vector11.RotatedBy((double)(((num571 == 0) ? 1f : -1f) * 6.28318548f / (num567 * 2f)), default(Vector2));
								for (float num572 = 0f; num572 < num569; num572 += 1f)
								{
									Vector2 value24 = Vector2.Lerp(vector11, value23, num572 / num569);
									float scaleFactor2 = MathHelper.Lerp(num568, value22, num572 / num569);
									int num573 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, 133, 0f, 0f, 100, default(Color), 1.3f);
									Main.dust[num573].velocity *= 0.1f;
									Main.dust[num573].noGravity = true;
									Main.dust[num573].velocity += value24 * scaleFactor2;
								}
							}
							vector11 = vector11.RotatedBy((double)(6.28318548f / num567), default(Vector2));
						}
						for (float num574 = 0f; num574 < num567; num574 += 1f)
						{
							for (int num575 = 0; num575 < 2; num575++)
							{
								Vector2 value25 = vector11.RotatedBy((double)(((num575 == 0) ? 1f : -1f) * 6.28318548f / (num567 * 2f)), default(Vector2));
								for (float num576 = 0f; num576 < num569; num576 += 1f)
								{
									Vector2 value26 = Vector2.Lerp(vector11, value25, num576 / num569);
									float scaleFactor3 = MathHelper.Lerp(num568, value22, num576 / num569) / 2f;
									int num577 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, 133, 0f, 0f, 100, default(Color), 1.3f);
									Main.dust[num577].velocity *= 0.1f;
									Main.dust[num577].noGravity = true;
									Main.dust[num577].velocity += value26 * scaleFactor3;
								}
							}
							vector11 = vector11.RotatedBy((double)(6.28318548f / num567), default(Vector2));
						}
						for (int num578 = 0; num578 < 100; num578++)
						{
							float num579 = num568;
							int num580 = 132;
							int num581 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, num580, 0f, 0f, 100, default(Color), 1f);
							float num582 = Main.dust[num581].velocity.X;
							float num583 = Main.dust[num581].velocity.Y;
							if (num582 == 0f && num583 == 0f)
							{
								num582 = 1f;
							}
							float num584 = (float)Math.Sqrt((double)(num582 * num582 + num583 * num583));
							num584 = num579 / num584;
							num582 *= num584;
							num583 *= num584;
							Main.dust[num581].velocity *= 0.5f;
							Dust expr_12BF0_cp_0 = Main.dust[num581];
							expr_12BF0_cp_0.velocity.X = expr_12BF0_cp_0.velocity.X + num582;
							Dust expr_12C0F_cp_0 = Main.dust[num581];
							expr_12C0F_cp_0.velocity.Y = expr_12C0F_cp_0.velocity.Y + num583;
							Main.dust[num581].scale = 1.3f;
							Main.dust[num581].noGravity = true;
						}
					}
					if (this.type == 170)
					{
						for (int num585 = 0; num585 < 400; num585++)
						{
							int num586 = 133;
							float num587 = 16f;
							if (num585 > 100)
							{
								num587 = 11f;
							}
							if (num585 > 100)
							{
								num586 = 134;
							}
							if (num585 > 200)
							{
								num587 = 8f;
							}
							if (num585 > 200)
							{
								num586 = 133;
							}
							if (num585 > 300)
							{
								num587 = 5f;
							}
							if (num585 > 300)
							{
								num586 = 134;
							}
							int num588 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, num586, 0f, 0f, 100, default(Color), 1f);
							float num589 = Main.dust[num588].velocity.X;
							float num590 = Main.dust[num588].velocity.Y;
							if (num589 == 0f && num590 == 0f)
							{
								num589 = 1f;
							}
							float num591 = (float)Math.Sqrt((double)(num589 * num589 + num590 * num590));
							num591 = num587 / num591;
							if (num585 > 300)
							{
								num589 = num589 * num591 * 0.7f;
								num590 *= num591;
							}
							else if (num585 > 200)
							{
								num589 *= num591;
								num590 = num590 * num591 * 0.7f;
							}
							else if (num585 > 100)
							{
								num589 = num589 * num591 * 0.7f;
								num590 *= num591;
							}
							else
							{
								num589 *= num591;
								num590 = num590 * num591 * 0.7f;
							}
							Main.dust[num588].velocity *= 0.5f;
							Dust expr_12E8B_cp_0 = Main.dust[num588];
							expr_12E8B_cp_0.velocity.X = expr_12E8B_cp_0.velocity.X + num589;
							Dust expr_12EAA_cp_0 = Main.dust[num588];
							expr_12EAA_cp_0.velocity.Y = expr_12EAA_cp_0.velocity.Y + num590;
							if (Main.rand.Next(3) != 0)
							{
								Main.dust[num588].scale = 1.3f;
								Main.dust[num588].noGravity = true;
							}
						}
					}
					if (this.type == 415)
					{
						Vector2 vector12 = ((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2();
						float num592 = (float)Main.rand.Next(5, 9);
						float num593 = (float)Main.rand.Next(10, 15) * 0.66f;
						float num594 = (float)Main.rand.Next(4, 7) / 2f;
						int num595 = 30;
						int num596 = 0;
						while ((float)num596 < (float)num595 * num592)
						{
							if (num596 % num595 == 0)
							{
								vector12 = vector12.RotatedBy((double)(6.28318548f / num592), default(Vector2));
							}
							float scaleFactor4 = MathHelper.Lerp(num594, num593, (float)(num596 % num595) / (float)num595);
							int num597 = 130;
							int num598 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, num597, 0f, 0f, 100, default(Color), 1f);
							Main.dust[num598].velocity *= 0.1f;
							Main.dust[num598].velocity += vector12 * scaleFactor4;
							Main.dust[num598].scale = 1.3f;
							Main.dust[num598].noGravity = true;
							num596++;
						}
						for (int num599 = 0; num599 < 100; num599++)
						{
							float num600 = num593;
							if (num599 < 30)
							{
								num600 = (num594 + num593) / 2f;
							}
							int num601 = 130;
							int num602 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, num601, 0f, 0f, 100, default(Color), 1f);
							float num603 = Main.dust[num602].velocity.X;
							float num604 = Main.dust[num602].velocity.Y;
							if (num603 == 0f && num604 == 0f)
							{
								num603 = 1f;
							}
							float num605 = (float)Math.Sqrt((double)(num603 * num603 + num604 * num604));
							num605 = num600 / num605;
							num603 *= num605;
							num604 *= num605;
							Main.dust[num602].velocity *= 0.5f;
							Dust expr_131F1_cp_0 = Main.dust[num602];
							expr_131F1_cp_0.velocity.X = expr_131F1_cp_0.velocity.X + num603;
							Dust expr_13210_cp_0 = Main.dust[num602];
							expr_13210_cp_0.velocity.Y = expr_13210_cp_0.velocity.Y + num604;
							Main.dust[num602].scale = 1.3f;
							Main.dust[num602].noGravity = true;
						}
					}
					if (this.type == 416)
					{
						Vector2 vector13 = ((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2();
						Vector2 vector14 = vector13;
						float num606 = (float)(Main.rand.Next(3, 6) * 2);
						int num607 = 20;
						float num608 = (Main.rand.Next(2) == 0) ? 1f : -1f;
						bool flag2 = true;
						int num609 = 0;
						while ((float)num609 < (float)num607 * num606)
						{
							if (num609 % num607 == 0)
							{
								vector14 = vector14.RotatedBy((double)(num608 * (6.28318548f / num606)), default(Vector2));
								vector13 = vector14;
								flag2 = !flag2;
							}
							else
							{
								float num610 = 6.28318548f / ((float)num607 * num606);
								vector13 = vector13.RotatedBy((double)(num610 * num608 * 3f), default(Vector2));
							}
							float scaleFactor5 = MathHelper.Lerp(1f, 8f, (float)(num609 % num607) / (float)num607);
							int num611 = 131;
							int num612 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, num611, 0f, 0f, 100, default(Color), 1.4f);
							Main.dust[num612].velocity *= 0.1f;
							Main.dust[num612].velocity += vector13 * scaleFactor5;
							if (flag2)
							{
								Main.dust[num612].scale = 0.9f;
							}
							Main.dust[num612].noGravity = true;
							num609++;
						}
					}
					if (this.type == 417)
					{
						float num613 = (float)Main.rand.NextDouble() * 6.28318548f;
						float num614 = (float)Main.rand.NextDouble() * 6.28318548f;
						float num615 = 4f + (float)Main.rand.NextDouble() * 3f;
						float num616 = 4f + (float)Main.rand.NextDouble() * 3f;
						float num617 = num615;
						if (num616 > num617)
						{
							num617 = num616;
						}
						for (int num618 = 0; num618 < 150; num618++)
						{
							int num619 = 132;
							float scaleFactor6 = num617;
							if (num618 > 50)
							{
								scaleFactor6 = num616;
							}
							if (num618 > 50)
							{
								num619 = 133;
							}
							if (num618 > 100)
							{
								scaleFactor6 = num615;
							}
							if (num618 > 100)
							{
								num619 = 132;
							}
							int num620 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, num619, 0f, 0f, 100, default(Color), 1f);
							Vector2 vector15 = Main.dust[num620].velocity;
							vector15.Normalize();
							vector15 *= scaleFactor6;
							if (num618 > 100)
							{
								vector15.X *= 0.5f;
								vector15 = vector15.RotatedBy((double)num613, default(Vector2));
							}
							else if (num618 > 50)
							{
								vector15.Y *= 0.5f;
								vector15 = vector15.RotatedBy((double)num614, default(Vector2));
							}
							Main.dust[num620].velocity *= 0.2f;
							Main.dust[num620].velocity += vector15;
							if (num618 <= 200)
							{
								Main.dust[num620].scale = 1.3f;
								Main.dust[num620].noGravity = true;
							}
						}
					}
					if (this.type == 418)
					{
						Vector2 vector16 = ((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2();
						float num621 = (float)Main.rand.Next(5, 12);
						float num622 = (float)Main.rand.Next(9, 14) * 0.66f;
						float num623 = (float)Main.rand.Next(2, 4) * 0.66f;
						float num624 = 15f;
						for (float num625 = 0f; num625 < num621; num625 += 1f)
						{
							for (int num626 = 0; num626 < 2; num626++)
							{
								Vector2 value27 = vector16.RotatedBy((double)(((num626 == 0) ? 1f : -1f) * 6.28318548f / (num621 * 2f)), default(Vector2));
								for (float num627 = 0f; num627 < num624; num627 += 1f)
								{
									Vector2 value28 = Vector2.SmoothStep(vector16, value27, num627 / num624);
									float scaleFactor7 = MathHelper.SmoothStep(num622, num623, num627 / num624);
									int num628 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, 134, 0f, 0f, 100, default(Color), 1.3f);
									Main.dust[num628].velocity *= 0.1f;
									Main.dust[num628].noGravity = true;
									Main.dust[num628].velocity += value28 * scaleFactor7;
								}
							}
							vector16 = vector16.RotatedBy((double)(6.28318548f / num621), default(Vector2));
						}
						for (int num629 = 0; num629 < 120; num629++)
						{
							float num630 = num622;
							int num631 = 133;
							if (num629 < 80)
							{
								num630 = num623 - 0.5f;
							}
							else
							{
								num631 = 131;
							}
							int num632 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, num631, 0f, 0f, 100, default(Color), 1f);
							float num633 = Main.dust[num632].velocity.X;
							float num634 = Main.dust[num632].velocity.Y;
							if (num633 == 0f && num634 == 0f)
							{
								num633 = 1f;
							}
							float num635 = (float)Math.Sqrt((double)(num633 * num633 + num634 * num634));
							num635 = num630 / num635;
							num633 *= num635;
							num634 *= num635;
							Main.dust[num632].velocity *= 0.2f;
							Dust expr_13A20_cp_0 = Main.dust[num632];
							expr_13A20_cp_0.velocity.X = expr_13A20_cp_0.velocity.X + num633;
							Dust expr_13A3F_cp_0 = Main.dust[num632];
							expr_13A3F_cp_0.velocity.Y = expr_13A3F_cp_0.velocity.Y + num634;
							Main.dust[num632].scale = 1.3f;
							Main.dust[num632].noGravity = true;
						}
					}
					this.position.X = this.position.X + (float)(this.width / 2);
					this.position.Y = this.position.Y + (float)(this.height / 2);
					this.width = 192;
					this.height = 192;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y - (float)(this.height / 2);
					this.penetrate = -1;
					this.Damage();
				}
				else if (this.type == 312)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
					this.position.X = this.position.X + (float)(this.width / 2);
					this.position.Y = this.position.Y + (float)(this.height / 2);
					this.width = 22;
					this.height = 22;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y - (float)(this.height / 2);
					for (int num636 = 0; num636 < 30; num636++)
					{
						int num637 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num637].velocity *= 1.4f;
					}
					for (int num638 = 0; num638 < 20; num638++)
					{
						int num639 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 3.5f);
						Main.dust[num639].noGravity = true;
						Main.dust[num639].velocity *= 7f;
						num639 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num639].velocity *= 3f;
					}
					for (int num640 = 0; num640 < 2; num640++)
					{
						float scaleFactor8 = 0.4f;
						if (num640 == 1)
						{
							scaleFactor8 = 0.8f;
						}
						int num641 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num641].velocity *= scaleFactor8;
						Gore expr_13DF6_cp_0 = Main.gore[num641];
						expr_13DF6_cp_0.velocity.X = expr_13DF6_cp_0.velocity.X + 1f;
						Gore expr_13E16_cp_0 = Main.gore[num641];
						expr_13E16_cp_0.velocity.Y = expr_13E16_cp_0.velocity.Y + 1f;
						num641 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num641].velocity *= scaleFactor8;
						Gore expr_13E99_cp_0 = Main.gore[num641];
						expr_13E99_cp_0.velocity.X = expr_13E99_cp_0.velocity.X - 1f;
						Gore expr_13EB9_cp_0 = Main.gore[num641];
						expr_13EB9_cp_0.velocity.Y = expr_13EB9_cp_0.velocity.Y + 1f;
						num641 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num641].velocity *= scaleFactor8;
						Gore expr_13F3C_cp_0 = Main.gore[num641];
						expr_13F3C_cp_0.velocity.X = expr_13F3C_cp_0.velocity.X + 1f;
						Gore expr_13F5C_cp_0 = Main.gore[num641];
						expr_13F5C_cp_0.velocity.Y = expr_13F5C_cp_0.velocity.Y - 1f;
						num641 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num641].velocity *= scaleFactor8;
						Gore expr_13FDF_cp_0 = Main.gore[num641];
						expr_13FDF_cp_0.velocity.X = expr_13FDF_cp_0.velocity.X - 1f;
						Gore expr_13FFF_cp_0 = Main.gore[num641];
						expr_13FFF_cp_0.velocity.Y = expr_13FFF_cp_0.velocity.Y - 1f;
					}
					this.position.X = this.position.X + (float)(this.width / 2);
					this.position.Y = this.position.Y + (float)(this.height / 2);
					this.width = 128;
					this.height = 128;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y - (float)(this.height / 2);
					this.Damage();
				}
				else if (this.type == 133 || this.type == 134 || this.type == 135 || this.type == 136 || this.type == 137 || this.type == 138 || this.type == 303 || this.type == 338 || this.type == 339)
				{
					if (this.type == 30 || this.type == 133 || this.type == 136 || this.type == 139)
					{
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 62);
					}
					else
					{
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
					}
					this.position.X = this.position.X + (float)(this.width / 2);
					this.position.Y = this.position.Y + (float)(this.height / 2);
					this.width = 22;
					this.height = 22;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y - (float)(this.height / 2);
					for (int num642 = 0; num642 < 30; num642++)
					{
						int num643 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num643].velocity *= 1.4f;
					}
					for (int num644 = 0; num644 < 20; num644++)
					{
						int num645 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 3.5f);
						Main.dust[num645].noGravity = true;
						Main.dust[num645].velocity *= 7f;
						num645 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num645].velocity *= 3f;
					}
					for (int num646 = 0; num646 < 2; num646++)
					{
						float scaleFactor9 = 0.4f;
						if (num646 == 1)
						{
							scaleFactor9 = 0.8f;
						}
						int num647 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num647].velocity *= scaleFactor9;
						Gore expr_14446_cp_0 = Main.gore[num647];
						expr_14446_cp_0.velocity.X = expr_14446_cp_0.velocity.X + 1f;
						Gore expr_14466_cp_0 = Main.gore[num647];
						expr_14466_cp_0.velocity.Y = expr_14466_cp_0.velocity.Y + 1f;
						num647 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num647].velocity *= scaleFactor9;
						Gore expr_144E9_cp_0 = Main.gore[num647];
						expr_144E9_cp_0.velocity.X = expr_144E9_cp_0.velocity.X - 1f;
						Gore expr_14509_cp_0 = Main.gore[num647];
						expr_14509_cp_0.velocity.Y = expr_14509_cp_0.velocity.Y + 1f;
						num647 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num647].velocity *= scaleFactor9;
						Gore expr_1458C_cp_0 = Main.gore[num647];
						expr_1458C_cp_0.velocity.X = expr_1458C_cp_0.velocity.X + 1f;
						Gore expr_145AC_cp_0 = Main.gore[num647];
						expr_145AC_cp_0.velocity.Y = expr_145AC_cp_0.velocity.Y - 1f;
						num647 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num647].velocity *= scaleFactor9;
						Gore expr_1462F_cp_0 = Main.gore[num647];
						expr_1462F_cp_0.velocity.X = expr_1462F_cp_0.velocity.X - 1f;
						Gore expr_1464F_cp_0 = Main.gore[num647];
						expr_1464F_cp_0.velocity.Y = expr_1464F_cp_0.velocity.Y - 1f;
					}
				}
				else if (this.type == 139 || this.type == 140 || this.type == 141 || this.type == 142 || this.type == 143 || this.type == 144 || this.type == 340 || this.type == 341)
				{
					if (this.type == 30 || this.type == 133 || this.type == 136 || this.type == 139)
					{
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 62);
					}
					else
					{
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
					}
					this.position.X = this.position.X + (float)(this.width / 2);
					this.position.Y = this.position.Y + (float)(this.height / 2);
					this.width = 80;
					this.height = 80;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y - (float)(this.height / 2);
					for (int num648 = 0; num648 < 40; num648++)
					{
						int num649 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 2f);
						Main.dust[num649].velocity *= 3f;
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num649].scale = 0.5f;
							Main.dust[num649].fadeIn = 1f + (float)Main.rand.Next(10) * 0.1f;
						}
					}
					for (int num650 = 0; num650 < 70; num650++)
					{
						int num651 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 3f);
						Main.dust[num651].noGravity = true;
						Main.dust[num651].velocity *= 5f;
						num651 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2f);
						Main.dust[num651].velocity *= 2f;
					}
					for (int num652 = 0; num652 < 3; num652++)
					{
						float scaleFactor10 = 0.33f;
						if (num652 == 1)
						{
							scaleFactor10 = 0.66f;
						}
						if (num652 == 2)
						{
							scaleFactor10 = 1f;
						}
						int num653 = Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num653].velocity *= scaleFactor10;
						Gore expr_14A7D_cp_0 = Main.gore[num653];
						expr_14A7D_cp_0.velocity.X = expr_14A7D_cp_0.velocity.X + 1f;
						Gore expr_14A9D_cp_0 = Main.gore[num653];
						expr_14A9D_cp_0.velocity.Y = expr_14A9D_cp_0.velocity.Y + 1f;
						num653 = Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num653].velocity *= scaleFactor10;
						Gore expr_14B40_cp_0 = Main.gore[num653];
						expr_14B40_cp_0.velocity.X = expr_14B40_cp_0.velocity.X - 1f;
						Gore expr_14B60_cp_0 = Main.gore[num653];
						expr_14B60_cp_0.velocity.Y = expr_14B60_cp_0.velocity.Y + 1f;
						num653 = Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num653].velocity *= scaleFactor10;
						Gore expr_14C03_cp_0 = Main.gore[num653];
						expr_14C03_cp_0.velocity.X = expr_14C03_cp_0.velocity.X + 1f;
						Gore expr_14C23_cp_0 = Main.gore[num653];
						expr_14C23_cp_0.velocity.Y = expr_14C23_cp_0.velocity.Y - 1f;
						num653 = Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num653].velocity *= scaleFactor10;
						Gore expr_14CC6_cp_0 = Main.gore[num653];
						expr_14CC6_cp_0.velocity.X = expr_14CC6_cp_0.velocity.X - 1f;
						Gore expr_14CE6_cp_0 = Main.gore[num653];
						expr_14CE6_cp_0.velocity.Y = expr_14CE6_cp_0.velocity.Y - 1f;
					}
					this.position.X = this.position.X + (float)(this.width / 2);
					this.position.Y = this.position.Y + (float)(this.height / 2);
					this.width = 10;
					this.height = 10;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y - (float)(this.height / 2);
				}
				else if (this.type == 246)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
					for (int num654 = 0; num654 < 10; num654++)
					{
						int num655 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num655].velocity *= 0.9f;
					}
					for (int num656 = 0; num656 < 5; num656++)
					{
						int num657 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
						Main.dust[num657].noGravity = true;
						Main.dust[num657].velocity *= 3f;
						num657 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num657].velocity *= 2f;
					}
					int num658 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num658].velocity *= 0.3f;
					Gore expr_14FC7_cp_0 = Main.gore[num658];
					expr_14FC7_cp_0.velocity.X = expr_14FC7_cp_0.velocity.X + (float)Main.rand.Next(-1, 2);
					Gore expr_14FEF_cp_0 = Main.gore[num658];
					expr_14FEF_cp_0.velocity.Y = expr_14FEF_cp_0.velocity.Y + (float)Main.rand.Next(-1, 2);
					this.position.X = this.position.X + (float)(this.width / 2);
					this.position.Y = this.position.Y + (float)(this.height / 2);
					this.width = 150;
					this.height = 150;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y - (float)(this.height / 2);
					this.penetrate = -1;
					this.maxPenetrate = 0;
					this.Damage();
					if (this.owner == Main.myPlayer)
					{
						int num659 = Main.rand.Next(2, 6);
						for (int num660 = 0; num660 < num659; num660++)
						{
							float num661 = (float)Main.rand.Next(-100, 101);
							num661 += 0.01f;
							float num662 = (float)Main.rand.Next(-100, 101);
							num661 -= 0.01f;
							float num663 = (float)Math.Sqrt((double)(num661 * num661 + num662 * num662));
							num663 = 8f / num663;
							num661 *= num663;
							num662 *= num663;
							int num664 = Projectile.NewProjectile(base.Center.X - this.oldVelocity.X, base.Center.Y - this.oldVelocity.Y, num661, num662, 249, this.damage, this.knockBack, this.owner, 0f, 0f);
							Main.projectile[num664].maxPenetrate = 0;
						}
					}
				}
				else if (this.type == 249)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
					for (int num665 = 0; num665 < 7; num665++)
					{
						int num666 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num666].velocity *= 0.8f;
					}
					for (int num667 = 0; num667 < 2; num667++)
					{
						int num668 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
						Main.dust[num668].noGravity = true;
						Main.dust[num668].velocity *= 2.5f;
						num668 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num668].velocity *= 1.5f;
					}
					int num669 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num669].velocity *= 0.2f;
					Gore expr_15416_cp_0 = Main.gore[num669];
					expr_15416_cp_0.velocity.X = expr_15416_cp_0.velocity.X + (float)Main.rand.Next(-1, 2);
					Gore expr_1543E_cp_0 = Main.gore[num669];
					expr_1543E_cp_0.velocity.Y = expr_1543E_cp_0.velocity.Y + (float)Main.rand.Next(-1, 2);
					this.position.X = this.position.X + (float)(this.width / 2);
					this.position.Y = this.position.Y + (float)(this.height / 2);
					this.width = 100;
					this.height = 100;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y - (float)(this.height / 2);
					this.penetrate = -1;
					this.Damage();
				}
				else if (this.type == 588)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
					this.position = base.Center;
					this.width = (this.height = 22);
					base.Center = this.position;
					for (int num670 = 0; num670 < 8; num670++)
					{
						int num671 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 219 + Main.rand.Next(5), 0f, 0f, 0, default(Color), 1f);
						Main.dust[num671].velocity *= 1.4f;
						Main.dust[num671].fadeIn = 1f;
						Main.dust[num671].noGravity = true;
					}
					for (int num672 = 0; num672 < 15; num672++)
					{
						int num673 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 139 + Main.rand.Next(4), 0f, 0f, 0, default(Color), 1.6f);
						Main.dust[num673].noGravity = true;
						Main.dust[num673].velocity *= 5f;
						num673 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 139 + Main.rand.Next(4), 0f, 0f, 0, default(Color), 1.9f);
						Main.dust[num673].velocity *= 3f;
					}
					if (Main.rand.Next(2) == 0)
					{
						int num674 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(276, 283), 1f);
						Main.gore[num674].velocity *= 0.4f;
						Gore expr_157B8_cp_0 = Main.gore[num674];
						expr_157B8_cp_0.velocity.X = expr_157B8_cp_0.velocity.X + 1f;
						Gore expr_157D8_cp_0 = Main.gore[num674];
						expr_157D8_cp_0.velocity.Y = expr_157D8_cp_0.velocity.Y + 1f;
					}
					if (Main.rand.Next(2) == 0)
					{
						int num674 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(276, 283), 1f);
						Main.gore[num674].velocity *= 0.4f;
						Gore expr_15872_cp_0 = Main.gore[num674];
						expr_15872_cp_0.velocity.X = expr_15872_cp_0.velocity.X - 1f;
						Gore expr_15892_cp_0 = Main.gore[num674];
						expr_15892_cp_0.velocity.Y = expr_15892_cp_0.velocity.Y + 1f;
					}
					if (Main.rand.Next(2) == 0)
					{
						int num674 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(276, 283), 1f);
						Main.gore[num674].velocity *= 0.4f;
						Gore expr_1592C_cp_0 = Main.gore[num674];
						expr_1592C_cp_0.velocity.X = expr_1592C_cp_0.velocity.X + 1f;
						Gore expr_1594C_cp_0 = Main.gore[num674];
						expr_1594C_cp_0.velocity.Y = expr_1594C_cp_0.velocity.Y - 1f;
					}
					if (Main.rand.Next(2) == 0)
					{
						int num674 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(276, 283), 1f);
						Main.gore[num674].velocity *= 0.4f;
						Gore expr_159E6_cp_0 = Main.gore[num674];
						expr_159E6_cp_0.velocity.X = expr_159E6_cp_0.velocity.X - 1f;
						Gore expr_15A06_cp_0 = Main.gore[num674];
						expr_15A06_cp_0.velocity.Y = expr_15A06_cp_0.velocity.Y - 1f;
					}
				}
				else if (this.type == 28 || this.type == 30 || this.type == 37 || this.type == 75 || this.type == 102 || this.type == 164 || this.type == 397 || this.type == 517 || this.type == 516 || this.type == 519)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
					this.position.X = this.position.X + (float)(this.width / 2);
					this.position.Y = this.position.Y + (float)(this.height / 2);
					this.width = 22;
					this.height = 22;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y - (float)(this.height / 2);
					for (int num675 = 0; num675 < 20; num675++)
					{
						int num676 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num676].velocity *= 1.4f;
					}
					for (int num677 = 0; num677 < 10; num677++)
					{
						int num678 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
						Main.dust[num678].noGravity = true;
						Main.dust[num678].velocity *= 5f;
						num678 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num678].velocity *= 3f;
					}
					int num679 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num679].velocity *= 0.4f;
					Gore expr_15D3A_cp_0 = Main.gore[num679];
					expr_15D3A_cp_0.velocity.X = expr_15D3A_cp_0.velocity.X + 1f;
					Gore expr_15D5A_cp_0 = Main.gore[num679];
					expr_15D5A_cp_0.velocity.Y = expr_15D5A_cp_0.velocity.Y + 1f;
					num679 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num679].velocity *= 0.4f;
					Gore expr_15DDE_cp_0 = Main.gore[num679];
					expr_15DDE_cp_0.velocity.X = expr_15DDE_cp_0.velocity.X - 1f;
					Gore expr_15DFE_cp_0 = Main.gore[num679];
					expr_15DFE_cp_0.velocity.Y = expr_15DFE_cp_0.velocity.Y + 1f;
					num679 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num679].velocity *= 0.4f;
					Gore expr_15E82_cp_0 = Main.gore[num679];
					expr_15E82_cp_0.velocity.X = expr_15E82_cp_0.velocity.X + 1f;
					Gore expr_15EA2_cp_0 = Main.gore[num679];
					expr_15EA2_cp_0.velocity.Y = expr_15EA2_cp_0.velocity.Y - 1f;
					num679 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num679].velocity *= 0.4f;
					Gore expr_15F26_cp_0 = Main.gore[num679];
					expr_15F26_cp_0.velocity.X = expr_15F26_cp_0.velocity.X - 1f;
					Gore expr_15F46_cp_0 = Main.gore[num679];
					expr_15F46_cp_0.velocity.Y = expr_15F46_cp_0.velocity.Y - 1f;
					if (this.type == 102)
					{
						this.position.X = this.position.X + (float)(this.width / 2);
						this.position.Y = this.position.Y + (float)(this.height / 2);
						this.width = 128;
						this.height = 128;
						this.position.X = this.position.X - (float)(this.width / 2);
						this.position.Y = this.position.Y - (float)(this.height / 2);
						this.damage = 40;
						this.Damage();
					}
				}
				else if (this.type == 29 || this.type == 108 || this.type == 470 || this.type == 637)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
					if (this.type == 29)
					{
						this.position.X = this.position.X + (float)(this.width / 2);
						this.position.Y = this.position.Y + (float)(this.height / 2);
						this.width = 200;
						this.height = 200;
						this.position.X = this.position.X - (float)(this.width / 2);
						this.position.Y = this.position.Y - (float)(this.height / 2);
					}
					for (int num680 = 0; num680 < 50; num680++)
					{
						int num681 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 2f);
						Main.dust[num681].velocity *= 1.4f;
					}
					for (int num682 = 0; num682 < 80; num682++)
					{
						int num683 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 3f);
						Main.dust[num683].noGravity = true;
						Main.dust[num683].velocity *= 5f;
						num683 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2f);
						Main.dust[num683].velocity *= 3f;
					}
					for (int num684 = 0; num684 < 2; num684++)
					{
						int num685 = Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num685].scale = 1.5f;
						Gore expr_16304_cp_0 = Main.gore[num685];
						expr_16304_cp_0.velocity.X = expr_16304_cp_0.velocity.X + 1.5f;
						Gore expr_16324_cp_0 = Main.gore[num685];
						expr_16324_cp_0.velocity.Y = expr_16324_cp_0.velocity.Y + 1.5f;
						num685 = Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num685].scale = 1.5f;
						Gore expr_163BD_cp_0 = Main.gore[num685];
						expr_163BD_cp_0.velocity.X = expr_163BD_cp_0.velocity.X - 1.5f;
						Gore expr_163DD_cp_0 = Main.gore[num685];
						expr_163DD_cp_0.velocity.Y = expr_163DD_cp_0.velocity.Y + 1.5f;
						num685 = Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num685].scale = 1.5f;
						Gore expr_16476_cp_0 = Main.gore[num685];
						expr_16476_cp_0.velocity.X = expr_16476_cp_0.velocity.X + 1.5f;
						Gore expr_16496_cp_0 = Main.gore[num685];
						expr_16496_cp_0.velocity.Y = expr_16496_cp_0.velocity.Y - 1.5f;
						num685 = Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num685].scale = 1.5f;
						Gore expr_1652F_cp_0 = Main.gore[num685];
						expr_1652F_cp_0.velocity.X = expr_1652F_cp_0.velocity.X - 1.5f;
						Gore expr_1654F_cp_0 = Main.gore[num685];
						expr_1654F_cp_0.velocity.Y = expr_1654F_cp_0.velocity.Y - 1.5f;
					}
					this.position.X = this.position.X + (float)(this.width / 2);
					this.position.Y = this.position.Y + (float)(this.height / 2);
					this.width = 10;
					this.height = 10;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y - (float)(this.height / 2);
				}
				else if (this.type == 69)
				{
					Main.PlaySound(13, (int)this.position.X, (int)this.position.Y, 1);
					for (int num686 = 0; num686 < 5; num686++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 13, 0f, 0f, 0, default(Color), 1f);
					}
					for (int num687 = 0; num687 < 30; num687++)
					{
						int num688 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 33, 0f, -2f, 0, default(Color), 1.1f);
						Main.dust[num688].alpha = 100;
						Dust expr_16701_cp_0 = Main.dust[num688];
						expr_16701_cp_0.velocity.X = expr_16701_cp_0.velocity.X * 1.5f;
						Main.dust[num688].velocity *= 3f;
					}
				}
				else if (this.type == 70)
				{
					Main.PlaySound(13, (int)this.position.X, (int)this.position.Y, 1);
					for (int num689 = 0; num689 < 5; num689++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 13, 0f, 0f, 0, default(Color), 1f);
					}
					for (int num690 = 0; num690 < 30; num690++)
					{
						int num691 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 52, 0f, -2f, 0, default(Color), 1.1f);
						Main.dust[num691].alpha = 100;
						Dust expr_16857_cp_0 = Main.dust[num691];
						expr_16857_cp_0.velocity.X = expr_16857_cp_0.velocity.X * 1.5f;
						Main.dust[num691].velocity *= 3f;
					}
				}
				else if (this.type == 621)
				{
					Main.PlaySound(13, (int)this.position.X, (int)this.position.Y, 1);
					for (int num692 = 0; num692 < 5; num692++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 13, 0f, 0f, 0, default(Color), 1f);
					}
					for (int num693 = 0; num693 < 30; num693++)
					{
						int num694 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 266, 0f, -2f, 0, default(Color), 1.1f);
						Main.dust[num694].alpha = 100;
						Dust expr_169B3_cp_0 = Main.dust[num694];
						expr_169B3_cp_0.velocity.X = expr_169B3_cp_0.velocity.X * 1.5f;
						Main.dust[num694].velocity *= 3f;
					}
				}
				else if (this.type == 114 || this.type == 115)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
					for (int num695 = 4; num695 < 31; num695++)
					{
						float num696 = this.oldVelocity.X * (30f / (float)num695);
						float num697 = this.oldVelocity.Y * (30f / (float)num695);
						int num698 = Dust.NewDust(new Vector2(this.position.X - num696, this.position.Y - num697), 8, 8, 27, this.oldVelocity.X, this.oldVelocity.Y, 100, default(Color), 1.4f);
						Main.dust[num698].noGravity = true;
						Main.dust[num698].velocity *= 0.5f;
						num698 = Dust.NewDust(new Vector2(this.position.X - num696, this.position.Y - num697), 8, 8, 27, this.oldVelocity.X, this.oldVelocity.Y, 100, default(Color), 0.9f);
						Main.dust[num698].velocity *= 0.5f;
					}
				}
				else if (this.type == 116)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
					for (int num699 = 4; num699 < 31; num699++)
					{
						float num700 = this.oldVelocity.X * (30f / (float)num699);
						float num701 = this.oldVelocity.Y * (30f / (float)num699);
						int num702 = Dust.NewDust(new Vector2(this.position.X - num700, this.position.Y - num701), 8, 8, 64, this.oldVelocity.X, this.oldVelocity.Y, 100, default(Color), 1.8f);
						Main.dust[num702].noGravity = true;
						num702 = Dust.NewDust(new Vector2(this.position.X - num700, this.position.Y - num701), 8, 8, 64, this.oldVelocity.X, this.oldVelocity.Y, 100, default(Color), 1.4f);
						Main.dust[num702].noGravity = true;
					}
				}
				else if (this.type == 173)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
					for (int num703 = 4; num703 < 24; num703++)
					{
						float num704 = this.oldVelocity.X * (30f / (float)num703);
						float num705 = this.oldVelocity.Y * (30f / (float)num703);
						int num706 = Main.rand.Next(3);
						if (num706 == 0)
						{
							num706 = 15;
						}
						else if (num706 == 1)
						{
							num706 = 57;
						}
						else
						{
							num706 = 58;
						}
						int num707 = Dust.NewDust(new Vector2(this.position.X - num704, this.position.Y - num705), 8, 8, num706, this.oldVelocity.X * 0.2f, this.oldVelocity.Y * 0.2f, 100, default(Color), 1.8f);
						Main.dust[num707].velocity *= 1.5f;
						Main.dust[num707].noGravity = true;
					}
				}
				else if (this.type == 132)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
					for (int num708 = 4; num708 < 31; num708++)
					{
						float num709 = this.oldVelocity.X * (30f / (float)num708);
						float num710 = this.oldVelocity.Y * (30f / (float)num708);
						int num711 = Dust.NewDust(new Vector2(this.oldPosition.X - num709, this.oldPosition.Y - num710), 8, 8, 107, this.oldVelocity.X, this.oldVelocity.Y, 100, default(Color), 1.8f);
						Main.dust[num711].noGravity = true;
						Main.dust[num711].velocity *= 0.5f;
						num711 = Dust.NewDust(new Vector2(this.oldPosition.X - num709, this.oldPosition.Y - num710), 8, 8, 107, this.oldVelocity.X, this.oldVelocity.Y, 100, default(Color), 1.4f);
						Main.dust[num711].velocity *= 0.05f;
					}
				}
				else if (this.type == 156)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
					for (int num712 = 4; num712 < 31; num712++)
					{
						float num713 = this.oldVelocity.X * (30f / (float)num712);
						float num714 = this.oldVelocity.Y * (30f / (float)num712);
						int num715 = Dust.NewDust(new Vector2(this.oldPosition.X - num713, this.oldPosition.Y - num714), 8, 8, 73, this.oldVelocity.X, this.oldVelocity.Y, 255, default(Color), 1.8f);
						Main.dust[num715].noGravity = true;
						Main.dust[num715].velocity *= 0.5f;
						num715 = Dust.NewDust(new Vector2(this.oldPosition.X - num713, this.oldPosition.Y - num714), 8, 8, 73, this.oldVelocity.X, this.oldVelocity.Y, 255, default(Color), 1.4f);
						Main.dust[num715].velocity *= 0.05f;
						Main.dust[num715].noGravity = true;
					}
				}
				else if (this.type == 157)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
					for (int num716 = 4; num716 < 31; num716++)
					{
						int num717 = Dust.NewDust(this.position, this.width, this.height, 107, this.oldVelocity.X, this.oldVelocity.Y, 100, default(Color), 1.8f);
						Main.dust[num717].noGravity = true;
						Main.dust[num717].velocity *= 0.5f;
					}
				}
				else if (this.type == 370)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 4);
					for (int num718 = 0; num718 < 5; num718++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 13, 0f, 0f, 0, default(Color), 1f);
					}
					for (int num719 = 0; num719 < 30; num719++)
					{
						Vector2 value29 = new Vector2((float)Main.rand.Next(-10, 11), (float)Main.rand.Next(-10, 11));
						value29.Normalize();
						int num720 = Gore.NewGore(base.Center + value29 * 10f, value29 * (float)Main.rand.Next(4, 9) * 0.66f + Vector2.UnitY * 1.5f, 331, (float)Main.rand.Next(40, 141) * 0.01f);
						Main.gore[num720].sticky = false;
					}
				}
				else if (this.type == 371)
				{
					Main.PlaySound(13, (int)this.position.X, (int)this.position.Y, 1);
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 16);
					for (int num721 = 0; num721 < 5; num721++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 13, 0f, 0f, 0, default(Color), 1f);
					}
					for (int num722 = 0; num722 < 30; num722++)
					{
						Vector2 value30 = new Vector2((float)Main.rand.Next(-10, 11), (float)Main.rand.Next(-10, 11));
						value30.Normalize();
						value30 *= 0.4f;
						int num723 = Gore.NewGore(base.Center + value30 * 10f, value30 * (float)Main.rand.Next(4, 9) * 0.66f + Vector2.UnitY * 1.5f, Main.rand.Next(435, 438), (float)Main.rand.Next(20, 100) * 0.01f);
						Main.gore[num723].sticky = false;
					}
				}
			}
			if (this.owner == Main.myPlayer)
			{
				if (this.type == 28 || this.type == 29 || this.type == 37 || this.type == 108 || this.type == 136 || this.type == 137 || this.type == 138 || this.type == 142 || this.type == 143 || this.type == 144 || this.type == 339 || this.type == 341 || this.type == 470 || this.type == 516 || this.type == 519 || this.type == 637)
				{
					int num724 = 3;
					if (this.type == 28 || this.type == 37 || this.type == 516 || this.type == 519)
					{
						num724 = 4;
					}
					if (this.type == 29 || this.type == 470 || this.type == 637)
					{
						num724 = 7;
					}
					if (this.type == 142 || this.type == 143 || this.type == 144 || this.type == 341)
					{
						num724 = 5;
					}
					if (this.type == 108)
					{
						num724 = 10;
					}
					int num725 = (int)(this.position.X / 16f - (float)num724);
					int num726 = (int)(this.position.X / 16f + (float)num724);
					int num727 = (int)(this.position.Y / 16f - (float)num724);
					int num728 = (int)(this.position.Y / 16f + (float)num724);
					if (num725 < 0)
					{
						num725 = 0;
					}
					if (num726 > Main.maxTilesX)
					{
						num726 = Main.maxTilesX;
					}
					if (num727 < 0)
					{
						num727 = 0;
					}
					if (num728 > Main.maxTilesY)
					{
						num728 = Main.maxTilesY;
					}
					bool flag3 = false;
					for (int num729 = num725; num729 <= num726; num729++)
					{
						for (int num730 = num727; num730 <= num728; num730++)
						{
							float num731 = Math.Abs((float)num729 - this.position.X / 16f);
							float num732 = Math.Abs((float)num730 - this.position.Y / 16f);
							double num733 = Math.Sqrt((double)(num731 * num731 + num732 * num732));
							if (num733 < (double)num724 && Main.tile[num729, num730] != null && Main.tile[num729, num730].wall == 0)
							{
								flag3 = true;
								break;
							}
						}
					}
					AchievementsHelper.CurrentlyMining = true;
					for (int num734 = num725; num734 <= num726; num734++)
					{
						for (int num735 = num727; num735 <= num728; num735++)
						{
							float num736 = Math.Abs((float)num734 - this.position.X / 16f);
							float num737 = Math.Abs((float)num735 - this.position.Y / 16f);
							double num738 = Math.Sqrt((double)(num736 * num736 + num737 * num737));
							if (num738 < (double)num724)
							{
								bool flag4 = true;
								if (Main.tile[num734, num735] != null && Main.tile[num734, num735].active())
								{
									flag4 = true;
									if (Main.tileDungeon[(int)Main.tile[num734, num735].type] || Main.tile[num734, num735].type == 88 || Main.tile[num734, num735].type == 21 || Main.tile[num734, num735].type == 26 || Main.tile[num734, num735].type == 107 || Main.tile[num734, num735].type == 108 || Main.tile[num734, num735].type == 111 || Main.tile[num734, num735].type == 226 || Main.tile[num734, num735].type == 237 || Main.tile[num734, num735].type == 221 || Main.tile[num734, num735].type == 222 || Main.tile[num734, num735].type == 223 || Main.tile[num734, num735].type == 211 || Main.tile[num734, num735].type == 404)
									{
										flag4 = false;
									}
									//patch file: num734, num735
									if (!Main.hardMode && Main.tile[num734, num735].type == 58)
									{
										flag4 = false;
										//patch file: num734, num735
									}
									if (!TileLoader.CanExplode(num734, num735))
									{
										flag4 = false;
									}
									if (flag4)
									{
										WorldGen.KillTile(num734, num735, false, false, false);
										if (!Main.tile[num734, num735].active() && Main.netMode != 0)
										{
											NetMessage.SendData(17, -1, -1, "", 0, (float)num734, (float)num735, 0f, 0, 0, 0);
										}
									}
								}
								if (flag4)
								{
									for (int num739 = num734 - 1; num739 <= num734 + 1; num739++)
									{
										for (int num740 = num735 - 1; num740 <= num735 + 1; num740++)
										{
											if (Main.tile[num739, num740] != null && Main.tile[num739, num740].wall > 0 && flag3)
											{
												WorldGen.KillWall(num739, num740, false);
												if (Main.tile[num739, num740].wall == 0 && Main.netMode != 0)
												{
													NetMessage.SendData(17, -1, -1, "", 2, (float)num739, (float)num740, 0f, 0, 0, 0);
												}
											}
										}
									}
								}
							}
						}
					}
					AchievementsHelper.CurrentlyMining = false;
				}
				if (Main.netMode != 0)
				{
					NetMessage.SendData(29, -1, -1, "", this.identity, (float)this.owner, 0f, 0f, 0, 0, 0);
				}
				if (!this.noDropItem)
				{
					int num741 = -1;
					if (this.aiStyle == 10)
					{
						int num742 = (int)(this.position.X + (float)(this.width / 2)) / 16;
						int num743 = (int)(this.position.Y + (float)(this.width / 2)) / 16;
						int num744 = 0;
						int num745 = 2;
						if (this.type == 109)
						{
							num744 = 147;
							num745 = 0;
						}
						if (this.type == 31)
						{
							num744 = 53;
							num745 = 0;
						}
						if (this.type == 42)
						{
							num744 = 53;
							num745 = 0;
						}
						if (this.type == 56)
						{
							num744 = 112;
							num745 = 0;
						}
						if (this.type == 65)
						{
							num744 = 112;
							num745 = 0;
						}
						if (this.type == 67)
						{
							num744 = 116;
							num745 = 0;
						}
						if (this.type == 68)
						{
							num744 = 116;
							num745 = 0;
						}
						if (this.type == 71)
						{
							num744 = 123;
							num745 = 0;
						}
						if (this.type == 39)
						{
							num744 = 59;
							num745 = 176;
						}
						if (this.type == 40)
						{
							num744 = 57;
							num745 = 172;
						}
						if (this.type == 179)
						{
							num744 = 224;
							num745 = 0;
						}
						if (this.type == 241)
						{
							num744 = 234;
							num745 = 0;
						}
						if (this.type == 354)
						{
							num744 = 234;
							num745 = 0;
						}
						if (this.type == 411)
						{
							num744 = 330;
							num745 = 71;
						}
						if (this.type == 412)
						{
							num744 = 331;
							num745 = 72;
						}
						if (this.type == 413)
						{
							num744 = 332;
							num745 = 73;
						}
						if (this.type == 414)
						{
							num744 = 333;
							num745 = 74;
						}
						if (this.type == 109)
						{
							int num746 = (int)Player.FindClosest(this.position, this.width, this.height);
							if ((double)(base.Center - Main.player[num746].Center).Length() > (double)Main.maxScreenW * 0.75)
							{
								num744 = -1;
								num745 = 593;
							}
						}
						if (Main.tile[num742, num743].halfBrick() && this.velocity.Y > 0f && Math.Abs(this.velocity.Y) > Math.Abs(this.velocity.X))
						{
							num743--;
						}
						if (!Main.tile[num742, num743].active() && num744 >= 0)
						{
							bool flag5 = false;
							if (num743 < Main.maxTilesY - 2 && Main.tile[num742, num743 + 1] != null && Main.tile[num742, num743 + 1].active() && Main.tile[num742, num743 + 1].type == 314)
							{
								flag5 = true;
							}
							if (!flag5)
							{
								WorldGen.PlaceTile(num742, num743, num744, false, true, -1, 0);
							}
							if (!flag5 && Main.tile[num742, num743].active() && (int)Main.tile[num742, num743].type == num744)
							{
								if (Main.tile[num742, num743 + 1].halfBrick() || Main.tile[num742, num743 + 1].slope() != 0)
								{
									WorldGen.SlopeTile(num742, num743 + 1, 0);
									if (Main.netMode == 2)
									{
										NetMessage.SendData(17, -1, -1, "", 14, (float)num742, (float)(num743 + 1), 0f, 0, 0, 0);
									}
								}
								if (Main.netMode != 0)
								{
									NetMessage.SendData(17, -1, -1, "", 1, (float)num742, (float)num743, (float)num744, 0, 0, 0);
								}
							}
							else if (num745 > 0)
							{
								num741 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num745, 1, false, 0, false, false);
							}
						}
						else if (num745 > 0)
						{
							num741 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num745, 1, false, 0, false, false);
						}
					}
					if (this.type == 1 && Main.rand.Next(3) == 0)
					{
						num741 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 40, 1, false, 0, false, false);
					}
					if (this.type == 474 && Main.rand.Next(3) == 0)
					{
						num741 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3003, 1, false, 0, false, false);
					}
					if (this.type == 103 && Main.rand.Next(6) == 0)
					{
						if (Main.rand.Next(3) == 0)
						{
							num741 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 545, 1, false, 0, false, false);
						}
						else
						{
							num741 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 40, 1, false, 0, false, false);
						}
					}
					if (this.type == 2 && Main.rand.Next(3) == 0)
					{
						if (Main.rand.Next(3) == 0)
						{
							num741 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 41, 1, false, 0, false, false);
						}
						else
						{
							num741 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 40, 1, false, 0, false, false);
						}
					}
					if (this.type == 172 && Main.rand.Next(3) == 0)
					{
						if (Main.rand.Next(3) == 0)
						{
							num741 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 988, 1, false, 0, false, false);
						}
						else
						{
							num741 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 40, 1, false, 0, false, false);
						}
					}
					if (this.type == 171)
					{
						if (this.ai[1] == 0f)
						{
							num741 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 985, 1, false, 0, false, false);
							Main.item[num741].noGrabDelay = 0;
						}
						else if (this.ai[1] < 10f)
						{
							num741 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 965, (int)(10f - this.ai[1]), false, 0, false, false);
							Main.item[num741].noGrabDelay = 0;
						}
					}
					if (this.type == 475)
					{
						if (this.ai[1] == 0f)
						{
							num741 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3005, 1, false, 0, false, false);
							Main.item[num741].noGrabDelay = 0;
						}
						else if (this.ai[1] < 10f)
						{
							num741 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2996, (int)(10f - this.ai[1]), false, 0, false, false);
							Main.item[num741].noGrabDelay = 0;
						}
					}
					if (this.type == 505)
					{
						if (this.ai[1] == 0f)
						{
							num741 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3079, 1, false, 0, false, false);
							Main.item[num741].noGrabDelay = 0;
						}
						else if (this.ai[1] < 10f)
						{
							num741 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3077, (int)(10f - this.ai[1]), false, 0, false, false);
							Main.item[num741].noGrabDelay = 0;
						}
					}
					if (this.type == 506)
					{
						if (this.ai[1] == 0f)
						{
							num741 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3080, 1, false, 0, false, false);
							Main.item[num741].noGrabDelay = 0;
						}
						else if (this.ai[1] < 10f)
						{
							num741 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3078, (int)(10f - this.ai[1]), false, 0, false, false);
							Main.item[num741].noGrabDelay = 0;
						}
					}
					if (this.type == 91 && Main.rand.Next(6) == 0)
					{
						num741 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 516, 1, false, 0, false, false);
					}
					if (this.type == 50 && Main.rand.Next(3) == 0)
					{
						num741 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 282, 1, false, 0, false, false);
					}
					if (this.type == 515 && Main.rand.Next(3) == 0)
					{
						num741 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3112, 1, false, 0, false, false);
					}
					if (this.type == 53 && Main.rand.Next(3) == 0)
					{
						num741 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 286, 1, false, 0, false, false);
					}
					if (this.type == 48 && Main.rand.Next(2) == 0)
					{
						num741 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 279, 1, false, 0, false, false);
					}
					if (this.type == 54 && Main.rand.Next(2) == 0)
					{
						num741 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 287, 1, false, 0, false, false);
					}
					if (this.type == 3 && Main.rand.Next(2) == 0)
					{
						num741 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 42, 1, false, 0, false, false);
					}
					if (this.type == 4 && Main.rand.Next(4) == 0)
					{
						num741 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 47, 1, false, 0, false, false);
					}
					if (this.type == 12 && this.damage > 500)
					{
						num741 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 75, 1, false, 0, false, false);
					}
					if (this.type == 155)
					{
						num741 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 859, 1, false, 0, false, false);
					}
					if (this.type == 598 && Main.rand.Next(4) == 0)
					{
						num741 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3378, 1, false, 0, false, false);
					}
					if (this.type == 599 && Main.rand.Next(4) == 0)
					{
						num741 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3379, 1, false, 0, false, false);
					}
					if (this.type == 21 && Main.rand.Next(2) == 0)
					{
						num741 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 154, 1, false, 0, false, false);
					}
					if (Main.netMode == 1 && num741 >= 0)
					{
						NetMessage.SendData(21, -1, -1, "", num741, 1f, 0f, 0f, 0, 0, 0);
					}
				}
				if (this.type == 69 || this.type == 70 || this.type == 621)
				{
					int i2 = (int)(this.position.X + (float)(this.width / 2)) / 16;
					int j2 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
					if (this.type == 69)
					{
						WorldGen.Convert(i2, j2, 2, 4);
					}
					if (this.type == 70)
					{
						WorldGen.Convert(i2, j2, 1, 4);
					}
					if (this.type == 621)
					{
						WorldGen.Convert(i2, j2, 4, 4);
					}
				}
				if (this.type == 370 || this.type == 371)
				{
					float num747 = 80f;
					int num748 = 119;
					if (this.type == 371)
					{
						num748 = 120;
					}
					for (int num749 = 0; num749 < 255; num749++)
					{
						Player player = Main.player[num749];
						if (player.active && !player.dead && Vector2.Distance(base.Center, player.Center) < num747)
						{
							player.AddBuff(num748, 1800, true);
						}
					}
					for (int num750 = 0; num750 < 200; num750++)
					{
						NPC nPC = Main.npc[num750];
						if (nPC.active && nPC.life > 0 && Vector2.Distance(base.Center, nPC.Center) < num747)
						{
							nPC.AddBuff(num748, 1800, false);
						}
					}
				}
				if (this.type == 378)
				{
					int num751 = Main.rand.Next(2, 4);
					if (Main.rand.Next(5) == 0)
					{
						num751++;
					}
					for (int num752 = 0; num752 < num751; num752++)
					{
						float num753 = this.velocity.X;
						float num754 = this.velocity.Y;
						num753 *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
						num754 *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
						Projectile.NewProjectile(base.Center.X, base.Center.Y, num753, num754, 379, this.damage, this.knockBack, this.owner, 0f, 0f);
					}
				}
			}
			ProjectileLoader.Kill(this, num);
			this.active = false;
		}

		public Color GetAlpha(Color newColor)
		{
			Color? modColor = ProjectileLoader.GetAlpha(this, newColor);
			if (modColor.HasValue)
			{
				return modColor.Value;
			}
			if (this.type == 270)
			{
				return new Color(255, 255, 255, Main.rand.Next(0, 255));
			}
			int num;
			int num2;
			int num3;
			if (this.type == 650)
			{
				num = (int)((double)newColor.R * 1.5);
				num2 = (int)((double)newColor.G * 1.5);
				num3 = (int)((double)newColor.B * 1.5);
				if (num > 255)
				{
				}
				if (num2 > 255)
				{
				}
				if (num3 > 255)
				{
				}
			}
			else
			{
				if (this.type == 604 || this.type == 631)
				{
					return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 0);
				}
				if (this.type == 636)
				{
					return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 64 - this.alpha / 4);
				}
				if (this.type == 603 || this.type == 633)
				{
					return new Color(255, 255, 255, 200);
				}
				if (this.type == 623 || (this.type >= 625 && this.type <= 628))
				{
					return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 255 - this.alpha);
				}
				if (this.type == 645 || this.type == 643)
				{
					return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 127 - this.alpha / 2);
				}
				if (this.type == 611)
				{
					return new Color(255, 255, 255, 200);
				}
				if (this.type == 640 || this.type == 644 || this.type == 658)
				{
					return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 0);
				}
				if (this.type == 612)
				{
					return new Color(255, 255, 255, 127);
				}
				if (this.aiStyle == 105)
				{
					return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 255 - this.alpha);
				}
				if (this.type == 554)
				{
					return new Color(200, 200, 200, 200);
				}
				if (this.type == 601)
				{
					return PortalHelper.GetPortalColor(this.owner, (int)this.ai[0]);
				}
				if (this.type == 602)
				{
					Color portalColor = PortalHelper.GetPortalColor(this.owner, (int)this.ai[1]);
					portalColor.A = 227;
					return portalColor;
				}
				if (this.type == 585)
				{
					byte a = newColor.A;
					newColor = Color.Lerp(newColor, Color.White, 0.5f);
					newColor.A = a;
					return newColor;
				}
				if (this.type == 573 || this.type == 578 || this.type == 579 || this.type == 617 || this.type == 641)
				{
					return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 255 - this.alpha);
				}
				if (this.type == 9 || this.type == 490)
				{
					return Color.White;
				}
				if (this.type == 575 || this.type == 596 || this.type == 659)
				{
					if (this.timeLeft < 30)
					{
						float num4 = (float)this.timeLeft / 30f;
						this.alpha = (int)(255f - 255f * num4);
					}
					return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 128 - this.alpha / 2);
				}
				if (this.type == 546)
				{
					return new Color(255, 200, 255, 200);
				}
				if (this.type == 553)
				{
					return new Color(255, 255, 200, 200);
				}
				if (this.type == 540)
				{
					return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 0);
				}
				if (this.type == 498)
				{
					return new Color(255, 100, 20, 200);
				}
				if (this.type == 538)
				{
					return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 255 - this.alpha);
				}
				if (this.type == 518)
				{
					float num5 = 1f - (float)this.alpha / 255f;
					return new Color((int)(200f * num5), (int)(200f * num5), (int)(200f * num5), (int)(100f * num5));
				}
				if (this.type == 518 || this.type == 595)
				{
					Color value = Color.Lerp(newColor, Color.White, 0.85f);
					value.A = 128;
					return value * (1f - (float)this.alpha / 255f);
				}
				if (this.type == 536 || this.type == 607)
				{
					return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 63 - this.alpha / 4);
				}
				if (this.type == 591)
				{
					return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 63 - this.alpha / 4);
				}
				if (this.type == 493 || this.type == 494)
				{
					return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 255 - this.alpha);
				}
				if (this.type == 492)
				{
					return new Color(255, 255, 255, 255);
				}
				if (this.type == 491)
				{
					return new Color(255, 255, 255, 255);
				}
				if (this.type == 485 || this.type == 502)
				{
					return new Color(255, 255, 255, 200);
				}
				if (this.type == 488)
				{
					return new Color(255, 255, 255, 255);
				}
				if (this.type == 477 || this.type == 478 || this.type == 479)
				{
					if (this.alpha == 0)
					{
						return new Color(255, 255, 255, 200);
					}
					return new Color(0, 0, 0, 0);
				}
				else
				{
					if (this.type == 473)
					{
						return new Color(255, 255, 255, 255);
					}
					if (this.type == 50 || this.type == 53 || this.type == 515)
					{
						return new Color(255, 255, 255, 0);
					}
					if (this.type == 92)
					{
						return new Color(255, 255, 255, 0);
					}
					if (this.type == 91)
					{
						return new Color(200, 200, 200, 0);
					}
					if (this.type == 34 || this.type == 15 || this.type == 93 || this.type == 94 || this.type == 95 || this.type == 96 || this.type == 253 || this.type == 258 || (this.type == 102 && this.alpha < 255))
					{
						return new Color(200, 200, 200, 25);
					}
					if (this.type == 465)
					{
						return new Color(255, 255, 255, 0) * (1f - (float)this.alpha / 255f);
					}
					if (this.type == 503)
					{
						Color value2 = Color.Lerp(newColor, Color.White, 0.5f) * (1f - (float)this.alpha / 255f);
						Color value3 = Color.Lerp(Color.Purple, Color.White, 0.33f);
						float amount = 0.25f + (float)Math.Cos((double)this.localAI[0]) * 0.25f;
						return Color.Lerp(value2, value3, amount);
					}
					if (this.type == 467)
					{
						return new Color(255, 255, 255, 255) * (1f - (float)this.alpha / 255f);
					}
					if (this.type == 634 || this.type == 635)
					{
						return new Color(255, 255, 255, 127) * this.Opacity;
					}
					if (this.type == 451)
					{
						return new Color(255, 255, 255, 200) * ((255f - (float)this.alpha) / 255f);
					}
					if (this.type == 454 || this.type == 452)
					{
						return new Color(255, 255, 255, 255) * (1f - (float)this.alpha / 255f);
					}
					if (this.type == 464)
					{
						return new Color(255, 255, 255, 255) * ((255f - (float)this.alpha) / 255f);
					}
					if (this.type == 450)
					{
						return new Color(200, 200, 200, 255 - this.alpha);
					}
					if (this.type == 459)
					{
						return new Color(255, 255, 255, 200);
					}
					if (this.type == 447)
					{
						return new Color(255, 255, 255, 200);
					}
					if (this.type == 446)
					{
						Color value4 = Color.Lerp(newColor, Color.White, 0.8f);
						return value4 * (1f - (float)this.alpha / 255f);
					}
					if (this.type >= 646 && this.type <= 649)
					{
						Color value5 = Color.Lerp(newColor, Color.White, 0.8f);
						return value5 * (1f - (float)this.alpha / 255f);
					}
					if (this.type == 445)
					{
						return new Color(255, 255, 255, 128) * (1f - (float)this.alpha / 255f);
					}
					if (this.type == 440 || this.type == 449 || this.type == 606)
					{
						num = 255 - this.alpha;
						num2 = 255 - this.alpha;
						num3 = 255 - this.alpha;
					}
					else
					{
						if (this.type == 444)
						{
							return newColor * (1f - (float)this.alpha / 255f);
						}
						if (this.type == 443)
						{
							return new Color(255, 255, 255, 128) * (1f - (float)this.alpha / 255f);
						}
						if (this.type == 438)
						{
							return new Color(255, 255, 255, 128) * (1f - (float)this.alpha / 255f);
						}
						if (this.type == 592)
						{
							return new Color(255, 255, 255, 128) * (1f - (float)this.alpha / 255f);
						}
						if (this.type == 437)
						{
							return new Color(255, 255, 255, 0) * (1f - (float)this.alpha / 255f);
						}
						if (this.type == 462)
						{
							return new Color(255, 255, 255, 128) * (1f - (float)this.alpha / 255f);
						}
						if (this.type == 352)
						{
							return new Color(250, 250, 250, this.alpha);
						}
						if (this.type == 435)
						{
							newColor = Color.Lerp(newColor, Color.White, 0.8f);
							return new Color((int)newColor.R, (int)newColor.G, (int)newColor.B, 25);
						}
						if (this.type == 436)
						{
							newColor = Color.Lerp(newColor, Color.White, 0.8f);
							return new Color((int)newColor.R, (int)newColor.G, (int)newColor.B, 25);
						}
						if (this.type == 409)
						{
							return new Color(250, 250, 250, 200);
						}
						if (this.type == 348 || this.type == 349)
						{
							return new Color(200, 200, 200, this.alpha);
						}
						if (this.type == 337)
						{
							return new Color(250, 250, 250, 150);
						}
						if (this.type >= 424 && this.type <= 426)
						{
							byte b = 150;
							if (newColor.R < b)
							{
								newColor.R = b;
							}
							if (newColor.G < b)
							{
								newColor.G = b;
							}
							if (newColor.B < b)
							{
								newColor.B = b;
							}
							return new Color((int)newColor.R, (int)newColor.G, (int)newColor.B, 255);
						}
						if (this.type == 431 || this.type == 432)
						{
							return new Color(250, 250, 250, 255 - this.alpha);
						}
						if (this.type == 343 || this.type == 344)
						{
							float num6 = 1f - (float)this.alpha / 255f;
							return new Color((int)(250f * num6), (int)(250f * num6), (int)(250f * num6), (int)(100f * num6));
						}
						if (this.type == 332)
						{
							return new Color(255, 255, 255, 255);
						}
						if (this.type == 329)
						{
							return new Color(200, 200, 200, 50);
						}
						if (this.type >= 326 && this.type <= 328)
						{
							return Color.Transparent;
						}
						if (this.type >= 400 && this.type <= 402)
						{
							return Color.Transparent;
						}
						if (this.type == 324 && this.frame >= 6 && this.frame <= 9)
						{
							return new Color(255, 255, 255, 255);
						}
						if (this.type == 16)
						{
							return new Color(255, 255, 255, 0);
						}
						if (this.type == 321)
						{
							return new Color(200, 200, 200, 0);
						}
						if (this.type == 76 || this.type == 77 || this.type == 78)
						{
							return new Color(255, 255, 255, 0);
						}
						if (this.type == 308)
						{
							return new Color(200, 200, 255, 125);
						}
						if (this.type == 263)
						{
							if (this.timeLeft < 255)
							{
								return new Color(255, 255, 255, (int)((byte)this.timeLeft));
							}
							return new Color(255, 255, 255, 255);
						}
						else if (this.type == 274)
						{
							if (this.timeLeft < 85)
							{
								byte b2 = (byte)(this.timeLeft * 3);
								byte a2 = (byte)(100f * ((float)b2 / 255f));
								return new Color((int)b2, (int)b2, (int)b2, (int)a2);
							}
							return new Color(255, 255, 255, 100);
						}
						else
						{
							if (this.type == 5)
							{
								return new Color(255, 255, 255, 0);
							}
							if (this.type == 300 || this.type == 301)
							{
								return new Color(250, 250, 250, 50);
							}
							if (this.type == 304)
							{
								return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, (int)((byte)((float)(255 - this.alpha) / 3f)));
							}
							if (this.type == 116 || this.type == 132 || this.type == 156 || this.type == 157 || this.type == 157 || this.type == 173)
							{
								if (this.localAI[1] >= 15f)
								{
									return new Color(255, 255, 255, this.alpha);
								}
								if (this.localAI[1] < 5f)
								{
									return Color.Transparent;
								}
								int num7 = (int)((this.localAI[1] - 5f) / 10f * 255f);
								return new Color(num7, num7, num7, num7);
							}
							else
							{
								if (this.type == 254)
								{
									if (this.timeLeft < 30)
									{
										float num8 = (float)this.timeLeft / 30f;
										this.alpha = (int)(255f - 255f * num8);
									}
									return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 0);
								}
								if (this.type == 265 || this.type == 355)
								{
									if (this.alpha > 0)
									{
										return Color.Transparent;
									}
									return new Color(255, 255, 255, 0);
								}
								else if (this.type == 270 && this.ai[0] >= 0f)
								{
									if (this.alpha > 0)
									{
										return Color.Transparent;
									}
									return new Color(255, 255, 255, 200);
								}
								else if (this.type == 257)
								{
									if (this.alpha > 200)
									{
										return Color.Transparent;
									}
									return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 0);
								}
								else if (this.type == 259)
								{
									if (this.alpha > 200)
									{
										return Color.Transparent;
									}
									return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 0);
								}
								else
								{
									if (this.type >= 150 && this.type <= 152)
									{
										return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 255 - this.alpha);
									}
									if (this.type == 250)
									{
										return Color.Transparent;
									}
									if (this.type == 251)
									{
										num = 255 - this.alpha;
										num2 = 255 - this.alpha;
										num3 = 255 - this.alpha;
										return new Color(num, num2, num3, 0);
									}
									if (this.type == 131)
									{
										return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 0);
									}
									if (this.type == 211)
									{
										return new Color(255, 255, 255, 0);
									}
									if (this.type == 229)
									{
										return new Color(255, 255, 255, 50);
									}
									if (this.type == 221)
									{
										return new Color(255, 255, 255, 200);
									}
									if (this.type == 20)
									{
										if (this.alpha <= 150)
										{
											return new Color(255, 255, 255, 0);
										}
										return new Color(0, 0, 0, 0);
									}
									else if (this.type == 207)
									{
										num = 255 - this.alpha;
										num2 = 255 - this.alpha;
										num3 = 255 - this.alpha;
									}
									else if (this.type == 242)
									{
										if (this.alpha < 140)
										{
											return new Color(255, 255, 255, 100);
										}
										return Color.Transparent;
									}
									else
									{
										if (this.type == 638)
										{
											return new Color(255, 255, 255, 100) * this.Opacity;
										}
										if (this.type == 660)
										{
											return new Color(150, 255, 255, 0) * this.Opacity;
										}
										if (this.type == 209)
										{
											num = (int)newColor.R - this.alpha;
											num2 = (int)newColor.G - this.alpha;
											num3 = (int)newColor.B - this.alpha / 2;
										}
										else
										{
											if (this.type == 130)
											{
												return new Color(255, 255, 255, 175);
											}
											if (this.type == 182)
											{
												return new Color(255, 255, 255, 200);
											}
											if (this.type == 226)
											{
												num = 255;
												num2 = 255;
												num3 = 255;
												float num9 = (float)Main.mouseTextColor / 200f - 0.3f;
												num = (int)((float)num * num9);
												num2 = (int)((float)num2 * num9);
												num3 = (int)((float)num3 * num9);
												num += 50;
												if (num > 255)
												{
													num = 255;
												}
												num2 += 50;
												if (num2 > 255)
												{
													num2 = 255;
												}
												num3 += 50;
												if (num3 > 255)
												{
													num3 = 255;
												}
												return new Color(num, num2, num3, 200);
											}
											if (this.type == 227)
											{
												num2 = (num = (num3 = 255));
												float num10 = (float)Main.mouseTextColor / 100f - 1.6f;
												num = (int)((float)num * num10);
												num2 = (int)((float)num2 * num10);
												num3 = (int)((float)num3 * num10);
												int a3 = (int)(100f * num10);
												num += 50;
												if (num > 255)
												{
													num = 255;
												}
												num2 += 50;
												if (num2 > 255)
												{
													num2 = 255;
												}
												num3 += 50;
												if (num3 > 255)
												{
													num3 = 255;
												}
												return new Color(num, num2, num3, a3);
											}
											if (this.type == 114 || this.type == 115)
											{
												if (this.localAI[1] >= 15f)
												{
													return new Color(255, 255, 255, this.alpha);
												}
												if (this.localAI[1] < 5f)
												{
													return Color.Transparent;
												}
												int num11 = (int)((this.localAI[1] - 5f) / 10f * 255f);
												return new Color(num11, num11, num11, num11);
											}
											else if (this.type == 83 || this.type == 88 || this.type == 89 || this.type == 90 || this.type == 100 || this.type == 104 || this.type == 279 || (this.type >= 283 && this.type <= 287))
											{
												if (this.alpha < 200)
												{
													return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 0);
												}
												return Color.Transparent;
											}
											else
											{
												if (this.type == 34 || this.type == 35 || this.type == 15 || this.type == 19 || this.type == 44 || this.type == 45)
												{
													return Color.White;
												}
												if (this.type == 79)
												{
													num = Main.DiscoR;
													num2 = Main.DiscoG;
													num3 = Main.DiscoB;
													return default(Color);
												}
												if (this.type == 9 || this.type == 15 || this.type == 34 || this.type == 50 || this.type == 53 || this.type == 76 || this.type == 77 || this.type == 78 || this.type == 92 || this.type == 91)
												{
													num = (int)newColor.R - this.alpha / 3;
													num2 = (int)newColor.G - this.alpha / 3;
													num3 = (int)newColor.B - this.alpha / 3;
												}
												else
												{
													if (this.type == 18)
													{
														return new Color(255, 255, 255, 50);
													}
													if (this.type == 16 || this.type == 44 || this.type == 45)
													{
														num = (int)newColor.R;
														num2 = (int)newColor.G;
														num3 = (int)newColor.B;
													}
													else if (this.type == 12 || this.type == 72 || this.type == 86 || this.type == 87)
													{
														return new Color(255, 255, 255, (int)newColor.A - this.alpha);
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
			float num12 = (float)(255 - this.alpha) / 255f;
			num = (int)((float)newColor.R * num12);
			num2 = (int)((float)newColor.G * num12);
			num3 = (int)((float)newColor.B * num12);
			int num13 = (int)newColor.A - this.alpha;
			if (num13 < 0)
			{
				num13 = 0;
			}
			if (num13 > 255)
			{
				num13 = 255;
			}
			return new Color(num, num2, num3, num13);
		}

		public override string ToString()
		{
			return string.Concat(new object[]
				{
					"type:",
					this.type,
					"name:",
					this.name,
					", active:",
					this.active,
					", whoAmI:",
					this.whoAmI,
					", identity:",
					this.identity,
					", ai0:",
					this.ai[0],
					" , uuid:",
					this.projUUID
				});
		}
	}
}
